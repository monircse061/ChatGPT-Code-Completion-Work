parse time: 167.05s
0 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 48,1: typedef
 48,9: long
 48,14: unsigned
 48,23: int
 
54 long 
 48,9: long
 
106 unsigned 
 48,14: unsigned
 
106 int 
 48,23: int
 
6 NAME VARIABLE 
 48,27: size_t
 48,33: VARIABLE
 
65 VARIABLE 
 48,33: VARIABLE
 
70 ; 
 48,33: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 54,1: typedef
 54,9: __builtin_va_list
 54,26: TYPE
 
54 NAME TYPE 
 54,9: __builtin_va_list
 54,26: TYPE
 
26 TYPE 
 54,26: TYPE
 
6 NAME VARIABLE 
 54,27: __gnuc_va_list
 54,41: VARIABLE
 
65 VARIABLE 
 54,41: VARIABLE
 
70 ; 
 54,41: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 68,1: typedef
 68,9: unsigned
 68,18: char
 
54 unsigned 
 68,9: unsigned
 
106 char 
 68,18: char
 
6 NAME VARIABLE 
 68,23: __u_char
 68,31: VARIABLE
 
65 VARIABLE 
 68,31: VARIABLE
 
70 ; 
 68,31: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 69,1: typedef
 69,9: unsigned
 69,18: short
 69,24: int
 
54 unsigned 
 69,9: unsigned
 
106 short 
 69,18: short
 
106 int 
 69,24: int
 
6 NAME VARIABLE 
 69,28: __u_short
 69,37: VARIABLE
 
65 VARIABLE 
 69,37: VARIABLE
 
70 ; 
 69,37: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 70,1: typedef
 70,9: unsigned
 70,18: int
 
54 unsigned 
 70,9: unsigned
 
106 int 
 70,18: int
 
6 NAME VARIABLE 
 70,22: __u_int
 70,29: VARIABLE
 
65 VARIABLE 
 70,29: VARIABLE
 
70 ; 
 70,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 71,1: typedef
 71,9: unsigned
 71,18: long
 71,23: int
 
54 unsigned 
 71,9: unsigned
 
106 long 
 71,18: long
 
106 int 
 71,23: int
 
6 NAME VARIABLE 
 71,27: __u_long
 71,35: VARIABLE
 
65 VARIABLE 
 71,35: VARIABLE
 
70 ; 
 71,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 74,1: typedef
 74,9: signed
 74,16: char
 
54 signed 
 74,9: signed
 
106 char 
 74,16: char
 
6 NAME VARIABLE 
 74,21: __int8_t
 74,29: VARIABLE
 
65 VARIABLE 
 74,29: VARIABLE
 
70 ; 
 74,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 75,1: typedef
 75,9: unsigned
 75,18: char
 
54 unsigned 
 75,9: unsigned
 
106 char 
 75,18: char
 
6 NAME VARIABLE 
 75,23: __uint8_t
 75,32: VARIABLE
 
65 VARIABLE 
 75,32: VARIABLE
 
70 ; 
 75,32: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 76,1: typedef
 76,9: signed
 76,16: short
 76,22: int
 
54 signed 
 76,9: signed
 
106 short 
 76,16: short
 
106 int 
 76,22: int
 
6 NAME VARIABLE 
 76,26: __int16_t
 76,35: VARIABLE
 
65 VARIABLE 
 76,35: VARIABLE
 
70 ; 
 76,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 77,1: typedef
 77,9: unsigned
 77,18: short
 77,24: int
 
54 unsigned 
 77,9: unsigned
 
106 short 
 77,18: short
 
106 int 
 77,24: int
 
6 NAME VARIABLE 
 77,28: __uint16_t
 77,38: VARIABLE
 
65 VARIABLE 
 77,38: VARIABLE
 
70 ; 
 77,38: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 78,1: typedef
 78,9: signed
 78,16: int
 
54 signed 
 78,9: signed
 
106 int 
 78,16: int
 
6 NAME VARIABLE 
 78,20: __int32_t
 78,29: VARIABLE
 
65 VARIABLE 
 78,29: VARIABLE
 
70 ; 
 78,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 79,1: typedef
 79,9: unsigned
 79,18: int
 
54 unsigned 
 79,9: unsigned
 
106 int 
 79,18: int
 
6 NAME VARIABLE 
 79,22: __uint32_t
 79,32: VARIABLE
 
65 VARIABLE 
 79,32: VARIABLE
 
70 ; 
 79,32: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 81,1: typedef
 81,9: signed
 81,16: long
 81,21: int
 
54 signed 
 81,9: signed
 
106 long 
 81,16: long
 
106 int 
 81,21: int
 
6 NAME VARIABLE 
 81,25: __int64_t
 81,34: VARIABLE
 
65 VARIABLE 
 81,34: VARIABLE
 
70 ; 
 81,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 82,1: typedef
 82,9: unsigned
 82,18: long
 82,23: int
 
54 unsigned 
 82,9: unsigned
 
106 long 
 82,18: long
 
106 int 
 82,23: int
 
6 NAME VARIABLE 
 82,27: __uint64_t
 82,37: VARIABLE
 
65 VARIABLE 
 82,37: VARIABLE
 
70 ; 
 82,37: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 89,1: typedef
 89,9: __int8_t
 89,17: TYPE
 
54 NAME TYPE 
 89,9: __int8_t
 89,17: TYPE
 
26 TYPE 
 89,17: TYPE
 
6 NAME VARIABLE 
 89,18: __int_least8_t
 89,32: VARIABLE
 
65 VARIABLE 
 89,32: VARIABLE
 
70 ; 
 89,32: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 90,1: typedef
 90,9: __uint8_t
 90,18: TYPE
 
54 NAME TYPE 
 90,9: __uint8_t
 90,18: TYPE
 
26 TYPE 
 90,18: TYPE
 
6 NAME VARIABLE 
 90,19: __uint_least8_t
 90,34: VARIABLE
 
65 VARIABLE 
 90,34: VARIABLE
 
70 ; 
 90,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 91,1: typedef
 91,9: __int16_t
 91,18: TYPE
 
54 NAME TYPE 
 91,9: __int16_t
 91,18: TYPE
 
26 TYPE 
 91,18: TYPE
 
6 NAME VARIABLE 
 91,19: __int_least16_t
 91,34: VARIABLE
 
65 VARIABLE 
 91,34: VARIABLE
 
70 ; 
 91,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 92,1: typedef
 92,9: __uint16_t
 92,19: TYPE
 
54 NAME TYPE 
 92,9: __uint16_t
 92,19: TYPE
 
26 TYPE 
 92,19: TYPE
 
6 NAME VARIABLE 
 92,20: __uint_least16_t
 92,36: VARIABLE
 
65 VARIABLE 
 92,36: VARIABLE
 
70 ; 
 92,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 93,1: typedef
 93,9: __int32_t
 93,18: TYPE
 
54 NAME TYPE 
 93,9: __int32_t
 93,18: TYPE
 
26 TYPE 
 93,18: TYPE
 
6 NAME VARIABLE 
 93,19: __int_least32_t
 93,34: VARIABLE
 
65 VARIABLE 
 93,34: VARIABLE
 
70 ; 
 93,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 94,1: typedef
 94,9: __uint32_t
 94,19: TYPE
 
54 NAME TYPE 
 94,9: __uint32_t
 94,19: TYPE
 
26 TYPE 
 94,19: TYPE
 
6 NAME VARIABLE 
 94,20: __uint_least32_t
 94,36: VARIABLE
 
65 VARIABLE 
 94,36: VARIABLE
 
70 ; 
 94,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 95,1: typedef
 95,9: __int64_t
 95,18: TYPE
 
54 NAME TYPE 
 95,9: __int64_t
 95,18: TYPE
 
26 TYPE 
 95,18: TYPE
 
6 NAME VARIABLE 
 95,19: __int_least64_t
 95,34: VARIABLE
 
65 VARIABLE 
 95,34: VARIABLE
 
70 ; 
 95,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 96,1: typedef
 96,9: __uint64_t
 96,19: TYPE
 
54 NAME TYPE 
 96,9: __uint64_t
 96,19: TYPE
 
26 TYPE 
 96,19: TYPE
 
6 NAME VARIABLE 
 96,20: __uint_least64_t
 96,36: VARIABLE
 
65 VARIABLE 
 96,36: VARIABLE
 
70 ; 
 96,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 100,1: typedef
 100,9: long
 100,14: int
 
54 long 
 100,9: long
 
106 int 
 100,14: int
 
6 NAME VARIABLE 
 100,18: __quad_t
 100,26: VARIABLE
 
65 VARIABLE 
 100,26: VARIABLE
 
70 ; 
 100,26: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 101,1: typedef
 101,9: unsigned
 101,18: long
 101,23: int
 
54 unsigned 
 101,9: unsigned
 
106 long 
 101,18: long
 
106 int 
 101,23: int
 
6 NAME VARIABLE 
 101,27: __u_quad_t
 101,37: VARIABLE
 
65 VARIABLE 
 101,37: VARIABLE
 
70 ; 
 101,37: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 109,1: typedef
 109,9: long
 109,14: int
 
54 long 
 109,9: long
 
106 int 
 109,14: int
 
6 NAME VARIABLE 
 109,18: __intmax_t
 109,28: VARIABLE
 
65 VARIABLE 
 109,28: VARIABLE
 
70 ; 
 109,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 110,1: typedef
 110,9: unsigned
 110,18: long
 110,23: int
 
54 unsigned 
 110,9: unsigned
 
106 long 
 110,18: long
 
106 int 
 110,23: int
 
6 NAME VARIABLE 
 110,27: __uintmax_t
 110,38: VARIABLE
 
65 VARIABLE 
 110,38: VARIABLE
 
70 ; 
 110,38: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 118,1: typedef
 118,9: unsigned
 118,18: long
 118,23: int
 
54 unsigned 
 118,9: unsigned
 
106 long 
 118,18: long
 
106 int 
 118,23: int
 
6 NAME VARIABLE 
 118,27: __dev_t
 118,34: VARIABLE
 
65 VARIABLE 
 118,34: VARIABLE
 
70 ; 
 118,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 119,1: typedef
 119,9: unsigned
 119,18: int
 
54 unsigned 
 119,9: unsigned
 
106 int 
 119,18: int
 
6 NAME VARIABLE 
 119,22: __uid_t
 119,29: VARIABLE
 
65 VARIABLE 
 119,29: VARIABLE
 
70 ; 
 119,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 120,1: typedef
 120,9: unsigned
 120,18: int
 
54 unsigned 
 120,9: unsigned
 
106 int 
 120,18: int
 
6 NAME VARIABLE 
 120,22: __gid_t
 120,29: VARIABLE
 
65 VARIABLE 
 120,29: VARIABLE
 
70 ; 
 120,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 121,1: typedef
 121,9: unsigned
 121,18: long
 121,23: int
 
54 unsigned 
 121,9: unsigned
 
106 long 
 121,18: long
 
106 int 
 121,23: int
 
6 NAME VARIABLE 
 121,27: __ino_t
 121,34: VARIABLE
 
65 VARIABLE 
 121,34: VARIABLE
 
70 ; 
 121,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 122,1: typedef
 122,9: unsigned
 122,18: long
 122,23: int
 
54 unsigned 
 122,9: unsigned
 
106 long 
 122,18: long
 
106 int 
 122,23: int
 
6 NAME VARIABLE 
 122,27: __ino64_t
 122,36: VARIABLE
 
65 VARIABLE 
 122,36: VARIABLE
 
70 ; 
 122,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 123,1: typedef
 123,9: unsigned
 123,18: int
 
54 unsigned 
 123,9: unsigned
 
106 int 
 123,18: int
 
6 NAME VARIABLE 
 123,22: __mode_t
 123,30: VARIABLE
 
65 VARIABLE 
 123,30: VARIABLE
 
70 ; 
 123,30: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 124,1: typedef
 124,9: unsigned
 124,18: long
 124,23: int
 
54 unsigned 
 124,9: unsigned
 
106 long 
 124,18: long
 
106 int 
 124,23: int
 
6 NAME VARIABLE 
 124,27: __nlink_t
 124,36: VARIABLE
 
65 VARIABLE 
 124,36: VARIABLE
 
70 ; 
 124,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 125,1: typedef
 125,9: long
 125,14: int
 
54 long 
 125,9: long
 
106 int 
 125,14: int
 
6 NAME VARIABLE 
 125,18: __off_t
 125,25: VARIABLE
 
65 VARIABLE 
 125,25: VARIABLE
 
70 ; 
 125,25: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 126,1: typedef
 126,9: long
 126,14: int
 
54 long 
 126,9: long
 
106 int 
 126,14: int
 
6 NAME VARIABLE 
 126,18: __off64_t
 126,27: VARIABLE
 
65 VARIABLE 
 126,27: VARIABLE
 
70 ; 
 126,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 127,1: typedef
 127,9: int
 
54 int 
 127,9: int
 
6 NAME VARIABLE 
 127,13: __pid_t
 127,20: VARIABLE
 
65 VARIABLE 
 127,20: VARIABLE
 
70 ; 
 127,20: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 128,1: typedef
 128,9: struct
 128,16: {
 128,18: int
 128,22: __val
 128,27: VARIABLE
 128,27: [
 128,28: 2
 128,29: ]
 128,30: ;
 128,32: }
 
54 struct 
 128,9: struct
 
89 { struct_declaration_list } 
 128,16: {
 128,18: int
 128,22: __val
 128,27: VARIABLE
 128,27: [
 128,28: 2
 128,29: ]
 128,30: ;
 128,32: }
 
126 int 
 128,18: int
 
200 NAME VARIABLE 
 128,22: __val
 128,27: VARIABLE
 
65 VARIABLE 
 128,27: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 128,27: [
 128,28: 2
 128,29: ]
 
188 CONSTANT 
 128,28: 2
 
305 ] 
 128,29: ]
 
313 ; 
 128,30: ;
 
198 } 
 128,32: }
 
6 NAME VARIABLE 
 128,34: __fsid_t
 128,42: VARIABLE
 
65 VARIABLE 
 128,42: VARIABLE
 
70 ; 
 128,42: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 129,1: typedef
 129,9: long
 129,14: int
 
54 long 
 129,9: long
 
106 int 
 129,14: int
 
6 NAME VARIABLE 
 129,18: __clock_t
 129,27: VARIABLE
 
65 VARIABLE 
 129,27: VARIABLE
 
70 ; 
 129,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 130,1: typedef
 130,9: unsigned
 130,18: long
 130,23: int
 
54 unsigned 
 130,9: unsigned
 
106 long 
 130,18: long
 
106 int 
 130,23: int
 
6 NAME VARIABLE 
 130,27: __rlim_t
 130,35: VARIABLE
 
65 VARIABLE 
 130,35: VARIABLE
 
70 ; 
 130,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 131,1: typedef
 131,9: unsigned
 131,18: long
 131,23: int
 
54 unsigned 
 131,9: unsigned
 
106 long 
 131,18: long
 
106 int 
 131,23: int
 
6 NAME VARIABLE 
 131,27: __rlim64_t
 131,37: VARIABLE
 
65 VARIABLE 
 131,37: VARIABLE
 
70 ; 
 131,37: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 132,1: typedef
 132,9: unsigned
 132,18: int
 
54 unsigned 
 132,9: unsigned
 
106 int 
 132,18: int
 
6 NAME VARIABLE 
 132,22: __id_t
 132,28: VARIABLE
 
65 VARIABLE 
 132,28: VARIABLE
 
70 ; 
 132,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 133,1: typedef
 133,9: long
 133,14: int
 
54 long 
 133,9: long
 
106 int 
 133,14: int
 
6 NAME VARIABLE 
 133,18: __time_t
 133,26: VARIABLE
 
65 VARIABLE 
 133,26: VARIABLE
 
70 ; 
 133,26: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 134,1: typedef
 134,9: unsigned
 134,18: int
 
54 unsigned 
 134,9: unsigned
 
106 int 
 134,18: int
 
6 NAME VARIABLE 
 134,22: __useconds_t
 134,34: VARIABLE
 
65 VARIABLE 
 134,34: VARIABLE
 
70 ; 
 134,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 135,1: typedef
 135,9: long
 135,14: int
 
54 long 
 135,9: long
 
106 int 
 135,14: int
 
6 NAME VARIABLE 
 135,18: __suseconds_t
 135,31: VARIABLE
 
65 VARIABLE 
 135,31: VARIABLE
 
70 ; 
 135,31: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 136,1: typedef
 136,9: long
 136,14: int
 
54 long 
 136,9: long
 
106 int 
 136,14: int
 
6 NAME VARIABLE 
 136,18: __suseconds64_t
 136,33: VARIABLE
 
65 VARIABLE 
 136,33: VARIABLE
 
70 ; 
 136,33: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 138,1: typedef
 138,9: int
 
54 int 
 138,9: int
 
6 NAME VARIABLE 
 138,13: __daddr_t
 138,22: VARIABLE
 
65 VARIABLE 
 138,22: VARIABLE
 
70 ; 
 138,22: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 139,1: typedef
 139,9: int
 
54 int 
 139,9: int
 
6 NAME VARIABLE 
 139,13: __key_t
 139,20: VARIABLE
 
65 VARIABLE 
 139,20: VARIABLE
 
70 ; 
 139,20: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 142,1: typedef
 142,9: int
 
54 int 
 142,9: int
 
6 NAME VARIABLE 
 142,13: __clockid_t
 142,24: VARIABLE
 
65 VARIABLE 
 142,24: VARIABLE
 
70 ; 
 142,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 145,1: typedef
 145,9: void
 
54 void 
 145,9: void
 
6 * option_type_qualifier_list option_pointer 
 145,14: *
 
64 NAME VARIABLE 
 145,16: __timer_t
 145,25: VARIABLE
 
65 VARIABLE 
 145,25: VARIABLE
 
70 ; 
 145,25: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 148,1: typedef
 148,9: long
 148,14: int
 
54 long 
 148,9: long
 
106 int 
 148,14: int
 
6 NAME VARIABLE 
 148,18: __blksize_t
 148,29: VARIABLE
 
65 VARIABLE 
 148,29: VARIABLE
 
70 ; 
 148,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 153,1: typedef
 153,9: long
 153,14: int
 
54 long 
 153,9: long
 
106 int 
 153,14: int
 
6 NAME VARIABLE 
 153,18: __blkcnt_t
 153,28: VARIABLE
 
65 VARIABLE 
 153,28: VARIABLE
 
70 ; 
 153,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 154,1: typedef
 154,9: long
 154,14: int
 
54 long 
 154,9: long
 
106 int 
 154,14: int
 
6 NAME VARIABLE 
 154,18: __blkcnt64_t
 154,30: VARIABLE
 
65 VARIABLE 
 154,30: VARIABLE
 
70 ; 
 154,30: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 157,1: typedef
 157,9: unsigned
 157,18: long
 157,23: int
 
54 unsigned 
 157,9: unsigned
 
106 long 
 157,18: long
 
106 int 
 157,23: int
 
6 NAME VARIABLE 
 157,27: __fsblkcnt_t
 157,39: VARIABLE
 
65 VARIABLE 
 157,39: VARIABLE
 
70 ; 
 157,39: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 158,1: typedef
 158,9: unsigned
 158,18: long
 158,23: int
 
54 unsigned 
 158,9: unsigned
 
106 long 
 158,18: long
 
106 int 
 158,23: int
 
6 NAME VARIABLE 
 158,27: __fsblkcnt64_t
 158,41: VARIABLE
 
65 VARIABLE 
 158,41: VARIABLE
 
70 ; 
 158,41: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 161,1: typedef
 161,9: unsigned
 161,18: long
 161,23: int
 
54 unsigned 
 161,9: unsigned
 
106 long 
 161,18: long
 
106 int 
 161,23: int
 
6 NAME VARIABLE 
 161,27: __fsfilcnt_t
 161,39: VARIABLE
 
65 VARIABLE 
 161,39: VARIABLE
 
70 ; 
 161,39: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 162,1: typedef
 162,9: unsigned
 162,18: long
 162,23: int
 
54 unsigned 
 162,9: unsigned
 
106 long 
 162,18: long
 
106 int 
 162,23: int
 
6 NAME VARIABLE 
 162,27: __fsfilcnt64_t
 162,41: VARIABLE
 
65 VARIABLE 
 162,41: VARIABLE
 
70 ; 
 162,41: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 165,1: typedef
 165,9: long
 165,14: int
 
54 long 
 165,9: long
 
106 int 
 165,14: int
 
6 NAME VARIABLE 
 165,18: __fsword_t
 165,28: VARIABLE
 
65 VARIABLE 
 165,28: VARIABLE
 
70 ; 
 165,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 167,1: typedef
 167,9: long
 167,14: int
 
54 long 
 167,9: long
 
106 int 
 167,14: int
 
6 NAME VARIABLE 
 167,18: __ssize_t
 167,27: VARIABLE
 
65 VARIABLE 
 167,27: VARIABLE
 
70 ; 
 167,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 170,1: typedef
 170,9: long
 170,14: int
 
54 long 
 170,9: long
 
106 int 
 170,14: int
 
6 NAME VARIABLE 
 170,18: __syscall_slong_t
 170,35: VARIABLE
 
65 VARIABLE 
 170,35: VARIABLE
 
70 ; 
 170,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 172,1: typedef
 172,9: unsigned
 172,18: long
 172,23: int
 
54 unsigned 
 172,9: unsigned
 
106 long 
 172,18: long
 
106 int 
 172,23: int
 
6 NAME VARIABLE 
 172,27: __syscall_ulong_t
 172,44: VARIABLE
 
65 VARIABLE 
 172,44: VARIABLE
 
70 ; 
 172,44: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 176,1: typedef
 176,9: __off64_t
 176,18: TYPE
 
54 NAME TYPE 
 176,9: __off64_t
 176,18: TYPE
 
26 TYPE 
 176,18: TYPE
 
6 NAME VARIABLE 
 176,19: __loff_t
 176,27: VARIABLE
 
65 VARIABLE 
 176,27: VARIABLE
 
70 ; 
 176,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 177,1: typedef
 177,9: char
 
54 char 
 177,9: char
 
6 * option_type_qualifier_list option_pointer 
 177,14: *
 
64 NAME VARIABLE 
 177,15: __caddr_t
 177,24: VARIABLE
 
65 VARIABLE 
 177,24: VARIABLE
 
70 ; 
 177,24: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 180,1: typedef
 180,9: long
 180,14: int
 
54 long 
 180,9: long
 
106 int 
 180,14: int
 
6 NAME VARIABLE 
 180,18: __intptr_t
 180,28: VARIABLE
 
65 VARIABLE 
 180,28: VARIABLE
 
70 ; 
 180,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 183,1: typedef
 183,9: unsigned
 183,18: int
 
54 unsigned 
 183,9: unsigned
 
106 int 
 183,18: int
 
6 NAME VARIABLE 
 183,22: __socklen_t
 183,33: VARIABLE
 
65 VARIABLE 
 183,33: VARIABLE
 
70 ; 
 183,33: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 188,1: typedef
 188,9: int
 
54 int 
 188,9: int
 
6 NAME VARIABLE 
 188,13: __sig_atomic_t
 188,27: VARIABLE
 
65 VARIABLE 
 188,27: VARIABLE
 
70 ; 
 188,27: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 197,1: typedef
 197,9: struct
 198,1: {
 199,3: int
 199,7: __count
 199,14: VARIABLE
 199,14: ;
 200,3: union
 201,3: {
 202,5: unsigned
 202,14: int
 202,18: __wch
 202,23: VARIABLE
 202,23: ;
 203,5: char
 203,10: __wchb
 203,16: VARIABLE
 203,16: [
 203,17: 4
 203,18: ]
 203,19: ;
 204,3: }
 204,5: __value
 204,12: VARIABLE
 204,12: ;
 205,1: }
 
54 struct 
 197,9: struct
 
89 { struct_declaration_list } 
 198,1: {
 199,3: int
 199,7: __count
 199,14: VARIABLE
 199,14: ;
 200,3: union
 201,3: {
 202,5: unsigned
 202,14: int
 202,18: __wch
 202,23: VARIABLE
 202,23: ;
 203,5: char
 203,10: __wchb
 203,16: VARIABLE
 203,16: [
 203,17: 4
 203,18: ]
 203,19: ;
 204,3: }
 204,5: __value
 204,12: VARIABLE
 204,12: ;
 205,1: }
 
126 int 
 199,3: int
 
200 NAME VARIABLE 
 199,7: __count
 199,14: VARIABLE
 
65 VARIABLE 
 199,14: VARIABLE
 
313 ; 
 199,14: ;
 
198 union 
 200,3: union
 
89 { struct_declaration_list } 
 201,3: {
 202,5: unsigned
 202,14: int
 202,18: __wch
 202,23: VARIABLE
 202,23: ;
 203,5: char
 203,10: __wchb
 203,16: VARIABLE
 203,16: [
 203,17: 4
 203,18: ]
 203,19: ;
 204,3: }
 
126 unsigned 
 202,5: unsigned
 
135 int 
 202,14: int
 
200 NAME VARIABLE 
 202,18: __wch
 202,23: VARIABLE
 
65 VARIABLE 
 202,23: VARIABLE
 
313 ; 
 202,23: ;
 
198 char 
 203,5: char
 
200 NAME VARIABLE 
 203,10: __wchb
 203,16: VARIABLE
 
65 VARIABLE 
 203,16: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 203,16: [
 203,17: 4
 203,18: ]
 
188 CONSTANT 
 203,17: 4
 
305 ] 
 203,18: ]
 
313 ; 
 203,19: ;
 
198 } 
 204,3: }
 
200 NAME VARIABLE 
 204,5: __value
 204,12: VARIABLE
 
65 VARIABLE 
 204,12: VARIABLE
 
313 ; 
 204,12: ;
 
198 } 
 205,1: }
 
6 NAME VARIABLE 
 205,3: __mbstate_t
 205,14: VARIABLE
 
65 VARIABLE 
 205,14: VARIABLE
 
70 ; 
 205,14: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 211,1: typedef
 211,9: struct
 211,16: _G_fpos_t
 211,25: VARIABLE
 212,1: {
 213,3: __off_t
 213,10: TYPE
 213,11: __pos
 213,16: VARIABLE
 213,16: ;
 214,3: __mbstate_t
 214,14: TYPE
 214,15: __state
 214,22: VARIABLE
 214,22: ;
 215,1: }
 
54 struct 
 211,9: struct
 
22 NAME VARIABLE 
 211,16: _G_fpos_t
 211,25: VARIABLE
 
65 VARIABLE 
 211,25: VARIABLE
 
89 { struct_declaration_list } 
 212,1: {
 213,3: __off_t
 213,10: TYPE
 213,11: __pos
 213,16: VARIABLE
 213,16: ;
 214,3: __mbstate_t
 214,14: TYPE
 214,15: __state
 214,22: VARIABLE
 214,22: ;
 215,1: }
 
126 NAME TYPE 
 213,3: __off_t
 213,10: TYPE
 
26 TYPE 
 213,10: TYPE
 
200 NAME VARIABLE 
 213,11: __pos
 213,16: VARIABLE
 
65 VARIABLE 
 213,16: VARIABLE
 
313 ; 
 213,16: ;
 
198 NAME TYPE 
 214,3: __mbstate_t
 214,14: TYPE
 
26 TYPE 
 214,14: TYPE
 
200 NAME VARIABLE 
 214,15: __state
 214,22: VARIABLE
 
65 VARIABLE 
 214,22: VARIABLE
 
313 ; 
 214,22: ;
 
198 } 
 215,1: }
 
6 NAME VARIABLE 
 215,3: __fpos_t
 215,11: VARIABLE
 
65 VARIABLE 
 215,11: VARIABLE
 
70 ; 
 215,11: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 219,1: typedef
 219,9: struct
 219,16: _G_fpos64_t
 219,27: VARIABLE
 220,1: {
 221,3: __off64_t
 221,12: TYPE
 221,13: __pos
 221,18: VARIABLE
 221,18: ;
 222,3: __mbstate_t
 222,14: TYPE
 222,15: __state
 222,22: VARIABLE
 222,22: ;
 223,1: }
 
54 struct 
 219,9: struct
 
22 NAME VARIABLE 
 219,16: _G_fpos64_t
 219,27: VARIABLE
 
65 VARIABLE 
 219,27: VARIABLE
 
89 { struct_declaration_list } 
 220,1: {
 221,3: __off64_t
 221,12: TYPE
 221,13: __pos
 221,18: VARIABLE
 221,18: ;
 222,3: __mbstate_t
 222,14: TYPE
 222,15: __state
 222,22: VARIABLE
 222,22: ;
 223,1: }
 
126 NAME TYPE 
 221,3: __off64_t
 221,12: TYPE
 
26 TYPE 
 221,12: TYPE
 
200 NAME VARIABLE 
 221,13: __pos
 221,18: VARIABLE
 
65 VARIABLE 
 221,18: VARIABLE
 
313 ; 
 221,18: ;
 
198 NAME TYPE 
 222,3: __mbstate_t
 222,14: TYPE
 
26 TYPE 
 222,14: TYPE
 
200 NAME VARIABLE 
 222,15: __state
 222,22: VARIABLE
 
65 VARIABLE 
 222,22: VARIABLE
 
313 ; 
 222,22: ;
 
198 } 
 223,1: }
 
6 NAME VARIABLE 
 223,3: __fpos64_t
 223,13: VARIABLE
 
65 VARIABLE 
 223,13: VARIABLE
 
70 ; 
 223,13: ;
 
23 struct 
 229,1: struct
 
22 NAME VARIABLE 
 229,8: _IO_FILE
 229,16: VARIABLE
 
65 VARIABLE 
 229,16: VARIABLE
 
60 ; 
 229,16: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 230,1: typedef
 230,9: struct
 230,16: _IO_FILE
 230,24: VARIABLE
 
54 struct 
 230,9: struct
 
22 NAME VARIABLE 
 230,16: _IO_FILE
 230,24: VARIABLE
 
65 VARIABLE 
 230,24: VARIABLE
 
6 NAME VARIABLE 
 230,25: __FILE
 230,31: VARIABLE
 
65 VARIABLE 
 230,31: VARIABLE
 
70 ; 
 230,31: ;
 
23 struct 
 236,1: struct
 
22 NAME VARIABLE 
 236,8: _IO_FILE
 236,16: VARIABLE
 
65 VARIABLE 
 236,16: VARIABLE
 
60 ; 
 236,16: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 239,1: typedef
 239,9: struct
 239,16: _IO_FILE
 239,24: VARIABLE
 
54 struct 
 239,9: struct
 
22 NAME VARIABLE 
 239,16: _IO_FILE
 239,24: VARIABLE
 
65 VARIABLE 
 239,24: VARIABLE
 
6 NAME VARIABLE 
 239,25: FILE
 239,29: VARIABLE
 
65 VARIABLE 
 239,29: VARIABLE
 
70 ; 
 239,29: ;
 
23 struct 
 243,1: struct
 
22 NAME VARIABLE 
 243,8: _IO_FILE
 243,16: VARIABLE
 
65 VARIABLE 
 243,16: VARIABLE
 
60 ; 
 243,16: ;
 
23 struct 
 244,1: struct
 
22 NAME VARIABLE 
 244,8: _IO_marker
 244,18: VARIABLE
 
65 VARIABLE 
 244,18: VARIABLE
 
60 ; 
 244,18: ;
 
23 struct 
 245,1: struct
 
22 NAME VARIABLE 
 245,8: _IO_codecvt
 245,19: VARIABLE
 
65 VARIABLE 
 245,19: VARIABLE
 
60 ; 
 245,19: ;
 
23 struct 
 246,1: struct
 
22 NAME VARIABLE 
 246,8: _IO_wide_data
 246,21: VARIABLE
 
65 VARIABLE 
 246,21: VARIABLE
 
60 ; 
 246,21: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 251,1: typedef
 251,9: void
 
54 void 
 251,9: void
 
6 NAME VARIABLE 
 251,14: _IO_lock_t
 251,24: VARIABLE
 
65 VARIABLE 
 251,24: VARIABLE
 
70 ; 
 251,24: ;
 
23 struct 
 257,1: struct
 
22 NAME VARIABLE 
 257,8: _IO_FILE
 257,16: VARIABLE
 
65 VARIABLE 
 257,16: VARIABLE
 
89 { struct_declaration_list } 
 258,1: {
 259,3: int
 259,7: _flags
 259,13: VARIABLE
 259,13: ;
 262,3: char
 262,8: *
 262,9: _IO_read_ptr
 262,21: VARIABLE
 262,21: ;
 263,3: char
 263,8: *
 263,9: _IO_read_end
 263,21: VARIABLE
 263,21: ;
 264,3: char
 264,8: *
 264,9: _IO_read_base
 264,22: VARIABLE
 264,22: ;
 265,3: char
 265,8: *
 265,9: _IO_write_base
 265,23: VARIABLE
 265,23: ;
 266,3: char
 266,8: *
 266,9: _IO_write_ptr
 266,22: VARIABLE
 266,22: ;
 267,3: char
 267,8: *
 267,9: _IO_write_end
 267,22: VARIABLE
 267,22: ;
 268,3: char
 268,8: *
 268,9: _IO_buf_base
 268,21: VARIABLE
 268,21: ;
 269,3: char
 269,8: *
 269,9: _IO_buf_end
 269,20: VARIABLE
 269,20: ;
 272,3: char
 272,8: *
 272,9: _IO_save_base
 272,22: VARIABLE
 272,22: ;
 273,3: char
 273,8: *
 273,9: _IO_backup_base
 273,24: VARIABLE
 273,24: ;
 274,3: char
 274,8: *
 274,9: _IO_save_end
 274,21: VARIABLE
 274,21: ;
 276,3: struct
 276,10: _IO_marker
 276,20: VARIABLE
 276,21: *
 276,22: _markers
 276,30: VARIABLE
 276,30: ;
 278,3: struct
 278,10: _IO_FILE
 278,18: VARIABLE
 278,19: *
 278,20: _chain
 278,26: VARIABLE
 278,26: ;
 280,3: int
 280,7: _fileno
 280,14: VARIABLE
 280,14: ;
 281,3: int
 281,7: _flags2
 281,14: VARIABLE
 281,14: ;
 282,3: __off_t
 282,10: TYPE
 282,11: _old_offset
 282,22: VARIABLE
 282,22: ;
 285,3: unsigned
 285,12: short
 285,18: _cur_column
 285,29: VARIABLE
 285,29: ;
 286,3: signed
 286,10: char
 286,15: _vtable_offset
 286,29: VARIABLE
 286,29: ;
 287,3: char
 287,8: _shortbuf
 287,17: VARIABLE
 287,17: [
 287,18: 1
 287,19: ]
 287,20: ;
 289,3: _IO_lock_t
 289,13: TYPE
 289,14: *
 289,15: _lock
 289,20: VARIABLE
 289,20: ;
 297,3: __off64_t
 297,12: TYPE
 297,13: _offset
 297,20: VARIABLE
 297,20: ;
 299,3: struct
 299,10: _IO_codecvt
 299,21: VARIABLE
 299,22: *
 299,23: _codecvt
 299,31: VARIABLE
 299,31: ;
 300,3: struct
 300,10: _IO_wide_data
 300,23: VARIABLE
 300,24: *
 300,25: _wide_data
 300,35: VARIABLE
 300,35: ;
 301,3: struct
 301,10: _IO_FILE
 301,18: VARIABLE
 301,19: *
 301,20: _freeres_list
 301,33: VARIABLE
 301,33: ;
 302,3: void
 302,8: *
 302,9: _freeres_buf
 302,21: VARIABLE
 302,21: ;
 303,3: size_t
 303,9: TYPE
 303,10: __pad5
 303,16: VARIABLE
 303,16: ;
 304,3: int
 304,7: _mode
 304,12: VARIABLE
 304,12: ;
 306,3: char
 306,8: _unused2
 306,16: VARIABLE
 306,16: [
 306,17: 15
 306,20: *
 306,22: sizeof
 306,29: (
 306,30: int
 306,33: )
 306,35: -
 306,37: 4
 306,39: *
 306,41: sizeof
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 306,57: -
 306,59: sizeof
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 306,74: ]
 306,75: ;
 307,1: }
 
126 int 
 259,3: int
 
200 NAME VARIABLE 
 259,7: _flags
 259,13: VARIABLE
 
65 VARIABLE 
 259,13: VARIABLE
 
313 ; 
 259,13: ;
 
198 char 
 262,3: char
 
200 * option_type_qualifier_list option_pointer 
 262,8: *
 
64 NAME VARIABLE 
 262,9: _IO_read_ptr
 262,21: VARIABLE
 
65 VARIABLE 
 262,21: VARIABLE
 
313 ; 
 262,21: ;
 
198 char 
 263,3: char
 
200 * option_type_qualifier_list option_pointer 
 263,8: *
 
64 NAME VARIABLE 
 263,9: _IO_read_end
 263,21: VARIABLE
 
65 VARIABLE 
 263,21: VARIABLE
 
313 ; 
 263,21: ;
 
198 char 
 264,3: char
 
200 * option_type_qualifier_list option_pointer 
 264,8: *
 
64 NAME VARIABLE 
 264,9: _IO_read_base
 264,22: VARIABLE
 
65 VARIABLE 
 264,22: VARIABLE
 
313 ; 
 264,22: ;
 
198 char 
 265,3: char
 
200 * option_type_qualifier_list option_pointer 
 265,8: *
 
64 NAME VARIABLE 
 265,9: _IO_write_base
 265,23: VARIABLE
 
65 VARIABLE 
 265,23: VARIABLE
 
313 ; 
 265,23: ;
 
198 char 
 266,3: char
 
200 * option_type_qualifier_list option_pointer 
 266,8: *
 
64 NAME VARIABLE 
 266,9: _IO_write_ptr
 266,22: VARIABLE
 
65 VARIABLE 
 266,22: VARIABLE
 
313 ; 
 266,22: ;
 
198 char 
 267,3: char
 
200 * option_type_qualifier_list option_pointer 
 267,8: *
 
64 NAME VARIABLE 
 267,9: _IO_write_end
 267,22: VARIABLE
 
65 VARIABLE 
 267,22: VARIABLE
 
313 ; 
 267,22: ;
 
198 char 
 268,3: char
 
200 * option_type_qualifier_list option_pointer 
 268,8: *
 
64 NAME VARIABLE 
 268,9: _IO_buf_base
 268,21: VARIABLE
 
65 VARIABLE 
 268,21: VARIABLE
 
313 ; 
 268,21: ;
 
198 char 
 269,3: char
 
200 * option_type_qualifier_list option_pointer 
 269,8: *
 
64 NAME VARIABLE 
 269,9: _IO_buf_end
 269,20: VARIABLE
 
65 VARIABLE 
 269,20: VARIABLE
 
313 ; 
 269,20: ;
 
198 char 
 272,3: char
 
200 * option_type_qualifier_list option_pointer 
 272,8: *
 
64 NAME VARIABLE 
 272,9: _IO_save_base
 272,22: VARIABLE
 
65 VARIABLE 
 272,22: VARIABLE
 
313 ; 
 272,22: ;
 
198 char 
 273,3: char
 
200 * option_type_qualifier_list option_pointer 
 273,8: *
 
64 NAME VARIABLE 
 273,9: _IO_backup_base
 273,24: VARIABLE
 
65 VARIABLE 
 273,24: VARIABLE
 
313 ; 
 273,24: ;
 
198 char 
 274,3: char
 
200 * option_type_qualifier_list option_pointer 
 274,8: *
 
64 NAME VARIABLE 
 274,9: _IO_save_end
 274,21: VARIABLE
 
65 VARIABLE 
 274,21: VARIABLE
 
313 ; 
 274,21: ;
 
198 struct 
 276,3: struct
 
22 NAME VARIABLE 
 276,10: _IO_marker
 276,20: VARIABLE
 
65 VARIABLE 
 276,20: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 276,21: *
 
64 NAME VARIABLE 
 276,22: _markers
 276,30: VARIABLE
 
65 VARIABLE 
 276,30: VARIABLE
 
313 ; 
 276,30: ;
 
198 struct 
 278,3: struct
 
22 NAME VARIABLE 
 278,10: _IO_FILE
 278,18: VARIABLE
 
65 VARIABLE 
 278,18: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 278,19: *
 
64 NAME VARIABLE 
 278,20: _chain
 278,26: VARIABLE
 
65 VARIABLE 
 278,26: VARIABLE
 
313 ; 
 278,26: ;
 
198 int 
 280,3: int
 
200 NAME VARIABLE 
 280,7: _fileno
 280,14: VARIABLE
 
65 VARIABLE 
 280,14: VARIABLE
 
313 ; 
 280,14: ;
 
198 int 
 281,3: int
 
200 NAME VARIABLE 
 281,7: _flags2
 281,14: VARIABLE
 
65 VARIABLE 
 281,14: VARIABLE
 
313 ; 
 281,14: ;
 
198 NAME TYPE 
 282,3: __off_t
 282,10: TYPE
 
26 TYPE 
 282,10: TYPE
 
200 NAME VARIABLE 
 282,11: _old_offset
 282,22: VARIABLE
 
65 VARIABLE 
 282,22: VARIABLE
 
313 ; 
 282,22: ;
 
198 unsigned 
 285,3: unsigned
 
135 short 
 285,12: short
 
200 NAME VARIABLE 
 285,18: _cur_column
 285,29: VARIABLE
 
65 VARIABLE 
 285,29: VARIABLE
 
313 ; 
 285,29: ;
 
198 signed 
 286,3: signed
 
135 char 
 286,10: char
 
200 NAME VARIABLE 
 286,15: _vtable_offset
 286,29: VARIABLE
 
65 VARIABLE 
 286,29: VARIABLE
 
313 ; 
 286,29: ;
 
198 char 
 287,3: char
 
200 NAME VARIABLE 
 287,8: _shortbuf
 287,17: VARIABLE
 
65 VARIABLE 
 287,17: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 287,17: [
 287,18: 1
 287,19: ]
 
188 CONSTANT 
 287,18: 1
 
305 ] 
 287,19: ]
 
313 ; 
 287,20: ;
 
198 NAME TYPE 
 289,3: _IO_lock_t
 289,13: TYPE
 
26 TYPE 
 289,13: TYPE
 
200 * option_type_qualifier_list option_pointer 
 289,14: *
 
64 NAME VARIABLE 
 289,15: _lock
 289,20: VARIABLE
 
65 VARIABLE 
 289,20: VARIABLE
 
313 ; 
 289,20: ;
 
198 NAME TYPE 
 297,3: __off64_t
 297,12: TYPE
 
26 TYPE 
 297,12: TYPE
 
200 NAME VARIABLE 
 297,13: _offset
 297,20: VARIABLE
 
65 VARIABLE 
 297,20: VARIABLE
 
313 ; 
 297,20: ;
 
198 struct 
 299,3: struct
 
22 NAME VARIABLE 
 299,10: _IO_codecvt
 299,21: VARIABLE
 
65 VARIABLE 
 299,21: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 299,22: *
 
64 NAME VARIABLE 
 299,23: _codecvt
 299,31: VARIABLE
 
65 VARIABLE 
 299,31: VARIABLE
 
313 ; 
 299,31: ;
 
198 struct 
 300,3: struct
 
22 NAME VARIABLE 
 300,10: _IO_wide_data
 300,23: VARIABLE
 
65 VARIABLE 
 300,23: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 300,24: *
 
64 NAME VARIABLE 
 300,25: _wide_data
 300,35: VARIABLE
 
65 VARIABLE 
 300,35: VARIABLE
 
313 ; 
 300,35: ;
 
198 struct 
 301,3: struct
 
22 NAME VARIABLE 
 301,10: _IO_FILE
 301,18: VARIABLE
 
65 VARIABLE 
 301,18: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 301,19: *
 
64 NAME VARIABLE 
 301,20: _freeres_list
 301,33: VARIABLE
 
65 VARIABLE 
 301,33: VARIABLE
 
313 ; 
 301,33: ;
 
198 void 
 302,3: void
 
200 * option_type_qualifier_list option_pointer 
 302,8: *
 
64 NAME VARIABLE 
 302,9: _freeres_buf
 302,21: VARIABLE
 
65 VARIABLE 
 302,21: VARIABLE
 
313 ; 
 302,21: ;
 
198 NAME TYPE 
 303,3: size_t
 303,9: TYPE
 
26 TYPE 
 303,9: TYPE
 
200 NAME VARIABLE 
 303,10: __pad5
 303,16: VARIABLE
 
65 VARIABLE 
 303,16: VARIABLE
 
313 ; 
 303,16: ;
 
198 int 
 304,3: int
 
200 NAME VARIABLE 
 304,7: _mode
 304,12: VARIABLE
 
65 VARIABLE 
 304,12: VARIABLE
 
313 ; 
 304,12: ;
 
198 char 
 306,3: char
 
200 NAME VARIABLE 
 306,8: _unused2
 306,16: VARIABLE
 
65 VARIABLE 
 306,16: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 306,16: [
 306,17: 15
 306,20: *
 306,22: sizeof
 306,29: (
 306,30: int
 306,33: )
 306,35: -
 306,37: 4
 306,39: *
 306,41: sizeof
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 306,57: -
 306,59: sizeof
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 306,74: ]
 
188 CONSTANT 
 306,17: 15
 
151 * 
 306,20: *
 
242 sizeof ( type_name ) 
 306,22: sizeof
 306,29: (
 306,30: int
 306,33: )
 
170 ( type_name ) 
 306,29: (
 306,30: int
 306,33: )
 
276 int 
 306,30: int
 
373 ) 
 306,33: )
 
152 - 
 306,35: -
 
246 CONSTANT 
 306,37: 4
 
357 * 
 306,39: *
 
242 sizeof ( type_name ) 
 306,41: sizeof
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 
170 ( type_name ) 
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 
276 void 
 306,49: void
 
137 * option_type_qualifier_list option_pointer 
 306,54: *
 
373 ) 
 306,55: )
 
152 - 
 306,57: -
 
246 sizeof ( type_name ) 
 306,59: sizeof
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 
170 ( type_name ) 
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 
276 NAME TYPE 
 306,67: size_t
 306,73: TYPE
 
65 TYPE 
 306,73: TYPE
 
373 ) 
 306,73: )
 
305 ] 
 306,74: ]
 
313 ; 
 306,75: ;
 
198 } 
 307,1: }
 
60 ; 
 307,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 310,1: typedef
 310,9: __gnuc_va_list
 310,23: TYPE
 
54 NAME TYPE 
 310,9: __gnuc_va_list
 310,23: TYPE
 
26 TYPE 
 310,23: TYPE
 
6 NAME VARIABLE 
 310,24: va_list
 310,31: VARIABLE
 
65 VARIABLE 
 310,31: VARIABLE
 
70 ; 
 310,31: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 312,1: typedef
 312,9: __off_t
 312,16: TYPE
 
54 NAME TYPE 
 312,9: __off_t
 312,16: TYPE
 
26 TYPE 
 312,16: TYPE
 
6 NAME VARIABLE 
 312,17: off_t
 312,22: VARIABLE
 
65 VARIABLE 
 312,22: VARIABLE
 
70 ; 
 312,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 314,1: typedef
 314,9: __ssize_t
 314,18: TYPE
 
54 NAME TYPE 
 314,9: __ssize_t
 314,18: TYPE
 
26 TYPE 
 314,18: TYPE
 
6 NAME VARIABLE 
 314,19: ssize_t
 314,26: VARIABLE
 
65 VARIABLE 
 314,26: VARIABLE
 
70 ; 
 314,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 321,1: typedef
 321,9: __fpos_t
 321,17: TYPE
 
54 NAME TYPE 
 321,9: __fpos_t
 321,17: TYPE
 
26 TYPE 
 321,17: TYPE
 
6 NAME VARIABLE 
 321,18: fpos_t
 321,24: VARIABLE
 
65 VARIABLE 
 321,24: VARIABLE
 
70 ; 
 321,24: ;
 
23 extern 
 326,1: extern
 
8 NAME TYPE 
 326,8: FILE
 326,12: TYPE
 
26 TYPE 
 326,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 326,13: *
 
64 NAME VARIABLE 
 326,14: stdin
 326,19: VARIABLE
 
65 VARIABLE 
 326,19: VARIABLE
 
60 ; 
 326,19: ;
 
23 extern 
 327,1: extern
 
8 NAME TYPE 
 327,8: FILE
 327,12: TYPE
 
26 TYPE 
 327,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 327,13: *
 
64 NAME VARIABLE 
 327,14: stdout
 327,20: VARIABLE
 
65 VARIABLE 
 327,20: VARIABLE
 
60 ; 
 327,20: ;
 
23 extern 
 328,1: extern
 
8 NAME TYPE 
 328,8: FILE
 328,12: TYPE
 
26 TYPE 
 328,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 328,13: *
 
64 NAME VARIABLE 
 328,14: stderr
 328,20: VARIABLE
 
65 VARIABLE 
 328,20: VARIABLE
 
60 ; 
 328,20: ;
 
23 extern 
 335,1: extern
 
8 int 
 335,8: int
 
5 NAME VARIABLE 
 335,12: remove
 335,18: VARIABLE
 
65 VARIABLE 
 335,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 335,19: (
 335,20: const
 335,26: char
 335,31: *
 335,32: __filename
 335,42: VARIABLE
 335,42: )
 
186 const 
 335,20: const
 
103 char 
 335,26: char
 
298 * option_type_qualifier_list option_pointer 
 335,31: *
 
386 NAME VARIABLE 
 335,32: __filename
 335,42: VARIABLE
 
65 VARIABLE 
 335,42: VARIABLE
 
187 ) 
 335,42: )
 
60 ; 
 335,44: ;
 
23 extern 
 337,1: extern
 
8 int 
 337,8: int
 
5 NAME VARIABLE 
 337,12: rename
 337,18: VARIABLE
 
65 VARIABLE 
 337,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 337,19: (
 337,20: const
 337,26: char
 337,31: *
 337,32: __old
 337,37: VARIABLE
 337,37: ,
 337,39: const
 337,45: char
 337,50: *
 337,51: __new
 337,56: VARIABLE
 337,56: )
 
186 const 
 337,20: const
 
103 char 
 337,26: char
 
298 * option_type_qualifier_list option_pointer 
 337,31: *
 
386 NAME VARIABLE 
 337,32: __old
 337,37: VARIABLE
 
65 VARIABLE 
 337,37: VARIABLE
 
300 , parameter_declaration 
 337,37: ,
 337,39: const
 337,45: char
 337,50: *
 337,51: __new
 337,56: VARIABLE
 
391 const 
 337,39: const
 
103 char 
 337,45: char
 
298 * option_type_qualifier_list option_pointer 
 337,50: *
 
386 NAME VARIABLE 
 337,51: __new
 337,56: VARIABLE
 
65 VARIABLE 
 337,56: VARIABLE
 
187 ) 
 337,56: )
 
60 ; 
 337,58: ;
 
23 extern 
 341,1: extern
 
8 int 
 341,8: int
 
5 NAME VARIABLE 
 341,12: renameat
 341,20: VARIABLE
 
65 VARIABLE 
 341,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 341,21: (
 341,22: int
 341,26: __oldfd
 341,33: VARIABLE
 341,33: ,
 341,35: const
 341,41: char
 341,46: *
 341,47: __old
 341,52: VARIABLE
 341,52: ,
 341,54: int
 341,58: __newfd
 341,65: VARIABLE
 341,65: ,
 342,8: const
 342,14: char
 342,19: *
 342,20: __new
 342,25: VARIABLE
 342,25: )
 
186 int 
 341,22: int
 
298 NAME VARIABLE 
 341,26: __oldfd
 341,33: VARIABLE
 
65 VARIABLE 
 341,33: VARIABLE
 
300 , parameter_declaration 
 341,33: ,
 341,35: const
 341,41: char
 341,46: *
 341,47: __old
 341,52: VARIABLE
 
391 const 
 341,35: const
 
103 char 
 341,41: char
 
298 * option_type_qualifier_list option_pointer 
 341,46: *
 
386 NAME VARIABLE 
 341,47: __old
 341,52: VARIABLE
 
65 VARIABLE 
 341,52: VARIABLE
 
300 , parameter_declaration 
 341,52: ,
 341,54: int
 341,58: __newfd
 341,65: VARIABLE
 
391 int 
 341,54: int
 
298 NAME VARIABLE 
 341,58: __newfd
 341,65: VARIABLE
 
65 VARIABLE 
 341,65: VARIABLE
 
300 , parameter_declaration 
 341,65: ,
 342,8: const
 342,14: char
 342,19: *
 342,20: __new
 342,25: VARIABLE
 
391 const 
 342,8: const
 
103 char 
 342,14: char
 
298 * option_type_qualifier_list option_pointer 
 342,19: *
 
386 NAME VARIABLE 
 342,20: __new
 342,25: VARIABLE
 
65 VARIABLE 
 342,25: VARIABLE
 
187 ) 
 342,25: )
 
60 ; 
 342,27: ;
 
23 extern 
 344,1: extern
 
8 int 
 344,8: int
 
5 NAME VARIABLE 
 344,12: fclose
 344,18: VARIABLE
 
65 VARIABLE 
 344,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 344,19: (
 344,20: FILE
 344,24: TYPE
 344,25: *
 344,26: __stream
 344,34: VARIABLE
 344,34: )
 
186 NAME TYPE 
 344,20: FILE
 344,24: TYPE
 
65 TYPE 
 344,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 344,25: *
 
386 NAME VARIABLE 
 344,26: __stream
 344,34: VARIABLE
 
65 VARIABLE 
 344,34: VARIABLE
 
187 ) 
 344,34: )
 
60 ; 
 344,35: ;
 
23 extern 
 346,1: extern
 
8 NAME TYPE 
 346,8: FILE
 346,12: TYPE
 
26 TYPE 
 346,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 346,13: *
 
64 NAME VARIABLE 
 346,14: tmpfile
 346,21: VARIABLE
 
65 VARIABLE 
 346,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 346,22: (
 346,23: void
 346,27: )
 
186 void 
 346,23: void
 
187 ) 
 346,27: )
 
60 ; 
 347,5: ;
 
23 extern 
 349,1: extern
 
8 char 
 349,8: char
 
5 * option_type_qualifier_list option_pointer 
 349,13: *
 
64 NAME VARIABLE 
 349,14: tmpnam
 349,20: VARIABLE
 
65 VARIABLE 
 349,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 349,21: (
 349,22: char
 349,26: [
 349,27: 20
 349,29: ]
 349,30: )
 
186 char 
 349,22: char
 
231 [ option_assignment_expression ] 
 349,26: [
 349,27: 20
 349,29: ]
 
346 CONSTANT 
 349,27: 20
 
422 ] 
 349,29: ]
 
187 ) 
 349,30: )
 
60 ; 
 349,33: ;
 
23 extern 
 354,1: extern
 
8 char 
 354,8: char
 
5 * option_type_qualifier_list option_pointer 
 354,13: *
 
64 NAME VARIABLE 
 354,14: tmpnam_r
 354,22: VARIABLE
 
65 VARIABLE 
 354,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 354,23: (
 354,24: char
 354,29: __s
 354,32: VARIABLE
 354,32: [
 354,33: 20
 354,35: ]
 354,36: )
 
186 char 
 354,24: char
 
298 NAME VARIABLE 
 354,29: __s
 354,32: VARIABLE
 
65 VARIABLE 
 354,32: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 354,32: [
 354,33: 20
 354,35: ]
 
188 CONSTANT 
 354,33: 20
 
305 ] 
 354,35: ]
 
187 ) 
 354,36: )
 
60 ; 
 354,39: ;
 
23 extern 
 356,1: extern
 
8 char 
 356,8: char
 
5 * option_type_qualifier_list option_pointer 
 356,13: *
 
64 NAME VARIABLE 
 356,14: tempnam
 356,21: VARIABLE
 
65 VARIABLE 
 356,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 356,22: (
 356,23: const
 356,29: char
 356,34: *
 356,35: __dir
 356,40: VARIABLE
 356,40: ,
 356,42: const
 356,48: char
 356,53: *
 356,54: __pfx
 356,59: VARIABLE
 356,59: )
 
186 const 
 356,23: const
 
103 char 
 356,29: char
 
298 * option_type_qualifier_list option_pointer 
 356,34: *
 
386 NAME VARIABLE 
 356,35: __dir
 356,40: VARIABLE
 
65 VARIABLE 
 356,40: VARIABLE
 
300 , parameter_declaration 
 356,40: ,
 356,42: const
 356,48: char
 356,53: *
 356,54: __pfx
 356,59: VARIABLE
 
391 const 
 356,42: const
 
103 char 
 356,48: char
 
298 * option_type_qualifier_list option_pointer 
 356,53: *
 
386 NAME VARIABLE 
 356,54: __pfx
 356,59: VARIABLE
 
65 VARIABLE 
 356,59: VARIABLE
 
187 ) 
 356,59: )
 
60 ; 
 357,6: ;
 
23 extern 
 364,1: extern
 
8 int 
 364,8: int
 
5 NAME VARIABLE 
 364,12: fflush
 364,18: VARIABLE
 
65 VARIABLE 
 364,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 364,19: (
 364,20: FILE
 364,24: TYPE
 364,25: *
 364,26: __stream
 364,34: VARIABLE
 364,34: )
 
186 NAME TYPE 
 364,20: FILE
 364,24: TYPE
 
65 TYPE 
 364,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 364,25: *
 
386 NAME VARIABLE 
 364,26: __stream
 364,34: VARIABLE
 
65 VARIABLE 
 364,34: VARIABLE
 
187 ) 
 364,34: )
 
60 ; 
 364,35: ;
 
23 extern 
 366,1: extern
 
8 int 
 366,8: int
 
5 NAME VARIABLE 
 366,12: fflush_unlocked
 366,27: VARIABLE
 
65 VARIABLE 
 366,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 366,28: (
 366,29: FILE
 366,33: TYPE
 366,34: *
 366,35: __stream
 366,43: VARIABLE
 366,43: )
 
186 NAME TYPE 
 366,29: FILE
 366,33: TYPE
 
65 TYPE 
 366,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 366,34: *
 
386 NAME VARIABLE 
 366,35: __stream
 366,43: VARIABLE
 
65 VARIABLE 
 366,43: VARIABLE
 
187 ) 
 366,43: )
 
60 ; 
 366,44: ;
 
23 extern 
 368,1: extern
 
8 NAME TYPE 
 368,8: FILE
 368,12: TYPE
 
26 TYPE 
 368,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 368,13: *
 
64 NAME VARIABLE 
 368,14: fopen
 368,19: VARIABLE
 
65 VARIABLE 
 368,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 368,20: (
 368,21: const
 368,27: char
 368,32: *
 368,34: __filename
 368,44: VARIABLE
 368,44: ,
 369,7: const
 369,13: char
 369,18: *
 369,20: __modes
 369,27: VARIABLE
 369,27: )
 
186 const 
 368,21: const
 
103 char 
 368,27: char
 
298 * option_type_qualifier_list option_pointer 
 368,32: *
 
386 NAME VARIABLE 
 368,34: __filename
 368,44: VARIABLE
 
65 VARIABLE 
 368,44: VARIABLE
 
300 , parameter_declaration 
 368,44: ,
 369,7: const
 369,13: char
 369,18: *
 369,20: __modes
 369,27: VARIABLE
 
391 const 
 369,7: const
 
103 char 
 369,13: char
 
298 * option_type_qualifier_list option_pointer 
 369,18: *
 
386 NAME VARIABLE 
 369,20: __modes
 369,27: VARIABLE
 
65 VARIABLE 
 369,27: VARIABLE
 
187 ) 
 369,27: )
 
60 ; 
 370,5: ;
 
23 extern 
 375,1: extern
 
8 NAME TYPE 
 375,8: FILE
 375,12: TYPE
 
26 TYPE 
 375,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 375,13: *
 
64 NAME VARIABLE 
 375,14: freopen
 375,21: VARIABLE
 
65 VARIABLE 
 375,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 375,22: (
 375,23: const
 375,29: char
 375,34: *
 375,36: __filename
 375,46: VARIABLE
 375,46: ,
 376,9: const
 376,15: char
 376,20: *
 376,22: __modes
 376,29: VARIABLE
 376,29: ,
 377,9: FILE
 377,13: TYPE
 377,14: *
 377,16: __stream
 377,24: VARIABLE
 377,24: )
 
186 const 
 375,23: const
 
103 char 
 375,29: char
 
298 * option_type_qualifier_list option_pointer 
 375,34: *
 
386 NAME VARIABLE 
 375,36: __filename
 375,46: VARIABLE
 
65 VARIABLE 
 375,46: VARIABLE
 
300 , parameter_declaration 
 375,46: ,
 376,9: const
 376,15: char
 376,20: *
 376,22: __modes
 376,29: VARIABLE
 
391 const 
 376,9: const
 
103 char 
 376,15: char
 
298 * option_type_qualifier_list option_pointer 
 376,20: *
 
386 NAME VARIABLE 
 376,22: __modes
 376,29: VARIABLE
 
65 VARIABLE 
 376,29: VARIABLE
 
300 , parameter_declaration 
 376,29: ,
 377,9: FILE
 377,13: TYPE
 377,14: *
 377,16: __stream
 377,24: VARIABLE
 
391 NAME TYPE 
 377,9: FILE
 377,13: TYPE
 
26 TYPE 
 377,13: TYPE
 
298 * option_type_qualifier_list option_pointer 
 377,14: *
 
386 NAME VARIABLE 
 377,16: __stream
 377,24: VARIABLE
 
65 VARIABLE 
 377,24: VARIABLE
 
187 ) 
 377,24: )
 
60 ; 
 377,26: ;
 
23 extern 
 379,1: extern
 
8 NAME TYPE 
 379,8: FILE
 379,12: TYPE
 
26 TYPE 
 379,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 379,13: *
 
64 NAME VARIABLE 
 379,14: fdopen
 379,20: VARIABLE
 
65 VARIABLE 
 379,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 379,21: (
 379,22: int
 379,26: __fd
 379,30: VARIABLE
 379,30: ,
 379,32: const
 379,38: char
 379,43: *
 379,44: __modes
 379,51: VARIABLE
 379,51: )
 
186 int 
 379,22: int
 
298 NAME VARIABLE 
 379,26: __fd
 379,30: VARIABLE
 
65 VARIABLE 
 379,30: VARIABLE
 
300 , parameter_declaration 
 379,30: ,
 379,32: const
 379,38: char
 379,43: *
 379,44: __modes
 379,51: VARIABLE
 
391 const 
 379,32: const
 
103 char 
 379,38: char
 
298 * option_type_qualifier_list option_pointer 
 379,43: *
 
386 NAME VARIABLE 
 379,44: __modes
 379,51: VARIABLE
 
65 VARIABLE 
 379,51: VARIABLE
 
187 ) 
 379,51: )
 
60 ; 
 380,5: ;
 
23 extern 
 382,1: extern
 
8 NAME TYPE 
 382,8: FILE
 382,12: TYPE
 
26 TYPE 
 382,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 382,13: *
 
64 NAME VARIABLE 
 382,14: fmemopen
 382,22: VARIABLE
 
65 VARIABLE 
 382,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 382,23: (
 382,24: void
 382,29: *
 382,30: __s
 382,33: VARIABLE
 382,33: ,
 382,35: size_t
 382,41: TYPE
 382,42: __len
 382,47: VARIABLE
 382,47: ,
 382,49: const
 382,55: char
 382,60: *
 382,61: __modes
 382,68: VARIABLE
 382,68: )
 
186 void 
 382,24: void
 
298 * option_type_qualifier_list option_pointer 
 382,29: *
 
386 NAME VARIABLE 
 382,30: __s
 382,33: VARIABLE
 
65 VARIABLE 
 382,33: VARIABLE
 
300 , parameter_declaration 
 382,33: ,
 382,35: size_t
 382,41: TYPE
 382,42: __len
 382,47: VARIABLE
 
391 NAME TYPE 
 382,35: size_t
 382,41: TYPE
 
26 TYPE 
 382,41: TYPE
 
298 NAME VARIABLE 
 382,42: __len
 382,47: VARIABLE
 
65 VARIABLE 
 382,47: VARIABLE
 
300 , parameter_declaration 
 382,47: ,
 382,49: const
 382,55: char
 382,60: *
 382,61: __modes
 382,68: VARIABLE
 
391 const 
 382,49: const
 
103 char 
 382,55: char
 
298 * option_type_qualifier_list option_pointer 
 382,60: *
 
386 NAME VARIABLE 
 382,61: __modes
 382,68: VARIABLE
 
65 VARIABLE 
 382,68: VARIABLE
 
187 ) 
 382,68: )
 
60 ; 
 383,6: ;
 
23 extern 
 388,1: extern
 
8 NAME TYPE 
 388,8: FILE
 388,12: TYPE
 
26 TYPE 
 388,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 388,13: *
 
64 NAME VARIABLE 
 388,14: open_memstream
 388,28: VARIABLE
 
65 VARIABLE 
 388,28: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 388,29: (
 388,30: char
 388,35: *
 388,36: *
 388,37: __bufloc
 388,45: VARIABLE
 388,45: ,
 388,47: size_t
 388,53: TYPE
 388,54: *
 388,55: __sizeloc
 388,64: VARIABLE
 388,64: )
 
186 char 
 388,30: char
 
298 * option_type_qualifier_list option_pointer 
 388,35: *
 388,36: *
 
116 * option_type_qualifier_list option_pointer 
 388,36: *
 
386 NAME VARIABLE 
 388,37: __bufloc
 388,45: VARIABLE
 
65 VARIABLE 
 388,45: VARIABLE
 
300 , parameter_declaration 
 388,45: ,
 388,47: size_t
 388,53: TYPE
 388,54: *
 388,55: __sizeloc
 388,64: VARIABLE
 
391 NAME TYPE 
 388,47: size_t
 388,53: TYPE
 
26 TYPE 
 388,53: TYPE
 
298 * option_type_qualifier_list option_pointer 
 388,54: *
 
386 NAME VARIABLE 
 388,55: __sizeloc
 388,64: VARIABLE
 
65 VARIABLE 
 388,64: VARIABLE
 
187 ) 
 388,64: )
 
60 ; 
 389,5: ;
 
23 extern 
 391,1: extern
 
8 void 
 391,8: void
 
5 NAME VARIABLE 
 391,13: setbuf
 391,19: VARIABLE
 
65 VARIABLE 
 391,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 391,20: (
 391,21: FILE
 391,25: TYPE
 391,26: *
 391,28: __stream
 391,36: VARIABLE
 391,36: ,
 391,38: char
 391,43: *
 391,45: __buf
 391,50: VARIABLE
 391,50: )
 
186 NAME TYPE 
 391,21: FILE
 391,25: TYPE
 
65 TYPE 
 391,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 391,26: *
 
386 NAME VARIABLE 
 391,28: __stream
 391,36: VARIABLE
 
65 VARIABLE 
 391,36: VARIABLE
 
300 , parameter_declaration 
 391,36: ,
 391,38: char
 391,43: *
 391,45: __buf
 391,50: VARIABLE
 
391 char 
 391,38: char
 
298 * option_type_qualifier_list option_pointer 
 391,43: *
 
386 NAME VARIABLE 
 391,45: __buf
 391,50: VARIABLE
 
65 VARIABLE 
 391,50: VARIABLE
 
187 ) 
 391,50: )
 
60 ; 
 391,52: ;
 
23 extern 
 395,1: extern
 
8 int 
 395,8: int
 
5 NAME VARIABLE 
 395,12: setvbuf
 395,19: VARIABLE
 
65 VARIABLE 
 395,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 395,20: (
 395,21: FILE
 395,25: TYPE
 395,26: *
 395,28: __stream
 395,36: VARIABLE
 395,36: ,
 395,38: char
 395,43: *
 395,45: __buf
 395,50: VARIABLE
 395,50: ,
 396,7: int
 396,11: __modes
 396,18: VARIABLE
 396,18: ,
 396,20: size_t
 396,26: TYPE
 396,27: __n
 396,30: VARIABLE
 396,30: )
 
186 NAME TYPE 
 395,21: FILE
 395,25: TYPE
 
65 TYPE 
 395,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 395,26: *
 
386 NAME VARIABLE 
 395,28: __stream
 395,36: VARIABLE
 
65 VARIABLE 
 395,36: VARIABLE
 
300 , parameter_declaration 
 395,36: ,
 395,38: char
 395,43: *
 395,45: __buf
 395,50: VARIABLE
 
391 char 
 395,38: char
 
298 * option_type_qualifier_list option_pointer 
 395,43: *
 
386 NAME VARIABLE 
 395,45: __buf
 395,50: VARIABLE
 
65 VARIABLE 
 395,50: VARIABLE
 
300 , parameter_declaration 
 395,50: ,
 396,7: int
 396,11: __modes
 396,18: VARIABLE
 
391 int 
 396,7: int
 
298 NAME VARIABLE 
 396,11: __modes
 396,18: VARIABLE
 
65 VARIABLE 
 396,18: VARIABLE
 
300 , parameter_declaration 
 396,18: ,
 396,20: size_t
 396,26: TYPE
 396,27: __n
 396,30: VARIABLE
 
391 NAME TYPE 
 396,20: size_t
 396,26: TYPE
 
26 TYPE 
 396,26: TYPE
 
298 NAME VARIABLE 
 396,27: __n
 396,30: VARIABLE
 
65 VARIABLE 
 396,30: VARIABLE
 
187 ) 
 396,30: )
 
60 ; 
 396,32: ;
 
23 extern 
 401,1: extern
 
8 void 
 401,8: void
 
5 NAME VARIABLE 
 401,13: setbuffer
 401,22: VARIABLE
 
65 VARIABLE 
 401,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 401,23: (
 401,24: FILE
 401,28: TYPE
 401,29: *
 401,31: __stream
 401,39: VARIABLE
 401,39: ,
 401,41: char
 401,46: *
 401,48: __buf
 401,53: VARIABLE
 401,53: ,
 402,10: size_t
 402,16: TYPE
 402,17: __size
 402,23: VARIABLE
 402,23: )
 
186 NAME TYPE 
 401,24: FILE
 401,28: TYPE
 
65 TYPE 
 401,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 401,29: *
 
386 NAME VARIABLE 
 401,31: __stream
 401,39: VARIABLE
 
65 VARIABLE 
 401,39: VARIABLE
 
300 , parameter_declaration 
 401,39: ,
 401,41: char
 401,46: *
 401,48: __buf
 401,53: VARIABLE
 
391 char 
 401,41: char
 
298 * option_type_qualifier_list option_pointer 
 401,46: *
 
386 NAME VARIABLE 
 401,48: __buf
 401,53: VARIABLE
 
65 VARIABLE 
 401,53: VARIABLE
 
300 , parameter_declaration 
 401,53: ,
 402,10: size_t
 402,16: TYPE
 402,17: __size
 402,23: VARIABLE
 
391 NAME TYPE 
 402,10: size_t
 402,16: TYPE
 
26 TYPE 
 402,16: TYPE
 
298 NAME VARIABLE 
 402,17: __size
 402,23: VARIABLE
 
65 VARIABLE 
 402,23: VARIABLE
 
187 ) 
 402,23: )
 
60 ; 
 402,25: ;
 
23 extern 
 405,1: extern
 
8 void 
 405,8: void
 
5 NAME VARIABLE 
 405,13: setlinebuf
 405,23: VARIABLE
 
65 VARIABLE 
 405,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 405,24: (
 405,25: FILE
 405,29: TYPE
 405,30: *
 405,31: __stream
 405,39: VARIABLE
 405,39: )
 
186 NAME TYPE 
 405,25: FILE
 405,29: TYPE
 
65 TYPE 
 405,29: TYPE
 
298 * option_type_qualifier_list option_pointer 
 405,30: *
 
386 NAME VARIABLE 
 405,31: __stream
 405,39: VARIABLE
 
65 VARIABLE 
 405,39: VARIABLE
 
187 ) 
 405,39: )
 
60 ; 
 405,41: ;
 
23 extern 
 413,1: extern
 
8 int 
 413,8: int
 
5 NAME VARIABLE 
 413,12: fprintf
 413,19: VARIABLE
 
65 VARIABLE 
 413,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 413,20: (
 413,21: FILE
 413,25: TYPE
 413,26: *
 413,28: __stream
 413,36: VARIABLE
 413,36: ,
 414,7: const
 414,13: char
 414,18: *
 414,20: __format
 414,28: VARIABLE
 414,28: ,
 414,30: ...
 414,33: )
 
186 NAME TYPE 
 413,21: FILE
 413,25: TYPE
 
65 TYPE 
 413,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 413,26: *
 
386 NAME VARIABLE 
 413,28: __stream
 413,36: VARIABLE
 
65 VARIABLE 
 413,36: VARIABLE
 
300 , parameter_declaration 
 413,36: ,
 414,7: const
 414,13: char
 414,18: *
 414,20: __format
 414,28: VARIABLE
 
391 const 
 414,7: const
 
103 char 
 414,13: char
 
298 * option_type_qualifier_list option_pointer 
 414,18: *
 
386 NAME VARIABLE 
 414,20: __format
 414,28: VARIABLE
 
65 VARIABLE 
 414,28: VARIABLE
 
300 , ... 
 414,28: ,
 414,30: ...
 
391 ... 
 414,30: ...
 
187 ) 
 414,33: )
 
60 ; 
 414,34: ;
 
23 extern 
 419,1: extern
 
8 int 
 419,8: int
 
5 NAME VARIABLE 
 419,12: printf
 419,18: VARIABLE
 
65 VARIABLE 
 419,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 419,19: (
 419,20: const
 419,26: char
 419,31: *
 419,33: __format
 419,41: VARIABLE
 419,41: ,
 419,43: ...
 419,46: )
 
186 const 
 419,20: const
 
103 char 
 419,26: char
 
298 * option_type_qualifier_list option_pointer 
 419,31: *
 
386 NAME VARIABLE 
 419,33: __format
 419,41: VARIABLE
 
65 VARIABLE 
 419,41: VARIABLE
 
300 , ... 
 419,41: ,
 419,43: ...
 
391 ... 
 419,43: ...
 
187 ) 
 419,46: )
 
60 ; 
 419,47: ;
 
23 extern 
 421,1: extern
 
8 int 
 421,8: int
 
5 NAME VARIABLE 
 421,12: sprintf
 421,19: VARIABLE
 
65 VARIABLE 
 421,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 421,20: (
 421,21: char
 421,26: *
 421,28: __s
 421,31: VARIABLE
 421,31: ,
 422,7: const
 422,13: char
 422,18: *
 422,20: __format
 422,28: VARIABLE
 422,28: ,
 422,30: ...
 422,33: )
 
186 char 
 421,21: char
 
298 * option_type_qualifier_list option_pointer 
 421,26: *
 
386 NAME VARIABLE 
 421,28: __s
 421,31: VARIABLE
 
65 VARIABLE 
 421,31: VARIABLE
 
300 , parameter_declaration 
 421,31: ,
 422,7: const
 422,13: char
 422,18: *
 422,20: __format
 422,28: VARIABLE
 
391 const 
 422,7: const
 
103 char 
 422,13: char
 
298 * option_type_qualifier_list option_pointer 
 422,18: *
 
386 NAME VARIABLE 
 422,20: __format
 422,28: VARIABLE
 
65 VARIABLE 
 422,28: VARIABLE
 
300 , ... 
 422,28: ,
 422,30: ...
 
391 ... 
 422,30: ...
 
187 ) 
 422,33: )
 
60 ; 
 422,35: ;
 
23 extern 
 428,1: extern
 
8 int 
 428,8: int
 
5 NAME VARIABLE 
 428,12: vfprintf
 428,20: VARIABLE
 
65 VARIABLE 
 428,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 428,21: (
 428,22: FILE
 428,26: TYPE
 428,27: *
 428,29: __s
 428,32: VARIABLE
 428,32: ,
 428,34: const
 428,40: char
 428,45: *
 428,47: __format
 428,55: VARIABLE
 428,55: ,
 429,8: __gnuc_va_list
 429,22: TYPE
 429,23: __arg
 429,28: VARIABLE
 429,28: )
 
186 NAME TYPE 
 428,22: FILE
 428,26: TYPE
 
65 TYPE 
 428,26: TYPE
 
298 * option_type_qualifier_list option_pointer 
 428,27: *
 
386 NAME VARIABLE 
 428,29: __s
 428,32: VARIABLE
 
65 VARIABLE 
 428,32: VARIABLE
 
300 , parameter_declaration 
 428,32: ,
 428,34: const
 428,40: char
 428,45: *
 428,47: __format
 428,55: VARIABLE
 
391 const 
 428,34: const
 
103 char 
 428,40: char
 
298 * option_type_qualifier_list option_pointer 
 428,45: *
 
386 NAME VARIABLE 
 428,47: __format
 428,55: VARIABLE
 
65 VARIABLE 
 428,55: VARIABLE
 
300 , parameter_declaration 
 428,55: ,
 429,8: __gnuc_va_list
 429,22: TYPE
 429,23: __arg
 429,28: VARIABLE
 
391 NAME TYPE 
 429,8: __gnuc_va_list
 429,22: TYPE
 
26 TYPE 
 429,22: TYPE
 
298 NAME VARIABLE 
 429,23: __arg
 429,28: VARIABLE
 
65 VARIABLE 
 429,28: VARIABLE
 
187 ) 
 429,28: )
 
60 ; 
 429,29: ;
 
23 extern 
 434,1: extern
 
8 int 
 434,8: int
 
5 NAME VARIABLE 
 434,12: vprintf
 434,19: VARIABLE
 
65 VARIABLE 
 434,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 434,20: (
 434,21: const
 434,27: char
 434,32: *
 434,34: __format
 434,42: VARIABLE
 434,42: ,
 434,44: __gnuc_va_list
 434,58: TYPE
 434,59: __arg
 434,64: VARIABLE
 434,64: )
 
186 const 
 434,21: const
 
103 char 
 434,27: char
 
298 * option_type_qualifier_list option_pointer 
 434,32: *
 
386 NAME VARIABLE 
 434,34: __format
 434,42: VARIABLE
 
65 VARIABLE 
 434,42: VARIABLE
 
300 , parameter_declaration 
 434,42: ,
 434,44: __gnuc_va_list
 434,58: TYPE
 434,59: __arg
 434,64: VARIABLE
 
391 NAME TYPE 
 434,44: __gnuc_va_list
 434,58: TYPE
 
26 TYPE 
 434,58: TYPE
 
298 NAME VARIABLE 
 434,59: __arg
 434,64: VARIABLE
 
65 VARIABLE 
 434,64: VARIABLE
 
187 ) 
 434,64: )
 
60 ; 
 434,65: ;
 
23 extern 
 436,1: extern
 
8 int 
 436,8: int
 
5 NAME VARIABLE 
 436,12: vsprintf
 436,20: VARIABLE
 
65 VARIABLE 
 436,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 436,21: (
 436,22: char
 436,27: *
 436,29: __s
 436,32: VARIABLE
 436,32: ,
 436,34: const
 436,40: char
 436,45: *
 436,47: __format
 436,55: VARIABLE
 436,55: ,
 437,8: __gnuc_va_list
 437,22: TYPE
 437,23: __arg
 437,28: VARIABLE
 437,28: )
 
186 char 
 436,22: char
 
298 * option_type_qualifier_list option_pointer 
 436,27: *
 
386 NAME VARIABLE 
 436,29: __s
 436,32: VARIABLE
 
65 VARIABLE 
 436,32: VARIABLE
 
300 , parameter_declaration 
 436,32: ,
 436,34: const
 436,40: char
 436,45: *
 436,47: __format
 436,55: VARIABLE
 
391 const 
 436,34: const
 
103 char 
 436,40: char
 
298 * option_type_qualifier_list option_pointer 
 436,45: *
 
386 NAME VARIABLE 
 436,47: __format
 436,55: VARIABLE
 
65 VARIABLE 
 436,55: VARIABLE
 
300 , parameter_declaration 
 436,55: ,
 437,8: __gnuc_va_list
 437,22: TYPE
 437,23: __arg
 437,28: VARIABLE
 
391 NAME TYPE 
 437,8: __gnuc_va_list
 437,22: TYPE
 
26 TYPE 
 437,22: TYPE
 
298 NAME VARIABLE 
 437,23: __arg
 437,28: VARIABLE
 
65 VARIABLE 
 437,28: VARIABLE
 
187 ) 
 437,28: )
 
60 ; 
 437,30: ;
 
23 extern 
 441,1: extern
 
8 int 
 441,8: int
 
5 NAME VARIABLE 
 441,12: snprintf
 441,20: VARIABLE
 
65 VARIABLE 
 441,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 441,21: (
 441,22: char
 441,27: *
 441,29: __s
 441,32: VARIABLE
 441,32: ,
 441,34: size_t
 441,40: TYPE
 441,41: __maxlen
 441,49: VARIABLE
 441,49: ,
 442,8: const
 442,14: char
 442,19: *
 442,21: __format
 442,29: VARIABLE
 442,29: ,
 442,31: ...
 442,34: )
 
186 char 
 441,22: char
 
298 * option_type_qualifier_list option_pointer 
 441,27: *
 
386 NAME VARIABLE 
 441,29: __s
 441,32: VARIABLE
 
65 VARIABLE 
 441,32: VARIABLE
 
300 , parameter_declaration 
 441,32: ,
 441,34: size_t
 441,40: TYPE
 441,41: __maxlen
 441,49: VARIABLE
 
391 NAME TYPE 
 441,34: size_t
 441,40: TYPE
 
26 TYPE 
 441,40: TYPE
 
298 NAME VARIABLE 
 441,41: __maxlen
 441,49: VARIABLE
 
65 VARIABLE 
 441,49: VARIABLE
 
300 , parameter_declaration 
 441,49: ,
 442,8: const
 442,14: char
 442,19: *
 442,21: __format
 442,29: VARIABLE
 
391 const 
 442,8: const
 
103 char 
 442,14: char
 
298 * option_type_qualifier_list option_pointer 
 442,19: *
 
386 NAME VARIABLE 
 442,21: __format
 442,29: VARIABLE
 
65 VARIABLE 
 442,29: VARIABLE
 
300 , ... 
 442,29: ,
 442,31: ...
 
391 ... 
 442,31: ...
 
187 ) 
 442,34: )
 
60 ; 
 443,7: ;
 
23 extern 
 445,1: extern
 
8 int 
 445,8: int
 
5 NAME VARIABLE 
 445,12: vsnprintf
 445,21: VARIABLE
 
65 VARIABLE 
 445,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 445,22: (
 445,23: char
 445,28: *
 445,30: __s
 445,33: VARIABLE
 445,33: ,
 445,35: size_t
 445,41: TYPE
 445,42: __maxlen
 445,50: VARIABLE
 445,50: ,
 446,9: const
 446,15: char
 446,20: *
 446,22: __format
 446,30: VARIABLE
 446,30: ,
 446,32: __gnuc_va_list
 446,46: TYPE
 446,47: __arg
 446,52: VARIABLE
 446,52: )
 
186 char 
 445,23: char
 
298 * option_type_qualifier_list option_pointer 
 445,28: *
 
386 NAME VARIABLE 
 445,30: __s
 445,33: VARIABLE
 
65 VARIABLE 
 445,33: VARIABLE
 
300 , parameter_declaration 
 445,33: ,
 445,35: size_t
 445,41: TYPE
 445,42: __maxlen
 445,50: VARIABLE
 
391 NAME TYPE 
 445,35: size_t
 445,41: TYPE
 
26 TYPE 
 445,41: TYPE
 
298 NAME VARIABLE 
 445,42: __maxlen
 445,50: VARIABLE
 
65 VARIABLE 
 445,50: VARIABLE
 
300 , parameter_declaration 
 445,50: ,
 446,9: const
 446,15: char
 446,20: *
 446,22: __format
 446,30: VARIABLE
 
391 const 
 446,9: const
 
103 char 
 446,15: char
 
298 * option_type_qualifier_list option_pointer 
 446,20: *
 
386 NAME VARIABLE 
 446,22: __format
 446,30: VARIABLE
 
65 VARIABLE 
 446,30: VARIABLE
 
300 , parameter_declaration 
 446,30: ,
 446,32: __gnuc_va_list
 446,46: TYPE
 446,47: __arg
 446,52: VARIABLE
 
391 NAME TYPE 
 446,32: __gnuc_va_list
 446,46: TYPE
 
26 TYPE 
 446,46: TYPE
 
298 NAME VARIABLE 
 446,47: __arg
 446,52: VARIABLE
 
65 VARIABLE 
 446,52: VARIABLE
 
187 ) 
 446,52: )
 
60 ; 
 447,7: ;
 
23 extern 
 449,1: extern
 
8 int 
 449,8: int
 
5 NAME VARIABLE 
 449,12: vdprintf
 449,20: VARIABLE
 
65 VARIABLE 
 449,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 449,21: (
 449,22: int
 449,26: __fd
 449,30: VARIABLE
 449,30: ,
 449,32: const
 449,38: char
 449,43: *
 449,45: __fmt
 449,50: VARIABLE
 449,50: ,
 450,8: __gnuc_va_list
 450,22: TYPE
 450,23: __arg
 450,28: VARIABLE
 450,28: )
 
186 int 
 449,22: int
 
298 NAME VARIABLE 
 449,26: __fd
 449,30: VARIABLE
 
65 VARIABLE 
 449,30: VARIABLE
 
300 , parameter_declaration 
 449,30: ,
 449,32: const
 449,38: char
 449,43: *
 449,45: __fmt
 449,50: VARIABLE
 
391 const 
 449,32: const
 
103 char 
 449,38: char
 
298 * option_type_qualifier_list option_pointer 
 449,43: *
 
386 NAME VARIABLE 
 449,45: __fmt
 449,50: VARIABLE
 
65 VARIABLE 
 449,50: VARIABLE
 
300 , parameter_declaration 
 449,50: ,
 450,8: __gnuc_va_list
 450,22: TYPE
 450,23: __arg
 450,28: VARIABLE
 
391 NAME TYPE 
 450,8: __gnuc_va_list
 450,22: TYPE
 
26 TYPE 
 450,22: TYPE
 
298 NAME VARIABLE 
 450,23: __arg
 450,28: VARIABLE
 
65 VARIABLE 
 450,28: VARIABLE
 
187 ) 
 450,28: )
 
60 ; 
 451,6: ;
 
23 extern 
 452,1: extern
 
8 int 
 452,8: int
 
5 NAME VARIABLE 
 452,12: dprintf
 452,19: VARIABLE
 
65 VARIABLE 
 452,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 452,20: (
 452,21: int
 452,25: __fd
 452,29: VARIABLE
 452,29: ,
 452,31: const
 452,37: char
 452,42: *
 452,44: __fmt
 452,49: VARIABLE
 452,49: ,
 452,51: ...
 452,54: )
 
186 int 
 452,21: int
 
298 NAME VARIABLE 
 452,25: __fd
 452,29: VARIABLE
 
65 VARIABLE 
 452,29: VARIABLE
 
300 , parameter_declaration 
 452,29: ,
 452,31: const
 452,37: char
 452,42: *
 452,44: __fmt
 452,49: VARIABLE
 
391 const 
 452,31: const
 
103 char 
 452,37: char
 
298 * option_type_qualifier_list option_pointer 
 452,42: *
 
386 NAME VARIABLE 
 452,44: __fmt
 452,49: VARIABLE
 
65 VARIABLE 
 452,49: VARIABLE
 
300 , ... 
 452,49: ,
 452,51: ...
 
391 ... 
 452,51: ...
 
187 ) 
 452,54: )
 
60 ; 
 453,6: ;
 
23 extern 
 461,1: extern
 
8 int 
 461,8: int
 
5 NAME VARIABLE 
 461,12: fscanf
 461,18: VARIABLE
 
65 VARIABLE 
 461,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 461,19: (
 461,20: FILE
 461,24: TYPE
 461,25: *
 461,27: __stream
 461,35: VARIABLE
 461,35: ,
 462,6: const
 462,12: char
 462,17: *
 462,19: __format
 462,27: VARIABLE
 462,27: ,
 462,29: ...
 462,32: )
 
186 NAME TYPE 
 461,20: FILE
 461,24: TYPE
 
65 TYPE 
 461,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 461,25: *
 
386 NAME VARIABLE 
 461,27: __stream
 461,35: VARIABLE
 
65 VARIABLE 
 461,35: VARIABLE
 
300 , parameter_declaration 
 461,35: ,
 462,6: const
 462,12: char
 462,17: *
 462,19: __format
 462,27: VARIABLE
 
391 const 
 462,6: const
 
103 char 
 462,12: char
 
298 * option_type_qualifier_list option_pointer 
 462,17: *
 
386 NAME VARIABLE 
 462,19: __format
 462,27: VARIABLE
 
65 VARIABLE 
 462,27: VARIABLE
 
300 , ... 
 462,27: ,
 462,29: ...
 
391 ... 
 462,29: ...
 
187 ) 
 462,32: )
 
60 ; 
 462,34: ;
 
23 extern 
 467,1: extern
 
8 int 
 467,8: int
 
5 NAME VARIABLE 
 467,12: scanf
 467,17: VARIABLE
 
65 VARIABLE 
 467,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 467,18: (
 467,19: const
 467,25: char
 467,30: *
 467,32: __format
 467,40: VARIABLE
 467,40: ,
 467,42: ...
 467,45: )
 
186 const 
 467,19: const
 
103 char 
 467,25: char
 
298 * option_type_qualifier_list option_pointer 
 467,30: *
 
386 NAME VARIABLE 
 467,32: __format
 467,40: VARIABLE
 
65 VARIABLE 
 467,40: VARIABLE
 
300 , ... 
 467,40: ,
 467,42: ...
 
391 ... 
 467,42: ...
 
187 ) 
 467,45: )
 
60 ; 
 467,47: ;
 
23 extern 
 469,1: extern
 
8 int 
 469,8: int
 
5 NAME VARIABLE 
 469,12: sscanf
 469,18: VARIABLE
 
65 VARIABLE 
 469,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 469,19: (
 469,20: const
 469,26: char
 469,31: *
 469,33: __s
 469,36: VARIABLE
 469,36: ,
 470,6: const
 470,12: char
 470,17: *
 470,19: __format
 470,27: VARIABLE
 470,27: ,
 470,29: ...
 470,32: )
 
186 const 
 469,20: const
 
103 char 
 469,26: char
 
298 * option_type_qualifier_list option_pointer 
 469,31: *
 
386 NAME VARIABLE 
 469,33: __s
 469,36: VARIABLE
 
65 VARIABLE 
 469,36: VARIABLE
 
300 , parameter_declaration 
 469,36: ,
 470,6: const
 470,12: char
 470,17: *
 470,19: __format
 470,27: VARIABLE
 
391 const 
 470,6: const
 
103 char 
 470,12: char
 
298 * option_type_qualifier_list option_pointer 
 470,17: *
 
386 NAME VARIABLE 
 470,19: __format
 470,27: VARIABLE
 
65 VARIABLE 
 470,27: VARIABLE
 
300 , ... 
 470,27: ,
 470,29: ...
 
391 ... 
 470,29: ...
 
187 ) 
 470,32: )
 
60 ; 
 470,34: ;
 
23 extern 
 487,1: extern
 
8 int 
 487,8: int
 
5 NAME VARIABLE 
 487,12: fscanf
 487,18: VARIABLE
 
65 VARIABLE 
 487,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 487,19: (
 487,20: FILE
 487,24: TYPE
 487,25: *
 487,27: __stream
 487,35: VARIABLE
 487,35: ,
 487,37: const
 487,43: char
 487,48: *
 487,50: __format
 487,58: VARIABLE
 487,58: ,
 487,60: ...
 487,63: )
 
186 NAME TYPE 
 487,20: FILE
 487,24: TYPE
 
65 TYPE 
 487,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 487,25: *
 
386 NAME VARIABLE 
 487,27: __stream
 487,35: VARIABLE
 
65 VARIABLE 
 487,35: VARIABLE
 
300 , parameter_declaration 
 487,35: ,
 487,37: const
 487,43: char
 487,48: *
 487,50: __format
 487,58: VARIABLE
 
391 const 
 487,37: const
 
103 char 
 487,43: char
 
298 * option_type_qualifier_list option_pointer 
 487,48: *
 
386 NAME VARIABLE 
 487,50: __format
 487,58: VARIABLE
 
65 VARIABLE 
 487,58: VARIABLE
 
300 , ... 
 487,58: ,
 487,60: ...
 
391 ... 
 487,60: ...
 
187 ) 
 487,63: )
 
60 ; 
 489,32: ;
 
23 extern 
 490,1: extern
 
8 int 
 490,8: int
 
5 NAME VARIABLE 
 490,12: scanf
 490,17: VARIABLE
 
65 VARIABLE 
 490,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 490,18: (
 490,19: const
 490,25: char
 490,30: *
 490,32: __format
 490,40: VARIABLE
 490,40: ,
 490,42: ...
 490,45: )
 
186 const 
 490,19: const
 
103 char 
 490,25: char
 
298 * option_type_qualifier_list option_pointer 
 490,30: *
 
386 NAME VARIABLE 
 490,32: __format
 490,40: VARIABLE
 
65 VARIABLE 
 490,40: VARIABLE
 
300 , ... 
 490,40: ,
 490,42: ...
 
391 ... 
 490,42: ...
 
187 ) 
 490,45: )
 
60 ; 
 491,31: ;
 
23 extern 
 492,1: extern
 
8 int 
 492,8: int
 
5 NAME VARIABLE 
 492,12: sscanf
 492,18: VARIABLE
 
65 VARIABLE 
 492,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 492,19: (
 492,20: const
 492,26: char
 492,31: *
 492,33: __s
 492,36: VARIABLE
 492,36: ,
 492,38: const
 492,44: char
 492,49: *
 492,51: __format
 492,59: VARIABLE
 492,59: ,
 492,61: ...
 492,64: )
 
186 const 
 492,20: const
 
103 char 
 492,26: char
 
298 * option_type_qualifier_list option_pointer 
 492,31: *
 
386 NAME VARIABLE 
 492,33: __s
 492,36: VARIABLE
 
65 VARIABLE 
 492,36: VARIABLE
 
300 , parameter_declaration 
 492,36: ,
 492,38: const
 492,44: char
 492,49: *
 492,51: __format
 492,59: VARIABLE
 
391 const 
 492,38: const
 
103 char 
 492,44: char
 
298 * option_type_qualifier_list option_pointer 
 492,49: *
 
386 NAME VARIABLE 
 492,51: __format
 492,59: VARIABLE
 
65 VARIABLE 
 492,59: VARIABLE
 
300 , ... 
 492,59: ,
 492,61: ...
 
391 ... 
 492,61: ...
 
187 ) 
 492,64: )
 
60 ; 
 494,23: ;
 
23 extern 
 496,1: extern
 
8 int 
 496,8: int
 
5 NAME VARIABLE 
 496,12: vfscanf
 496,19: VARIABLE
 
65 VARIABLE 
 496,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 496,20: (
 496,21: FILE
 496,25: TYPE
 496,26: *
 496,28: __s
 496,31: VARIABLE
 496,31: ,
 496,33: const
 496,39: char
 496,44: *
 496,46: __format
 496,54: VARIABLE
 496,54: ,
 497,7: __gnuc_va_list
 497,21: TYPE
 497,22: __arg
 497,27: VARIABLE
 497,27: )
 
186 NAME TYPE 
 496,21: FILE
 496,25: TYPE
 
65 TYPE 
 496,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 496,26: *
 
386 NAME VARIABLE 
 496,28: __s
 496,31: VARIABLE
 
65 VARIABLE 
 496,31: VARIABLE
 
300 , parameter_declaration 
 496,31: ,
 496,33: const
 496,39: char
 496,44: *
 496,46: __format
 496,54: VARIABLE
 
391 const 
 496,33: const
 
103 char 
 496,39: char
 
298 * option_type_qualifier_list option_pointer 
 496,44: *
 
386 NAME VARIABLE 
 496,46: __format
 496,54: VARIABLE
 
65 VARIABLE 
 496,54: VARIABLE
 
300 , parameter_declaration 
 496,54: ,
 497,7: __gnuc_va_list
 497,21: TYPE
 497,22: __arg
 497,27: VARIABLE
 
391 NAME TYPE 
 497,7: __gnuc_va_list
 497,21: TYPE
 
26 TYPE 
 497,21: TYPE
 
298 NAME VARIABLE 
 497,22: __arg
 497,27: VARIABLE
 
65 VARIABLE 
 497,27: VARIABLE
 
187 ) 
 497,27: )
 
60 ; 
 498,7: ;
 
23 extern 
 504,1: extern
 
8 int 
 504,8: int
 
5 NAME VARIABLE 
 504,12: vscanf
 504,18: VARIABLE
 
65 VARIABLE 
 504,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 504,19: (
 504,20: const
 504,26: char
 504,31: *
 504,33: __format
 504,41: VARIABLE
 504,41: ,
 504,43: __gnuc_va_list
 504,57: TYPE
 504,58: __arg
 504,63: VARIABLE
 504,63: )
 
186 const 
 504,20: const
 
103 char 
 504,26: char
 
298 * option_type_qualifier_list option_pointer 
 504,31: *
 
386 NAME VARIABLE 
 504,33: __format
 504,41: VARIABLE
 
65 VARIABLE 
 504,41: VARIABLE
 
300 , parameter_declaration 
 504,41: ,
 504,43: __gnuc_va_list
 504,57: TYPE
 504,58: __arg
 504,63: VARIABLE
 
391 NAME TYPE 
 504,43: __gnuc_va_list
 504,57: TYPE
 
26 TYPE 
 504,57: TYPE
 
298 NAME VARIABLE 
 504,58: __arg
 504,63: VARIABLE
 
65 VARIABLE 
 504,63: VARIABLE
 
187 ) 
 504,63: )
 
60 ; 
 505,7: ;
 
23 extern 
 508,1: extern
 
8 int 
 508,8: int
 
5 NAME VARIABLE 
 508,12: vsscanf
 508,19: VARIABLE
 
65 VARIABLE 
 508,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 508,20: (
 508,21: const
 508,27: char
 508,32: *
 508,34: __s
 508,37: VARIABLE
 508,37: ,
 509,7: const
 509,13: char
 509,18: *
 509,20: __format
 509,28: VARIABLE
 509,28: ,
 509,30: __gnuc_va_list
 509,44: TYPE
 509,45: __arg
 509,50: VARIABLE
 509,50: )
 
186 const 
 508,21: const
 
103 char 
 508,27: char
 
298 * option_type_qualifier_list option_pointer 
 508,32: *
 
386 NAME VARIABLE 
 508,34: __s
 508,37: VARIABLE
 
65 VARIABLE 
 508,37: VARIABLE
 
300 , parameter_declaration 
 508,37: ,
 509,7: const
 509,13: char
 509,18: *
 509,20: __format
 509,28: VARIABLE
 
391 const 
 509,7: const
 
103 char 
 509,13: char
 
298 * option_type_qualifier_list option_pointer 
 509,18: *
 
386 NAME VARIABLE 
 509,20: __format
 509,28: VARIABLE
 
65 VARIABLE 
 509,28: VARIABLE
 
300 , parameter_declaration 
 509,28: ,
 509,30: __gnuc_va_list
 509,44: TYPE
 509,45: __arg
 509,50: VARIABLE
 
391 NAME TYPE 
 509,30: __gnuc_va_list
 509,44: TYPE
 
26 TYPE 
 509,44: TYPE
 
298 NAME VARIABLE 
 509,45: __arg
 509,50: VARIABLE
 
65 VARIABLE 
 509,50: VARIABLE
 
187 ) 
 509,50: )
 
60 ; 
 510,7: ;
 
23 extern 
 516,1: extern
 
8 int 
 516,8: int
 
5 NAME VARIABLE 
 516,12: vfscanf
 516,19: VARIABLE
 
65 VARIABLE 
 516,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 516,20: (
 516,21: FILE
 516,25: TYPE
 516,26: *
 516,28: __s
 516,31: VARIABLE
 516,31: ,
 516,33: const
 516,39: char
 516,44: *
 516,46: __format
 516,54: VARIABLE
 516,54: ,
 516,56: __gnuc_va_list
 516,70: TYPE
 516,71: __arg
 516,76: VARIABLE
 516,76: )
 
186 NAME TYPE 
 516,21: FILE
 516,25: TYPE
 
65 TYPE 
 516,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 516,26: *
 
386 NAME VARIABLE 
 516,28: __s
 516,31: VARIABLE
 
65 VARIABLE 
 516,31: VARIABLE
 
300 , parameter_declaration 
 516,31: ,
 516,33: const
 516,39: char
 516,44: *
 516,46: __format
 516,54: VARIABLE
 
391 const 
 516,33: const
 
103 char 
 516,39: char
 
298 * option_type_qualifier_list option_pointer 
 516,44: *
 
386 NAME VARIABLE 
 516,46: __format
 516,54: VARIABLE
 
65 VARIABLE 
 516,54: VARIABLE
 
300 , parameter_declaration 
 516,54: ,
 516,56: __gnuc_va_list
 516,70: TYPE
 516,71: __arg
 516,76: VARIABLE
 
391 NAME TYPE 
 516,56: __gnuc_va_list
 516,70: TYPE
 
26 TYPE 
 516,70: TYPE
 
298 NAME VARIABLE 
 516,71: __arg
 516,76: VARIABLE
 
65 VARIABLE 
 516,76: VARIABLE
 
187 ) 
 516,76: )
 
60 ; 
 520,7: ;
 
23 extern 
 521,1: extern
 
8 int 
 521,8: int
 
5 NAME VARIABLE 
 521,12: vscanf
 521,18: VARIABLE
 
65 VARIABLE 
 521,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 521,19: (
 521,20: const
 521,26: char
 521,31: *
 521,33: __format
 521,41: VARIABLE
 521,41: ,
 521,43: __gnuc_va_list
 521,57: TYPE
 521,58: __arg
 521,63: VARIABLE
 521,63: )
 
186 const 
 521,20: const
 
103 char 
 521,26: char
 
298 * option_type_qualifier_list option_pointer 
 521,31: *
 
386 NAME VARIABLE 
 521,33: __format
 521,41: VARIABLE
 
65 VARIABLE 
 521,41: VARIABLE
 
300 , parameter_declaration 
 521,41: ,
 521,43: __gnuc_va_list
 521,57: TYPE
 521,58: __arg
 521,63: VARIABLE
 
391 NAME TYPE 
 521,43: __gnuc_va_list
 521,57: TYPE
 
26 TYPE 
 521,57: TYPE
 
298 NAME VARIABLE 
 521,58: __arg
 521,63: VARIABLE
 
65 VARIABLE 
 521,63: VARIABLE
 
187 ) 
 521,63: )
 
60 ; 
 523,7: ;
 
23 extern 
 524,1: extern
 
8 int 
 524,8: int
 
5 NAME VARIABLE 
 524,12: vsscanf
 524,19: VARIABLE
 
65 VARIABLE 
 524,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 524,20: (
 524,21: const
 524,27: char
 524,32: *
 524,34: __s
 524,37: VARIABLE
 524,37: ,
 524,39: const
 524,45: char
 524,50: *
 524,52: __format
 524,60: VARIABLE
 524,60: ,
 524,62: __gnuc_va_list
 524,76: TYPE
 524,77: __arg
 524,82: VARIABLE
 524,82: )
 
186 const 
 524,21: const
 
103 char 
 524,27: char
 
298 * option_type_qualifier_list option_pointer 
 524,32: *
 
386 NAME VARIABLE 
 524,34: __s
 524,37: VARIABLE
 
65 VARIABLE 
 524,37: VARIABLE
 
300 , parameter_declaration 
 524,37: ,
 524,39: const
 524,45: char
 524,50: *
 524,52: __format
 524,60: VARIABLE
 
391 const 
 524,39: const
 
103 char 
 524,45: char
 
298 * option_type_qualifier_list option_pointer 
 524,50: *
 
386 NAME VARIABLE 
 524,52: __format
 524,60: VARIABLE
 
65 VARIABLE 
 524,60: VARIABLE
 
300 , parameter_declaration 
 524,60: ,
 524,62: __gnuc_va_list
 524,76: TYPE
 524,77: __arg
 524,82: VARIABLE
 
391 NAME TYPE 
 524,62: __gnuc_va_list
 524,76: TYPE
 
26 TYPE 
 524,76: TYPE
 
298 NAME VARIABLE 
 524,77: __arg
 524,82: VARIABLE
 
65 VARIABLE 
 524,82: VARIABLE
 
187 ) 
 524,82: )
 
60 ; 
 528,6: ;
 
23 extern 
 530,1: extern
 
8 int 
 530,8: int
 
5 NAME VARIABLE 
 530,12: fgetc
 530,17: VARIABLE
 
65 VARIABLE 
 530,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 530,18: (
 530,19: FILE
 530,23: TYPE
 530,24: *
 530,25: __stream
 530,33: VARIABLE
 530,33: )
 
186 NAME TYPE 
 530,19: FILE
 530,23: TYPE
 
65 TYPE 
 530,23: TYPE
 
298 * option_type_qualifier_list option_pointer 
 530,24: *
 
386 NAME VARIABLE 
 530,25: __stream
 530,33: VARIABLE
 
65 VARIABLE 
 530,33: VARIABLE
 
187 ) 
 530,33: )
 
60 ; 
 530,34: ;
 
23 extern 
 531,1: extern
 
8 int 
 531,8: int
 
5 NAME VARIABLE 
 531,12: getc
 531,16: VARIABLE
 
65 VARIABLE 
 531,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 531,17: (
 531,18: FILE
 531,22: TYPE
 531,23: *
 531,24: __stream
 531,32: VARIABLE
 531,32: )
 
186 NAME TYPE 
 531,18: FILE
 531,22: TYPE
 
65 TYPE 
 531,22: TYPE
 
298 * option_type_qualifier_list option_pointer 
 531,23: *
 
386 NAME VARIABLE 
 531,24: __stream
 531,32: VARIABLE
 
65 VARIABLE 
 531,32: VARIABLE
 
187 ) 
 531,32: )
 
60 ; 
 531,33: ;
 
23 extern 
 537,1: extern
 
8 int 
 537,8: int
 
5 NAME VARIABLE 
 537,12: getchar
 537,19: VARIABLE
 
65 VARIABLE 
 537,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 537,20: (
 537,21: void
 537,25: )
 
186 void 
 537,21: void
 
187 ) 
 537,25: )
 
60 ; 
 537,26: ;
 
23 extern 
 544,1: extern
 
8 int 
 544,8: int
 
5 NAME VARIABLE 
 544,12: getc_unlocked
 544,25: VARIABLE
 
65 VARIABLE 
 544,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 544,26: (
 544,27: FILE
 544,31: TYPE
 544,32: *
 544,33: __stream
 544,41: VARIABLE
 544,41: )
 
186 NAME TYPE 
 544,27: FILE
 544,31: TYPE
 
65 TYPE 
 544,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 544,32: *
 
386 NAME VARIABLE 
 544,33: __stream
 544,41: VARIABLE
 
65 VARIABLE 
 544,41: VARIABLE
 
187 ) 
 544,41: )
 
60 ; 
 544,42: ;
 
23 extern 
 545,1: extern
 
8 int 
 545,8: int
 
5 NAME VARIABLE 
 545,12: getchar_unlocked
 545,28: VARIABLE
 
65 VARIABLE 
 545,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 545,29: (
 545,30: void
 545,34: )
 
186 void 
 545,30: void
 
187 ) 
 545,34: )
 
60 ; 
 545,35: ;
 
23 extern 
 547,1: extern
 
8 int 
 547,8: int
 
5 NAME VARIABLE 
 547,12: fgetc_unlocked
 547,26: VARIABLE
 
65 VARIABLE 
 547,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 547,27: (
 547,28: FILE
 547,32: TYPE
 547,33: *
 547,34: __stream
 547,42: VARIABLE
 547,42: )
 
186 NAME TYPE 
 547,28: FILE
 547,32: TYPE
 
65 TYPE 
 547,32: TYPE
 
298 * option_type_qualifier_list option_pointer 
 547,33: *
 
386 NAME VARIABLE 
 547,34: __stream
 547,42: VARIABLE
 
65 VARIABLE 
 547,42: VARIABLE
 
187 ) 
 547,42: )
 
60 ; 
 547,43: ;
 
23 extern 
 549,1: extern
 
8 int 
 549,8: int
 
5 NAME VARIABLE 
 549,12: fputc
 549,17: VARIABLE
 
65 VARIABLE 
 549,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 549,18: (
 549,19: int
 549,23: __c
 549,26: VARIABLE
 549,26: ,
 549,28: FILE
 549,32: TYPE
 549,33: *
 549,34: __stream
 549,42: VARIABLE
 549,42: )
 
186 int 
 549,19: int
 
298 NAME VARIABLE 
 549,23: __c
 549,26: VARIABLE
 
65 VARIABLE 
 549,26: VARIABLE
 
300 , parameter_declaration 
 549,26: ,
 549,28: FILE
 549,32: TYPE
 549,33: *
 549,34: __stream
 549,42: VARIABLE
 
391 NAME TYPE 
 549,28: FILE
 549,32: TYPE
 
26 TYPE 
 549,32: TYPE
 
298 * option_type_qualifier_list option_pointer 
 549,33: *
 
386 NAME VARIABLE 
 549,34: __stream
 549,42: VARIABLE
 
65 VARIABLE 
 549,42: VARIABLE
 
187 ) 
 549,42: )
 
60 ; 
 549,43: ;
 
23 extern 
 550,1: extern
 
8 int 
 550,8: int
 
5 NAME VARIABLE 
 550,12: putc
 550,16: VARIABLE
 
65 VARIABLE 
 550,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 550,17: (
 550,18: int
 550,22: __c
 550,25: VARIABLE
 550,25: ,
 550,27: FILE
 550,31: TYPE
 550,32: *
 550,33: __stream
 550,41: VARIABLE
 550,41: )
 
186 int 
 550,18: int
 
298 NAME VARIABLE 
 550,22: __c
 550,25: VARIABLE
 
65 VARIABLE 
 550,25: VARIABLE
 
300 , parameter_declaration 
 550,25: ,
 550,27: FILE
 550,31: TYPE
 550,32: *
 550,33: __stream
 550,41: VARIABLE
 
391 NAME TYPE 
 550,27: FILE
 550,31: TYPE
 
26 TYPE 
 550,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 550,32: *
 
386 NAME VARIABLE 
 550,33: __stream
 550,41: VARIABLE
 
65 VARIABLE 
 550,41: VARIABLE
 
187 ) 
 550,41: )
 
60 ; 
 550,42: ;
 
23 extern 
 556,1: extern
 
8 int 
 556,8: int
 
5 NAME VARIABLE 
 556,12: putchar
 556,19: VARIABLE
 
65 VARIABLE 
 556,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 556,20: (
 556,21: int
 556,25: __c
 556,28: VARIABLE
 556,28: )
 
186 int 
 556,21: int
 
298 NAME VARIABLE 
 556,25: __c
 556,28: VARIABLE
 
65 VARIABLE 
 556,28: VARIABLE
 
187 ) 
 556,28: )
 
60 ; 
 556,29: ;
 
23 extern 
 558,1: extern
 
8 int 
 558,8: int
 
5 NAME VARIABLE 
 558,12: fputc_unlocked
 558,26: VARIABLE
 
65 VARIABLE 
 558,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 558,27: (
 558,28: int
 558,32: __c
 558,35: VARIABLE
 558,35: ,
 558,37: FILE
 558,41: TYPE
 558,42: *
 558,43: __stream
 558,51: VARIABLE
 558,51: )
 
186 int 
 558,28: int
 
298 NAME VARIABLE 
 558,32: __c
 558,35: VARIABLE
 
65 VARIABLE 
 558,35: VARIABLE
 
300 , parameter_declaration 
 558,35: ,
 558,37: FILE
 558,41: TYPE
 558,42: *
 558,43: __stream
 558,51: VARIABLE
 
391 NAME TYPE 
 558,37: FILE
 558,41: TYPE
 
26 TYPE 
 558,41: TYPE
 
298 * option_type_qualifier_list option_pointer 
 558,42: *
 
386 NAME VARIABLE 
 558,43: __stream
 558,51: VARIABLE
 
65 VARIABLE 
 558,51: VARIABLE
 
187 ) 
 558,51: )
 
60 ; 
 558,52: ;
 
23 extern 
 566,1: extern
 
8 int 
 566,8: int
 
5 NAME VARIABLE 
 566,12: putc_unlocked
 566,25: VARIABLE
 
65 VARIABLE 
 566,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 566,26: (
 566,27: int
 566,31: __c
 566,34: VARIABLE
 566,34: ,
 566,36: FILE
 566,40: TYPE
 566,41: *
 566,42: __stream
 566,50: VARIABLE
 566,50: )
 
186 int 
 566,27: int
 
298 NAME VARIABLE 
 566,31: __c
 566,34: VARIABLE
 
65 VARIABLE 
 566,34: VARIABLE
 
300 , parameter_declaration 
 566,34: ,
 566,36: FILE
 566,40: TYPE
 566,41: *
 566,42: __stream
 566,50: VARIABLE
 
391 NAME TYPE 
 566,36: FILE
 566,40: TYPE
 
26 TYPE 
 566,40: TYPE
 
298 * option_type_qualifier_list option_pointer 
 566,41: *
 
386 NAME VARIABLE 
 566,42: __stream
 566,50: VARIABLE
 
65 VARIABLE 
 566,50: VARIABLE
 
187 ) 
 566,50: )
 
60 ; 
 566,51: ;
 
23 extern 
 567,1: extern
 
8 int 
 567,8: int
 
5 NAME VARIABLE 
 567,12: putchar_unlocked
 567,28: VARIABLE
 
65 VARIABLE 
 567,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 567,29: (
 567,30: int
 567,34: __c
 567,37: VARIABLE
 567,37: )
 
186 int 
 567,30: int
 
298 NAME VARIABLE 
 567,34: __c
 567,37: VARIABLE
 
65 VARIABLE 
 567,37: VARIABLE
 
187 ) 
 567,37: )
 
60 ; 
 567,38: ;
 
23 extern 
 574,1: extern
 
8 int 
 574,8: int
 
5 NAME VARIABLE 
 574,12: getw
 574,16: VARIABLE
 
65 VARIABLE 
 574,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 574,17: (
 574,18: FILE
 574,22: TYPE
 574,23: *
 574,24: __stream
 574,32: VARIABLE
 574,32: )
 
186 NAME TYPE 
 574,18: FILE
 574,22: TYPE
 
65 TYPE 
 574,22: TYPE
 
298 * option_type_qualifier_list option_pointer 
 574,23: *
 
386 NAME VARIABLE 
 574,24: __stream
 574,32: VARIABLE
 
65 VARIABLE 
 574,32: VARIABLE
 
187 ) 
 574,32: )
 
60 ; 
 574,33: ;
 
23 extern 
 577,1: extern
 
8 int 
 577,8: int
 
5 NAME VARIABLE 
 577,12: putw
 577,16: VARIABLE
 
65 VARIABLE 
 577,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 577,17: (
 577,18: int
 577,22: __w
 577,25: VARIABLE
 577,25: ,
 577,27: FILE
 577,31: TYPE
 577,32: *
 577,33: __stream
 577,41: VARIABLE
 577,41: )
 
186 int 
 577,18: int
 
298 NAME VARIABLE 
 577,22: __w
 577,25: VARIABLE
 
65 VARIABLE 
 577,25: VARIABLE
 
300 , parameter_declaration 
 577,25: ,
 577,27: FILE
 577,31: TYPE
 577,32: *
 577,33: __stream
 577,41: VARIABLE
 
391 NAME TYPE 
 577,27: FILE
 577,31: TYPE
 
26 TYPE 
 577,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 577,32: *
 
386 NAME VARIABLE 
 577,33: __stream
 577,41: VARIABLE
 
65 VARIABLE 
 577,41: VARIABLE
 
187 ) 
 577,41: )
 
60 ; 
 577,42: ;
 
23 extern 
 585,1: extern
 
8 char 
 585,8: char
 
5 * option_type_qualifier_list option_pointer 
 585,13: *
 
64 NAME VARIABLE 
 585,14: fgets
 585,19: VARIABLE
 
65 VARIABLE 
 585,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 585,20: (
 585,21: char
 585,26: *
 585,28: __s
 585,31: VARIABLE
 585,31: ,
 585,33: int
 585,37: __n
 585,40: VARIABLE
 585,40: ,
 585,42: FILE
 585,46: TYPE
 585,47: *
 585,49: __stream
 585,57: VARIABLE
 585,57: )
 
186 char 
 585,21: char
 
298 * option_type_qualifier_list option_pointer 
 585,26: *
 
386 NAME VARIABLE 
 585,28: __s
 585,31: VARIABLE
 
65 VARIABLE 
 585,31: VARIABLE
 
300 , parameter_declaration 
 585,31: ,
 585,33: int
 585,37: __n
 585,40: VARIABLE
 
391 int 
 585,33: int
 
298 NAME VARIABLE 
 585,37: __n
 585,40: VARIABLE
 
65 VARIABLE 
 585,40: VARIABLE
 
300 , parameter_declaration 
 585,40: ,
 585,42: FILE
 585,46: TYPE
 585,47: *
 585,49: __stream
 585,57: VARIABLE
 
391 NAME TYPE 
 585,42: FILE
 585,46: TYPE
 
26 TYPE 
 585,46: TYPE
 
298 * option_type_qualifier_list option_pointer 
 585,47: *
 
386 NAME VARIABLE 
 585,49: __stream
 585,57: VARIABLE
 
65 VARIABLE 
 585,57: VARIABLE
 
187 ) 
 585,57: )
 
60 ; 
 586,6: ;
 
23 extern 
 588,1: extern
 
8 NAME TYPE 
 588,8: __ssize_t
 588,17: TYPE
 
26 TYPE 
 588,17: TYPE
 
5 NAME VARIABLE 
 588,18: __getdelim
 588,28: VARIABLE
 
65 VARIABLE 
 588,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 588,29: (
 588,30: char
 588,35: *
 588,36: *
 588,38: __lineptr
 588,47: VARIABLE
 588,47: ,
 589,30: size_t
 589,36: TYPE
 589,37: *
 589,39: __n
 589,42: VARIABLE
 589,42: ,
 589,44: int
 589,48: __delimiter
 589,59: VARIABLE
 589,59: ,
 590,30: FILE
 590,34: TYPE
 590,35: *
 590,37: __stream
 590,45: VARIABLE
 590,45: )
 
186 char 
 588,30: char
 
298 * option_type_qualifier_list option_pointer 
 588,35: *
 588,36: *
 
116 * option_type_qualifier_list option_pointer 
 588,36: *
 
386 NAME VARIABLE 
 588,38: __lineptr
 588,47: VARIABLE
 
65 VARIABLE 
 588,47: VARIABLE
 
300 , parameter_declaration 
 588,47: ,
 589,30: size_t
 589,36: TYPE
 589,37: *
 589,39: __n
 589,42: VARIABLE
 
391 NAME TYPE 
 589,30: size_t
 589,36: TYPE
 
26 TYPE 
 589,36: TYPE
 
298 * option_type_qualifier_list option_pointer 
 589,37: *
 
386 NAME VARIABLE 
 589,39: __n
 589,42: VARIABLE
 
65 VARIABLE 
 589,42: VARIABLE
 
300 , parameter_declaration 
 589,42: ,
 589,44: int
 589,48: __delimiter
 589,59: VARIABLE
 
391 int 
 589,44: int
 
298 NAME VARIABLE 
 589,48: __delimiter
 589,59: VARIABLE
 
65 VARIABLE 
 589,59: VARIABLE
 
300 , parameter_declaration 
 589,59: ,
 590,30: FILE
 590,34: TYPE
 590,35: *
 590,37: __stream
 590,45: VARIABLE
 
391 NAME TYPE 
 590,30: FILE
 590,34: TYPE
 
26 TYPE 
 590,34: TYPE
 
298 * option_type_qualifier_list option_pointer 
 590,35: *
 
386 NAME VARIABLE 
 590,37: __stream
 590,45: VARIABLE
 
65 VARIABLE 
 590,45: VARIABLE
 
187 ) 
 590,45: )
 
60 ; 
 590,47: ;
 
23 extern 
 591,1: extern
 
8 NAME TYPE 
 591,8: __ssize_t
 591,17: TYPE
 
26 TYPE 
 591,17: TYPE
 
5 NAME VARIABLE 
 591,18: getdelim
 591,26: VARIABLE
 
65 VARIABLE 
 591,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 591,27: (
 591,28: char
 591,33: *
 591,34: *
 591,36: __lineptr
 591,45: VARIABLE
 591,45: ,
 592,28: size_t
 592,34: TYPE
 592,35: *
 592,37: __n
 592,40: VARIABLE
 592,40: ,
 592,42: int
 592,46: __delimiter
 592,57: VARIABLE
 592,57: ,
 593,28: FILE
 593,32: TYPE
 593,33: *
 593,35: __stream
 593,43: VARIABLE
 593,43: )
 
186 char 
 591,28: char
 
298 * option_type_qualifier_list option_pointer 
 591,33: *
 591,34: *
 
116 * option_type_qualifier_list option_pointer 
 591,34: *
 
386 NAME VARIABLE 
 591,36: __lineptr
 591,45: VARIABLE
 
65 VARIABLE 
 591,45: VARIABLE
 
300 , parameter_declaration 
 591,45: ,
 592,28: size_t
 592,34: TYPE
 592,35: *
 592,37: __n
 592,40: VARIABLE
 
391 NAME TYPE 
 592,28: size_t
 592,34: TYPE
 
26 TYPE 
 592,34: TYPE
 
298 * option_type_qualifier_list option_pointer 
 592,35: *
 
386 NAME VARIABLE 
 592,37: __n
 592,40: VARIABLE
 
65 VARIABLE 
 592,40: VARIABLE
 
300 , parameter_declaration 
 592,40: ,
 592,42: int
 592,46: __delimiter
 592,57: VARIABLE
 
391 int 
 592,42: int
 
298 NAME VARIABLE 
 592,46: __delimiter
 592,57: VARIABLE
 
65 VARIABLE 
 592,57: VARIABLE
 
300 , parameter_declaration 
 592,57: ,
 593,28: FILE
 593,32: TYPE
 593,33: *
 593,35: __stream
 593,43: VARIABLE
 
391 NAME TYPE 
 593,28: FILE
 593,32: TYPE
 
26 TYPE 
 593,32: TYPE
 
298 * option_type_qualifier_list option_pointer 
 593,33: *
 
386 NAME VARIABLE 
 593,35: __stream
 593,43: VARIABLE
 
65 VARIABLE 
 593,43: VARIABLE
 
187 ) 
 593,43: )
 
60 ; 
 593,45: ;
 
23 extern 
 601,1: extern
 
8 NAME TYPE 
 601,8: __ssize_t
 601,17: TYPE
 
26 TYPE 
 601,17: TYPE
 
5 NAME VARIABLE 
 601,18: getline
 601,25: VARIABLE
 
65 VARIABLE 
 601,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 601,26: (
 601,27: char
 601,32: *
 601,33: *
 601,35: __lineptr
 601,44: VARIABLE
 601,44: ,
 602,27: size_t
 602,33: TYPE
 602,34: *
 602,36: __n
 602,39: VARIABLE
 602,39: ,
 603,27: FILE
 603,31: TYPE
 603,32: *
 603,34: __stream
 603,42: VARIABLE
 603,42: )
 
186 char 
 601,27: char
 
298 * option_type_qualifier_list option_pointer 
 601,32: *
 601,33: *
 
116 * option_type_qualifier_list option_pointer 
 601,33: *
 
386 NAME VARIABLE 
 601,35: __lineptr
 601,44: VARIABLE
 
65 VARIABLE 
 601,44: VARIABLE
 
300 , parameter_declaration 
 601,44: ,
 602,27: size_t
 602,33: TYPE
 602,34: *
 602,36: __n
 602,39: VARIABLE
 
391 NAME TYPE 
 602,27: size_t
 602,33: TYPE
 
26 TYPE 
 602,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 602,34: *
 
386 NAME VARIABLE 
 602,36: __n
 602,39: VARIABLE
 
65 VARIABLE 
 602,39: VARIABLE
 
300 , parameter_declaration 
 602,39: ,
 603,27: FILE
 603,31: TYPE
 603,32: *
 603,34: __stream
 603,42: VARIABLE
 
391 NAME TYPE 
 603,27: FILE
 603,31: TYPE
 
26 TYPE 
 603,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 603,32: *
 
386 NAME VARIABLE 
 603,34: __stream
 603,42: VARIABLE
 
65 VARIABLE 
 603,42: VARIABLE
 
187 ) 
 603,42: )
 
60 ; 
 603,44: ;
 
23 extern 
 611,1: extern
 
8 int 
 611,8: int
 
5 NAME VARIABLE 
 611,12: fputs
 611,17: VARIABLE
 
65 VARIABLE 
 611,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 611,18: (
 611,19: const
 611,25: char
 611,30: *
 611,32: __s
 611,35: VARIABLE
 611,35: ,
 611,37: FILE
 611,41: TYPE
 611,42: *
 611,44: __stream
 611,52: VARIABLE
 611,52: )
 
186 const 
 611,19: const
 
103 char 
 611,25: char
 
298 * option_type_qualifier_list option_pointer 
 611,30: *
 
386 NAME VARIABLE 
 611,32: __s
 611,35: VARIABLE
 
65 VARIABLE 
 611,35: VARIABLE
 
300 , parameter_declaration 
 611,35: ,
 611,37: FILE
 611,41: TYPE
 611,42: *
 611,44: __stream
 611,52: VARIABLE
 
391 NAME TYPE 
 611,37: FILE
 611,41: TYPE
 
26 TYPE 
 611,41: TYPE
 
298 * option_type_qualifier_list option_pointer 
 611,42: *
 
386 NAME VARIABLE 
 611,44: __stream
 611,52: VARIABLE
 
65 VARIABLE 
 611,52: VARIABLE
 
187 ) 
 611,52: )
 
60 ; 
 611,53: ;
 
23 extern 
 617,1: extern
 
8 int 
 617,8: int
 
5 NAME VARIABLE 
 617,12: puts
 617,16: VARIABLE
 
65 VARIABLE 
 617,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 617,17: (
 617,18: const
 617,24: char
 617,29: *
 617,30: __s
 617,33: VARIABLE
 617,33: )
 
186 const 
 617,18: const
 
103 char 
 617,24: char
 
298 * option_type_qualifier_list option_pointer 
 617,29: *
 
386 NAME VARIABLE 
 617,30: __s
 617,33: VARIABLE
 
65 VARIABLE 
 617,33: VARIABLE
 
187 ) 
 617,33: )
 
60 ; 
 617,34: ;
 
23 extern 
 624,1: extern
 
8 int 
 624,8: int
 
5 NAME VARIABLE 
 624,12: ungetc
 624,18: VARIABLE
 
65 VARIABLE 
 624,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 624,19: (
 624,20: int
 624,24: __c
 624,27: VARIABLE
 624,27: ,
 624,29: FILE
 624,33: TYPE
 624,34: *
 624,35: __stream
 624,43: VARIABLE
 624,43: )
 
186 int 
 624,20: int
 
298 NAME VARIABLE 
 624,24: __c
 624,27: VARIABLE
 
65 VARIABLE 
 624,27: VARIABLE
 
300 , parameter_declaration 
 624,27: ,
 624,29: FILE
 624,33: TYPE
 624,34: *
 624,35: __stream
 624,43: VARIABLE
 
391 NAME TYPE 
 624,29: FILE
 624,33: TYPE
 
26 TYPE 
 624,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 624,34: *
 
386 NAME VARIABLE 
 624,35: __stream
 624,43: VARIABLE
 
65 VARIABLE 
 624,43: VARIABLE
 
187 ) 
 624,43: )
 
60 ; 
 624,44: ;
 
23 extern 
 631,1: extern
 
8 NAME TYPE 
 631,8: size_t
 631,14: TYPE
 
26 TYPE 
 631,14: TYPE
 
5 NAME VARIABLE 
 631,15: fread
 631,20: VARIABLE
 
65 VARIABLE 
 631,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 631,21: (
 631,22: void
 631,27: *
 631,29: __ptr
 631,34: VARIABLE
 631,34: ,
 631,36: size_t
 631,42: TYPE
 631,43: __size
 631,49: VARIABLE
 631,49: ,
 632,8: size_t
 632,14: TYPE
 632,15: __n
 632,18: VARIABLE
 632,18: ,
 632,20: FILE
 632,24: TYPE
 632,25: *
 632,27: __stream
 632,35: VARIABLE
 632,35: )
 
186 void 
 631,22: void
 
298 * option_type_qualifier_list option_pointer 
 631,27: *
 
386 NAME VARIABLE 
 631,29: __ptr
 631,34: VARIABLE
 
65 VARIABLE 
 631,34: VARIABLE
 
300 , parameter_declaration 
 631,34: ,
 631,36: size_t
 631,42: TYPE
 631,43: __size
 631,49: VARIABLE
 
391 NAME TYPE 
 631,36: size_t
 631,42: TYPE
 
26 TYPE 
 631,42: TYPE
 
298 NAME VARIABLE 
 631,43: __size
 631,49: VARIABLE
 
65 VARIABLE 
 631,49: VARIABLE
 
300 , parameter_declaration 
 631,49: ,
 632,8: size_t
 632,14: TYPE
 632,15: __n
 632,18: VARIABLE
 
391 NAME TYPE 
 632,8: size_t
 632,14: TYPE
 
26 TYPE 
 632,14: TYPE
 
298 NAME VARIABLE 
 632,15: __n
 632,18: VARIABLE
 
65 VARIABLE 
 632,18: VARIABLE
 
300 , parameter_declaration 
 632,18: ,
 632,20: FILE
 632,24: TYPE
 632,25: *
 632,27: __stream
 632,35: VARIABLE
 
391 NAME TYPE 
 632,20: FILE
 632,24: TYPE
 
26 TYPE 
 632,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 632,25: *
 
386 NAME VARIABLE 
 632,27: __stream
 632,35: VARIABLE
 
65 VARIABLE 
 632,35: VARIABLE
 
187 ) 
 632,35: )
 
60 ; 
 632,37: ;
 
23 extern 
 637,1: extern
 
8 NAME TYPE 
 637,8: size_t
 637,14: TYPE
 
26 TYPE 
 637,14: TYPE
 
5 NAME VARIABLE 
 637,15: fwrite
 637,21: VARIABLE
 
65 VARIABLE 
 637,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 637,22: (
 637,23: const
 637,29: void
 637,34: *
 637,36: __ptr
 637,41: VARIABLE
 637,41: ,
 637,43: size_t
 637,49: TYPE
 637,50: __size
 637,56: VARIABLE
 637,56: ,
 638,9: size_t
 638,15: TYPE
 638,16: __n
 638,19: VARIABLE
 638,19: ,
 638,21: FILE
 638,25: TYPE
 638,26: *
 638,28: __s
 638,31: VARIABLE
 638,31: )
 
186 const 
 637,23: const
 
103 void 
 637,29: void
 
298 * option_type_qualifier_list option_pointer 
 637,34: *
 
386 NAME VARIABLE 
 637,36: __ptr
 637,41: VARIABLE
 
65 VARIABLE 
 637,41: VARIABLE
 
300 , parameter_declaration 
 637,41: ,
 637,43: size_t
 637,49: TYPE
 637,50: __size
 637,56: VARIABLE
 
391 NAME TYPE 
 637,43: size_t
 637,49: TYPE
 
26 TYPE 
 637,49: TYPE
 
298 NAME VARIABLE 
 637,50: __size
 637,56: VARIABLE
 
65 VARIABLE 
 637,56: VARIABLE
 
300 , parameter_declaration 
 637,56: ,
 638,9: size_t
 638,15: TYPE
 638,16: __n
 638,19: VARIABLE
 
391 NAME TYPE 
 638,9: size_t
 638,15: TYPE
 
26 TYPE 
 638,15: TYPE
 
298 NAME VARIABLE 
 638,16: __n
 638,19: VARIABLE
 
65 VARIABLE 
 638,19: VARIABLE
 
300 , parameter_declaration 
 638,19: ,
 638,21: FILE
 638,25: TYPE
 638,26: *
 638,28: __s
 638,31: VARIABLE
 
391 NAME TYPE 
 638,21: FILE
 638,25: TYPE
 
26 TYPE 
 638,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 638,26: *
 
386 NAME VARIABLE 
 638,28: __s
 638,31: VARIABLE
 
65 VARIABLE 
 638,31: VARIABLE
 
187 ) 
 638,31: )
 
60 ; 
 638,32: ;
 
23 extern 
 640,1: extern
 
8 NAME TYPE 
 640,8: size_t
 640,14: TYPE
 
26 TYPE 
 640,14: TYPE
 
5 NAME VARIABLE 
 640,15: fread_unlocked
 640,29: VARIABLE
 
65 VARIABLE 
 640,29: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 640,30: (
 640,31: void
 640,36: *
 640,38: __ptr
 640,43: VARIABLE
 640,43: ,
 640,45: size_t
 640,51: TYPE
 640,52: __size
 640,58: VARIABLE
 640,58: ,
 641,10: size_t
 641,16: TYPE
 641,17: __n
 641,20: VARIABLE
 641,20: ,
 641,22: FILE
 641,26: TYPE
 641,27: *
 641,29: __stream
 641,37: VARIABLE
 641,37: )
 
186 void 
 640,31: void
 
298 * option_type_qualifier_list option_pointer 
 640,36: *
 
386 NAME VARIABLE 
 640,38: __ptr
 640,43: VARIABLE
 
65 VARIABLE 
 640,43: VARIABLE
 
300 , parameter_declaration 
 640,43: ,
 640,45: size_t
 640,51: TYPE
 640,52: __size
 640,58: VARIABLE
 
391 NAME TYPE 
 640,45: size_t
 640,51: TYPE
 
26 TYPE 
 640,51: TYPE
 
298 NAME VARIABLE 
 640,52: __size
 640,58: VARIABLE
 
65 VARIABLE 
 640,58: VARIABLE
 
300 , parameter_declaration 
 640,58: ,
 641,10: size_t
 641,16: TYPE
 641,17: __n
 641,20: VARIABLE
 
391 NAME TYPE 
 641,10: size_t
 641,16: TYPE
 
26 TYPE 
 641,16: TYPE
 
298 NAME VARIABLE 
 641,17: __n
 641,20: VARIABLE
 
65 VARIABLE 
 641,20: VARIABLE
 
300 , parameter_declaration 
 641,20: ,
 641,22: FILE
 641,26: TYPE
 641,27: *
 641,29: __stream
 641,37: VARIABLE
 
391 NAME TYPE 
 641,22: FILE
 641,26: TYPE
 
26 TYPE 
 641,26: TYPE
 
298 * option_type_qualifier_list option_pointer 
 641,27: *
 
386 NAME VARIABLE 
 641,29: __stream
 641,37: VARIABLE
 
65 VARIABLE 
 641,37: VARIABLE
 
187 ) 
 641,37: )
 
60 ; 
 641,39: ;
 
23 extern 
 642,1: extern
 
8 NAME TYPE 
 642,8: size_t
 642,14: TYPE
 
26 TYPE 
 642,14: TYPE
 
5 NAME VARIABLE 
 642,15: fwrite_unlocked
 642,30: VARIABLE
 
65 VARIABLE 
 642,30: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 642,31: (
 642,32: const
 642,38: void
 642,43: *
 642,45: __ptr
 642,50: VARIABLE
 642,50: ,
 642,52: size_t
 642,58: TYPE
 642,59: __size
 642,65: VARIABLE
 642,65: ,
 643,11: size_t
 643,17: TYPE
 643,18: __n
 643,21: VARIABLE
 643,21: ,
 643,23: FILE
 643,27: TYPE
 643,28: *
 643,30: __stream
 643,38: VARIABLE
 643,38: )
 
186 const 
 642,32: const
 
103 void 
 642,38: void
 
298 * option_type_qualifier_list option_pointer 
 642,43: *
 
386 NAME VARIABLE 
 642,45: __ptr
 642,50: VARIABLE
 
65 VARIABLE 
 642,50: VARIABLE
 
300 , parameter_declaration 
 642,50: ,
 642,52: size_t
 642,58: TYPE
 642,59: __size
 642,65: VARIABLE
 
391 NAME TYPE 
 642,52: size_t
 642,58: TYPE
 
26 TYPE 
 642,58: TYPE
 
298 NAME VARIABLE 
 642,59: __size
 642,65: VARIABLE
 
65 VARIABLE 
 642,65: VARIABLE
 
300 , parameter_declaration 
 642,65: ,
 643,11: size_t
 643,17: TYPE
 643,18: __n
 643,21: VARIABLE
 
391 NAME TYPE 
 643,11: size_t
 643,17: TYPE
 
26 TYPE 
 643,17: TYPE
 
298 NAME VARIABLE 
 643,18: __n
 643,21: VARIABLE
 
65 VARIABLE 
 643,21: VARIABLE
 
300 , parameter_declaration 
 643,21: ,
 643,23: FILE
 643,27: TYPE
 643,28: *
 643,30: __stream
 643,38: VARIABLE
 
391 NAME TYPE 
 643,23: FILE
 643,27: TYPE
 
26 TYPE 
 643,27: TYPE
 
298 * option_type_qualifier_list option_pointer 
 643,28: *
 
386 NAME VARIABLE 
 643,30: __stream
 643,38: VARIABLE
 
65 VARIABLE 
 643,38: VARIABLE
 
187 ) 
 643,38: )
 
60 ; 
 643,39: ;
 
23 extern 
 651,1: extern
 
8 int 
 651,8: int
 
5 NAME VARIABLE 
 651,12: fseek
 651,17: VARIABLE
 
65 VARIABLE 
 651,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 651,18: (
 651,19: FILE
 651,23: TYPE
 651,24: *
 651,25: __stream
 651,33: VARIABLE
 651,33: ,
 651,35: long
 651,40: int
 651,44: __off
 651,49: VARIABLE
 651,49: ,
 651,51: int
 651,55: __whence
 651,63: VARIABLE
 651,63: )
 
186 NAME TYPE 
 651,19: FILE
 651,23: TYPE
 
65 TYPE 
 651,23: TYPE
 
298 * option_type_qualifier_list option_pointer 
 651,24: *
 
386 NAME VARIABLE 
 651,25: __stream
 651,33: VARIABLE
 
65 VARIABLE 
 651,33: VARIABLE
 
300 , parameter_declaration 
 651,33: ,
 651,35: long
 651,40: int
 651,44: __off
 651,49: VARIABLE
 
391 long 
 651,35: long
 
106 int 
 651,40: int
 
298 NAME VARIABLE 
 651,44: __off
 651,49: VARIABLE
 
65 VARIABLE 
 651,49: VARIABLE
 
300 , parameter_declaration 
 651,49: ,
 651,51: int
 651,55: __whence
 651,63: VARIABLE
 
391 int 
 651,51: int
 
298 NAME VARIABLE 
 651,55: __whence
 651,63: VARIABLE
 
65 VARIABLE 
 651,63: VARIABLE
 
187 ) 
 651,63: )
 
60 ; 
 651,64: ;
 
23 extern 
 656,1: extern
 
8 long 
 656,8: long
 
17 int 
 656,13: int
 
5 NAME VARIABLE 
 656,17: ftell
 656,22: VARIABLE
 
65 VARIABLE 
 656,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 656,23: (
 656,24: FILE
 656,28: TYPE
 656,29: *
 656,30: __stream
 656,38: VARIABLE
 656,38: )
 
186 NAME TYPE 
 656,24: FILE
 656,28: TYPE
 
65 TYPE 
 656,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 656,29: *
 
386 NAME VARIABLE 
 656,30: __stream
 656,38: VARIABLE
 
65 VARIABLE 
 656,38: VARIABLE
 
187 ) 
 656,38: )
 
60 ; 
 656,40: ;
 
23 extern 
 661,1: extern
 
8 void 
 661,8: void
 
5 NAME VARIABLE 
 661,13: rewind
 661,19: VARIABLE
 
65 VARIABLE 
 661,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 661,20: (
 661,21: FILE
 661,25: TYPE
 661,26: *
 661,27: __stream
 661,35: VARIABLE
 661,35: )
 
186 NAME TYPE 
 661,21: FILE
 661,25: TYPE
 
65 TYPE 
 661,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 661,26: *
 
386 NAME VARIABLE 
 661,27: __stream
 661,35: VARIABLE
 
65 VARIABLE 
 661,35: VARIABLE
 
187 ) 
 661,35: )
 
60 ; 
 661,36: ;
 
23 extern 
 663,1: extern
 
8 int 
 663,8: int
 
5 NAME VARIABLE 
 663,12: fseeko
 663,18: VARIABLE
 
65 VARIABLE 
 663,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 663,19: (
 663,20: FILE
 663,24: TYPE
 663,25: *
 663,26: __stream
 663,34: VARIABLE
 663,34: ,
 663,36: __off_t
 663,43: TYPE
 663,44: __off
 663,49: VARIABLE
 663,49: ,
 663,51: int
 663,55: __whence
 663,63: VARIABLE
 663,63: )
 
186 NAME TYPE 
 663,20: FILE
 663,24: TYPE
 
65 TYPE 
 663,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 663,25: *
 
386 NAME VARIABLE 
 663,26: __stream
 663,34: VARIABLE
 
65 VARIABLE 
 663,34: VARIABLE
 
300 , parameter_declaration 
 663,34: ,
 663,36: __off_t
 663,43: TYPE
 663,44: __off
 663,49: VARIABLE
 
391 NAME TYPE 
 663,36: __off_t
 663,43: TYPE
 
26 TYPE 
 663,43: TYPE
 
298 NAME VARIABLE 
 663,44: __off
 663,49: VARIABLE
 
65 VARIABLE 
 663,49: VARIABLE
 
300 , parameter_declaration 
 663,49: ,
 663,51: int
 663,55: __whence
 663,63: VARIABLE
 
391 int 
 663,51: int
 
298 NAME VARIABLE 
 663,55: __whence
 663,63: VARIABLE
 
65 VARIABLE 
 663,63: VARIABLE
 
187 ) 
 663,63: )
 
60 ; 
 663,64: ;
 
23 extern 
 668,1: extern
 
8 NAME TYPE 
 668,8: __off_t
 668,15: TYPE
 
26 TYPE 
 668,15: TYPE
 
5 NAME VARIABLE 
 668,16: ftello
 668,22: VARIABLE
 
65 VARIABLE 
 668,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 668,23: (
 668,24: FILE
 668,28: TYPE
 668,29: *
 668,30: __stream
 668,38: VARIABLE
 668,38: )
 
186 NAME TYPE 
 668,24: FILE
 668,28: TYPE
 
65 TYPE 
 668,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 668,29: *
 
386 NAME VARIABLE 
 668,30: __stream
 668,38: VARIABLE
 
65 VARIABLE 
 668,38: VARIABLE
 
187 ) 
 668,38: )
 
60 ; 
 668,40: ;
 
23 extern 
 670,1: extern
 
8 int 
 670,8: int
 
5 NAME VARIABLE 
 670,12: fgetpos
 670,19: VARIABLE
 
65 VARIABLE 
 670,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 670,20: (
 670,21: FILE
 670,25: TYPE
 670,26: *
 670,28: __stream
 670,36: VARIABLE
 670,36: ,
 670,38: fpos_t
 670,44: TYPE
 670,45: *
 670,47: __pos
 670,52: VARIABLE
 670,52: )
 
186 NAME TYPE 
 670,21: FILE
 670,25: TYPE
 
65 TYPE 
 670,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 670,26: *
 
386 NAME VARIABLE 
 670,28: __stream
 670,36: VARIABLE
 
65 VARIABLE 
 670,36: VARIABLE
 
300 , parameter_declaration 
 670,36: ,
 670,38: fpos_t
 670,44: TYPE
 670,45: *
 670,47: __pos
 670,52: VARIABLE
 
391 NAME TYPE 
 670,38: fpos_t
 670,44: TYPE
 
26 TYPE 
 670,44: TYPE
 
298 * option_type_qualifier_list option_pointer 
 670,45: *
 
386 NAME VARIABLE 
 670,47: __pos
 670,52: VARIABLE
 
65 VARIABLE 
 670,52: VARIABLE
 
187 ) 
 670,52: )
 
60 ; 
 670,53: ;
 
23 extern 
 675,1: extern
 
8 int 
 675,8: int
 
5 NAME VARIABLE 
 675,12: fsetpos
 675,19: VARIABLE
 
65 VARIABLE 
 675,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 675,20: (
 675,21: FILE
 675,25: TYPE
 675,26: *
 675,27: __stream
 675,35: VARIABLE
 675,35: ,
 675,37: const
 675,43: fpos_t
 675,49: TYPE
 675,50: *
 675,51: __pos
 675,56: VARIABLE
 675,56: )
 
186 NAME TYPE 
 675,21: FILE
 675,25: TYPE
 
65 TYPE 
 675,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 675,26: *
 
386 NAME VARIABLE 
 675,27: __stream
 675,35: VARIABLE
 
65 VARIABLE 
 675,35: VARIABLE
 
300 , parameter_declaration 
 675,35: ,
 675,37: const
 675,43: fpos_t
 675,49: TYPE
 675,50: *
 675,51: __pos
 675,56: VARIABLE
 
391 const 
 675,37: const
 
103 NAME TYPE 
 675,43: fpos_t
 675,49: TYPE
 
26 TYPE 
 675,49: TYPE
 
298 * option_type_qualifier_list option_pointer 
 675,50: *
 
386 NAME VARIABLE 
 675,51: __pos
 675,56: VARIABLE
 
65 VARIABLE 
 675,56: VARIABLE
 
187 ) 
 675,56: )
 
60 ; 
 675,57: ;
 
23 extern 
 677,1: extern
 
8 void 
 677,8: void
 
5 NAME VARIABLE 
 677,13: clearerr
 677,21: VARIABLE
 
65 VARIABLE 
 677,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 677,22: (
 677,23: FILE
 677,27: TYPE
 677,28: *
 677,29: __stream
 677,37: VARIABLE
 677,37: )
 
186 NAME TYPE 
 677,23: FILE
 677,27: TYPE
 
65 TYPE 
 677,27: TYPE
 
298 * option_type_qualifier_list option_pointer 
 677,28: *
 
386 NAME VARIABLE 
 677,29: __stream
 677,37: VARIABLE
 
65 VARIABLE 
 677,37: VARIABLE
 
187 ) 
 677,37: )
 
60 ; 
 677,39: ;
 
23 extern 
 679,1: extern
 
8 int 
 679,8: int
 
5 NAME VARIABLE 
 679,12: feof
 679,16: VARIABLE
 
65 VARIABLE 
 679,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 679,17: (
 679,18: FILE
 679,22: TYPE
 679,23: *
 679,24: __stream
 679,32: VARIABLE
 679,32: )
 
186 NAME TYPE 
 679,18: FILE
 679,22: TYPE
 
65 TYPE 
 679,22: TYPE
 
298 * option_type_qualifier_list option_pointer 
 679,23: *
 
386 NAME VARIABLE 
 679,24: __stream
 679,32: VARIABLE
 
65 VARIABLE 
 679,32: VARIABLE
 
187 ) 
 679,32: )
 
60 ; 
 679,35: ;
 
23 extern 
 681,1: extern
 
8 int 
 681,8: int
 
5 NAME VARIABLE 
 681,12: ferror
 681,18: VARIABLE
 
65 VARIABLE 
 681,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 681,19: (
 681,20: FILE
 681,24: TYPE
 681,25: *
 681,26: __stream
 681,34: VARIABLE
 681,34: )
 
186 NAME TYPE 
 681,20: FILE
 681,24: TYPE
 
65 TYPE 
 681,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 681,25: *
 
386 NAME VARIABLE 
 681,26: __stream
 681,34: VARIABLE
 
65 VARIABLE 
 681,34: VARIABLE
 
187 ) 
 681,34: )
 
60 ; 
 681,37: ;
 
23 extern 
 685,1: extern
 
8 void 
 685,8: void
 
5 NAME VARIABLE 
 685,13: clearerr_unlocked
 685,30: VARIABLE
 
65 VARIABLE 
 685,30: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 685,31: (
 685,32: FILE
 685,36: TYPE
 685,37: *
 685,38: __stream
 685,46: VARIABLE
 685,46: )
 
186 NAME TYPE 
 685,32: FILE
 685,36: TYPE
 
65 TYPE 
 685,36: TYPE
 
298 * option_type_qualifier_list option_pointer 
 685,37: *
 
386 NAME VARIABLE 
 685,38: __stream
 685,46: VARIABLE
 
65 VARIABLE 
 685,46: VARIABLE
 
187 ) 
 685,46: )
 
60 ; 
 685,48: ;
 
23 extern 
 686,1: extern
 
8 int 
 686,8: int
 
5 NAME VARIABLE 
 686,12: feof_unlocked
 686,25: VARIABLE
 
65 VARIABLE 
 686,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 686,26: (
 686,27: FILE
 686,31: TYPE
 686,32: *
 686,33: __stream
 686,41: VARIABLE
 686,41: )
 
186 NAME TYPE 
 686,27: FILE
 686,31: TYPE
 
65 TYPE 
 686,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 686,32: *
 
386 NAME VARIABLE 
 686,33: __stream
 686,41: VARIABLE
 
65 VARIABLE 
 686,41: VARIABLE
 
187 ) 
 686,41: )
 
60 ; 
 686,44: ;
 
23 extern 
 687,1: extern
 
8 int 
 687,8: int
 
5 NAME VARIABLE 
 687,12: ferror_unlocked
 687,27: VARIABLE
 
65 VARIABLE 
 687,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 687,28: (
 687,29: FILE
 687,33: TYPE
 687,34: *
 687,35: __stream
 687,43: VARIABLE
 687,43: )
 
186 NAME TYPE 
 687,29: FILE
 687,33: TYPE
 
65 TYPE 
 687,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 687,34: *
 
386 NAME VARIABLE 
 687,35: __stream
 687,43: VARIABLE
 
65 VARIABLE 
 687,43: VARIABLE
 
187 ) 
 687,43: )
 
60 ; 
 687,46: ;
 
23 extern 
 695,1: extern
 
8 void 
 695,8: void
 
5 NAME VARIABLE 
 695,13: perror
 695,19: VARIABLE
 
65 VARIABLE 
 695,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 695,20: (
 695,21: const
 695,27: char
 695,32: *
 695,33: __s
 695,36: VARIABLE
 695,36: )
 
186 const 
 695,21: const
 
103 char 
 695,27: char
 
298 * option_type_qualifier_list option_pointer 
 695,32: *
 
386 NAME VARIABLE 
 695,33: __s
 695,36: VARIABLE
 
65 VARIABLE 
 695,36: VARIABLE
 
187 ) 
 695,36: )
 
60 ; 
 695,37: ;
 
23 extern 
 700,1: extern
 
8 int 
 700,8: int
 
5 NAME VARIABLE 
 700,12: fileno
 700,18: VARIABLE
 
65 VARIABLE 
 700,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 700,19: (
 700,20: FILE
 700,24: TYPE
 700,25: *
 700,26: __stream
 700,34: VARIABLE
 700,34: )
 
186 NAME TYPE 
 700,20: FILE
 700,24: TYPE
 
65 TYPE 
 700,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 700,25: *
 
386 NAME VARIABLE 
 700,26: __stream
 700,34: VARIABLE
 
65 VARIABLE 
 700,34: VARIABLE
 
187 ) 
 700,34: )
 
60 ; 
 700,37: ;
 
23 extern 
 705,1: extern
 
8 int 
 705,8: int
 
5 NAME VARIABLE 
 705,12: fileno_unlocked
 705,27: VARIABLE
 
65 VARIABLE 
 705,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 705,28: (
 705,29: FILE
 705,33: TYPE
 705,34: *
 705,35: __stream
 705,43: VARIABLE
 705,43: )
 
186 NAME TYPE 
 705,29: FILE
 705,33: TYPE
 
65 TYPE 
 705,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 705,34: *
 
386 NAME VARIABLE 
 705,35: __stream
 705,43: VARIABLE
 
65 VARIABLE 
 705,43: VARIABLE
 
187 ) 
 705,43: )
 
60 ; 
 705,46: ;
 
23 extern 
 707,1: extern
 
8 int 
 707,8: int
 
5 NAME VARIABLE 
 707,12: pclose
 707,18: VARIABLE
 
65 VARIABLE 
 707,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 707,19: (
 707,20: FILE
 707,24: TYPE
 707,25: *
 707,26: __stream
 707,34: VARIABLE
 707,34: )
 
186 NAME TYPE 
 707,20: FILE
 707,24: TYPE
 
65 TYPE 
 707,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 707,25: *
 
386 NAME VARIABLE 
 707,26: __stream
 707,34: VARIABLE
 
65 VARIABLE 
 707,34: VARIABLE
 
187 ) 
 707,34: )
 
60 ; 
 707,35: ;
 
23 extern 
 713,1: extern
 
8 NAME TYPE 
 713,8: FILE
 713,12: TYPE
 
26 TYPE 
 713,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 713,13: *
 
64 NAME VARIABLE 
 713,14: popen
 713,19: VARIABLE
 
65 VARIABLE 
 713,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 713,20: (
 713,21: const
 713,27: char
 713,32: *
 713,33: __command
 713,42: VARIABLE
 713,42: ,
 713,44: const
 713,50: char
 713,55: *
 713,56: __modes
 713,63: VARIABLE
 713,63: )
 
186 const 
 713,21: const
 
103 char 
 713,27: char
 
298 * option_type_qualifier_list option_pointer 
 713,32: *
 
386 NAME VARIABLE 
 713,33: __command
 713,42: VARIABLE
 
65 VARIABLE 
 713,42: VARIABLE
 
300 , parameter_declaration 
 713,42: ,
 713,44: const
 713,50: char
 713,55: *
 713,56: __modes
 713,63: VARIABLE
 
391 const 
 713,44: const
 
103 char 
 713,50: char
 
298 * option_type_qualifier_list option_pointer 
 713,55: *
 
386 NAME VARIABLE 
 713,56: __modes
 713,63: VARIABLE
 
65 VARIABLE 
 713,63: VARIABLE
 
187 ) 
 713,63: )
 
60 ; 
 714,5: ;
 
23 extern 
 721,1: extern
 
8 char 
 721,8: char
 
5 * option_type_qualifier_list option_pointer 
 721,13: *
 
64 NAME VARIABLE 
 721,14: ctermid
 721,21: VARIABLE
 
65 VARIABLE 
 721,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 721,22: (
 721,23: char
 721,28: *
 721,29: __s
 721,32: VARIABLE
 721,32: )
 
186 char 
 721,23: char
 
298 * option_type_qualifier_list option_pointer 
 721,28: *
 
386 NAME VARIABLE 
 721,29: __s
 721,32: VARIABLE
 
65 VARIABLE 
 721,32: VARIABLE
 
187 ) 
 721,32: )
 
60 ; 
 722,3: ;
 
23 extern 
 724,1: extern
 
8 void 
 724,8: void
 
5 NAME VARIABLE 
 724,13: flockfile
 724,22: VARIABLE
 
65 VARIABLE 
 724,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 724,23: (
 724,24: FILE
 724,28: TYPE
 724,29: *
 724,30: __stream
 724,38: VARIABLE
 724,38: )
 
186 NAME TYPE 
 724,24: FILE
 724,28: TYPE
 
65 TYPE 
 724,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 724,29: *
 
386 NAME VARIABLE 
 724,30: __stream
 724,38: VARIABLE
 
65 VARIABLE 
 724,38: VARIABLE
 
187 ) 
 724,38: )
 
60 ; 
 724,40: ;
 
23 extern 
 728,1: extern
 
8 int 
 728,8: int
 
5 NAME VARIABLE 
 728,12: ftrylockfile
 728,24: VARIABLE
 
65 VARIABLE 
 728,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 728,25: (
 728,26: FILE
 728,30: TYPE
 728,31: *
 728,32: __stream
 728,40: VARIABLE
 728,40: )
 
186 NAME TYPE 
 728,26: FILE
 728,30: TYPE
 
65 TYPE 
 728,30: TYPE
 
298 * option_type_qualifier_list option_pointer 
 728,31: *
 
386 NAME VARIABLE 
 728,32: __stream
 728,40: VARIABLE
 
65 VARIABLE 
 728,40: VARIABLE
 
187 ) 
 728,40: )
 
60 ; 
 728,43: ;
 
23 extern 
 731,1: extern
 
8 void 
 731,8: void
 
5 NAME VARIABLE 
 731,13: funlockfile
 731,24: VARIABLE
 
65 VARIABLE 
 731,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 731,25: (
 731,26: FILE
 731,30: TYPE
 731,31: *
 731,32: __stream
 731,40: VARIABLE
 731,40: )
 
186 NAME TYPE 
 731,26: FILE
 731,30: TYPE
 
65 TYPE 
 731,30: TYPE
 
298 * option_type_qualifier_list option_pointer 
 731,31: *
 
386 NAME VARIABLE 
 731,32: __stream
 731,40: VARIABLE
 
65 VARIABLE 
 731,40: VARIABLE
 
187 ) 
 731,40: )
 
60 ; 
 731,42: ;
 
23 extern 
 733,1: extern
 
8 int 
 733,8: int
 
5 NAME VARIABLE 
 733,12: __uflow
 733,19: VARIABLE
 
65 VARIABLE 
 733,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 733,20: (
 733,21: FILE
 733,25: TYPE
 733,26: *
 733,27: )
 
186 NAME TYPE 
 733,21: FILE
 733,25: TYPE
 
65 TYPE 
 733,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 733,26: *
 
187 ) 
 733,27: )
 
60 ; 
 733,28: ;
 
23 extern 
 734,1: extern
 
8 int 
 734,8: int
 
5 NAME VARIABLE 
 734,12: __overflow
 734,22: VARIABLE
 
65 VARIABLE 
 734,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 734,23: (
 734,24: FILE
 734,28: TYPE
 734,29: *
 734,30: ,
 734,32: int
 734,35: )
 
186 NAME TYPE 
 734,24: FILE
 734,28: TYPE
 
65 TYPE 
 734,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 734,29: *
 
300 , parameter_declaration 
 734,30: ,
 734,32: int
 
391 int 
 734,32: int
 
187 ) 
 734,35: )
 
60 ; 
 734,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 757,1: typedef
 757,9: __clock_t
 757,18: TYPE
 
54 NAME TYPE 
 757,9: __clock_t
 757,18: TYPE
 
26 TYPE 
 757,18: TYPE
 
6 NAME VARIABLE 
 757,19: clock_t
 757,26: VARIABLE
 
65 VARIABLE 
 757,26: VARIABLE
 
70 ; 
 757,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 761,1: typedef
 761,9: __time_t
 761,17: TYPE
 
54 NAME TYPE 
 761,9: __time_t
 761,17: TYPE
 
26 TYPE 
 761,17: TYPE
 
6 NAME VARIABLE 
 761,18: time_t
 761,24: VARIABLE
 
65 VARIABLE 
 761,24: VARIABLE
 
70 ; 
 761,24: ;
 
23 struct 
 770,1: struct
 
22 NAME VARIABLE 
 770,8: tm
 770,10: VARIABLE
 
65 VARIABLE 
 770,10: VARIABLE
 
89 { struct_declaration_list } 
 771,1: {
 772,3: int
 772,7: tm_sec
 772,13: VARIABLE
 772,13: ;
 773,3: int
 773,7: tm_min
 773,13: VARIABLE
 773,13: ;
 774,3: int
 774,7: tm_hour
 774,14: VARIABLE
 774,14: ;
 775,3: int
 775,7: tm_mday
 775,14: VARIABLE
 775,14: ;
 776,3: int
 776,7: tm_mon
 776,13: VARIABLE
 776,13: ;
 777,3: int
 777,7: tm_year
 777,14: VARIABLE
 777,14: ;
 778,3: int
 778,7: tm_wday
 778,14: VARIABLE
 778,14: ;
 779,3: int
 779,7: tm_yday
 779,14: VARIABLE
 779,14: ;
 780,3: int
 780,7: tm_isdst
 780,15: VARIABLE
 780,15: ;
 783,3: long
 783,8: int
 783,12: tm_gmtoff
 783,21: VARIABLE
 783,21: ;
 784,3: const
 784,9: char
 784,14: *
 784,15: tm_zone
 784,22: VARIABLE
 784,22: ;
 789,1: }
 
126 int 
 772,3: int
 
200 NAME VARIABLE 
 772,7: tm_sec
 772,13: VARIABLE
 
65 VARIABLE 
 772,13: VARIABLE
 
313 ; 
 772,13: ;
 
198 int 
 773,3: int
 
200 NAME VARIABLE 
 773,7: tm_min
 773,13: VARIABLE
 
65 VARIABLE 
 773,13: VARIABLE
 
313 ; 
 773,13: ;
 
198 int 
 774,3: int
 
200 NAME VARIABLE 
 774,7: tm_hour
 774,14: VARIABLE
 
65 VARIABLE 
 774,14: VARIABLE
 
313 ; 
 774,14: ;
 
198 int 
 775,3: int
 
200 NAME VARIABLE 
 775,7: tm_mday
 775,14: VARIABLE
 
65 VARIABLE 
 775,14: VARIABLE
 
313 ; 
 775,14: ;
 
198 int 
 776,3: int
 
200 NAME VARIABLE 
 776,7: tm_mon
 776,13: VARIABLE
 
65 VARIABLE 
 776,13: VARIABLE
 
313 ; 
 776,13: ;
 
198 int 
 777,3: int
 
200 NAME VARIABLE 
 777,7: tm_year
 777,14: VARIABLE
 
65 VARIABLE 
 777,14: VARIABLE
 
313 ; 
 777,14: ;
 
198 int 
 778,3: int
 
200 NAME VARIABLE 
 778,7: tm_wday
 778,14: VARIABLE
 
65 VARIABLE 
 778,14: VARIABLE
 
313 ; 
 778,14: ;
 
198 int 
 779,3: int
 
200 NAME VARIABLE 
 779,7: tm_yday
 779,14: VARIABLE
 
65 VARIABLE 
 779,14: VARIABLE
 
313 ; 
 779,14: ;
 
198 int 
 780,3: int
 
200 NAME VARIABLE 
 780,7: tm_isdst
 780,15: VARIABLE
 
65 VARIABLE 
 780,15: VARIABLE
 
313 ; 
 780,15: ;
 
198 long 
 783,3: long
 
135 int 
 783,8: int
 
200 NAME VARIABLE 
 783,12: tm_gmtoff
 783,21: VARIABLE
 
65 VARIABLE 
 783,21: VARIABLE
 
313 ; 
 783,21: ;
 
198 const 
 784,3: const
 
133 char 
 784,9: char
 
200 * option_type_qualifier_list option_pointer 
 784,14: *
 
64 NAME VARIABLE 
 784,15: tm_zone
 784,22: VARIABLE
 
65 VARIABLE 
 784,22: VARIABLE
 
313 ; 
 784,22: ;
 
198 } 
 789,1: }
 
60 ; 
 789,2: ;
 
23 struct 
 808,1: struct
 
22 NAME VARIABLE 
 808,8: timespec
 808,16: VARIABLE
 
65 VARIABLE 
 808,16: VARIABLE
 
89 { struct_declaration_list } 
 809,1: {
 813,3: __time_t
 813,11: TYPE
 813,12: tv_sec
 813,18: VARIABLE
 813,18: ;
 818,3: __syscall_slong_t
 818,20: TYPE
 818,21: tv_nsec
 818,28: VARIABLE
 818,28: ;
 820,1: }
 
126 NAME TYPE 
 813,3: __time_t
 813,11: TYPE
 
26 TYPE 
 813,11: TYPE
 
200 NAME VARIABLE 
 813,12: tv_sec
 813,18: VARIABLE
 
65 VARIABLE 
 813,18: VARIABLE
 
313 ; 
 813,18: ;
 
198 NAME TYPE 
 818,3: __syscall_slong_t
 818,20: TYPE
 
26 TYPE 
 818,20: TYPE
 
200 NAME VARIABLE 
 818,21: tv_nsec
 818,28: VARIABLE
 
65 VARIABLE 
 818,28: VARIABLE
 
313 ; 
 818,28: ;
 
198 } 
 820,1: }
 
60 ; 
 820,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 832,1: typedef
 832,9: __clockid_t
 832,20: TYPE
 
54 NAME TYPE 
 832,9: __clockid_t
 832,20: TYPE
 
26 TYPE 
 832,20: TYPE
 
6 NAME VARIABLE 
 832,21: clockid_t
 832,30: VARIABLE
 
65 VARIABLE 
 832,30: VARIABLE
 
70 ; 
 832,30: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 841,1: typedef
 841,9: __timer_t
 841,18: TYPE
 
54 NAME TYPE 
 841,9: __timer_t
 841,18: TYPE
 
26 TYPE 
 841,18: TYPE
 
6 NAME VARIABLE 
 841,19: timer_t
 841,26: VARIABLE
 
65 VARIABLE 
 841,26: VARIABLE
 
70 ; 
 841,26: ;
 
23 struct 
 851,1: struct
 
22 NAME VARIABLE 
 851,8: itimerspec
 851,18: VARIABLE
 
65 VARIABLE 
 851,18: VARIABLE
 
89 { struct_declaration_list } 
 852,3: {
 853,5: struct
 853,12: timespec
 853,20: VARIABLE
 853,21: it_interval
 853,32: VARIABLE
 853,32: ;
 854,5: struct
 854,12: timespec
 854,20: VARIABLE
 854,21: it_value
 854,29: VARIABLE
 854,29: ;
 855,3: }
 
126 struct 
 853,5: struct
 
22 NAME VARIABLE 
 853,12: timespec
 853,20: VARIABLE
 
65 VARIABLE 
 853,20: VARIABLE
 
200 NAME VARIABLE 
 853,21: it_interval
 853,32: VARIABLE
 
65 VARIABLE 
 853,32: VARIABLE
 
313 ; 
 853,32: ;
 
198 struct 
 854,5: struct
 
22 NAME VARIABLE 
 854,12: timespec
 854,20: VARIABLE
 
65 VARIABLE 
 854,20: VARIABLE
 
200 NAME VARIABLE 
 854,21: it_value
 854,29: VARIABLE
 
65 VARIABLE 
 854,29: VARIABLE
 
313 ; 
 854,29: ;
 
198 } 
 855,3: }
 
60 ; 
 855,4: ;
 
23 struct 
 857,1: struct
 
22 NAME VARIABLE 
 857,8: sigevent
 857,16: VARIABLE
 
65 VARIABLE 
 857,16: VARIABLE
 
60 ; 
 857,16: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 862,1: typedef
 862,9: __pid_t
 862,16: TYPE
 
54 NAME TYPE 
 862,9: __pid_t
 862,16: TYPE
 
26 TYPE 
 862,16: TYPE
 
6 NAME VARIABLE 
 862,17: pid_t
 862,22: VARIABLE
 
65 VARIABLE 
 862,22: VARIABLE
 
70 ; 
 862,22: ;
 
23 struct 
 872,1: struct
 
22 NAME VARIABLE 
 872,8: __locale_struct
 872,23: VARIABLE
 
65 VARIABLE 
 872,23: VARIABLE
 
89 { struct_declaration_list } 
 873,1: {
 875,3: struct
 875,10: __locale_data
 875,23: VARIABLE
 875,24: *
 875,25: __locales
 875,34: VARIABLE
 875,34: [
 875,35: 13
 875,37: ]
 875,38: ;
 878,3: const
 878,9: unsigned
 878,18: short
 878,24: int
 878,28: *
 878,29: __ctype_b
 878,38: VARIABLE
 878,38: ;
 879,3: const
 879,9: int
 879,13: *
 879,14: __ctype_tolower
 879,29: VARIABLE
 879,29: ;
 880,3: const
 880,9: int
 880,13: *
 880,14: __ctype_toupper
 880,29: VARIABLE
 880,29: ;
 883,3: const
 883,9: char
 883,14: *
 883,15: __names
 883,22: VARIABLE
 883,22: [
 883,23: 13
 883,25: ]
 883,26: ;
 884,1: }
 
126 struct 
 875,3: struct
 
22 NAME VARIABLE 
 875,10: __locale_data
 875,23: VARIABLE
 
65 VARIABLE 
 875,23: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 875,24: *
 
64 NAME VARIABLE 
 875,25: __locales
 875,34: VARIABLE
 
65 VARIABLE 
 875,34: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 875,34: [
 875,35: 13
 875,37: ]
 
188 CONSTANT 
 875,35: 13
 
305 ] 
 875,37: ]
 
313 ; 
 875,38: ;
 
198 const 
 878,3: const
 
133 unsigned 
 878,9: unsigned
 
208 short 
 878,18: short
 
208 int 
 878,24: int
 
200 * option_type_qualifier_list option_pointer 
 878,28: *
 
64 NAME VARIABLE 
 878,29: __ctype_b
 878,38: VARIABLE
 
65 VARIABLE 
 878,38: VARIABLE
 
313 ; 
 878,38: ;
 
198 const 
 879,3: const
 
133 int 
 879,9: int
 
200 * option_type_qualifier_list option_pointer 
 879,13: *
 
64 NAME VARIABLE 
 879,14: __ctype_tolower
 879,29: VARIABLE
 
65 VARIABLE 
 879,29: VARIABLE
 
313 ; 
 879,29: ;
 
198 const 
 880,3: const
 
133 int 
 880,9: int
 
200 * option_type_qualifier_list option_pointer 
 880,13: *
 
64 NAME VARIABLE 
 880,14: __ctype_toupper
 880,29: VARIABLE
 
65 VARIABLE 
 880,29: VARIABLE
 
313 ; 
 880,29: ;
 
198 const 
 883,3: const
 
133 char 
 883,9: char
 
200 * option_type_qualifier_list option_pointer 
 883,14: *
 
64 NAME VARIABLE 
 883,15: __names
 883,22: VARIABLE
 
65 VARIABLE 
 883,22: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 883,22: [
 883,23: 13
 883,25: ]
 
188 CONSTANT 
 883,23: 13
 
305 ] 
 883,25: ]
 
313 ; 
 883,26: ;
 
198 } 
 884,1: }
 
60 ; 
 884,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 886,1: typedef
 886,9: struct
 886,16: __locale_struct
 886,31: VARIABLE
 
54 struct 
 886,9: struct
 
22 NAME VARIABLE 
 886,16: __locale_struct
 886,31: VARIABLE
 
65 VARIABLE 
 886,31: VARIABLE
 
6 * option_type_qualifier_list option_pointer 
 886,32: *
 
64 NAME VARIABLE 
 886,33: __locale_t
 886,43: VARIABLE
 
65 VARIABLE 
 886,43: VARIABLE
 
70 ; 
 886,43: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 889,1: typedef
 889,9: __locale_t
 889,19: TYPE
 
54 NAME TYPE 
 889,9: __locale_t
 889,19: TYPE
 
26 TYPE 
 889,19: TYPE
 
6 NAME VARIABLE 
 889,20: locale_t
 889,28: VARIABLE
 
65 VARIABLE 
 889,28: VARIABLE
 
70 ; 
 889,28: ;
 
23 extern 
 902,1: extern
 
8 NAME TYPE 
 902,8: clock_t
 902,15: TYPE
 
26 TYPE 
 902,15: TYPE
 
5 NAME VARIABLE 
 902,16: clock
 902,21: VARIABLE
 
65 VARIABLE 
 902,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 902,22: (
 902,23: void
 902,27: )
 
186 void 
 902,23: void
 
187 ) 
 902,27: )
 
60 ; 
 902,29: ;
 
23 extern 
 906,1: extern
 
8 NAME TYPE 
 906,8: time_t
 906,14: TYPE
 
26 TYPE 
 906,14: TYPE
 
5 NAME VARIABLE 
 906,15: time
 906,19: VARIABLE
 
65 VARIABLE 
 906,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 906,20: (
 906,21: time_t
 906,27: TYPE
 906,28: *
 906,29: __timer
 906,36: VARIABLE
 906,36: )
 
186 NAME TYPE 
 906,21: time_t
 906,27: TYPE
 
65 TYPE 
 906,27: TYPE
 
298 * option_type_qualifier_list option_pointer 
 906,28: *
 
386 NAME VARIABLE 
 906,29: __timer
 906,36: VARIABLE
 
65 VARIABLE 
 906,36: VARIABLE
 
187 ) 
 906,36: )
 
60 ; 
 906,38: ;
 
23 extern 
 909,1: extern
 
8 double 
 909,8: double
 
5 NAME VARIABLE 
 909,15: difftime
 909,23: VARIABLE
 
65 VARIABLE 
 909,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 909,24: (
 909,25: time_t
 909,31: TYPE
 909,32: __time1
 909,39: VARIABLE
 909,39: ,
 909,41: time_t
 909,47: TYPE
 909,48: __time0
 909,55: VARIABLE
 909,55: )
 
186 NAME TYPE 
 909,25: time_t
 909,31: TYPE
 
65 TYPE 
 909,31: TYPE
 
298 NAME VARIABLE 
 909,32: __time1
 909,39: VARIABLE
 
65 VARIABLE 
 909,39: VARIABLE
 
300 , parameter_declaration 
 909,39: ,
 909,41: time_t
 909,47: TYPE
 909,48: __time0
 909,55: VARIABLE
 
391 NAME TYPE 
 909,41: time_t
 909,47: TYPE
 
26 TYPE 
 909,47: TYPE
 
298 NAME VARIABLE 
 909,48: __time0
 909,55: VARIABLE
 
65 VARIABLE 
 909,55: VARIABLE
 
187 ) 
 909,55: )
 
60 ; 
 910,7: ;
 
23 extern 
 913,1: extern
 
8 NAME TYPE 
 913,8: time_t
 913,14: TYPE
 
26 TYPE 
 913,14: TYPE
 
5 NAME VARIABLE 
 913,15: mktime
 913,21: VARIABLE
 
65 VARIABLE 
 913,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 913,22: (
 913,23: struct
 913,30: tm
 913,32: VARIABLE
 913,33: *
 913,34: __tp
 913,38: VARIABLE
 913,38: )
 
186 struct 
 913,23: struct
 
22 NAME VARIABLE 
 913,30: tm
 913,32: VARIABLE
 
65 VARIABLE 
 913,32: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 913,33: *
 
386 NAME VARIABLE 
 913,34: __tp
 913,38: VARIABLE
 
65 VARIABLE 
 913,38: VARIABLE
 
187 ) 
 913,38: )
 
60 ; 
 913,40: ;
 
23 extern 
 915,1: extern
 
8 NAME TYPE 
 915,8: size_t
 915,14: TYPE
 
26 TYPE 
 915,14: TYPE
 
5 NAME VARIABLE 
 915,15: strftime
 915,23: VARIABLE
 
65 VARIABLE 
 915,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 915,24: (
 915,25: char
 915,30: *
 915,32: __s
 915,35: VARIABLE
 915,35: ,
 915,37: size_t
 915,43: TYPE
 915,44: __maxsize
 915,53: VARIABLE
 915,53: ,
 916,4: const
 916,10: char
 916,15: *
 916,17: __format
 916,25: VARIABLE
 916,25: ,
 917,4: const
 917,10: struct
 917,17: tm
 917,19: VARIABLE
 917,20: *
 917,22: __tp
 917,26: VARIABLE
 917,26: )
 
186 char 
 915,25: char
 
298 * option_type_qualifier_list option_pointer 
 915,30: *
 
386 NAME VARIABLE 
 915,32: __s
 915,35: VARIABLE
 
65 VARIABLE 
 915,35: VARIABLE
 
300 , parameter_declaration 
 915,35: ,
 915,37: size_t
 915,43: TYPE
 915,44: __maxsize
 915,53: VARIABLE
 
391 NAME TYPE 
 915,37: size_t
 915,43: TYPE
 
26 TYPE 
 915,43: TYPE
 
298 NAME VARIABLE 
 915,44: __maxsize
 915,53: VARIABLE
 
65 VARIABLE 
 915,53: VARIABLE
 
300 , parameter_declaration 
 915,53: ,
 916,4: const
 916,10: char
 916,15: *
 916,17: __format
 916,25: VARIABLE
 
391 const 
 916,4: const
 
103 char 
 916,10: char
 
298 * option_type_qualifier_list option_pointer 
 916,15: *
 
386 NAME VARIABLE 
 916,17: __format
 916,25: VARIABLE
 
65 VARIABLE 
 916,25: VARIABLE
 
300 , parameter_declaration 
 916,25: ,
 917,4: const
 917,10: struct
 917,17: tm
 917,19: VARIABLE
 917,20: *
 917,22: __tp
 917,26: VARIABLE
 
391 const 
 917,4: const
 
103 struct 
 917,10: struct
 
22 NAME VARIABLE 
 917,17: tm
 917,19: VARIABLE
 
65 VARIABLE 
 917,19: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 917,20: *
 
386 NAME VARIABLE 
 917,22: __tp
 917,26: VARIABLE
 
65 VARIABLE 
 917,26: VARIABLE
 
187 ) 
 917,26: )
 
60 ; 
 917,28: ;
 
23 extern 
 919,1: extern
 
8 NAME TYPE 
 919,8: size_t
 919,14: TYPE
 
26 TYPE 
 919,14: TYPE
 
5 NAME VARIABLE 
 919,15: strftime_l
 919,25: VARIABLE
 
65 VARIABLE 
 919,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 919,26: (
 919,27: char
 919,32: *
 919,34: __s
 919,37: VARIABLE
 919,37: ,
 919,39: size_t
 919,45: TYPE
 919,46: __maxsize
 919,55: VARIABLE
 919,55: ,
 920,6: const
 920,12: char
 920,17: *
 920,19: __format
 920,27: VARIABLE
 920,27: ,
 921,6: const
 921,12: struct
 921,19: tm
 921,21: VARIABLE
 921,22: *
 921,24: __tp
 921,28: VARIABLE
 921,28: ,
 922,6: locale_t
 922,14: TYPE
 922,15: __loc
 922,20: VARIABLE
 922,20: )
 
186 char 
 919,27: char
 
298 * option_type_qualifier_list option_pointer 
 919,32: *
 
386 NAME VARIABLE 
 919,34: __s
 919,37: VARIABLE
 
65 VARIABLE 
 919,37: VARIABLE
 
300 , parameter_declaration 
 919,37: ,
 919,39: size_t
 919,45: TYPE
 919,46: __maxsize
 919,55: VARIABLE
 
391 NAME TYPE 
 919,39: size_t
 919,45: TYPE
 
26 TYPE 
 919,45: TYPE
 
298 NAME VARIABLE 
 919,46: __maxsize
 919,55: VARIABLE
 
65 VARIABLE 
 919,55: VARIABLE
 
300 , parameter_declaration 
 919,55: ,
 920,6: const
 920,12: char
 920,17: *
 920,19: __format
 920,27: VARIABLE
 
391 const 
 920,6: const
 
103 char 
 920,12: char
 
298 * option_type_qualifier_list option_pointer 
 920,17: *
 
386 NAME VARIABLE 
 920,19: __format
 920,27: VARIABLE
 
65 VARIABLE 
 920,27: VARIABLE
 
300 , parameter_declaration 
 920,27: ,
 921,6: const
 921,12: struct
 921,19: tm
 921,21: VARIABLE
 921,22: *
 921,24: __tp
 921,28: VARIABLE
 
391 const 
 921,6: const
 
103 struct 
 921,12: struct
 
22 NAME VARIABLE 
 921,19: tm
 921,21: VARIABLE
 
65 VARIABLE 
 921,21: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 921,22: *
 
386 NAME VARIABLE 
 921,24: __tp
 921,28: VARIABLE
 
65 VARIABLE 
 921,28: VARIABLE
 
300 , parameter_declaration 
 921,28: ,
 922,6: locale_t
 922,14: TYPE
 922,15: __loc
 922,20: VARIABLE
 
391 NAME TYPE 
 922,6: locale_t
 922,14: TYPE
 
26 TYPE 
 922,14: TYPE
 
298 NAME VARIABLE 
 922,15: __loc
 922,20: VARIABLE
 
65 VARIABLE 
 922,20: VARIABLE
 
187 ) 
 922,20: )
 
60 ; 
 922,22: ;
 
23 extern 
 924,1: extern
 
8 struct 
 924,8: struct
 
22 NAME VARIABLE 
 924,15: tm
 924,17: VARIABLE
 
65 VARIABLE 
 924,17: VARIABLE
 
5 * option_type_qualifier_list option_pointer 
 924,18: *
 
64 NAME VARIABLE 
 924,19: gmtime
 924,25: VARIABLE
 
65 VARIABLE 
 924,25: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 924,26: (
 924,27: const
 924,33: time_t
 924,39: TYPE
 924,40: *
 924,41: __timer
 924,48: VARIABLE
 924,48: )
 
186 const 
 924,27: const
 
103 NAME TYPE 
 924,33: time_t
 924,39: TYPE
 
26 TYPE 
 924,39: TYPE
 
298 * option_type_qualifier_list option_pointer 
 924,40: *
 
386 NAME VARIABLE 
 924,41: __timer
 924,48: VARIABLE
 
65 VARIABLE 
 924,48: VARIABLE
 
187 ) 
 924,48: )
 
60 ; 
 924,50: ;
 
23 extern 
 928,1: extern
 
8 struct 
 928,8: struct
 
22 NAME VARIABLE 
 928,15: tm
 928,17: VARIABLE
 
65 VARIABLE 
 928,17: VARIABLE
 
5 * option_type_qualifier_list option_pointer 
 928,18: *
 
64 NAME VARIABLE 
 928,19: localtime
 928,28: VARIABLE
 
65 VARIABLE 
 928,28: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 928,29: (
 928,30: const
 928,36: time_t
 928,42: TYPE
 928,43: *
 928,44: __timer
 928,51: VARIABLE
 928,51: )
 
186 const 
 928,30: const
 
103 NAME TYPE 
 928,36: time_t
 928,42: TYPE
 
26 TYPE 
 928,42: TYPE
 
298 * option_type_qualifier_list option_pointer 
 928,43: *
 
386 NAME VARIABLE 
 928,44: __timer
 928,51: VARIABLE
 
65 VARIABLE 
 928,51: VARIABLE
 
187 ) 
 928,51: )
 
60 ; 
 928,53: ;
 
23 extern 
 930,1: extern
 
8 struct 
 930,8: struct
 
22 NAME VARIABLE 
 930,15: tm
 930,17: VARIABLE
 
65 VARIABLE 
 930,17: VARIABLE
 
5 * option_type_qualifier_list option_pointer 
 930,18: *
 
64 NAME VARIABLE 
 930,19: gmtime_r
 930,27: VARIABLE
 
65 VARIABLE 
 930,27: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 930,28: (
 930,29: const
 930,35: time_t
 930,41: TYPE
 930,42: *
 930,44: __timer
 930,51: VARIABLE
 930,51: ,
 931,8: struct
 931,15: tm
 931,17: VARIABLE
 931,18: *
 931,20: __tp
 931,24: VARIABLE
 931,24: )
 
186 const 
 930,29: const
 
103 NAME TYPE 
 930,35: time_t
 930,41: TYPE
 
26 TYPE 
 930,41: TYPE
 
298 * option_type_qualifier_list option_pointer 
 930,42: *
 
386 NAME VARIABLE 
 930,44: __timer
 930,51: VARIABLE
 
65 VARIABLE 
 930,51: VARIABLE
 
300 , parameter_declaration 
 930,51: ,
 931,8: struct
 931,15: tm
 931,17: VARIABLE
 931,18: *
 931,20: __tp
 931,24: VARIABLE
 
391 struct 
 931,8: struct
 
22 NAME VARIABLE 
 931,15: tm
 931,17: VARIABLE
 
65 VARIABLE 
 931,17: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 931,18: *
 
386 NAME VARIABLE 
 931,20: __tp
 931,24: VARIABLE
 
65 VARIABLE 
 931,24: VARIABLE
 
187 ) 
 931,24: )
 
60 ; 
 931,26: ;
 
23 extern 
 935,1: extern
 
8 struct 
 935,8: struct
 
22 NAME VARIABLE 
 935,15: tm
 935,17: VARIABLE
 
65 VARIABLE 
 935,17: VARIABLE
 
5 * option_type_qualifier_list option_pointer 
 935,18: *
 
64 NAME VARIABLE 
 935,19: localtime_r
 935,30: VARIABLE
 
65 VARIABLE 
 935,30: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 935,31: (
 935,32: const
 935,38: time_t
 935,44: TYPE
 935,45: *
 935,47: __timer
 935,54: VARIABLE
 935,54: ,
 936,11: struct
 936,18: tm
 936,20: VARIABLE
 936,21: *
 936,23: __tp
 936,27: VARIABLE
 936,27: )
 
186 const 
 935,32: const
 
103 NAME TYPE 
 935,38: time_t
 935,44: TYPE
 
26 TYPE 
 935,44: TYPE
 
298 * option_type_qualifier_list option_pointer 
 935,45: *
 
386 NAME VARIABLE 
 935,47: __timer
 935,54: VARIABLE
 
65 VARIABLE 
 935,54: VARIABLE
 
300 , parameter_declaration 
 935,54: ,
 936,11: struct
 936,18: tm
 936,20: VARIABLE
 936,21: *
 936,23: __tp
 936,27: VARIABLE
 
391 struct 
 936,11: struct
 
22 NAME VARIABLE 
 936,18: tm
 936,20: VARIABLE
 
65 VARIABLE 
 936,20: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 936,21: *
 
386 NAME VARIABLE 
 936,23: __tp
 936,27: VARIABLE
 
65 VARIABLE 
 936,27: VARIABLE
 
187 ) 
 936,27: )
 
60 ; 
 936,29: ;
 
23 extern 
 938,1: extern
 
8 char 
 938,8: char
 
5 * option_type_qualifier_list option_pointer 
 938,13: *
 
64 NAME VARIABLE 
 938,14: asctime
 938,21: VARIABLE
 
65 VARIABLE 
 938,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 938,22: (
 938,23: const
 938,29: struct
 938,36: tm
 938,38: VARIABLE
 938,39: *
 938,40: __tp
 938,44: VARIABLE
 938,44: )
 
186 const 
 938,23: const
 
103 struct 
 938,29: struct
 
22 NAME VARIABLE 
 938,36: tm
 938,38: VARIABLE
 
65 VARIABLE 
 938,38: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 938,39: *
 
386 NAME VARIABLE 
 938,40: __tp
 938,44: VARIABLE
 
65 VARIABLE 
 938,44: VARIABLE
 
187 ) 
 938,44: )
 
60 ; 
 938,46: ;
 
23 extern 
 942,1: extern
 
8 char 
 942,8: char
 
5 * option_type_qualifier_list option_pointer 
 942,13: *
 
64 NAME VARIABLE 
 942,14: ctime
 942,19: VARIABLE
 
65 VARIABLE 
 942,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 942,20: (
 942,21: const
 942,27: time_t
 942,33: TYPE
 942,34: *
 942,35: __timer
 942,42: VARIABLE
 942,42: )
 
186 const 
 942,21: const
 
103 NAME TYPE 
 942,27: time_t
 942,33: TYPE
 
26 TYPE 
 942,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 942,34: *
 
386 NAME VARIABLE 
 942,35: __timer
 942,42: VARIABLE
 
65 VARIABLE 
 942,42: VARIABLE
 
187 ) 
 942,42: )
 
60 ; 
 942,44: ;
 
23 extern 
 944,1: extern
 
8 char 
 944,8: char
 
5 * option_type_qualifier_list option_pointer 
 944,13: *
 
64 NAME VARIABLE 
 944,14: asctime_r
 944,23: VARIABLE
 
65 VARIABLE 
 944,23: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 944,24: (
 944,25: const
 944,31: struct
 944,38: tm
 944,40: VARIABLE
 944,41: *
 944,43: __tp
 944,47: VARIABLE
 944,47: ,
 945,4: char
 945,9: *
 945,11: __buf
 945,16: VARIABLE
 945,16: )
 
186 const 
 944,25: const
 
103 struct 
 944,31: struct
 
22 NAME VARIABLE 
 944,38: tm
 944,40: VARIABLE
 
65 VARIABLE 
 944,40: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 944,41: *
 
386 NAME VARIABLE 
 944,43: __tp
 944,47: VARIABLE
 
65 VARIABLE 
 944,47: VARIABLE
 
300 , parameter_declaration 
 944,47: ,
 945,4: char
 945,9: *
 945,11: __buf
 945,16: VARIABLE
 
391 char 
 945,4: char
 
298 * option_type_qualifier_list option_pointer 
 945,9: *
 
386 NAME VARIABLE 
 945,11: __buf
 945,16: VARIABLE
 
65 VARIABLE 
 945,16: VARIABLE
 
187 ) 
 945,16: )
 
60 ; 
 945,18: ;
 
23 extern 
 949,1: extern
 
8 char 
 949,8: char
 
5 * option_type_qualifier_list option_pointer 
 949,13: *
 
64 NAME VARIABLE 
 949,14: ctime_r
 949,21: VARIABLE
 
65 VARIABLE 
 949,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 949,22: (
 949,23: const
 949,29: time_t
 949,35: TYPE
 949,36: *
 949,38: __timer
 949,45: VARIABLE
 949,45: ,
 950,9: char
 950,14: *
 950,16: __buf
 950,21: VARIABLE
 950,21: )
 
186 const 
 949,23: const
 
103 NAME TYPE 
 949,29: time_t
 949,35: TYPE
 
26 TYPE 
 949,35: TYPE
 
298 * option_type_qualifier_list option_pointer 
 949,36: *
 
386 NAME VARIABLE 
 949,38: __timer
 949,45: VARIABLE
 
65 VARIABLE 
 949,45: VARIABLE
 
300 , parameter_declaration 
 949,45: ,
 950,9: char
 950,14: *
 950,16: __buf
 950,21: VARIABLE
 
391 char 
 950,9: char
 
298 * option_type_qualifier_list option_pointer 
 950,14: *
 
386 NAME VARIABLE 
 950,16: __buf
 950,21: VARIABLE
 
65 VARIABLE 
 950,21: VARIABLE
 
187 ) 
 950,21: )
 
60 ; 
 950,23: ;
 
23 extern 
 952,1: extern
 
8 char 
 952,8: char
 
5 * option_type_qualifier_list option_pointer 
 952,13: *
 
64 NAME VARIABLE 
 952,14: __tzname
 952,22: VARIABLE
 
65 VARIABLE 
 952,22: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 952,22: [
 952,23: 2
 952,24: ]
 
188 CONSTANT 
 952,23: 2
 
305 ] 
 952,24: ]
 
60 ; 
 952,25: ;
 
23 extern 
 953,1: extern
 
8 int 
 953,8: int
 
5 NAME VARIABLE 
 953,12: __daylight
 953,22: VARIABLE
 
65 VARIABLE 
 953,22: VARIABLE
 
60 ; 
 953,22: ;
 
23 extern 
 954,1: extern
 
8 long 
 954,8: long
 
17 int 
 954,13: int
 
5 NAME VARIABLE 
 954,17: __timezone
 954,27: VARIABLE
 
65 VARIABLE 
 954,27: VARIABLE
 
60 ; 
 954,27: ;
 
23 extern 
 959,1: extern
 
8 char 
 959,8: char
 
5 * option_type_qualifier_list option_pointer 
 959,13: *
 
64 NAME VARIABLE 
 959,14: tzname
 959,20: VARIABLE
 
65 VARIABLE 
 959,20: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 959,20: [
 959,21: 2
 959,22: ]
 
188 CONSTANT 
 959,21: 2
 
305 ] 
 959,22: ]
 
60 ; 
 959,23: ;
 
23 extern 
 963,1: extern
 
8 void 
 963,8: void
 
5 NAME VARIABLE 
 963,13: tzset
 963,18: VARIABLE
 
65 VARIABLE 
 963,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 963,19: (
 963,20: void
 963,24: )
 
186 void 
 963,20: void
 
187 ) 
 963,24: )
 
60 ; 
 963,26: ;
 
23 extern 
 967,1: extern
 
8 int 
 967,8: int
 
5 NAME VARIABLE 
 967,12: daylight
 967,20: VARIABLE
 
65 VARIABLE 
 967,20: VARIABLE
 
60 ; 
 967,20: ;
 
23 extern 
 968,1: extern
 
8 long 
 968,8: long
 
17 int 
 968,13: int
 
5 NAME VARIABLE 
 968,17: timezone
 968,25: VARIABLE
 
65 VARIABLE 
 968,25: VARIABLE
 
60 ; 
 968,25: ;
 
23 extern 
 970,1: extern
 
8 NAME TYPE 
 970,8: time_t
 970,14: TYPE
 
26 TYPE 
 970,14: TYPE
 
5 NAME VARIABLE 
 970,15: timegm
 970,21: VARIABLE
 
65 VARIABLE 
 970,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 970,22: (
 970,23: struct
 970,30: tm
 970,32: VARIABLE
 970,33: *
 970,34: __tp
 970,38: VARIABLE
 970,38: )
 
186 struct 
 970,23: struct
 
22 NAME VARIABLE 
 970,30: tm
 970,32: VARIABLE
 
65 VARIABLE 
 970,32: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 970,33: *
 
386 NAME VARIABLE 
 970,34: __tp
 970,38: VARIABLE
 
65 VARIABLE 
 970,38: VARIABLE
 
187 ) 
 970,38: )
 
60 ; 
 970,40: ;
 
23 extern 
 972,1: extern
 
8 NAME TYPE 
 972,8: time_t
 972,14: TYPE
 
26 TYPE 
 972,14: TYPE
 
5 NAME VARIABLE 
 972,15: timelocal
 972,24: VARIABLE
 
65 VARIABLE 
 972,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 972,25: (
 972,26: struct
 972,33: tm
 972,35: VARIABLE
 972,36: *
 972,37: __tp
 972,41: VARIABLE
 972,41: )
 
186 struct 
 972,26: struct
 
22 NAME VARIABLE 
 972,33: tm
 972,35: VARIABLE
 
65 VARIABLE 
 972,35: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 972,36: *
 
386 NAME VARIABLE 
 972,37: __tp
 972,41: VARIABLE
 
65 VARIABLE 
 972,41: VARIABLE
 
187 ) 
 972,41: )
 
60 ; 
 972,43: ;
 
23 extern 
 974,1: extern
 
8 int 
 974,8: int
 
5 NAME VARIABLE 
 974,12: dysize
 974,18: VARIABLE
 
65 VARIABLE 
 974,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 974,19: (
 974,20: int
 974,24: __year
 974,30: VARIABLE
 974,30: )
 
186 int 
 974,20: int
 
298 NAME VARIABLE 
 974,24: __year
 974,30: VARIABLE
 
65 VARIABLE 
 974,30: VARIABLE
 
187 ) 
 974,30: )
 
60 ; 
 974,33: ;
 
23 extern 
 976,1: extern
 
8 int 
 976,8: int
 
5 NAME VARIABLE 
 976,12: nanosleep
 976,21: VARIABLE
 
65 VARIABLE 
 976,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 976,22: (
 976,23: const
 976,29: struct
 976,36: timespec
 976,44: VARIABLE
 976,45: *
 976,46: __requested_time
 976,62: VARIABLE
 976,62: ,
 977,9: struct
 977,16: timespec
 977,24: VARIABLE
 977,25: *
 977,26: __remaining
 977,37: VARIABLE
 977,37: )
 
186 const 
 976,23: const
 
103 struct 
 976,29: struct
 
22 NAME VARIABLE 
 976,36: timespec
 976,44: VARIABLE
 
65 VARIABLE 
 976,44: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 976,45: *
 
386 NAME VARIABLE 
 976,46: __requested_time
 976,62: VARIABLE
 
65 VARIABLE 
 976,62: VARIABLE
 
300 , parameter_declaration 
 976,62: ,
 977,9: struct
 977,16: timespec
 977,24: VARIABLE
 977,25: *
 977,26: __remaining
 977,37: VARIABLE
 
391 struct 
 977,9: struct
 
22 NAME VARIABLE 
 977,16: timespec
 977,24: VARIABLE
 
65 VARIABLE 
 977,24: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 977,25: *
 
386 NAME VARIABLE 
 977,26: __remaining
 977,37: VARIABLE
 
65 VARIABLE 
 977,37: VARIABLE
 
187 ) 
 977,37: )
 
60 ; 
 977,38: ;
 
23 extern 
 980,1: extern
 
8 int 
 980,8: int
 
5 NAME VARIABLE 
 980,12: clock_getres
 980,24: VARIABLE
 
65 VARIABLE 
 980,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 980,25: (
 980,26: clockid_t
 980,35: TYPE
 980,36: __clock_id
 980,46: VARIABLE
 980,46: ,
 980,48: struct
 980,55: timespec
 980,63: VARIABLE
 980,64: *
 980,65: __res
 980,70: VARIABLE
 980,70: )
 
186 NAME TYPE 
 980,26: clockid_t
 980,35: TYPE
 
65 TYPE 
 980,35: TYPE
 
298 NAME VARIABLE 
 980,36: __clock_id
 980,46: VARIABLE
 
65 VARIABLE 
 980,46: VARIABLE
 
300 , parameter_declaration 
 980,46: ,
 980,48: struct
 980,55: timespec
 980,63: VARIABLE
 980,64: *
 980,65: __res
 980,70: VARIABLE
 
391 struct 
 980,48: struct
 
22 NAME VARIABLE 
 980,55: timespec
 980,63: VARIABLE
 
65 VARIABLE 
 980,63: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 980,64: *
 
386 NAME VARIABLE 
 980,65: __res
 980,70: VARIABLE
 
65 VARIABLE 
 980,70: VARIABLE
 
187 ) 
 980,70: )
 
60 ; 
 980,72: ;
 
23 extern 
 983,1: extern
 
8 int 
 983,8: int
 
5 NAME VARIABLE 
 983,12: clock_gettime
 983,25: VARIABLE
 
65 VARIABLE 
 983,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 983,26: (
 983,27: clockid_t
 983,36: TYPE
 983,37: __clock_id
 983,47: VARIABLE
 983,47: ,
 983,49: struct
 983,56: timespec
 983,64: VARIABLE
 983,65: *
 983,66: __tp
 983,70: VARIABLE
 983,70: )
 
186 NAME TYPE 
 983,27: clockid_t
 983,36: TYPE
 
65 TYPE 
 983,36: TYPE
 
298 NAME VARIABLE 
 983,37: __clock_id
 983,47: VARIABLE
 
65 VARIABLE 
 983,47: VARIABLE
 
300 , parameter_declaration 
 983,47: ,
 983,49: struct
 983,56: timespec
 983,64: VARIABLE
 983,65: *
 983,66: __tp
 983,70: VARIABLE
 
391 struct 
 983,49: struct
 
22 NAME VARIABLE 
 983,56: timespec
 983,64: VARIABLE
 
65 VARIABLE 
 983,64: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 983,65: *
 
386 NAME VARIABLE 
 983,66: __tp
 983,70: VARIABLE
 
65 VARIABLE 
 983,70: VARIABLE
 
187 ) 
 983,70: )
 
60 ; 
 983,72: ;
 
23 extern 
 986,1: extern
 
8 int 
 986,8: int
 
5 NAME VARIABLE 
 986,12: clock_settime
 986,25: VARIABLE
 
65 VARIABLE 
 986,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 986,26: (
 986,27: clockid_t
 986,36: TYPE
 986,37: __clock_id
 986,47: VARIABLE
 986,47: ,
 986,49: const
 986,55: struct
 986,62: timespec
 986,70: VARIABLE
 986,71: *
 986,72: __tp
 986,76: VARIABLE
 986,76: )
 
186 NAME TYPE 
 986,27: clockid_t
 986,36: TYPE
 
65 TYPE 
 986,36: TYPE
 
298 NAME VARIABLE 
 986,37: __clock_id
 986,47: VARIABLE
 
65 VARIABLE 
 986,47: VARIABLE
 
300 , parameter_declaration 
 986,47: ,
 986,49: const
 986,55: struct
 986,62: timespec
 986,70: VARIABLE
 986,71: *
 986,72: __tp
 986,76: VARIABLE
 
391 const 
 986,49: const
 
103 struct 
 986,55: struct
 
22 NAME VARIABLE 
 986,62: timespec
 986,70: VARIABLE
 
65 VARIABLE 
 986,70: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 986,71: *
 
386 NAME VARIABLE 
 986,72: __tp
 986,76: VARIABLE
 
65 VARIABLE 
 986,76: VARIABLE
 
187 ) 
 986,76: )
 
60 ; 
 987,6: ;
 
23 extern 
 989,1: extern
 
8 int 
 989,8: int
 
5 NAME VARIABLE 
 989,12: clock_nanosleep
 989,27: VARIABLE
 
65 VARIABLE 
 989,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 989,28: (
 989,29: clockid_t
 989,38: TYPE
 989,39: __clock_id
 989,49: VARIABLE
 989,49: ,
 989,51: int
 989,55: __flags
 989,62: VARIABLE
 989,62: ,
 990,8: const
 990,14: struct
 990,21: timespec
 990,29: VARIABLE
 990,30: *
 990,31: __req
 990,36: VARIABLE
 990,36: ,
 991,8: struct
 991,15: timespec
 991,23: VARIABLE
 991,24: *
 991,25: __rem
 991,30: VARIABLE
 991,30: )
 
186 NAME TYPE 
 989,29: clockid_t
 989,38: TYPE
 
65 TYPE 
 989,38: TYPE
 
298 NAME VARIABLE 
 989,39: __clock_id
 989,49: VARIABLE
 
65 VARIABLE 
 989,49: VARIABLE
 
300 , parameter_declaration 
 989,49: ,
 989,51: int
 989,55: __flags
 989,62: VARIABLE
 
391 int 
 989,51: int
 
298 NAME VARIABLE 
 989,55: __flags
 989,62: VARIABLE
 
65 VARIABLE 
 989,62: VARIABLE
 
300 , parameter_declaration 
 989,62: ,
 990,8: const
 990,14: struct
 990,21: timespec
 990,29: VARIABLE
 990,30: *
 990,31: __req
 990,36: VARIABLE
 
391 const 
 990,8: const
 
103 struct 
 990,14: struct
 
22 NAME VARIABLE 
 990,21: timespec
 990,29: VARIABLE
 
65 VARIABLE 
 990,29: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 990,30: *
 
386 NAME VARIABLE 
 990,31: __req
 990,36: VARIABLE
 
65 VARIABLE 
 990,36: VARIABLE
 
300 , parameter_declaration 
 990,36: ,
 991,8: struct
 991,15: timespec
 991,23: VARIABLE
 991,24: *
 991,25: __rem
 991,30: VARIABLE
 
391 struct 
 991,8: struct
 
22 NAME VARIABLE 
 991,15: timespec
 991,23: VARIABLE
 
65 VARIABLE 
 991,23: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 991,24: *
 
386 NAME VARIABLE 
 991,25: __rem
 991,30: VARIABLE
 
65 VARIABLE 
 991,30: VARIABLE
 
187 ) 
 991,30: )
 
60 ; 
 991,31: ;
 
23 extern 
 993,1: extern
 
8 int 
 993,8: int
 
5 NAME VARIABLE 
 993,12: clock_getcpuclockid
 993,31: VARIABLE
 
65 VARIABLE 
 993,31: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 993,32: (
 993,33: pid_t
 993,38: TYPE
 993,39: __pid
 993,44: VARIABLE
 993,44: ,
 993,46: clockid_t
 993,55: TYPE
 993,56: *
 993,57: __clock_id
 993,67: VARIABLE
 993,67: )
 
186 NAME TYPE 
 993,33: pid_t
 993,38: TYPE
 
65 TYPE 
 993,38: TYPE
 
298 NAME VARIABLE 
 993,39: __pid
 993,44: VARIABLE
 
65 VARIABLE 
 993,44: VARIABLE
 
300 , parameter_declaration 
 993,44: ,
 993,46: clockid_t
 993,55: TYPE
 993,56: *
 993,57: __clock_id
 993,67: VARIABLE
 
391 NAME TYPE 
 993,46: clockid_t
 993,55: TYPE
 
26 TYPE 
 993,55: TYPE
 
298 * option_type_qualifier_list option_pointer 
 993,56: *
 
386 NAME VARIABLE 
 993,57: __clock_id
 993,67: VARIABLE
 
65 VARIABLE 
 993,67: VARIABLE
 
187 ) 
 993,67: )
 
60 ; 
 993,69: ;
 
23 extern 
 998,1: extern
 
8 int 
 998,8: int
 
5 NAME VARIABLE 
 998,12: timer_create
 998,24: VARIABLE
 
65 VARIABLE 
 998,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 998,25: (
 998,26: clockid_t
 998,35: TYPE
 998,36: __clock_id
 998,46: VARIABLE
 998,46: ,
 999,5: struct
 999,12: sigevent
 999,20: VARIABLE
 999,21: *
 999,23: __evp
 999,28: VARIABLE
 999,28: ,
 1000,5: timer_t
 1000,12: TYPE
 1000,13: *
 1000,15: __timerid
 1000,24: VARIABLE
 1000,24: )
 
186 NAME TYPE 
 998,26: clockid_t
 998,35: TYPE
 
65 TYPE 
 998,35: TYPE
 
298 NAME VARIABLE 
 998,36: __clock_id
 998,46: VARIABLE
 
65 VARIABLE 
 998,46: VARIABLE
 
300 , parameter_declaration 
 998,46: ,
 999,5: struct
 999,12: sigevent
 999,20: VARIABLE
 999,21: *
 999,23: __evp
 999,28: VARIABLE
 
391 struct 
 999,5: struct
 
22 NAME VARIABLE 
 999,12: sigevent
 999,20: VARIABLE
 
65 VARIABLE 
 999,20: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 999,21: *
 
386 NAME VARIABLE 
 999,23: __evp
 999,28: VARIABLE
 
65 VARIABLE 
 999,28: VARIABLE
 
300 , parameter_declaration 
 999,28: ,
 1000,5: timer_t
 1000,12: TYPE
 1000,13: *
 1000,15: __timerid
 1000,24: VARIABLE
 
391 NAME TYPE 
 1000,5: timer_t
 1000,12: TYPE
 
26 TYPE 
 1000,12: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1000,13: *
 
386 NAME VARIABLE 
 1000,15: __timerid
 1000,24: VARIABLE
 
65 VARIABLE 
 1000,24: VARIABLE
 
187 ) 
 1000,24: )
 
60 ; 
 1000,26: ;
 
23 extern 
 1003,1: extern
 
8 int 
 1003,8: int
 
5 NAME VARIABLE 
 1003,12: timer_delete
 1003,24: VARIABLE
 
65 VARIABLE 
 1003,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1003,25: (
 1003,26: timer_t
 1003,33: TYPE
 1003,34: __timerid
 1003,43: VARIABLE
 1003,43: )
 
186 NAME TYPE 
 1003,26: timer_t
 1003,33: TYPE
 
65 TYPE 
 1003,33: TYPE
 
298 NAME VARIABLE 
 1003,34: __timerid
 1003,43: VARIABLE
 
65 VARIABLE 
 1003,43: VARIABLE
 
187 ) 
 1003,43: )
 
60 ; 
 1003,45: ;
 
23 extern 
 1007,1: extern
 
8 int 
 1007,8: int
 
5 NAME VARIABLE 
 1007,12: timer_settime
 1007,25: VARIABLE
 
65 VARIABLE 
 1007,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1007,26: (
 1007,27: timer_t
 1007,34: TYPE
 1007,35: __timerid
 1007,44: VARIABLE
 1007,44: ,
 1007,46: int
 1007,50: __flags
 1007,57: VARIABLE
 1007,57: ,
 1008,6: const
 1008,12: struct
 1008,19: itimerspec
 1008,29: VARIABLE
 1008,30: *
 1008,32: __value
 1008,39: VARIABLE
 1008,39: ,
 1009,6: struct
 1009,13: itimerspec
 1009,23: VARIABLE
 1009,24: *
 1009,26: __ovalue
 1009,34: VARIABLE
 1009,34: )
 
186 NAME TYPE 
 1007,27: timer_t
 1007,34: TYPE
 
65 TYPE 
 1007,34: TYPE
 
298 NAME VARIABLE 
 1007,35: __timerid
 1007,44: VARIABLE
 
65 VARIABLE 
 1007,44: VARIABLE
 
300 , parameter_declaration 
 1007,44: ,
 1007,46: int
 1007,50: __flags
 1007,57: VARIABLE
 
391 int 
 1007,46: int
 
298 NAME VARIABLE 
 1007,50: __flags
 1007,57: VARIABLE
 
65 VARIABLE 
 1007,57: VARIABLE
 
300 , parameter_declaration 
 1007,57: ,
 1008,6: const
 1008,12: struct
 1008,19: itimerspec
 1008,29: VARIABLE
 1008,30: *
 1008,32: __value
 1008,39: VARIABLE
 
391 const 
 1008,6: const
 
103 struct 
 1008,12: struct
 
22 NAME VARIABLE 
 1008,19: itimerspec
 1008,29: VARIABLE
 
65 VARIABLE 
 1008,29: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1008,30: *
 
386 NAME VARIABLE 
 1008,32: __value
 1008,39: VARIABLE
 
65 VARIABLE 
 1008,39: VARIABLE
 
300 , parameter_declaration 
 1008,39: ,
 1009,6: struct
 1009,13: itimerspec
 1009,23: VARIABLE
 1009,24: *
 1009,26: __ovalue
 1009,34: VARIABLE
 
391 struct 
 1009,6: struct
 
22 NAME VARIABLE 
 1009,13: itimerspec
 1009,23: VARIABLE
 
65 VARIABLE 
 1009,23: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1009,24: *
 
386 NAME VARIABLE 
 1009,26: __ovalue
 1009,34: VARIABLE
 
65 VARIABLE 
 1009,34: VARIABLE
 
187 ) 
 1009,34: )
 
60 ; 
 1009,36: ;
 
23 extern 
 1012,1: extern
 
8 int 
 1012,8: int
 
5 NAME VARIABLE 
 1012,12: timer_gettime
 1012,25: VARIABLE
 
65 VARIABLE 
 1012,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1012,26: (
 1012,27: timer_t
 1012,34: TYPE
 1012,35: __timerid
 1012,44: VARIABLE
 1012,44: ,
 1012,46: struct
 1012,53: itimerspec
 1012,63: VARIABLE
 1012,64: *
 1012,65: __value
 1012,72: VARIABLE
 1012,72: )
 
186 NAME TYPE 
 1012,27: timer_t
 1012,34: TYPE
 
65 TYPE 
 1012,34: TYPE
 
298 NAME VARIABLE 
 1012,35: __timerid
 1012,44: VARIABLE
 
65 VARIABLE 
 1012,44: VARIABLE
 
300 , parameter_declaration 
 1012,44: ,
 1012,46: struct
 1012,53: itimerspec
 1012,63: VARIABLE
 1012,64: *
 1012,65: __value
 1012,72: VARIABLE
 
391 struct 
 1012,46: struct
 
22 NAME VARIABLE 
 1012,53: itimerspec
 1012,63: VARIABLE
 
65 VARIABLE 
 1012,63: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1012,64: *
 
386 NAME VARIABLE 
 1012,65: __value
 1012,72: VARIABLE
 
65 VARIABLE 
 1012,72: VARIABLE
 
187 ) 
 1012,72: )
 
60 ; 
 1013,6: ;
 
23 extern 
 1015,1: extern
 
8 int 
 1015,8: int
 
5 NAME VARIABLE 
 1015,12: timer_getoverrun
 1015,28: VARIABLE
 
65 VARIABLE 
 1015,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1015,29: (
 1015,30: timer_t
 1015,37: TYPE
 1015,38: __timerid
 1015,47: VARIABLE
 1015,47: )
 
186 NAME TYPE 
 1015,30: timer_t
 1015,37: TYPE
 
65 TYPE 
 1015,37: TYPE
 
298 NAME VARIABLE 
 1015,38: __timerid
 1015,47: VARIABLE
 
65 VARIABLE 
 1015,47: VARIABLE
 
187 ) 
 1015,47: )
 
60 ; 
 1015,49: ;
 
23 extern 
 1022,1: extern
 
8 int 
 1022,8: int
 
5 NAME VARIABLE 
 1022,12: timespec_get
 1022,24: VARIABLE
 
65 VARIABLE 
 1022,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1022,25: (
 1022,26: struct
 1022,33: timespec
 1022,41: VARIABLE
 1022,42: *
 1022,43: __ts
 1022,47: VARIABLE
 1022,47: ,
 1022,49: int
 1022,53: __base
 1022,59: VARIABLE
 1022,59: )
 
186 struct 
 1022,26: struct
 
22 NAME VARIABLE 
 1022,33: timespec
 1022,41: VARIABLE
 
65 VARIABLE 
 1022,41: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1022,42: *
 
386 NAME VARIABLE 
 1022,43: __ts
 1022,47: VARIABLE
 
65 VARIABLE 
 1022,47: VARIABLE
 
300 , parameter_declaration 
 1022,47: ,
 1022,49: int
 1022,53: __base
 1022,59: VARIABLE
 
391 int 
 1022,49: int
 
298 NAME VARIABLE 
 1022,53: __base
 1022,59: VARIABLE
 
65 VARIABLE 
 1022,59: VARIABLE
 
187 ) 
 1022,59: )
 
60 ; 
 1023,7: ;
 
23 void 
 1033,1: void
 
5 NAME VARIABLE 
 1033,6: initVector
 1033,16: VARIABLE
 
65 VARIABLE 
 1033,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1033,16: (
 1033,17: int
 1033,21: v
 1033,22: VARIABLE
 1033,22: [
 1033,23: ]
 1033,24: ,
 1033,26: int
 1033,30: n
 1033,31: VARIABLE
 1033,31: )
 
186 int 
 1033,17: int
 
298 NAME VARIABLE 
 1033,21: v
 1033,22: VARIABLE
 
65 VARIABLE 
 1033,22: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1033,22: [
 1033,23: ]
 
305 ] 
 1033,23: ]
 
300 , parameter_declaration 
 1033,24: ,
 1033,26: int
 1033,30: n
 1033,31: VARIABLE
 
391 int 
 1033,26: int
 
298 NAME VARIABLE 
 1033,30: n
 1033,31: VARIABLE
 
65 VARIABLE 
 1033,31: VARIABLE
 
187 ) 
 1033,31: )
 
60 ; 
 1033,32: ;
 
23 void 
 1034,1: void
 
5 NAME VARIABLE 
 1034,6: printVector
 1034,17: VARIABLE
 
65 VARIABLE 
 1034,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1034,17: (
 1034,18: int
 1034,22: v
 1034,23: VARIABLE
 1034,23: [
 1034,24: ]
 1034,25: ,
 1034,27: int
 1034,31: n
 1034,32: VARIABLE
 1034,32: )
 
186 int 
 1034,18: int
 
298 NAME VARIABLE 
 1034,22: v
 1034,23: VARIABLE
 
65 VARIABLE 
 1034,23: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1034,23: [
 1034,24: ]
 
305 ] 
 1034,24: ]
 
300 , parameter_declaration 
 1034,25: ,
 1034,27: int
 1034,31: n
 1034,32: VARIABLE
 
391 int 
 1034,27: int
 
298 NAME VARIABLE 
 1034,31: n
 1034,32: VARIABLE
 
65 VARIABLE 
 1034,32: VARIABLE
 
187 ) 
 1034,32: )
 
60 ; 
 1034,33: ;
 
23 int 
 1036,1: int
 
5 NAME VARIABLE 
 1036,5: binsearch_kr
 1036,17: VARIABLE
 
65 VARIABLE 
 1036,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1036,17: (
 1036,18: int
 1036,22: x
 1036,23: VARIABLE
 1036,23: ,
 1036,25: int
 1036,29: v
 1036,30: VARIABLE
 1036,30: [
 1036,31: ]
 1036,32: ,
 1036,34: int
 1036,38: n
 1036,39: VARIABLE
 1036,39: )
 
186 int 
 1036,18: int
 
298 NAME VARIABLE 
 1036,22: x
 1036,23: VARIABLE
 
65 VARIABLE 
 1036,23: VARIABLE
 
300 , parameter_declaration 
 1036,23: ,
 1036,25: int
 1036,29: v
 1036,30: VARIABLE
 1036,30: [
 1036,31: ]
 
391 int 
 1036,25: int
 
298 NAME VARIABLE 
 1036,29: v
 1036,30: VARIABLE
 
65 VARIABLE 
 1036,30: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1036,30: [
 1036,31: ]
 
305 ] 
 1036,31: ]
 
300 , parameter_declaration 
 1036,32: ,
 1036,34: int
 1036,38: n
 1036,39: VARIABLE
 
391 int 
 1036,34: int
 
298 NAME VARIABLE 
 1036,38: n
 1036,39: VARIABLE
 
65 VARIABLE 
 1036,39: VARIABLE
 
187 ) 
 1036,39: )
 
60 ; 
 1036,40: ;
 
23 int 
 1037,1: int
 
5 NAME VARIABLE 
 1037,5: binsearch
 1037,14: VARIABLE
 
65 VARIABLE 
 1037,14: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1037,14: (
 1037,15: int
 1037,19: x
 1037,20: VARIABLE
 1037,20: ,
 1037,22: int
 1037,26: v
 1037,27: VARIABLE
 1037,27: [
 1037,28: ]
 1037,29: ,
 1037,31: int
 1037,35: n
 1037,36: VARIABLE
 1037,36: )
 
186 int 
 1037,15: int
 
298 NAME VARIABLE 
 1037,19: x
 1037,20: VARIABLE
 
65 VARIABLE 
 1037,20: VARIABLE
 
300 , parameter_declaration 
 1037,20: ,
 1037,22: int
 1037,26: v
 1037,27: VARIABLE
 1037,27: [
 1037,28: ]
 
391 int 
 1037,22: int
 
298 NAME VARIABLE 
 1037,26: v
 1037,27: VARIABLE
 
65 VARIABLE 
 1037,27: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1037,27: [
 1037,28: ]
 
305 ] 
 1037,28: ]
 
300 , parameter_declaration 
 1037,29: ,
 1037,31: int
 1037,35: n
 1037,36: VARIABLE
 
391 int 
 1037,31: int
 
298 NAME VARIABLE 
 1037,35: n
 1037,36: VARIABLE
 
65 VARIABLE 
 1037,36: VARIABLE
 
187 ) 
 1037,36: )
 
60 ; 
 1037,37: ;
 
23 void 
 1039,1: void
 
5 NAME VARIABLE 
 1039,6: test_binsearch
 1039,20: VARIABLE
 
65 VARIABLE 
 1039,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1039,20: (
 1039,21: int
 1039,25: binsearch
 1039,34: VARIABLE
 1039,34: (
 1039,35: int
 1039,39: x
 1039,40: VARIABLE
 1039,40: ,
 1039,42: int
 1039,46: v
 1039,47: VARIABLE
 1039,47: [
 1039,48: ]
 1039,49: ,
 1039,51: int
 1039,55: n
 1039,56: VARIABLE
 1039,56: )
 1039,57: ,
 1039,59: int
 1039,63: x
 1039,64: VARIABLE
 1039,64: ,
 1039,66: int
 1039,70: v
 1039,71: VARIABLE
 1039,71: [
 1039,72: ]
 1039,73: ,
 1039,75: int
 1039,79: n
 1039,80: VARIABLE
 1039,80: )
 
186 int 
 1039,21: int
 
298 NAME VARIABLE 
 1039,25: binsearch
 1039,34: VARIABLE
 
65 VARIABLE 
 1039,34: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1039,34: (
 1039,35: int
 1039,39: x
 1039,40: VARIABLE
 1039,40: ,
 1039,42: int
 1039,46: v
 1039,47: VARIABLE
 1039,47: [
 1039,48: ]
 1039,49: ,
 1039,51: int
 1039,55: n
 1039,56: VARIABLE
 1039,56: )
 
186 int 
 1039,35: int
 
298 NAME VARIABLE 
 1039,39: x
 1039,40: VARIABLE
 
65 VARIABLE 
 1039,40: VARIABLE
 
300 , parameter_declaration 
 1039,40: ,
 1039,42: int
 1039,46: v
 1039,47: VARIABLE
 1039,47: [
 1039,48: ]
 
391 int 
 1039,42: int
 
298 NAME VARIABLE 
 1039,46: v
 1039,47: VARIABLE
 
65 VARIABLE 
 1039,47: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1039,47: [
 1039,48: ]
 
305 ] 
 1039,48: ]
 
300 , parameter_declaration 
 1039,49: ,
 1039,51: int
 1039,55: n
 1039,56: VARIABLE
 
391 int 
 1039,51: int
 
298 NAME VARIABLE 
 1039,55: n
 1039,56: VARIABLE
 
65 VARIABLE 
 1039,56: VARIABLE
 
187 ) 
 1039,56: )
 
300 , parameter_declaration 
 1039,57: ,
 1039,59: int
 1039,63: x
 1039,64: VARIABLE
 
391 int 
 1039,59: int
 
298 NAME VARIABLE 
 1039,63: x
 1039,64: VARIABLE
 
65 VARIABLE 
 1039,64: VARIABLE
 
300 , parameter_declaration 
 1039,64: ,
 1039,66: int
 1039,70: v
 1039,71: VARIABLE
 1039,71: [
 1039,72: ]
 
391 int 
 1039,66: int
 
298 NAME VARIABLE 
 1039,70: v
 1039,71: VARIABLE
 
65 VARIABLE 
 1039,71: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1039,71: [
 1039,72: ]
 
305 ] 
 1039,72: ]
 
300 , parameter_declaration 
 1039,73: ,
 1039,75: int
 1039,79: n
 1039,80: VARIABLE
 
391 int 
 1039,75: int
 
298 NAME VARIABLE 
 1039,79: n
 1039,80: VARIABLE
 
65 VARIABLE 
 1039,80: VARIABLE
 
187 ) 
 1039,80: )
 
60 ; 
 1039,81: ;
 
23 int 
 1041,1: int
 
5 NAME VARIABLE 
 1041,5: main
 1041,9: VARIABLE
 
65 VARIABLE 
 1041,9: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1041,9: (
 1041,10: void
 1041,14: )
 
186 void 
 1041,10: void
 
187 ) 
 1041,14: )
 
94 { option_block_item_list } 
 1042,1: {
 1043,3: int
 1043,7: v
 1043,8: VARIABLE
 1043,8: [
 1043,9: 10000
 1043,14: ]
 1043,15: ;
 1045,3: initVector
 1045,13: VARIABLE
 1045,13: (
 1045,14: v
 1045,15: VARIABLE
 1045,15: ,
 1045,17: 10000
 1045,22: )
 1045,23: ;
 1048,3: int
 1048,7: x
 1048,8: VARIABLE
 1048,9: =
 1048,11: -
 1048,12: 1
 1048,13: ;
 1051,3: test_binsearch
 1051,17: VARIABLE
 1051,17: (
 1051,18: binsearch_kr
 1051,30: VARIABLE
 1051,30: ,
 1051,32: x
 1051,33: VARIABLE
 1051,33: ,
 1051,35: v
 1051,36: VARIABLE
 1051,36: ,
 1051,38: 10000
 1051,43: )
 1051,44: ;
 1054,3: test_binsearch
 1054,17: VARIABLE
 1054,17: (
 1054,18: binsearch
 1054,27: VARIABLE
 1054,27: ,
 1054,29: x
 1054,30: VARIABLE
 1054,30: ,
 1054,32: v
 1054,33: VARIABLE
 1054,33: ,
 1054,35: 10000
 1054,40: )
 1054,41: ;
 1056,3: return
 1056,10: 0
 1056,11: ;
 1057,1: }
 
201 int 
 1043,3: int
 
93 NAME VARIABLE 
 1043,7: v
 1043,8: VARIABLE
 
65 VARIABLE 
 1043,8: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1043,8: [
 1043,9: 10000
 1043,14: ]
 
188 CONSTANT 
 1043,9: 10000
 
305 ] 
 1043,14: ]
 
60 ; 
 1043,15: ;
 
201 NAME VARIABLE 
 1045,3: initVector
 1045,13: VARIABLE
 
65 VARIABLE 
 1045,13: VARIABLE
 
147 ( option_argument_expression_list ) 
 1045,13: (
 1045,14: v
 1045,15: VARIABLE
 1045,15: ,
 1045,17: 10000
 1045,22: )
 
235 NAME VARIABLE 
 1045,14: v
 1045,15: VARIABLE
 
179 VARIABLE 
 1045,15: VARIABLE
 
352 , assignment_expression 
 1045,15: ,
 1045,17: 10000
 
429 CONSTANT 
 1045,17: 10000
 
351 ) 
 1045,22: )
 
331 ; 
 1045,23: ;
 
201 int 
 1048,3: int
 
93 NAME VARIABLE 
 1048,7: x
 1048,8: VARIABLE
 
65 VARIABLE 
 1048,8: VARIABLE
 
59 = c_initializer 
 1048,9: =
 1048,11: -
 1048,12: 1
 
108 - 
 1048,11: -
 
149 CONSTANT 
 1048,12: 1
 
60 ; 
 1048,13: ;
 
201 NAME VARIABLE 
 1051,3: test_binsearch
 1051,17: VARIABLE
 
65 VARIABLE 
 1051,17: VARIABLE
 
147 ( option_argument_expression_list ) 
 1051,17: (
 1051,18: binsearch_kr
 1051,30: VARIABLE
 1051,30: ,
 1051,32: x
 1051,33: VARIABLE
 1051,33: ,
 1051,35: v
 1051,36: VARIABLE
 1051,36: ,
 1051,38: 10000
 1051,43: )
 
235 NAME VARIABLE 
 1051,18: binsearch_kr
 1051,30: VARIABLE
 
179 VARIABLE 
 1051,30: VARIABLE
 
352 , assignment_expression 
 1051,30: ,
 1051,32: x
 1051,33: VARIABLE
 
429 NAME VARIABLE 
 1051,32: x
 1051,33: VARIABLE
 
179 VARIABLE 
 1051,33: VARIABLE
 
352 , assignment_expression 
 1051,33: ,
 1051,35: v
 1051,36: VARIABLE
 
429 NAME VARIABLE 
 1051,35: v
 1051,36: VARIABLE
 
179 VARIABLE 
 1051,36: VARIABLE
 
352 , assignment_expression 
 1051,36: ,
 1051,38: 10000
 
429 CONSTANT 
 1051,38: 10000
 
351 ) 
 1051,43: )
 
331 ; 
 1051,44: ;
 
201 NAME VARIABLE 
 1054,3: test_binsearch
 1054,17: VARIABLE
 
65 VARIABLE 
 1054,17: VARIABLE
 
147 ( option_argument_expression_list ) 
 1054,17: (
 1054,18: binsearch
 1054,27: VARIABLE
 1054,27: ,
 1054,29: x
 1054,30: VARIABLE
 1054,30: ,
 1054,32: v
 1054,33: VARIABLE
 1054,33: ,
 1054,35: 10000
 1054,40: )
 
235 NAME VARIABLE 
 1054,18: binsearch
 1054,27: VARIABLE
 
179 VARIABLE 
 1054,27: VARIABLE
 
352 , assignment_expression 
 1054,27: ,
 1054,29: x
 1054,30: VARIABLE
 
429 NAME VARIABLE 
 1054,29: x
 1054,30: VARIABLE
 
179 VARIABLE 
 1054,30: VARIABLE
 
352 , assignment_expression 
 1054,30: ,
 1054,32: v
 1054,33: VARIABLE
 
429 NAME VARIABLE 
 1054,32: v
 1054,33: VARIABLE
 
179 VARIABLE 
 1054,33: VARIABLE
 
352 , assignment_expression 
 1054,33: ,
 1054,35: 10000
 
429 CONSTANT 
 1054,35: 10000
 
351 ) 
 1054,40: )
 
331 ; 
 1054,41: ;
 
201 return option_expression ; 
 1056,3: return
 1056,10: 0
 1056,11: ;
 
338 CONSTANT 
 1056,10: 0
 
415 ; 
 1056,11: ;
 
201 } 
 1057,1: }
 
23 void 
 1059,1: void
 
5 NAME VARIABLE 
 1059,6: initVector
 1059,16: VARIABLE
 
65 VARIABLE 
 1059,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1059,16: (
 1059,17: int
 1059,21: v
 1059,22: VARIABLE
 1059,22: [
 1059,23: ]
 1059,24: ,
 1059,26: int
 1059,30: n
 1059,31: VARIABLE
 1059,31: )
 
186 int 
 1059,17: int
 
298 NAME VARIABLE 
 1059,21: v
 1059,22: VARIABLE
 
65 VARIABLE 
 1059,22: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1059,22: [
 1059,23: ]
 
305 ] 
 1059,23: ]
 
300 , parameter_declaration 
 1059,24: ,
 1059,26: int
 1059,30: n
 1059,31: VARIABLE
 
391 int 
 1059,26: int
 
298 NAME VARIABLE 
 1059,30: n
 1059,31: VARIABLE
 
65 VARIABLE 
 1059,31: VARIABLE
 
187 ) 
 1059,31: )
 
94 { option_block_item_list } 
 1060,1: {
 1061,3: int
 1061,7: i
 1061,8: VARIABLE
 1061,8: ;
 1062,3: for
 1062,7: (
 1062,8: i
 1062,9: VARIABLE
 1062,10: =
 1062,12: 0
 1062,13: ;
 1062,15: i
 1062,16: VARIABLE
 1062,17: <
 1062,19: n
 1062,20: VARIABLE
 1062,20: ;
 1062,22: ++
 1062,24: i
 1062,25: VARIABLE
 1062,25: )
 1063,3: {
 1064,5: v
 1064,6: VARIABLE
 1064,6: [
 1064,7: i
 1064,8: VARIABLE
 1064,8: ]
 1064,10: =
 1064,12: i
 1064,13: VARIABLE
 1064,13: ;
 1065,3: }
 1066,1: }
 
201 int 
 1061,3: int
 
93 NAME VARIABLE 
 1061,7: i
 1061,8: VARIABLE
 
65 VARIABLE 
 1061,8: VARIABLE
 
60 ; 
 1061,8: ;
 
320 for ( option_expression ; option_expression ; option_expression ) scoped_statement 
 1062,3: for
 1062,7: (
 1062,8: i
 1062,9: VARIABLE
 1062,10: =
 1062,12: 0
 1062,13: ;
 1062,15: i
 1062,16: VARIABLE
 1062,17: <
 1062,19: n
 1062,20: VARIABLE
 1062,20: ;
 1062,22: ++
 1062,24: i
 1062,25: VARIABLE
 1062,25: )
 1063,3: {
 1064,5: v
 1064,6: VARIABLE
 1064,6: [
 1064,7: i
 1064,8: VARIABLE
 1064,8: ]
 1064,10: =
 1064,12: i
 1064,13: VARIABLE
 1064,13: ;
 1065,3: }
 
408 ( option_expression ; option_expression ; option_expression ) scoped_statement 
 1062,7: (
 1062,8: i
 1062,9: VARIABLE
 1062,10: =
 1062,12: 0
 1062,13: ;
 1062,15: i
 1062,16: VARIABLE
 1062,17: <
 1062,19: n
 1062,20: VARIABLE
 1062,20: ;
 1062,22: ++
 1062,24: i
 1062,25: VARIABLE
 1062,25: )
 1063,3: {
 1064,5: v
 1064,6: VARIABLE
 1064,6: [
 1064,7: i
 1064,8: VARIABLE
 1064,8: ]
 1064,10: =
 1064,12: i
 1064,13: VARIABLE
 1064,13: ;
 1065,3: }
 
460 NAME VARIABLE 
 1062,8: i
 1062,9: VARIABLE
 
65 VARIABLE 
 1062,9: VARIABLE
 
181 = 
 1062,10: =
 
279 CONSTANT 
 1062,12: 0
 
489 ; option_expression ; option_expression ) scoped_statement 
 1062,13: ;
 1062,15: i
 1062,16: VARIABLE
 1062,17: <
 1062,19: n
 1062,20: VARIABLE
 1062,20: ;
 1062,22: ++
 1062,24: i
 1062,25: VARIABLE
 1062,25: )
 1063,3: {
 1064,5: v
 1064,6: VARIABLE
 1064,6: [
 1064,7: i
 1064,8: VARIABLE
 1064,8: ]
 1064,10: =
 1064,12: i
 1064,13: VARIABLE
 1064,13: ;
 1065,3: }
 
505 NAME VARIABLE 
 1062,15: i
 1062,16: VARIABLE
 
179 VARIABLE 
 1062,16: VARIABLE
 
154 < 
 1062,17: <
 
252 NAME VARIABLE 
 1062,19: n
 1062,20: VARIABLE
 
179 VARIABLE 
 1062,20: VARIABLE
 
517 ; option_expression ) scoped_statement 
 1062,20: ;
 1062,22: ++
 1062,24: i
 1062,25: VARIABLE
 1062,25: )
 1063,3: {
 1064,5: v
 1064,6: VARIABLE
 1064,6: [
 1064,7: i
 1064,8: VARIABLE
 1064,8: ]
 1064,10: =
 1064,12: i
 1064,13: VARIABLE
 1064,13: ;
 1065,3: }
 
521 ++ unary_expression 
 1062,22: ++
 1062,24: i
 1062,25: VARIABLE
 
168 NAME VARIABLE 
 1062,24: i
 1062,25: VARIABLE
 
179 VARIABLE 
 1062,25: VARIABLE
 
525 ) scoped_statement 
 1062,25: )
 1063,3: {
 1064,5: v
 1064,6: VARIABLE
 1064,6: [
 1064,7: i
 1064,8: VARIABLE
 1064,8: ]
 1064,10: =
 1064,12: i
 1064,13: VARIABLE
 1064,13: ;
 1065,3: }
 
320 { option_block_item_list } 
 1063,3: {
 1064,5: v
 1064,6: VARIABLE
 1064,6: [
 1064,7: i
 1064,8: VARIABLE
 1064,8: ]
 1064,10: =
 1064,12: i
 1064,13: VARIABLE
 1064,13: ;
 1065,3: }
 
201 NAME VARIABLE 
 1064,5: v
 1064,6: VARIABLE
 
65 VARIABLE 
 1064,6: VARIABLE
 
147 [ expression ] 
 1064,6: [
 1064,7: i
 1064,8: VARIABLE
 1064,8: ]
 
236 NAME VARIABLE 
 1064,7: i
 1064,8: VARIABLE
 
179 VARIABLE 
 1064,8: VARIABLE
 
353 ] 
 1064,8: ]
 
181 = 
 1064,10: =
 
279 NAME VARIABLE 
 1064,12: i
 1064,13: VARIABLE
 
179 VARIABLE 
 1064,13: VARIABLE
 
331 ; 
 1064,13: ;
 
201 } 
 1065,3: }
 
201 } 
 1066,1: }
 
23 void 
 1068,1: void
 
5 NAME VARIABLE 
 1068,6: printVector
 1068,17: VARIABLE
 
65 VARIABLE 
 1068,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1068,17: (
 1068,18: int
 1068,22: v
 1068,23: VARIABLE
 1068,23: [
 1068,24: ]
 1068,25: ,
 1068,27: int
 1068,31: n
 1068,32: VARIABLE
 1068,32: )
 
186 int 
 1068,18: int
 
298 NAME VARIABLE 
 1068,22: v
 1068,23: VARIABLE
 
65 VARIABLE 
 1068,23: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1068,23: [
 1068,24: ]
 
305 ] 
 1068,24: ]
 
300 , parameter_declaration 
 1068,25: ,
 1068,27: int
 1068,31: n
 1068,32: VARIABLE
 
391 int 
 1068,27: int
 
298 NAME VARIABLE 
 1068,31: n
 1068,32: VARIABLE
 
65 VARIABLE 
 1068,32: VARIABLE
 
187 ) 
 1068,32: )
 
94 { option_block_item_list } 
 1069,1: {
 1070,3: int
 1070,7: i
 1070,8: VARIABLE
 1070,8: ;
 1072,3: printf
 1072,9: VARIABLE
 1072,9: (
 1072,10: "
 1072,14: )
 1072,15: ;
 1073,3: for
 1073,7: (
 1073,8: i
 1073,9: VARIABLE
 1073,10: =
 1073,12: 0
 1073,13: ;
 1073,15: i
 1073,16: VARIABLE
 1073,17: <
 1073,19: n
 1073,20: VARIABLE
 1073,20: ;
 1073,22: ++
 1073,24: i
 1073,25: VARIABLE
 1073,25: )
 1074,3: {
 1075,5: (
 1075,6: i
 1075,7: VARIABLE
 1075,8: !=
 1075,11: n
 1075,12: VARIABLE
 1075,13: -
 1075,15: 1
 1075,16: )
 1075,18: ?
 1075,20: printf
 1075,26: VARIABLE
 1075,26: (
 1075,27: "
 1075,33: ,
 1075,35: v
 1075,36: VARIABLE
 1075,36: [
 1075,37: i
 1075,38: VARIABLE
 1075,38: ]
 1075,39: )
 1075,41: :
 1075,43: printf
 1075,49: VARIABLE
 1075,49: (
 1075,50: "
 1075,58: ,
 1075,60: v
 1075,61: VARIABLE
 1075,61: [
 1075,62: i
 1075,63: VARIABLE
 1075,63: ]
 1075,64: )
 1075,65: ;
 1076,3: }
 1077,1: }
 
201 int 
 1070,3: int
 
93 NAME VARIABLE 
 1070,7: i
 1070,8: VARIABLE
 
65 VARIABLE 
 1070,8: VARIABLE
 
60 ; 
 1070,8: ;
 
201 NAME VARIABLE 
 1072,3: printf
 1072,9: VARIABLE
 
65 VARIABLE 
 1072,9: VARIABLE
 
147 ( option_argument_expression_list ) 
 1072,9: (
 1072,10: "
 1072,14: )
 
235 STRING_LITERAL 
 1072,10: "
 
351 ) 
 1072,14: )
 
331 ; 
 1072,15: ;
 
320 for ( option_expression ; option_expression ; option_expression ) scoped_statement 
 1073,3: for
 1073,7: (
 1073,8: i
 1073,9: VARIABLE
 1073,10: =
 1073,12: 0
 1073,13: ;
 1073,15: i
 1073,16: VARIABLE
 1073,17: <
 1073,19: n
 1073,20: VARIABLE
 1073,20: ;
 1073,22: ++
 1073,24: i
 1073,25: VARIABLE
 1073,25: )
 1074,3: {
 1075,5: (
 1075,6: i
 1075,7: VARIABLE
 1075,8: !=
 1075,11: n
 1075,12: VARIABLE
 1075,13: -
 1075,15: 1
 1075,16: )
 1075,18: ?
 1075,20: printf
 1075,26: VARIABLE
 1075,26: (
 1075,27: "
 1075,33: ,
 1075,35: v
 1075,36: VARIABLE
 1075,36: [
 1075,37: i
 1075,38: VARIABLE
 1075,38: ]
 1075,39: )
 1075,41: :
 1075,43: printf
 1075,49: VARIABLE
 1075,49: (
 1075,50: "
 1075,58: ,
 1075,60: v
 1075,61: VARIABLE
 1075,61: [
 1075,62: i
 1075,63: VARIABLE
 1075,63: ]
 1075,64: )
 1075,65: ;
 1076,3: }
 
408 ( option_expression ; option_expression ; option_expression ) scoped_statement 
 1073,7: (
 1073,8: i
 1073,9: VARIABLE
 1073,10: =
 1073,12: 0
 1073,13: ;
 1073,15: i
 1073,16: VARIABLE
 1073,17: <
 1073,19: n
 1073,20: VARIABLE
 1073,20: ;
 1073,22: ++
 1073,24: i
 1073,25: VARIABLE
 1073,25: )
 1074,3: {
 1075,5: (
 1075,6: i
 1075,7: VARIABLE
 1075,8: !=
 1075,11: n
 1075,12: VARIABLE
 1075,13: -
 1075,15: 1
 1075,16: )
 1075,18: ?
 1075,20: printf
 1075,26: VARIABLE
 1075,26: (
 1075,27: "
 1075,33: ,
 1075,35: v
 1075,36: VARIABLE
 1075,36: [
 1075,37: i
 1075,38: VARIABLE
 1075,38: ]
 1075,39: )
 1075,41: :
 1075,43: printf
 1075,49: VARIABLE
 1075,49: (
 1075,50: "
 1075,58: ,
 1075,60: v
 1075,61: VARIABLE
 1075,61: [
 1075,62: i
 1075,63: VARIABLE
 1075,63: ]
 1075,64: )
 1075,65: ;
 1076,3: }
 
460 NAME VARIABLE 
 1073,8: i
 1073,9: VARIABLE
 
65 VARIABLE 
 1073,9: VARIABLE
 
181 = 
 1073,10: =
 
279 CONSTANT 
 1073,12: 0
 
489 ; option_expression ; option_expression ) scoped_statement 
 1073,13: ;
 1073,15: i
 1073,16: VARIABLE
 1073,17: <
 1073,19: n
 1073,20: VARIABLE
 1073,20: ;
 1073,22: ++
 1073,24: i
 1073,25: VARIABLE
 1073,25: )
 1074,3: {
 1075,5: (
 1075,6: i
 1075,7: VARIABLE
 1075,8: !=
 1075,11: n
 1075,12: VARIABLE
 1075,13: -
 1075,15: 1
 1075,16: )
 1075,18: ?
 1075,20: printf
 1075,26: VARIABLE
 1075,26: (
 1075,27: "
 1075,33: ,
 1075,35: v
 1075,36: VARIABLE
 1075,36: [
 1075,37: i
 1075,38: VARIABLE
 1075,38: ]
 1075,39: )
 1075,41: :
 1075,43: printf
 1075,49: VARIABLE
 1075,49: (
 1075,50: "
 1075,58: ,
 1075,60: v
 1075,61: VARIABLE
 1075,61: [
 1075,62: i
 1075,63: VARIABLE
 1075,63: ]
 1075,64: )
 1075,65: ;
 1076,3: }
 
505 NAME VARIABLE 
 1073,15: i
 1073,16: VARIABLE
 
179 VARIABLE 
 1073,16: VARIABLE
 
154 < 
 1073,17: <
 
252 NAME VARIABLE 
 1073,19: n
 1073,20: VARIABLE
 
179 VARIABLE 
 1073,20: VARIABLE
 
517 ; option_expression ) scoped_statement 
 1073,20: ;
 1073,22: ++
 1073,24: i
 1073,25: VARIABLE
 1073,25: )
 1074,3: {
 1075,5: (
 1075,6: i
 1075,7: VARIABLE
 1075,8: !=
 1075,11: n
 1075,12: VARIABLE
 1075,13: -
 1075,15: 1
 1075,16: )
 1075,18: ?
 1075,20: printf
 1075,26: VARIABLE
 1075,26: (
 1075,27: "
 1075,33: ,
 1075,35: v
 1075,36: VARIABLE
 1075,36: [
 1075,37: i
 1075,38: VARIABLE
 1075,38: ]
 1075,39: )
 1075,41: :
 1075,43: printf
 1075,49: VARIABLE
 1075,49: (
 1075,50: "
 1075,58: ,
 1075,60: v
 1075,61: VARIABLE
 1075,61: [
 1075,62: i
 1075,63: VARIABLE
 1075,63: ]
 1075,64: )
 1075,65: ;
 1076,3: }
 
521 ++ unary_expression 
 1073,22: ++
 1073,24: i
 1073,25: VARIABLE
 
168 NAME VARIABLE 
 1073,24: i
 1073,25: VARIABLE
 
179 VARIABLE 
 1073,25: VARIABLE
 
525 ) scoped_statement 
 1073,25: )
 1074,3: {
 1075,5: (
 1075,6: i
 1075,7: VARIABLE
 1075,8: !=
 1075,11: n
 1075,12: VARIABLE
 1075,13: -
 1075,15: 1
 1075,16: )
 1075,18: ?
 1075,20: printf
 1075,26: VARIABLE
 1075,26: (
 1075,27: "
 1075,33: ,
 1075,35: v
 1075,36: VARIABLE
 1075,36: [
 1075,37: i
 1075,38: VARIABLE
 1075,38: ]
 1075,39: )
 1075,41: :
 1075,43: printf
 1075,49: VARIABLE
 1075,49: (
 1075,50: "
 1075,58: ,
 1075,60: v
 1075,61: VARIABLE
 1075,61: [
 1075,62: i
 1075,63: VARIABLE
 1075,63: ]
 1075,64: )
 1075,65: ;
 1076,3: }
 
320 { option_block_item_list } 
 1074,3: {
 1075,5: (
 1075,6: i
 1075,7: VARIABLE
 1075,8: !=
 1075,11: n
 1075,12: VARIABLE
 1075,13: -
 1075,15: 1
 1075,16: )
 1075,18: ?
 1075,20: printf
 1075,26: VARIABLE
 1075,26: (
 1075,27: "
 1075,33: ,
 1075,35: v
 1075,36: VARIABLE
 1075,36: [
 1075,37: i
 1075,38: VARIABLE
 1075,38: ]
 1075,39: )
 1075,41: :
 1075,43: printf
 1075,49: VARIABLE
 1075,49: (
 1075,50: "
 1075,58: ,
 1075,60: v
 1075,61: VARIABLE
 1075,61: [
 1075,62: i
 1075,63: VARIABLE
 1075,63: ]
 1075,64: )
 1075,65: ;
 1076,3: }
 
201 ( expression ) 
 1075,5: (
 1075,6: i
 1075,7: VARIABLE
 1075,8: !=
 1075,11: n
 1075,12: VARIABLE
 1075,13: -
 1075,15: 1
 1075,16: )
 
165 NAME VARIABLE 
 1075,6: i
 1075,7: VARIABLE
 
65 VARIABLE 
 1075,7: VARIABLE
 
155 != 
 1075,8: !=
 
257 NAME VARIABLE 
 1075,11: n
 1075,12: VARIABLE
 
179 VARIABLE 
 1075,12: VARIABLE
 
152 - 
 1075,13: -
 
246 CONSTANT 
 1075,15: 1
 
267 ) 
 1075,16: )
 
160 ? expression : conditional_expression 
 1075,18: ?
 1075,20: printf
 1075,26: VARIABLE
 1075,26: (
 1075,27: "
 1075,33: ,
 1075,35: v
 1075,36: VARIABLE
 1075,36: [
 1075,37: i
 1075,38: VARIABLE
 1075,38: ]
 1075,39: )
 1075,41: :
 1075,43: printf
 1075,49: VARIABLE
 1075,49: (
 1075,50: "
 1075,58: ,
 1075,60: v
 1075,61: VARIABLE
 1075,61: [
 1075,62: i
 1075,63: VARIABLE
 1075,63: ]
 1075,64: )
 
265 NAME VARIABLE 
 1075,20: printf
 1075,26: VARIABLE
 
179 VARIABLE 
 1075,26: VARIABLE
 
147 ( option_argument_expression_list ) 
 1075,26: (
 1075,27: "
 1075,33: ,
 1075,35: v
 1075,36: VARIABLE
 1075,36: [
 1075,37: i
 1075,38: VARIABLE
 1075,38: ]
 1075,39: )
 
235 STRING_LITERAL 
 1075,27: "
 
352 , assignment_expression 
 1075,33: ,
 1075,35: v
 1075,36: VARIABLE
 1075,36: [
 1075,37: i
 1075,38: VARIABLE
 1075,38: ]
 
429 NAME VARIABLE 
 1075,35: v
 1075,36: VARIABLE
 
179 VARIABLE 
 1075,36: VARIABLE
 
147 [ expression ] 
 1075,36: [
 1075,37: i
 1075,38: VARIABLE
 1075,38: ]
 
236 NAME VARIABLE 
 1075,37: i
 1075,38: VARIABLE
 
179 VARIABLE 
 1075,38: VARIABLE
 
353 ] 
 1075,38: ]
 
351 ) 
 1075,39: )
 
366 : conditional_expression 
 1075,41: :
 1075,43: printf
 1075,49: VARIABLE
 1075,49: (
 1075,50: "
 1075,58: ,
 1075,60: v
 1075,61: VARIABLE
 1075,61: [
 1075,62: i
 1075,63: VARIABLE
 1075,63: ]
 1075,64: )
 
431 NAME VARIABLE 
 1075,43: printf
 1075,49: VARIABLE
 
179 VARIABLE 
 1075,49: VARIABLE
 
147 ( option_argument_expression_list ) 
 1075,49: (
 1075,50: "
 1075,58: ,
 1075,60: v
 1075,61: VARIABLE
 1075,61: [
 1075,62: i
 1075,63: VARIABLE
 1075,63: ]
 1075,64: )
 
235 STRING_LITERAL 
 1075,50: "
 
352 , assignment_expression 
 1075,58: ,
 1075,60: v
 1075,61: VARIABLE
 1075,61: [
 1075,62: i
 1075,63: VARIABLE
 1075,63: ]
 
429 NAME VARIABLE 
 1075,60: v
 1075,61: VARIABLE
 
179 VARIABLE 
 1075,61: VARIABLE
 
147 [ expression ] 
 1075,61: [
 1075,62: i
 1075,63: VARIABLE
 1075,63: ]
 
236 NAME VARIABLE 
 1075,62: i
 1075,63: VARIABLE
 
179 VARIABLE 
 1075,63: VARIABLE
 
353 ] 
 1075,63: ]
 
351 ) 
 1075,64: )
 
331 ; 
 1075,65: ;
 
201 } 
 1076,3: }
 
201 } 
 1077,1: }
 
23 int 
 1079,1: int
 
5 NAME VARIABLE 
 1079,5: binsearch_kr
 1079,17: VARIABLE
 
65 VARIABLE 
 1079,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1079,17: (
 1079,18: int
 1079,22: x
 1079,23: VARIABLE
 1079,23: ,
 1079,25: int
 1079,29: v
 1079,30: VARIABLE
 1079,30: [
 1079,31: ]
 1079,32: ,
 1079,34: int
 1079,38: n
 1079,39: VARIABLE
 1079,39: )
 
186 int 
 1079,18: int
 
298 NAME VARIABLE 
 1079,22: x
 1079,23: VARIABLE
 
65 VARIABLE 
 1079,23: VARIABLE
 
300 , parameter_declaration 
 1079,23: ,
 1079,25: int
 1079,29: v
 1079,30: VARIABLE
 1079,30: [
 1079,31: ]
 
391 int 
 1079,25: int
 
298 NAME VARIABLE 
 1079,29: v
 1079,30: VARIABLE
 
65 VARIABLE 
 1079,30: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1079,30: [
 1079,31: ]
 
305 ] 
 1079,31: ]
 
300 , parameter_declaration 
 1079,32: ,
 1079,34: int
 1079,38: n
 1079,39: VARIABLE
 
391 int 
 1079,34: int
 
298 NAME VARIABLE 
 1079,38: n
 1079,39: VARIABLE
 
65 VARIABLE 
 1079,39: VARIABLE
 
187 ) 
 1079,39: )
 
94 { option_block_item_list } 
 1080,1: {
 1081,3: int
 1081,7: low
 1081,10: VARIABLE
 1081,10: ,
 1081,12: mid
 1081,15: VARIABLE
 1081,15: ,
 1081,17: high
 1081,21: VARIABLE
 1081,21: ;
 1083,3: low
 1083,6: VARIABLE
 1083,7: =
 1083,9: 0
 1083,10: ;
 1084,3: high
 1084,7: VARIABLE
 1084,8: =
 1084,10: n
 1084,11: VARIABLE
 1084,12: -
 1084,14: 1
 1084,15: ;
 1085,3: while
 1085,9: (
 1085,10: low
 1085,13: VARIABLE
 1085,14: <=
 1085,17: high
 1085,21: VARIABLE
 1085,21: )
 1086,3: {
 1087,5: mid
 1087,8: VARIABLE
 1087,9: =
 1087,11: (
 1087,12: low
 1087,15: VARIABLE
 1087,16: +
 1087,18: high
 1087,22: VARIABLE
 1087,22: )
 1087,24: /
 1087,26: 2
 1087,27: ;
 1089,5: if
 1089,8: (
 1089,9: x
 1089,10: VARIABLE
 1089,11: <
 1089,13: v
 1089,14: VARIABLE
 1089,14: [
 1089,15: mid
 1089,18: VARIABLE
 1089,18: ]
 1089,19: )
 1090,5: {
 1091,7: high
 1091,11: VARIABLE
 1091,12: =
 1091,14: mid
 1091,17: VARIABLE
 1091,18: -
 1091,20: 1
 1091,21: ;
 1092,5: }
 1093,5: else
 1093,10: if
 1093,13: (
 1093,14: x
 1093,15: VARIABLE
 1093,16: >
 1093,18: v
 1093,19: VARIABLE
 1093,19: [
 1093,20: mid
 1093,23: VARIABLE
 1093,23: ]
 1093,24: )
 1094,5: {
 1095,7: low
 1095,10: VARIABLE
 1095,11: =
 1095,13: mid
 1095,16: VARIABLE
 1095,17: +
 1095,19: 1
 1095,20: ;
 1096,5: }
 1097,5: else
 1098,5: {
 1099,7: return
 1099,14: mid
 1099,17: VARIABLE
 1099,17: ;
 1100,5: }
 1101,3: }
 1103,3: return
 1103,10: -
 1103,11: 1
 1103,12: ;
 1104,1: }
 
201 int 
 1081,3: int
 
93 NAME VARIABLE 
 1081,7: low
 1081,10: VARIABLE
 
65 VARIABLE 
 1081,10: VARIABLE
 
61 , init_declarator_declarator_varname 
 1081,10: ,
 1081,12: mid
 1081,15: VARIABLE
 
110 NAME VARIABLE 
 1081,12: mid
 1081,15: VARIABLE
 
65 VARIABLE 
 1081,15: VARIABLE
 
61 , init_declarator_declarator_varname 
 1081,15: ,
 1081,17: high
 1081,21: VARIABLE
 
110 NAME VARIABLE 
 1081,17: high
 1081,21: VARIABLE
 
65 VARIABLE 
 1081,21: VARIABLE
 
60 ; 
 1081,21: ;
 
201 NAME VARIABLE 
 1083,3: low
 1083,6: VARIABLE
 
65 VARIABLE 
 1083,6: VARIABLE
 
181 = 
 1083,7: =
 
279 CONSTANT 
 1083,9: 0
 
331 ; 
 1083,10: ;
 
201 NAME VARIABLE 
 1084,3: high
 1084,7: VARIABLE
 
65 VARIABLE 
 1084,7: VARIABLE
 
181 = 
 1084,8: =
 
279 NAME VARIABLE 
 1084,10: n
 1084,11: VARIABLE
 
179 VARIABLE 
 1084,11: VARIABLE
 
152 - 
 1084,12: -
 
246 CONSTANT 
 1084,14: 1
 
331 ; 
 1084,15: ;
 
320 while ( expression ) scoped_statement 
 1085,3: while
 1085,9: (
 1085,10: low
 1085,13: VARIABLE
 1085,14: <=
 1085,17: high
 1085,21: VARIABLE
 1085,21: )
 1086,3: {
 1087,5: mid
 1087,8: VARIABLE
 1087,9: =
 1087,11: (
 1087,12: low
 1087,15: VARIABLE
 1087,16: +
 1087,18: high
 1087,22: VARIABLE
 1087,22: )
 1087,24: /
 1087,26: 2
 1087,27: ;
 1089,5: if
 1089,8: (
 1089,9: x
 1089,10: VARIABLE
 1089,11: <
 1089,13: v
 1089,14: VARIABLE
 1089,14: [
 1089,15: mid
 1089,18: VARIABLE
 1089,18: ]
 1089,19: )
 1090,5: {
 1091,7: high
 1091,11: VARIABLE
 1091,12: =
 1091,14: mid
 1091,17: VARIABLE
 1091,18: -
 1091,20: 1
 1091,21: ;
 1092,5: }
 1093,5: else
 1093,10: if
 1093,13: (
 1093,14: x
 1093,15: VARIABLE
 1093,16: >
 1093,18: v
 1093,19: VARIABLE
 1093,19: [
 1093,20: mid
 1093,23: VARIABLE
 1093,23: ]
 1093,24: )
 1094,5: {
 1095,7: low
 1095,10: VARIABLE
 1095,11: =
 1095,13: mid
 1095,16: VARIABLE
 1095,17: +
 1095,19: 1
 1095,20: ;
 1096,5: }
 1097,5: else
 1098,5: {
 1099,7: return
 1099,14: mid
 1099,17: VARIABLE
 1099,17: ;
 1100,5: }
 1101,3: }
 
406 ( expression ) scoped_statement 
 1085,9: (
 1085,10: low
 1085,13: VARIABLE
 1085,14: <=
 1085,17: high
 1085,21: VARIABLE
 1085,21: )
 1086,3: {
 1087,5: mid
 1087,8: VARIABLE
 1087,9: =
 1087,11: (
 1087,12: low
 1087,15: VARIABLE
 1087,16: +
 1087,18: high
 1087,22: VARIABLE
 1087,22: )
 1087,24: /
 1087,26: 2
 1087,27: ;
 1089,5: if
 1089,8: (
 1089,9: x
 1089,10: VARIABLE
 1089,11: <
 1089,13: v
 1089,14: VARIABLE
 1089,14: [
 1089,15: mid
 1089,18: VARIABLE
 1089,18: ]
 1089,19: )
 1090,5: {
 1091,7: high
 1091,11: VARIABLE
 1091,12: =
 1091,14: mid
 1091,17: VARIABLE
 1091,18: -
 1091,20: 1
 1091,21: ;
 1092,5: }
 1093,5: else
 1093,10: if
 1093,13: (
 1093,14: x
 1093,15: VARIABLE
 1093,16: >
 1093,18: v
 1093,19: VARIABLE
 1093,19: [
 1093,20: mid
 1093,23: VARIABLE
 1093,23: ]
 1093,24: )
 1094,5: {
 1095,7: low
 1095,10: VARIABLE
 1095,11: =
 1095,13: mid
 1095,16: VARIABLE
 1095,17: +
 1095,19: 1
 1095,20: ;
 1096,5: }
 1097,5: else
 1098,5: {
 1099,7: return
 1099,14: mid
 1099,17: VARIABLE
 1099,17: ;
 1100,5: }
 1101,3: }
 
457 NAME VARIABLE 
 1085,10: low
 1085,13: VARIABLE
 
179 VARIABLE 
 1085,13: VARIABLE
 
154 <= 
 1085,14: <=
 
252 NAME VARIABLE 
 1085,17: high
 1085,21: VARIABLE
 
179 VARIABLE 
 1085,21: VARIABLE
 
485 ) scoped_statement 
 1085,21: )
 1086,3: {
 1087,5: mid
 1087,8: VARIABLE
 1087,9: =
 1087,11: (
 1087,12: low
 1087,15: VARIABLE
 1087,16: +
 1087,18: high
 1087,22: VARIABLE
 1087,22: )
 1087,24: /
 1087,26: 2
 1087,27: ;
 1089,5: if
 1089,8: (
 1089,9: x
 1089,10: VARIABLE
 1089,11: <
 1089,13: v
 1089,14: VARIABLE
 1089,14: [
 1089,15: mid
 1089,18: VARIABLE
 1089,18: ]
 1089,19: )
 1090,5: {
 1091,7: high
 1091,11: VARIABLE
 1091,12: =
 1091,14: mid
 1091,17: VARIABLE
 1091,18: -
 1091,20: 1
 1091,21: ;
 1092,5: }
 1093,5: else
 1093,10: if
 1093,13: (
 1093,14: x
 1093,15: VARIABLE
 1093,16: >
 1093,18: v
 1093,19: VARIABLE
 1093,19: [
 1093,20: mid
 1093,23: VARIABLE
 1093,23: ]
 1093,24: )
 1094,5: {
 1095,7: low
 1095,10: VARIABLE
 1095,11: =
 1095,13: mid
 1095,16: VARIABLE
 1095,17: +
 1095,19: 1
 1095,20: ;
 1096,5: }
 1097,5: else
 1098,5: {
 1099,7: return
 1099,14: mid
 1099,17: VARIABLE
 1099,17: ;
 1100,5: }
 1101,3: }
 
320 { option_block_item_list } 
 1086,3: {
 1087,5: mid
 1087,8: VARIABLE
 1087,9: =
 1087,11: (
 1087,12: low
 1087,15: VARIABLE
 1087,16: +
 1087,18: high
 1087,22: VARIABLE
 1087,22: )
 1087,24: /
 1087,26: 2
 1087,27: ;
 1089,5: if
 1089,8: (
 1089,9: x
 1089,10: VARIABLE
 1089,11: <
 1089,13: v
 1089,14: VARIABLE
 1089,14: [
 1089,15: mid
 1089,18: VARIABLE
 1089,18: ]
 1089,19: )
 1090,5: {
 1091,7: high
 1091,11: VARIABLE
 1091,12: =
 1091,14: mid
 1091,17: VARIABLE
 1091,18: -
 1091,20: 1
 1091,21: ;
 1092,5: }
 1093,5: else
 1093,10: if
 1093,13: (
 1093,14: x
 1093,15: VARIABLE
 1093,16: >
 1093,18: v
 1093,19: VARIABLE
 1093,19: [
 1093,20: mid
 1093,23: VARIABLE
 1093,23: ]
 1093,24: )
 1094,5: {
 1095,7: low
 1095,10: VARIABLE
 1095,11: =
 1095,13: mid
 1095,16: VARIABLE
 1095,17: +
 1095,19: 1
 1095,20: ;
 1096,5: }
 1097,5: else
 1098,5: {
 1099,7: return
 1099,14: mid
 1099,17: VARIABLE
 1099,17: ;
 1100,5: }
 1101,3: }
 
201 NAME VARIABLE 
 1087,5: mid
 1087,8: VARIABLE
 
65 VARIABLE 
 1087,8: VARIABLE
 
181 = 
 1087,9: =
 
279 ( expression ) 
 1087,11: (
 1087,12: low
 1087,15: VARIABLE
 1087,16: +
 1087,18: high
 1087,22: VARIABLE
 1087,22: )
 
165 NAME VARIABLE 
 1087,12: low
 1087,15: VARIABLE
 
65 VARIABLE 
 1087,15: VARIABLE
 
152 + 
 1087,16: +
 
246 NAME VARIABLE 
 1087,18: high
 1087,22: VARIABLE
 
179 VARIABLE 
 1087,22: VARIABLE
 
267 ) 
 1087,22: )
 
151 / 
 1087,24: /
 
242 CONSTANT 
 1087,26: 2
 
331 ; 
 1087,27: ;
 
320 if ( expression ) scoped_statement else scoped_statement 
 1089,5: if
 1089,8: (
 1089,9: x
 1089,10: VARIABLE
 1089,11: <
 1089,13: v
 1089,14: VARIABLE
 1089,14: [
 1089,15: mid
 1089,18: VARIABLE
 1089,18: ]
 1089,19: )
 1090,5: {
 1091,7: high
 1091,11: VARIABLE
 1091,12: =
 1091,14: mid
 1091,17: VARIABLE
 1091,18: -
 1091,20: 1
 1091,21: ;
 1092,5: }
 1093,5: else
 1093,10: if
 1093,13: (
 1093,14: x
 1093,15: VARIABLE
 1093,16: >
 1093,18: v
 1093,19: VARIABLE
 1093,19: [
 1093,20: mid
 1093,23: VARIABLE
 1093,23: ]
 1093,24: )
 1094,5: {
 1095,7: low
 1095,10: VARIABLE
 1095,11: =
 1095,13: mid
 1095,16: VARIABLE
 1095,17: +
 1095,19: 1
 1095,20: ;
 1096,5: }
 1097,5: else
 1098,5: {
 1099,7: return
 1099,14: mid
 1099,17: VARIABLE
 1099,17: ;
 1100,5: }
 
404 ( expression ) scoped_statement else scoped_statement 
 1089,8: (
 1089,9: x
 1089,10: VARIABLE
 1089,11: <
 1089,13: v
 1089,14: VARIABLE
 1089,14: [
 1089,15: mid
 1089,18: VARIABLE
 1089,18: ]
 1089,19: )
 1090,5: {
 1091,7: high
 1091,11: VARIABLE
 1091,12: =
 1091,14: mid
 1091,17: VARIABLE
 1091,18: -
 1091,20: 1
 1091,21: ;
 1092,5: }
 1093,5: else
 1093,10: if
 1093,13: (
 1093,14: x
 1093,15: VARIABLE
 1093,16: >
 1093,18: v
 1093,19: VARIABLE
 1093,19: [
 1093,20: mid
 1093,23: VARIABLE
 1093,23: ]
 1093,24: )
 1094,5: {
 1095,7: low
 1095,10: VARIABLE
 1095,11: =
 1095,13: mid
 1095,16: VARIABLE
 1095,17: +
 1095,19: 1
 1095,20: ;
 1096,5: }
 1097,5: else
 1098,5: {
 1099,7: return
 1099,14: mid
 1099,17: VARIABLE
 1099,17: ;
 1100,5: }
 
455 NAME VARIABLE 
 1089,9: x
 1089,10: VARIABLE
 
179 VARIABLE 
 1089,10: VARIABLE
 
154 < 
 1089,11: <
 
252 NAME VARIABLE 
 1089,13: v
 1089,14: VARIABLE
 
179 VARIABLE 
 1089,14: VARIABLE
 
147 [ expression ] 
 1089,14: [
 1089,15: mid
 1089,18: VARIABLE
 1089,18: ]
 
236 NAME VARIABLE 
 1089,15: mid
 1089,18: VARIABLE
 
179 VARIABLE 
 1089,18: VARIABLE
 
353 ] 
 1089,18: ]
 
483 ) scoped_statement else scoped_statement 
 1089,19: )
 1090,5: {
 1091,7: high
 1091,11: VARIABLE
 1091,12: =
 1091,14: mid
 1091,17: VARIABLE
 1091,18: -
 1091,20: 1
 1091,21: ;
 1092,5: }
 1093,5: else
 1093,10: if
 1093,13: (
 1093,14: x
 1093,15: VARIABLE
 1093,16: >
 1093,18: v
 1093,19: VARIABLE
 1093,19: [
 1093,20: mid
 1093,23: VARIABLE
 1093,23: ]
 1093,24: )
 1094,5: {
 1095,7: low
 1095,10: VARIABLE
 1095,11: =
 1095,13: mid
 1095,16: VARIABLE
 1095,17: +
 1095,19: 1
 1095,20: ;
 1096,5: }
 1097,5: else
 1098,5: {
 1099,7: return
 1099,14: mid
 1099,17: VARIABLE
 1099,17: ;
 1100,5: }
 
320 { option_block_item_list } 
 1090,5: {
 1091,7: high
 1091,11: VARIABLE
 1091,12: =
 1091,14: mid
 1091,17: VARIABLE
 1091,18: -
 1091,20: 1
 1091,21: ;
 1092,5: }
 
201 NAME VARIABLE 
 1091,7: high
 1091,11: VARIABLE
 
65 VARIABLE 
 1091,11: VARIABLE
 
181 = 
 1091,12: =
 
279 NAME VARIABLE 
 1091,14: mid
 1091,17: VARIABLE
 
179 VARIABLE 
 1091,17: VARIABLE
 
152 - 
 1091,18: -
 
246 CONSTANT 
 1091,20: 1
 
331 ; 
 1091,21: ;
 
201 } 
 1092,5: }
 
512 else scoped_statement 
 1093,5: else
 1093,10: if
 1093,13: (
 1093,14: x
 1093,15: VARIABLE
 1093,16: >
 1093,18: v
 1093,19: VARIABLE
 1093,19: [
 1093,20: mid
 1093,23: VARIABLE
 1093,23: ]
 1093,24: )
 1094,5: {
 1095,7: low
 1095,10: VARIABLE
 1095,11: =
 1095,13: mid
 1095,16: VARIABLE
 1095,17: +
 1095,19: 1
 1095,20: ;
 1096,5: }
 1097,5: else
 1098,5: {
 1099,7: return
 1099,14: mid
 1099,17: VARIABLE
 1099,17: ;
 1100,5: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 1093,10: if
 1093,13: (
 1093,14: x
 1093,15: VARIABLE
 1093,16: >
 1093,18: v
 1093,19: VARIABLE
 1093,19: [
 1093,20: mid
 1093,23: VARIABLE
 1093,23: ]
 1093,24: )
 1094,5: {
 1095,7: low
 1095,10: VARIABLE
 1095,11: =
 1095,13: mid
 1095,16: VARIABLE
 1095,17: +
 1095,19: 1
 1095,20: ;
 1096,5: }
 1097,5: else
 1098,5: {
 1099,7: return
 1099,14: mid
 1099,17: VARIABLE
 1099,17: ;
 1100,5: }
 
404 ( expression ) scoped_statement else scoped_statement 
 1093,13: (
 1093,14: x
 1093,15: VARIABLE
 1093,16: >
 1093,18: v
 1093,19: VARIABLE
 1093,19: [
 1093,20: mid
 1093,23: VARIABLE
 1093,23: ]
 1093,24: )
 1094,5: {
 1095,7: low
 1095,10: VARIABLE
 1095,11: =
 1095,13: mid
 1095,16: VARIABLE
 1095,17: +
 1095,19: 1
 1095,20: ;
 1096,5: }
 1097,5: else
 1098,5: {
 1099,7: return
 1099,14: mid
 1099,17: VARIABLE
 1099,17: ;
 1100,5: }
 
455 NAME VARIABLE 
 1093,14: x
 1093,15: VARIABLE
 
179 VARIABLE 
 1093,15: VARIABLE
 
154 > 
 1093,16: >
 
252 NAME VARIABLE 
 1093,18: v
 1093,19: VARIABLE
 
179 VARIABLE 
 1093,19: VARIABLE
 
147 [ expression ] 
 1093,19: [
 1093,20: mid
 1093,23: VARIABLE
 1093,23: ]
 
236 NAME VARIABLE 
 1093,20: mid
 1093,23: VARIABLE
 
179 VARIABLE 
 1093,23: VARIABLE
 
353 ] 
 1093,23: ]
 
483 ) scoped_statement else scoped_statement 
 1093,24: )
 1094,5: {
 1095,7: low
 1095,10: VARIABLE
 1095,11: =
 1095,13: mid
 1095,16: VARIABLE
 1095,17: +
 1095,19: 1
 1095,20: ;
 1096,5: }
 1097,5: else
 1098,5: {
 1099,7: return
 1099,14: mid
 1099,17: VARIABLE
 1099,17: ;
 1100,5: }
 
320 { option_block_item_list } 
 1094,5: {
 1095,7: low
 1095,10: VARIABLE
 1095,11: =
 1095,13: mid
 1095,16: VARIABLE
 1095,17: +
 1095,19: 1
 1095,20: ;
 1096,5: }
 
201 NAME VARIABLE 
 1095,7: low
 1095,10: VARIABLE
 
65 VARIABLE 
 1095,10: VARIABLE
 
181 = 
 1095,11: =
 
279 NAME VARIABLE 
 1095,13: mid
 1095,16: VARIABLE
 
179 VARIABLE 
 1095,16: VARIABLE
 
152 + 
 1095,17: +
 
246 CONSTANT 
 1095,19: 1
 
331 ; 
 1095,20: ;
 
201 } 
 1096,5: }
 
512 else scoped_statement 
 1097,5: else
 1098,5: {
 1099,7: return
 1099,14: mid
 1099,17: VARIABLE
 1099,17: ;
 1100,5: }
 
320 { option_block_item_list } 
 1098,5: {
 1099,7: return
 1099,14: mid
 1099,17: VARIABLE
 1099,17: ;
 1100,5: }
 
201 return option_expression ; 
 1099,7: return
 1099,14: mid
 1099,17: VARIABLE
 1099,17: ;
 
338 NAME VARIABLE 
 1099,14: mid
 1099,17: VARIABLE
 
179 VARIABLE 
 1099,17: VARIABLE
 
415 ; 
 1099,17: ;
 
201 } 
 1100,5: }
 
201 } 
 1101,3: }
 
201 return option_expression ; 
 1103,3: return
 1103,10: -
 1103,11: 1
 1103,12: ;
 
338 - 
 1103,10: -
 
149 CONSTANT 
 1103,11: 1
 
415 ; 
 1103,12: ;
 
201 } 
 1104,1: }
 
23 int 
 1106,1: int
 
5 NAME VARIABLE 
 1106,5: binsearch
 1106,14: VARIABLE
 
65 VARIABLE 
 1106,14: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1106,14: (
 1106,15: int
 1106,19: x
 1106,20: VARIABLE
 1106,20: ,
 1106,22: int
 1106,26: v
 1106,27: VARIABLE
 1106,27: [
 1106,28: ]
 1106,29: ,
 1106,31: int
 1106,35: n
 1106,36: VARIABLE
 1106,36: )
 
186 int 
 1106,15: int
 
298 NAME VARIABLE 
 1106,19: x
 1106,20: VARIABLE
 
65 VARIABLE 
 1106,20: VARIABLE
 
300 , parameter_declaration 
 1106,20: ,
 1106,22: int
 1106,26: v
 1106,27: VARIABLE
 1106,27: [
 1106,28: ]
 
391 int 
 1106,22: int
 
298 NAME VARIABLE 
 1106,26: v
 1106,27: VARIABLE
 
65 VARIABLE 
 1106,27: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1106,27: [
 1106,28: ]
 
305 ] 
 1106,28: ]
 
300 , parameter_declaration 
 1106,29: ,
 1106,31: int
 1106,35: n
 1106,36: VARIABLE
 
391 int 
 1106,31: int
 
298 NAME VARIABLE 
 1106,35: n
 1106,36: VARIABLE
 
65 VARIABLE 
 1106,36: VARIABLE
 
187 ) 
 1106,36: )
 
94 { option_block_item_list } 
 1107,1: {
 1108,3: int
 1108,7: low
 1108,10: VARIABLE
 1108,10: ,
 1108,12: mid
 1108,15: VARIABLE
 1108,15: ,
 1108,17: high
 1108,21: VARIABLE
 1108,21: ;
 1110,3: low
 1110,6: VARIABLE
 1110,7: =
 1110,9: 0
 1110,10: ;
 1111,3: high
 1111,7: VARIABLE
 1111,8: =
 1111,10: n
 1111,11: VARIABLE
 1111,12: -
 1111,14: 1
 1111,15: ;
 1112,3: while
 1112,9: (
 1112,10: low
 1112,13: VARIABLE
 1112,14: <=
 1112,17: high
 1112,21: VARIABLE
 1112,21: )
 1113,3: {
 1114,5: mid
 1114,8: VARIABLE
 1114,9: =
 1114,11: (
 1114,12: low
 1114,15: VARIABLE
 1114,16: +
 1114,18: high
 1114,22: VARIABLE
 1114,22: )
 1114,24: /
 1114,26: 2
 1114,27: ;
 1116,5: if
 1116,8: (
 1116,9: x
 1116,10: VARIABLE
 1116,11: <
 1116,13: v
 1116,14: VARIABLE
 1116,14: [
 1116,15: mid
 1116,18: VARIABLE
 1116,18: ]
 1116,19: )
 1117,5: {
 1118,7: high
 1118,11: VARIABLE
 1118,12: =
 1118,14: mid
 1118,17: VARIABLE
 1118,18: -
 1118,20: 1
 1118,21: ;
 1119,5: }
 1120,5: else
 1121,5: {
 1122,7: low
 1122,10: VARIABLE
 1122,11: =
 1122,13: mid
 1122,16: VARIABLE
 1122,17: +
 1122,19: 1
 1122,20: ;
 1123,5: }
 1124,3: }
 1126,3: if
 1126,6: (
 1126,7: x
 1126,8: VARIABLE
 1126,9: ==
 1126,12: v
 1126,13: VARIABLE
 1126,13: [
 1126,14: low
 1126,17: VARIABLE
 1126,18: -
 1126,20: 1
 1126,21: ]
 1126,22: )
 1127,3: {
 1128,5: return
 1128,12: low
 1128,15: VARIABLE
 1128,16: -
 1128,18: 1
 1128,19: ;
 1129,3: }
 1131,3: return
 1131,10: -
 1131,11: 1
 1131,12: ;
 1132,1: }
 
201 int 
 1108,3: int
 
93 NAME VARIABLE 
 1108,7: low
 1108,10: VARIABLE
 
65 VARIABLE 
 1108,10: VARIABLE
 
61 , init_declarator_declarator_varname 
 1108,10: ,
 1108,12: mid
 1108,15: VARIABLE
 
110 NAME VARIABLE 
 1108,12: mid
 1108,15: VARIABLE
 
65 VARIABLE 
 1108,15: VARIABLE
 
61 , init_declarator_declarator_varname 
 1108,15: ,
 1108,17: high
 1108,21: VARIABLE
 
110 NAME VARIABLE 
 1108,17: high
 1108,21: VARIABLE
 
65 VARIABLE 
 1108,21: VARIABLE
 
60 ; 
 1108,21: ;
 
201 NAME VARIABLE 
 1110,3: low
 1110,6: VARIABLE
 
65 VARIABLE 
 1110,6: VARIABLE
 
181 = 
 1110,7: =
 
279 CONSTANT 
 1110,9: 0
 
331 ; 
 1110,10: ;
 
201 NAME VARIABLE 
 1111,3: high
 1111,7: VARIABLE
 
65 VARIABLE 
 1111,7: VARIABLE
 
181 = 
 1111,8: =
 
279 NAME VARIABLE 
 1111,10: n
 1111,11: VARIABLE
 
179 VARIABLE 
 1111,11: VARIABLE
 
152 - 
 1111,12: -
 
246 CONSTANT 
 1111,14: 1
 
331 ; 
 1111,15: ;
 
320 while ( expression ) scoped_statement 
 1112,3: while
 1112,9: (
 1112,10: low
 1112,13: VARIABLE
 1112,14: <=
 1112,17: high
 1112,21: VARIABLE
 1112,21: )
 1113,3: {
 1114,5: mid
 1114,8: VARIABLE
 1114,9: =
 1114,11: (
 1114,12: low
 1114,15: VARIABLE
 1114,16: +
 1114,18: high
 1114,22: VARIABLE
 1114,22: )
 1114,24: /
 1114,26: 2
 1114,27: ;
 1116,5: if
 1116,8: (
 1116,9: x
 1116,10: VARIABLE
 1116,11: <
 1116,13: v
 1116,14: VARIABLE
 1116,14: [
 1116,15: mid
 1116,18: VARIABLE
 1116,18: ]
 1116,19: )
 1117,5: {
 1118,7: high
 1118,11: VARIABLE
 1118,12: =
 1118,14: mid
 1118,17: VARIABLE
 1118,18: -
 1118,20: 1
 1118,21: ;
 1119,5: }
 1120,5: else
 1121,5: {
 1122,7: low
 1122,10: VARIABLE
 1122,11: =
 1122,13: mid
 1122,16: VARIABLE
 1122,17: +
 1122,19: 1
 1122,20: ;
 1123,5: }
 1124,3: }
 
406 ( expression ) scoped_statement 
 1112,9: (
 1112,10: low
 1112,13: VARIABLE
 1112,14: <=
 1112,17: high
 1112,21: VARIABLE
 1112,21: )
 1113,3: {
 1114,5: mid
 1114,8: VARIABLE
 1114,9: =
 1114,11: (
 1114,12: low
 1114,15: VARIABLE
 1114,16: +
 1114,18: high
 1114,22: VARIABLE
 1114,22: )
 1114,24: /
 1114,26: 2
 1114,27: ;
 1116,5: if
 1116,8: (
 1116,9: x
 1116,10: VARIABLE
 1116,11: <
 1116,13: v
 1116,14: VARIABLE
 1116,14: [
 1116,15: mid
 1116,18: VARIABLE
 1116,18: ]
 1116,19: )
 1117,5: {
 1118,7: high
 1118,11: VARIABLE
 1118,12: =
 1118,14: mid
 1118,17: VARIABLE
 1118,18: -
 1118,20: 1
 1118,21: ;
 1119,5: }
 1120,5: else
 1121,5: {
 1122,7: low
 1122,10: VARIABLE
 1122,11: =
 1122,13: mid
 1122,16: VARIABLE
 1122,17: +
 1122,19: 1
 1122,20: ;
 1123,5: }
 1124,3: }
 
457 NAME VARIABLE 
 1112,10: low
 1112,13: VARIABLE
 
179 VARIABLE 
 1112,13: VARIABLE
 
154 <= 
 1112,14: <=
 
252 NAME VARIABLE 
 1112,17: high
 1112,21: VARIABLE
 
179 VARIABLE 
 1112,21: VARIABLE
 
485 ) scoped_statement 
 1112,21: )
 1113,3: {
 1114,5: mid
 1114,8: VARIABLE
 1114,9: =
 1114,11: (
 1114,12: low
 1114,15: VARIABLE
 1114,16: +
 1114,18: high
 1114,22: VARIABLE
 1114,22: )
 1114,24: /
 1114,26: 2
 1114,27: ;
 1116,5: if
 1116,8: (
 1116,9: x
 1116,10: VARIABLE
 1116,11: <
 1116,13: v
 1116,14: VARIABLE
 1116,14: [
 1116,15: mid
 1116,18: VARIABLE
 1116,18: ]
 1116,19: )
 1117,5: {
 1118,7: high
 1118,11: VARIABLE
 1118,12: =
 1118,14: mid
 1118,17: VARIABLE
 1118,18: -
 1118,20: 1
 1118,21: ;
 1119,5: }
 1120,5: else
 1121,5: {
 1122,7: low
 1122,10: VARIABLE
 1122,11: =
 1122,13: mid
 1122,16: VARIABLE
 1122,17: +
 1122,19: 1
 1122,20: ;
 1123,5: }
 1124,3: }
 
320 { option_block_item_list } 
 1113,3: {
 1114,5: mid
 1114,8: VARIABLE
 1114,9: =
 1114,11: (
 1114,12: low
 1114,15: VARIABLE
 1114,16: +
 1114,18: high
 1114,22: VARIABLE
 1114,22: )
 1114,24: /
 1114,26: 2
 1114,27: ;
 1116,5: if
 1116,8: (
 1116,9: x
 1116,10: VARIABLE
 1116,11: <
 1116,13: v
 1116,14: VARIABLE
 1116,14: [
 1116,15: mid
 1116,18: VARIABLE
 1116,18: ]
 1116,19: )
 1117,5: {
 1118,7: high
 1118,11: VARIABLE
 1118,12: =
 1118,14: mid
 1118,17: VARIABLE
 1118,18: -
 1118,20: 1
 1118,21: ;
 1119,5: }
 1120,5: else
 1121,5: {
 1122,7: low
 1122,10: VARIABLE
 1122,11: =
 1122,13: mid
 1122,16: VARIABLE
 1122,17: +
 1122,19: 1
 1122,20: ;
 1123,5: }
 1124,3: }
 
201 NAME VARIABLE 
 1114,5: mid
 1114,8: VARIABLE
 
65 VARIABLE 
 1114,8: VARIABLE
 
181 = 
 1114,9: =
 
279 ( expression ) 
 1114,11: (
 1114,12: low
 1114,15: VARIABLE
 1114,16: +
 1114,18: high
 1114,22: VARIABLE
 1114,22: )
 
165 NAME VARIABLE 
 1114,12: low
 1114,15: VARIABLE
 
65 VARIABLE 
 1114,15: VARIABLE
 
152 + 
 1114,16: +
 
246 NAME VARIABLE 
 1114,18: high
 1114,22: VARIABLE
 
179 VARIABLE 
 1114,22: VARIABLE
 
267 ) 
 1114,22: )
 
151 / 
 1114,24: /
 
242 CONSTANT 
 1114,26: 2
 
331 ; 
 1114,27: ;
 
320 if ( expression ) scoped_statement else scoped_statement 
 1116,5: if
 1116,8: (
 1116,9: x
 1116,10: VARIABLE
 1116,11: <
 1116,13: v
 1116,14: VARIABLE
 1116,14: [
 1116,15: mid
 1116,18: VARIABLE
 1116,18: ]
 1116,19: )
 1117,5: {
 1118,7: high
 1118,11: VARIABLE
 1118,12: =
 1118,14: mid
 1118,17: VARIABLE
 1118,18: -
 1118,20: 1
 1118,21: ;
 1119,5: }
 1120,5: else
 1121,5: {
 1122,7: low
 1122,10: VARIABLE
 1122,11: =
 1122,13: mid
 1122,16: VARIABLE
 1122,17: +
 1122,19: 1
 1122,20: ;
 1123,5: }
 
404 ( expression ) scoped_statement else scoped_statement 
 1116,8: (
 1116,9: x
 1116,10: VARIABLE
 1116,11: <
 1116,13: v
 1116,14: VARIABLE
 1116,14: [
 1116,15: mid
 1116,18: VARIABLE
 1116,18: ]
 1116,19: )
 1117,5: {
 1118,7: high
 1118,11: VARIABLE
 1118,12: =
 1118,14: mid
 1118,17: VARIABLE
 1118,18: -
 1118,20: 1
 1118,21: ;
 1119,5: }
 1120,5: else
 1121,5: {
 1122,7: low
 1122,10: VARIABLE
 1122,11: =
 1122,13: mid
 1122,16: VARIABLE
 1122,17: +
 1122,19: 1
 1122,20: ;
 1123,5: }
 
455 NAME VARIABLE 
 1116,9: x
 1116,10: VARIABLE
 
179 VARIABLE 
 1116,10: VARIABLE
 
154 < 
 1116,11: <
 
252 NAME VARIABLE 
 1116,13: v
 1116,14: VARIABLE
 
179 VARIABLE 
 1116,14: VARIABLE
 
147 [ expression ] 
 1116,14: [
 1116,15: mid
 1116,18: VARIABLE
 1116,18: ]
 
236 NAME VARIABLE 
 1116,15: mid
 1116,18: VARIABLE
 
179 VARIABLE 
 1116,18: VARIABLE
 
353 ] 
 1116,18: ]
 
483 ) scoped_statement else scoped_statement 
 1116,19: )
 1117,5: {
 1118,7: high
 1118,11: VARIABLE
 1118,12: =
 1118,14: mid
 1118,17: VARIABLE
 1118,18: -
 1118,20: 1
 1118,21: ;
 1119,5: }
 1120,5: else
 1121,5: {
 1122,7: low
 1122,10: VARIABLE
 1122,11: =
 1122,13: mid
 1122,16: VARIABLE
 1122,17: +
 1122,19: 1
 1122,20: ;
 1123,5: }
 
320 { option_block_item_list } 
 1117,5: {
 1118,7: high
 1118,11: VARIABLE
 1118,12: =
 1118,14: mid
 1118,17: VARIABLE
 1118,18: -
 1118,20: 1
 1118,21: ;
 1119,5: }
 
201 NAME VARIABLE 
 1118,7: high
 1118,11: VARIABLE
 
65 VARIABLE 
 1118,11: VARIABLE
 
181 = 
 1118,12: =
 
279 NAME VARIABLE 
 1118,14: mid
 1118,17: VARIABLE
 
179 VARIABLE 
 1118,17: VARIABLE
 
152 - 
 1118,18: -
 
246 CONSTANT 
 1118,20: 1
 
331 ; 
 1118,21: ;
 
201 } 
 1119,5: }
 
512 else scoped_statement 
 1120,5: else
 1121,5: {
 1122,7: low
 1122,10: VARIABLE
 1122,11: =
 1122,13: mid
 1122,16: VARIABLE
 1122,17: +
 1122,19: 1
 1122,20: ;
 1123,5: }
 
320 { option_block_item_list } 
 1121,5: {
 1122,7: low
 1122,10: VARIABLE
 1122,11: =
 1122,13: mid
 1122,16: VARIABLE
 1122,17: +
 1122,19: 1
 1122,20: ;
 1123,5: }
 
201 NAME VARIABLE 
 1122,7: low
 1122,10: VARIABLE
 
65 VARIABLE 
 1122,10: VARIABLE
 
181 = 
 1122,11: =
 
279 NAME VARIABLE 
 1122,13: mid
 1122,16: VARIABLE
 
179 VARIABLE 
 1122,16: VARIABLE
 
152 + 
 1122,17: +
 
246 CONSTANT 
 1122,19: 1
 
331 ; 
 1122,20: ;
 
201 } 
 1123,5: }
 
201 } 
 1124,3: }
 
320 if ( expression ) scoped_statement 
 1126,3: if
 1126,6: (
 1126,7: x
 1126,8: VARIABLE
 1126,9: ==
 1126,12: v
 1126,13: VARIABLE
 1126,13: [
 1126,14: low
 1126,17: VARIABLE
 1126,18: -
 1126,20: 1
 1126,21: ]
 1126,22: )
 1127,3: {
 1128,5: return
 1128,12: low
 1128,15: VARIABLE
 1128,16: -
 1128,18: 1
 1128,19: ;
 1129,3: }
 
404 ( expression ) scoped_statement 
 1126,6: (
 1126,7: x
 1126,8: VARIABLE
 1126,9: ==
 1126,12: v
 1126,13: VARIABLE
 1126,13: [
 1126,14: low
 1126,17: VARIABLE
 1126,18: -
 1126,20: 1
 1126,21: ]
 1126,22: )
 1127,3: {
 1128,5: return
 1128,12: low
 1128,15: VARIABLE
 1128,16: -
 1128,18: 1
 1128,19: ;
 1129,3: }
 
455 NAME VARIABLE 
 1126,7: x
 1126,8: VARIABLE
 
179 VARIABLE 
 1126,8: VARIABLE
 
155 == 
 1126,9: ==
 
257 NAME VARIABLE 
 1126,12: v
 1126,13: VARIABLE
 
179 VARIABLE 
 1126,13: VARIABLE
 
147 [ expression ] 
 1126,13: [
 1126,14: low
 1126,17: VARIABLE
 1126,18: -
 1126,20: 1
 1126,21: ]
 
236 NAME VARIABLE 
 1126,14: low
 1126,17: VARIABLE
 
179 VARIABLE 
 1126,17: VARIABLE
 
152 - 
 1126,18: -
 
246 CONSTANT 
 1126,20: 1
 
353 ] 
 1126,21: ]
 
483 ) scoped_statement 
 1126,22: )
 1127,3: {
 1128,5: return
 1128,12: low
 1128,15: VARIABLE
 1128,16: -
 1128,18: 1
 1128,19: ;
 1129,3: }
 
320 { option_block_item_list } 
 1127,3: {
 1128,5: return
 1128,12: low
 1128,15: VARIABLE
 1128,16: -
 1128,18: 1
 1128,19: ;
 1129,3: }
 
201 return option_expression ; 
 1128,5: return
 1128,12: low
 1128,15: VARIABLE
 1128,16: -
 1128,18: 1
 1128,19: ;
 
338 NAME VARIABLE 
 1128,12: low
 1128,15: VARIABLE
 
179 VARIABLE 
 1128,15: VARIABLE
 
152 - 
 1128,16: -
 
246 CONSTANT 
 1128,18: 1
 
415 ; 
 1128,19: ;
 
201 } 
 1129,3: }
 
201 return option_expression ; 
 1131,3: return
 1131,10: -
 1131,11: 1
 1131,12: ;
 
338 - 
 1131,10: -
 
149 CONSTANT 
 1131,11: 1
 
415 ; 
 1131,12: ;
 
201 } 
 1132,1: }
 
23 void 
 1134,1: void
 
5 NAME VARIABLE 
 1134,6: test_binsearch
 1134,20: VARIABLE
 
65 VARIABLE 
 1134,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1134,20: (
 1134,21: int
 1134,25: binsearch
 1134,34: VARIABLE
 1134,34: (
 1134,35: int
 1134,39: x
 1134,40: VARIABLE
 1134,40: ,
 1134,42: int
 1134,46: v
 1134,47: VARIABLE
 1134,47: [
 1134,48: ]
 1134,49: ,
 1134,51: int
 1134,55: n
 1134,56: VARIABLE
 1134,56: )
 1134,57: ,
 1134,59: int
 1134,63: x
 1134,64: VARIABLE
 1134,64: ,
 1134,66: int
 1134,70: v
 1134,71: VARIABLE
 1134,71: [
 1134,72: ]
 1134,73: ,
 1134,75: int
 1134,79: n
 1134,80: VARIABLE
 1134,80: )
 
186 int 
 1134,21: int
 
298 NAME VARIABLE 
 1134,25: binsearch
 1134,34: VARIABLE
 
65 VARIABLE 
 1134,34: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1134,34: (
 1134,35: int
 1134,39: x
 1134,40: VARIABLE
 1134,40: ,
 1134,42: int
 1134,46: v
 1134,47: VARIABLE
 1134,47: [
 1134,48: ]
 1134,49: ,
 1134,51: int
 1134,55: n
 1134,56: VARIABLE
 1134,56: )
 
186 int 
 1134,35: int
 
298 NAME VARIABLE 
 1134,39: x
 1134,40: VARIABLE
 
65 VARIABLE 
 1134,40: VARIABLE
 
300 , parameter_declaration 
 1134,40: ,
 1134,42: int
 1134,46: v
 1134,47: VARIABLE
 1134,47: [
 1134,48: ]
 
391 int 
 1134,42: int
 
298 NAME VARIABLE 
 1134,46: v
 1134,47: VARIABLE
 
65 VARIABLE 
 1134,47: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1134,47: [
 1134,48: ]
 
305 ] 
 1134,48: ]
 
300 , parameter_declaration 
 1134,49: ,
 1134,51: int
 1134,55: n
 1134,56: VARIABLE
 
391 int 
 1134,51: int
 
298 NAME VARIABLE 
 1134,55: n
 1134,56: VARIABLE
 
65 VARIABLE 
 1134,56: VARIABLE
 
187 ) 
 1134,56: )
 
300 , parameter_declaration 
 1134,57: ,
 1134,59: int
 1134,63: x
 1134,64: VARIABLE
 
391 int 
 1134,59: int
 
298 NAME VARIABLE 
 1134,63: x
 1134,64: VARIABLE
 
65 VARIABLE 
 1134,64: VARIABLE
 
300 , parameter_declaration 
 1134,64: ,
 1134,66: int
 1134,70: v
 1134,71: VARIABLE
 1134,71: [
 1134,72: ]
 
391 int 
 1134,66: int
 
298 NAME VARIABLE 
 1134,70: v
 1134,71: VARIABLE
 
65 VARIABLE 
 1134,71: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1134,71: [
 1134,72: ]
 
305 ] 
 1134,72: ]
 
300 , parameter_declaration 
 1134,73: ,
 1134,75: int
 1134,79: n
 1134,80: VARIABLE
 
391 int 
 1134,75: int
 
298 NAME VARIABLE 
 1134,79: n
 1134,80: VARIABLE
 
65 VARIABLE 
 1134,80: VARIABLE
 
187 ) 
 1134,80: )
 
94 { option_block_item_list } 
 1135,1: {
 1136,3: static
 1136,10: int
 1136,14: test_nr
 1136,21: VARIABLE
 1136,22: =
 1136,24: 0
 1136,25: ;
 1137,3: long
 1137,8: clocks
 1137,14: VARIABLE
 1137,15: =
 1137,17: clock
 1137,22: VARIABLE
 1137,22: (
 1137,23: )
 1137,24: ;
 1139,3: int
 1139,7: i
 1139,8: VARIABLE
 1139,8: ;
 1140,3: for
 1140,7: (
 1140,8: i
 1140,9: VARIABLE
 1140,10: =
 1140,12: 0
 1140,13: ;
 1140,15: i
 1140,16: VARIABLE
 1140,17: <
 1140,19: 100000
 1140,25: ;
 1140,27: ++
 1140,29: i
 1140,30: VARIABLE
 1140,30: )
 1141,3: {
 1142,5: binsearch
 1142,14: VARIABLE
 1142,14: (
 1142,15: x
 1142,16: VARIABLE
 1142,16: ,
 1142,18: v
 1142,19: VARIABLE
 1142,19: ,
 1142,21: n
 1142,22: VARIABLE
 1142,22: )
 1142,23: ;
 1143,3: }
 1145,3: clocks
 1145,9: VARIABLE
 1145,10: =
 1145,12: clock
 1145,17: VARIABLE
 1145,17: (
 1145,18: )
 1145,20: -
 1145,22: clocks
 1145,28: VARIABLE
 1145,28: ;
 1147,3: printf
 1147,9: VARIABLE
 1147,9: (
 1147,10: "
 1147,48: ,
 1147,50: test_nr
 1147,57: VARIABLE
 1147,57: ,
 1147,59: clocks
 1147,65: VARIABLE
 1147,65: ,
 1147,67: (
 1147,68: double
 1147,74: )
 1147,75: clocks
 1147,81: VARIABLE
 1147,82: /
 1149,83: (
 1149,84: (
 1149,85: __clock_t
 1149,94: TYPE
 1149,94: )
 1149,96: 1000000
 1149,103: )
 1151,97: )
 1151,98: ;
 1153,3: ++
 1153,5: test_nr
 1153,12: VARIABLE
 1153,12: ;
 1154,1: }
 
201 static 
 1136,3: static
 
8 int 
 1136,10: int
 
93 NAME VARIABLE 
 1136,14: test_nr
 1136,21: VARIABLE
 
65 VARIABLE 
 1136,21: VARIABLE
 
59 = c_initializer 
 1136,22: =
 1136,24: 0
 
108 CONSTANT 
 1136,24: 0
 
60 ; 
 1136,25: ;
 
201 long 
 1137,3: long
 
93 NAME VARIABLE 
 1137,8: clocks
 1137,14: VARIABLE
 
65 VARIABLE 
 1137,14: VARIABLE
 
59 = c_initializer 
 1137,15: =
 1137,17: clock
 1137,22: VARIABLE
 1137,22: (
 1137,23: )
 
108 NAME VARIABLE 
 1137,17: clock
 1137,22: VARIABLE
 
179 VARIABLE 
 1137,22: VARIABLE
 
147 ( option_argument_expression_list ) 
 1137,22: (
 1137,23: )
 
351 ) 
 1137,23: )
 
60 ; 
 1137,24: ;
 
201 int 
 1139,3: int
 
93 NAME VARIABLE 
 1139,7: i
 1139,8: VARIABLE
 
65 VARIABLE 
 1139,8: VARIABLE
 
60 ; 
 1139,8: ;
 
320 for ( option_expression ; option_expression ; option_expression ) scoped_statement 
 1140,3: for
 1140,7: (
 1140,8: i
 1140,9: VARIABLE
 1140,10: =
 1140,12: 0
 1140,13: ;
 1140,15: i
 1140,16: VARIABLE
 1140,17: <
 1140,19: 100000
 1140,25: ;
 1140,27: ++
 1140,29: i
 1140,30: VARIABLE
 1140,30: )
 1141,3: {
 1142,5: binsearch
 1142,14: VARIABLE
 1142,14: (
 1142,15: x
 1142,16: VARIABLE
 1142,16: ,
 1142,18: v
 1142,19: VARIABLE
 1142,19: ,
 1142,21: n
 1142,22: VARIABLE
 1142,22: )
 1142,23: ;
 1143,3: }
 
408 ( option_expression ; option_expression ; option_expression ) scoped_statement 
 1140,7: (
 1140,8: i
 1140,9: VARIABLE
 1140,10: =
 1140,12: 0
 1140,13: ;
 1140,15: i
 1140,16: VARIABLE
 1140,17: <
 1140,19: 100000
 1140,25: ;
 1140,27: ++
 1140,29: i
 1140,30: VARIABLE
 1140,30: )
 1141,3: {
 1142,5: binsearch
 1142,14: VARIABLE
 1142,14: (
 1142,15: x
 1142,16: VARIABLE
 1142,16: ,
 1142,18: v
 1142,19: VARIABLE
 1142,19: ,
 1142,21: n
 1142,22: VARIABLE
 1142,22: )
 1142,23: ;
 1143,3: }
 
460 NAME VARIABLE 
 1140,8: i
 1140,9: VARIABLE
 
65 VARIABLE 
 1140,9: VARIABLE
 
181 = 
 1140,10: =
 
279 CONSTANT 
 1140,12: 0
 
489 ; option_expression ; option_expression ) scoped_statement 
 1140,13: ;
 1140,15: i
 1140,16: VARIABLE
 1140,17: <
 1140,19: 100000
 1140,25: ;
 1140,27: ++
 1140,29: i
 1140,30: VARIABLE
 1140,30: )
 1141,3: {
 1142,5: binsearch
 1142,14: VARIABLE
 1142,14: (
 1142,15: x
 1142,16: VARIABLE
 1142,16: ,
 1142,18: v
 1142,19: VARIABLE
 1142,19: ,
 1142,21: n
 1142,22: VARIABLE
 1142,22: )
 1142,23: ;
 1143,3: }
 
505 NAME VARIABLE 
 1140,15: i
 1140,16: VARIABLE
 
179 VARIABLE 
 1140,16: VARIABLE
 
154 < 
 1140,17: <
 
252 CONSTANT 
 1140,19: 100000
 
517 ; option_expression ) scoped_statement 
 1140,25: ;
 1140,27: ++
 1140,29: i
 1140,30: VARIABLE
 1140,30: )
 1141,3: {
 1142,5: binsearch
 1142,14: VARIABLE
 1142,14: (
 1142,15: x
 1142,16: VARIABLE
 1142,16: ,
 1142,18: v
 1142,19: VARIABLE
 1142,19: ,
 1142,21: n
 1142,22: VARIABLE
 1142,22: )
 1142,23: ;
 1143,3: }
 
521 ++ unary_expression 
 1140,27: ++
 1140,29: i
 1140,30: VARIABLE
 
168 NAME VARIABLE 
 1140,29: i
 1140,30: VARIABLE
 
179 VARIABLE 
 1140,30: VARIABLE
 
525 ) scoped_statement 
 1140,30: )
 1141,3: {
 1142,5: binsearch
 1142,14: VARIABLE
 1142,14: (
 1142,15: x
 1142,16: VARIABLE
 1142,16: ,
 1142,18: v
 1142,19: VARIABLE
 1142,19: ,
 1142,21: n
 1142,22: VARIABLE
 1142,22: )
 1142,23: ;
 1143,3: }
 
320 { option_block_item_list } 
 1141,3: {
 1142,5: binsearch
 1142,14: VARIABLE
 1142,14: (
 1142,15: x
 1142,16: VARIABLE
 1142,16: ,
 1142,18: v
 1142,19: VARIABLE
 1142,19: ,
 1142,21: n
 1142,22: VARIABLE
 1142,22: )
 1142,23: ;
 1143,3: }
 
201 NAME VARIABLE 
 1142,5: binsearch
 1142,14: VARIABLE
 
65 VARIABLE 
 1142,14: VARIABLE
 
147 ( option_argument_expression_list ) 
 1142,14: (
 1142,15: x
 1142,16: VARIABLE
 1142,16: ,
 1142,18: v
 1142,19: VARIABLE
 1142,19: ,
 1142,21: n
 1142,22: VARIABLE
 1142,22: )
 
235 NAME VARIABLE 
 1142,15: x
 1142,16: VARIABLE
 
179 VARIABLE 
 1142,16: VARIABLE
 
352 , assignment_expression 
 1142,16: ,
 1142,18: v
 1142,19: VARIABLE
 
429 NAME VARIABLE 
 1142,18: v
 1142,19: VARIABLE
 
179 VARIABLE 
 1142,19: VARIABLE
 
352 , assignment_expression 
 1142,19: ,
 1142,21: n
 1142,22: VARIABLE
 
429 NAME VARIABLE 
 1142,21: n
 1142,22: VARIABLE
 
179 VARIABLE 
 1142,22: VARIABLE
 
351 ) 
 1142,22: )
 
331 ; 
 1142,23: ;
 
201 } 
 1143,3: }
 
201 NAME VARIABLE 
 1145,3: clocks
 1145,9: VARIABLE
 
65 VARIABLE 
 1145,9: VARIABLE
 
181 = 
 1145,10: =
 
279 NAME VARIABLE 
 1145,12: clock
 1145,17: VARIABLE
 
179 VARIABLE 
 1145,17: VARIABLE
 
147 ( option_argument_expression_list ) 
 1145,17: (
 1145,18: )
 
351 ) 
 1145,18: )
 
152 - 
 1145,20: -
 
246 NAME VARIABLE 
 1145,22: clocks
 1145,28: VARIABLE
 
179 VARIABLE 
 1145,28: VARIABLE
 
331 ; 
 1145,28: ;
 
201 NAME VARIABLE 
 1147,3: printf
 1147,9: VARIABLE
 
65 VARIABLE 
 1147,9: VARIABLE
 
147 ( option_argument_expression_list ) 
 1147,9: (
 1147,10: "
 1147,48: ,
 1147,50: test_nr
 1147,57: VARIABLE
 1147,57: ,
 1147,59: clocks
 1147,65: VARIABLE
 1147,65: ,
 1147,67: (
 1147,68: double
 1147,74: )
 1147,75: clocks
 1147,81: VARIABLE
 1147,82: /
 1149,83: (
 1149,84: (
 1149,85: __clock_t
 1149,94: TYPE
 1149,94: )
 1149,96: 1000000
 1149,103: )
 1151,97: )
 
235 STRING_LITERAL 
 1147,10: "
 
352 , assignment_expression 
 1147,48: ,
 1147,50: test_nr
 1147,57: VARIABLE
 
429 NAME VARIABLE 
 1147,50: test_nr
 1147,57: VARIABLE
 
179 VARIABLE 
 1147,57: VARIABLE
 
352 , assignment_expression 
 1147,57: ,
 1147,59: clocks
 1147,65: VARIABLE
 
429 NAME VARIABLE 
 1147,59: clocks
 1147,65: VARIABLE
 
179 VARIABLE 
 1147,65: VARIABLE
 
352 , assignment_expression 
 1147,65: ,
 1147,67: (
 1147,68: double
 1147,74: )
 1147,75: clocks
 1147,81: VARIABLE
 1147,82: /
 1149,83: (
 1149,84: (
 1149,85: __clock_t
 1149,94: TYPE
 1149,94: )
 1149,96: 1000000
 1149,103: )
 
429 ( type_name ) cast_expression 
 1147,67: (
 1147,68: double
 1147,74: )
 1147,75: clocks
 1147,81: VARIABLE
 
165 double 
 1147,68: double
 
269 ) cast_expression 
 1147,74: )
 1147,75: clocks
 1147,81: VARIABLE
 
369 NAME VARIABLE 
 1147,75: clocks
 1147,81: VARIABLE
 
179 VARIABLE 
 1147,81: VARIABLE
 
151 / 
 1147,82: /
 
242 ( expression ) 
 1149,83: (
 1149,84: (
 1149,85: __clock_t
 1149,94: TYPE
 1149,94: )
 1149,96: 1000000
 1149,103: )
 
165 ( type_name ) cast_expression 
 1149,84: (
 1149,85: __clock_t
 1149,94: TYPE
 1149,94: )
 1149,96: 1000000
 
165 NAME TYPE 
 1149,85: __clock_t
 1149,94: TYPE
 
65 TYPE 
 1149,94: TYPE
 
269 ) cast_expression 
 1149,94: )
 1149,96: 1000000
 
369 CONSTANT 
 1149,96: 1000000
 
267 ) 
 1149,103: )
 
351 ) 
 1151,97: )
 
331 ; 
 1151,98: ;
 
201 ++ unary_expression 
 1153,3: ++
 1153,5: test_nr
 1153,12: VARIABLE
 
168 NAME VARIABLE 
 1153,5: test_nr
 1153,12: VARIABLE
 
179 VARIABLE 
 1153,12: VARIABLE
 
331 ; 
 1153,12: ;
 
201 } 
 1154,1: }
 
23 $ 
 1155,1: $
 
