parse time:  55.04s
0 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 54,1: typedef
 54,9: unsigned
 54,18: char
 
54 unsigned 
 54,9: unsigned
 
106 char 
 54,18: char
 
6 NAME VARIABLE 
 54,23: __u_char
 54,31: VARIABLE
 
65 VARIABLE 
 54,31: VARIABLE
 
70 ; 
 54,31: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 55,1: typedef
 55,9: unsigned
 55,18: short
 55,24: int
 
54 unsigned 
 55,9: unsigned
 
106 short 
 55,18: short
 
106 int 
 55,24: int
 
6 NAME VARIABLE 
 55,28: __u_short
 55,37: VARIABLE
 
65 VARIABLE 
 55,37: VARIABLE
 
70 ; 
 55,37: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 56,1: typedef
 56,9: unsigned
 56,18: int
 
54 unsigned 
 56,9: unsigned
 
106 int 
 56,18: int
 
6 NAME VARIABLE 
 56,22: __u_int
 56,29: VARIABLE
 
65 VARIABLE 
 56,29: VARIABLE
 
70 ; 
 56,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 57,1: typedef
 57,9: unsigned
 57,18: long
 57,23: int
 
54 unsigned 
 57,9: unsigned
 
106 long 
 57,18: long
 
106 int 
 57,23: int
 
6 NAME VARIABLE 
 57,27: __u_long
 57,35: VARIABLE
 
65 VARIABLE 
 57,35: VARIABLE
 
70 ; 
 57,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 60,1: typedef
 60,9: signed
 60,16: char
 
54 signed 
 60,9: signed
 
106 char 
 60,16: char
 
6 NAME VARIABLE 
 60,21: __int8_t
 60,29: VARIABLE
 
65 VARIABLE 
 60,29: VARIABLE
 
70 ; 
 60,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 61,1: typedef
 61,9: unsigned
 61,18: char
 
54 unsigned 
 61,9: unsigned
 
106 char 
 61,18: char
 
6 NAME VARIABLE 
 61,23: __uint8_t
 61,32: VARIABLE
 
65 VARIABLE 
 61,32: VARIABLE
 
70 ; 
 61,32: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 62,1: typedef
 62,9: signed
 62,16: short
 62,22: int
 
54 signed 
 62,9: signed
 
106 short 
 62,16: short
 
106 int 
 62,22: int
 
6 NAME VARIABLE 
 62,26: __int16_t
 62,35: VARIABLE
 
65 VARIABLE 
 62,35: VARIABLE
 
70 ; 
 62,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 63,1: typedef
 63,9: unsigned
 63,18: short
 63,24: int
 
54 unsigned 
 63,9: unsigned
 
106 short 
 63,18: short
 
106 int 
 63,24: int
 
6 NAME VARIABLE 
 63,28: __uint16_t
 63,38: VARIABLE
 
65 VARIABLE 
 63,38: VARIABLE
 
70 ; 
 63,38: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 64,1: typedef
 64,9: signed
 64,16: int
 
54 signed 
 64,9: signed
 
106 int 
 64,16: int
 
6 NAME VARIABLE 
 64,20: __int32_t
 64,29: VARIABLE
 
65 VARIABLE 
 64,29: VARIABLE
 
70 ; 
 64,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 65,1: typedef
 65,9: unsigned
 65,18: int
 
54 unsigned 
 65,9: unsigned
 
106 int 
 65,18: int
 
6 NAME VARIABLE 
 65,22: __uint32_t
 65,32: VARIABLE
 
65 VARIABLE 
 65,32: VARIABLE
 
70 ; 
 65,32: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 67,1: typedef
 67,9: signed
 67,16: long
 67,21: int
 
54 signed 
 67,9: signed
 
106 long 
 67,16: long
 
106 int 
 67,21: int
 
6 NAME VARIABLE 
 67,25: __int64_t
 67,34: VARIABLE
 
65 VARIABLE 
 67,34: VARIABLE
 
70 ; 
 67,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 68,1: typedef
 68,9: unsigned
 68,18: long
 68,23: int
 
54 unsigned 
 68,9: unsigned
 
106 long 
 68,18: long
 
106 int 
 68,23: int
 
6 NAME VARIABLE 
 68,27: __uint64_t
 68,37: VARIABLE
 
65 VARIABLE 
 68,37: VARIABLE
 
70 ; 
 68,37: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 75,1: typedef
 75,9: __int8_t
 75,17: TYPE
 
54 NAME TYPE 
 75,9: __int8_t
 75,17: TYPE
 
26 TYPE 
 75,17: TYPE
 
6 NAME VARIABLE 
 75,18: __int_least8_t
 75,32: VARIABLE
 
65 VARIABLE 
 75,32: VARIABLE
 
70 ; 
 75,32: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 76,1: typedef
 76,9: __uint8_t
 76,18: TYPE
 
54 NAME TYPE 
 76,9: __uint8_t
 76,18: TYPE
 
26 TYPE 
 76,18: TYPE
 
6 NAME VARIABLE 
 76,19: __uint_least8_t
 76,34: VARIABLE
 
65 VARIABLE 
 76,34: VARIABLE
 
70 ; 
 76,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 77,1: typedef
 77,9: __int16_t
 77,18: TYPE
 
54 NAME TYPE 
 77,9: __int16_t
 77,18: TYPE
 
26 TYPE 
 77,18: TYPE
 
6 NAME VARIABLE 
 77,19: __int_least16_t
 77,34: VARIABLE
 
65 VARIABLE 
 77,34: VARIABLE
 
70 ; 
 77,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 78,1: typedef
 78,9: __uint16_t
 78,19: TYPE
 
54 NAME TYPE 
 78,9: __uint16_t
 78,19: TYPE
 
26 TYPE 
 78,19: TYPE
 
6 NAME VARIABLE 
 78,20: __uint_least16_t
 78,36: VARIABLE
 
65 VARIABLE 
 78,36: VARIABLE
 
70 ; 
 78,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 79,1: typedef
 79,9: __int32_t
 79,18: TYPE
 
54 NAME TYPE 
 79,9: __int32_t
 79,18: TYPE
 
26 TYPE 
 79,18: TYPE
 
6 NAME VARIABLE 
 79,19: __int_least32_t
 79,34: VARIABLE
 
65 VARIABLE 
 79,34: VARIABLE
 
70 ; 
 79,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 80,1: typedef
 80,9: __uint32_t
 80,19: TYPE
 
54 NAME TYPE 
 80,9: __uint32_t
 80,19: TYPE
 
26 TYPE 
 80,19: TYPE
 
6 NAME VARIABLE 
 80,20: __uint_least32_t
 80,36: VARIABLE
 
65 VARIABLE 
 80,36: VARIABLE
 
70 ; 
 80,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 81,1: typedef
 81,9: __int64_t
 81,18: TYPE
 
54 NAME TYPE 
 81,9: __int64_t
 81,18: TYPE
 
26 TYPE 
 81,18: TYPE
 
6 NAME VARIABLE 
 81,19: __int_least64_t
 81,34: VARIABLE
 
65 VARIABLE 
 81,34: VARIABLE
 
70 ; 
 81,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 82,1: typedef
 82,9: __uint64_t
 82,19: TYPE
 
54 NAME TYPE 
 82,9: __uint64_t
 82,19: TYPE
 
26 TYPE 
 82,19: TYPE
 
6 NAME VARIABLE 
 82,20: __uint_least64_t
 82,36: VARIABLE
 
65 VARIABLE 
 82,36: VARIABLE
 
70 ; 
 82,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 86,1: typedef
 86,9: long
 86,14: int
 
54 long 
 86,9: long
 
106 int 
 86,14: int
 
6 NAME VARIABLE 
 86,18: __quad_t
 86,26: VARIABLE
 
65 VARIABLE 
 86,26: VARIABLE
 
70 ; 
 86,26: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 87,1: typedef
 87,9: unsigned
 87,18: long
 87,23: int
 
54 unsigned 
 87,9: unsigned
 
106 long 
 87,18: long
 
106 int 
 87,23: int
 
6 NAME VARIABLE 
 87,27: __u_quad_t
 87,37: VARIABLE
 
65 VARIABLE 
 87,37: VARIABLE
 
70 ; 
 87,37: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 95,1: typedef
 95,9: long
 95,14: int
 
54 long 
 95,9: long
 
106 int 
 95,14: int
 
6 NAME VARIABLE 
 95,18: __intmax_t
 95,28: VARIABLE
 
65 VARIABLE 
 95,28: VARIABLE
 
70 ; 
 95,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 96,1: typedef
 96,9: unsigned
 96,18: long
 96,23: int
 
54 unsigned 
 96,9: unsigned
 
106 long 
 96,18: long
 
106 int 
 96,23: int
 
6 NAME VARIABLE 
 96,27: __uintmax_t
 96,38: VARIABLE
 
65 VARIABLE 
 96,38: VARIABLE
 
70 ; 
 96,38: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 104,1: typedef
 104,9: unsigned
 104,18: long
 104,23: int
 
54 unsigned 
 104,9: unsigned
 
106 long 
 104,18: long
 
106 int 
 104,23: int
 
6 NAME VARIABLE 
 104,27: __dev_t
 104,34: VARIABLE
 
65 VARIABLE 
 104,34: VARIABLE
 
70 ; 
 104,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 105,1: typedef
 105,9: unsigned
 105,18: int
 
54 unsigned 
 105,9: unsigned
 
106 int 
 105,18: int
 
6 NAME VARIABLE 
 105,22: __uid_t
 105,29: VARIABLE
 
65 VARIABLE 
 105,29: VARIABLE
 
70 ; 
 105,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 106,1: typedef
 106,9: unsigned
 106,18: int
 
54 unsigned 
 106,9: unsigned
 
106 int 
 106,18: int
 
6 NAME VARIABLE 
 106,22: __gid_t
 106,29: VARIABLE
 
65 VARIABLE 
 106,29: VARIABLE
 
70 ; 
 106,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 107,1: typedef
 107,9: unsigned
 107,18: long
 107,23: int
 
54 unsigned 
 107,9: unsigned
 
106 long 
 107,18: long
 
106 int 
 107,23: int
 
6 NAME VARIABLE 
 107,27: __ino_t
 107,34: VARIABLE
 
65 VARIABLE 
 107,34: VARIABLE
 
70 ; 
 107,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 108,1: typedef
 108,9: unsigned
 108,18: long
 108,23: int
 
54 unsigned 
 108,9: unsigned
 
106 long 
 108,18: long
 
106 int 
 108,23: int
 
6 NAME VARIABLE 
 108,27: __ino64_t
 108,36: VARIABLE
 
65 VARIABLE 
 108,36: VARIABLE
 
70 ; 
 108,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 109,1: typedef
 109,9: unsigned
 109,18: int
 
54 unsigned 
 109,9: unsigned
 
106 int 
 109,18: int
 
6 NAME VARIABLE 
 109,22: __mode_t
 109,30: VARIABLE
 
65 VARIABLE 
 109,30: VARIABLE
 
70 ; 
 109,30: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 110,1: typedef
 110,9: unsigned
 110,18: long
 110,23: int
 
54 unsigned 
 110,9: unsigned
 
106 long 
 110,18: long
 
106 int 
 110,23: int
 
6 NAME VARIABLE 
 110,27: __nlink_t
 110,36: VARIABLE
 
65 VARIABLE 
 110,36: VARIABLE
 
70 ; 
 110,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 111,1: typedef
 111,9: long
 111,14: int
 
54 long 
 111,9: long
 
106 int 
 111,14: int
 
6 NAME VARIABLE 
 111,18: __off_t
 111,25: VARIABLE
 
65 VARIABLE 
 111,25: VARIABLE
 
70 ; 
 111,25: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 112,1: typedef
 112,9: long
 112,14: int
 
54 long 
 112,9: long
 
106 int 
 112,14: int
 
6 NAME VARIABLE 
 112,18: __off64_t
 112,27: VARIABLE
 
65 VARIABLE 
 112,27: VARIABLE
 
70 ; 
 112,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 113,1: typedef
 113,9: int
 
54 int 
 113,9: int
 
6 NAME VARIABLE 
 113,13: __pid_t
 113,20: VARIABLE
 
65 VARIABLE 
 113,20: VARIABLE
 
70 ; 
 113,20: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 114,1: typedef
 114,9: struct
 114,16: {
 114,18: int
 114,22: __val
 114,27: VARIABLE
 114,27: [
 114,28: 2
 114,29: ]
 114,30: ;
 114,32: }
 
54 struct 
 114,9: struct
 
89 { struct_declaration_list } 
 114,16: {
 114,18: int
 114,22: __val
 114,27: VARIABLE
 114,27: [
 114,28: 2
 114,29: ]
 114,30: ;
 114,32: }
 
126 int 
 114,18: int
 
200 NAME VARIABLE 
 114,22: __val
 114,27: VARIABLE
 
65 VARIABLE 
 114,27: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 114,27: [
 114,28: 2
 114,29: ]
 
188 CONSTANT 
 114,28: 2
 
305 ] 
 114,29: ]
 
313 ; 
 114,30: ;
 
198 } 
 114,32: }
 
6 NAME VARIABLE 
 114,34: __fsid_t
 114,42: VARIABLE
 
65 VARIABLE 
 114,42: VARIABLE
 
70 ; 
 114,42: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 115,1: typedef
 115,9: long
 115,14: int
 
54 long 
 115,9: long
 
106 int 
 115,14: int
 
6 NAME VARIABLE 
 115,18: __clock_t
 115,27: VARIABLE
 
65 VARIABLE 
 115,27: VARIABLE
 
70 ; 
 115,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 116,1: typedef
 116,9: unsigned
 116,18: long
 116,23: int
 
54 unsigned 
 116,9: unsigned
 
106 long 
 116,18: long
 
106 int 
 116,23: int
 
6 NAME VARIABLE 
 116,27: __rlim_t
 116,35: VARIABLE
 
65 VARIABLE 
 116,35: VARIABLE
 
70 ; 
 116,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 117,1: typedef
 117,9: unsigned
 117,18: long
 117,23: int
 
54 unsigned 
 117,9: unsigned
 
106 long 
 117,18: long
 
106 int 
 117,23: int
 
6 NAME VARIABLE 
 117,27: __rlim64_t
 117,37: VARIABLE
 
65 VARIABLE 
 117,37: VARIABLE
 
70 ; 
 117,37: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 118,1: typedef
 118,9: unsigned
 118,18: int
 
54 unsigned 
 118,9: unsigned
 
106 int 
 118,18: int
 
6 NAME VARIABLE 
 118,22: __id_t
 118,28: VARIABLE
 
65 VARIABLE 
 118,28: VARIABLE
 
70 ; 
 118,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 119,1: typedef
 119,9: long
 119,14: int
 
54 long 
 119,9: long
 
106 int 
 119,14: int
 
6 NAME VARIABLE 
 119,18: __time_t
 119,26: VARIABLE
 
65 VARIABLE 
 119,26: VARIABLE
 
70 ; 
 119,26: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 120,1: typedef
 120,9: unsigned
 120,18: int
 
54 unsigned 
 120,9: unsigned
 
106 int 
 120,18: int
 
6 NAME VARIABLE 
 120,22: __useconds_t
 120,34: VARIABLE
 
65 VARIABLE 
 120,34: VARIABLE
 
70 ; 
 120,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 121,1: typedef
 121,9: long
 121,14: int
 
54 long 
 121,9: long
 
106 int 
 121,14: int
 
6 NAME VARIABLE 
 121,18: __suseconds_t
 121,31: VARIABLE
 
65 VARIABLE 
 121,31: VARIABLE
 
70 ; 
 121,31: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 122,1: typedef
 122,9: long
 122,14: int
 
54 long 
 122,9: long
 
106 int 
 122,14: int
 
6 NAME VARIABLE 
 122,18: __suseconds64_t
 122,33: VARIABLE
 
65 VARIABLE 
 122,33: VARIABLE
 
70 ; 
 122,33: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 124,1: typedef
 124,9: int
 
54 int 
 124,9: int
 
6 NAME VARIABLE 
 124,13: __daddr_t
 124,22: VARIABLE
 
65 VARIABLE 
 124,22: VARIABLE
 
70 ; 
 124,22: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 125,1: typedef
 125,9: int
 
54 int 
 125,9: int
 
6 NAME VARIABLE 
 125,13: __key_t
 125,20: VARIABLE
 
65 VARIABLE 
 125,20: VARIABLE
 
70 ; 
 125,20: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 128,1: typedef
 128,9: int
 
54 int 
 128,9: int
 
6 NAME VARIABLE 
 128,13: __clockid_t
 128,24: VARIABLE
 
65 VARIABLE 
 128,24: VARIABLE
 
70 ; 
 128,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 131,1: typedef
 131,9: void
 
54 void 
 131,9: void
 
6 * option_type_qualifier_list option_pointer 
 131,14: *
 
64 NAME VARIABLE 
 131,16: __timer_t
 131,25: VARIABLE
 
65 VARIABLE 
 131,25: VARIABLE
 
70 ; 
 131,25: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 134,1: typedef
 134,9: long
 134,14: int
 
54 long 
 134,9: long
 
106 int 
 134,14: int
 
6 NAME VARIABLE 
 134,18: __blksize_t
 134,29: VARIABLE
 
65 VARIABLE 
 134,29: VARIABLE
 
70 ; 
 134,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 139,1: typedef
 139,9: long
 139,14: int
 
54 long 
 139,9: long
 
106 int 
 139,14: int
 
6 NAME VARIABLE 
 139,18: __blkcnt_t
 139,28: VARIABLE
 
65 VARIABLE 
 139,28: VARIABLE
 
70 ; 
 139,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 140,1: typedef
 140,9: long
 140,14: int
 
54 long 
 140,9: long
 
106 int 
 140,14: int
 
6 NAME VARIABLE 
 140,18: __blkcnt64_t
 140,30: VARIABLE
 
65 VARIABLE 
 140,30: VARIABLE
 
70 ; 
 140,30: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 143,1: typedef
 143,9: unsigned
 143,18: long
 143,23: int
 
54 unsigned 
 143,9: unsigned
 
106 long 
 143,18: long
 
106 int 
 143,23: int
 
6 NAME VARIABLE 
 143,27: __fsblkcnt_t
 143,39: VARIABLE
 
65 VARIABLE 
 143,39: VARIABLE
 
70 ; 
 143,39: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 144,1: typedef
 144,9: unsigned
 144,18: long
 144,23: int
 
54 unsigned 
 144,9: unsigned
 
106 long 
 144,18: long
 
106 int 
 144,23: int
 
6 NAME VARIABLE 
 144,27: __fsblkcnt64_t
 144,41: VARIABLE
 
65 VARIABLE 
 144,41: VARIABLE
 
70 ; 
 144,41: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 147,1: typedef
 147,9: unsigned
 147,18: long
 147,23: int
 
54 unsigned 
 147,9: unsigned
 
106 long 
 147,18: long
 
106 int 
 147,23: int
 
6 NAME VARIABLE 
 147,27: __fsfilcnt_t
 147,39: VARIABLE
 
65 VARIABLE 
 147,39: VARIABLE
 
70 ; 
 147,39: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 148,1: typedef
 148,9: unsigned
 148,18: long
 148,23: int
 
54 unsigned 
 148,9: unsigned
 
106 long 
 148,18: long
 
106 int 
 148,23: int
 
6 NAME VARIABLE 
 148,27: __fsfilcnt64_t
 148,41: VARIABLE
 
65 VARIABLE 
 148,41: VARIABLE
 
70 ; 
 148,41: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 151,1: typedef
 151,9: long
 151,14: int
 
54 long 
 151,9: long
 
106 int 
 151,14: int
 
6 NAME VARIABLE 
 151,18: __fsword_t
 151,28: VARIABLE
 
65 VARIABLE 
 151,28: VARIABLE
 
70 ; 
 151,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 153,1: typedef
 153,9: long
 153,14: int
 
54 long 
 153,9: long
 
106 int 
 153,14: int
 
6 NAME VARIABLE 
 153,18: __ssize_t
 153,27: VARIABLE
 
65 VARIABLE 
 153,27: VARIABLE
 
70 ; 
 153,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 156,1: typedef
 156,9: long
 156,14: int
 
54 long 
 156,9: long
 
106 int 
 156,14: int
 
6 NAME VARIABLE 
 156,18: __syscall_slong_t
 156,35: VARIABLE
 
65 VARIABLE 
 156,35: VARIABLE
 
70 ; 
 156,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 158,1: typedef
 158,9: unsigned
 158,18: long
 158,23: int
 
54 unsigned 
 158,9: unsigned
 
106 long 
 158,18: long
 
106 int 
 158,23: int
 
6 NAME VARIABLE 
 158,27: __syscall_ulong_t
 158,44: VARIABLE
 
65 VARIABLE 
 158,44: VARIABLE
 
70 ; 
 158,44: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 162,1: typedef
 162,9: __off64_t
 162,18: TYPE
 
54 NAME TYPE 
 162,9: __off64_t
 162,18: TYPE
 
26 TYPE 
 162,18: TYPE
 
6 NAME VARIABLE 
 162,19: __loff_t
 162,27: VARIABLE
 
65 VARIABLE 
 162,27: VARIABLE
 
70 ; 
 162,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 163,1: typedef
 163,9: char
 
54 char 
 163,9: char
 
6 * option_type_qualifier_list option_pointer 
 163,14: *
 
64 NAME VARIABLE 
 163,15: __caddr_t
 163,24: VARIABLE
 
65 VARIABLE 
 163,24: VARIABLE
 
70 ; 
 163,24: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 166,1: typedef
 166,9: long
 166,14: int
 
54 long 
 166,9: long
 
106 int 
 166,14: int
 
6 NAME VARIABLE 
 166,18: __intptr_t
 166,28: VARIABLE
 
65 VARIABLE 
 166,28: VARIABLE
 
70 ; 
 166,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 169,1: typedef
 169,9: unsigned
 169,18: int
 
54 unsigned 
 169,9: unsigned
 
106 int 
 169,18: int
 
6 NAME VARIABLE 
 169,22: __socklen_t
 169,33: VARIABLE
 
65 VARIABLE 
 169,33: VARIABLE
 
70 ; 
 169,33: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 174,1: typedef
 174,9: int
 
54 int 
 174,9: int
 
6 NAME VARIABLE 
 174,13: __sig_atomic_t
 174,27: VARIABLE
 
65 VARIABLE 
 174,27: VARIABLE
 
70 ; 
 174,27: ;
 
23 struct 
 181,1: struct
 
22 NAME VARIABLE 
 181,8: flock
 181,13: VARIABLE
 
65 VARIABLE 
 181,13: VARIABLE
 
89 { struct_declaration_list } 
 182,3: {
 183,5: short
 183,11: int
 183,15: l_type
 183,21: VARIABLE
 183,21: ;
 184,5: short
 184,11: int
 184,15: l_whence
 184,23: VARIABLE
 184,23: ;
 186,5: __off_t
 186,12: TYPE
 186,13: l_start
 186,20: VARIABLE
 186,20: ;
 187,5: __off_t
 187,12: TYPE
 187,13: l_len
 187,18: VARIABLE
 187,18: ;
 192,5: __pid_t
 192,12: TYPE
 192,13: l_pid
 192,18: VARIABLE
 192,18: ;
 193,3: }
 
126 short 
 183,5: short
 
135 int 
 183,11: int
 
200 NAME VARIABLE 
 183,15: l_type
 183,21: VARIABLE
 
65 VARIABLE 
 183,21: VARIABLE
 
313 ; 
 183,21: ;
 
198 short 
 184,5: short
 
135 int 
 184,11: int
 
200 NAME VARIABLE 
 184,15: l_whence
 184,23: VARIABLE
 
65 VARIABLE 
 184,23: VARIABLE
 
313 ; 
 184,23: ;
 
198 NAME TYPE 
 186,5: __off_t
 186,12: TYPE
 
26 TYPE 
 186,12: TYPE
 
200 NAME VARIABLE 
 186,13: l_start
 186,20: VARIABLE
 
65 VARIABLE 
 186,20: VARIABLE
 
313 ; 
 186,20: ;
 
198 NAME TYPE 
 187,5: __off_t
 187,12: TYPE
 
26 TYPE 
 187,12: TYPE
 
200 NAME VARIABLE 
 187,13: l_len
 187,18: VARIABLE
 
65 VARIABLE 
 187,18: VARIABLE
 
313 ; 
 187,18: ;
 
198 NAME TYPE 
 192,5: __pid_t
 192,12: TYPE
 
26 TYPE 
 192,12: TYPE
 
200 NAME VARIABLE 
 192,13: l_pid
 192,18: VARIABLE
 
65 VARIABLE 
 192,18: VARIABLE
 
313 ; 
 192,18: ;
 
198 } 
 193,3: }
 
60 ; 
 193,4: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 203,1: typedef
 203,9: __mode_t
 203,17: TYPE
 
54 NAME TYPE 
 203,9: __mode_t
 203,17: TYPE
 
26 TYPE 
 203,17: TYPE
 
6 NAME VARIABLE 
 203,18: mode_t
 203,24: VARIABLE
 
65 VARIABLE 
 203,24: VARIABLE
 
70 ; 
 203,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 209,1: typedef
 209,9: __off_t
 209,16: TYPE
 
54 NAME TYPE 
 209,9: __off_t
 209,16: TYPE
 
26 TYPE 
 209,16: TYPE
 
6 NAME VARIABLE 
 209,17: off_t
 209,22: VARIABLE
 
65 VARIABLE 
 209,22: VARIABLE
 
70 ; 
 209,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 211,1: typedef
 211,9: __pid_t
 211,16: TYPE
 
54 NAME TYPE 
 211,9: __pid_t
 211,16: TYPE
 
26 TYPE 
 211,16: TYPE
 
6 NAME VARIABLE 
 211,17: pid_t
 211,22: VARIABLE
 
65 VARIABLE 
 211,22: VARIABLE
 
70 ; 
 211,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 230,1: typedef
 230,9: __time_t
 230,17: TYPE
 
54 NAME TYPE 
 230,9: __time_t
 230,17: TYPE
 
26 TYPE 
 230,17: TYPE
 
6 NAME VARIABLE 
 230,18: time_t
 230,24: VARIABLE
 
65 VARIABLE 
 230,24: VARIABLE
 
70 ; 
 230,24: ;
 
23 struct 
 235,1: struct
 
22 NAME VARIABLE 
 235,8: timespec
 235,16: VARIABLE
 
65 VARIABLE 
 235,16: VARIABLE
 
89 { struct_declaration_list } 
 236,1: {
 240,3: __time_t
 240,11: TYPE
 240,12: tv_sec
 240,18: VARIABLE
 240,18: ;
 245,3: __syscall_slong_t
 245,20: TYPE
 245,21: tv_nsec
 245,28: VARIABLE
 245,28: ;
 247,1: }
 
126 NAME TYPE 
 240,3: __time_t
 240,11: TYPE
 
26 TYPE 
 240,11: TYPE
 
200 NAME VARIABLE 
 240,12: tv_sec
 240,18: VARIABLE
 
65 VARIABLE 
 240,18: VARIABLE
 
313 ; 
 240,18: ;
 
198 NAME TYPE 
 245,3: __syscall_slong_t
 245,20: TYPE
 
26 TYPE 
 245,20: TYPE
 
200 NAME VARIABLE 
 245,21: tv_nsec
 245,28: VARIABLE
 
65 VARIABLE 
 245,28: VARIABLE
 
313 ; 
 245,28: ;
 
198 } 
 247,1: }
 
60 ; 
 247,2: ;
 
23 struct 
 255,1: struct
 
22 NAME VARIABLE 
 255,8: stat
 255,12: VARIABLE
 
65 VARIABLE 
 255,12: VARIABLE
 
89 { struct_declaration_list } 
 256,3: {
 260,5: __dev_t
 260,12: TYPE
 260,13: st_dev
 260,19: VARIABLE
 260,19: ;
 265,5: __ino_t
 265,12: TYPE
 265,13: st_ino
 265,19: VARIABLE
 265,19: ;
 273,5: __nlink_t
 273,14: TYPE
 273,15: st_nlink
 273,23: VARIABLE
 273,23: ;
 274,5: __mode_t
 274,13: TYPE
 274,14: st_mode
 274,21: VARIABLE
 274,21: ;
 276,5: __uid_t
 276,12: TYPE
 276,13: st_uid
 276,19: VARIABLE
 276,19: ;
 277,5: __gid_t
 277,12: TYPE
 277,13: st_gid
 277,19: VARIABLE
 277,19: ;
 279,5: int
 279,9: __pad0
 279,15: VARIABLE
 279,15: ;
 281,5: __dev_t
 281,12: TYPE
 281,13: st_rdev
 281,20: VARIABLE
 281,20: ;
 286,5: __off_t
 286,12: TYPE
 286,13: st_size
 286,20: VARIABLE
 286,20: ;
 290,5: __blksize_t
 290,16: TYPE
 290,17: st_blksize
 290,27: VARIABLE
 290,27: ;
 292,5: __blkcnt_t
 292,15: TYPE
 292,16: st_blocks
 292,25: VARIABLE
 292,25: ;
 294,5: struct
 294,12: timespec
 294,20: VARIABLE
 294,21: st_atim
 294,28: VARIABLE
 294,28: ;
 295,5: struct
 295,12: timespec
 295,20: VARIABLE
 295,21: st_mtim
 295,28: VARIABLE
 295,28: ;
 296,5: struct
 296,12: timespec
 296,20: VARIABLE
 296,21: st_ctim
 296,28: VARIABLE
 296,28: ;
 298,5: __syscall_slong_t
 298,22: TYPE
 298,23: __glibc_reserved
 298,39: VARIABLE
 298,39: [
 298,40: 3
 298,41: ]
 298,42: ;
 300,3: }
 
126 NAME TYPE 
 260,5: __dev_t
 260,12: TYPE
 
26 TYPE 
 260,12: TYPE
 
200 NAME VARIABLE 
 260,13: st_dev
 260,19: VARIABLE
 
65 VARIABLE 
 260,19: VARIABLE
 
313 ; 
 260,19: ;
 
198 NAME TYPE 
 265,5: __ino_t
 265,12: TYPE
 
26 TYPE 
 265,12: TYPE
 
200 NAME VARIABLE 
 265,13: st_ino
 265,19: VARIABLE
 
65 VARIABLE 
 265,19: VARIABLE
 
313 ; 
 265,19: ;
 
198 NAME TYPE 
 273,5: __nlink_t
 273,14: TYPE
 
26 TYPE 
 273,14: TYPE
 
200 NAME VARIABLE 
 273,15: st_nlink
 273,23: VARIABLE
 
65 VARIABLE 
 273,23: VARIABLE
 
313 ; 
 273,23: ;
 
198 NAME TYPE 
 274,5: __mode_t
 274,13: TYPE
 
26 TYPE 
 274,13: TYPE
 
200 NAME VARIABLE 
 274,14: st_mode
 274,21: VARIABLE
 
65 VARIABLE 
 274,21: VARIABLE
 
313 ; 
 274,21: ;
 
198 NAME TYPE 
 276,5: __uid_t
 276,12: TYPE
 
26 TYPE 
 276,12: TYPE
 
200 NAME VARIABLE 
 276,13: st_uid
 276,19: VARIABLE
 
65 VARIABLE 
 276,19: VARIABLE
 
313 ; 
 276,19: ;
 
198 NAME TYPE 
 277,5: __gid_t
 277,12: TYPE
 
26 TYPE 
 277,12: TYPE
 
200 NAME VARIABLE 
 277,13: st_gid
 277,19: VARIABLE
 
65 VARIABLE 
 277,19: VARIABLE
 
313 ; 
 277,19: ;
 
198 int 
 279,5: int
 
200 NAME VARIABLE 
 279,9: __pad0
 279,15: VARIABLE
 
65 VARIABLE 
 279,15: VARIABLE
 
313 ; 
 279,15: ;
 
198 NAME TYPE 
 281,5: __dev_t
 281,12: TYPE
 
26 TYPE 
 281,12: TYPE
 
200 NAME VARIABLE 
 281,13: st_rdev
 281,20: VARIABLE
 
65 VARIABLE 
 281,20: VARIABLE
 
313 ; 
 281,20: ;
 
198 NAME TYPE 
 286,5: __off_t
 286,12: TYPE
 
26 TYPE 
 286,12: TYPE
 
200 NAME VARIABLE 
 286,13: st_size
 286,20: VARIABLE
 
65 VARIABLE 
 286,20: VARIABLE
 
313 ; 
 286,20: ;
 
198 NAME TYPE 
 290,5: __blksize_t
 290,16: TYPE
 
26 TYPE 
 290,16: TYPE
 
200 NAME VARIABLE 
 290,17: st_blksize
 290,27: VARIABLE
 
65 VARIABLE 
 290,27: VARIABLE
 
313 ; 
 290,27: ;
 
198 NAME TYPE 
 292,5: __blkcnt_t
 292,15: TYPE
 
26 TYPE 
 292,15: TYPE
 
200 NAME VARIABLE 
 292,16: st_blocks
 292,25: VARIABLE
 
65 VARIABLE 
 292,25: VARIABLE
 
313 ; 
 292,25: ;
 
198 struct 
 294,5: struct
 
22 NAME VARIABLE 
 294,12: timespec
 294,20: VARIABLE
 
65 VARIABLE 
 294,20: VARIABLE
 
200 NAME VARIABLE 
 294,21: st_atim
 294,28: VARIABLE
 
65 VARIABLE 
 294,28: VARIABLE
 
313 ; 
 294,28: ;
 
198 struct 
 295,5: struct
 
22 NAME VARIABLE 
 295,12: timespec
 295,20: VARIABLE
 
65 VARIABLE 
 295,20: VARIABLE
 
200 NAME VARIABLE 
 295,21: st_mtim
 295,28: VARIABLE
 
65 VARIABLE 
 295,28: VARIABLE
 
313 ; 
 295,28: ;
 
198 struct 
 296,5: struct
 
22 NAME VARIABLE 
 296,12: timespec
 296,20: VARIABLE
 
65 VARIABLE 
 296,20: VARIABLE
 
200 NAME VARIABLE 
 296,21: st_ctim
 296,28: VARIABLE
 
65 VARIABLE 
 296,28: VARIABLE
 
313 ; 
 296,28: ;
 
198 NAME TYPE 
 298,5: __syscall_slong_t
 298,22: TYPE
 
26 TYPE 
 298,22: TYPE
 
200 NAME VARIABLE 
 298,23: __glibc_reserved
 298,39: VARIABLE
 
65 VARIABLE 
 298,39: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 298,39: [
 298,40: 3
 298,41: ]
 
188 CONSTANT 
 298,40: 3
 
305 ] 
 298,41: ]
 
313 ; 
 298,42: ;
 
198 } 
 300,3: }
 
60 ; 
 300,4: ;
 
23 extern 
 304,1: extern
 
8 int 
 304,8: int
 
5 NAME VARIABLE 
 304,12: fcntl
 304,17: VARIABLE
 
65 VARIABLE 
 304,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 304,18: (
 304,19: int
 304,23: __fd
 304,27: VARIABLE
 304,27: ,
 304,29: int
 304,33: __cmd
 304,38: VARIABLE
 304,38: ,
 304,40: ...
 304,43: )
 
186 int 
 304,19: int
 
298 NAME VARIABLE 
 304,23: __fd
 304,27: VARIABLE
 
65 VARIABLE 
 304,27: VARIABLE
 
300 , parameter_declaration 
 304,27: ,
 304,29: int
 304,33: __cmd
 304,38: VARIABLE
 
391 int 
 304,29: int
 
298 NAME VARIABLE 
 304,33: __cmd
 304,38: VARIABLE
 
65 VARIABLE 
 304,38: VARIABLE
 
300 , ... 
 304,38: ,
 304,40: ...
 
391 ... 
 304,40: ...
 
187 ) 
 304,43: )
 
60 ; 
 304,44: ;
 
23 extern 
 306,1: extern
 
8 int 
 306,8: int
 
5 NAME VARIABLE 
 306,12: open
 306,16: VARIABLE
 
65 VARIABLE 
 306,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 306,17: (
 306,18: const
 306,24: char
 306,29: *
 306,30: __file
 306,36: VARIABLE
 306,36: ,
 306,38: int
 306,42: __oflag
 306,49: VARIABLE
 306,49: ,
 306,51: ...
 306,54: )
 
186 const 
 306,18: const
 
103 char 
 306,24: char
 
298 * option_type_qualifier_list option_pointer 
 306,29: *
 
386 NAME VARIABLE 
 306,30: __file
 306,36: VARIABLE
 
65 VARIABLE 
 306,36: VARIABLE
 
300 , parameter_declaration 
 306,36: ,
 306,38: int
 306,42: __oflag
 306,49: VARIABLE
 
391 int 
 306,38: int
 
298 NAME VARIABLE 
 306,42: __oflag
 306,49: VARIABLE
 
65 VARIABLE 
 306,49: VARIABLE
 
300 , ... 
 306,49: ,
 306,51: ...
 
391 ... 
 306,51: ...
 
187 ) 
 306,54: )
 
60 ; 
 306,56: ;
 
23 extern 
 308,1: extern
 
8 int 
 308,8: int
 
5 NAME VARIABLE 
 308,12: openat
 308,18: VARIABLE
 
65 VARIABLE 
 308,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 308,19: (
 308,20: int
 308,24: __fd
 308,28: VARIABLE
 308,28: ,
 308,30: const
 308,36: char
 308,41: *
 308,42: __file
 308,48: VARIABLE
 308,48: ,
 308,50: int
 308,54: __oflag
 308,61: VARIABLE
 308,61: ,
 308,63: ...
 308,66: )
 
186 int 
 308,20: int
 
298 NAME VARIABLE 
 308,24: __fd
 308,28: VARIABLE
 
65 VARIABLE 
 308,28: VARIABLE
 
300 , parameter_declaration 
 308,28: ,
 308,30: const
 308,36: char
 308,41: *
 308,42: __file
 308,48: VARIABLE
 
391 const 
 308,30: const
 
103 char 
 308,36: char
 
298 * option_type_qualifier_list option_pointer 
 308,41: *
 
386 NAME VARIABLE 
 308,42: __file
 308,48: VARIABLE
 
65 VARIABLE 
 308,48: VARIABLE
 
300 , parameter_declaration 
 308,48: ,
 308,50: int
 308,54: __oflag
 308,61: VARIABLE
 
391 int 
 308,50: int
 
298 NAME VARIABLE 
 308,54: __oflag
 308,61: VARIABLE
 
65 VARIABLE 
 308,61: VARIABLE
 
300 , ... 
 308,61: ,
 308,63: ...
 
391 ... 
 308,63: ...
 
187 ) 
 308,66: )
 
60 ; 
 309,6: ;
 
23 extern 
 311,1: extern
 
8 int 
 311,8: int
 
5 NAME VARIABLE 
 311,12: creat
 311,17: VARIABLE
 
65 VARIABLE 
 311,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 311,18: (
 311,19: const
 311,25: char
 311,30: *
 311,31: __file
 311,37: VARIABLE
 311,37: ,
 311,39: mode_t
 311,45: TYPE
 311,46: __mode
 311,52: VARIABLE
 311,52: )
 
186 const 
 311,19: const
 
103 char 
 311,25: char
 
298 * option_type_qualifier_list option_pointer 
 311,30: *
 
386 NAME VARIABLE 
 311,31: __file
 311,37: VARIABLE
 
65 VARIABLE 
 311,37: VARIABLE
 
300 , parameter_declaration 
 311,37: ,
 311,39: mode_t
 311,45: TYPE
 311,46: __mode
 311,52: VARIABLE
 
391 NAME TYPE 
 311,39: mode_t
 311,45: TYPE
 
26 TYPE 
 311,45: TYPE
 
298 NAME VARIABLE 
 311,46: __mode
 311,52: VARIABLE
 
65 VARIABLE 
 311,52: VARIABLE
 
187 ) 
 311,52: )
 
60 ; 
 311,54: ;
 
23 extern 
 313,1: extern
 
8 int 
 313,8: int
 
5 NAME VARIABLE 
 313,12: lockf
 313,17: VARIABLE
 
65 VARIABLE 
 313,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 313,18: (
 313,19: int
 313,23: __fd
 313,27: VARIABLE
 313,27: ,
 313,29: int
 313,33: __cmd
 313,38: VARIABLE
 313,38: ,
 313,40: off_t
 313,45: TYPE
 313,46: __len
 313,51: VARIABLE
 313,51: )
 
186 int 
 313,19: int
 
298 NAME VARIABLE 
 313,23: __fd
 313,27: VARIABLE
 
65 VARIABLE 
 313,27: VARIABLE
 
300 , parameter_declaration 
 313,27: ,
 313,29: int
 313,33: __cmd
 313,38: VARIABLE
 
391 int 
 313,29: int
 
298 NAME VARIABLE 
 313,33: __cmd
 313,38: VARIABLE
 
65 VARIABLE 
 313,38: VARIABLE
 
300 , parameter_declaration 
 313,38: ,
 313,40: off_t
 313,45: TYPE
 313,46: __len
 313,51: VARIABLE
 
391 NAME TYPE 
 313,40: off_t
 313,45: TYPE
 
26 TYPE 
 313,45: TYPE
 
298 NAME VARIABLE 
 313,46: __len
 313,51: VARIABLE
 
65 VARIABLE 
 313,51: VARIABLE
 
187 ) 
 313,51: )
 
60 ; 
 313,52: ;
 
23 extern 
 315,1: extern
 
8 int 
 315,8: int
 
5 NAME VARIABLE 
 315,12: posix_fadvise
 315,25: VARIABLE
 
65 VARIABLE 
 315,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 315,26: (
 315,27: int
 315,31: __fd
 315,35: VARIABLE
 315,35: ,
 315,37: off_t
 315,42: TYPE
 315,43: __offset
 315,51: VARIABLE
 315,51: ,
 315,53: off_t
 315,58: TYPE
 315,59: __len
 315,64: VARIABLE
 315,64: ,
 316,6: int
 316,10: __advise
 316,18: VARIABLE
 316,18: )
 
186 int 
 315,27: int
 
298 NAME VARIABLE 
 315,31: __fd
 315,35: VARIABLE
 
65 VARIABLE 
 315,35: VARIABLE
 
300 , parameter_declaration 
 315,35: ,
 315,37: off_t
 315,42: TYPE
 315,43: __offset
 315,51: VARIABLE
 
391 NAME TYPE 
 315,37: off_t
 315,42: TYPE
 
26 TYPE 
 315,42: TYPE
 
298 NAME VARIABLE 
 315,43: __offset
 315,51: VARIABLE
 
65 VARIABLE 
 315,51: VARIABLE
 
300 , parameter_declaration 
 315,51: ,
 315,53: off_t
 315,58: TYPE
 315,59: __len
 315,64: VARIABLE
 
391 NAME TYPE 
 315,53: off_t
 315,58: TYPE
 
26 TYPE 
 315,58: TYPE
 
298 NAME VARIABLE 
 315,59: __len
 315,64: VARIABLE
 
65 VARIABLE 
 315,64: VARIABLE
 
300 , parameter_declaration 
 315,64: ,
 316,6: int
 316,10: __advise
 316,18: VARIABLE
 
391 int 
 316,6: int
 
298 NAME VARIABLE 
 316,10: __advise
 316,18: VARIABLE
 
65 VARIABLE 
 316,18: VARIABLE
 
187 ) 
 316,18: )
 
60 ; 
 316,20: ;
 
23 extern 
 318,1: extern
 
8 int 
 318,8: int
 
5 NAME VARIABLE 
 318,12: posix_fallocate
 318,27: VARIABLE
 
65 VARIABLE 
 318,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 318,28: (
 318,29: int
 318,33: __fd
 318,37: VARIABLE
 318,37: ,
 318,39: off_t
 318,44: TYPE
 318,45: __offset
 318,53: VARIABLE
 318,53: ,
 318,55: off_t
 318,60: TYPE
 318,61: __len
 318,66: VARIABLE
 318,66: )
 
186 int 
 318,29: int
 
298 NAME VARIABLE 
 318,33: __fd
 318,37: VARIABLE
 
65 VARIABLE 
 318,37: VARIABLE
 
300 , parameter_declaration 
 318,37: ,
 318,39: off_t
 318,44: TYPE
 318,45: __offset
 318,53: VARIABLE
 
391 NAME TYPE 
 318,39: off_t
 318,44: TYPE
 
26 TYPE 
 318,44: TYPE
 
298 NAME VARIABLE 
 318,45: __offset
 318,53: VARIABLE
 
65 VARIABLE 
 318,53: VARIABLE
 
300 , parameter_declaration 
 318,53: ,
 318,55: off_t
 318,60: TYPE
 318,61: __len
 318,66: VARIABLE
 
391 NAME TYPE 
 318,55: off_t
 318,60: TYPE
 
26 TYPE 
 318,60: TYPE
 
298 NAME VARIABLE 
 318,61: __len
 318,66: VARIABLE
 
65 VARIABLE 
 318,66: VARIABLE
 
187 ) 
 318,66: )
 
60 ; 
 318,67: ;
 
23 struct 
 326,1: struct
 
22 NAME VARIABLE 
 326,8: _io_buffer_file
 326,23: VARIABLE
 
65 VARIABLE 
 326,23: VARIABLE
 
89 { struct_declaration_list } 
 327,1: {
 328,3: int
 328,7: counter
 328,14: VARIABLE
 328,14: ;
 329,3: char
 329,8: *
 329,9: next_char_pos_p
 329,24: VARIABLE
 329,24: ;
 330,3: char
 330,8: *
 330,9: base
 330,13: VARIABLE
 330,13: ;
 331,3: struct
 332,3: {
 333,5: int
 333,9: _READ
 333,14: VARIABLE
 333,15: :
 333,17: 1
 333,18: ;
 334,5: int
 334,9: _WRITE
 334,15: VARIABLE
 334,16: :
 334,18: 1
 334,19: ;
 335,5: int
 335,9: _UNBUF
 335,15: VARIABLE
 335,16: :
 335,18: 1
 335,19: ;
 336,5: int
 336,9: _EOF
 336,13: VARIABLE
 336,14: :
 336,16: 1
 336,17: ;
 337,5: int
 337,9: _ERR
 337,13: VARIABLE
 337,14: :
 337,16: 1
 337,17: ;
 338,3: }
 338,5: flag
 338,9: VARIABLE
 338,9: ;
 339,3: int
 339,7: file_descriptor
 339,22: VARIABLE
 339,22: ;
 340,1: }
 
126 int 
 328,3: int
 
200 NAME VARIABLE 
 328,7: counter
 328,14: VARIABLE
 
65 VARIABLE 
 328,14: VARIABLE
 
313 ; 
 328,14: ;
 
198 char 
 329,3: char
 
200 * option_type_qualifier_list option_pointer 
 329,8: *
 
64 NAME VARIABLE 
 329,9: next_char_pos_p
 329,24: VARIABLE
 
65 VARIABLE 
 329,24: VARIABLE
 
313 ; 
 329,24: ;
 
198 char 
 330,3: char
 
200 * option_type_qualifier_list option_pointer 
 330,8: *
 
64 NAME VARIABLE 
 330,9: base
 330,13: VARIABLE
 
65 VARIABLE 
 330,13: VARIABLE
 
313 ; 
 330,13: ;
 
198 struct 
 331,3: struct
 
89 { struct_declaration_list } 
 332,3: {
 333,5: int
 333,9: _READ
 333,14: VARIABLE
 333,15: :
 333,17: 1
 333,18: ;
 334,5: int
 334,9: _WRITE
 334,15: VARIABLE
 334,16: :
 334,18: 1
 334,19: ;
 335,5: int
 335,9: _UNBUF
 335,15: VARIABLE
 335,16: :
 335,18: 1
 335,19: ;
 336,5: int
 336,9: _EOF
 336,13: VARIABLE
 336,14: :
 336,16: 1
 336,17: ;
 337,5: int
 337,9: _ERR
 337,13: VARIABLE
 337,14: :
 337,16: 1
 337,17: ;
 338,3: }
 
126 int 
 333,5: int
 
200 NAME VARIABLE 
 333,9: _READ
 333,14: VARIABLE
 
65 VARIABLE 
 333,14: VARIABLE
 
316 : constant_expression 
 333,15: :
 333,17: 1
 
399 CONSTANT 
 333,17: 1
 
313 ; 
 333,18: ;
 
198 int 
 334,5: int
 
200 NAME VARIABLE 
 334,9: _WRITE
 334,15: VARIABLE
 
65 VARIABLE 
 334,15: VARIABLE
 
316 : constant_expression 
 334,16: :
 334,18: 1
 
399 CONSTANT 
 334,18: 1
 
313 ; 
 334,19: ;
 
198 int 
 335,5: int
 
200 NAME VARIABLE 
 335,9: _UNBUF
 335,15: VARIABLE
 
65 VARIABLE 
 335,15: VARIABLE
 
316 : constant_expression 
 335,16: :
 335,18: 1
 
399 CONSTANT 
 335,18: 1
 
313 ; 
 335,19: ;
 
198 int 
 336,5: int
 
200 NAME VARIABLE 
 336,9: _EOF
 336,13: VARIABLE
 
65 VARIABLE 
 336,13: VARIABLE
 
316 : constant_expression 
 336,14: :
 336,16: 1
 
399 CONSTANT 
 336,16: 1
 
313 ; 
 336,17: ;
 
198 int 
 337,5: int
 
200 NAME VARIABLE 
 337,9: _ERR
 337,13: VARIABLE
 
65 VARIABLE 
 337,13: VARIABLE
 
316 : constant_expression 
 337,14: :
 337,16: 1
 
399 CONSTANT 
 337,16: 1
 
313 ; 
 337,17: ;
 
198 } 
 338,3: }
 
200 NAME VARIABLE 
 338,5: flag
 338,9: VARIABLE
 
65 VARIABLE 
 338,9: VARIABLE
 
313 ; 
 338,9: ;
 
198 int 
 339,3: int
 
200 NAME VARIABLE 
 339,7: file_descriptor
 339,22: VARIABLE
 
65 VARIABLE 
 339,22: VARIABLE
 
313 ; 
 339,22: ;
 
198 } 
 340,1: }
 
60 ; 
 340,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 342,1: typedef
 342,9: struct
 342,16: _io_buffer_file
 342,31: VARIABLE
 
54 struct 
 342,9: struct
 
22 NAME VARIABLE 
 342,16: _io_buffer_file
 342,31: VARIABLE
 
65 VARIABLE 
 342,31: VARIABLE
 
6 NAME VARIABLE 
 342,32: FILE
 342,36: VARIABLE
 
65 VARIABLE 
 342,36: VARIABLE
 
70 ; 
 342,36: ;
 
23 extern 
 344,1: extern
 
8 NAME TYPE 
 344,8: FILE
 344,12: TYPE
 
26 TYPE 
 344,12: TYPE
 
5 NAME VARIABLE 
 344,13: _io_buffer
 344,23: VARIABLE
 
65 VARIABLE 
 344,23: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 344,23: [
 344,24: 20
 344,26: ]
 
188 CONSTANT 
 344,24: 20
 
305 ] 
 344,26: ]
 
60 ; 
 344,27: ;
 
23 int 
 346,1: int
 
5 NAME VARIABLE 
 346,5: _fill_buffer
 346,17: VARIABLE
 
65 VARIABLE 
 346,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 346,17: (
 346,18: FILE
 346,22: TYPE
 346,23: *
 346,24: )
 
186 NAME TYPE 
 346,18: FILE
 346,22: TYPE
 
65 TYPE 
 346,22: TYPE
 
298 * option_type_qualifier_list option_pointer 
 346,23: *
 
187 ) 
 346,24: )
 
60 ; 
 346,25: ;
 
23 int 
 347,1: int
 
5 NAME VARIABLE 
 347,5: _flush_buffer
 347,18: VARIABLE
 
65 VARIABLE 
 347,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 347,18: (
 347,19: int
 347,23: c
 347,24: VARIABLE
 347,24: ,
 347,26: FILE
 347,30: TYPE
 347,31: *
 347,32: file_p
 347,38: VARIABLE
 347,38: )
 
186 int 
 347,19: int
 
298 NAME VARIABLE 
 347,23: c
 347,24: VARIABLE
 
65 VARIABLE 
 347,24: VARIABLE
 
300 , parameter_declaration 
 347,24: ,
 347,26: FILE
 347,30: TYPE
 347,31: *
 347,32: file_p
 347,38: VARIABLE
 
391 NAME TYPE 
 347,26: FILE
 347,30: TYPE
 
26 TYPE 
 347,30: TYPE
 
298 * option_type_qualifier_list option_pointer 
 347,31: *
 
386 NAME VARIABLE 
 347,32: file_p
 347,38: VARIABLE
 
65 VARIABLE 
 347,38: VARIABLE
 
187 ) 
 347,38: )
 
60 ; 
 347,39: ;
 
23 int 
 348,1: int
 
5 NAME VARIABLE 
 348,5: file_flush
 348,15: VARIABLE
 
65 VARIABLE 
 348,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 348,15: (
 348,16: FILE
 348,20: TYPE
 348,21: *
 348,22: file_p
 348,28: VARIABLE
 348,28: )
 
186 NAME TYPE 
 348,16: FILE
 348,20: TYPE
 
65 TYPE 
 348,20: TYPE
 
298 * option_type_qualifier_list option_pointer 
 348,21: *
 
386 NAME VARIABLE 
 348,22: file_p
 348,28: VARIABLE
 
65 VARIABLE 
 348,28: VARIABLE
 
187 ) 
 348,28: )
 
60 ; 
 348,29: ;
 
23 NAME TYPE 
 349,1: FILE
 349,5: TYPE
 
26 TYPE 
 349,5: TYPE
 
5 * option_type_qualifier_list option_pointer 
 349,6: *
 
64 NAME VARIABLE 
 349,7: file_open
 349,16: VARIABLE
 
65 VARIABLE 
 349,16: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 349,16: (
 349,17: char
 349,22: *
 349,23: name
 349,27: VARIABLE
 349,27: ,
 349,29: char
 349,34: *
 349,35: mode
 349,39: VARIABLE
 349,39: )
 
186 char 
 349,17: char
 
298 * option_type_qualifier_list option_pointer 
 349,22: *
 
386 NAME VARIABLE 
 349,23: name
 349,27: VARIABLE
 
65 VARIABLE 
 349,27: VARIABLE
 
300 , parameter_declaration 
 349,27: ,
 349,29: char
 349,34: *
 349,35: mode
 349,39: VARIABLE
 
391 char 
 349,29: char
 
298 * option_type_qualifier_list option_pointer 
 349,34: *
 
386 NAME VARIABLE 
 349,35: mode
 349,39: VARIABLE
 
65 VARIABLE 
 349,39: VARIABLE
 
187 ) 
 349,39: )
 
60 ; 
 349,40: ;
 
23 int 
 350,1: int
 
5 NAME VARIABLE 
 350,5: file_close
 350,15: VARIABLE
 
65 VARIABLE 
 350,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 350,15: (
 350,16: FILE
 350,20: TYPE
 350,21: *
 350,22: file_p
 350,28: VARIABLE
 350,28: )
 
186 NAME TYPE 
 350,16: FILE
 350,20: TYPE
 
65 TYPE 
 350,20: TYPE
 
298 * option_type_qualifier_list option_pointer 
 350,21: *
 
386 NAME VARIABLE 
 350,22: file_p
 350,28: VARIABLE
 
65 VARIABLE 
 350,28: VARIABLE
 
187 ) 
 350,28: )
 
60 ; 
 350,29: ;
 
23 int 
 351,1: int
 
5 NAME VARIABLE 
 351,5: file_seek
 351,14: VARIABLE
 
65 VARIABLE 
 351,14: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 351,14: (
 351,15: FILE
 351,19: TYPE
 351,20: *
 351,21: file_p
 351,27: VARIABLE
 351,27: ,
 351,29: long
 351,34: offset
 351,40: VARIABLE
 351,40: ,
 351,42: int
 351,46: whence
 351,52: VARIABLE
 351,52: )
 
186 NAME TYPE 
 351,15: FILE
 351,19: TYPE
 
65 TYPE 
 351,19: TYPE
 
298 * option_type_qualifier_list option_pointer 
 351,20: *
 
386 NAME VARIABLE 
 351,21: file_p
 351,27: VARIABLE
 
65 VARIABLE 
 351,27: VARIABLE
 
300 , parameter_declaration 
 351,27: ,
 351,29: long
 351,34: offset
 351,40: VARIABLE
 
391 long 
 351,29: long
 
298 NAME VARIABLE 
 351,34: offset
 351,40: VARIABLE
 
65 VARIABLE 
 351,40: VARIABLE
 
300 , parameter_declaration 
 351,40: ,
 351,42: int
 351,46: whence
 351,52: VARIABLE
 
391 int 
 351,42: int
 
298 NAME VARIABLE 
 351,46: whence
 351,52: VARIABLE
 
65 VARIABLE 
 351,52: VARIABLE
 
187 ) 
 351,52: )
 
60 ; 
 351,53: ;
 
23 NAME TYPE 
 356,1: FILE
 356,5: TYPE
 
26 TYPE 
 356,5: TYPE
 
5 NAME VARIABLE 
 356,6: _io_buffer
 356,16: VARIABLE
 
65 VARIABLE 
 356,16: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 356,16: [
 356,17: 20
 356,19: ]
 
188 CONSTANT 
 356,17: 20
 
305 ] 
 356,19: ]
 
59 = c_initializer 
 356,21: =
 356,23: {
 357,5: {
 357,6: 0
 357,7: ,
 357,9: (
 357,10: char
 357,15: *
 357,16: )
 357,17: 0
 357,18: ,
 357,20: (
 357,21: char
 357,26: *
 357,27: )
 357,28: 0
 357,29: ,
 357,31: {
 357,32: 1
 357,33: ,
 357,35: 0
 357,36: ,
 357,38: 0
 357,39: ,
 357,41: 0
 357,42: ,
 357,44: 0
 357,45: }
 357,46: ,
 357,48: 0
 357,49: }
 357,50: ,
 358,5: {
 358,6: 0
 358,7: ,
 358,9: (
 358,10: char
 358,15: *
 358,16: )
 358,17: 0
 358,18: ,
 358,20: (
 358,21: char
 358,26: *
 358,27: )
 358,28: 0
 358,29: ,
 358,31: {
 358,32: 0
 358,33: ,
 358,35: 1
 358,36: ,
 358,38: 0
 358,39: ,
 358,41: 0
 358,42: ,
 358,44: 0
 358,45: }
 358,46: ,
 358,48: 1
 358,49: }
 358,50: ,
 359,5: {
 359,6: 0
 359,7: ,
 359,9: (
 359,10: char
 359,15: *
 359,16: )
 359,17: 0
 359,18: ,
 359,20: (
 359,21: char
 359,26: *
 359,27: )
 359,28: 0
 359,29: ,
 359,31: {
 359,32: 0
 359,33: ,
 359,35: 1
 359,36: ,
 359,38: 1
 359,39: ,
 359,41: 0
 359,42: ,
 359,44: 0
 359,45: }
 359,46: ,
 359,48: 2
 359,49: }
 360,1: }
 
108 { initializer_list option_comma } 
 356,23: {
 357,5: {
 357,6: 0
 357,7: ,
 357,9: (
 357,10: char
 357,15: *
 357,16: )
 357,17: 0
 357,18: ,
 357,20: (
 357,21: char
 357,26: *
 357,27: )
 357,28: 0
 357,29: ,
 357,31: {
 357,32: 1
 357,33: ,
 357,35: 0
 357,36: ,
 357,38: 0
 357,39: ,
 357,41: 0
 357,42: ,
 357,44: 0
 357,45: }
 357,46: ,
 357,48: 0
 357,49: }
 357,50: ,
 358,5: {
 358,6: 0
 358,7: ,
 358,9: (
 358,10: char
 358,15: *
 358,16: )
 358,17: 0
 358,18: ,
 358,20: (
 358,21: char
 358,26: *
 358,27: )
 358,28: 0
 358,29: ,
 358,31: {
 358,32: 0
 358,33: ,
 358,35: 1
 358,36: ,
 358,38: 0
 358,39: ,
 358,41: 0
 358,42: ,
 358,44: 0
 358,45: }
 358,46: ,
 358,48: 1
 358,49: }
 358,50: ,
 359,5: {
 359,6: 0
 359,7: ,
 359,9: (
 359,10: char
 359,15: *
 359,16: )
 359,17: 0
 359,18: ,
 359,20: (
 359,21: char
 359,26: *
 359,27: )
 359,28: 0
 359,29: ,
 359,31: {
 359,32: 0
 359,33: ,
 359,35: 1
 359,36: ,
 359,38: 1
 359,39: ,
 359,41: 0
 359,42: ,
 359,44: 0
 359,45: }
 359,46: ,
 359,48: 2
 359,49: }
 360,1: }
 
292 { initializer_list option_comma } 
 357,5: {
 357,6: 0
 357,7: ,
 357,9: (
 357,10: char
 357,15: *
 357,16: )
 357,17: 0
 357,18: ,
 357,20: (
 357,21: char
 357,26: *
 357,27: )
 357,28: 0
 357,29: ,
 357,31: {
 357,32: 1
 357,33: ,
 357,35: 0
 357,36: ,
 357,38: 0
 357,39: ,
 357,41: 0
 357,42: ,
 357,44: 0
 357,45: }
 357,46: ,
 357,48: 0
 357,49: }
 
292 CONSTANT 
 357,6: 0
 
291 , option_designation c_initializer 
 357,7: ,
 357,9: (
 357,10: char
 357,15: *
 357,16: )
 357,17: 0
 
442 ( type_name ) cast_expression 
 357,9: (
 357,10: char
 357,15: *
 357,16: )
 357,17: 0
 
165 char 
 357,10: char
 
137 * option_type_qualifier_list option_pointer 
 357,15: *
 
269 ) cast_expression 
 357,16: )
 357,17: 0
 
369 CONSTANT 
 357,17: 0
 
291 , option_designation c_initializer 
 357,18: ,
 357,20: (
 357,21: char
 357,26: *
 357,27: )
 357,28: 0
 
442 ( type_name ) cast_expression 
 357,20: (
 357,21: char
 357,26: *
 357,27: )
 357,28: 0
 
165 char 
 357,21: char
 
137 * option_type_qualifier_list option_pointer 
 357,26: *
 
269 ) cast_expression 
 357,27: )
 357,28: 0
 
369 CONSTANT 
 357,28: 0
 
291 , option_designation c_initializer 
 357,29: ,
 357,31: {
 357,32: 1
 357,33: ,
 357,35: 0
 357,36: ,
 357,38: 0
 357,39: ,
 357,41: 0
 357,42: ,
 357,44: 0
 357,45: }
 
442 { initializer_list option_comma } 
 357,31: {
 357,32: 1
 357,33: ,
 357,35: 0
 357,36: ,
 357,38: 0
 357,39: ,
 357,41: 0
 357,42: ,
 357,44: 0
 357,45: }
 
292 CONSTANT 
 357,32: 1
 
291 , option_designation c_initializer 
 357,33: ,
 357,35: 0
 
442 CONSTANT 
 357,35: 0
 
291 , option_designation c_initializer 
 357,36: ,
 357,38: 0
 
442 CONSTANT 
 357,38: 0
 
291 , option_designation c_initializer 
 357,39: ,
 357,41: 0
 
442 CONSTANT 
 357,41: 0
 
291 , option_designation c_initializer 
 357,42: ,
 357,44: 0
 
442 CONSTANT 
 357,44: 0
 
377 } 
 357,45: }
 
291 , option_designation c_initializer 
 357,46: ,
 357,48: 0
 
442 CONSTANT 
 357,48: 0
 
377 } 
 357,49: }
 
291 , option_designation c_initializer 
 357,50: ,
 358,5: {
 358,6: 0
 358,7: ,
 358,9: (
 358,10: char
 358,15: *
 358,16: )
 358,17: 0
 358,18: ,
 358,20: (
 358,21: char
 358,26: *
 358,27: )
 358,28: 0
 358,29: ,
 358,31: {
 358,32: 0
 358,33: ,
 358,35: 1
 358,36: ,
 358,38: 0
 358,39: ,
 358,41: 0
 358,42: ,
 358,44: 0
 358,45: }
 358,46: ,
 358,48: 1
 358,49: }
 
442 { initializer_list option_comma } 
 358,5: {
 358,6: 0
 358,7: ,
 358,9: (
 358,10: char
 358,15: *
 358,16: )
 358,17: 0
 358,18: ,
 358,20: (
 358,21: char
 358,26: *
 358,27: )
 358,28: 0
 358,29: ,
 358,31: {
 358,32: 0
 358,33: ,
 358,35: 1
 358,36: ,
 358,38: 0
 358,39: ,
 358,41: 0
 358,42: ,
 358,44: 0
 358,45: }
 358,46: ,
 358,48: 1
 358,49: }
 
292 CONSTANT 
 358,6: 0
 
291 , option_designation c_initializer 
 358,7: ,
 358,9: (
 358,10: char
 358,15: *
 358,16: )
 358,17: 0
 
442 ( type_name ) cast_expression 
 358,9: (
 358,10: char
 358,15: *
 358,16: )
 358,17: 0
 
165 char 
 358,10: char
 
137 * option_type_qualifier_list option_pointer 
 358,15: *
 
269 ) cast_expression 
 358,16: )
 358,17: 0
 
369 CONSTANT 
 358,17: 0
 
291 , option_designation c_initializer 
 358,18: ,
 358,20: (
 358,21: char
 358,26: *
 358,27: )
 358,28: 0
 
442 ( type_name ) cast_expression 
 358,20: (
 358,21: char
 358,26: *
 358,27: )
 358,28: 0
 
165 char 
 358,21: char
 
137 * option_type_qualifier_list option_pointer 
 358,26: *
 
269 ) cast_expression 
 358,27: )
 358,28: 0
 
369 CONSTANT 
 358,28: 0
 
291 , option_designation c_initializer 
 358,29: ,
 358,31: {
 358,32: 0
 358,33: ,
 358,35: 1
 358,36: ,
 358,38: 0
 358,39: ,
 358,41: 0
 358,42: ,
 358,44: 0
 358,45: }
 
442 { initializer_list option_comma } 
 358,31: {
 358,32: 0
 358,33: ,
 358,35: 1
 358,36: ,
 358,38: 0
 358,39: ,
 358,41: 0
 358,42: ,
 358,44: 0
 358,45: }
 
292 CONSTANT 
 358,32: 0
 
291 , option_designation c_initializer 
 358,33: ,
 358,35: 1
 
442 CONSTANT 
 358,35: 1
 
291 , option_designation c_initializer 
 358,36: ,
 358,38: 0
 
442 CONSTANT 
 358,38: 0
 
291 , option_designation c_initializer 
 358,39: ,
 358,41: 0
 
442 CONSTANT 
 358,41: 0
 
291 , option_designation c_initializer 
 358,42: ,
 358,44: 0
 
442 CONSTANT 
 358,44: 0
 
377 } 
 358,45: }
 
291 , option_designation c_initializer 
 358,46: ,
 358,48: 1
 
442 CONSTANT 
 358,48: 1
 
377 } 
 358,49: }
 
291 , option_designation c_initializer 
 358,50: ,
 359,5: {
 359,6: 0
 359,7: ,
 359,9: (
 359,10: char
 359,15: *
 359,16: )
 359,17: 0
 359,18: ,
 359,20: (
 359,21: char
 359,26: *
 359,27: )
 359,28: 0
 359,29: ,
 359,31: {
 359,32: 0
 359,33: ,
 359,35: 1
 359,36: ,
 359,38: 1
 359,39: ,
 359,41: 0
 359,42: ,
 359,44: 0
 359,45: }
 359,46: ,
 359,48: 2
 359,49: }
 
442 { initializer_list option_comma } 
 359,5: {
 359,6: 0
 359,7: ,
 359,9: (
 359,10: char
 359,15: *
 359,16: )
 359,17: 0
 359,18: ,
 359,20: (
 359,21: char
 359,26: *
 359,27: )
 359,28: 0
 359,29: ,
 359,31: {
 359,32: 0
 359,33: ,
 359,35: 1
 359,36: ,
 359,38: 1
 359,39: ,
 359,41: 0
 359,42: ,
 359,44: 0
 359,45: }
 359,46: ,
 359,48: 2
 359,49: }
 
292 CONSTANT 
 359,6: 0
 
291 , option_designation c_initializer 
 359,7: ,
 359,9: (
 359,10: char
 359,15: *
 359,16: )
 359,17: 0
 
442 ( type_name ) cast_expression 
 359,9: (
 359,10: char
 359,15: *
 359,16: )
 359,17: 0
 
165 char 
 359,10: char
 
137 * option_type_qualifier_list option_pointer 
 359,15: *
 
269 ) cast_expression 
 359,16: )
 359,17: 0
 
369 CONSTANT 
 359,17: 0
 
291 , option_designation c_initializer 
 359,18: ,
 359,20: (
 359,21: char
 359,26: *
 359,27: )
 359,28: 0
 
442 ( type_name ) cast_expression 
 359,20: (
 359,21: char
 359,26: *
 359,27: )
 359,28: 0
 
165 char 
 359,21: char
 
137 * option_type_qualifier_list option_pointer 
 359,26: *
 
269 ) cast_expression 
 359,27: )
 359,28: 0
 
369 CONSTANT 
 359,28: 0
 
291 , option_designation c_initializer 
 359,29: ,
 359,31: {
 359,32: 0
 359,33: ,
 359,35: 1
 359,36: ,
 359,38: 1
 359,39: ,
 359,41: 0
 359,42: ,
 359,44: 0
 359,45: }
 
442 { initializer_list option_comma } 
 359,31: {
 359,32: 0
 359,33: ,
 359,35: 1
 359,36: ,
 359,38: 1
 359,39: ,
 359,41: 0
 359,42: ,
 359,44: 0
 359,45: }
 
292 CONSTANT 
 359,32: 0
 
291 , option_designation c_initializer 
 359,33: ,
 359,35: 1
 
442 CONSTANT 
 359,35: 1
 
291 , option_designation c_initializer 
 359,36: ,
 359,38: 1
 
442 CONSTANT 
 359,38: 1
 
291 , option_designation c_initializer 
 359,39: ,
 359,41: 0
 
442 CONSTANT 
 359,41: 0
 
291 , option_designation c_initializer 
 359,42: ,
 359,44: 0
 
442 CONSTANT 
 359,44: 0
 
377 } 
 359,45: }
 
291 , option_designation c_initializer 
 359,46: ,
 359,48: 2
 
442 CONSTANT 
 359,48: 2
 
377 } 
 359,49: }
 
377 } 
 360,1: }
 
60 ; 
 360,2: ;
 
23 void 
 362,1: void
 
5 NAME VARIABLE 
 362,6: free
 362,10: VARIABLE
 
65 VARIABLE 
 362,10: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 362,10: (
 362,11: void
 362,16: *
 362,17: ptr
 362,20: VARIABLE
 362,20: )
 
186 void 
 362,11: void
 
298 * option_type_qualifier_list option_pointer 
 362,16: *
 
386 NAME VARIABLE 
 362,17: ptr
 362,20: VARIABLE
 
65 VARIABLE 
 362,20: VARIABLE
 
187 ) 
 362,20: )
 
60 ; 
 362,21: ;
 
23 void 
 363,1: void
 
5 * option_type_qualifier_list option_pointer 
 363,6: *
 
64 NAME VARIABLE 
 363,7: malloc
 363,13: VARIABLE
 
65 VARIABLE 
 363,13: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 363,13: (
 363,14: long
 363,19: unsigned
 363,28: int
 363,32: size
 363,36: VARIABLE
 363,36: )
 
186 long 
 363,14: long
 
106 unsigned 
 363,19: unsigned
 
106 int 
 363,28: int
 
298 NAME VARIABLE 
 363,32: size
 363,36: VARIABLE
 
65 VARIABLE 
 363,36: VARIABLE
 
187 ) 
 363,36: )
 
60 ; 
 363,37: ;
 
23 long 
 364,1: long
 
17 int 
 364,6: int
 
5 NAME VARIABLE 
 364,10: lseek
 364,15: VARIABLE
 
65 VARIABLE 
 364,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 364,15: (
 364,16: int
 364,20: file_descriptor
 364,35: VARIABLE
 364,35: ,
 364,37: long
 364,42: int
 364,46: offset
 364,52: VARIABLE
 364,52: ,
 364,54: int
 364,58: whence
 364,64: VARIABLE
 364,64: )
 
186 int 
 364,16: int
 
298 NAME VARIABLE 
 364,20: file_descriptor
 364,35: VARIABLE
 
65 VARIABLE 
 364,35: VARIABLE
 
300 , parameter_declaration 
 364,35: ,
 364,37: long
 364,42: int
 364,46: offset
 364,52: VARIABLE
 
391 long 
 364,37: long
 
106 int 
 364,42: int
 
298 NAME VARIABLE 
 364,46: offset
 364,52: VARIABLE
 
65 VARIABLE 
 364,52: VARIABLE
 
300 , parameter_declaration 
 364,52: ,
 364,54: int
 364,58: whence
 364,64: VARIABLE
 
391 int 
 364,54: int
 
298 NAME VARIABLE 
 364,58: whence
 364,64: VARIABLE
 
65 VARIABLE 
 364,64: VARIABLE
 
187 ) 
 364,64: )
 
60 ; 
 364,65: ;
 
23 long 
 365,1: long
 
17 int 
 365,6: int
 
5 NAME VARIABLE 
 365,10: read
 365,14: VARIABLE
 
65 VARIABLE 
 365,14: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 365,14: (
 365,15: int
 365,19: file_descriptor
 365,34: VARIABLE
 365,34: ,
 365,36: void
 365,41: *
 365,42: buffer
 365,48: VARIABLE
 365,48: ,
 365,50: long
 365,55: unsigned
 365,64: int
 365,68: nr_of_bytes
 365,79: VARIABLE
 365,79: )
 
186 int 
 365,15: int
 
298 NAME VARIABLE 
 365,19: file_descriptor
 365,34: VARIABLE
 
65 VARIABLE 
 365,34: VARIABLE
 
300 , parameter_declaration 
 365,34: ,
 365,36: void
 365,41: *
 365,42: buffer
 365,48: VARIABLE
 
391 void 
 365,36: void
 
298 * option_type_qualifier_list option_pointer 
 365,41: *
 
386 NAME VARIABLE 
 365,42: buffer
 365,48: VARIABLE
 
65 VARIABLE 
 365,48: VARIABLE
 
300 , parameter_declaration 
 365,48: ,
 365,50: long
 365,55: unsigned
 365,64: int
 365,68: nr_of_bytes
 365,79: VARIABLE
 
391 long 
 365,50: long
 
106 unsigned 
 365,55: unsigned
 
106 int 
 365,64: int
 
298 NAME VARIABLE 
 365,68: nr_of_bytes
 365,79: VARIABLE
 
65 VARIABLE 
 365,79: VARIABLE
 
187 ) 
 365,79: )
 
60 ; 
 365,80: ;
 
23 long 
 366,1: long
 
17 int 
 366,6: int
 
5 NAME VARIABLE 
 366,10: write
 366,15: VARIABLE
 
65 VARIABLE 
 366,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 366,15: (
 366,16: int
 366,20: file_descriptor
 366,35: VARIABLE
 366,35: ,
 366,37: void
 366,42: *
 366,43: buffer
 366,49: VARIABLE
 366,49: ,
 366,51: long
 366,56: unsigned
 366,65: int
 366,69: nr_of_bytes
 366,80: VARIABLE
 366,80: )
 
186 int 
 366,16: int
 
298 NAME VARIABLE 
 366,20: file_descriptor
 366,35: VARIABLE
 
65 VARIABLE 
 366,35: VARIABLE
 
300 , parameter_declaration 
 366,35: ,
 366,37: void
 366,42: *
 366,43: buffer
 366,49: VARIABLE
 
391 void 
 366,37: void
 
298 * option_type_qualifier_list option_pointer 
 366,42: *
 
386 NAME VARIABLE 
 366,43: buffer
 366,49: VARIABLE
 
65 VARIABLE 
 366,49: VARIABLE
 
300 , parameter_declaration 
 366,49: ,
 366,51: long
 366,56: unsigned
 366,65: int
 366,69: nr_of_bytes
 366,80: VARIABLE
 
391 long 
 366,51: long
 
106 unsigned 
 366,56: unsigned
 
106 int 
 366,65: int
 
298 NAME VARIABLE 
 366,69: nr_of_bytes
 366,80: VARIABLE
 
65 VARIABLE 
 366,80: VARIABLE
 
187 ) 
 366,80: )
 
60 ; 
 366,81: ;
 
23 int 
 367,1: int
 
5 NAME VARIABLE 
 367,5: close
 367,10: VARIABLE
 
65 VARIABLE 
 367,10: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 367,10: (
 367,11: int
 367,15: file_descriptor
 367,30: VARIABLE
 367,30: )
 
186 int 
 367,11: int
 
298 NAME VARIABLE 
 367,15: file_descriptor
 367,30: VARIABLE
 
65 VARIABLE 
 367,30: VARIABLE
 
187 ) 
 367,30: )
 
60 ; 
 367,31: ;
 
23 int 
 369,1: int
 
5 NAME VARIABLE 
 369,5: _fill_buffer
 369,17: VARIABLE
 
65 VARIABLE 
 369,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 369,17: (
 369,18: FILE
 369,22: TYPE
 369,23: *
 369,24: file_p
 369,30: VARIABLE
 369,30: )
 
186 NAME TYPE 
 369,18: FILE
 369,22: TYPE
 
65 TYPE 
 369,22: TYPE
 
298 * option_type_qualifier_list option_pointer 
 369,23: *
 
386 NAME VARIABLE 
 369,24: file_p
 369,30: VARIABLE
 
65 VARIABLE 
 369,30: VARIABLE
 
187 ) 
 369,30: )
 
94 { option_block_item_list } 
 370,1: {
 371,3: int
 371,7: buffer_size
 371,18: VARIABLE
 371,18: ;
 373,3: if
 373,6: (
 373,7: file_p
 373,13: VARIABLE
 373,13: ->
 373,15: flag
 373,19: VARIABLE
 373,19: .
 373,20: _READ
 373,25: VARIABLE
 373,26: ==
 373,29: 0
 373,31: ||
 373,34: file_p
 373,40: VARIABLE
 373,40: ->
 373,42: flag
 373,46: VARIABLE
 373,46: .
 373,47: _EOF
 373,51: VARIABLE
 373,52: ==
 373,55: 1
 373,57: ||
 373,60: file_p
 373,66: VARIABLE
 373,66: ->
 373,68: flag
 373,72: VARIABLE
 373,72: .
 373,73: _ERR
 373,77: VARIABLE
 373,78: ==
 373,81: 1
 373,82: )
 374,3: {
 375,5: return
 375,12: (
 375,13: -
 375,14: 1
 375,15: )
 375,16: ;
 376,3: }
 378,3: buffer_size
 378,14: VARIABLE
 378,15: =
 378,17: (
 378,18: file_p
 378,24: VARIABLE
 378,24: ->
 378,26: flag
 378,30: VARIABLE
 378,30: .
 378,31: _UNBUF
 378,37: VARIABLE
 378,38: ==
 378,41: 1
 378,42: )
 378,44: ?
 378,46: 1
 378,48: :
 378,50: 1024
 378,54: ;
 380,3: if
 380,6: (
 380,7: file_p
 380,13: VARIABLE
 380,13: ->
 380,15: base
 380,19: VARIABLE
 380,20: ==
 380,23: 0
 380,24: )
 381,3: {
 382,5: if
 382,8: (
 382,9: (
 382,10: file_p
 382,16: VARIABLE
 382,16: ->
 382,18: base
 382,22: VARIABLE
 382,23: =
 382,25: (
 382,26: char
 382,31: *
 382,32: )
 382,33: malloc
 382,39: VARIABLE
 382,39: (
 382,40: buffer_size
 382,51: VARIABLE
 382,51: )
 382,52: )
 382,54: ==
 382,57: 0
 382,58: )
 383,5: {
 384,7: return
 384,14: (
 384,15: -
 384,16: 1
 384,17: )
 384,18: ;
 385,5: }
 386,3: }
 388,3: file_p
 388,9: VARIABLE
 388,9: ->
 388,11: next_char_pos_p
 388,26: VARIABLE
 388,27: =
 388,29: file_p
 388,35: VARIABLE
 388,35: ->
 388,37: base
 388,41: VARIABLE
 388,41: ;
 389,3: file_p
 389,9: VARIABLE
 389,9: ->
 389,11: counter
 389,18: VARIABLE
 389,19: =
 389,21: read
 389,25: VARIABLE
 389,25: (
 389,26: file_p
 389,32: VARIABLE
 389,32: ->
 389,34: file_descriptor
 389,49: VARIABLE
 389,49: ,
 389,51: file_p
 389,57: VARIABLE
 389,57: ->
 389,59: next_char_pos_p
 389,74: VARIABLE
 389,74: ,
 389,76: buffer_size
 389,87: VARIABLE
 389,87: )
 389,88: ;
 391,3: if
 391,6: (
 391,7: --
 391,9: file_p
 391,15: VARIABLE
 391,15: ->
 391,17: counter
 391,24: VARIABLE
 391,25: <
 391,27: 0
 391,28: )
 392,3: {
 393,5: if
 393,8: (
 393,9: file_p
 393,15: VARIABLE
 393,15: ->
 393,17: counter
 393,24: VARIABLE
 393,25: ==
 393,28: -
 393,29: 1
 393,30: )
 394,5: {
 395,7: file_p
 395,13: VARIABLE
 395,13: ->
 395,15: flag
 395,19: VARIABLE
 395,19: .
 395,20: _EOF
 395,24: VARIABLE
 395,25: =
 395,27: 1
 395,28: ;
 396,5: }
 397,5: else
 398,5: {
 399,7: file_p
 399,13: VARIABLE
 399,13: ->
 399,15: flag
 399,19: VARIABLE
 399,19: .
 399,20: _ERR
 399,24: VARIABLE
 399,25: =
 399,27: 1
 399,28: ;
 400,5: }
 402,5: file_p
 402,11: VARIABLE
 402,11: ->
 402,13: counter
 402,20: VARIABLE
 402,21: =
 402,23: 0
 402,24: ;
 403,5: return
 403,12: (
 403,13: -
 403,14: 1
 403,15: )
 403,16: ;
 404,3: }
 406,3: return
 406,10: (
 406,11: unsigned
 406,20: char
 406,24: )
 406,25: *
 406,26: file_p
 406,32: VARIABLE
 406,32: ->
 406,34: next_char_pos_p
 406,49: VARIABLE
 406,49: ++
 406,51: ;
 407,1: }
 
201 int 
 371,3: int
 
93 NAME VARIABLE 
 371,7: buffer_size
 371,18: VARIABLE
 
65 VARIABLE 
 371,18: VARIABLE
 
60 ; 
 371,18: ;
 
320 if ( expression ) scoped_statement 
 373,3: if
 373,6: (
 373,7: file_p
 373,13: VARIABLE
 373,13: ->
 373,15: flag
 373,19: VARIABLE
 373,19: .
 373,20: _READ
 373,25: VARIABLE
 373,26: ==
 373,29: 0
 373,31: ||
 373,34: file_p
 373,40: VARIABLE
 373,40: ->
 373,42: flag
 373,46: VARIABLE
 373,46: .
 373,47: _EOF
 373,51: VARIABLE
 373,52: ==
 373,55: 1
 373,57: ||
 373,60: file_p
 373,66: VARIABLE
 373,66: ->
 373,68: flag
 373,72: VARIABLE
 373,72: .
 373,73: _ERR
 373,77: VARIABLE
 373,78: ==
 373,81: 1
 373,82: )
 374,3: {
 375,5: return
 375,12: (
 375,13: -
 375,14: 1
 375,15: )
 375,16: ;
 376,3: }
 
404 ( expression ) scoped_statement 
 373,6: (
 373,7: file_p
 373,13: VARIABLE
 373,13: ->
 373,15: flag
 373,19: VARIABLE
 373,19: .
 373,20: _READ
 373,25: VARIABLE
 373,26: ==
 373,29: 0
 373,31: ||
 373,34: file_p
 373,40: VARIABLE
 373,40: ->
 373,42: flag
 373,46: VARIABLE
 373,46: .
 373,47: _EOF
 373,51: VARIABLE
 373,52: ==
 373,55: 1
 373,57: ||
 373,60: file_p
 373,66: VARIABLE
 373,66: ->
 373,68: flag
 373,72: VARIABLE
 373,72: .
 373,73: _ERR
 373,77: VARIABLE
 373,78: ==
 373,81: 1
 373,82: )
 374,3: {
 375,5: return
 375,12: (
 375,13: -
 375,14: 1
 375,15: )
 375,16: ;
 376,3: }
 
455 NAME VARIABLE 
 373,7: file_p
 373,13: VARIABLE
 
179 VARIABLE 
 373,13: VARIABLE
 
147 -> general_identifier 
 373,13: ->
 373,15: flag
 373,19: VARIABLE
 
238 NAME VARIABLE 
 373,15: flag
 373,19: VARIABLE
 
65 VARIABLE 
 373,19: VARIABLE
 
147 . general_identifier 
 373,19: .
 373,20: _READ
 373,25: VARIABLE
 
237 NAME VARIABLE 
 373,20: _READ
 373,25: VARIABLE
 
65 VARIABLE 
 373,25: VARIABLE
 
155 == 
 373,26: ==
 
257 CONSTANT 
 373,29: 0
 
160 || logical_and_expression 
 373,31: ||
 373,34: file_p
 373,40: VARIABLE
 373,40: ->
 373,42: flag
 373,46: VARIABLE
 373,46: .
 373,47: _EOF
 373,51: VARIABLE
 373,52: ==
 373,55: 1
 
264 NAME VARIABLE 
 373,34: file_p
 373,40: VARIABLE
 
179 VARIABLE 
 373,40: VARIABLE
 
147 -> general_identifier 
 373,40: ->
 373,42: flag
 373,46: VARIABLE
 
238 NAME VARIABLE 
 373,42: flag
 373,46: VARIABLE
 
65 VARIABLE 
 373,46: VARIABLE
 
147 . general_identifier 
 373,46: .
 373,47: _EOF
 373,51: VARIABLE
 
237 NAME VARIABLE 
 373,47: _EOF
 373,51: VARIABLE
 
65 VARIABLE 
 373,51: VARIABLE
 
155 == 
 373,52: ==
 
257 CONSTANT 
 373,55: 1
 
160 || logical_and_expression 
 373,57: ||
 373,60: file_p
 373,66: VARIABLE
 373,66: ->
 373,68: flag
 373,72: VARIABLE
 373,72: .
 373,73: _ERR
 373,77: VARIABLE
 373,78: ==
 373,81: 1
 
264 NAME VARIABLE 
 373,60: file_p
 373,66: VARIABLE
 
179 VARIABLE 
 373,66: VARIABLE
 
147 -> general_identifier 
 373,66: ->
 373,68: flag
 373,72: VARIABLE
 
238 NAME VARIABLE 
 373,68: flag
 373,72: VARIABLE
 
65 VARIABLE 
 373,72: VARIABLE
 
147 . general_identifier 
 373,72: .
 373,73: _ERR
 373,77: VARIABLE
 
237 NAME VARIABLE 
 373,73: _ERR
 373,77: VARIABLE
 
65 VARIABLE 
 373,77: VARIABLE
 
155 == 
 373,78: ==
 
257 CONSTANT 
 373,81: 1
 
483 ) scoped_statement 
 373,82: )
 374,3: {
 375,5: return
 375,12: (
 375,13: -
 375,14: 1
 375,15: )
 375,16: ;
 376,3: }
 
320 { option_block_item_list } 
 374,3: {
 375,5: return
 375,12: (
 375,13: -
 375,14: 1
 375,15: )
 375,16: ;
 376,3: }
 
201 return option_expression ; 
 375,5: return
 375,12: (
 375,13: -
 375,14: 1
 375,15: )
 375,16: ;
 
338 ( expression ) 
 375,12: (
 375,13: -
 375,14: 1
 375,15: )
 
165 - 
 375,13: -
 
149 CONSTANT 
 375,14: 1
 
267 ) 
 375,15: )
 
415 ; 
 375,16: ;
 
201 } 
 376,3: }
 
201 NAME VARIABLE 
 378,3: buffer_size
 378,14: VARIABLE
 
65 VARIABLE 
 378,14: VARIABLE
 
181 = 
 378,15: =
 
279 ( expression ) 
 378,17: (
 378,18: file_p
 378,24: VARIABLE
 378,24: ->
 378,26: flag
 378,30: VARIABLE
 378,30: .
 378,31: _UNBUF
 378,37: VARIABLE
 378,38: ==
 378,41: 1
 378,42: )
 
165 NAME VARIABLE 
 378,18: file_p
 378,24: VARIABLE
 
65 VARIABLE 
 378,24: VARIABLE
 
147 -> general_identifier 
 378,24: ->
 378,26: flag
 378,30: VARIABLE
 
238 NAME VARIABLE 
 378,26: flag
 378,30: VARIABLE
 
65 VARIABLE 
 378,30: VARIABLE
 
147 . general_identifier 
 378,30: .
 378,31: _UNBUF
 378,37: VARIABLE
 
237 NAME VARIABLE 
 378,31: _UNBUF
 378,37: VARIABLE
 
65 VARIABLE 
 378,37: VARIABLE
 
155 == 
 378,38: ==
 
257 CONSTANT 
 378,41: 1
 
267 ) 
 378,42: )
 
160 ? expression : conditional_expression 
 378,44: ?
 378,46: 1
 378,48: :
 378,50: 1024
 
265 CONSTANT 
 378,46: 1
 
366 : conditional_expression 
 378,48: :
 378,50: 1024
 
431 CONSTANT 
 378,50: 1024
 
331 ; 
 378,54: ;
 
320 if ( expression ) scoped_statement 
 380,3: if
 380,6: (
 380,7: file_p
 380,13: VARIABLE
 380,13: ->
 380,15: base
 380,19: VARIABLE
 380,20: ==
 380,23: 0
 380,24: )
 381,3: {
 382,5: if
 382,8: (
 382,9: (
 382,10: file_p
 382,16: VARIABLE
 382,16: ->
 382,18: base
 382,22: VARIABLE
 382,23: =
 382,25: (
 382,26: char
 382,31: *
 382,32: )
 382,33: malloc
 382,39: VARIABLE
 382,39: (
 382,40: buffer_size
 382,51: VARIABLE
 382,51: )
 382,52: )
 382,54: ==
 382,57: 0
 382,58: )
 383,5: {
 384,7: return
 384,14: (
 384,15: -
 384,16: 1
 384,17: )
 384,18: ;
 385,5: }
 386,3: }
 
404 ( expression ) scoped_statement 
 380,6: (
 380,7: file_p
 380,13: VARIABLE
 380,13: ->
 380,15: base
 380,19: VARIABLE
 380,20: ==
 380,23: 0
 380,24: )
 381,3: {
 382,5: if
 382,8: (
 382,9: (
 382,10: file_p
 382,16: VARIABLE
 382,16: ->
 382,18: base
 382,22: VARIABLE
 382,23: =
 382,25: (
 382,26: char
 382,31: *
 382,32: )
 382,33: malloc
 382,39: VARIABLE
 382,39: (
 382,40: buffer_size
 382,51: VARIABLE
 382,51: )
 382,52: )
 382,54: ==
 382,57: 0
 382,58: )
 383,5: {
 384,7: return
 384,14: (
 384,15: -
 384,16: 1
 384,17: )
 384,18: ;
 385,5: }
 386,3: }
 
455 NAME VARIABLE 
 380,7: file_p
 380,13: VARIABLE
 
179 VARIABLE 
 380,13: VARIABLE
 
147 -> general_identifier 
 380,13: ->
 380,15: base
 380,19: VARIABLE
 
238 NAME VARIABLE 
 380,15: base
 380,19: VARIABLE
 
65 VARIABLE 
 380,19: VARIABLE
 
155 == 
 380,20: ==
 
257 CONSTANT 
 380,23: 0
 
483 ) scoped_statement 
 380,24: )
 381,3: {
 382,5: if
 382,8: (
 382,9: (
 382,10: file_p
 382,16: VARIABLE
 382,16: ->
 382,18: base
 382,22: VARIABLE
 382,23: =
 382,25: (
 382,26: char
 382,31: *
 382,32: )
 382,33: malloc
 382,39: VARIABLE
 382,39: (
 382,40: buffer_size
 382,51: VARIABLE
 382,51: )
 382,52: )
 382,54: ==
 382,57: 0
 382,58: )
 383,5: {
 384,7: return
 384,14: (
 384,15: -
 384,16: 1
 384,17: )
 384,18: ;
 385,5: }
 386,3: }
 
320 { option_block_item_list } 
 381,3: {
 382,5: if
 382,8: (
 382,9: (
 382,10: file_p
 382,16: VARIABLE
 382,16: ->
 382,18: base
 382,22: VARIABLE
 382,23: =
 382,25: (
 382,26: char
 382,31: *
 382,32: )
 382,33: malloc
 382,39: VARIABLE
 382,39: (
 382,40: buffer_size
 382,51: VARIABLE
 382,51: )
 382,52: )
 382,54: ==
 382,57: 0
 382,58: )
 383,5: {
 384,7: return
 384,14: (
 384,15: -
 384,16: 1
 384,17: )
 384,18: ;
 385,5: }
 386,3: }
 
320 if ( expression ) scoped_statement 
 382,5: if
 382,8: (
 382,9: (
 382,10: file_p
 382,16: VARIABLE
 382,16: ->
 382,18: base
 382,22: VARIABLE
 382,23: =
 382,25: (
 382,26: char
 382,31: *
 382,32: )
 382,33: malloc
 382,39: VARIABLE
 382,39: (
 382,40: buffer_size
 382,51: VARIABLE
 382,51: )
 382,52: )
 382,54: ==
 382,57: 0
 382,58: )
 383,5: {
 384,7: return
 384,14: (
 384,15: -
 384,16: 1
 384,17: )
 384,18: ;
 385,5: }
 
404 ( expression ) scoped_statement 
 382,8: (
 382,9: (
 382,10: file_p
 382,16: VARIABLE
 382,16: ->
 382,18: base
 382,22: VARIABLE
 382,23: =
 382,25: (
 382,26: char
 382,31: *
 382,32: )
 382,33: malloc
 382,39: VARIABLE
 382,39: (
 382,40: buffer_size
 382,51: VARIABLE
 382,51: )
 382,52: )
 382,54: ==
 382,57: 0
 382,58: )
 383,5: {
 384,7: return
 384,14: (
 384,15: -
 384,16: 1
 384,17: )
 384,18: ;
 385,5: }
 
455 ( expression ) 
 382,9: (
 382,10: file_p
 382,16: VARIABLE
 382,16: ->
 382,18: base
 382,22: VARIABLE
 382,23: =
 382,25: (
 382,26: char
 382,31: *
 382,32: )
 382,33: malloc
 382,39: VARIABLE
 382,39: (
 382,40: buffer_size
 382,51: VARIABLE
 382,51: )
 382,52: )
 
165 NAME VARIABLE 
 382,10: file_p
 382,16: VARIABLE
 
65 VARIABLE 
 382,16: VARIABLE
 
147 -> general_identifier 
 382,16: ->
 382,18: base
 382,22: VARIABLE
 
238 NAME VARIABLE 
 382,18: base
 382,22: VARIABLE
 
65 VARIABLE 
 382,22: VARIABLE
 
181 = 
 382,23: =
 
279 ( type_name ) cast_expression 
 382,25: (
 382,26: char
 382,31: *
 382,32: )
 382,33: malloc
 382,39: VARIABLE
 382,39: (
 382,40: buffer_size
 382,51: VARIABLE
 382,51: )
 
165 char 
 382,26: char
 
137 * option_type_qualifier_list option_pointer 
 382,31: *
 
269 ) cast_expression 
 382,32: )
 382,33: malloc
 382,39: VARIABLE
 382,39: (
 382,40: buffer_size
 382,51: VARIABLE
 382,51: )
 
369 NAME VARIABLE 
 382,33: malloc
 382,39: VARIABLE
 
179 VARIABLE 
 382,39: VARIABLE
 
147 ( option_argument_expression_list ) 
 382,39: (
 382,40: buffer_size
 382,51: VARIABLE
 382,51: )
 
235 NAME VARIABLE 
 382,40: buffer_size
 382,51: VARIABLE
 
179 VARIABLE 
 382,51: VARIABLE
 
351 ) 
 382,51: )
 
267 ) 
 382,52: )
 
155 == 
 382,54: ==
 
257 CONSTANT 
 382,57: 0
 
483 ) scoped_statement 
 382,58: )
 383,5: {
 384,7: return
 384,14: (
 384,15: -
 384,16: 1
 384,17: )
 384,18: ;
 385,5: }
 
320 { option_block_item_list } 
 383,5: {
 384,7: return
 384,14: (
 384,15: -
 384,16: 1
 384,17: )
 384,18: ;
 385,5: }
 
201 return option_expression ; 
 384,7: return
 384,14: (
 384,15: -
 384,16: 1
 384,17: )
 384,18: ;
 
338 ( expression ) 
 384,14: (
 384,15: -
 384,16: 1
 384,17: )
 
165 - 
 384,15: -
 
149 CONSTANT 
 384,16: 1
 
267 ) 
 384,17: )
 
415 ; 
 384,18: ;
 
201 } 
 385,5: }
 
201 } 
 386,3: }
 
201 NAME VARIABLE 
 388,3: file_p
 388,9: VARIABLE
 
65 VARIABLE 
 388,9: VARIABLE
 
147 -> general_identifier 
 388,9: ->
 388,11: next_char_pos_p
 388,26: VARIABLE
 
238 NAME VARIABLE 
 388,11: next_char_pos_p
 388,26: VARIABLE
 
65 VARIABLE 
 388,26: VARIABLE
 
181 = 
 388,27: =
 
279 NAME VARIABLE 
 388,29: file_p
 388,35: VARIABLE
 
179 VARIABLE 
 388,35: VARIABLE
 
147 -> general_identifier 
 388,35: ->
 388,37: base
 388,41: VARIABLE
 
238 NAME VARIABLE 
 388,37: base
 388,41: VARIABLE
 
65 VARIABLE 
 388,41: VARIABLE
 
331 ; 
 388,41: ;
 
201 NAME VARIABLE 
 389,3: file_p
 389,9: VARIABLE
 
65 VARIABLE 
 389,9: VARIABLE
 
147 -> general_identifier 
 389,9: ->
 389,11: counter
 389,18: VARIABLE
 
238 NAME VARIABLE 
 389,11: counter
 389,18: VARIABLE
 
65 VARIABLE 
 389,18: VARIABLE
 
181 = 
 389,19: =
 
279 NAME VARIABLE 
 389,21: read
 389,25: VARIABLE
 
179 VARIABLE 
 389,25: VARIABLE
 
147 ( option_argument_expression_list ) 
 389,25: (
 389,26: file_p
 389,32: VARIABLE
 389,32: ->
 389,34: file_descriptor
 389,49: VARIABLE
 389,49: ,
 389,51: file_p
 389,57: VARIABLE
 389,57: ->
 389,59: next_char_pos_p
 389,74: VARIABLE
 389,74: ,
 389,76: buffer_size
 389,87: VARIABLE
 389,87: )
 
235 NAME VARIABLE 
 389,26: file_p
 389,32: VARIABLE
 
179 VARIABLE 
 389,32: VARIABLE
 
147 -> general_identifier 
 389,32: ->
 389,34: file_descriptor
 389,49: VARIABLE
 
238 NAME VARIABLE 
 389,34: file_descriptor
 389,49: VARIABLE
 
65 VARIABLE 
 389,49: VARIABLE
 
352 , assignment_expression 
 389,49: ,
 389,51: file_p
 389,57: VARIABLE
 389,57: ->
 389,59: next_char_pos_p
 389,74: VARIABLE
 
429 NAME VARIABLE 
 389,51: file_p
 389,57: VARIABLE
 
179 VARIABLE 
 389,57: VARIABLE
 
147 -> general_identifier 
 389,57: ->
 389,59: next_char_pos_p
 389,74: VARIABLE
 
238 NAME VARIABLE 
 389,59: next_char_pos_p
 389,74: VARIABLE
 
65 VARIABLE 
 389,74: VARIABLE
 
352 , assignment_expression 
 389,74: ,
 389,76: buffer_size
 389,87: VARIABLE
 
429 NAME VARIABLE 
 389,76: buffer_size
 389,87: VARIABLE
 
179 VARIABLE 
 389,87: VARIABLE
 
351 ) 
 389,87: )
 
331 ; 
 389,88: ;
 
320 if ( expression ) scoped_statement 
 391,3: if
 391,6: (
 391,7: --
 391,9: file_p
 391,15: VARIABLE
 391,15: ->
 391,17: counter
 391,24: VARIABLE
 391,25: <
 391,27: 0
 391,28: )
 392,3: {
 393,5: if
 393,8: (
 393,9: file_p
 393,15: VARIABLE
 393,15: ->
 393,17: counter
 393,24: VARIABLE
 393,25: ==
 393,28: -
 393,29: 1
 393,30: )
 394,5: {
 395,7: file_p
 395,13: VARIABLE
 395,13: ->
 395,15: flag
 395,19: VARIABLE
 395,19: .
 395,20: _EOF
 395,24: VARIABLE
 395,25: =
 395,27: 1
 395,28: ;
 396,5: }
 397,5: else
 398,5: {
 399,7: file_p
 399,13: VARIABLE
 399,13: ->
 399,15: flag
 399,19: VARIABLE
 399,19: .
 399,20: _ERR
 399,24: VARIABLE
 399,25: =
 399,27: 1
 399,28: ;
 400,5: }
 402,5: file_p
 402,11: VARIABLE
 402,11: ->
 402,13: counter
 402,20: VARIABLE
 402,21: =
 402,23: 0
 402,24: ;
 403,5: return
 403,12: (
 403,13: -
 403,14: 1
 403,15: )
 403,16: ;
 404,3: }
 
404 ( expression ) scoped_statement 
 391,6: (
 391,7: --
 391,9: file_p
 391,15: VARIABLE
 391,15: ->
 391,17: counter
 391,24: VARIABLE
 391,25: <
 391,27: 0
 391,28: )
 392,3: {
 393,5: if
 393,8: (
 393,9: file_p
 393,15: VARIABLE
 393,15: ->
 393,17: counter
 393,24: VARIABLE
 393,25: ==
 393,28: -
 393,29: 1
 393,30: )
 394,5: {
 395,7: file_p
 395,13: VARIABLE
 395,13: ->
 395,15: flag
 395,19: VARIABLE
 395,19: .
 395,20: _EOF
 395,24: VARIABLE
 395,25: =
 395,27: 1
 395,28: ;
 396,5: }
 397,5: else
 398,5: {
 399,7: file_p
 399,13: VARIABLE
 399,13: ->
 399,15: flag
 399,19: VARIABLE
 399,19: .
 399,20: _ERR
 399,24: VARIABLE
 399,25: =
 399,27: 1
 399,28: ;
 400,5: }
 402,5: file_p
 402,11: VARIABLE
 402,11: ->
 402,13: counter
 402,20: VARIABLE
 402,21: =
 402,23: 0
 402,24: ;
 403,5: return
 403,12: (
 403,13: -
 403,14: 1
 403,15: )
 403,16: ;
 404,3: }
 
455 -- unary_expression 
 391,7: --
 391,9: file_p
 391,15: VARIABLE
 391,15: ->
 391,17: counter
 391,24: VARIABLE
 
169 NAME VARIABLE 
 391,9: file_p
 391,15: VARIABLE
 
179 VARIABLE 
 391,15: VARIABLE
 
147 -> general_identifier 
 391,15: ->
 391,17: counter
 391,24: VARIABLE
 
238 NAME VARIABLE 
 391,17: counter
 391,24: VARIABLE
 
65 VARIABLE 
 391,24: VARIABLE
 
154 < 
 391,25: <
 
252 CONSTANT 
 391,27: 0
 
483 ) scoped_statement 
 391,28: )
 392,3: {
 393,5: if
 393,8: (
 393,9: file_p
 393,15: VARIABLE
 393,15: ->
 393,17: counter
 393,24: VARIABLE
 393,25: ==
 393,28: -
 393,29: 1
 393,30: )
 394,5: {
 395,7: file_p
 395,13: VARIABLE
 395,13: ->
 395,15: flag
 395,19: VARIABLE
 395,19: .
 395,20: _EOF
 395,24: VARIABLE
 395,25: =
 395,27: 1
 395,28: ;
 396,5: }
 397,5: else
 398,5: {
 399,7: file_p
 399,13: VARIABLE
 399,13: ->
 399,15: flag
 399,19: VARIABLE
 399,19: .
 399,20: _ERR
 399,24: VARIABLE
 399,25: =
 399,27: 1
 399,28: ;
 400,5: }
 402,5: file_p
 402,11: VARIABLE
 402,11: ->
 402,13: counter
 402,20: VARIABLE
 402,21: =
 402,23: 0
 402,24: ;
 403,5: return
 403,12: (
 403,13: -
 403,14: 1
 403,15: )
 403,16: ;
 404,3: }
 
320 { option_block_item_list } 
 392,3: {
 393,5: if
 393,8: (
 393,9: file_p
 393,15: VARIABLE
 393,15: ->
 393,17: counter
 393,24: VARIABLE
 393,25: ==
 393,28: -
 393,29: 1
 393,30: )
 394,5: {
 395,7: file_p
 395,13: VARIABLE
 395,13: ->
 395,15: flag
 395,19: VARIABLE
 395,19: .
 395,20: _EOF
 395,24: VARIABLE
 395,25: =
 395,27: 1
 395,28: ;
 396,5: }
 397,5: else
 398,5: {
 399,7: file_p
 399,13: VARIABLE
 399,13: ->
 399,15: flag
 399,19: VARIABLE
 399,19: .
 399,20: _ERR
 399,24: VARIABLE
 399,25: =
 399,27: 1
 399,28: ;
 400,5: }
 402,5: file_p
 402,11: VARIABLE
 402,11: ->
 402,13: counter
 402,20: VARIABLE
 402,21: =
 402,23: 0
 402,24: ;
 403,5: return
 403,12: (
 403,13: -
 403,14: 1
 403,15: )
 403,16: ;
 404,3: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 393,5: if
 393,8: (
 393,9: file_p
 393,15: VARIABLE
 393,15: ->
 393,17: counter
 393,24: VARIABLE
 393,25: ==
 393,28: -
 393,29: 1
 393,30: )
 394,5: {
 395,7: file_p
 395,13: VARIABLE
 395,13: ->
 395,15: flag
 395,19: VARIABLE
 395,19: .
 395,20: _EOF
 395,24: VARIABLE
 395,25: =
 395,27: 1
 395,28: ;
 396,5: }
 397,5: else
 398,5: {
 399,7: file_p
 399,13: VARIABLE
 399,13: ->
 399,15: flag
 399,19: VARIABLE
 399,19: .
 399,20: _ERR
 399,24: VARIABLE
 399,25: =
 399,27: 1
 399,28: ;
 400,5: }
 
404 ( expression ) scoped_statement else scoped_statement 
 393,8: (
 393,9: file_p
 393,15: VARIABLE
 393,15: ->
 393,17: counter
 393,24: VARIABLE
 393,25: ==
 393,28: -
 393,29: 1
 393,30: )
 394,5: {
 395,7: file_p
 395,13: VARIABLE
 395,13: ->
 395,15: flag
 395,19: VARIABLE
 395,19: .
 395,20: _EOF
 395,24: VARIABLE
 395,25: =
 395,27: 1
 395,28: ;
 396,5: }
 397,5: else
 398,5: {
 399,7: file_p
 399,13: VARIABLE
 399,13: ->
 399,15: flag
 399,19: VARIABLE
 399,19: .
 399,20: _ERR
 399,24: VARIABLE
 399,25: =
 399,27: 1
 399,28: ;
 400,5: }
 
455 NAME VARIABLE 
 393,9: file_p
 393,15: VARIABLE
 
179 VARIABLE 
 393,15: VARIABLE
 
147 -> general_identifier 
 393,15: ->
 393,17: counter
 393,24: VARIABLE
 
238 NAME VARIABLE 
 393,17: counter
 393,24: VARIABLE
 
65 VARIABLE 
 393,24: VARIABLE
 
155 == 
 393,25: ==
 
257 - 
 393,28: -
 
149 CONSTANT 
 393,29: 1
 
483 ) scoped_statement else scoped_statement 
 393,30: )
 394,5: {
 395,7: file_p
 395,13: VARIABLE
 395,13: ->
 395,15: flag
 395,19: VARIABLE
 395,19: .
 395,20: _EOF
 395,24: VARIABLE
 395,25: =
 395,27: 1
 395,28: ;
 396,5: }
 397,5: else
 398,5: {
 399,7: file_p
 399,13: VARIABLE
 399,13: ->
 399,15: flag
 399,19: VARIABLE
 399,19: .
 399,20: _ERR
 399,24: VARIABLE
 399,25: =
 399,27: 1
 399,28: ;
 400,5: }
 
320 { option_block_item_list } 
 394,5: {
 395,7: file_p
 395,13: VARIABLE
 395,13: ->
 395,15: flag
 395,19: VARIABLE
 395,19: .
 395,20: _EOF
 395,24: VARIABLE
 395,25: =
 395,27: 1
 395,28: ;
 396,5: }
 
201 NAME VARIABLE 
 395,7: file_p
 395,13: VARIABLE
 
65 VARIABLE 
 395,13: VARIABLE
 
147 -> general_identifier 
 395,13: ->
 395,15: flag
 395,19: VARIABLE
 
238 NAME VARIABLE 
 395,15: flag
 395,19: VARIABLE
 
65 VARIABLE 
 395,19: VARIABLE
 
147 . general_identifier 
 395,19: .
 395,20: _EOF
 395,24: VARIABLE
 
237 NAME VARIABLE 
 395,20: _EOF
 395,24: VARIABLE
 
65 VARIABLE 
 395,24: VARIABLE
 
181 = 
 395,25: =
 
279 CONSTANT 
 395,27: 1
 
331 ; 
 395,28: ;
 
201 } 
 396,5: }
 
512 else scoped_statement 
 397,5: else
 398,5: {
 399,7: file_p
 399,13: VARIABLE
 399,13: ->
 399,15: flag
 399,19: VARIABLE
 399,19: .
 399,20: _ERR
 399,24: VARIABLE
 399,25: =
 399,27: 1
 399,28: ;
 400,5: }
 
320 { option_block_item_list } 
 398,5: {
 399,7: file_p
 399,13: VARIABLE
 399,13: ->
 399,15: flag
 399,19: VARIABLE
 399,19: .
 399,20: _ERR
 399,24: VARIABLE
 399,25: =
 399,27: 1
 399,28: ;
 400,5: }
 
201 NAME VARIABLE 
 399,7: file_p
 399,13: VARIABLE
 
65 VARIABLE 
 399,13: VARIABLE
 
147 -> general_identifier 
 399,13: ->
 399,15: flag
 399,19: VARIABLE
 
238 NAME VARIABLE 
 399,15: flag
 399,19: VARIABLE
 
65 VARIABLE 
 399,19: VARIABLE
 
147 . general_identifier 
 399,19: .
 399,20: _ERR
 399,24: VARIABLE
 
237 NAME VARIABLE 
 399,20: _ERR
 399,24: VARIABLE
 
65 VARIABLE 
 399,24: VARIABLE
 
181 = 
 399,25: =
 
279 CONSTANT 
 399,27: 1
 
331 ; 
 399,28: ;
 
201 } 
 400,5: }
 
201 NAME VARIABLE 
 402,5: file_p
 402,11: VARIABLE
 
65 VARIABLE 
 402,11: VARIABLE
 
147 -> general_identifier 
 402,11: ->
 402,13: counter
 402,20: VARIABLE
 
238 NAME VARIABLE 
 402,13: counter
 402,20: VARIABLE
 
65 VARIABLE 
 402,20: VARIABLE
 
181 = 
 402,21: =
 
279 CONSTANT 
 402,23: 0
 
331 ; 
 402,24: ;
 
201 return option_expression ; 
 403,5: return
 403,12: (
 403,13: -
 403,14: 1
 403,15: )
 403,16: ;
 
338 ( expression ) 
 403,12: (
 403,13: -
 403,14: 1
 403,15: )
 
165 - 
 403,13: -
 
149 CONSTANT 
 403,14: 1
 
267 ) 
 403,15: )
 
415 ; 
 403,16: ;
 
201 } 
 404,3: }
 
201 return option_expression ; 
 406,3: return
 406,10: (
 406,11: unsigned
 406,20: char
 406,24: )
 406,25: *
 406,26: file_p
 406,32: VARIABLE
 406,32: ->
 406,34: next_char_pos_p
 406,49: VARIABLE
 406,49: ++
 406,51: ;
 
338 ( type_name ) cast_expression 
 406,10: (
 406,11: unsigned
 406,20: char
 406,24: )
 406,25: *
 406,26: file_p
 406,32: VARIABLE
 406,32: ->
 406,34: next_char_pos_p
 406,49: VARIABLE
 406,49: ++
 
165 unsigned 
 406,11: unsigned
 
135 char 
 406,20: char
 
269 ) cast_expression 
 406,24: )
 406,25: *
 406,26: file_p
 406,32: VARIABLE
 406,32: ->
 406,34: next_char_pos_p
 406,49: VARIABLE
 406,49: ++
 
369 * 
 406,25: *
 
149 NAME VARIABLE 
 406,26: file_p
 406,32: VARIABLE
 
179 VARIABLE 
 406,32: VARIABLE
 
147 -> general_identifier 
 406,32: ->
 406,34: next_char_pos_p
 406,49: VARIABLE
 
238 NAME VARIABLE 
 406,34: next_char_pos_p
 406,49: VARIABLE
 
65 VARIABLE 
 406,49: VARIABLE
 
147 ++ 
 406,49: ++
 
415 ; 
 406,51: ;
 
201 } 
 407,1: }
 
23 int 
 409,1: int
 
5 NAME VARIABLE 
 409,5: _flush_buffer
 409,18: VARIABLE
 
65 VARIABLE 
 409,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 409,18: (
 409,19: int
 409,23: c
 409,24: VARIABLE
 409,24: ,
 409,26: FILE
 409,30: TYPE
 409,31: *
 409,32: file_p
 409,38: VARIABLE
 409,38: )
 
186 int 
 409,19: int
 
298 NAME VARIABLE 
 409,23: c
 409,24: VARIABLE
 
65 VARIABLE 
 409,24: VARIABLE
 
300 , parameter_declaration 
 409,24: ,
 409,26: FILE
 409,30: TYPE
 409,31: *
 409,32: file_p
 409,38: VARIABLE
 
391 NAME TYPE 
 409,26: FILE
 409,30: TYPE
 
26 TYPE 
 409,30: TYPE
 
298 * option_type_qualifier_list option_pointer 
 409,31: *
 
386 NAME VARIABLE 
 409,32: file_p
 409,38: VARIABLE
 
65 VARIABLE 
 409,38: VARIABLE
 
187 ) 
 409,38: )
 
94 { option_block_item_list } 
 410,1: {
 411,3: int
 411,7: buffer_size
 411,18: VARIABLE
 411,18: ;
 413,3: if
 413,6: (
 413,7: file_p
 413,13: VARIABLE
 413,13: ->
 413,15: flag
 413,19: VARIABLE
 413,19: .
 413,20: _WRITE
 413,26: VARIABLE
 413,27: ==
 413,30: 0
 413,32: ||
 413,35: file_p
 413,41: VARIABLE
 413,41: ->
 413,43: flag
 413,47: VARIABLE
 413,47: .
 413,48: _ERR
 413,52: VARIABLE
 413,53: ==
 413,56: 1
 413,57: )
 414,3: {
 415,5: return
 415,12: (
 415,13: -
 415,14: 1
 415,15: )
 415,16: ;
 416,3: }
 418,3: buffer_size
 418,14: VARIABLE
 418,15: =
 418,17: (
 418,18: file_p
 418,24: VARIABLE
 418,24: ->
 418,26: flag
 418,30: VARIABLE
 418,30: .
 418,31: _UNBUF
 418,37: VARIABLE
 418,38: ==
 418,41: 1
 418,42: )
 418,44: ?
 418,46: 1
 418,48: :
 418,50: 1024
 418,54: ;
 420,3: if
 420,6: (
 420,7: file_p
 420,13: VARIABLE
 420,13: ->
 420,15: base
 420,19: VARIABLE
 420,20: ==
 420,23: 0
 420,24: )
 421,3: {
 422,5: if
 422,8: (
 422,9: (
 422,10: file_p
 422,16: VARIABLE
 422,16: ->
 422,18: base
 422,22: VARIABLE
 422,23: =
 422,25: (
 422,26: char
 422,31: *
 422,32: )
 422,33: malloc
 422,39: VARIABLE
 422,39: (
 422,40: buffer_size
 422,51: VARIABLE
 422,51: )
 422,52: )
 422,54: ==
 422,57: 0
 422,58: )
 423,5: {
 424,7: return
 424,14: (
 424,15: -
 424,16: 1
 424,17: )
 424,18: ;
 425,5: }
 426,3: }
 427,3: else
 428,3: {
 429,5: unsigned
 429,14: long
 429,19: nr_of_bytes
 429,30: VARIABLE
 429,31: =
 429,33: file_p
 429,39: VARIABLE
 429,39: ->
 429,41: next_char_pos_p
 429,56: VARIABLE
 429,57: -
 429,59: file_p
 429,65: VARIABLE
 429,65: ->
 429,67: base
 429,71: VARIABLE
 429,71: ;
 430,5: if
 430,8: (
 430,9: (
 430,10: write
 430,15: VARIABLE
 430,15: (
 430,16: file_p
 430,22: VARIABLE
 430,22: ->
 430,24: file_descriptor
 430,39: VARIABLE
 430,39: ,
 430,41: file_p
 430,47: VARIABLE
 430,47: ->
 430,49: base
 430,53: VARIABLE
 430,53: ,
 430,55: nr_of_bytes
 430,66: VARIABLE
 430,66: )
 430,67: )
 430,69: !=
 430,72: nr_of_bytes
 430,83: VARIABLE
 430,83: )
 431,5: {
 432,7: file_p
 432,13: VARIABLE
 432,13: ->
 432,15: flag
 432,19: VARIABLE
 432,19: .
 432,20: _ERR
 432,24: VARIABLE
 432,25: =
 432,27: 1
 432,28: ;
 433,7: return
 433,14: (
 433,15: -
 433,16: 1
 433,17: )
 433,18: ;
 434,5: }
 435,3: }
 437,3: file_p
 437,9: VARIABLE
 437,9: ->
 437,11: next_char_pos_p
 437,26: VARIABLE
 437,27: =
 437,29: file_p
 437,35: VARIABLE
 437,35: ->
 437,37: base
 437,41: VARIABLE
 437,41: ;
 438,3: *
 438,4: file_p
 438,10: VARIABLE
 438,10: ->
 438,12: next_char_pos_p
 438,27: VARIABLE
 438,27: ++
 438,30: =
 438,32: c
 438,33: VARIABLE
 438,33: ;
 439,3: file_p
 439,9: VARIABLE
 439,9: ->
 439,11: counter
 439,18: VARIABLE
 439,19: =
 439,21: buffer_size
 439,32: VARIABLE
 439,33: -
 439,35: 1
 439,36: ;
 441,3: return
 441,10: c
 441,11: VARIABLE
 441,11: ;
 442,1: }
 
201 int 
 411,3: int
 
93 NAME VARIABLE 
 411,7: buffer_size
 411,18: VARIABLE
 
65 VARIABLE 
 411,18: VARIABLE
 
60 ; 
 411,18: ;
 
320 if ( expression ) scoped_statement 
 413,3: if
 413,6: (
 413,7: file_p
 413,13: VARIABLE
 413,13: ->
 413,15: flag
 413,19: VARIABLE
 413,19: .
 413,20: _WRITE
 413,26: VARIABLE
 413,27: ==
 413,30: 0
 413,32: ||
 413,35: file_p
 413,41: VARIABLE
 413,41: ->
 413,43: flag
 413,47: VARIABLE
 413,47: .
 413,48: _ERR
 413,52: VARIABLE
 413,53: ==
 413,56: 1
 413,57: )
 414,3: {
 415,5: return
 415,12: (
 415,13: -
 415,14: 1
 415,15: )
 415,16: ;
 416,3: }
 
404 ( expression ) scoped_statement 
 413,6: (
 413,7: file_p
 413,13: VARIABLE
 413,13: ->
 413,15: flag
 413,19: VARIABLE
 413,19: .
 413,20: _WRITE
 413,26: VARIABLE
 413,27: ==
 413,30: 0
 413,32: ||
 413,35: file_p
 413,41: VARIABLE
 413,41: ->
 413,43: flag
 413,47: VARIABLE
 413,47: .
 413,48: _ERR
 413,52: VARIABLE
 413,53: ==
 413,56: 1
 413,57: )
 414,3: {
 415,5: return
 415,12: (
 415,13: -
 415,14: 1
 415,15: )
 415,16: ;
 416,3: }
 
455 NAME VARIABLE 
 413,7: file_p
 413,13: VARIABLE
 
179 VARIABLE 
 413,13: VARIABLE
 
147 -> general_identifier 
 413,13: ->
 413,15: flag
 413,19: VARIABLE
 
238 NAME VARIABLE 
 413,15: flag
 413,19: VARIABLE
 
65 VARIABLE 
 413,19: VARIABLE
 
147 . general_identifier 
 413,19: .
 413,20: _WRITE
 413,26: VARIABLE
 
237 NAME VARIABLE 
 413,20: _WRITE
 413,26: VARIABLE
 
65 VARIABLE 
 413,26: VARIABLE
 
155 == 
 413,27: ==
 
257 CONSTANT 
 413,30: 0
 
160 || logical_and_expression 
 413,32: ||
 413,35: file_p
 413,41: VARIABLE
 413,41: ->
 413,43: flag
 413,47: VARIABLE
 413,47: .
 413,48: _ERR
 413,52: VARIABLE
 413,53: ==
 413,56: 1
 
264 NAME VARIABLE 
 413,35: file_p
 413,41: VARIABLE
 
179 VARIABLE 
 413,41: VARIABLE
 
147 -> general_identifier 
 413,41: ->
 413,43: flag
 413,47: VARIABLE
 
238 NAME VARIABLE 
 413,43: flag
 413,47: VARIABLE
 
65 VARIABLE 
 413,47: VARIABLE
 
147 . general_identifier 
 413,47: .
 413,48: _ERR
 413,52: VARIABLE
 
237 NAME VARIABLE 
 413,48: _ERR
 413,52: VARIABLE
 
65 VARIABLE 
 413,52: VARIABLE
 
155 == 
 413,53: ==
 
257 CONSTANT 
 413,56: 1
 
483 ) scoped_statement 
 413,57: )
 414,3: {
 415,5: return
 415,12: (
 415,13: -
 415,14: 1
 415,15: )
 415,16: ;
 416,3: }
 
320 { option_block_item_list } 
 414,3: {
 415,5: return
 415,12: (
 415,13: -
 415,14: 1
 415,15: )
 415,16: ;
 416,3: }
 
201 return option_expression ; 
 415,5: return
 415,12: (
 415,13: -
 415,14: 1
 415,15: )
 415,16: ;
 
338 ( expression ) 
 415,12: (
 415,13: -
 415,14: 1
 415,15: )
 
165 - 
 415,13: -
 
149 CONSTANT 
 415,14: 1
 
267 ) 
 415,15: )
 
415 ; 
 415,16: ;
 
201 } 
 416,3: }
 
201 NAME VARIABLE 
 418,3: buffer_size
 418,14: VARIABLE
 
65 VARIABLE 
 418,14: VARIABLE
 
181 = 
 418,15: =
 
279 ( expression ) 
 418,17: (
 418,18: file_p
 418,24: VARIABLE
 418,24: ->
 418,26: flag
 418,30: VARIABLE
 418,30: .
 418,31: _UNBUF
 418,37: VARIABLE
 418,38: ==
 418,41: 1
 418,42: )
 
165 NAME VARIABLE 
 418,18: file_p
 418,24: VARIABLE
 
65 VARIABLE 
 418,24: VARIABLE
 
147 -> general_identifier 
 418,24: ->
 418,26: flag
 418,30: VARIABLE
 
238 NAME VARIABLE 
 418,26: flag
 418,30: VARIABLE
 
65 VARIABLE 
 418,30: VARIABLE
 
147 . general_identifier 
 418,30: .
 418,31: _UNBUF
 418,37: VARIABLE
 
237 NAME VARIABLE 
 418,31: _UNBUF
 418,37: VARIABLE
 
65 VARIABLE 
 418,37: VARIABLE
 
155 == 
 418,38: ==
 
257 CONSTANT 
 418,41: 1
 
267 ) 
 418,42: )
 
160 ? expression : conditional_expression 
 418,44: ?
 418,46: 1
 418,48: :
 418,50: 1024
 
265 CONSTANT 
 418,46: 1
 
366 : conditional_expression 
 418,48: :
 418,50: 1024
 
431 CONSTANT 
 418,50: 1024
 
331 ; 
 418,54: ;
 
320 if ( expression ) scoped_statement else scoped_statement 
 420,3: if
 420,6: (
 420,7: file_p
 420,13: VARIABLE
 420,13: ->
 420,15: base
 420,19: VARIABLE
 420,20: ==
 420,23: 0
 420,24: )
 421,3: {
 422,5: if
 422,8: (
 422,9: (
 422,10: file_p
 422,16: VARIABLE
 422,16: ->
 422,18: base
 422,22: VARIABLE
 422,23: =
 422,25: (
 422,26: char
 422,31: *
 422,32: )
 422,33: malloc
 422,39: VARIABLE
 422,39: (
 422,40: buffer_size
 422,51: VARIABLE
 422,51: )
 422,52: )
 422,54: ==
 422,57: 0
 422,58: )
 423,5: {
 424,7: return
 424,14: (
 424,15: -
 424,16: 1
 424,17: )
 424,18: ;
 425,5: }
 426,3: }
 427,3: else
 428,3: {
 429,5: unsigned
 429,14: long
 429,19: nr_of_bytes
 429,30: VARIABLE
 429,31: =
 429,33: file_p
 429,39: VARIABLE
 429,39: ->
 429,41: next_char_pos_p
 429,56: VARIABLE
 429,57: -
 429,59: file_p
 429,65: VARIABLE
 429,65: ->
 429,67: base
 429,71: VARIABLE
 429,71: ;
 430,5: if
 430,8: (
 430,9: (
 430,10: write
 430,15: VARIABLE
 430,15: (
 430,16: file_p
 430,22: VARIABLE
 430,22: ->
 430,24: file_descriptor
 430,39: VARIABLE
 430,39: ,
 430,41: file_p
 430,47: VARIABLE
 430,47: ->
 430,49: base
 430,53: VARIABLE
 430,53: ,
 430,55: nr_of_bytes
 430,66: VARIABLE
 430,66: )
 430,67: )
 430,69: !=
 430,72: nr_of_bytes
 430,83: VARIABLE
 430,83: )
 431,5: {
 432,7: file_p
 432,13: VARIABLE
 432,13: ->
 432,15: flag
 432,19: VARIABLE
 432,19: .
 432,20: _ERR
 432,24: VARIABLE
 432,25: =
 432,27: 1
 432,28: ;
 433,7: return
 433,14: (
 433,15: -
 433,16: 1
 433,17: )
 433,18: ;
 434,5: }
 435,3: }
 
404 ( expression ) scoped_statement else scoped_statement 
 420,6: (
 420,7: file_p
 420,13: VARIABLE
 420,13: ->
 420,15: base
 420,19: VARIABLE
 420,20: ==
 420,23: 0
 420,24: )
 421,3: {
 422,5: if
 422,8: (
 422,9: (
 422,10: file_p
 422,16: VARIABLE
 422,16: ->
 422,18: base
 422,22: VARIABLE
 422,23: =
 422,25: (
 422,26: char
 422,31: *
 422,32: )
 422,33: malloc
 422,39: VARIABLE
 422,39: (
 422,40: buffer_size
 422,51: VARIABLE
 422,51: )
 422,52: )
 422,54: ==
 422,57: 0
 422,58: )
 423,5: {
 424,7: return
 424,14: (
 424,15: -
 424,16: 1
 424,17: )
 424,18: ;
 425,5: }
 426,3: }
 427,3: else
 428,3: {
 429,5: unsigned
 429,14: long
 429,19: nr_of_bytes
 429,30: VARIABLE
 429,31: =
 429,33: file_p
 429,39: VARIABLE
 429,39: ->
 429,41: next_char_pos_p
 429,56: VARIABLE
 429,57: -
 429,59: file_p
 429,65: VARIABLE
 429,65: ->
 429,67: base
 429,71: VARIABLE
 429,71: ;
 430,5: if
 430,8: (
 430,9: (
 430,10: write
 430,15: VARIABLE
 430,15: (
 430,16: file_p
 430,22: VARIABLE
 430,22: ->
 430,24: file_descriptor
 430,39: VARIABLE
 430,39: ,
 430,41: file_p
 430,47: VARIABLE
 430,47: ->
 430,49: base
 430,53: VARIABLE
 430,53: ,
 430,55: nr_of_bytes
 430,66: VARIABLE
 430,66: )
 430,67: )
 430,69: !=
 430,72: nr_of_bytes
 430,83: VARIABLE
 430,83: )
 431,5: {
 432,7: file_p
 432,13: VARIABLE
 432,13: ->
 432,15: flag
 432,19: VARIABLE
 432,19: .
 432,20: _ERR
 432,24: VARIABLE
 432,25: =
 432,27: 1
 432,28: ;
 433,7: return
 433,14: (
 433,15: -
 433,16: 1
 433,17: )
 433,18: ;
 434,5: }
 435,3: }
 
455 NAME VARIABLE 
 420,7: file_p
 420,13: VARIABLE
 
179 VARIABLE 
 420,13: VARIABLE
 
147 -> general_identifier 
 420,13: ->
 420,15: base
 420,19: VARIABLE
 
238 NAME VARIABLE 
 420,15: base
 420,19: VARIABLE
 
65 VARIABLE 
 420,19: VARIABLE
 
155 == 
 420,20: ==
 
257 CONSTANT 
 420,23: 0
 
483 ) scoped_statement else scoped_statement 
 420,24: )
 421,3: {
 422,5: if
 422,8: (
 422,9: (
 422,10: file_p
 422,16: VARIABLE
 422,16: ->
 422,18: base
 422,22: VARIABLE
 422,23: =
 422,25: (
 422,26: char
 422,31: *
 422,32: )
 422,33: malloc
 422,39: VARIABLE
 422,39: (
 422,40: buffer_size
 422,51: VARIABLE
 422,51: )
 422,52: )
 422,54: ==
 422,57: 0
 422,58: )
 423,5: {
 424,7: return
 424,14: (
 424,15: -
 424,16: 1
 424,17: )
 424,18: ;
 425,5: }
 426,3: }
 427,3: else
 428,3: {
 429,5: unsigned
 429,14: long
 429,19: nr_of_bytes
 429,30: VARIABLE
 429,31: =
 429,33: file_p
 429,39: VARIABLE
 429,39: ->
 429,41: next_char_pos_p
 429,56: VARIABLE
 429,57: -
 429,59: file_p
 429,65: VARIABLE
 429,65: ->
 429,67: base
 429,71: VARIABLE
 429,71: ;
 430,5: if
 430,8: (
 430,9: (
 430,10: write
 430,15: VARIABLE
 430,15: (
 430,16: file_p
 430,22: VARIABLE
 430,22: ->
 430,24: file_descriptor
 430,39: VARIABLE
 430,39: ,
 430,41: file_p
 430,47: VARIABLE
 430,47: ->
 430,49: base
 430,53: VARIABLE
 430,53: ,
 430,55: nr_of_bytes
 430,66: VARIABLE
 430,66: )
 430,67: )
 430,69: !=
 430,72: nr_of_bytes
 430,83: VARIABLE
 430,83: )
 431,5: {
 432,7: file_p
 432,13: VARIABLE
 432,13: ->
 432,15: flag
 432,19: VARIABLE
 432,19: .
 432,20: _ERR
 432,24: VARIABLE
 432,25: =
 432,27: 1
 432,28: ;
 433,7: return
 433,14: (
 433,15: -
 433,16: 1
 433,17: )
 433,18: ;
 434,5: }
 435,3: }
 
320 { option_block_item_list } 
 421,3: {
 422,5: if
 422,8: (
 422,9: (
 422,10: file_p
 422,16: VARIABLE
 422,16: ->
 422,18: base
 422,22: VARIABLE
 422,23: =
 422,25: (
 422,26: char
 422,31: *
 422,32: )
 422,33: malloc
 422,39: VARIABLE
 422,39: (
 422,40: buffer_size
 422,51: VARIABLE
 422,51: )
 422,52: )
 422,54: ==
 422,57: 0
 422,58: )
 423,5: {
 424,7: return
 424,14: (
 424,15: -
 424,16: 1
 424,17: )
 424,18: ;
 425,5: }
 426,3: }
 
320 if ( expression ) scoped_statement 
 422,5: if
 422,8: (
 422,9: (
 422,10: file_p
 422,16: VARIABLE
 422,16: ->
 422,18: base
 422,22: VARIABLE
 422,23: =
 422,25: (
 422,26: char
 422,31: *
 422,32: )
 422,33: malloc
 422,39: VARIABLE
 422,39: (
 422,40: buffer_size
 422,51: VARIABLE
 422,51: )
 422,52: )
 422,54: ==
 422,57: 0
 422,58: )
 423,5: {
 424,7: return
 424,14: (
 424,15: -
 424,16: 1
 424,17: )
 424,18: ;
 425,5: }
 
404 ( expression ) scoped_statement 
 422,8: (
 422,9: (
 422,10: file_p
 422,16: VARIABLE
 422,16: ->
 422,18: base
 422,22: VARIABLE
 422,23: =
 422,25: (
 422,26: char
 422,31: *
 422,32: )
 422,33: malloc
 422,39: VARIABLE
 422,39: (
 422,40: buffer_size
 422,51: VARIABLE
 422,51: )
 422,52: )
 422,54: ==
 422,57: 0
 422,58: )
 423,5: {
 424,7: return
 424,14: (
 424,15: -
 424,16: 1
 424,17: )
 424,18: ;
 425,5: }
 
455 ( expression ) 
 422,9: (
 422,10: file_p
 422,16: VARIABLE
 422,16: ->
 422,18: base
 422,22: VARIABLE
 422,23: =
 422,25: (
 422,26: char
 422,31: *
 422,32: )
 422,33: malloc
 422,39: VARIABLE
 422,39: (
 422,40: buffer_size
 422,51: VARIABLE
 422,51: )
 422,52: )
 
165 NAME VARIABLE 
 422,10: file_p
 422,16: VARIABLE
 
65 VARIABLE 
 422,16: VARIABLE
 
147 -> general_identifier 
 422,16: ->
 422,18: base
 422,22: VARIABLE
 
238 NAME VARIABLE 
 422,18: base
 422,22: VARIABLE
 
65 VARIABLE 
 422,22: VARIABLE
 
181 = 
 422,23: =
 
279 ( type_name ) cast_expression 
 422,25: (
 422,26: char
 422,31: *
 422,32: )
 422,33: malloc
 422,39: VARIABLE
 422,39: (
 422,40: buffer_size
 422,51: VARIABLE
 422,51: )
 
165 char 
 422,26: char
 
137 * option_type_qualifier_list option_pointer 
 422,31: *
 
269 ) cast_expression 
 422,32: )
 422,33: malloc
 422,39: VARIABLE
 422,39: (
 422,40: buffer_size
 422,51: VARIABLE
 422,51: )
 
369 NAME VARIABLE 
 422,33: malloc
 422,39: VARIABLE
 
179 VARIABLE 
 422,39: VARIABLE
 
147 ( option_argument_expression_list ) 
 422,39: (
 422,40: buffer_size
 422,51: VARIABLE
 422,51: )
 
235 NAME VARIABLE 
 422,40: buffer_size
 422,51: VARIABLE
 
179 VARIABLE 
 422,51: VARIABLE
 
351 ) 
 422,51: )
 
267 ) 
 422,52: )
 
155 == 
 422,54: ==
 
257 CONSTANT 
 422,57: 0
 
483 ) scoped_statement 
 422,58: )
 423,5: {
 424,7: return
 424,14: (
 424,15: -
 424,16: 1
 424,17: )
 424,18: ;
 425,5: }
 
320 { option_block_item_list } 
 423,5: {
 424,7: return
 424,14: (
 424,15: -
 424,16: 1
 424,17: )
 424,18: ;
 425,5: }
 
201 return option_expression ; 
 424,7: return
 424,14: (
 424,15: -
 424,16: 1
 424,17: )
 424,18: ;
 
338 ( expression ) 
 424,14: (
 424,15: -
 424,16: 1
 424,17: )
 
165 - 
 424,15: -
 
149 CONSTANT 
 424,16: 1
 
267 ) 
 424,17: )
 
415 ; 
 424,18: ;
 
201 } 
 425,5: }
 
201 } 
 426,3: }
 
512 else scoped_statement 
 427,3: else
 428,3: {
 429,5: unsigned
 429,14: long
 429,19: nr_of_bytes
 429,30: VARIABLE
 429,31: =
 429,33: file_p
 429,39: VARIABLE
 429,39: ->
 429,41: next_char_pos_p
 429,56: VARIABLE
 429,57: -
 429,59: file_p
 429,65: VARIABLE
 429,65: ->
 429,67: base
 429,71: VARIABLE
 429,71: ;
 430,5: if
 430,8: (
 430,9: (
 430,10: write
 430,15: VARIABLE
 430,15: (
 430,16: file_p
 430,22: VARIABLE
 430,22: ->
 430,24: file_descriptor
 430,39: VARIABLE
 430,39: ,
 430,41: file_p
 430,47: VARIABLE
 430,47: ->
 430,49: base
 430,53: VARIABLE
 430,53: ,
 430,55: nr_of_bytes
 430,66: VARIABLE
 430,66: )
 430,67: )
 430,69: !=
 430,72: nr_of_bytes
 430,83: VARIABLE
 430,83: )
 431,5: {
 432,7: file_p
 432,13: VARIABLE
 432,13: ->
 432,15: flag
 432,19: VARIABLE
 432,19: .
 432,20: _ERR
 432,24: VARIABLE
 432,25: =
 432,27: 1
 432,28: ;
 433,7: return
 433,14: (
 433,15: -
 433,16: 1
 433,17: )
 433,18: ;
 434,5: }
 435,3: }
 
320 { option_block_item_list } 
 428,3: {
 429,5: unsigned
 429,14: long
 429,19: nr_of_bytes
 429,30: VARIABLE
 429,31: =
 429,33: file_p
 429,39: VARIABLE
 429,39: ->
 429,41: next_char_pos_p
 429,56: VARIABLE
 429,57: -
 429,59: file_p
 429,65: VARIABLE
 429,65: ->
 429,67: base
 429,71: VARIABLE
 429,71: ;
 430,5: if
 430,8: (
 430,9: (
 430,10: write
 430,15: VARIABLE
 430,15: (
 430,16: file_p
 430,22: VARIABLE
 430,22: ->
 430,24: file_descriptor
 430,39: VARIABLE
 430,39: ,
 430,41: file_p
 430,47: VARIABLE
 430,47: ->
 430,49: base
 430,53: VARIABLE
 430,53: ,
 430,55: nr_of_bytes
 430,66: VARIABLE
 430,66: )
 430,67: )
 430,69: !=
 430,72: nr_of_bytes
 430,83: VARIABLE
 430,83: )
 431,5: {
 432,7: file_p
 432,13: VARIABLE
 432,13: ->
 432,15: flag
 432,19: VARIABLE
 432,19: .
 432,20: _ERR
 432,24: VARIABLE
 432,25: =
 432,27: 1
 432,28: ;
 433,7: return
 433,14: (
 433,15: -
 433,16: 1
 433,17: )
 433,18: ;
 434,5: }
 435,3: }
 
201 unsigned 
 429,5: unsigned
 
17 long 
 429,14: long
 
93 NAME VARIABLE 
 429,19: nr_of_bytes
 429,30: VARIABLE
 
65 VARIABLE 
 429,30: VARIABLE
 
59 = c_initializer 
 429,31: =
 429,33: file_p
 429,39: VARIABLE
 429,39: ->
 429,41: next_char_pos_p
 429,56: VARIABLE
 429,57: -
 429,59: file_p
 429,65: VARIABLE
 429,65: ->
 429,67: base
 429,71: VARIABLE
 
108 NAME VARIABLE 
 429,33: file_p
 429,39: VARIABLE
 
179 VARIABLE 
 429,39: VARIABLE
 
147 -> general_identifier 
 429,39: ->
 429,41: next_char_pos_p
 429,56: VARIABLE
 
238 NAME VARIABLE 
 429,41: next_char_pos_p
 429,56: VARIABLE
 
65 VARIABLE 
 429,56: VARIABLE
 
152 - 
 429,57: -
 
246 NAME VARIABLE 
 429,59: file_p
 429,65: VARIABLE
 
179 VARIABLE 
 429,65: VARIABLE
 
147 -> general_identifier 
 429,65: ->
 429,67: base
 429,71: VARIABLE
 
238 NAME VARIABLE 
 429,67: base
 429,71: VARIABLE
 
65 VARIABLE 
 429,71: VARIABLE
 
60 ; 
 429,71: ;
 
320 if ( expression ) scoped_statement 
 430,5: if
 430,8: (
 430,9: (
 430,10: write
 430,15: VARIABLE
 430,15: (
 430,16: file_p
 430,22: VARIABLE
 430,22: ->
 430,24: file_descriptor
 430,39: VARIABLE
 430,39: ,
 430,41: file_p
 430,47: VARIABLE
 430,47: ->
 430,49: base
 430,53: VARIABLE
 430,53: ,
 430,55: nr_of_bytes
 430,66: VARIABLE
 430,66: )
 430,67: )
 430,69: !=
 430,72: nr_of_bytes
 430,83: VARIABLE
 430,83: )
 431,5: {
 432,7: file_p
 432,13: VARIABLE
 432,13: ->
 432,15: flag
 432,19: VARIABLE
 432,19: .
 432,20: _ERR
 432,24: VARIABLE
 432,25: =
 432,27: 1
 432,28: ;
 433,7: return
 433,14: (
 433,15: -
 433,16: 1
 433,17: )
 433,18: ;
 434,5: }
 
404 ( expression ) scoped_statement 
 430,8: (
 430,9: (
 430,10: write
 430,15: VARIABLE
 430,15: (
 430,16: file_p
 430,22: VARIABLE
 430,22: ->
 430,24: file_descriptor
 430,39: VARIABLE
 430,39: ,
 430,41: file_p
 430,47: VARIABLE
 430,47: ->
 430,49: base
 430,53: VARIABLE
 430,53: ,
 430,55: nr_of_bytes
 430,66: VARIABLE
 430,66: )
 430,67: )
 430,69: !=
 430,72: nr_of_bytes
 430,83: VARIABLE
 430,83: )
 431,5: {
 432,7: file_p
 432,13: VARIABLE
 432,13: ->
 432,15: flag
 432,19: VARIABLE
 432,19: .
 432,20: _ERR
 432,24: VARIABLE
 432,25: =
 432,27: 1
 432,28: ;
 433,7: return
 433,14: (
 433,15: -
 433,16: 1
 433,17: )
 433,18: ;
 434,5: }
 
455 ( expression ) 
 430,9: (
 430,10: write
 430,15: VARIABLE
 430,15: (
 430,16: file_p
 430,22: VARIABLE
 430,22: ->
 430,24: file_descriptor
 430,39: VARIABLE
 430,39: ,
 430,41: file_p
 430,47: VARIABLE
 430,47: ->
 430,49: base
 430,53: VARIABLE
 430,53: ,
 430,55: nr_of_bytes
 430,66: VARIABLE
 430,66: )
 430,67: )
 
165 NAME VARIABLE 
 430,10: write
 430,15: VARIABLE
 
65 VARIABLE 
 430,15: VARIABLE
 
147 ( option_argument_expression_list ) 
 430,15: (
 430,16: file_p
 430,22: VARIABLE
 430,22: ->
 430,24: file_descriptor
 430,39: VARIABLE
 430,39: ,
 430,41: file_p
 430,47: VARIABLE
 430,47: ->
 430,49: base
 430,53: VARIABLE
 430,53: ,
 430,55: nr_of_bytes
 430,66: VARIABLE
 430,66: )
 
235 NAME VARIABLE 
 430,16: file_p
 430,22: VARIABLE
 
179 VARIABLE 
 430,22: VARIABLE
 
147 -> general_identifier 
 430,22: ->
 430,24: file_descriptor
 430,39: VARIABLE
 
238 NAME VARIABLE 
 430,24: file_descriptor
 430,39: VARIABLE
 
65 VARIABLE 
 430,39: VARIABLE
 
352 , assignment_expression 
 430,39: ,
 430,41: file_p
 430,47: VARIABLE
 430,47: ->
 430,49: base
 430,53: VARIABLE
 
429 NAME VARIABLE 
 430,41: file_p
 430,47: VARIABLE
 
179 VARIABLE 
 430,47: VARIABLE
 
147 -> general_identifier 
 430,47: ->
 430,49: base
 430,53: VARIABLE
 
238 NAME VARIABLE 
 430,49: base
 430,53: VARIABLE
 
65 VARIABLE 
 430,53: VARIABLE
 
352 , assignment_expression 
 430,53: ,
 430,55: nr_of_bytes
 430,66: VARIABLE
 
429 NAME VARIABLE 
 430,55: nr_of_bytes
 430,66: VARIABLE
 
179 VARIABLE 
 430,66: VARIABLE
 
351 ) 
 430,66: )
 
267 ) 
 430,67: )
 
155 != 
 430,69: !=
 
257 NAME VARIABLE 
 430,72: nr_of_bytes
 430,83: VARIABLE
 
179 VARIABLE 
 430,83: VARIABLE
 
483 ) scoped_statement 
 430,83: )
 431,5: {
 432,7: file_p
 432,13: VARIABLE
 432,13: ->
 432,15: flag
 432,19: VARIABLE
 432,19: .
 432,20: _ERR
 432,24: VARIABLE
 432,25: =
 432,27: 1
 432,28: ;
 433,7: return
 433,14: (
 433,15: -
 433,16: 1
 433,17: )
 433,18: ;
 434,5: }
 
320 { option_block_item_list } 
 431,5: {
 432,7: file_p
 432,13: VARIABLE
 432,13: ->
 432,15: flag
 432,19: VARIABLE
 432,19: .
 432,20: _ERR
 432,24: VARIABLE
 432,25: =
 432,27: 1
 432,28: ;
 433,7: return
 433,14: (
 433,15: -
 433,16: 1
 433,17: )
 433,18: ;
 434,5: }
 
201 NAME VARIABLE 
 432,7: file_p
 432,13: VARIABLE
 
65 VARIABLE 
 432,13: VARIABLE
 
147 -> general_identifier 
 432,13: ->
 432,15: flag
 432,19: VARIABLE
 
238 NAME VARIABLE 
 432,15: flag
 432,19: VARIABLE
 
65 VARIABLE 
 432,19: VARIABLE
 
147 . general_identifier 
 432,19: .
 432,20: _ERR
 432,24: VARIABLE
 
237 NAME VARIABLE 
 432,20: _ERR
 432,24: VARIABLE
 
65 VARIABLE 
 432,24: VARIABLE
 
181 = 
 432,25: =
 
279 CONSTANT 
 432,27: 1
 
331 ; 
 432,28: ;
 
201 return option_expression ; 
 433,7: return
 433,14: (
 433,15: -
 433,16: 1
 433,17: )
 433,18: ;
 
338 ( expression ) 
 433,14: (
 433,15: -
 433,16: 1
 433,17: )
 
165 - 
 433,15: -
 
149 CONSTANT 
 433,16: 1
 
267 ) 
 433,17: )
 
415 ; 
 433,18: ;
 
201 } 
 434,5: }
 
201 } 
 435,3: }
 
201 NAME VARIABLE 
 437,3: file_p
 437,9: VARIABLE
 
65 VARIABLE 
 437,9: VARIABLE
 
147 -> general_identifier 
 437,9: ->
 437,11: next_char_pos_p
 437,26: VARIABLE
 
238 NAME VARIABLE 
 437,11: next_char_pos_p
 437,26: VARIABLE
 
65 VARIABLE 
 437,26: VARIABLE
 
181 = 
 437,27: =
 
279 NAME VARIABLE 
 437,29: file_p
 437,35: VARIABLE
 
179 VARIABLE 
 437,35: VARIABLE
 
147 -> general_identifier 
 437,35: ->
 437,37: base
 437,41: VARIABLE
 
238 NAME VARIABLE 
 437,37: base
 437,41: VARIABLE
 
65 VARIABLE 
 437,41: VARIABLE
 
331 ; 
 437,41: ;
 
201 * 
 438,3: *
 
149 NAME VARIABLE 
 438,4: file_p
 438,10: VARIABLE
 
179 VARIABLE 
 438,10: VARIABLE
 
147 -> general_identifier 
 438,10: ->
 438,12: next_char_pos_p
 438,27: VARIABLE
 
238 NAME VARIABLE 
 438,12: next_char_pos_p
 438,27: VARIABLE
 
65 VARIABLE 
 438,27: VARIABLE
 
147 ++ 
 438,27: ++
 
181 = 
 438,30: =
 
279 NAME VARIABLE 
 438,32: c
 438,33: VARIABLE
 
179 VARIABLE 
 438,33: VARIABLE
 
331 ; 
 438,33: ;
 
201 NAME VARIABLE 
 439,3: file_p
 439,9: VARIABLE
 
65 VARIABLE 
 439,9: VARIABLE
 
147 -> general_identifier 
 439,9: ->
 439,11: counter
 439,18: VARIABLE
 
238 NAME VARIABLE 
 439,11: counter
 439,18: VARIABLE
 
65 VARIABLE 
 439,18: VARIABLE
 
181 = 
 439,19: =
 
279 NAME VARIABLE 
 439,21: buffer_size
 439,32: VARIABLE
 
179 VARIABLE 
 439,32: VARIABLE
 
152 - 
 439,33: -
 
246 CONSTANT 
 439,35: 1
 
331 ; 
 439,36: ;
 
201 return option_expression ; 
 441,3: return
 441,10: c
 441,11: VARIABLE
 441,11: ;
 
338 NAME VARIABLE 
 441,10: c
 441,11: VARIABLE
 
179 VARIABLE 
 441,11: VARIABLE
 
415 ; 
 441,11: ;
 
201 } 
 442,1: }
 
23 int 
 444,1: int
 
5 NAME VARIABLE 
 444,5: file_flush
 444,15: VARIABLE
 
65 VARIABLE 
 444,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 444,15: (
 444,16: FILE
 444,20: TYPE
 444,21: *
 444,22: file_p
 444,28: VARIABLE
 444,28: )
 
186 NAME TYPE 
 444,16: FILE
 444,20: TYPE
 
65 TYPE 
 444,20: TYPE
 
298 * option_type_qualifier_list option_pointer 
 444,21: *
 
386 NAME VARIABLE 
 444,22: file_p
 444,28: VARIABLE
 
65 VARIABLE 
 444,28: VARIABLE
 
187 ) 
 444,28: )
 
94 { option_block_item_list } 
 445,1: {
 446,3: if
 446,6: (
 446,7: file_p
 446,13: VARIABLE
 446,13: ->
 446,15: flag
 446,19: VARIABLE
 446,19: .
 446,20: _WRITE
 446,26: VARIABLE
 446,27: ==
 446,30: 0
 446,31: )
 447,3: {
 448,5: file_p
 448,11: VARIABLE
 448,11: ->
 448,13: flag
 448,17: VARIABLE
 448,17: .
 448,18: _ERR
 448,22: VARIABLE
 448,23: =
 448,25: 1
 448,26: ;
 449,5: return
 449,12: (
 449,13: -
 449,14: 1
 449,15: )
 449,16: ;
 450,3: }
 452,3: if
 452,6: (
 452,7: _flush_buffer
 452,20: VARIABLE
 452,20: (
 452,21: '0'
 452,24: ,
 452,26: file_p
 452,32: VARIABLE
 452,32: )
 452,34: ==
 452,37: (
 452,38: -
 452,39: 1
 452,40: )
 452,41: )
 453,3: {
 454,5: return
 454,12: (
 454,13: -
 454,14: 1
 454,15: )
 454,16: ;
 455,3: }
 457,3: file_p
 457,9: VARIABLE
 457,9: ->
 457,11: next_char_pos_p
 457,26: VARIABLE
 457,27: =
 457,29: file_p
 457,35: VARIABLE
 457,35: ->
 457,37: base
 457,41: VARIABLE
 457,41: ;
 458,3: file_p
 458,9: VARIABLE
 458,9: ->
 458,11: counter
 458,18: VARIABLE
 458,19: =
 458,21: (
 458,22: file_p
 458,28: VARIABLE
 458,28: ->
 458,30: flag
 458,34: VARIABLE
 458,34: .
 458,35: _UNBUF
 458,41: VARIABLE
 458,42: ==
 458,45: 1
 458,46: )
 458,48: ?
 458,50: 1
 458,52: :
 458,54: 1024
 458,58: ;
 460,3: return
 460,10: 0
 460,11: ;
 461,1: }
 
320 if ( expression ) scoped_statement 
 446,3: if
 446,6: (
 446,7: file_p
 446,13: VARIABLE
 446,13: ->
 446,15: flag
 446,19: VARIABLE
 446,19: .
 446,20: _WRITE
 446,26: VARIABLE
 446,27: ==
 446,30: 0
 446,31: )
 447,3: {
 448,5: file_p
 448,11: VARIABLE
 448,11: ->
 448,13: flag
 448,17: VARIABLE
 448,17: .
 448,18: _ERR
 448,22: VARIABLE
 448,23: =
 448,25: 1
 448,26: ;
 449,5: return
 449,12: (
 449,13: -
 449,14: 1
 449,15: )
 449,16: ;
 450,3: }
 
404 ( expression ) scoped_statement 
 446,6: (
 446,7: file_p
 446,13: VARIABLE
 446,13: ->
 446,15: flag
 446,19: VARIABLE
 446,19: .
 446,20: _WRITE
 446,26: VARIABLE
 446,27: ==
 446,30: 0
 446,31: )
 447,3: {
 448,5: file_p
 448,11: VARIABLE
 448,11: ->
 448,13: flag
 448,17: VARIABLE
 448,17: .
 448,18: _ERR
 448,22: VARIABLE
 448,23: =
 448,25: 1
 448,26: ;
 449,5: return
 449,12: (
 449,13: -
 449,14: 1
 449,15: )
 449,16: ;
 450,3: }
 
455 NAME VARIABLE 
 446,7: file_p
 446,13: VARIABLE
 
179 VARIABLE 
 446,13: VARIABLE
 
147 -> general_identifier 
 446,13: ->
 446,15: flag
 446,19: VARIABLE
 
238 NAME VARIABLE 
 446,15: flag
 446,19: VARIABLE
 
65 VARIABLE 
 446,19: VARIABLE
 
147 . general_identifier 
 446,19: .
 446,20: _WRITE
 446,26: VARIABLE
 
237 NAME VARIABLE 
 446,20: _WRITE
 446,26: VARIABLE
 
65 VARIABLE 
 446,26: VARIABLE
 
155 == 
 446,27: ==
 
257 CONSTANT 
 446,30: 0
 
483 ) scoped_statement 
 446,31: )
 447,3: {
 448,5: file_p
 448,11: VARIABLE
 448,11: ->
 448,13: flag
 448,17: VARIABLE
 448,17: .
 448,18: _ERR
 448,22: VARIABLE
 448,23: =
 448,25: 1
 448,26: ;
 449,5: return
 449,12: (
 449,13: -
 449,14: 1
 449,15: )
 449,16: ;
 450,3: }
 
320 { option_block_item_list } 
 447,3: {
 448,5: file_p
 448,11: VARIABLE
 448,11: ->
 448,13: flag
 448,17: VARIABLE
 448,17: .
 448,18: _ERR
 448,22: VARIABLE
 448,23: =
 448,25: 1
 448,26: ;
 449,5: return
 449,12: (
 449,13: -
 449,14: 1
 449,15: )
 449,16: ;
 450,3: }
 
201 NAME VARIABLE 
 448,5: file_p
 448,11: VARIABLE
 
65 VARIABLE 
 448,11: VARIABLE
 
147 -> general_identifier 
 448,11: ->
 448,13: flag
 448,17: VARIABLE
 
238 NAME VARIABLE 
 448,13: flag
 448,17: VARIABLE
 
65 VARIABLE 
 448,17: VARIABLE
 
147 . general_identifier 
 448,17: .
 448,18: _ERR
 448,22: VARIABLE
 
237 NAME VARIABLE 
 448,18: _ERR
 448,22: VARIABLE
 
65 VARIABLE 
 448,22: VARIABLE
 
181 = 
 448,23: =
 
279 CONSTANT 
 448,25: 1
 
331 ; 
 448,26: ;
 
201 return option_expression ; 
 449,5: return
 449,12: (
 449,13: -
 449,14: 1
 449,15: )
 449,16: ;
 
338 ( expression ) 
 449,12: (
 449,13: -
 449,14: 1
 449,15: )
 
165 - 
 449,13: -
 
149 CONSTANT 
 449,14: 1
 
267 ) 
 449,15: )
 
415 ; 
 449,16: ;
 
201 } 
 450,3: }
 
320 if ( expression ) scoped_statement 
 452,3: if
 452,6: (
 452,7: _flush_buffer
 452,20: VARIABLE
 452,20: (
 452,21: '0'
 452,24: ,
 452,26: file_p
 452,32: VARIABLE
 452,32: )
 452,34: ==
 452,37: (
 452,38: -
 452,39: 1
 452,40: )
 452,41: )
 453,3: {
 454,5: return
 454,12: (
 454,13: -
 454,14: 1
 454,15: )
 454,16: ;
 455,3: }
 
404 ( expression ) scoped_statement 
 452,6: (
 452,7: _flush_buffer
 452,20: VARIABLE
 452,20: (
 452,21: '0'
 452,24: ,
 452,26: file_p
 452,32: VARIABLE
 452,32: )
 452,34: ==
 452,37: (
 452,38: -
 452,39: 1
 452,40: )
 452,41: )
 453,3: {
 454,5: return
 454,12: (
 454,13: -
 454,14: 1
 454,15: )
 454,16: ;
 455,3: }
 
455 NAME VARIABLE 
 452,7: _flush_buffer
 452,20: VARIABLE
 
179 VARIABLE 
 452,20: VARIABLE
 
147 ( option_argument_expression_list ) 
 452,20: (
 452,21: '0'
 452,24: ,
 452,26: file_p
 452,32: VARIABLE
 452,32: )
 
235 CONSTANT 
 452,21: '0'
 
352 , assignment_expression 
 452,24: ,
 452,26: file_p
 452,32: VARIABLE
 
429 NAME VARIABLE 
 452,26: file_p
 452,32: VARIABLE
 
179 VARIABLE 
 452,32: VARIABLE
 
351 ) 
 452,32: )
 
155 == 
 452,34: ==
 
257 ( expression ) 
 452,37: (
 452,38: -
 452,39: 1
 452,40: )
 
165 - 
 452,38: -
 
149 CONSTANT 
 452,39: 1
 
267 ) 
 452,40: )
 
483 ) scoped_statement 
 452,41: )
 453,3: {
 454,5: return
 454,12: (
 454,13: -
 454,14: 1
 454,15: )
 454,16: ;
 455,3: }
 
320 { option_block_item_list } 
 453,3: {
 454,5: return
 454,12: (
 454,13: -
 454,14: 1
 454,15: )
 454,16: ;
 455,3: }
 
201 return option_expression ; 
 454,5: return
 454,12: (
 454,13: -
 454,14: 1
 454,15: )
 454,16: ;
 
338 ( expression ) 
 454,12: (
 454,13: -
 454,14: 1
 454,15: )
 
165 - 
 454,13: -
 
149 CONSTANT 
 454,14: 1
 
267 ) 
 454,15: )
 
415 ; 
 454,16: ;
 
201 } 
 455,3: }
 
201 NAME VARIABLE 
 457,3: file_p
 457,9: VARIABLE
 
65 VARIABLE 
 457,9: VARIABLE
 
147 -> general_identifier 
 457,9: ->
 457,11: next_char_pos_p
 457,26: VARIABLE
 
238 NAME VARIABLE 
 457,11: next_char_pos_p
 457,26: VARIABLE
 
65 VARIABLE 
 457,26: VARIABLE
 
181 = 
 457,27: =
 
279 NAME VARIABLE 
 457,29: file_p
 457,35: VARIABLE
 
179 VARIABLE 
 457,35: VARIABLE
 
147 -> general_identifier 
 457,35: ->
 457,37: base
 457,41: VARIABLE
 
238 NAME VARIABLE 
 457,37: base
 457,41: VARIABLE
 
65 VARIABLE 
 457,41: VARIABLE
 
331 ; 
 457,41: ;
 
201 NAME VARIABLE 
 458,3: file_p
 458,9: VARIABLE
 
65 VARIABLE 
 458,9: VARIABLE
 
147 -> general_identifier 
 458,9: ->
 458,11: counter
 458,18: VARIABLE
 
238 NAME VARIABLE 
 458,11: counter
 458,18: VARIABLE
 
65 VARIABLE 
 458,18: VARIABLE
 
181 = 
 458,19: =
 
279 ( expression ) 
 458,21: (
 458,22: file_p
 458,28: VARIABLE
 458,28: ->
 458,30: flag
 458,34: VARIABLE
 458,34: .
 458,35: _UNBUF
 458,41: VARIABLE
 458,42: ==
 458,45: 1
 458,46: )
 
165 NAME VARIABLE 
 458,22: file_p
 458,28: VARIABLE
 
65 VARIABLE 
 458,28: VARIABLE
 
147 -> general_identifier 
 458,28: ->
 458,30: flag
 458,34: VARIABLE
 
238 NAME VARIABLE 
 458,30: flag
 458,34: VARIABLE
 
65 VARIABLE 
 458,34: VARIABLE
 
147 . general_identifier 
 458,34: .
 458,35: _UNBUF
 458,41: VARIABLE
 
237 NAME VARIABLE 
 458,35: _UNBUF
 458,41: VARIABLE
 
65 VARIABLE 
 458,41: VARIABLE
 
155 == 
 458,42: ==
 
257 CONSTANT 
 458,45: 1
 
267 ) 
 458,46: )
 
160 ? expression : conditional_expression 
 458,48: ?
 458,50: 1
 458,52: :
 458,54: 1024
 
265 CONSTANT 
 458,50: 1
 
366 : conditional_expression 
 458,52: :
 458,54: 1024
 
431 CONSTANT 
 458,54: 1024
 
331 ; 
 458,58: ;
 
201 return option_expression ; 
 460,3: return
 460,10: 0
 460,11: ;
 
338 CONSTANT 
 460,10: 0
 
415 ; 
 460,11: ;
 
201 } 
 461,1: }
 
23 NAME TYPE 
 463,1: FILE
 463,5: TYPE
 
26 TYPE 
 463,5: TYPE
 
5 * option_type_qualifier_list option_pointer 
 463,6: *
 
64 NAME VARIABLE 
 463,7: file_open
 463,16: VARIABLE
 
65 VARIABLE 
 463,16: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 463,16: (
 463,17: char
 463,22: *
 463,23: name
 463,27: VARIABLE
 463,27: ,
 463,29: char
 463,34: *
 463,35: mode
 463,39: VARIABLE
 463,39: )
 
186 char 
 463,17: char
 
298 * option_type_qualifier_list option_pointer 
 463,22: *
 
386 NAME VARIABLE 
 463,23: name
 463,27: VARIABLE
 
65 VARIABLE 
 463,27: VARIABLE
 
300 , parameter_declaration 
 463,27: ,
 463,29: char
 463,34: *
 463,35: mode
 463,39: VARIABLE
 
391 char 
 463,29: char
 
298 * option_type_qualifier_list option_pointer 
 463,34: *
 
386 NAME VARIABLE 
 463,35: mode
 463,39: VARIABLE
 
65 VARIABLE 
 463,39: VARIABLE
 
187 ) 
 463,39: )
 
94 { option_block_item_list } 
 464,1: {
 465,3: int
 465,7: file_descriptor
 465,22: VARIABLE
 465,22: ;
 466,3: FILE
 466,7: TYPE
 466,8: *
 466,9: file_p
 466,15: VARIABLE
 466,15: ;
 468,3: if
 468,6: (
 468,7: *
 468,8: mode
 468,12: VARIABLE
 468,13: !=
 468,16: 'r'
 468,20: &&
 468,23: *
 468,24: mode
 468,28: VARIABLE
 468,29: !=
 468,32: 'w'
 468,36: &&
 468,39: *
 468,40: mode
 468,44: VARIABLE
 468,45: !=
 468,48: 'a'
 468,51: )
 469,3: {
 470,5: return
 470,12: 0
 470,13: ;
 471,3: }
 473,3: for
 473,7: (
 473,8: file_p
 473,14: VARIABLE
 473,15: =
 473,17: _io_buffer
 473,27: VARIABLE
 473,27: ;
 473,29: file_p
 473,35: VARIABLE
 473,36: <
 473,38: _io_buffer
 473,48: VARIABLE
 473,49: +
 473,51: 20
 473,53: ;
 473,55: ++
 473,57: file_p
 473,63: VARIABLE
 473,63: )
 474,3: {
 475,5: if
 475,8: (
 475,9: file_p
 475,15: VARIABLE
 475,15: ->
 475,17: flag
 475,21: VARIABLE
 475,21: .
 475,22: _READ
 475,27: VARIABLE
 475,28: ==
 475,31: 0
 475,33: &&
 475,36: file_p
 475,42: VARIABLE
 475,42: ->
 475,44: flag
 475,48: VARIABLE
 475,48: .
 475,49: _WRITE
 475,55: VARIABLE
 475,56: ==
 475,59: 0
 475,60: )
 476,5: {
 477,7: break
 477,12: ;
 478,5: }
 479,3: }
 481,3: if
 481,6: (
 481,7: file_p
 481,13: VARIABLE
 481,14: >=
 481,17: _io_buffer
 481,27: VARIABLE
 481,28: +
 481,30: 20
 481,32: )
 482,3: {
 483,5: return
 483,12: 0
 483,13: ;
 484,3: }
 486,3: if
 486,6: (
 486,7: *
 486,8: mode
 486,12: VARIABLE
 486,13: ==
 486,16: 'w'
 486,19: )
 487,3: {
 488,5: file_descriptor
 488,20: VARIABLE
 488,21: =
 488,23: creat
 488,28: VARIABLE
 488,28: (
 488,29: name
 488,33: VARIABLE
 488,33: ,
 488,35: 0666
 488,39: )
 488,40: ;
 489,3: }
 490,3: else
 490,8: if
 490,11: (
 490,12: *
 490,13: mode
 490,17: VARIABLE
 490,18: ==
 490,21: 'a'
 490,24: )
 491,3: {
 492,5: if
 492,8: (
 492,9: (
 492,10: file_descriptor
 492,25: VARIABLE
 492,26: =
 492,28: open
 492,32: VARIABLE
 492,32: (
 492,33: name
 492,37: VARIABLE
 492,37: ,
 494,38: 01
 496,46: ,
 496,48: 0
 496,49: )
 496,50: )
 496,52: ==
 496,55: -
 496,56: 1
 496,57: )
 497,5: {
 498,7: file_descriptor
 498,22: VARIABLE
 498,23: =
 498,25: creat
 498,30: VARIABLE
 498,30: (
 498,31: name
 498,35: VARIABLE
 498,35: ,
 498,37: 0666
 498,41: )
 498,42: ;
 499,5: }
 500,5: lseek
 500,10: VARIABLE
 500,10: (
 500,11: file_descriptor
 500,26: VARIABLE
 500,26: ,
 500,28: 0L
 500,30: ,
 500,32: 2
 500,33: )
 500,34: ;
 501,3: }
 502,3: else
 503,3: {
 504,5: file_descriptor
 504,20: VARIABLE
 504,21: =
 504,23: open
 504,27: VARIABLE
 504,27: (
 504,28: name
 504,32: VARIABLE
 504,32: ,
 506,33: 00
 508,41: ,
 508,43: 0
 508,44: )
 508,45: ;
 509,3: }
 511,3: if
 511,6: (
 511,7: file_descriptor
 511,22: VARIABLE
 511,23: ==
 511,26: -
 511,27: 1
 511,28: )
 512,3: {
 513,5: return
 513,12: 0
 513,13: ;
 514,3: }
 516,3: file_p
 516,9: VARIABLE
 516,9: ->
 516,11: file_descriptor
 516,26: VARIABLE
 516,27: =
 516,29: file_descriptor
 516,44: VARIABLE
 516,44: ;
 517,3: file_p
 517,9: VARIABLE
 517,9: ->
 517,11: counter
 517,18: VARIABLE
 517,19: =
 517,21: 0
 517,22: ;
 518,3: file_p
 518,9: VARIABLE
 518,9: ->
 518,11: base
 518,15: VARIABLE
 518,16: =
 518,18: 0
 518,19: ;
 519,3: file_p
 519,9: VARIABLE
 519,9: ->
 519,11: flag
 519,15: VARIABLE
 519,15: .
 519,16: _EOF
 519,20: VARIABLE
 519,21: =
 519,23: 0
 519,24: ;
 520,3: file_p
 520,9: VARIABLE
 520,9: ->
 520,11: flag
 520,15: VARIABLE
 520,15: .
 520,16: _ERR
 520,20: VARIABLE
 520,21: =
 520,23: 0
 520,24: ;
 521,3: file_p
 521,9: VARIABLE
 521,9: ->
 521,11: flag
 521,15: VARIABLE
 521,15: .
 521,16: _READ
 521,21: VARIABLE
 521,22: =
 521,24: (
 521,25: *
 521,26: mode
 521,30: VARIABLE
 521,31: ==
 521,34: 'r'
 521,37: )
 521,39: ?
 521,41: 1
 521,43: :
 521,45: 0
 521,46: ;
 522,3: file_p
 522,9: VARIABLE
 522,9: ->
 522,11: flag
 522,15: VARIABLE
 522,15: .
 522,16: _WRITE
 522,22: VARIABLE
 522,23: =
 522,25: (
 522,26: *
 522,27: mode
 522,31: VARIABLE
 522,32: ==
 522,35: 'r'
 522,38: )
 522,40: ?
 522,42: 0
 522,44: :
 522,46: 1
 522,47: ;
 524,3: return
 524,10: file_p
 524,16: VARIABLE
 524,16: ;
 525,1: }
 
201 int 
 465,3: int
 
93 NAME VARIABLE 
 465,7: file_descriptor
 465,22: VARIABLE
 
65 VARIABLE 
 465,22: VARIABLE
 
60 ; 
 465,22: ;
 
201 NAME TYPE 
 466,3: FILE
 466,7: TYPE
 
65 TYPE 
 466,7: TYPE
 
93 * option_type_qualifier_list option_pointer 
 466,8: *
 
64 NAME VARIABLE 
 466,9: file_p
 466,15: VARIABLE
 
65 VARIABLE 
 466,15: VARIABLE
 
60 ; 
 466,15: ;
 
320 if ( expression ) scoped_statement 
 468,3: if
 468,6: (
 468,7: *
 468,8: mode
 468,12: VARIABLE
 468,13: !=
 468,16: 'r'
 468,20: &&
 468,23: *
 468,24: mode
 468,28: VARIABLE
 468,29: !=
 468,32: 'w'
 468,36: &&
 468,39: *
 468,40: mode
 468,44: VARIABLE
 468,45: !=
 468,48: 'a'
 468,51: )
 469,3: {
 470,5: return
 470,12: 0
 470,13: ;
 471,3: }
 
404 ( expression ) scoped_statement 
 468,6: (
 468,7: *
 468,8: mode
 468,12: VARIABLE
 468,13: !=
 468,16: 'r'
 468,20: &&
 468,23: *
 468,24: mode
 468,28: VARIABLE
 468,29: !=
 468,32: 'w'
 468,36: &&
 468,39: *
 468,40: mode
 468,44: VARIABLE
 468,45: !=
 468,48: 'a'
 468,51: )
 469,3: {
 470,5: return
 470,12: 0
 470,13: ;
 471,3: }
 
455 * 
 468,7: *
 
149 NAME VARIABLE 
 468,8: mode
 468,12: VARIABLE
 
179 VARIABLE 
 468,12: VARIABLE
 
155 != 
 468,13: !=
 
257 CONSTANT 
 468,16: 'r'
 
159 && inclusive_or_expression 
 468,20: &&
 468,23: *
 468,24: mode
 468,28: VARIABLE
 468,29: !=
 468,32: 'w'
 
263 * 
 468,23: *
 
149 NAME VARIABLE 
 468,24: mode
 468,28: VARIABLE
 
179 VARIABLE 
 468,28: VARIABLE
 
155 != 
 468,29: !=
 
257 CONSTANT 
 468,32: 'w'
 
159 && inclusive_or_expression 
 468,36: &&
 468,39: *
 468,40: mode
 468,44: VARIABLE
 468,45: !=
 468,48: 'a'
 
263 * 
 468,39: *
 
149 NAME VARIABLE 
 468,40: mode
 468,44: VARIABLE
 
179 VARIABLE 
 468,44: VARIABLE
 
155 != 
 468,45: !=
 
257 CONSTANT 
 468,48: 'a'
 
483 ) scoped_statement 
 468,51: )
 469,3: {
 470,5: return
 470,12: 0
 470,13: ;
 471,3: }
 
320 { option_block_item_list } 
 469,3: {
 470,5: return
 470,12: 0
 470,13: ;
 471,3: }
 
201 return option_expression ; 
 470,5: return
 470,12: 0
 470,13: ;
 
338 CONSTANT 
 470,12: 0
 
415 ; 
 470,13: ;
 
201 } 
 471,3: }
 
320 for ( option_expression ; option_expression ; option_expression ) scoped_statement 
 473,3: for
 473,7: (
 473,8: file_p
 473,14: VARIABLE
 473,15: =
 473,17: _io_buffer
 473,27: VARIABLE
 473,27: ;
 473,29: file_p
 473,35: VARIABLE
 473,36: <
 473,38: _io_buffer
 473,48: VARIABLE
 473,49: +
 473,51: 20
 473,53: ;
 473,55: ++
 473,57: file_p
 473,63: VARIABLE
 473,63: )
 474,3: {
 475,5: if
 475,8: (
 475,9: file_p
 475,15: VARIABLE
 475,15: ->
 475,17: flag
 475,21: VARIABLE
 475,21: .
 475,22: _READ
 475,27: VARIABLE
 475,28: ==
 475,31: 0
 475,33: &&
 475,36: file_p
 475,42: VARIABLE
 475,42: ->
 475,44: flag
 475,48: VARIABLE
 475,48: .
 475,49: _WRITE
 475,55: VARIABLE
 475,56: ==
 475,59: 0
 475,60: )
 476,5: {
 477,7: break
 477,12: ;
 478,5: }
 479,3: }
 
408 ( option_expression ; option_expression ; option_expression ) scoped_statement 
 473,7: (
 473,8: file_p
 473,14: VARIABLE
 473,15: =
 473,17: _io_buffer
 473,27: VARIABLE
 473,27: ;
 473,29: file_p
 473,35: VARIABLE
 473,36: <
 473,38: _io_buffer
 473,48: VARIABLE
 473,49: +
 473,51: 20
 473,53: ;
 473,55: ++
 473,57: file_p
 473,63: VARIABLE
 473,63: )
 474,3: {
 475,5: if
 475,8: (
 475,9: file_p
 475,15: VARIABLE
 475,15: ->
 475,17: flag
 475,21: VARIABLE
 475,21: .
 475,22: _READ
 475,27: VARIABLE
 475,28: ==
 475,31: 0
 475,33: &&
 475,36: file_p
 475,42: VARIABLE
 475,42: ->
 475,44: flag
 475,48: VARIABLE
 475,48: .
 475,49: _WRITE
 475,55: VARIABLE
 475,56: ==
 475,59: 0
 475,60: )
 476,5: {
 477,7: break
 477,12: ;
 478,5: }
 479,3: }
 
460 NAME VARIABLE 
 473,8: file_p
 473,14: VARIABLE
 
65 VARIABLE 
 473,14: VARIABLE
 
181 = 
 473,15: =
 
279 NAME VARIABLE 
 473,17: _io_buffer
 473,27: VARIABLE
 
179 VARIABLE 
 473,27: VARIABLE
 
489 ; option_expression ; option_expression ) scoped_statement 
 473,27: ;
 473,29: file_p
 473,35: VARIABLE
 473,36: <
 473,38: _io_buffer
 473,48: VARIABLE
 473,49: +
 473,51: 20
 473,53: ;
 473,55: ++
 473,57: file_p
 473,63: VARIABLE
 473,63: )
 474,3: {
 475,5: if
 475,8: (
 475,9: file_p
 475,15: VARIABLE
 475,15: ->
 475,17: flag
 475,21: VARIABLE
 475,21: .
 475,22: _READ
 475,27: VARIABLE
 475,28: ==
 475,31: 0
 475,33: &&
 475,36: file_p
 475,42: VARIABLE
 475,42: ->
 475,44: flag
 475,48: VARIABLE
 475,48: .
 475,49: _WRITE
 475,55: VARIABLE
 475,56: ==
 475,59: 0
 475,60: )
 476,5: {
 477,7: break
 477,12: ;
 478,5: }
 479,3: }
 
505 NAME VARIABLE 
 473,29: file_p
 473,35: VARIABLE
 
179 VARIABLE 
 473,35: VARIABLE
 
154 < 
 473,36: <
 
252 NAME VARIABLE 
 473,38: _io_buffer
 473,48: VARIABLE
 
179 VARIABLE 
 473,48: VARIABLE
 
152 + 
 473,49: +
 
246 CONSTANT 
 473,51: 20
 
517 ; option_expression ) scoped_statement 
 473,53: ;
 473,55: ++
 473,57: file_p
 473,63: VARIABLE
 473,63: )
 474,3: {
 475,5: if
 475,8: (
 475,9: file_p
 475,15: VARIABLE
 475,15: ->
 475,17: flag
 475,21: VARIABLE
 475,21: .
 475,22: _READ
 475,27: VARIABLE
 475,28: ==
 475,31: 0
 475,33: &&
 475,36: file_p
 475,42: VARIABLE
 475,42: ->
 475,44: flag
 475,48: VARIABLE
 475,48: .
 475,49: _WRITE
 475,55: VARIABLE
 475,56: ==
 475,59: 0
 475,60: )
 476,5: {
 477,7: break
 477,12: ;
 478,5: }
 479,3: }
 
521 ++ unary_expression 
 473,55: ++
 473,57: file_p
 473,63: VARIABLE
 
168 NAME VARIABLE 
 473,57: file_p
 473,63: VARIABLE
 
179 VARIABLE 
 473,63: VARIABLE
 
525 ) scoped_statement 
 473,63: )
 474,3: {
 475,5: if
 475,8: (
 475,9: file_p
 475,15: VARIABLE
 475,15: ->
 475,17: flag
 475,21: VARIABLE
 475,21: .
 475,22: _READ
 475,27: VARIABLE
 475,28: ==
 475,31: 0
 475,33: &&
 475,36: file_p
 475,42: VARIABLE
 475,42: ->
 475,44: flag
 475,48: VARIABLE
 475,48: .
 475,49: _WRITE
 475,55: VARIABLE
 475,56: ==
 475,59: 0
 475,60: )
 476,5: {
 477,7: break
 477,12: ;
 478,5: }
 479,3: }
 
320 { option_block_item_list } 
 474,3: {
 475,5: if
 475,8: (
 475,9: file_p
 475,15: VARIABLE
 475,15: ->
 475,17: flag
 475,21: VARIABLE
 475,21: .
 475,22: _READ
 475,27: VARIABLE
 475,28: ==
 475,31: 0
 475,33: &&
 475,36: file_p
 475,42: VARIABLE
 475,42: ->
 475,44: flag
 475,48: VARIABLE
 475,48: .
 475,49: _WRITE
 475,55: VARIABLE
 475,56: ==
 475,59: 0
 475,60: )
 476,5: {
 477,7: break
 477,12: ;
 478,5: }
 479,3: }
 
320 if ( expression ) scoped_statement 
 475,5: if
 475,8: (
 475,9: file_p
 475,15: VARIABLE
 475,15: ->
 475,17: flag
 475,21: VARIABLE
 475,21: .
 475,22: _READ
 475,27: VARIABLE
 475,28: ==
 475,31: 0
 475,33: &&
 475,36: file_p
 475,42: VARIABLE
 475,42: ->
 475,44: flag
 475,48: VARIABLE
 475,48: .
 475,49: _WRITE
 475,55: VARIABLE
 475,56: ==
 475,59: 0
 475,60: )
 476,5: {
 477,7: break
 477,12: ;
 478,5: }
 
404 ( expression ) scoped_statement 
 475,8: (
 475,9: file_p
 475,15: VARIABLE
 475,15: ->
 475,17: flag
 475,21: VARIABLE
 475,21: .
 475,22: _READ
 475,27: VARIABLE
 475,28: ==
 475,31: 0
 475,33: &&
 475,36: file_p
 475,42: VARIABLE
 475,42: ->
 475,44: flag
 475,48: VARIABLE
 475,48: .
 475,49: _WRITE
 475,55: VARIABLE
 475,56: ==
 475,59: 0
 475,60: )
 476,5: {
 477,7: break
 477,12: ;
 478,5: }
 
455 NAME VARIABLE 
 475,9: file_p
 475,15: VARIABLE
 
179 VARIABLE 
 475,15: VARIABLE
 
147 -> general_identifier 
 475,15: ->
 475,17: flag
 475,21: VARIABLE
 
238 NAME VARIABLE 
 475,17: flag
 475,21: VARIABLE
 
65 VARIABLE 
 475,21: VARIABLE
 
147 . general_identifier 
 475,21: .
 475,22: _READ
 475,27: VARIABLE
 
237 NAME VARIABLE 
 475,22: _READ
 475,27: VARIABLE
 
65 VARIABLE 
 475,27: VARIABLE
 
155 == 
 475,28: ==
 
257 CONSTANT 
 475,31: 0
 
159 && inclusive_or_expression 
 475,33: &&
 475,36: file_p
 475,42: VARIABLE
 475,42: ->
 475,44: flag
 475,48: VARIABLE
 475,48: .
 475,49: _WRITE
 475,55: VARIABLE
 475,56: ==
 475,59: 0
 
263 NAME VARIABLE 
 475,36: file_p
 475,42: VARIABLE
 
179 VARIABLE 
 475,42: VARIABLE
 
147 -> general_identifier 
 475,42: ->
 475,44: flag
 475,48: VARIABLE
 
238 NAME VARIABLE 
 475,44: flag
 475,48: VARIABLE
 
65 VARIABLE 
 475,48: VARIABLE
 
147 . general_identifier 
 475,48: .
 475,49: _WRITE
 475,55: VARIABLE
 
237 NAME VARIABLE 
 475,49: _WRITE
 475,55: VARIABLE
 
65 VARIABLE 
 475,55: VARIABLE
 
155 == 
 475,56: ==
 
257 CONSTANT 
 475,59: 0
 
483 ) scoped_statement 
 475,60: )
 476,5: {
 477,7: break
 477,12: ;
 478,5: }
 
320 { option_block_item_list } 
 476,5: {
 477,7: break
 477,12: ;
 478,5: }
 
201 break ; 
 477,7: break
 477,12: ;
 
337 ; 
 477,12: ;
 
201 } 
 478,5: }
 
201 } 
 479,3: }
 
320 if ( expression ) scoped_statement 
 481,3: if
 481,6: (
 481,7: file_p
 481,13: VARIABLE
 481,14: >=
 481,17: _io_buffer
 481,27: VARIABLE
 481,28: +
 481,30: 20
 481,32: )
 482,3: {
 483,5: return
 483,12: 0
 483,13: ;
 484,3: }
 
404 ( expression ) scoped_statement 
 481,6: (
 481,7: file_p
 481,13: VARIABLE
 481,14: >=
 481,17: _io_buffer
 481,27: VARIABLE
 481,28: +
 481,30: 20
 481,32: )
 482,3: {
 483,5: return
 483,12: 0
 483,13: ;
 484,3: }
 
455 NAME VARIABLE 
 481,7: file_p
 481,13: VARIABLE
 
179 VARIABLE 
 481,13: VARIABLE
 
154 >= 
 481,14: >=
 
252 NAME VARIABLE 
 481,17: _io_buffer
 481,27: VARIABLE
 
179 VARIABLE 
 481,27: VARIABLE
 
152 + 
 481,28: +
 
246 CONSTANT 
 481,30: 20
 
483 ) scoped_statement 
 481,32: )
 482,3: {
 483,5: return
 483,12: 0
 483,13: ;
 484,3: }
 
320 { option_block_item_list } 
 482,3: {
 483,5: return
 483,12: 0
 483,13: ;
 484,3: }
 
201 return option_expression ; 
 483,5: return
 483,12: 0
 483,13: ;
 
338 CONSTANT 
 483,12: 0
 
415 ; 
 483,13: ;
 
201 } 
 484,3: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 486,3: if
 486,6: (
 486,7: *
 486,8: mode
 486,12: VARIABLE
 486,13: ==
 486,16: 'w'
 486,19: )
 487,3: {
 488,5: file_descriptor
 488,20: VARIABLE
 488,21: =
 488,23: creat
 488,28: VARIABLE
 488,28: (
 488,29: name
 488,33: VARIABLE
 488,33: ,
 488,35: 0666
 488,39: )
 488,40: ;
 489,3: }
 490,3: else
 490,8: if
 490,11: (
 490,12: *
 490,13: mode
 490,17: VARIABLE
 490,18: ==
 490,21: 'a'
 490,24: )
 491,3: {
 492,5: if
 492,8: (
 492,9: (
 492,10: file_descriptor
 492,25: VARIABLE
 492,26: =
 492,28: open
 492,32: VARIABLE
 492,32: (
 492,33: name
 492,37: VARIABLE
 492,37: ,
 494,38: 01
 496,46: ,
 496,48: 0
 496,49: )
 496,50: )
 496,52: ==
 496,55: -
 496,56: 1
 496,57: )
 497,5: {
 498,7: file_descriptor
 498,22: VARIABLE
 498,23: =
 498,25: creat
 498,30: VARIABLE
 498,30: (
 498,31: name
 498,35: VARIABLE
 498,35: ,
 498,37: 0666
 498,41: )
 498,42: ;
 499,5: }
 500,5: lseek
 500,10: VARIABLE
 500,10: (
 500,11: file_descriptor
 500,26: VARIABLE
 500,26: ,
 500,28: 0L
 500,30: ,
 500,32: 2
 500,33: )
 500,34: ;
 501,3: }
 502,3: else
 503,3: {
 504,5: file_descriptor
 504,20: VARIABLE
 504,21: =
 504,23: open
 504,27: VARIABLE
 504,27: (
 504,28: name
 504,32: VARIABLE
 504,32: ,
 506,33: 00
 508,41: ,
 508,43: 0
 508,44: )
 508,45: ;
 509,3: }
 
404 ( expression ) scoped_statement else scoped_statement 
 486,6: (
 486,7: *
 486,8: mode
 486,12: VARIABLE
 486,13: ==
 486,16: 'w'
 486,19: )
 487,3: {
 488,5: file_descriptor
 488,20: VARIABLE
 488,21: =
 488,23: creat
 488,28: VARIABLE
 488,28: (
 488,29: name
 488,33: VARIABLE
 488,33: ,
 488,35: 0666
 488,39: )
 488,40: ;
 489,3: }
 490,3: else
 490,8: if
 490,11: (
 490,12: *
 490,13: mode
 490,17: VARIABLE
 490,18: ==
 490,21: 'a'
 490,24: )
 491,3: {
 492,5: if
 492,8: (
 492,9: (
 492,10: file_descriptor
 492,25: VARIABLE
 492,26: =
 492,28: open
 492,32: VARIABLE
 492,32: (
 492,33: name
 492,37: VARIABLE
 492,37: ,
 494,38: 01
 496,46: ,
 496,48: 0
 496,49: )
 496,50: )
 496,52: ==
 496,55: -
 496,56: 1
 496,57: )
 497,5: {
 498,7: file_descriptor
 498,22: VARIABLE
 498,23: =
 498,25: creat
 498,30: VARIABLE
 498,30: (
 498,31: name
 498,35: VARIABLE
 498,35: ,
 498,37: 0666
 498,41: )
 498,42: ;
 499,5: }
 500,5: lseek
 500,10: VARIABLE
 500,10: (
 500,11: file_descriptor
 500,26: VARIABLE
 500,26: ,
 500,28: 0L
 500,30: ,
 500,32: 2
 500,33: )
 500,34: ;
 501,3: }
 502,3: else
 503,3: {
 504,5: file_descriptor
 504,20: VARIABLE
 504,21: =
 504,23: open
 504,27: VARIABLE
 504,27: (
 504,28: name
 504,32: VARIABLE
 504,32: ,
 506,33: 00
 508,41: ,
 508,43: 0
 508,44: )
 508,45: ;
 509,3: }
 
455 * 
 486,7: *
 
149 NAME VARIABLE 
 486,8: mode
 486,12: VARIABLE
 
179 VARIABLE 
 486,12: VARIABLE
 
155 == 
 486,13: ==
 
257 CONSTANT 
 486,16: 'w'
 
483 ) scoped_statement else scoped_statement 
 486,19: )
 487,3: {
 488,5: file_descriptor
 488,20: VARIABLE
 488,21: =
 488,23: creat
 488,28: VARIABLE
 488,28: (
 488,29: name
 488,33: VARIABLE
 488,33: ,
 488,35: 0666
 488,39: )
 488,40: ;
 489,3: }
 490,3: else
 490,8: if
 490,11: (
 490,12: *
 490,13: mode
 490,17: VARIABLE
 490,18: ==
 490,21: 'a'
 490,24: )
 491,3: {
 492,5: if
 492,8: (
 492,9: (
 492,10: file_descriptor
 492,25: VARIABLE
 492,26: =
 492,28: open
 492,32: VARIABLE
 492,32: (
 492,33: name
 492,37: VARIABLE
 492,37: ,
 494,38: 01
 496,46: ,
 496,48: 0
 496,49: )
 496,50: )
 496,52: ==
 496,55: -
 496,56: 1
 496,57: )
 497,5: {
 498,7: file_descriptor
 498,22: VARIABLE
 498,23: =
 498,25: creat
 498,30: VARIABLE
 498,30: (
 498,31: name
 498,35: VARIABLE
 498,35: ,
 498,37: 0666
 498,41: )
 498,42: ;
 499,5: }
 500,5: lseek
 500,10: VARIABLE
 500,10: (
 500,11: file_descriptor
 500,26: VARIABLE
 500,26: ,
 500,28: 0L
 500,30: ,
 500,32: 2
 500,33: )
 500,34: ;
 501,3: }
 502,3: else
 503,3: {
 504,5: file_descriptor
 504,20: VARIABLE
 504,21: =
 504,23: open
 504,27: VARIABLE
 504,27: (
 504,28: name
 504,32: VARIABLE
 504,32: ,
 506,33: 00
 508,41: ,
 508,43: 0
 508,44: )
 508,45: ;
 509,3: }
 
320 { option_block_item_list } 
 487,3: {
 488,5: file_descriptor
 488,20: VARIABLE
 488,21: =
 488,23: creat
 488,28: VARIABLE
 488,28: (
 488,29: name
 488,33: VARIABLE
 488,33: ,
 488,35: 0666
 488,39: )
 488,40: ;
 489,3: }
 
201 NAME VARIABLE 
 488,5: file_descriptor
 488,20: VARIABLE
 
65 VARIABLE 
 488,20: VARIABLE
 
181 = 
 488,21: =
 
279 NAME VARIABLE 
 488,23: creat
 488,28: VARIABLE
 
179 VARIABLE 
 488,28: VARIABLE
 
147 ( option_argument_expression_list ) 
 488,28: (
 488,29: name
 488,33: VARIABLE
 488,33: ,
 488,35: 0666
 488,39: )
 
235 NAME VARIABLE 
 488,29: name
 488,33: VARIABLE
 
179 VARIABLE 
 488,33: VARIABLE
 
352 , assignment_expression 
 488,33: ,
 488,35: 0666
 
429 CONSTANT 
 488,35: 0666
 
351 ) 
 488,39: )
 
331 ; 
 488,40: ;
 
201 } 
 489,3: }
 
512 else scoped_statement 
 490,3: else
 490,8: if
 490,11: (
 490,12: *
 490,13: mode
 490,17: VARIABLE
 490,18: ==
 490,21: 'a'
 490,24: )
 491,3: {
 492,5: if
 492,8: (
 492,9: (
 492,10: file_descriptor
 492,25: VARIABLE
 492,26: =
 492,28: open
 492,32: VARIABLE
 492,32: (
 492,33: name
 492,37: VARIABLE
 492,37: ,
 494,38: 01
 496,46: ,
 496,48: 0
 496,49: )
 496,50: )
 496,52: ==
 496,55: -
 496,56: 1
 496,57: )
 497,5: {
 498,7: file_descriptor
 498,22: VARIABLE
 498,23: =
 498,25: creat
 498,30: VARIABLE
 498,30: (
 498,31: name
 498,35: VARIABLE
 498,35: ,
 498,37: 0666
 498,41: )
 498,42: ;
 499,5: }
 500,5: lseek
 500,10: VARIABLE
 500,10: (
 500,11: file_descriptor
 500,26: VARIABLE
 500,26: ,
 500,28: 0L
 500,30: ,
 500,32: 2
 500,33: )
 500,34: ;
 501,3: }
 502,3: else
 503,3: {
 504,5: file_descriptor
 504,20: VARIABLE
 504,21: =
 504,23: open
 504,27: VARIABLE
 504,27: (
 504,28: name
 504,32: VARIABLE
 504,32: ,
 506,33: 00
 508,41: ,
 508,43: 0
 508,44: )
 508,45: ;
 509,3: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 490,8: if
 490,11: (
 490,12: *
 490,13: mode
 490,17: VARIABLE
 490,18: ==
 490,21: 'a'
 490,24: )
 491,3: {
 492,5: if
 492,8: (
 492,9: (
 492,10: file_descriptor
 492,25: VARIABLE
 492,26: =
 492,28: open
 492,32: VARIABLE
 492,32: (
 492,33: name
 492,37: VARIABLE
 492,37: ,
 494,38: 01
 496,46: ,
 496,48: 0
 496,49: )
 496,50: )
 496,52: ==
 496,55: -
 496,56: 1
 496,57: )
 497,5: {
 498,7: file_descriptor
 498,22: VARIABLE
 498,23: =
 498,25: creat
 498,30: VARIABLE
 498,30: (
 498,31: name
 498,35: VARIABLE
 498,35: ,
 498,37: 0666
 498,41: )
 498,42: ;
 499,5: }
 500,5: lseek
 500,10: VARIABLE
 500,10: (
 500,11: file_descriptor
 500,26: VARIABLE
 500,26: ,
 500,28: 0L
 500,30: ,
 500,32: 2
 500,33: )
 500,34: ;
 501,3: }
 502,3: else
 503,3: {
 504,5: file_descriptor
 504,20: VARIABLE
 504,21: =
 504,23: open
 504,27: VARIABLE
 504,27: (
 504,28: name
 504,32: VARIABLE
 504,32: ,
 506,33: 00
 508,41: ,
 508,43: 0
 508,44: )
 508,45: ;
 509,3: }
 
404 ( expression ) scoped_statement else scoped_statement 
 490,11: (
 490,12: *
 490,13: mode
 490,17: VARIABLE
 490,18: ==
 490,21: 'a'
 490,24: )
 491,3: {
 492,5: if
 492,8: (
 492,9: (
 492,10: file_descriptor
 492,25: VARIABLE
 492,26: =
 492,28: open
 492,32: VARIABLE
 492,32: (
 492,33: name
 492,37: VARIABLE
 492,37: ,
 494,38: 01
 496,46: ,
 496,48: 0
 496,49: )
 496,50: )
 496,52: ==
 496,55: -
 496,56: 1
 496,57: )
 497,5: {
 498,7: file_descriptor
 498,22: VARIABLE
 498,23: =
 498,25: creat
 498,30: VARIABLE
 498,30: (
 498,31: name
 498,35: VARIABLE
 498,35: ,
 498,37: 0666
 498,41: )
 498,42: ;
 499,5: }
 500,5: lseek
 500,10: VARIABLE
 500,10: (
 500,11: file_descriptor
 500,26: VARIABLE
 500,26: ,
 500,28: 0L
 500,30: ,
 500,32: 2
 500,33: )
 500,34: ;
 501,3: }
 502,3: else
 503,3: {
 504,5: file_descriptor
 504,20: VARIABLE
 504,21: =
 504,23: open
 504,27: VARIABLE
 504,27: (
 504,28: name
 504,32: VARIABLE
 504,32: ,
 506,33: 00
 508,41: ,
 508,43: 0
 508,44: )
 508,45: ;
 509,3: }
 
455 * 
 490,12: *
 
149 NAME VARIABLE 
 490,13: mode
 490,17: VARIABLE
 
179 VARIABLE 
 490,17: VARIABLE
 
155 == 
 490,18: ==
 
257 CONSTANT 
 490,21: 'a'
 
483 ) scoped_statement else scoped_statement 
 490,24: )
 491,3: {
 492,5: if
 492,8: (
 492,9: (
 492,10: file_descriptor
 492,25: VARIABLE
 492,26: =
 492,28: open
 492,32: VARIABLE
 492,32: (
 492,33: name
 492,37: VARIABLE
 492,37: ,
 494,38: 01
 496,46: ,
 496,48: 0
 496,49: )
 496,50: )
 496,52: ==
 496,55: -
 496,56: 1
 496,57: )
 497,5: {
 498,7: file_descriptor
 498,22: VARIABLE
 498,23: =
 498,25: creat
 498,30: VARIABLE
 498,30: (
 498,31: name
 498,35: VARIABLE
 498,35: ,
 498,37: 0666
 498,41: )
 498,42: ;
 499,5: }
 500,5: lseek
 500,10: VARIABLE
 500,10: (
 500,11: file_descriptor
 500,26: VARIABLE
 500,26: ,
 500,28: 0L
 500,30: ,
 500,32: 2
 500,33: )
 500,34: ;
 501,3: }
 502,3: else
 503,3: {
 504,5: file_descriptor
 504,20: VARIABLE
 504,21: =
 504,23: open
 504,27: VARIABLE
 504,27: (
 504,28: name
 504,32: VARIABLE
 504,32: ,
 506,33: 00
 508,41: ,
 508,43: 0
 508,44: )
 508,45: ;
 509,3: }
 
320 { option_block_item_list } 
 491,3: {
 492,5: if
 492,8: (
 492,9: (
 492,10: file_descriptor
 492,25: VARIABLE
 492,26: =
 492,28: open
 492,32: VARIABLE
 492,32: (
 492,33: name
 492,37: VARIABLE
 492,37: ,
 494,38: 01
 496,46: ,
 496,48: 0
 496,49: )
 496,50: )
 496,52: ==
 496,55: -
 496,56: 1
 496,57: )
 497,5: {
 498,7: file_descriptor
 498,22: VARIABLE
 498,23: =
 498,25: creat
 498,30: VARIABLE
 498,30: (
 498,31: name
 498,35: VARIABLE
 498,35: ,
 498,37: 0666
 498,41: )
 498,42: ;
 499,5: }
 500,5: lseek
 500,10: VARIABLE
 500,10: (
 500,11: file_descriptor
 500,26: VARIABLE
 500,26: ,
 500,28: 0L
 500,30: ,
 500,32: 2
 500,33: )
 500,34: ;
 501,3: }
 
320 if ( expression ) scoped_statement 
 492,5: if
 492,8: (
 492,9: (
 492,10: file_descriptor
 492,25: VARIABLE
 492,26: =
 492,28: open
 492,32: VARIABLE
 492,32: (
 492,33: name
 492,37: VARIABLE
 492,37: ,
 494,38: 01
 496,46: ,
 496,48: 0
 496,49: )
 496,50: )
 496,52: ==
 496,55: -
 496,56: 1
 496,57: )
 497,5: {
 498,7: file_descriptor
 498,22: VARIABLE
 498,23: =
 498,25: creat
 498,30: VARIABLE
 498,30: (
 498,31: name
 498,35: VARIABLE
 498,35: ,
 498,37: 0666
 498,41: )
 498,42: ;
 499,5: }
 
404 ( expression ) scoped_statement 
 492,8: (
 492,9: (
 492,10: file_descriptor
 492,25: VARIABLE
 492,26: =
 492,28: open
 492,32: VARIABLE
 492,32: (
 492,33: name
 492,37: VARIABLE
 492,37: ,
 494,38: 01
 496,46: ,
 496,48: 0
 496,49: )
 496,50: )
 496,52: ==
 496,55: -
 496,56: 1
 496,57: )
 497,5: {
 498,7: file_descriptor
 498,22: VARIABLE
 498,23: =
 498,25: creat
 498,30: VARIABLE
 498,30: (
 498,31: name
 498,35: VARIABLE
 498,35: ,
 498,37: 0666
 498,41: )
 498,42: ;
 499,5: }
 
455 ( expression ) 
 492,9: (
 492,10: file_descriptor
 492,25: VARIABLE
 492,26: =
 492,28: open
 492,32: VARIABLE
 492,32: (
 492,33: name
 492,37: VARIABLE
 492,37: ,
 494,38: 01
 496,46: ,
 496,48: 0
 496,49: )
 496,50: )
 
165 NAME VARIABLE 
 492,10: file_descriptor
 492,25: VARIABLE
 
65 VARIABLE 
 492,25: VARIABLE
 
181 = 
 492,26: =
 
279 NAME VARIABLE 
 492,28: open
 492,32: VARIABLE
 
179 VARIABLE 
 492,32: VARIABLE
 
147 ( option_argument_expression_list ) 
 492,32: (
 492,33: name
 492,37: VARIABLE
 492,37: ,
 494,38: 01
 496,46: ,
 496,48: 0
 496,49: )
 
235 NAME VARIABLE 
 492,33: name
 492,37: VARIABLE
 
179 VARIABLE 
 492,37: VARIABLE
 
352 , assignment_expression 
 492,37: ,
 494,38: 01
 
429 CONSTANT 
 494,38: 01
 
352 , assignment_expression 
 496,46: ,
 496,48: 0
 
429 CONSTANT 
 496,48: 0
 
351 ) 
 496,49: )
 
267 ) 
 496,50: )
 
155 == 
 496,52: ==
 
257 - 
 496,55: -
 
149 CONSTANT 
 496,56: 1
 
483 ) scoped_statement 
 496,57: )
 497,5: {
 498,7: file_descriptor
 498,22: VARIABLE
 498,23: =
 498,25: creat
 498,30: VARIABLE
 498,30: (
 498,31: name
 498,35: VARIABLE
 498,35: ,
 498,37: 0666
 498,41: )
 498,42: ;
 499,5: }
 
320 { option_block_item_list } 
 497,5: {
 498,7: file_descriptor
 498,22: VARIABLE
 498,23: =
 498,25: creat
 498,30: VARIABLE
 498,30: (
 498,31: name
 498,35: VARIABLE
 498,35: ,
 498,37: 0666
 498,41: )
 498,42: ;
 499,5: }
 
201 NAME VARIABLE 
 498,7: file_descriptor
 498,22: VARIABLE
 
65 VARIABLE 
 498,22: VARIABLE
 
181 = 
 498,23: =
 
279 NAME VARIABLE 
 498,25: creat
 498,30: VARIABLE
 
179 VARIABLE 
 498,30: VARIABLE
 
147 ( option_argument_expression_list ) 
 498,30: (
 498,31: name
 498,35: VARIABLE
 498,35: ,
 498,37: 0666
 498,41: )
 
235 NAME VARIABLE 
 498,31: name
 498,35: VARIABLE
 
179 VARIABLE 
 498,35: VARIABLE
 
352 , assignment_expression 
 498,35: ,
 498,37: 0666
 
429 CONSTANT 
 498,37: 0666
 
351 ) 
 498,41: )
 
331 ; 
 498,42: ;
 
201 } 
 499,5: }
 
201 NAME VARIABLE 
 500,5: lseek
 500,10: VARIABLE
 
65 VARIABLE 
 500,10: VARIABLE
 
147 ( option_argument_expression_list ) 
 500,10: (
 500,11: file_descriptor
 500,26: VARIABLE
 500,26: ,
 500,28: 0L
 500,30: ,
 500,32: 2
 500,33: )
 
235 NAME VARIABLE 
 500,11: file_descriptor
 500,26: VARIABLE
 
179 VARIABLE 
 500,26: VARIABLE
 
352 , assignment_expression 
 500,26: ,
 500,28: 0L
 
429 CONSTANT 
 500,28: 0L
 
352 , assignment_expression 
 500,30: ,
 500,32: 2
 
429 CONSTANT 
 500,32: 2
 
351 ) 
 500,33: )
 
331 ; 
 500,34: ;
 
201 } 
 501,3: }
 
512 else scoped_statement 
 502,3: else
 503,3: {
 504,5: file_descriptor
 504,20: VARIABLE
 504,21: =
 504,23: open
 504,27: VARIABLE
 504,27: (
 504,28: name
 504,32: VARIABLE
 504,32: ,
 506,33: 00
 508,41: ,
 508,43: 0
 508,44: )
 508,45: ;
 509,3: }
 
320 { option_block_item_list } 
 503,3: {
 504,5: file_descriptor
 504,20: VARIABLE
 504,21: =
 504,23: open
 504,27: VARIABLE
 504,27: (
 504,28: name
 504,32: VARIABLE
 504,32: ,
 506,33: 00
 508,41: ,
 508,43: 0
 508,44: )
 508,45: ;
 509,3: }
 
201 NAME VARIABLE 
 504,5: file_descriptor
 504,20: VARIABLE
 
65 VARIABLE 
 504,20: VARIABLE
 
181 = 
 504,21: =
 
279 NAME VARIABLE 
 504,23: open
 504,27: VARIABLE
 
179 VARIABLE 
 504,27: VARIABLE
 
147 ( option_argument_expression_list ) 
 504,27: (
 504,28: name
 504,32: VARIABLE
 504,32: ,
 506,33: 00
 508,41: ,
 508,43: 0
 508,44: )
 
235 NAME VARIABLE 
 504,28: name
 504,32: VARIABLE
 
179 VARIABLE 
 504,32: VARIABLE
 
352 , assignment_expression 
 504,32: ,
 506,33: 00
 
429 CONSTANT 
 506,33: 00
 
352 , assignment_expression 
 508,41: ,
 508,43: 0
 
429 CONSTANT 
 508,43: 0
 
351 ) 
 508,44: )
 
331 ; 
 508,45: ;
 
201 } 
 509,3: }
 
320 if ( expression ) scoped_statement 
 511,3: if
 511,6: (
 511,7: file_descriptor
 511,22: VARIABLE
 511,23: ==
 511,26: -
 511,27: 1
 511,28: )
 512,3: {
 513,5: return
 513,12: 0
 513,13: ;
 514,3: }
 
404 ( expression ) scoped_statement 
 511,6: (
 511,7: file_descriptor
 511,22: VARIABLE
 511,23: ==
 511,26: -
 511,27: 1
 511,28: )
 512,3: {
 513,5: return
 513,12: 0
 513,13: ;
 514,3: }
 
455 NAME VARIABLE 
 511,7: file_descriptor
 511,22: VARIABLE
 
179 VARIABLE 
 511,22: VARIABLE
 
155 == 
 511,23: ==
 
257 - 
 511,26: -
 
149 CONSTANT 
 511,27: 1
 
483 ) scoped_statement 
 511,28: )
 512,3: {
 513,5: return
 513,12: 0
 513,13: ;
 514,3: }
 
320 { option_block_item_list } 
 512,3: {
 513,5: return
 513,12: 0
 513,13: ;
 514,3: }
 
201 return option_expression ; 
 513,5: return
 513,12: 0
 513,13: ;
 
338 CONSTANT 
 513,12: 0
 
415 ; 
 513,13: ;
 
201 } 
 514,3: }
 
201 NAME VARIABLE 
 516,3: file_p
 516,9: VARIABLE
 
65 VARIABLE 
 516,9: VARIABLE
 
147 -> general_identifier 
 516,9: ->
 516,11: file_descriptor
 516,26: VARIABLE
 
238 NAME VARIABLE 
 516,11: file_descriptor
 516,26: VARIABLE
 
65 VARIABLE 
 516,26: VARIABLE
 
181 = 
 516,27: =
 
279 NAME VARIABLE 
 516,29: file_descriptor
 516,44: VARIABLE
 
179 VARIABLE 
 516,44: VARIABLE
 
331 ; 
 516,44: ;
 
201 NAME VARIABLE 
 517,3: file_p
 517,9: VARIABLE
 
65 VARIABLE 
 517,9: VARIABLE
 
147 -> general_identifier 
 517,9: ->
 517,11: counter
 517,18: VARIABLE
 
238 NAME VARIABLE 
 517,11: counter
 517,18: VARIABLE
 
65 VARIABLE 
 517,18: VARIABLE
 
181 = 
 517,19: =
 
279 CONSTANT 
 517,21: 0
 
331 ; 
 517,22: ;
 
201 NAME VARIABLE 
 518,3: file_p
 518,9: VARIABLE
 
65 VARIABLE 
 518,9: VARIABLE
 
147 -> general_identifier 
 518,9: ->
 518,11: base
 518,15: VARIABLE
 
238 NAME VARIABLE 
 518,11: base
 518,15: VARIABLE
 
65 VARIABLE 
 518,15: VARIABLE
 
181 = 
 518,16: =
 
279 CONSTANT 
 518,18: 0
 
331 ; 
 518,19: ;
 
201 NAME VARIABLE 
 519,3: file_p
 519,9: VARIABLE
 
65 VARIABLE 
 519,9: VARIABLE
 
147 -> general_identifier 
 519,9: ->
 519,11: flag
 519,15: VARIABLE
 
238 NAME VARIABLE 
 519,11: flag
 519,15: VARIABLE
 
65 VARIABLE 
 519,15: VARIABLE
 
147 . general_identifier 
 519,15: .
 519,16: _EOF
 519,20: VARIABLE
 
237 NAME VARIABLE 
 519,16: _EOF
 519,20: VARIABLE
 
65 VARIABLE 
 519,20: VARIABLE
 
181 = 
 519,21: =
 
279 CONSTANT 
 519,23: 0
 
331 ; 
 519,24: ;
 
201 NAME VARIABLE 
 520,3: file_p
 520,9: VARIABLE
 
65 VARIABLE 
 520,9: VARIABLE
 
147 -> general_identifier 
 520,9: ->
 520,11: flag
 520,15: VARIABLE
 
238 NAME VARIABLE 
 520,11: flag
 520,15: VARIABLE
 
65 VARIABLE 
 520,15: VARIABLE
 
147 . general_identifier 
 520,15: .
 520,16: _ERR
 520,20: VARIABLE
 
237 NAME VARIABLE 
 520,16: _ERR
 520,20: VARIABLE
 
65 VARIABLE 
 520,20: VARIABLE
 
181 = 
 520,21: =
 
279 CONSTANT 
 520,23: 0
 
331 ; 
 520,24: ;
 
201 NAME VARIABLE 
 521,3: file_p
 521,9: VARIABLE
 
65 VARIABLE 
 521,9: VARIABLE
 
147 -> general_identifier 
 521,9: ->
 521,11: flag
 521,15: VARIABLE
 
238 NAME VARIABLE 
 521,11: flag
 521,15: VARIABLE
 
65 VARIABLE 
 521,15: VARIABLE
 
147 . general_identifier 
 521,15: .
 521,16: _READ
 521,21: VARIABLE
 
237 NAME VARIABLE 
 521,16: _READ
 521,21: VARIABLE
 
65 VARIABLE 
 521,21: VARIABLE
 
181 = 
 521,22: =
 
279 ( expression ) 
 521,24: (
 521,25: *
 521,26: mode
 521,30: VARIABLE
 521,31: ==
 521,34: 'r'
 521,37: )
 
165 * 
 521,25: *
 
149 NAME VARIABLE 
 521,26: mode
 521,30: VARIABLE
 
179 VARIABLE 
 521,30: VARIABLE
 
155 == 
 521,31: ==
 
257 CONSTANT 
 521,34: 'r'
 
267 ) 
 521,37: )
 
160 ? expression : conditional_expression 
 521,39: ?
 521,41: 1
 521,43: :
 521,45: 0
 
265 CONSTANT 
 521,41: 1
 
366 : conditional_expression 
 521,43: :
 521,45: 0
 
431 CONSTANT 
 521,45: 0
 
331 ; 
 521,46: ;
 
201 NAME VARIABLE 
 522,3: file_p
 522,9: VARIABLE
 
65 VARIABLE 
 522,9: VARIABLE
 
147 -> general_identifier 
 522,9: ->
 522,11: flag
 522,15: VARIABLE
 
238 NAME VARIABLE 
 522,11: flag
 522,15: VARIABLE
 
65 VARIABLE 
 522,15: VARIABLE
 
147 . general_identifier 
 522,15: .
 522,16: _WRITE
 522,22: VARIABLE
 
237 NAME VARIABLE 
 522,16: _WRITE
 522,22: VARIABLE
 
65 VARIABLE 
 522,22: VARIABLE
 
181 = 
 522,23: =
 
279 ( expression ) 
 522,25: (
 522,26: *
 522,27: mode
 522,31: VARIABLE
 522,32: ==
 522,35: 'r'
 522,38: )
 
165 * 
 522,26: *
 
149 NAME VARIABLE 
 522,27: mode
 522,31: VARIABLE
 
179 VARIABLE 
 522,31: VARIABLE
 
155 == 
 522,32: ==
 
257 CONSTANT 
 522,35: 'r'
 
267 ) 
 522,38: )
 
160 ? expression : conditional_expression 
 522,40: ?
 522,42: 0
 522,44: :
 522,46: 1
 
265 CONSTANT 
 522,42: 0
 
366 : conditional_expression 
 522,44: :
 522,46: 1
 
431 CONSTANT 
 522,46: 1
 
331 ; 
 522,47: ;
 
201 return option_expression ; 
 524,3: return
 524,10: file_p
 524,16: VARIABLE
 524,16: ;
 
338 NAME VARIABLE 
 524,10: file_p
 524,16: VARIABLE
 
179 VARIABLE 
 524,16: VARIABLE
 
415 ; 
 524,16: ;
 
201 } 
 525,1: }
 
23 int 
 527,1: int
 
5 NAME VARIABLE 
 527,5: file_close
 527,15: VARIABLE
 
65 VARIABLE 
 527,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 527,15: (
 527,16: FILE
 527,20: TYPE
 527,21: *
 527,22: file_p
 527,28: VARIABLE
 527,28: )
 
186 NAME TYPE 
 527,16: FILE
 527,20: TYPE
 
65 TYPE 
 527,20: TYPE
 
298 * option_type_qualifier_list option_pointer 
 527,21: *
 
386 NAME VARIABLE 
 527,22: file_p
 527,28: VARIABLE
 
65 VARIABLE 
 527,28: VARIABLE
 
187 ) 
 527,28: )
 
94 { option_block_item_list } 
 528,1: {
 529,3: if
 529,6: (
 529,7: file_flush
 529,17: VARIABLE
 529,17: (
 529,18: file_p
 529,24: VARIABLE
 529,24: )
 529,26: ==
 529,29: (
 529,30: -
 529,31: 1
 529,32: )
 529,33: )
 530,3: {
 531,5: return
 531,12: (
 531,13: -
 531,14: 1
 531,15: )
 531,16: ;
 532,3: }
 534,3: free
 534,7: VARIABLE
 534,7: (
 534,8: file_p
 534,14: VARIABLE
 534,14: ->
 534,16: base
 534,20: VARIABLE
 534,20: )
 534,21: ;
 535,3: file_p
 535,9: VARIABLE
 535,9: ->
 535,11: next_char_pos_p
 535,26: VARIABLE
 535,27: =
 535,29: 0
 535,30: ;
 536,3: file_p
 536,9: VARIABLE
 536,9: ->
 536,11: base
 536,15: VARIABLE
 536,16: =
 536,18: 0
 536,19: ;
 537,3: file_p
 537,9: VARIABLE
 537,9: ->
 537,11: counter
 537,18: VARIABLE
 537,19: =
 537,21: 0
 537,22: ;
 538,3: close
 538,8: VARIABLE
 538,8: (
 538,9: file_p
 538,15: VARIABLE
 538,15: ->
 538,17: file_descriptor
 538,32: VARIABLE
 538,32: )
 538,33: ;
 540,3: return
 540,10: 0
 540,11: ;
 541,1: }
 
320 if ( expression ) scoped_statement 
 529,3: if
 529,6: (
 529,7: file_flush
 529,17: VARIABLE
 529,17: (
 529,18: file_p
 529,24: VARIABLE
 529,24: )
 529,26: ==
 529,29: (
 529,30: -
 529,31: 1
 529,32: )
 529,33: )
 530,3: {
 531,5: return
 531,12: (
 531,13: -
 531,14: 1
 531,15: )
 531,16: ;
 532,3: }
 
404 ( expression ) scoped_statement 
 529,6: (
 529,7: file_flush
 529,17: VARIABLE
 529,17: (
 529,18: file_p
 529,24: VARIABLE
 529,24: )
 529,26: ==
 529,29: (
 529,30: -
 529,31: 1
 529,32: )
 529,33: )
 530,3: {
 531,5: return
 531,12: (
 531,13: -
 531,14: 1
 531,15: )
 531,16: ;
 532,3: }
 
455 NAME VARIABLE 
 529,7: file_flush
 529,17: VARIABLE
 
179 VARIABLE 
 529,17: VARIABLE
 
147 ( option_argument_expression_list ) 
 529,17: (
 529,18: file_p
 529,24: VARIABLE
 529,24: )
 
235 NAME VARIABLE 
 529,18: file_p
 529,24: VARIABLE
 
179 VARIABLE 
 529,24: VARIABLE
 
351 ) 
 529,24: )
 
155 == 
 529,26: ==
 
257 ( expression ) 
 529,29: (
 529,30: -
 529,31: 1
 529,32: )
 
165 - 
 529,30: -
 
149 CONSTANT 
 529,31: 1
 
267 ) 
 529,32: )
 
483 ) scoped_statement 
 529,33: )
 530,3: {
 531,5: return
 531,12: (
 531,13: -
 531,14: 1
 531,15: )
 531,16: ;
 532,3: }
 
320 { option_block_item_list } 
 530,3: {
 531,5: return
 531,12: (
 531,13: -
 531,14: 1
 531,15: )
 531,16: ;
 532,3: }
 
201 return option_expression ; 
 531,5: return
 531,12: (
 531,13: -
 531,14: 1
 531,15: )
 531,16: ;
 
338 ( expression ) 
 531,12: (
 531,13: -
 531,14: 1
 531,15: )
 
165 - 
 531,13: -
 
149 CONSTANT 
 531,14: 1
 
267 ) 
 531,15: )
 
415 ; 
 531,16: ;
 
201 } 
 532,3: }
 
201 NAME VARIABLE 
 534,3: free
 534,7: VARIABLE
 
65 VARIABLE 
 534,7: VARIABLE
 
147 ( option_argument_expression_list ) 
 534,7: (
 534,8: file_p
 534,14: VARIABLE
 534,14: ->
 534,16: base
 534,20: VARIABLE
 534,20: )
 
235 NAME VARIABLE 
 534,8: file_p
 534,14: VARIABLE
 
179 VARIABLE 
 534,14: VARIABLE
 
147 -> general_identifier 
 534,14: ->
 534,16: base
 534,20: VARIABLE
 
238 NAME VARIABLE 
 534,16: base
 534,20: VARIABLE
 
65 VARIABLE 
 534,20: VARIABLE
 
351 ) 
 534,20: )
 
331 ; 
 534,21: ;
 
201 NAME VARIABLE 
 535,3: file_p
 535,9: VARIABLE
 
65 VARIABLE 
 535,9: VARIABLE
 
147 -> general_identifier 
 535,9: ->
 535,11: next_char_pos_p
 535,26: VARIABLE
 
238 NAME VARIABLE 
 535,11: next_char_pos_p
 535,26: VARIABLE
 
65 VARIABLE 
 535,26: VARIABLE
 
181 = 
 535,27: =
 
279 CONSTANT 
 535,29: 0
 
331 ; 
 535,30: ;
 
201 NAME VARIABLE 
 536,3: file_p
 536,9: VARIABLE
 
65 VARIABLE 
 536,9: VARIABLE
 
147 -> general_identifier 
 536,9: ->
 536,11: base
 536,15: VARIABLE
 
238 NAME VARIABLE 
 536,11: base
 536,15: VARIABLE
 
65 VARIABLE 
 536,15: VARIABLE
 
181 = 
 536,16: =
 
279 CONSTANT 
 536,18: 0
 
331 ; 
 536,19: ;
 
201 NAME VARIABLE 
 537,3: file_p
 537,9: VARIABLE
 
65 VARIABLE 
 537,9: VARIABLE
 
147 -> general_identifier 
 537,9: ->
 537,11: counter
 537,18: VARIABLE
 
238 NAME VARIABLE 
 537,11: counter
 537,18: VARIABLE
 
65 VARIABLE 
 537,18: VARIABLE
 
181 = 
 537,19: =
 
279 CONSTANT 
 537,21: 0
 
331 ; 
 537,22: ;
 
201 NAME VARIABLE 
 538,3: close
 538,8: VARIABLE
 
65 VARIABLE 
 538,8: VARIABLE
 
147 ( option_argument_expression_list ) 
 538,8: (
 538,9: file_p
 538,15: VARIABLE
 538,15: ->
 538,17: file_descriptor
 538,32: VARIABLE
 538,32: )
 
235 NAME VARIABLE 
 538,9: file_p
 538,15: VARIABLE
 
179 VARIABLE 
 538,15: VARIABLE
 
147 -> general_identifier 
 538,15: ->
 538,17: file_descriptor
 538,32: VARIABLE
 
238 NAME VARIABLE 
 538,17: file_descriptor
 538,32: VARIABLE
 
65 VARIABLE 
 538,32: VARIABLE
 
351 ) 
 538,32: )
 
331 ; 
 538,33: ;
 
201 return option_expression ; 
 540,3: return
 540,10: 0
 540,11: ;
 
338 CONSTANT 
 540,10: 0
 
415 ; 
 540,11: ;
 
201 } 
 541,1: }
 
23 int 
 543,1: int
 
5 NAME VARIABLE 
 543,5: file_seek
 543,14: VARIABLE
 
65 VARIABLE 
 543,14: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 543,14: (
 543,15: FILE
 543,19: TYPE
 543,20: *
 543,21: file_p
 543,27: VARIABLE
 543,27: ,
 543,29: long
 543,34: offset
 543,40: VARIABLE
 543,40: ,
 543,42: int
 543,46: whence
 543,52: VARIABLE
 543,52: )
 
186 NAME TYPE 
 543,15: FILE
 543,19: TYPE
 
65 TYPE 
 543,19: TYPE
 
298 * option_type_qualifier_list option_pointer 
 543,20: *
 
386 NAME VARIABLE 
 543,21: file_p
 543,27: VARIABLE
 
65 VARIABLE 
 543,27: VARIABLE
 
300 , parameter_declaration 
 543,27: ,
 543,29: long
 543,34: offset
 543,40: VARIABLE
 
391 long 
 543,29: long
 
298 NAME VARIABLE 
 543,34: offset
 543,40: VARIABLE
 
65 VARIABLE 
 543,40: VARIABLE
 
300 , parameter_declaration 
 543,40: ,
 543,42: int
 543,46: whence
 543,52: VARIABLE
 
391 int 
 543,42: int
 
298 NAME VARIABLE 
 543,46: whence
 543,52: VARIABLE
 
65 VARIABLE 
 543,52: VARIABLE
 
187 ) 
 543,52: )
 
94 { option_block_item_list } 
 544,1: {
 545,3: if
 545,6: (
 545,7: file_p
 545,13: VARIABLE
 545,13: ->
 545,15: flag
 545,19: VARIABLE
 545,19: .
 545,20: _UNBUF
 545,26: VARIABLE
 545,27: ==
 545,30: 0
 545,31: )
 546,3: {
 547,5: if
 547,8: (
 547,9: file_p
 547,15: VARIABLE
 547,15: ->
 547,17: flag
 547,21: VARIABLE
 547,21: .
 547,22: _READ
 547,27: VARIABLE
 547,28: ==
 547,31: 1
 547,32: )
 548,5: {
 549,7: file_p
 549,13: VARIABLE
 549,13: ->
 549,15: counter
 549,22: VARIABLE
 549,23: =
 549,25: 0
 549,26: ;
 550,7: file_p
 550,13: VARIABLE
 550,13: ->
 550,15: next_char_pos_p
 550,30: VARIABLE
 550,31: =
 550,33: file_p
 550,39: VARIABLE
 550,39: ->
 550,41: base
 550,45: VARIABLE
 550,45: ;
 551,5: }
 552,5: else
 552,10: if
 552,13: (
 552,14: file_p
 552,20: VARIABLE
 552,20: ->
 552,22: flag
 552,26: VARIABLE
 552,26: .
 552,27: _WRITE
 552,33: VARIABLE
 552,34: ==
 552,37: 1
 552,38: )
 553,5: {
 554,7: file_flush
 554,17: VARIABLE
 554,17: (
 554,18: file_p
 554,24: VARIABLE
 554,24: )
 554,25: ;
 555,5: }
 556,3: }
 558,3: return
 558,10: (
 558,11: lseek
 558,16: VARIABLE
 558,16: (
 558,17: file_p
 558,23: VARIABLE
 558,23: ->
 558,25: file_descriptor
 558,40: VARIABLE
 558,40: ,
 558,42: offset
 558,48: VARIABLE
 558,48: ,
 558,50: whence
 558,56: VARIABLE
 558,56: )
 558,58: <
 558,60: 0
 558,61: )
 558,62: ;
 559,1: }
 
320 if ( expression ) scoped_statement 
 545,3: if
 545,6: (
 545,7: file_p
 545,13: VARIABLE
 545,13: ->
 545,15: flag
 545,19: VARIABLE
 545,19: .
 545,20: _UNBUF
 545,26: VARIABLE
 545,27: ==
 545,30: 0
 545,31: )
 546,3: {
 547,5: if
 547,8: (
 547,9: file_p
 547,15: VARIABLE
 547,15: ->
 547,17: flag
 547,21: VARIABLE
 547,21: .
 547,22: _READ
 547,27: VARIABLE
 547,28: ==
 547,31: 1
 547,32: )
 548,5: {
 549,7: file_p
 549,13: VARIABLE
 549,13: ->
 549,15: counter
 549,22: VARIABLE
 549,23: =
 549,25: 0
 549,26: ;
 550,7: file_p
 550,13: VARIABLE
 550,13: ->
 550,15: next_char_pos_p
 550,30: VARIABLE
 550,31: =
 550,33: file_p
 550,39: VARIABLE
 550,39: ->
 550,41: base
 550,45: VARIABLE
 550,45: ;
 551,5: }
 552,5: else
 552,10: if
 552,13: (
 552,14: file_p
 552,20: VARIABLE
 552,20: ->
 552,22: flag
 552,26: VARIABLE
 552,26: .
 552,27: _WRITE
 552,33: VARIABLE
 552,34: ==
 552,37: 1
 552,38: )
 553,5: {
 554,7: file_flush
 554,17: VARIABLE
 554,17: (
 554,18: file_p
 554,24: VARIABLE
 554,24: )
 554,25: ;
 555,5: }
 556,3: }
 
404 ( expression ) scoped_statement 
 545,6: (
 545,7: file_p
 545,13: VARIABLE
 545,13: ->
 545,15: flag
 545,19: VARIABLE
 545,19: .
 545,20: _UNBUF
 545,26: VARIABLE
 545,27: ==
 545,30: 0
 545,31: )
 546,3: {
 547,5: if
 547,8: (
 547,9: file_p
 547,15: VARIABLE
 547,15: ->
 547,17: flag
 547,21: VARIABLE
 547,21: .
 547,22: _READ
 547,27: VARIABLE
 547,28: ==
 547,31: 1
 547,32: )
 548,5: {
 549,7: file_p
 549,13: VARIABLE
 549,13: ->
 549,15: counter
 549,22: VARIABLE
 549,23: =
 549,25: 0
 549,26: ;
 550,7: file_p
 550,13: VARIABLE
 550,13: ->
 550,15: next_char_pos_p
 550,30: VARIABLE
 550,31: =
 550,33: file_p
 550,39: VARIABLE
 550,39: ->
 550,41: base
 550,45: VARIABLE
 550,45: ;
 551,5: }
 552,5: else
 552,10: if
 552,13: (
 552,14: file_p
 552,20: VARIABLE
 552,20: ->
 552,22: flag
 552,26: VARIABLE
 552,26: .
 552,27: _WRITE
 552,33: VARIABLE
 552,34: ==
 552,37: 1
 552,38: )
 553,5: {
 554,7: file_flush
 554,17: VARIABLE
 554,17: (
 554,18: file_p
 554,24: VARIABLE
 554,24: )
 554,25: ;
 555,5: }
 556,3: }
 
455 NAME VARIABLE 
 545,7: file_p
 545,13: VARIABLE
 
179 VARIABLE 
 545,13: VARIABLE
 
147 -> general_identifier 
 545,13: ->
 545,15: flag
 545,19: VARIABLE
 
238 NAME VARIABLE 
 545,15: flag
 545,19: VARIABLE
 
65 VARIABLE 
 545,19: VARIABLE
 
147 . general_identifier 
 545,19: .
 545,20: _UNBUF
 545,26: VARIABLE
 
237 NAME VARIABLE 
 545,20: _UNBUF
 545,26: VARIABLE
 
65 VARIABLE 
 545,26: VARIABLE
 
155 == 
 545,27: ==
 
257 CONSTANT 
 545,30: 0
 
483 ) scoped_statement 
 545,31: )
 546,3: {
 547,5: if
 547,8: (
 547,9: file_p
 547,15: VARIABLE
 547,15: ->
 547,17: flag
 547,21: VARIABLE
 547,21: .
 547,22: _READ
 547,27: VARIABLE
 547,28: ==
 547,31: 1
 547,32: )
 548,5: {
 549,7: file_p
 549,13: VARIABLE
 549,13: ->
 549,15: counter
 549,22: VARIABLE
 549,23: =
 549,25: 0
 549,26: ;
 550,7: file_p
 550,13: VARIABLE
 550,13: ->
 550,15: next_char_pos_p
 550,30: VARIABLE
 550,31: =
 550,33: file_p
 550,39: VARIABLE
 550,39: ->
 550,41: base
 550,45: VARIABLE
 550,45: ;
 551,5: }
 552,5: else
 552,10: if
 552,13: (
 552,14: file_p
 552,20: VARIABLE
 552,20: ->
 552,22: flag
 552,26: VARIABLE
 552,26: .
 552,27: _WRITE
 552,33: VARIABLE
 552,34: ==
 552,37: 1
 552,38: )
 553,5: {
 554,7: file_flush
 554,17: VARIABLE
 554,17: (
 554,18: file_p
 554,24: VARIABLE
 554,24: )
 554,25: ;
 555,5: }
 556,3: }
 
320 { option_block_item_list } 
 546,3: {
 547,5: if
 547,8: (
 547,9: file_p
 547,15: VARIABLE
 547,15: ->
 547,17: flag
 547,21: VARIABLE
 547,21: .
 547,22: _READ
 547,27: VARIABLE
 547,28: ==
 547,31: 1
 547,32: )
 548,5: {
 549,7: file_p
 549,13: VARIABLE
 549,13: ->
 549,15: counter
 549,22: VARIABLE
 549,23: =
 549,25: 0
 549,26: ;
 550,7: file_p
 550,13: VARIABLE
 550,13: ->
 550,15: next_char_pos_p
 550,30: VARIABLE
 550,31: =
 550,33: file_p
 550,39: VARIABLE
 550,39: ->
 550,41: base
 550,45: VARIABLE
 550,45: ;
 551,5: }
 552,5: else
 552,10: if
 552,13: (
 552,14: file_p
 552,20: VARIABLE
 552,20: ->
 552,22: flag
 552,26: VARIABLE
 552,26: .
 552,27: _WRITE
 552,33: VARIABLE
 552,34: ==
 552,37: 1
 552,38: )
 553,5: {
 554,7: file_flush
 554,17: VARIABLE
 554,17: (
 554,18: file_p
 554,24: VARIABLE
 554,24: )
 554,25: ;
 555,5: }
 556,3: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 547,5: if
 547,8: (
 547,9: file_p
 547,15: VARIABLE
 547,15: ->
 547,17: flag
 547,21: VARIABLE
 547,21: .
 547,22: _READ
 547,27: VARIABLE
 547,28: ==
 547,31: 1
 547,32: )
 548,5: {
 549,7: file_p
 549,13: VARIABLE
 549,13: ->
 549,15: counter
 549,22: VARIABLE
 549,23: =
 549,25: 0
 549,26: ;
 550,7: file_p
 550,13: VARIABLE
 550,13: ->
 550,15: next_char_pos_p
 550,30: VARIABLE
 550,31: =
 550,33: file_p
 550,39: VARIABLE
 550,39: ->
 550,41: base
 550,45: VARIABLE
 550,45: ;
 551,5: }
 552,5: else
 552,10: if
 552,13: (
 552,14: file_p
 552,20: VARIABLE
 552,20: ->
 552,22: flag
 552,26: VARIABLE
 552,26: .
 552,27: _WRITE
 552,33: VARIABLE
 552,34: ==
 552,37: 1
 552,38: )
 553,5: {
 554,7: file_flush
 554,17: VARIABLE
 554,17: (
 554,18: file_p
 554,24: VARIABLE
 554,24: )
 554,25: ;
 555,5: }
 
404 ( expression ) scoped_statement else scoped_statement 
 547,8: (
 547,9: file_p
 547,15: VARIABLE
 547,15: ->
 547,17: flag
 547,21: VARIABLE
 547,21: .
 547,22: _READ
 547,27: VARIABLE
 547,28: ==
 547,31: 1
 547,32: )
 548,5: {
 549,7: file_p
 549,13: VARIABLE
 549,13: ->
 549,15: counter
 549,22: VARIABLE
 549,23: =
 549,25: 0
 549,26: ;
 550,7: file_p
 550,13: VARIABLE
 550,13: ->
 550,15: next_char_pos_p
 550,30: VARIABLE
 550,31: =
 550,33: file_p
 550,39: VARIABLE
 550,39: ->
 550,41: base
 550,45: VARIABLE
 550,45: ;
 551,5: }
 552,5: else
 552,10: if
 552,13: (
 552,14: file_p
 552,20: VARIABLE
 552,20: ->
 552,22: flag
 552,26: VARIABLE
 552,26: .
 552,27: _WRITE
 552,33: VARIABLE
 552,34: ==
 552,37: 1
 552,38: )
 553,5: {
 554,7: file_flush
 554,17: VARIABLE
 554,17: (
 554,18: file_p
 554,24: VARIABLE
 554,24: )
 554,25: ;
 555,5: }
 
455 NAME VARIABLE 
 547,9: file_p
 547,15: VARIABLE
 
179 VARIABLE 
 547,15: VARIABLE
 
147 -> general_identifier 
 547,15: ->
 547,17: flag
 547,21: VARIABLE
 
238 NAME VARIABLE 
 547,17: flag
 547,21: VARIABLE
 
65 VARIABLE 
 547,21: VARIABLE
 
147 . general_identifier 
 547,21: .
 547,22: _READ
 547,27: VARIABLE
 
237 NAME VARIABLE 
 547,22: _READ
 547,27: VARIABLE
 
65 VARIABLE 
 547,27: VARIABLE
 
155 == 
 547,28: ==
 
257 CONSTANT 
 547,31: 1
 
483 ) scoped_statement else scoped_statement 
 547,32: )
 548,5: {
 549,7: file_p
 549,13: VARIABLE
 549,13: ->
 549,15: counter
 549,22: VARIABLE
 549,23: =
 549,25: 0
 549,26: ;
 550,7: file_p
 550,13: VARIABLE
 550,13: ->
 550,15: next_char_pos_p
 550,30: VARIABLE
 550,31: =
 550,33: file_p
 550,39: VARIABLE
 550,39: ->
 550,41: base
 550,45: VARIABLE
 550,45: ;
 551,5: }
 552,5: else
 552,10: if
 552,13: (
 552,14: file_p
 552,20: VARIABLE
 552,20: ->
 552,22: flag
 552,26: VARIABLE
 552,26: .
 552,27: _WRITE
 552,33: VARIABLE
 552,34: ==
 552,37: 1
 552,38: )
 553,5: {
 554,7: file_flush
 554,17: VARIABLE
 554,17: (
 554,18: file_p
 554,24: VARIABLE
 554,24: )
 554,25: ;
 555,5: }
 
320 { option_block_item_list } 
 548,5: {
 549,7: file_p
 549,13: VARIABLE
 549,13: ->
 549,15: counter
 549,22: VARIABLE
 549,23: =
 549,25: 0
 549,26: ;
 550,7: file_p
 550,13: VARIABLE
 550,13: ->
 550,15: next_char_pos_p
 550,30: VARIABLE
 550,31: =
 550,33: file_p
 550,39: VARIABLE
 550,39: ->
 550,41: base
 550,45: VARIABLE
 550,45: ;
 551,5: }
 
201 NAME VARIABLE 
 549,7: file_p
 549,13: VARIABLE
 
65 VARIABLE 
 549,13: VARIABLE
 
147 -> general_identifier 
 549,13: ->
 549,15: counter
 549,22: VARIABLE
 
238 NAME VARIABLE 
 549,15: counter
 549,22: VARIABLE
 
65 VARIABLE 
 549,22: VARIABLE
 
181 = 
 549,23: =
 
279 CONSTANT 
 549,25: 0
 
331 ; 
 549,26: ;
 
201 NAME VARIABLE 
 550,7: file_p
 550,13: VARIABLE
 
65 VARIABLE 
 550,13: VARIABLE
 
147 -> general_identifier 
 550,13: ->
 550,15: next_char_pos_p
 550,30: VARIABLE
 
238 NAME VARIABLE 
 550,15: next_char_pos_p
 550,30: VARIABLE
 
65 VARIABLE 
 550,30: VARIABLE
 
181 = 
 550,31: =
 
279 NAME VARIABLE 
 550,33: file_p
 550,39: VARIABLE
 
179 VARIABLE 
 550,39: VARIABLE
 
147 -> general_identifier 
 550,39: ->
 550,41: base
 550,45: VARIABLE
 
238 NAME VARIABLE 
 550,41: base
 550,45: VARIABLE
 
65 VARIABLE 
 550,45: VARIABLE
 
331 ; 
 550,45: ;
 
201 } 
 551,5: }
 
512 else scoped_statement 
 552,5: else
 552,10: if
 552,13: (
 552,14: file_p
 552,20: VARIABLE
 552,20: ->
 552,22: flag
 552,26: VARIABLE
 552,26: .
 552,27: _WRITE
 552,33: VARIABLE
 552,34: ==
 552,37: 1
 552,38: )
 553,5: {
 554,7: file_flush
 554,17: VARIABLE
 554,17: (
 554,18: file_p
 554,24: VARIABLE
 554,24: )
 554,25: ;
 555,5: }
 
320 if ( expression ) scoped_statement 
 552,10: if
 552,13: (
 552,14: file_p
 552,20: VARIABLE
 552,20: ->
 552,22: flag
 552,26: VARIABLE
 552,26: .
 552,27: _WRITE
 552,33: VARIABLE
 552,34: ==
 552,37: 1
 552,38: )
 553,5: {
 554,7: file_flush
 554,17: VARIABLE
 554,17: (
 554,18: file_p
 554,24: VARIABLE
 554,24: )
 554,25: ;
 555,5: }
 
404 ( expression ) scoped_statement 
 552,13: (
 552,14: file_p
 552,20: VARIABLE
 552,20: ->
 552,22: flag
 552,26: VARIABLE
 552,26: .
 552,27: _WRITE
 552,33: VARIABLE
 552,34: ==
 552,37: 1
 552,38: )
 553,5: {
 554,7: file_flush
 554,17: VARIABLE
 554,17: (
 554,18: file_p
 554,24: VARIABLE
 554,24: )
 554,25: ;
 555,5: }
 
455 NAME VARIABLE 
 552,14: file_p
 552,20: VARIABLE
 
179 VARIABLE 
 552,20: VARIABLE
 
147 -> general_identifier 
 552,20: ->
 552,22: flag
 552,26: VARIABLE
 
238 NAME VARIABLE 
 552,22: flag
 552,26: VARIABLE
 
65 VARIABLE 
 552,26: VARIABLE
 
147 . general_identifier 
 552,26: .
 552,27: _WRITE
 552,33: VARIABLE
 
237 NAME VARIABLE 
 552,27: _WRITE
 552,33: VARIABLE
 
65 VARIABLE 
 552,33: VARIABLE
 
155 == 
 552,34: ==
 
257 CONSTANT 
 552,37: 1
 
483 ) scoped_statement 
 552,38: )
 553,5: {
 554,7: file_flush
 554,17: VARIABLE
 554,17: (
 554,18: file_p
 554,24: VARIABLE
 554,24: )
 554,25: ;
 555,5: }
 
320 { option_block_item_list } 
 553,5: {
 554,7: file_flush
 554,17: VARIABLE
 554,17: (
 554,18: file_p
 554,24: VARIABLE
 554,24: )
 554,25: ;
 555,5: }
 
201 NAME VARIABLE 
 554,7: file_flush
 554,17: VARIABLE
 
65 VARIABLE 
 554,17: VARIABLE
 
147 ( option_argument_expression_list ) 
 554,17: (
 554,18: file_p
 554,24: VARIABLE
 554,24: )
 
235 NAME VARIABLE 
 554,18: file_p
 554,24: VARIABLE
 
179 VARIABLE 
 554,24: VARIABLE
 
351 ) 
 554,24: )
 
331 ; 
 554,25: ;
 
201 } 
 555,5: }
 
201 } 
 556,3: }
 
201 return option_expression ; 
 558,3: return
 558,10: (
 558,11: lseek
 558,16: VARIABLE
 558,16: (
 558,17: file_p
 558,23: VARIABLE
 558,23: ->
 558,25: file_descriptor
 558,40: VARIABLE
 558,40: ,
 558,42: offset
 558,48: VARIABLE
 558,48: ,
 558,50: whence
 558,56: VARIABLE
 558,56: )
 558,58: <
 558,60: 0
 558,61: )
 558,62: ;
 
338 ( expression ) 
 558,10: (
 558,11: lseek
 558,16: VARIABLE
 558,16: (
 558,17: file_p
 558,23: VARIABLE
 558,23: ->
 558,25: file_descriptor
 558,40: VARIABLE
 558,40: ,
 558,42: offset
 558,48: VARIABLE
 558,48: ,
 558,50: whence
 558,56: VARIABLE
 558,56: )
 558,58: <
 558,60: 0
 558,61: )
 
165 NAME VARIABLE 
 558,11: lseek
 558,16: VARIABLE
 
65 VARIABLE 
 558,16: VARIABLE
 
147 ( option_argument_expression_list ) 
 558,16: (
 558,17: file_p
 558,23: VARIABLE
 558,23: ->
 558,25: file_descriptor
 558,40: VARIABLE
 558,40: ,
 558,42: offset
 558,48: VARIABLE
 558,48: ,
 558,50: whence
 558,56: VARIABLE
 558,56: )
 
235 NAME VARIABLE 
 558,17: file_p
 558,23: VARIABLE
 
179 VARIABLE 
 558,23: VARIABLE
 
147 -> general_identifier 
 558,23: ->
 558,25: file_descriptor
 558,40: VARIABLE
 
238 NAME VARIABLE 
 558,25: file_descriptor
 558,40: VARIABLE
 
65 VARIABLE 
 558,40: VARIABLE
 
352 , assignment_expression 
 558,40: ,
 558,42: offset
 558,48: VARIABLE
 
429 NAME VARIABLE 
 558,42: offset
 558,48: VARIABLE
 
179 VARIABLE 
 558,48: VARIABLE
 
352 , assignment_expression 
 558,48: ,
 558,50: whence
 558,56: VARIABLE
 
429 NAME VARIABLE 
 558,50: whence
 558,56: VARIABLE
 
179 VARIABLE 
 558,56: VARIABLE
 
351 ) 
 558,56: )
 
154 < 
 558,58: <
 
252 CONSTANT 
 558,60: 0
 
267 ) 
 558,61: )
 
415 ; 
 558,62: ;
 
201 } 
 559,1: }
 
23 int 
 561,1: int
 
5 NAME VARIABLE 
 561,5: main
 561,9: VARIABLE
 
65 VARIABLE 
 561,9: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 561,9: (
 561,10: void
 561,14: )
 
186 void 
 561,10: void
 
187 ) 
 561,14: )
 
94 { option_block_item_list } 
 562,1: {
 563,3: FILE
 563,7: TYPE
 563,8: *
 563,9: file_in_p
 563,18: VARIABLE
 563,18: ;
 564,3: FILE
 564,7: TYPE
 564,8: *
 564,9: file_out_p
 564,19: VARIABLE
 564,19: ;
 566,3: if
 566,6: (
 566,7: (
 566,8: file_in_p
 566,17: VARIABLE
 566,18: =
 566,20: file_open
 566,29: VARIABLE
 566,29: (
 566,30: "
 566,42: ,
 566,44: "
 566,47: )
 566,48: )
 566,50: ==
 566,53: 0
 566,54: )
 567,3: {
 568,5: write
 568,10: VARIABLE
 568,10: (
 568,11: 1
 568,12: ,
 568,14: "
 568,49: ,
 568,51: 33
 568,53: )
 568,54: ;
 569,5: return
 569,12: 1
 569,13: ;
 570,3: }
 572,3: if
 572,6: (
 572,7: (
 572,8: file_out_p
 572,18: VARIABLE
 572,19: =
 572,21: file_open
 572,30: VARIABLE
 572,30: (
 572,31: "
 572,40: ,
 572,42: "
 572,45: )
 572,46: )
 572,48: ==
 572,51: 0
 572,52: )
 573,3: {
 574,5: write
 574,10: VARIABLE
 574,10: (
 574,11: 1
 574,12: ,
 574,14: "
 574,49: ,
 574,51: 33
 574,53: )
 574,54: ;
 575,5: return
 575,12: 1
 575,13: ;
 576,3: }
 578,3: if
 578,6: (
 578,7: file_seek
 578,16: VARIABLE
 578,16: (
 578,17: file_in_p
 578,26: VARIABLE
 578,26: ,
 578,28: 5
 578,29: ,
 578,31: 0
 578,32: )
 578,34: ==
 578,37: -
 578,38: 1
 578,39: )
 579,3: {
 580,5: return
 580,12: 1
 580,13: ;
 581,3: }
 583,3: char
 583,8: c
 583,9: VARIABLE
 583,9: ;
 584,3: while
 584,9: (
 584,10: (
 584,11: c
 584,12: VARIABLE
 584,13: =
 584,15: (
 584,16: (
 584,17: --
 584,19: file_in_p
 584,28: VARIABLE
 584,28: ->
 584,30: counter
 584,37: VARIABLE
 584,38: >=
 584,41: 0
 584,42: )
 584,44: ?
 584,46: (
 584,47: unsigned
 584,56: char
 584,60: )
 584,61: *
 584,62: (
 584,63: file_in_p
 584,72: VARIABLE
 584,72: )
 584,73: ->
 584,75: next_char_pos_p
 584,90: VARIABLE
 584,90: ++
 584,93: :
 584,95: _fill_buffer
 584,107: VARIABLE
 584,107: (
 584,108: file_in_p
 584,117: VARIABLE
 584,117: )
 584,118: )
 584,119: )
 584,121: !=
 584,124: (
 584,125: -
 584,126: 1
 584,127: )
 584,128: )
 585,3: {
 586,5: (
 586,6: (
 586,7: --
 586,9: file_out_p
 586,19: VARIABLE
 586,19: ->
 586,21: counter
 586,28: VARIABLE
 586,29: >=
 586,32: 0
 586,33: )
 586,35: ?
 586,37: *
 586,38: file_out_p
 586,48: VARIABLE
 586,48: ->
 586,50: next_char_pos_p
 586,65: VARIABLE
 586,65: ++
 586,68: =
 586,70: c
 586,71: VARIABLE
 586,72: :
 586,74: _flush_buffer
 586,87: VARIABLE
 586,87: (
 586,88: c
 586,89: VARIABLE
 586,89: ,
 586,91: file_out_p
 586,101: VARIABLE
 586,101: )
 586,102: )
 586,103: ;
 587,3: }
 588,3: file_close
 588,13: VARIABLE
 588,13: (
 588,14: file_out_p
 588,24: VARIABLE
 588,24: )
 588,25: ;
 590,3: return
 590,10: 0
 590,11: ;
 591,1: }
 
201 NAME TYPE 
 563,3: FILE
 563,7: TYPE
 
65 TYPE 
 563,7: TYPE
 
93 * option_type_qualifier_list option_pointer 
 563,8: *
 
64 NAME VARIABLE 
 563,9: file_in_p
 563,18: VARIABLE
 
65 VARIABLE 
 563,18: VARIABLE
 
60 ; 
 563,18: ;
 
201 NAME TYPE 
 564,3: FILE
 564,7: TYPE
 
65 TYPE 
 564,7: TYPE
 
93 * option_type_qualifier_list option_pointer 
 564,8: *
 
64 NAME VARIABLE 
 564,9: file_out_p
 564,19: VARIABLE
 
65 VARIABLE 
 564,19: VARIABLE
 
60 ; 
 564,19: ;
 
320 if ( expression ) scoped_statement 
 566,3: if
 566,6: (
 566,7: (
 566,8: file_in_p
 566,17: VARIABLE
 566,18: =
 566,20: file_open
 566,29: VARIABLE
 566,29: (
 566,30: "
 566,42: ,
 566,44: "
 566,47: )
 566,48: )
 566,50: ==
 566,53: 0
 566,54: )
 567,3: {
 568,5: write
 568,10: VARIABLE
 568,10: (
 568,11: 1
 568,12: ,
 568,14: "
 568,49: ,
 568,51: 33
 568,53: )
 568,54: ;
 569,5: return
 569,12: 1
 569,13: ;
 570,3: }
 
404 ( expression ) scoped_statement 
 566,6: (
 566,7: (
 566,8: file_in_p
 566,17: VARIABLE
 566,18: =
 566,20: file_open
 566,29: VARIABLE
 566,29: (
 566,30: "
 566,42: ,
 566,44: "
 566,47: )
 566,48: )
 566,50: ==
 566,53: 0
 566,54: )
 567,3: {
 568,5: write
 568,10: VARIABLE
 568,10: (
 568,11: 1
 568,12: ,
 568,14: "
 568,49: ,
 568,51: 33
 568,53: )
 568,54: ;
 569,5: return
 569,12: 1
 569,13: ;
 570,3: }
 
455 ( expression ) 
 566,7: (
 566,8: file_in_p
 566,17: VARIABLE
 566,18: =
 566,20: file_open
 566,29: VARIABLE
 566,29: (
 566,30: "
 566,42: ,
 566,44: "
 566,47: )
 566,48: )
 
165 NAME VARIABLE 
 566,8: file_in_p
 566,17: VARIABLE
 
65 VARIABLE 
 566,17: VARIABLE
 
181 = 
 566,18: =
 
279 NAME VARIABLE 
 566,20: file_open
 566,29: VARIABLE
 
179 VARIABLE 
 566,29: VARIABLE
 
147 ( option_argument_expression_list ) 
 566,29: (
 566,30: "
 566,42: ,
 566,44: "
 566,47: )
 
235 STRING_LITERAL 
 566,30: "
 
352 , assignment_expression 
 566,42: ,
 566,44: "
 
429 STRING_LITERAL 
 566,44: "
 
351 ) 
 566,47: )
 
267 ) 
 566,48: )
 
155 == 
 566,50: ==
 
257 CONSTANT 
 566,53: 0
 
483 ) scoped_statement 
 566,54: )
 567,3: {
 568,5: write
 568,10: VARIABLE
 568,10: (
 568,11: 1
 568,12: ,
 568,14: "
 568,49: ,
 568,51: 33
 568,53: )
 568,54: ;
 569,5: return
 569,12: 1
 569,13: ;
 570,3: }
 
320 { option_block_item_list } 
 567,3: {
 568,5: write
 568,10: VARIABLE
 568,10: (
 568,11: 1
 568,12: ,
 568,14: "
 568,49: ,
 568,51: 33
 568,53: )
 568,54: ;
 569,5: return
 569,12: 1
 569,13: ;
 570,3: }
 
201 NAME VARIABLE 
 568,5: write
 568,10: VARIABLE
 
65 VARIABLE 
 568,10: VARIABLE
 
147 ( option_argument_expression_list ) 
 568,10: (
 568,11: 1
 568,12: ,
 568,14: "
 568,49: ,
 568,51: 33
 568,53: )
 
235 CONSTANT 
 568,11: 1
 
352 , assignment_expression 
 568,12: ,
 568,14: "
 
429 STRING_LITERAL 
 568,14: "
 
352 , assignment_expression 
 568,49: ,
 568,51: 33
 
429 CONSTANT 
 568,51: 33
 
351 ) 
 568,53: )
 
331 ; 
 568,54: ;
 
201 return option_expression ; 
 569,5: return
 569,12: 1
 569,13: ;
 
338 CONSTANT 
 569,12: 1
 
415 ; 
 569,13: ;
 
201 } 
 570,3: }
 
320 if ( expression ) scoped_statement 
 572,3: if
 572,6: (
 572,7: (
 572,8: file_out_p
 572,18: VARIABLE
 572,19: =
 572,21: file_open
 572,30: VARIABLE
 572,30: (
 572,31: "
 572,40: ,
 572,42: "
 572,45: )
 572,46: )
 572,48: ==
 572,51: 0
 572,52: )
 573,3: {
 574,5: write
 574,10: VARIABLE
 574,10: (
 574,11: 1
 574,12: ,
 574,14: "
 574,49: ,
 574,51: 33
 574,53: )
 574,54: ;
 575,5: return
 575,12: 1
 575,13: ;
 576,3: }
 
404 ( expression ) scoped_statement 
 572,6: (
 572,7: (
 572,8: file_out_p
 572,18: VARIABLE
 572,19: =
 572,21: file_open
 572,30: VARIABLE
 572,30: (
 572,31: "
 572,40: ,
 572,42: "
 572,45: )
 572,46: )
 572,48: ==
 572,51: 0
 572,52: )
 573,3: {
 574,5: write
 574,10: VARIABLE
 574,10: (
 574,11: 1
 574,12: ,
 574,14: "
 574,49: ,
 574,51: 33
 574,53: )
 574,54: ;
 575,5: return
 575,12: 1
 575,13: ;
 576,3: }
 
455 ( expression ) 
 572,7: (
 572,8: file_out_p
 572,18: VARIABLE
 572,19: =
 572,21: file_open
 572,30: VARIABLE
 572,30: (
 572,31: "
 572,40: ,
 572,42: "
 572,45: )
 572,46: )
 
165 NAME VARIABLE 
 572,8: file_out_p
 572,18: VARIABLE
 
65 VARIABLE 
 572,18: VARIABLE
 
181 = 
 572,19: =
 
279 NAME VARIABLE 
 572,21: file_open
 572,30: VARIABLE
 
179 VARIABLE 
 572,30: VARIABLE
 
147 ( option_argument_expression_list ) 
 572,30: (
 572,31: "
 572,40: ,
 572,42: "
 572,45: )
 
235 STRING_LITERAL 
 572,31: "
 
352 , assignment_expression 
 572,40: ,
 572,42: "
 
429 STRING_LITERAL 
 572,42: "
 
351 ) 
 572,45: )
 
267 ) 
 572,46: )
 
155 == 
 572,48: ==
 
257 CONSTANT 
 572,51: 0
 
483 ) scoped_statement 
 572,52: )
 573,3: {
 574,5: write
 574,10: VARIABLE
 574,10: (
 574,11: 1
 574,12: ,
 574,14: "
 574,49: ,
 574,51: 33
 574,53: )
 574,54: ;
 575,5: return
 575,12: 1
 575,13: ;
 576,3: }
 
320 { option_block_item_list } 
 573,3: {
 574,5: write
 574,10: VARIABLE
 574,10: (
 574,11: 1
 574,12: ,
 574,14: "
 574,49: ,
 574,51: 33
 574,53: )
 574,54: ;
 575,5: return
 575,12: 1
 575,13: ;
 576,3: }
 
201 NAME VARIABLE 
 574,5: write
 574,10: VARIABLE
 
65 VARIABLE 
 574,10: VARIABLE
 
147 ( option_argument_expression_list ) 
 574,10: (
 574,11: 1
 574,12: ,
 574,14: "
 574,49: ,
 574,51: 33
 574,53: )
 
235 CONSTANT 
 574,11: 1
 
352 , assignment_expression 
 574,12: ,
 574,14: "
 
429 STRING_LITERAL 
 574,14: "
 
352 , assignment_expression 
 574,49: ,
 574,51: 33
 
429 CONSTANT 
 574,51: 33
 
351 ) 
 574,53: )
 
331 ; 
 574,54: ;
 
201 return option_expression ; 
 575,5: return
 575,12: 1
 575,13: ;
 
338 CONSTANT 
 575,12: 1
 
415 ; 
 575,13: ;
 
201 } 
 576,3: }
 
320 if ( expression ) scoped_statement 
 578,3: if
 578,6: (
 578,7: file_seek
 578,16: VARIABLE
 578,16: (
 578,17: file_in_p
 578,26: VARIABLE
 578,26: ,
 578,28: 5
 578,29: ,
 578,31: 0
 578,32: )
 578,34: ==
 578,37: -
 578,38: 1
 578,39: )
 579,3: {
 580,5: return
 580,12: 1
 580,13: ;
 581,3: }
 
404 ( expression ) scoped_statement 
 578,6: (
 578,7: file_seek
 578,16: VARIABLE
 578,16: (
 578,17: file_in_p
 578,26: VARIABLE
 578,26: ,
 578,28: 5
 578,29: ,
 578,31: 0
 578,32: )
 578,34: ==
 578,37: -
 578,38: 1
 578,39: )
 579,3: {
 580,5: return
 580,12: 1
 580,13: ;
 581,3: }
 
455 NAME VARIABLE 
 578,7: file_seek
 578,16: VARIABLE
 
179 VARIABLE 
 578,16: VARIABLE
 
147 ( option_argument_expression_list ) 
 578,16: (
 578,17: file_in_p
 578,26: VARIABLE
 578,26: ,
 578,28: 5
 578,29: ,
 578,31: 0
 578,32: )
 
235 NAME VARIABLE 
 578,17: file_in_p
 578,26: VARIABLE
 
179 VARIABLE 
 578,26: VARIABLE
 
352 , assignment_expression 
 578,26: ,
 578,28: 5
 
429 CONSTANT 
 578,28: 5
 
352 , assignment_expression 
 578,29: ,
 578,31: 0
 
429 CONSTANT 
 578,31: 0
 
351 ) 
 578,32: )
 
155 == 
 578,34: ==
 
257 - 
 578,37: -
 
149 CONSTANT 
 578,38: 1
 
483 ) scoped_statement 
 578,39: )
 579,3: {
 580,5: return
 580,12: 1
 580,13: ;
 581,3: }
 
320 { option_block_item_list } 
 579,3: {
 580,5: return
 580,12: 1
 580,13: ;
 581,3: }
 
201 return option_expression ; 
 580,5: return
 580,12: 1
 580,13: ;
 
338 CONSTANT 
 580,12: 1
 
415 ; 
 580,13: ;
 
201 } 
 581,3: }
 
201 char 
 583,3: char
 
93 NAME VARIABLE 
 583,8: c
 583,9: VARIABLE
 
65 VARIABLE 
 583,9: VARIABLE
 
60 ; 
 583,9: ;
 
320 while ( expression ) scoped_statement 
 584,3: while
 584,9: (
 584,10: (
 584,11: c
 584,12: VARIABLE
 584,13: =
 584,15: (
 584,16: (
 584,17: --
 584,19: file_in_p
 584,28: VARIABLE
 584,28: ->
 584,30: counter
 584,37: VARIABLE
 584,38: >=
 584,41: 0
 584,42: )
 584,44: ?
 584,46: (
 584,47: unsigned
 584,56: char
 584,60: )
 584,61: *
 584,62: (
 584,63: file_in_p
 584,72: VARIABLE
 584,72: )
 584,73: ->
 584,75: next_char_pos_p
 584,90: VARIABLE
 584,90: ++
 584,93: :
 584,95: _fill_buffer
 584,107: VARIABLE
 584,107: (
 584,108: file_in_p
 584,117: VARIABLE
 584,117: )
 584,118: )
 584,119: )
 584,121: !=
 584,124: (
 584,125: -
 584,126: 1
 584,127: )
 584,128: )
 585,3: {
 586,5: (
 586,6: (
 586,7: --
 586,9: file_out_p
 586,19: VARIABLE
 586,19: ->
 586,21: counter
 586,28: VARIABLE
 586,29: >=
 586,32: 0
 586,33: )
 586,35: ?
 586,37: *
 586,38: file_out_p
 586,48: VARIABLE
 586,48: ->
 586,50: next_char_pos_p
 586,65: VARIABLE
 586,65: ++
 586,68: =
 586,70: c
 586,71: VARIABLE
 586,72: :
 586,74: _flush_buffer
 586,87: VARIABLE
 586,87: (
 586,88: c
 586,89: VARIABLE
 586,89: ,
 586,91: file_out_p
 586,101: VARIABLE
 586,101: )
 586,102: )
 586,103: ;
 587,3: }
 
406 ( expression ) scoped_statement 
 584,9: (
 584,10: (
 584,11: c
 584,12: VARIABLE
 584,13: =
 584,15: (
 584,16: (
 584,17: --
 584,19: file_in_p
 584,28: VARIABLE
 584,28: ->
 584,30: counter
 584,37: VARIABLE
 584,38: >=
 584,41: 0
 584,42: )
 584,44: ?
 584,46: (
 584,47: unsigned
 584,56: char
 584,60: )
 584,61: *
 584,62: (
 584,63: file_in_p
 584,72: VARIABLE
 584,72: )
 584,73: ->
 584,75: next_char_pos_p
 584,90: VARIABLE
 584,90: ++
 584,93: :
 584,95: _fill_buffer
 584,107: VARIABLE
 584,107: (
 584,108: file_in_p
 584,117: VARIABLE
 584,117: )
 584,118: )
 584,119: )
 584,121: !=
 584,124: (
 584,125: -
 584,126: 1
 584,127: )
 584,128: )
 585,3: {
 586,5: (
 586,6: (
 586,7: --
 586,9: file_out_p
 586,19: VARIABLE
 586,19: ->
 586,21: counter
 586,28: VARIABLE
 586,29: >=
 586,32: 0
 586,33: )
 586,35: ?
 586,37: *
 586,38: file_out_p
 586,48: VARIABLE
 586,48: ->
 586,50: next_char_pos_p
 586,65: VARIABLE
 586,65: ++
 586,68: =
 586,70: c
 586,71: VARIABLE
 586,72: :
 586,74: _flush_buffer
 586,87: VARIABLE
 586,87: (
 586,88: c
 586,89: VARIABLE
 586,89: ,
 586,91: file_out_p
 586,101: VARIABLE
 586,101: )
 586,102: )
 586,103: ;
 587,3: }
 
457 ( expression ) 
 584,10: (
 584,11: c
 584,12: VARIABLE
 584,13: =
 584,15: (
 584,16: (
 584,17: --
 584,19: file_in_p
 584,28: VARIABLE
 584,28: ->
 584,30: counter
 584,37: VARIABLE
 584,38: >=
 584,41: 0
 584,42: )
 584,44: ?
 584,46: (
 584,47: unsigned
 584,56: char
 584,60: )
 584,61: *
 584,62: (
 584,63: file_in_p
 584,72: VARIABLE
 584,72: )
 584,73: ->
 584,75: next_char_pos_p
 584,90: VARIABLE
 584,90: ++
 584,93: :
 584,95: _fill_buffer
 584,107: VARIABLE
 584,107: (
 584,108: file_in_p
 584,117: VARIABLE
 584,117: )
 584,118: )
 584,119: )
 
165 NAME VARIABLE 
 584,11: c
 584,12: VARIABLE
 
65 VARIABLE 
 584,12: VARIABLE
 
181 = 
 584,13: =
 
279 ( expression ) 
 584,15: (
 584,16: (
 584,17: --
 584,19: file_in_p
 584,28: VARIABLE
 584,28: ->
 584,30: counter
 584,37: VARIABLE
 584,38: >=
 584,41: 0
 584,42: )
 584,44: ?
 584,46: (
 584,47: unsigned
 584,56: char
 584,60: )
 584,61: *
 584,62: (
 584,63: file_in_p
 584,72: VARIABLE
 584,72: )
 584,73: ->
 584,75: next_char_pos_p
 584,90: VARIABLE
 584,90: ++
 584,93: :
 584,95: _fill_buffer
 584,107: VARIABLE
 584,107: (
 584,108: file_in_p
 584,117: VARIABLE
 584,117: )
 584,118: )
 
165 ( expression ) 
 584,16: (
 584,17: --
 584,19: file_in_p
 584,28: VARIABLE
 584,28: ->
 584,30: counter
 584,37: VARIABLE
 584,38: >=
 584,41: 0
 584,42: )
 
165 -- unary_expression 
 584,17: --
 584,19: file_in_p
 584,28: VARIABLE
 584,28: ->
 584,30: counter
 584,37: VARIABLE
 
169 NAME VARIABLE 
 584,19: file_in_p
 584,28: VARIABLE
 
179 VARIABLE 
 584,28: VARIABLE
 
147 -> general_identifier 
 584,28: ->
 584,30: counter
 584,37: VARIABLE
 
238 NAME VARIABLE 
 584,30: counter
 584,37: VARIABLE
 
65 VARIABLE 
 584,37: VARIABLE
 
154 >= 
 584,38: >=
 
252 CONSTANT 
 584,41: 0
 
267 ) 
 584,42: )
 
160 ? expression : conditional_expression 
 584,44: ?
 584,46: (
 584,47: unsigned
 584,56: char
 584,60: )
 584,61: *
 584,62: (
 584,63: file_in_p
 584,72: VARIABLE
 584,72: )
 584,73: ->
 584,75: next_char_pos_p
 584,90: VARIABLE
 584,90: ++
 584,93: :
 584,95: _fill_buffer
 584,107: VARIABLE
 584,107: (
 584,108: file_in_p
 584,117: VARIABLE
 584,117: )
 
265 ( type_name ) cast_expression 
 584,46: (
 584,47: unsigned
 584,56: char
 584,60: )
 584,61: *
 584,62: (
 584,63: file_in_p
 584,72: VARIABLE
 584,72: )
 584,73: ->
 584,75: next_char_pos_p
 584,90: VARIABLE
 584,90: ++
 
165 unsigned 
 584,47: unsigned
 
135 char 
 584,56: char
 
269 ) cast_expression 
 584,60: )
 584,61: *
 584,62: (
 584,63: file_in_p
 584,72: VARIABLE
 584,72: )
 584,73: ->
 584,75: next_char_pos_p
 584,90: VARIABLE
 584,90: ++
 
369 * 
 584,61: *
 
149 ( expression ) 
 584,62: (
 584,63: file_in_p
 584,72: VARIABLE
 584,72: )
 
165 NAME VARIABLE 
 584,63: file_in_p
 584,72: VARIABLE
 
65 VARIABLE 
 584,72: VARIABLE
 
267 ) 
 584,72: )
 
147 -> general_identifier 
 584,73: ->
 584,75: next_char_pos_p
 584,90: VARIABLE
 
238 NAME VARIABLE 
 584,75: next_char_pos_p
 584,90: VARIABLE
 
65 VARIABLE 
 584,90: VARIABLE
 
147 ++ 
 584,90: ++
 
366 : conditional_expression 
 584,93: :
 584,95: _fill_buffer
 584,107: VARIABLE
 584,107: (
 584,108: file_in_p
 584,117: VARIABLE
 584,117: )
 
431 NAME VARIABLE 
 584,95: _fill_buffer
 584,107: VARIABLE
 
179 VARIABLE 
 584,107: VARIABLE
 
147 ( option_argument_expression_list ) 
 584,107: (
 584,108: file_in_p
 584,117: VARIABLE
 584,117: )
 
235 NAME VARIABLE 
 584,108: file_in_p
 584,117: VARIABLE
 
179 VARIABLE 
 584,117: VARIABLE
 
351 ) 
 584,117: )
 
267 ) 
 584,118: )
 
267 ) 
 584,119: )
 
155 != 
 584,121: !=
 
257 ( expression ) 
 584,124: (
 584,125: -
 584,126: 1
 584,127: )
 
165 - 
 584,125: -
 
149 CONSTANT 
 584,126: 1
 
267 ) 
 584,127: )
 
485 ) scoped_statement 
 584,128: )
 585,3: {
 586,5: (
 586,6: (
 586,7: --
 586,9: file_out_p
 586,19: VARIABLE
 586,19: ->
 586,21: counter
 586,28: VARIABLE
 586,29: >=
 586,32: 0
 586,33: )
 586,35: ?
 586,37: *
 586,38: file_out_p
 586,48: VARIABLE
 586,48: ->
 586,50: next_char_pos_p
 586,65: VARIABLE
 586,65: ++
 586,68: =
 586,70: c
 586,71: VARIABLE
 586,72: :
 586,74: _flush_buffer
 586,87: VARIABLE
 586,87: (
 586,88: c
 586,89: VARIABLE
 586,89: ,
 586,91: file_out_p
 586,101: VARIABLE
 586,101: )
 586,102: )
 586,103: ;
 587,3: }
 
320 { option_block_item_list } 
 585,3: {
 586,5: (
 586,6: (
 586,7: --
 586,9: file_out_p
 586,19: VARIABLE
 586,19: ->
 586,21: counter
 586,28: VARIABLE
 586,29: >=
 586,32: 0
 586,33: )
 586,35: ?
 586,37: *
 586,38: file_out_p
 586,48: VARIABLE
 586,48: ->
 586,50: next_char_pos_p
 586,65: VARIABLE
 586,65: ++
 586,68: =
 586,70: c
 586,71: VARIABLE
 586,72: :
 586,74: _flush_buffer
 586,87: VARIABLE
 586,87: (
 586,88: c
 586,89: VARIABLE
 586,89: ,
 586,91: file_out_p
 586,101: VARIABLE
 586,101: )
 586,102: )
 586,103: ;
 587,3: }
 
201 ( expression ) 
 586,5: (
 586,6: (
 586,7: --
 586,9: file_out_p
 586,19: VARIABLE
 586,19: ->
 586,21: counter
 586,28: VARIABLE
 586,29: >=
 586,32: 0
 586,33: )
 586,35: ?
 586,37: *
 586,38: file_out_p
 586,48: VARIABLE
 586,48: ->
 586,50: next_char_pos_p
 586,65: VARIABLE
 586,65: ++
 586,68: =
 586,70: c
 586,71: VARIABLE
 586,72: :
 586,74: _flush_buffer
 586,87: VARIABLE
 586,87: (
 586,88: c
 586,89: VARIABLE
 586,89: ,
 586,91: file_out_p
 586,101: VARIABLE
 586,101: )
 586,102: )
 
165 ( expression ) 
 586,6: (
 586,7: --
 586,9: file_out_p
 586,19: VARIABLE
 586,19: ->
 586,21: counter
 586,28: VARIABLE
 586,29: >=
 586,32: 0
 586,33: )
 
165 -- unary_expression 
 586,7: --
 586,9: file_out_p
 586,19: VARIABLE
 586,19: ->
 586,21: counter
 586,28: VARIABLE
 
169 NAME VARIABLE 
 586,9: file_out_p
 586,19: VARIABLE
 
179 VARIABLE 
 586,19: VARIABLE
 
147 -> general_identifier 
 586,19: ->
 586,21: counter
 586,28: VARIABLE
 
238 NAME VARIABLE 
 586,21: counter
 586,28: VARIABLE
 
65 VARIABLE 
 586,28: VARIABLE
 
154 >= 
 586,29: >=
 
252 CONSTANT 
 586,32: 0
 
267 ) 
 586,33: )
 
160 ? expression : conditional_expression 
 586,35: ?
 586,37: *
 586,38: file_out_p
 586,48: VARIABLE
 586,48: ->
 586,50: next_char_pos_p
 586,65: VARIABLE
 586,65: ++
 586,68: =
 586,70: c
 586,71: VARIABLE
 586,72: :
 586,74: _flush_buffer
 586,87: VARIABLE
 586,87: (
 586,88: c
 586,89: VARIABLE
 586,89: ,
 586,91: file_out_p
 586,101: VARIABLE
 586,101: )
 
265 * 
 586,37: *
 
149 NAME VARIABLE 
 586,38: file_out_p
 586,48: VARIABLE
 
179 VARIABLE 
 586,48: VARIABLE
 
147 -> general_identifier 
 586,48: ->
 586,50: next_char_pos_p
 586,65: VARIABLE
 
238 NAME VARIABLE 
 586,50: next_char_pos_p
 586,65: VARIABLE
 
65 VARIABLE 
 586,65: VARIABLE
 
147 ++ 
 586,65: ++
 
181 = 
 586,68: =
 
279 NAME VARIABLE 
 586,70: c
 586,71: VARIABLE
 
179 VARIABLE 
 586,71: VARIABLE
 
366 : conditional_expression 
 586,72: :
 586,74: _flush_buffer
 586,87: VARIABLE
 586,87: (
 586,88: c
 586,89: VARIABLE
 586,89: ,
 586,91: file_out_p
 586,101: VARIABLE
 586,101: )
 
431 NAME VARIABLE 
 586,74: _flush_buffer
 586,87: VARIABLE
 
179 VARIABLE 
 586,87: VARIABLE
 
147 ( option_argument_expression_list ) 
 586,87: (
 586,88: c
 586,89: VARIABLE
 586,89: ,
 586,91: file_out_p
 586,101: VARIABLE
 586,101: )
 
235 NAME VARIABLE 
 586,88: c
 586,89: VARIABLE
 
179 VARIABLE 
 586,89: VARIABLE
 
352 , assignment_expression 
 586,89: ,
 586,91: file_out_p
 586,101: VARIABLE
 
429 NAME VARIABLE 
 586,91: file_out_p
 586,101: VARIABLE
 
179 VARIABLE 
 586,101: VARIABLE
 
351 ) 
 586,101: )
 
267 ) 
 586,102: )
 
331 ; 
 586,103: ;
 
201 } 
 587,3: }
 
201 NAME VARIABLE 
 588,3: file_close
 588,13: VARIABLE
 
65 VARIABLE 
 588,13: VARIABLE
 
147 ( option_argument_expression_list ) 
 588,13: (
 588,14: file_out_p
 588,24: VARIABLE
 588,24: )
 
235 NAME VARIABLE 
 588,14: file_out_p
 588,24: VARIABLE
 
179 VARIABLE 
 588,24: VARIABLE
 
351 ) 
 588,24: )
 
331 ; 
 588,25: ;
 
201 return option_expression ; 
 590,3: return
 590,10: 0
 590,11: ;
 
338 CONSTANT 
 590,10: 0
 
415 ; 
 590,11: ;
 
201 } 
 591,1: }
 
23 $ 
 592,1: $
 
