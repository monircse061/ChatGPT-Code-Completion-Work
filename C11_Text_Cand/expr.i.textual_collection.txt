parse time: 703.63s
0 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 48,1: typedef
 48,9: long
 48,14: unsigned
 48,23: int
 
54 long 
 48,9: long
 
106 unsigned 
 48,14: unsigned
 
106 int 
 48,23: int
 
6 NAME VARIABLE 
 48,27: size_t
 48,33: VARIABLE
 
65 VARIABLE 
 48,33: VARIABLE
 
70 ; 
 48,33: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 54,1: typedef
 54,9: __builtin_va_list
 54,26: TYPE
 
54 NAME TYPE 
 54,9: __builtin_va_list
 54,26: TYPE
 
26 TYPE 
 54,26: TYPE
 
6 NAME VARIABLE 
 54,27: __gnuc_va_list
 54,41: VARIABLE
 
65 VARIABLE 
 54,41: VARIABLE
 
70 ; 
 54,41: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 68,1: typedef
 68,9: unsigned
 68,18: char
 
54 unsigned 
 68,9: unsigned
 
106 char 
 68,18: char
 
6 NAME VARIABLE 
 68,23: __u_char
 68,31: VARIABLE
 
65 VARIABLE 
 68,31: VARIABLE
 
70 ; 
 68,31: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 69,1: typedef
 69,9: unsigned
 69,18: short
 69,24: int
 
54 unsigned 
 69,9: unsigned
 
106 short 
 69,18: short
 
106 int 
 69,24: int
 
6 NAME VARIABLE 
 69,28: __u_short
 69,37: VARIABLE
 
65 VARIABLE 
 69,37: VARIABLE
 
70 ; 
 69,37: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 70,1: typedef
 70,9: unsigned
 70,18: int
 
54 unsigned 
 70,9: unsigned
 
106 int 
 70,18: int
 
6 NAME VARIABLE 
 70,22: __u_int
 70,29: VARIABLE
 
65 VARIABLE 
 70,29: VARIABLE
 
70 ; 
 70,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 71,1: typedef
 71,9: unsigned
 71,18: long
 71,23: int
 
54 unsigned 
 71,9: unsigned
 
106 long 
 71,18: long
 
106 int 
 71,23: int
 
6 NAME VARIABLE 
 71,27: __u_long
 71,35: VARIABLE
 
65 VARIABLE 
 71,35: VARIABLE
 
70 ; 
 71,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 74,1: typedef
 74,9: signed
 74,16: char
 
54 signed 
 74,9: signed
 
106 char 
 74,16: char
 
6 NAME VARIABLE 
 74,21: __int8_t
 74,29: VARIABLE
 
65 VARIABLE 
 74,29: VARIABLE
 
70 ; 
 74,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 75,1: typedef
 75,9: unsigned
 75,18: char
 
54 unsigned 
 75,9: unsigned
 
106 char 
 75,18: char
 
6 NAME VARIABLE 
 75,23: __uint8_t
 75,32: VARIABLE
 
65 VARIABLE 
 75,32: VARIABLE
 
70 ; 
 75,32: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 76,1: typedef
 76,9: signed
 76,16: short
 76,22: int
 
54 signed 
 76,9: signed
 
106 short 
 76,16: short
 
106 int 
 76,22: int
 
6 NAME VARIABLE 
 76,26: __int16_t
 76,35: VARIABLE
 
65 VARIABLE 
 76,35: VARIABLE
 
70 ; 
 76,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 77,1: typedef
 77,9: unsigned
 77,18: short
 77,24: int
 
54 unsigned 
 77,9: unsigned
 
106 short 
 77,18: short
 
106 int 
 77,24: int
 
6 NAME VARIABLE 
 77,28: __uint16_t
 77,38: VARIABLE
 
65 VARIABLE 
 77,38: VARIABLE
 
70 ; 
 77,38: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 78,1: typedef
 78,9: signed
 78,16: int
 
54 signed 
 78,9: signed
 
106 int 
 78,16: int
 
6 NAME VARIABLE 
 78,20: __int32_t
 78,29: VARIABLE
 
65 VARIABLE 
 78,29: VARIABLE
 
70 ; 
 78,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 79,1: typedef
 79,9: unsigned
 79,18: int
 
54 unsigned 
 79,9: unsigned
 
106 int 
 79,18: int
 
6 NAME VARIABLE 
 79,22: __uint32_t
 79,32: VARIABLE
 
65 VARIABLE 
 79,32: VARIABLE
 
70 ; 
 79,32: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 81,1: typedef
 81,9: signed
 81,16: long
 81,21: int
 
54 signed 
 81,9: signed
 
106 long 
 81,16: long
 
106 int 
 81,21: int
 
6 NAME VARIABLE 
 81,25: __int64_t
 81,34: VARIABLE
 
65 VARIABLE 
 81,34: VARIABLE
 
70 ; 
 81,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 82,1: typedef
 82,9: unsigned
 82,18: long
 82,23: int
 
54 unsigned 
 82,9: unsigned
 
106 long 
 82,18: long
 
106 int 
 82,23: int
 
6 NAME VARIABLE 
 82,27: __uint64_t
 82,37: VARIABLE
 
65 VARIABLE 
 82,37: VARIABLE
 
70 ; 
 82,37: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 89,1: typedef
 89,9: __int8_t
 89,17: TYPE
 
54 NAME TYPE 
 89,9: __int8_t
 89,17: TYPE
 
26 TYPE 
 89,17: TYPE
 
6 NAME VARIABLE 
 89,18: __int_least8_t
 89,32: VARIABLE
 
65 VARIABLE 
 89,32: VARIABLE
 
70 ; 
 89,32: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 90,1: typedef
 90,9: __uint8_t
 90,18: TYPE
 
54 NAME TYPE 
 90,9: __uint8_t
 90,18: TYPE
 
26 TYPE 
 90,18: TYPE
 
6 NAME VARIABLE 
 90,19: __uint_least8_t
 90,34: VARIABLE
 
65 VARIABLE 
 90,34: VARIABLE
 
70 ; 
 90,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 91,1: typedef
 91,9: __int16_t
 91,18: TYPE
 
54 NAME TYPE 
 91,9: __int16_t
 91,18: TYPE
 
26 TYPE 
 91,18: TYPE
 
6 NAME VARIABLE 
 91,19: __int_least16_t
 91,34: VARIABLE
 
65 VARIABLE 
 91,34: VARIABLE
 
70 ; 
 91,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 92,1: typedef
 92,9: __uint16_t
 92,19: TYPE
 
54 NAME TYPE 
 92,9: __uint16_t
 92,19: TYPE
 
26 TYPE 
 92,19: TYPE
 
6 NAME VARIABLE 
 92,20: __uint_least16_t
 92,36: VARIABLE
 
65 VARIABLE 
 92,36: VARIABLE
 
70 ; 
 92,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 93,1: typedef
 93,9: __int32_t
 93,18: TYPE
 
54 NAME TYPE 
 93,9: __int32_t
 93,18: TYPE
 
26 TYPE 
 93,18: TYPE
 
6 NAME VARIABLE 
 93,19: __int_least32_t
 93,34: VARIABLE
 
65 VARIABLE 
 93,34: VARIABLE
 
70 ; 
 93,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 94,1: typedef
 94,9: __uint32_t
 94,19: TYPE
 
54 NAME TYPE 
 94,9: __uint32_t
 94,19: TYPE
 
26 TYPE 
 94,19: TYPE
 
6 NAME VARIABLE 
 94,20: __uint_least32_t
 94,36: VARIABLE
 
65 VARIABLE 
 94,36: VARIABLE
 
70 ; 
 94,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 95,1: typedef
 95,9: __int64_t
 95,18: TYPE
 
54 NAME TYPE 
 95,9: __int64_t
 95,18: TYPE
 
26 TYPE 
 95,18: TYPE
 
6 NAME VARIABLE 
 95,19: __int_least64_t
 95,34: VARIABLE
 
65 VARIABLE 
 95,34: VARIABLE
 
70 ; 
 95,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 96,1: typedef
 96,9: __uint64_t
 96,19: TYPE
 
54 NAME TYPE 
 96,9: __uint64_t
 96,19: TYPE
 
26 TYPE 
 96,19: TYPE
 
6 NAME VARIABLE 
 96,20: __uint_least64_t
 96,36: VARIABLE
 
65 VARIABLE 
 96,36: VARIABLE
 
70 ; 
 96,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 100,1: typedef
 100,9: long
 100,14: int
 
54 long 
 100,9: long
 
106 int 
 100,14: int
 
6 NAME VARIABLE 
 100,18: __quad_t
 100,26: VARIABLE
 
65 VARIABLE 
 100,26: VARIABLE
 
70 ; 
 100,26: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 101,1: typedef
 101,9: unsigned
 101,18: long
 101,23: int
 
54 unsigned 
 101,9: unsigned
 
106 long 
 101,18: long
 
106 int 
 101,23: int
 
6 NAME VARIABLE 
 101,27: __u_quad_t
 101,37: VARIABLE
 
65 VARIABLE 
 101,37: VARIABLE
 
70 ; 
 101,37: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 109,1: typedef
 109,9: long
 109,14: int
 
54 long 
 109,9: long
 
106 int 
 109,14: int
 
6 NAME VARIABLE 
 109,18: __intmax_t
 109,28: VARIABLE
 
65 VARIABLE 
 109,28: VARIABLE
 
70 ; 
 109,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 110,1: typedef
 110,9: unsigned
 110,18: long
 110,23: int
 
54 unsigned 
 110,9: unsigned
 
106 long 
 110,18: long
 
106 int 
 110,23: int
 
6 NAME VARIABLE 
 110,27: __uintmax_t
 110,38: VARIABLE
 
65 VARIABLE 
 110,38: VARIABLE
 
70 ; 
 110,38: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 118,1: typedef
 118,9: unsigned
 118,18: long
 118,23: int
 
54 unsigned 
 118,9: unsigned
 
106 long 
 118,18: long
 
106 int 
 118,23: int
 
6 NAME VARIABLE 
 118,27: __dev_t
 118,34: VARIABLE
 
65 VARIABLE 
 118,34: VARIABLE
 
70 ; 
 118,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 119,1: typedef
 119,9: unsigned
 119,18: int
 
54 unsigned 
 119,9: unsigned
 
106 int 
 119,18: int
 
6 NAME VARIABLE 
 119,22: __uid_t
 119,29: VARIABLE
 
65 VARIABLE 
 119,29: VARIABLE
 
70 ; 
 119,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 120,1: typedef
 120,9: unsigned
 120,18: int
 
54 unsigned 
 120,9: unsigned
 
106 int 
 120,18: int
 
6 NAME VARIABLE 
 120,22: __gid_t
 120,29: VARIABLE
 
65 VARIABLE 
 120,29: VARIABLE
 
70 ; 
 120,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 121,1: typedef
 121,9: unsigned
 121,18: long
 121,23: int
 
54 unsigned 
 121,9: unsigned
 
106 long 
 121,18: long
 
106 int 
 121,23: int
 
6 NAME VARIABLE 
 121,27: __ino_t
 121,34: VARIABLE
 
65 VARIABLE 
 121,34: VARIABLE
 
70 ; 
 121,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 122,1: typedef
 122,9: unsigned
 122,18: long
 122,23: int
 
54 unsigned 
 122,9: unsigned
 
106 long 
 122,18: long
 
106 int 
 122,23: int
 
6 NAME VARIABLE 
 122,27: __ino64_t
 122,36: VARIABLE
 
65 VARIABLE 
 122,36: VARIABLE
 
70 ; 
 122,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 123,1: typedef
 123,9: unsigned
 123,18: int
 
54 unsigned 
 123,9: unsigned
 
106 int 
 123,18: int
 
6 NAME VARIABLE 
 123,22: __mode_t
 123,30: VARIABLE
 
65 VARIABLE 
 123,30: VARIABLE
 
70 ; 
 123,30: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 124,1: typedef
 124,9: unsigned
 124,18: long
 124,23: int
 
54 unsigned 
 124,9: unsigned
 
106 long 
 124,18: long
 
106 int 
 124,23: int
 
6 NAME VARIABLE 
 124,27: __nlink_t
 124,36: VARIABLE
 
65 VARIABLE 
 124,36: VARIABLE
 
70 ; 
 124,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 125,1: typedef
 125,9: long
 125,14: int
 
54 long 
 125,9: long
 
106 int 
 125,14: int
 
6 NAME VARIABLE 
 125,18: __off_t
 125,25: VARIABLE
 
65 VARIABLE 
 125,25: VARIABLE
 
70 ; 
 125,25: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 126,1: typedef
 126,9: long
 126,14: int
 
54 long 
 126,9: long
 
106 int 
 126,14: int
 
6 NAME VARIABLE 
 126,18: __off64_t
 126,27: VARIABLE
 
65 VARIABLE 
 126,27: VARIABLE
 
70 ; 
 126,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 127,1: typedef
 127,9: int
 
54 int 
 127,9: int
 
6 NAME VARIABLE 
 127,13: __pid_t
 127,20: VARIABLE
 
65 VARIABLE 
 127,20: VARIABLE
 
70 ; 
 127,20: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 128,1: typedef
 128,9: struct
 128,16: {
 128,18: int
 128,22: __val
 128,27: VARIABLE
 128,27: [
 128,28: 2
 128,29: ]
 128,30: ;
 128,32: }
 
54 struct 
 128,9: struct
 
89 { struct_declaration_list } 
 128,16: {
 128,18: int
 128,22: __val
 128,27: VARIABLE
 128,27: [
 128,28: 2
 128,29: ]
 128,30: ;
 128,32: }
 
126 int 
 128,18: int
 
200 NAME VARIABLE 
 128,22: __val
 128,27: VARIABLE
 
65 VARIABLE 
 128,27: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 128,27: [
 128,28: 2
 128,29: ]
 
188 CONSTANT 
 128,28: 2
 
305 ] 
 128,29: ]
 
313 ; 
 128,30: ;
 
198 } 
 128,32: }
 
6 NAME VARIABLE 
 128,34: __fsid_t
 128,42: VARIABLE
 
65 VARIABLE 
 128,42: VARIABLE
 
70 ; 
 128,42: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 129,1: typedef
 129,9: long
 129,14: int
 
54 long 
 129,9: long
 
106 int 
 129,14: int
 
6 NAME VARIABLE 
 129,18: __clock_t
 129,27: VARIABLE
 
65 VARIABLE 
 129,27: VARIABLE
 
70 ; 
 129,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 130,1: typedef
 130,9: unsigned
 130,18: long
 130,23: int
 
54 unsigned 
 130,9: unsigned
 
106 long 
 130,18: long
 
106 int 
 130,23: int
 
6 NAME VARIABLE 
 130,27: __rlim_t
 130,35: VARIABLE
 
65 VARIABLE 
 130,35: VARIABLE
 
70 ; 
 130,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 131,1: typedef
 131,9: unsigned
 131,18: long
 131,23: int
 
54 unsigned 
 131,9: unsigned
 
106 long 
 131,18: long
 
106 int 
 131,23: int
 
6 NAME VARIABLE 
 131,27: __rlim64_t
 131,37: VARIABLE
 
65 VARIABLE 
 131,37: VARIABLE
 
70 ; 
 131,37: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 132,1: typedef
 132,9: unsigned
 132,18: int
 
54 unsigned 
 132,9: unsigned
 
106 int 
 132,18: int
 
6 NAME VARIABLE 
 132,22: __id_t
 132,28: VARIABLE
 
65 VARIABLE 
 132,28: VARIABLE
 
70 ; 
 132,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 133,1: typedef
 133,9: long
 133,14: int
 
54 long 
 133,9: long
 
106 int 
 133,14: int
 
6 NAME VARIABLE 
 133,18: __time_t
 133,26: VARIABLE
 
65 VARIABLE 
 133,26: VARIABLE
 
70 ; 
 133,26: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 134,1: typedef
 134,9: unsigned
 134,18: int
 
54 unsigned 
 134,9: unsigned
 
106 int 
 134,18: int
 
6 NAME VARIABLE 
 134,22: __useconds_t
 134,34: VARIABLE
 
65 VARIABLE 
 134,34: VARIABLE
 
70 ; 
 134,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 135,1: typedef
 135,9: long
 135,14: int
 
54 long 
 135,9: long
 
106 int 
 135,14: int
 
6 NAME VARIABLE 
 135,18: __suseconds_t
 135,31: VARIABLE
 
65 VARIABLE 
 135,31: VARIABLE
 
70 ; 
 135,31: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 136,1: typedef
 136,9: long
 136,14: int
 
54 long 
 136,9: long
 
106 int 
 136,14: int
 
6 NAME VARIABLE 
 136,18: __suseconds64_t
 136,33: VARIABLE
 
65 VARIABLE 
 136,33: VARIABLE
 
70 ; 
 136,33: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 138,1: typedef
 138,9: int
 
54 int 
 138,9: int
 
6 NAME VARIABLE 
 138,13: __daddr_t
 138,22: VARIABLE
 
65 VARIABLE 
 138,22: VARIABLE
 
70 ; 
 138,22: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 139,1: typedef
 139,9: int
 
54 int 
 139,9: int
 
6 NAME VARIABLE 
 139,13: __key_t
 139,20: VARIABLE
 
65 VARIABLE 
 139,20: VARIABLE
 
70 ; 
 139,20: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 142,1: typedef
 142,9: int
 
54 int 
 142,9: int
 
6 NAME VARIABLE 
 142,13: __clockid_t
 142,24: VARIABLE
 
65 VARIABLE 
 142,24: VARIABLE
 
70 ; 
 142,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 145,1: typedef
 145,9: void
 
54 void 
 145,9: void
 
6 * option_type_qualifier_list option_pointer 
 145,14: *
 
64 NAME VARIABLE 
 145,16: __timer_t
 145,25: VARIABLE
 
65 VARIABLE 
 145,25: VARIABLE
 
70 ; 
 145,25: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 148,1: typedef
 148,9: long
 148,14: int
 
54 long 
 148,9: long
 
106 int 
 148,14: int
 
6 NAME VARIABLE 
 148,18: __blksize_t
 148,29: VARIABLE
 
65 VARIABLE 
 148,29: VARIABLE
 
70 ; 
 148,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 153,1: typedef
 153,9: long
 153,14: int
 
54 long 
 153,9: long
 
106 int 
 153,14: int
 
6 NAME VARIABLE 
 153,18: __blkcnt_t
 153,28: VARIABLE
 
65 VARIABLE 
 153,28: VARIABLE
 
70 ; 
 153,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 154,1: typedef
 154,9: long
 154,14: int
 
54 long 
 154,9: long
 
106 int 
 154,14: int
 
6 NAME VARIABLE 
 154,18: __blkcnt64_t
 154,30: VARIABLE
 
65 VARIABLE 
 154,30: VARIABLE
 
70 ; 
 154,30: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 157,1: typedef
 157,9: unsigned
 157,18: long
 157,23: int
 
54 unsigned 
 157,9: unsigned
 
106 long 
 157,18: long
 
106 int 
 157,23: int
 
6 NAME VARIABLE 
 157,27: __fsblkcnt_t
 157,39: VARIABLE
 
65 VARIABLE 
 157,39: VARIABLE
 
70 ; 
 157,39: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 158,1: typedef
 158,9: unsigned
 158,18: long
 158,23: int
 
54 unsigned 
 158,9: unsigned
 
106 long 
 158,18: long
 
106 int 
 158,23: int
 
6 NAME VARIABLE 
 158,27: __fsblkcnt64_t
 158,41: VARIABLE
 
65 VARIABLE 
 158,41: VARIABLE
 
70 ; 
 158,41: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 161,1: typedef
 161,9: unsigned
 161,18: long
 161,23: int
 
54 unsigned 
 161,9: unsigned
 
106 long 
 161,18: long
 
106 int 
 161,23: int
 
6 NAME VARIABLE 
 161,27: __fsfilcnt_t
 161,39: VARIABLE
 
65 VARIABLE 
 161,39: VARIABLE
 
70 ; 
 161,39: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 162,1: typedef
 162,9: unsigned
 162,18: long
 162,23: int
 
54 unsigned 
 162,9: unsigned
 
106 long 
 162,18: long
 
106 int 
 162,23: int
 
6 NAME VARIABLE 
 162,27: __fsfilcnt64_t
 162,41: VARIABLE
 
65 VARIABLE 
 162,41: VARIABLE
 
70 ; 
 162,41: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 165,1: typedef
 165,9: long
 165,14: int
 
54 long 
 165,9: long
 
106 int 
 165,14: int
 
6 NAME VARIABLE 
 165,18: __fsword_t
 165,28: VARIABLE
 
65 VARIABLE 
 165,28: VARIABLE
 
70 ; 
 165,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 167,1: typedef
 167,9: long
 167,14: int
 
54 long 
 167,9: long
 
106 int 
 167,14: int
 
6 NAME VARIABLE 
 167,18: __ssize_t
 167,27: VARIABLE
 
65 VARIABLE 
 167,27: VARIABLE
 
70 ; 
 167,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 170,1: typedef
 170,9: long
 170,14: int
 
54 long 
 170,9: long
 
106 int 
 170,14: int
 
6 NAME VARIABLE 
 170,18: __syscall_slong_t
 170,35: VARIABLE
 
65 VARIABLE 
 170,35: VARIABLE
 
70 ; 
 170,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 172,1: typedef
 172,9: unsigned
 172,18: long
 172,23: int
 
54 unsigned 
 172,9: unsigned
 
106 long 
 172,18: long
 
106 int 
 172,23: int
 
6 NAME VARIABLE 
 172,27: __syscall_ulong_t
 172,44: VARIABLE
 
65 VARIABLE 
 172,44: VARIABLE
 
70 ; 
 172,44: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 176,1: typedef
 176,9: __off64_t
 176,18: TYPE
 
54 NAME TYPE 
 176,9: __off64_t
 176,18: TYPE
 
26 TYPE 
 176,18: TYPE
 
6 NAME VARIABLE 
 176,19: __loff_t
 176,27: VARIABLE
 
65 VARIABLE 
 176,27: VARIABLE
 
70 ; 
 176,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 177,1: typedef
 177,9: char
 
54 char 
 177,9: char
 
6 * option_type_qualifier_list option_pointer 
 177,14: *
 
64 NAME VARIABLE 
 177,15: __caddr_t
 177,24: VARIABLE
 
65 VARIABLE 
 177,24: VARIABLE
 
70 ; 
 177,24: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 180,1: typedef
 180,9: long
 180,14: int
 
54 long 
 180,9: long
 
106 int 
 180,14: int
 
6 NAME VARIABLE 
 180,18: __intptr_t
 180,28: VARIABLE
 
65 VARIABLE 
 180,28: VARIABLE
 
70 ; 
 180,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 183,1: typedef
 183,9: unsigned
 183,18: int
 
54 unsigned 
 183,9: unsigned
 
106 int 
 183,18: int
 
6 NAME VARIABLE 
 183,22: __socklen_t
 183,33: VARIABLE
 
65 VARIABLE 
 183,33: VARIABLE
 
70 ; 
 183,33: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 188,1: typedef
 188,9: int
 
54 int 
 188,9: int
 
6 NAME VARIABLE 
 188,13: __sig_atomic_t
 188,27: VARIABLE
 
65 VARIABLE 
 188,27: VARIABLE
 
70 ; 
 188,27: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 197,1: typedef
 197,9: struct
 198,1: {
 199,3: int
 199,7: __count
 199,14: VARIABLE
 199,14: ;
 200,3: union
 201,3: {
 202,5: unsigned
 202,14: int
 202,18: __wch
 202,23: VARIABLE
 202,23: ;
 203,5: char
 203,10: __wchb
 203,16: VARIABLE
 203,16: [
 203,17: 4
 203,18: ]
 203,19: ;
 204,3: }
 204,5: __value
 204,12: VARIABLE
 204,12: ;
 205,1: }
 
54 struct 
 197,9: struct
 
89 { struct_declaration_list } 
 198,1: {
 199,3: int
 199,7: __count
 199,14: VARIABLE
 199,14: ;
 200,3: union
 201,3: {
 202,5: unsigned
 202,14: int
 202,18: __wch
 202,23: VARIABLE
 202,23: ;
 203,5: char
 203,10: __wchb
 203,16: VARIABLE
 203,16: [
 203,17: 4
 203,18: ]
 203,19: ;
 204,3: }
 204,5: __value
 204,12: VARIABLE
 204,12: ;
 205,1: }
 
126 int 
 199,3: int
 
200 NAME VARIABLE 
 199,7: __count
 199,14: VARIABLE
 
65 VARIABLE 
 199,14: VARIABLE
 
313 ; 
 199,14: ;
 
198 union 
 200,3: union
 
89 { struct_declaration_list } 
 201,3: {
 202,5: unsigned
 202,14: int
 202,18: __wch
 202,23: VARIABLE
 202,23: ;
 203,5: char
 203,10: __wchb
 203,16: VARIABLE
 203,16: [
 203,17: 4
 203,18: ]
 203,19: ;
 204,3: }
 
126 unsigned 
 202,5: unsigned
 
135 int 
 202,14: int
 
200 NAME VARIABLE 
 202,18: __wch
 202,23: VARIABLE
 
65 VARIABLE 
 202,23: VARIABLE
 
313 ; 
 202,23: ;
 
198 char 
 203,5: char
 
200 NAME VARIABLE 
 203,10: __wchb
 203,16: VARIABLE
 
65 VARIABLE 
 203,16: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 203,16: [
 203,17: 4
 203,18: ]
 
188 CONSTANT 
 203,17: 4
 
305 ] 
 203,18: ]
 
313 ; 
 203,19: ;
 
198 } 
 204,3: }
 
200 NAME VARIABLE 
 204,5: __value
 204,12: VARIABLE
 
65 VARIABLE 
 204,12: VARIABLE
 
313 ; 
 204,12: ;
 
198 } 
 205,1: }
 
6 NAME VARIABLE 
 205,3: __mbstate_t
 205,14: VARIABLE
 
65 VARIABLE 
 205,14: VARIABLE
 
70 ; 
 205,14: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 211,1: typedef
 211,9: struct
 211,16: _G_fpos_t
 211,25: VARIABLE
 212,1: {
 213,3: __off_t
 213,10: TYPE
 213,11: __pos
 213,16: VARIABLE
 213,16: ;
 214,3: __mbstate_t
 214,14: TYPE
 214,15: __state
 214,22: VARIABLE
 214,22: ;
 215,1: }
 
54 struct 
 211,9: struct
 
22 NAME VARIABLE 
 211,16: _G_fpos_t
 211,25: VARIABLE
 
65 VARIABLE 
 211,25: VARIABLE
 
89 { struct_declaration_list } 
 212,1: {
 213,3: __off_t
 213,10: TYPE
 213,11: __pos
 213,16: VARIABLE
 213,16: ;
 214,3: __mbstate_t
 214,14: TYPE
 214,15: __state
 214,22: VARIABLE
 214,22: ;
 215,1: }
 
126 NAME TYPE 
 213,3: __off_t
 213,10: TYPE
 
26 TYPE 
 213,10: TYPE
 
200 NAME VARIABLE 
 213,11: __pos
 213,16: VARIABLE
 
65 VARIABLE 
 213,16: VARIABLE
 
313 ; 
 213,16: ;
 
198 NAME TYPE 
 214,3: __mbstate_t
 214,14: TYPE
 
26 TYPE 
 214,14: TYPE
 
200 NAME VARIABLE 
 214,15: __state
 214,22: VARIABLE
 
65 VARIABLE 
 214,22: VARIABLE
 
313 ; 
 214,22: ;
 
198 } 
 215,1: }
 
6 NAME VARIABLE 
 215,3: __fpos_t
 215,11: VARIABLE
 
65 VARIABLE 
 215,11: VARIABLE
 
70 ; 
 215,11: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 219,1: typedef
 219,9: struct
 219,16: _G_fpos64_t
 219,27: VARIABLE
 220,1: {
 221,3: __off64_t
 221,12: TYPE
 221,13: __pos
 221,18: VARIABLE
 221,18: ;
 222,3: __mbstate_t
 222,14: TYPE
 222,15: __state
 222,22: VARIABLE
 222,22: ;
 223,1: }
 
54 struct 
 219,9: struct
 
22 NAME VARIABLE 
 219,16: _G_fpos64_t
 219,27: VARIABLE
 
65 VARIABLE 
 219,27: VARIABLE
 
89 { struct_declaration_list } 
 220,1: {
 221,3: __off64_t
 221,12: TYPE
 221,13: __pos
 221,18: VARIABLE
 221,18: ;
 222,3: __mbstate_t
 222,14: TYPE
 222,15: __state
 222,22: VARIABLE
 222,22: ;
 223,1: }
 
126 NAME TYPE 
 221,3: __off64_t
 221,12: TYPE
 
26 TYPE 
 221,12: TYPE
 
200 NAME VARIABLE 
 221,13: __pos
 221,18: VARIABLE
 
65 VARIABLE 
 221,18: VARIABLE
 
313 ; 
 221,18: ;
 
198 NAME TYPE 
 222,3: __mbstate_t
 222,14: TYPE
 
26 TYPE 
 222,14: TYPE
 
200 NAME VARIABLE 
 222,15: __state
 222,22: VARIABLE
 
65 VARIABLE 
 222,22: VARIABLE
 
313 ; 
 222,22: ;
 
198 } 
 223,1: }
 
6 NAME VARIABLE 
 223,3: __fpos64_t
 223,13: VARIABLE
 
65 VARIABLE 
 223,13: VARIABLE
 
70 ; 
 223,13: ;
 
23 struct 
 229,1: struct
 
22 NAME VARIABLE 
 229,8: _IO_FILE
 229,16: VARIABLE
 
65 VARIABLE 
 229,16: VARIABLE
 
60 ; 
 229,16: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 230,1: typedef
 230,9: struct
 230,16: _IO_FILE
 230,24: VARIABLE
 
54 struct 
 230,9: struct
 
22 NAME VARIABLE 
 230,16: _IO_FILE
 230,24: VARIABLE
 
65 VARIABLE 
 230,24: VARIABLE
 
6 NAME VARIABLE 
 230,25: __FILE
 230,31: VARIABLE
 
65 VARIABLE 
 230,31: VARIABLE
 
70 ; 
 230,31: ;
 
23 struct 
 236,1: struct
 
22 NAME VARIABLE 
 236,8: _IO_FILE
 236,16: VARIABLE
 
65 VARIABLE 
 236,16: VARIABLE
 
60 ; 
 236,16: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 239,1: typedef
 239,9: struct
 239,16: _IO_FILE
 239,24: VARIABLE
 
54 struct 
 239,9: struct
 
22 NAME VARIABLE 
 239,16: _IO_FILE
 239,24: VARIABLE
 
65 VARIABLE 
 239,24: VARIABLE
 
6 NAME VARIABLE 
 239,25: FILE
 239,29: VARIABLE
 
65 VARIABLE 
 239,29: VARIABLE
 
70 ; 
 239,29: ;
 
23 struct 
 243,1: struct
 
22 NAME VARIABLE 
 243,8: _IO_FILE
 243,16: VARIABLE
 
65 VARIABLE 
 243,16: VARIABLE
 
60 ; 
 243,16: ;
 
23 struct 
 244,1: struct
 
22 NAME VARIABLE 
 244,8: _IO_marker
 244,18: VARIABLE
 
65 VARIABLE 
 244,18: VARIABLE
 
60 ; 
 244,18: ;
 
23 struct 
 245,1: struct
 
22 NAME VARIABLE 
 245,8: _IO_codecvt
 245,19: VARIABLE
 
65 VARIABLE 
 245,19: VARIABLE
 
60 ; 
 245,19: ;
 
23 struct 
 246,1: struct
 
22 NAME VARIABLE 
 246,8: _IO_wide_data
 246,21: VARIABLE
 
65 VARIABLE 
 246,21: VARIABLE
 
60 ; 
 246,21: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 251,1: typedef
 251,9: void
 
54 void 
 251,9: void
 
6 NAME VARIABLE 
 251,14: _IO_lock_t
 251,24: VARIABLE
 
65 VARIABLE 
 251,24: VARIABLE
 
70 ; 
 251,24: ;
 
23 struct 
 257,1: struct
 
22 NAME VARIABLE 
 257,8: _IO_FILE
 257,16: VARIABLE
 
65 VARIABLE 
 257,16: VARIABLE
 
89 { struct_declaration_list } 
 258,1: {
 259,3: int
 259,7: _flags
 259,13: VARIABLE
 259,13: ;
 262,3: char
 262,8: *
 262,9: _IO_read_ptr
 262,21: VARIABLE
 262,21: ;
 263,3: char
 263,8: *
 263,9: _IO_read_end
 263,21: VARIABLE
 263,21: ;
 264,3: char
 264,8: *
 264,9: _IO_read_base
 264,22: VARIABLE
 264,22: ;
 265,3: char
 265,8: *
 265,9: _IO_write_base
 265,23: VARIABLE
 265,23: ;
 266,3: char
 266,8: *
 266,9: _IO_write_ptr
 266,22: VARIABLE
 266,22: ;
 267,3: char
 267,8: *
 267,9: _IO_write_end
 267,22: VARIABLE
 267,22: ;
 268,3: char
 268,8: *
 268,9: _IO_buf_base
 268,21: VARIABLE
 268,21: ;
 269,3: char
 269,8: *
 269,9: _IO_buf_end
 269,20: VARIABLE
 269,20: ;
 272,3: char
 272,8: *
 272,9: _IO_save_base
 272,22: VARIABLE
 272,22: ;
 273,3: char
 273,8: *
 273,9: _IO_backup_base
 273,24: VARIABLE
 273,24: ;
 274,3: char
 274,8: *
 274,9: _IO_save_end
 274,21: VARIABLE
 274,21: ;
 276,3: struct
 276,10: _IO_marker
 276,20: VARIABLE
 276,21: *
 276,22: _markers
 276,30: VARIABLE
 276,30: ;
 278,3: struct
 278,10: _IO_FILE
 278,18: VARIABLE
 278,19: *
 278,20: _chain
 278,26: VARIABLE
 278,26: ;
 280,3: int
 280,7: _fileno
 280,14: VARIABLE
 280,14: ;
 281,3: int
 281,7: _flags2
 281,14: VARIABLE
 281,14: ;
 282,3: __off_t
 282,10: TYPE
 282,11: _old_offset
 282,22: VARIABLE
 282,22: ;
 285,3: unsigned
 285,12: short
 285,18: _cur_column
 285,29: VARIABLE
 285,29: ;
 286,3: signed
 286,10: char
 286,15: _vtable_offset
 286,29: VARIABLE
 286,29: ;
 287,3: char
 287,8: _shortbuf
 287,17: VARIABLE
 287,17: [
 287,18: 1
 287,19: ]
 287,20: ;
 289,3: _IO_lock_t
 289,13: TYPE
 289,14: *
 289,15: _lock
 289,20: VARIABLE
 289,20: ;
 297,3: __off64_t
 297,12: TYPE
 297,13: _offset
 297,20: VARIABLE
 297,20: ;
 299,3: struct
 299,10: _IO_codecvt
 299,21: VARIABLE
 299,22: *
 299,23: _codecvt
 299,31: VARIABLE
 299,31: ;
 300,3: struct
 300,10: _IO_wide_data
 300,23: VARIABLE
 300,24: *
 300,25: _wide_data
 300,35: VARIABLE
 300,35: ;
 301,3: struct
 301,10: _IO_FILE
 301,18: VARIABLE
 301,19: *
 301,20: _freeres_list
 301,33: VARIABLE
 301,33: ;
 302,3: void
 302,8: *
 302,9: _freeres_buf
 302,21: VARIABLE
 302,21: ;
 303,3: size_t
 303,9: TYPE
 303,10: __pad5
 303,16: VARIABLE
 303,16: ;
 304,3: int
 304,7: _mode
 304,12: VARIABLE
 304,12: ;
 306,3: char
 306,8: _unused2
 306,16: VARIABLE
 306,16: [
 306,17: 15
 306,20: *
 306,22: sizeof
 306,29: (
 306,30: int
 306,33: )
 306,35: -
 306,37: 4
 306,39: *
 306,41: sizeof
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 306,57: -
 306,59: sizeof
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 306,74: ]
 306,75: ;
 307,1: }
 
126 int 
 259,3: int
 
200 NAME VARIABLE 
 259,7: _flags
 259,13: VARIABLE
 
65 VARIABLE 
 259,13: VARIABLE
 
313 ; 
 259,13: ;
 
198 char 
 262,3: char
 
200 * option_type_qualifier_list option_pointer 
 262,8: *
 
64 NAME VARIABLE 
 262,9: _IO_read_ptr
 262,21: VARIABLE
 
65 VARIABLE 
 262,21: VARIABLE
 
313 ; 
 262,21: ;
 
198 char 
 263,3: char
 
200 * option_type_qualifier_list option_pointer 
 263,8: *
 
64 NAME VARIABLE 
 263,9: _IO_read_end
 263,21: VARIABLE
 
65 VARIABLE 
 263,21: VARIABLE
 
313 ; 
 263,21: ;
 
198 char 
 264,3: char
 
200 * option_type_qualifier_list option_pointer 
 264,8: *
 
64 NAME VARIABLE 
 264,9: _IO_read_base
 264,22: VARIABLE
 
65 VARIABLE 
 264,22: VARIABLE
 
313 ; 
 264,22: ;
 
198 char 
 265,3: char
 
200 * option_type_qualifier_list option_pointer 
 265,8: *
 
64 NAME VARIABLE 
 265,9: _IO_write_base
 265,23: VARIABLE
 
65 VARIABLE 
 265,23: VARIABLE
 
313 ; 
 265,23: ;
 
198 char 
 266,3: char
 
200 * option_type_qualifier_list option_pointer 
 266,8: *
 
64 NAME VARIABLE 
 266,9: _IO_write_ptr
 266,22: VARIABLE
 
65 VARIABLE 
 266,22: VARIABLE
 
313 ; 
 266,22: ;
 
198 char 
 267,3: char
 
200 * option_type_qualifier_list option_pointer 
 267,8: *
 
64 NAME VARIABLE 
 267,9: _IO_write_end
 267,22: VARIABLE
 
65 VARIABLE 
 267,22: VARIABLE
 
313 ; 
 267,22: ;
 
198 char 
 268,3: char
 
200 * option_type_qualifier_list option_pointer 
 268,8: *
 
64 NAME VARIABLE 
 268,9: _IO_buf_base
 268,21: VARIABLE
 
65 VARIABLE 
 268,21: VARIABLE
 
313 ; 
 268,21: ;
 
198 char 
 269,3: char
 
200 * option_type_qualifier_list option_pointer 
 269,8: *
 
64 NAME VARIABLE 
 269,9: _IO_buf_end
 269,20: VARIABLE
 
65 VARIABLE 
 269,20: VARIABLE
 
313 ; 
 269,20: ;
 
198 char 
 272,3: char
 
200 * option_type_qualifier_list option_pointer 
 272,8: *
 
64 NAME VARIABLE 
 272,9: _IO_save_base
 272,22: VARIABLE
 
65 VARIABLE 
 272,22: VARIABLE
 
313 ; 
 272,22: ;
 
198 char 
 273,3: char
 
200 * option_type_qualifier_list option_pointer 
 273,8: *
 
64 NAME VARIABLE 
 273,9: _IO_backup_base
 273,24: VARIABLE
 
65 VARIABLE 
 273,24: VARIABLE
 
313 ; 
 273,24: ;
 
198 char 
 274,3: char
 
200 * option_type_qualifier_list option_pointer 
 274,8: *
 
64 NAME VARIABLE 
 274,9: _IO_save_end
 274,21: VARIABLE
 
65 VARIABLE 
 274,21: VARIABLE
 
313 ; 
 274,21: ;
 
198 struct 
 276,3: struct
 
22 NAME VARIABLE 
 276,10: _IO_marker
 276,20: VARIABLE
 
65 VARIABLE 
 276,20: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 276,21: *
 
64 NAME VARIABLE 
 276,22: _markers
 276,30: VARIABLE
 
65 VARIABLE 
 276,30: VARIABLE
 
313 ; 
 276,30: ;
 
198 struct 
 278,3: struct
 
22 NAME VARIABLE 
 278,10: _IO_FILE
 278,18: VARIABLE
 
65 VARIABLE 
 278,18: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 278,19: *
 
64 NAME VARIABLE 
 278,20: _chain
 278,26: VARIABLE
 
65 VARIABLE 
 278,26: VARIABLE
 
313 ; 
 278,26: ;
 
198 int 
 280,3: int
 
200 NAME VARIABLE 
 280,7: _fileno
 280,14: VARIABLE
 
65 VARIABLE 
 280,14: VARIABLE
 
313 ; 
 280,14: ;
 
198 int 
 281,3: int
 
200 NAME VARIABLE 
 281,7: _flags2
 281,14: VARIABLE
 
65 VARIABLE 
 281,14: VARIABLE
 
313 ; 
 281,14: ;
 
198 NAME TYPE 
 282,3: __off_t
 282,10: TYPE
 
26 TYPE 
 282,10: TYPE
 
200 NAME VARIABLE 
 282,11: _old_offset
 282,22: VARIABLE
 
65 VARIABLE 
 282,22: VARIABLE
 
313 ; 
 282,22: ;
 
198 unsigned 
 285,3: unsigned
 
135 short 
 285,12: short
 
200 NAME VARIABLE 
 285,18: _cur_column
 285,29: VARIABLE
 
65 VARIABLE 
 285,29: VARIABLE
 
313 ; 
 285,29: ;
 
198 signed 
 286,3: signed
 
135 char 
 286,10: char
 
200 NAME VARIABLE 
 286,15: _vtable_offset
 286,29: VARIABLE
 
65 VARIABLE 
 286,29: VARIABLE
 
313 ; 
 286,29: ;
 
198 char 
 287,3: char
 
200 NAME VARIABLE 
 287,8: _shortbuf
 287,17: VARIABLE
 
65 VARIABLE 
 287,17: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 287,17: [
 287,18: 1
 287,19: ]
 
188 CONSTANT 
 287,18: 1
 
305 ] 
 287,19: ]
 
313 ; 
 287,20: ;
 
198 NAME TYPE 
 289,3: _IO_lock_t
 289,13: TYPE
 
26 TYPE 
 289,13: TYPE
 
200 * option_type_qualifier_list option_pointer 
 289,14: *
 
64 NAME VARIABLE 
 289,15: _lock
 289,20: VARIABLE
 
65 VARIABLE 
 289,20: VARIABLE
 
313 ; 
 289,20: ;
 
198 NAME TYPE 
 297,3: __off64_t
 297,12: TYPE
 
26 TYPE 
 297,12: TYPE
 
200 NAME VARIABLE 
 297,13: _offset
 297,20: VARIABLE
 
65 VARIABLE 
 297,20: VARIABLE
 
313 ; 
 297,20: ;
 
198 struct 
 299,3: struct
 
22 NAME VARIABLE 
 299,10: _IO_codecvt
 299,21: VARIABLE
 
65 VARIABLE 
 299,21: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 299,22: *
 
64 NAME VARIABLE 
 299,23: _codecvt
 299,31: VARIABLE
 
65 VARIABLE 
 299,31: VARIABLE
 
313 ; 
 299,31: ;
 
198 struct 
 300,3: struct
 
22 NAME VARIABLE 
 300,10: _IO_wide_data
 300,23: VARIABLE
 
65 VARIABLE 
 300,23: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 300,24: *
 
64 NAME VARIABLE 
 300,25: _wide_data
 300,35: VARIABLE
 
65 VARIABLE 
 300,35: VARIABLE
 
313 ; 
 300,35: ;
 
198 struct 
 301,3: struct
 
22 NAME VARIABLE 
 301,10: _IO_FILE
 301,18: VARIABLE
 
65 VARIABLE 
 301,18: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 301,19: *
 
64 NAME VARIABLE 
 301,20: _freeres_list
 301,33: VARIABLE
 
65 VARIABLE 
 301,33: VARIABLE
 
313 ; 
 301,33: ;
 
198 void 
 302,3: void
 
200 * option_type_qualifier_list option_pointer 
 302,8: *
 
64 NAME VARIABLE 
 302,9: _freeres_buf
 302,21: VARIABLE
 
65 VARIABLE 
 302,21: VARIABLE
 
313 ; 
 302,21: ;
 
198 NAME TYPE 
 303,3: size_t
 303,9: TYPE
 
26 TYPE 
 303,9: TYPE
 
200 NAME VARIABLE 
 303,10: __pad5
 303,16: VARIABLE
 
65 VARIABLE 
 303,16: VARIABLE
 
313 ; 
 303,16: ;
 
198 int 
 304,3: int
 
200 NAME VARIABLE 
 304,7: _mode
 304,12: VARIABLE
 
65 VARIABLE 
 304,12: VARIABLE
 
313 ; 
 304,12: ;
 
198 char 
 306,3: char
 
200 NAME VARIABLE 
 306,8: _unused2
 306,16: VARIABLE
 
65 VARIABLE 
 306,16: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 306,16: [
 306,17: 15
 306,20: *
 306,22: sizeof
 306,29: (
 306,30: int
 306,33: )
 306,35: -
 306,37: 4
 306,39: *
 306,41: sizeof
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 306,57: -
 306,59: sizeof
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 306,74: ]
 
188 CONSTANT 
 306,17: 15
 
151 * 
 306,20: *
 
242 sizeof ( type_name ) 
 306,22: sizeof
 306,29: (
 306,30: int
 306,33: )
 
170 ( type_name ) 
 306,29: (
 306,30: int
 306,33: )
 
276 int 
 306,30: int
 
373 ) 
 306,33: )
 
152 - 
 306,35: -
 
246 CONSTANT 
 306,37: 4
 
357 * 
 306,39: *
 
242 sizeof ( type_name ) 
 306,41: sizeof
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 
170 ( type_name ) 
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 
276 void 
 306,49: void
 
137 * option_type_qualifier_list option_pointer 
 306,54: *
 
373 ) 
 306,55: )
 
152 - 
 306,57: -
 
246 sizeof ( type_name ) 
 306,59: sizeof
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 
170 ( type_name ) 
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 
276 NAME TYPE 
 306,67: size_t
 306,73: TYPE
 
65 TYPE 
 306,73: TYPE
 
373 ) 
 306,73: )
 
305 ] 
 306,74: ]
 
313 ; 
 306,75: ;
 
198 } 
 307,1: }
 
60 ; 
 307,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 310,1: typedef
 310,9: __gnuc_va_list
 310,23: TYPE
 
54 NAME TYPE 
 310,9: __gnuc_va_list
 310,23: TYPE
 
26 TYPE 
 310,23: TYPE
 
6 NAME VARIABLE 
 310,24: va_list
 310,31: VARIABLE
 
65 VARIABLE 
 310,31: VARIABLE
 
70 ; 
 310,31: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 312,1: typedef
 312,9: __off_t
 312,16: TYPE
 
54 NAME TYPE 
 312,9: __off_t
 312,16: TYPE
 
26 TYPE 
 312,16: TYPE
 
6 NAME VARIABLE 
 312,17: off_t
 312,22: VARIABLE
 
65 VARIABLE 
 312,22: VARIABLE
 
70 ; 
 312,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 314,1: typedef
 314,9: __ssize_t
 314,18: TYPE
 
54 NAME TYPE 
 314,9: __ssize_t
 314,18: TYPE
 
26 TYPE 
 314,18: TYPE
 
6 NAME VARIABLE 
 314,19: ssize_t
 314,26: VARIABLE
 
65 VARIABLE 
 314,26: VARIABLE
 
70 ; 
 314,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 321,1: typedef
 321,9: __fpos_t
 321,17: TYPE
 
54 NAME TYPE 
 321,9: __fpos_t
 321,17: TYPE
 
26 TYPE 
 321,17: TYPE
 
6 NAME VARIABLE 
 321,18: fpos_t
 321,24: VARIABLE
 
65 VARIABLE 
 321,24: VARIABLE
 
70 ; 
 321,24: ;
 
23 extern 
 326,1: extern
 
8 NAME TYPE 
 326,8: FILE
 326,12: TYPE
 
26 TYPE 
 326,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 326,13: *
 
64 NAME VARIABLE 
 326,14: stdin
 326,19: VARIABLE
 
65 VARIABLE 
 326,19: VARIABLE
 
60 ; 
 326,19: ;
 
23 extern 
 327,1: extern
 
8 NAME TYPE 
 327,8: FILE
 327,12: TYPE
 
26 TYPE 
 327,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 327,13: *
 
64 NAME VARIABLE 
 327,14: stdout
 327,20: VARIABLE
 
65 VARIABLE 
 327,20: VARIABLE
 
60 ; 
 327,20: ;
 
23 extern 
 328,1: extern
 
8 NAME TYPE 
 328,8: FILE
 328,12: TYPE
 
26 TYPE 
 328,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 328,13: *
 
64 NAME VARIABLE 
 328,14: stderr
 328,20: VARIABLE
 
65 VARIABLE 
 328,20: VARIABLE
 
60 ; 
 328,20: ;
 
23 extern 
 335,1: extern
 
8 int 
 335,8: int
 
5 NAME VARIABLE 
 335,12: remove
 335,18: VARIABLE
 
65 VARIABLE 
 335,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 335,19: (
 335,20: const
 335,26: char
 335,31: *
 335,32: __filename
 335,42: VARIABLE
 335,42: )
 
186 const 
 335,20: const
 
103 char 
 335,26: char
 
298 * option_type_qualifier_list option_pointer 
 335,31: *
 
386 NAME VARIABLE 
 335,32: __filename
 335,42: VARIABLE
 
65 VARIABLE 
 335,42: VARIABLE
 
187 ) 
 335,42: )
 
60 ; 
 335,44: ;
 
23 extern 
 337,1: extern
 
8 int 
 337,8: int
 
5 NAME VARIABLE 
 337,12: rename
 337,18: VARIABLE
 
65 VARIABLE 
 337,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 337,19: (
 337,20: const
 337,26: char
 337,31: *
 337,32: __old
 337,37: VARIABLE
 337,37: ,
 337,39: const
 337,45: char
 337,50: *
 337,51: __new
 337,56: VARIABLE
 337,56: )
 
186 const 
 337,20: const
 
103 char 
 337,26: char
 
298 * option_type_qualifier_list option_pointer 
 337,31: *
 
386 NAME VARIABLE 
 337,32: __old
 337,37: VARIABLE
 
65 VARIABLE 
 337,37: VARIABLE
 
300 , parameter_declaration 
 337,37: ,
 337,39: const
 337,45: char
 337,50: *
 337,51: __new
 337,56: VARIABLE
 
391 const 
 337,39: const
 
103 char 
 337,45: char
 
298 * option_type_qualifier_list option_pointer 
 337,50: *
 
386 NAME VARIABLE 
 337,51: __new
 337,56: VARIABLE
 
65 VARIABLE 
 337,56: VARIABLE
 
187 ) 
 337,56: )
 
60 ; 
 337,58: ;
 
23 extern 
 341,1: extern
 
8 int 
 341,8: int
 
5 NAME VARIABLE 
 341,12: renameat
 341,20: VARIABLE
 
65 VARIABLE 
 341,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 341,21: (
 341,22: int
 341,26: __oldfd
 341,33: VARIABLE
 341,33: ,
 341,35: const
 341,41: char
 341,46: *
 341,47: __old
 341,52: VARIABLE
 341,52: ,
 341,54: int
 341,58: __newfd
 341,65: VARIABLE
 341,65: ,
 342,8: const
 342,14: char
 342,19: *
 342,20: __new
 342,25: VARIABLE
 342,25: )
 
186 int 
 341,22: int
 
298 NAME VARIABLE 
 341,26: __oldfd
 341,33: VARIABLE
 
65 VARIABLE 
 341,33: VARIABLE
 
300 , parameter_declaration 
 341,33: ,
 341,35: const
 341,41: char
 341,46: *
 341,47: __old
 341,52: VARIABLE
 
391 const 
 341,35: const
 
103 char 
 341,41: char
 
298 * option_type_qualifier_list option_pointer 
 341,46: *
 
386 NAME VARIABLE 
 341,47: __old
 341,52: VARIABLE
 
65 VARIABLE 
 341,52: VARIABLE
 
300 , parameter_declaration 
 341,52: ,
 341,54: int
 341,58: __newfd
 341,65: VARIABLE
 
391 int 
 341,54: int
 
298 NAME VARIABLE 
 341,58: __newfd
 341,65: VARIABLE
 
65 VARIABLE 
 341,65: VARIABLE
 
300 , parameter_declaration 
 341,65: ,
 342,8: const
 342,14: char
 342,19: *
 342,20: __new
 342,25: VARIABLE
 
391 const 
 342,8: const
 
103 char 
 342,14: char
 
298 * option_type_qualifier_list option_pointer 
 342,19: *
 
386 NAME VARIABLE 
 342,20: __new
 342,25: VARIABLE
 
65 VARIABLE 
 342,25: VARIABLE
 
187 ) 
 342,25: )
 
60 ; 
 342,27: ;
 
23 extern 
 344,1: extern
 
8 int 
 344,8: int
 
5 NAME VARIABLE 
 344,12: fclose
 344,18: VARIABLE
 
65 VARIABLE 
 344,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 344,19: (
 344,20: FILE
 344,24: TYPE
 344,25: *
 344,26: __stream
 344,34: VARIABLE
 344,34: )
 
186 NAME TYPE 
 344,20: FILE
 344,24: TYPE
 
65 TYPE 
 344,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 344,25: *
 
386 NAME VARIABLE 
 344,26: __stream
 344,34: VARIABLE
 
65 VARIABLE 
 344,34: VARIABLE
 
187 ) 
 344,34: )
 
60 ; 
 344,35: ;
 
23 extern 
 346,1: extern
 
8 NAME TYPE 
 346,8: FILE
 346,12: TYPE
 
26 TYPE 
 346,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 346,13: *
 
64 NAME VARIABLE 
 346,14: tmpfile
 346,21: VARIABLE
 
65 VARIABLE 
 346,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 346,22: (
 346,23: void
 346,27: )
 
186 void 
 346,23: void
 
187 ) 
 346,27: )
 
60 ; 
 347,5: ;
 
23 extern 
 349,1: extern
 
8 char 
 349,8: char
 
5 * option_type_qualifier_list option_pointer 
 349,13: *
 
64 NAME VARIABLE 
 349,14: tmpnam
 349,20: VARIABLE
 
65 VARIABLE 
 349,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 349,21: (
 349,22: char
 349,26: [
 349,27: 20
 349,29: ]
 349,30: )
 
186 char 
 349,22: char
 
231 [ option_assignment_expression ] 
 349,26: [
 349,27: 20
 349,29: ]
 
346 CONSTANT 
 349,27: 20
 
422 ] 
 349,29: ]
 
187 ) 
 349,30: )
 
60 ; 
 349,33: ;
 
23 extern 
 354,1: extern
 
8 char 
 354,8: char
 
5 * option_type_qualifier_list option_pointer 
 354,13: *
 
64 NAME VARIABLE 
 354,14: tmpnam_r
 354,22: VARIABLE
 
65 VARIABLE 
 354,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 354,23: (
 354,24: char
 354,29: __s
 354,32: VARIABLE
 354,32: [
 354,33: 20
 354,35: ]
 354,36: )
 
186 char 
 354,24: char
 
298 NAME VARIABLE 
 354,29: __s
 354,32: VARIABLE
 
65 VARIABLE 
 354,32: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 354,32: [
 354,33: 20
 354,35: ]
 
188 CONSTANT 
 354,33: 20
 
305 ] 
 354,35: ]
 
187 ) 
 354,36: )
 
60 ; 
 354,39: ;
 
23 extern 
 356,1: extern
 
8 char 
 356,8: char
 
5 * option_type_qualifier_list option_pointer 
 356,13: *
 
64 NAME VARIABLE 
 356,14: tempnam
 356,21: VARIABLE
 
65 VARIABLE 
 356,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 356,22: (
 356,23: const
 356,29: char
 356,34: *
 356,35: __dir
 356,40: VARIABLE
 356,40: ,
 356,42: const
 356,48: char
 356,53: *
 356,54: __pfx
 356,59: VARIABLE
 356,59: )
 
186 const 
 356,23: const
 
103 char 
 356,29: char
 
298 * option_type_qualifier_list option_pointer 
 356,34: *
 
386 NAME VARIABLE 
 356,35: __dir
 356,40: VARIABLE
 
65 VARIABLE 
 356,40: VARIABLE
 
300 , parameter_declaration 
 356,40: ,
 356,42: const
 356,48: char
 356,53: *
 356,54: __pfx
 356,59: VARIABLE
 
391 const 
 356,42: const
 
103 char 
 356,48: char
 
298 * option_type_qualifier_list option_pointer 
 356,53: *
 
386 NAME VARIABLE 
 356,54: __pfx
 356,59: VARIABLE
 
65 VARIABLE 
 356,59: VARIABLE
 
187 ) 
 356,59: )
 
60 ; 
 357,6: ;
 
23 extern 
 364,1: extern
 
8 int 
 364,8: int
 
5 NAME VARIABLE 
 364,12: fflush
 364,18: VARIABLE
 
65 VARIABLE 
 364,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 364,19: (
 364,20: FILE
 364,24: TYPE
 364,25: *
 364,26: __stream
 364,34: VARIABLE
 364,34: )
 
186 NAME TYPE 
 364,20: FILE
 364,24: TYPE
 
65 TYPE 
 364,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 364,25: *
 
386 NAME VARIABLE 
 364,26: __stream
 364,34: VARIABLE
 
65 VARIABLE 
 364,34: VARIABLE
 
187 ) 
 364,34: )
 
60 ; 
 364,35: ;
 
23 extern 
 366,1: extern
 
8 int 
 366,8: int
 
5 NAME VARIABLE 
 366,12: fflush_unlocked
 366,27: VARIABLE
 
65 VARIABLE 
 366,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 366,28: (
 366,29: FILE
 366,33: TYPE
 366,34: *
 366,35: __stream
 366,43: VARIABLE
 366,43: )
 
186 NAME TYPE 
 366,29: FILE
 366,33: TYPE
 
65 TYPE 
 366,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 366,34: *
 
386 NAME VARIABLE 
 366,35: __stream
 366,43: VARIABLE
 
65 VARIABLE 
 366,43: VARIABLE
 
187 ) 
 366,43: )
 
60 ; 
 366,44: ;
 
23 extern 
 368,1: extern
 
8 NAME TYPE 
 368,8: FILE
 368,12: TYPE
 
26 TYPE 
 368,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 368,13: *
 
64 NAME VARIABLE 
 368,14: fopen
 368,19: VARIABLE
 
65 VARIABLE 
 368,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 368,20: (
 368,21: const
 368,27: char
 368,32: *
 368,34: __filename
 368,44: VARIABLE
 368,44: ,
 369,7: const
 369,13: char
 369,18: *
 369,20: __modes
 369,27: VARIABLE
 369,27: )
 
186 const 
 368,21: const
 
103 char 
 368,27: char
 
298 * option_type_qualifier_list option_pointer 
 368,32: *
 
386 NAME VARIABLE 
 368,34: __filename
 368,44: VARIABLE
 
65 VARIABLE 
 368,44: VARIABLE
 
300 , parameter_declaration 
 368,44: ,
 369,7: const
 369,13: char
 369,18: *
 369,20: __modes
 369,27: VARIABLE
 
391 const 
 369,7: const
 
103 char 
 369,13: char
 
298 * option_type_qualifier_list option_pointer 
 369,18: *
 
386 NAME VARIABLE 
 369,20: __modes
 369,27: VARIABLE
 
65 VARIABLE 
 369,27: VARIABLE
 
187 ) 
 369,27: )
 
60 ; 
 370,5: ;
 
23 extern 
 375,1: extern
 
8 NAME TYPE 
 375,8: FILE
 375,12: TYPE
 
26 TYPE 
 375,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 375,13: *
 
64 NAME VARIABLE 
 375,14: freopen
 375,21: VARIABLE
 
65 VARIABLE 
 375,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 375,22: (
 375,23: const
 375,29: char
 375,34: *
 375,36: __filename
 375,46: VARIABLE
 375,46: ,
 376,9: const
 376,15: char
 376,20: *
 376,22: __modes
 376,29: VARIABLE
 376,29: ,
 377,9: FILE
 377,13: TYPE
 377,14: *
 377,16: __stream
 377,24: VARIABLE
 377,24: )
 
186 const 
 375,23: const
 
103 char 
 375,29: char
 
298 * option_type_qualifier_list option_pointer 
 375,34: *
 
386 NAME VARIABLE 
 375,36: __filename
 375,46: VARIABLE
 
65 VARIABLE 
 375,46: VARIABLE
 
300 , parameter_declaration 
 375,46: ,
 376,9: const
 376,15: char
 376,20: *
 376,22: __modes
 376,29: VARIABLE
 
391 const 
 376,9: const
 
103 char 
 376,15: char
 
298 * option_type_qualifier_list option_pointer 
 376,20: *
 
386 NAME VARIABLE 
 376,22: __modes
 376,29: VARIABLE
 
65 VARIABLE 
 376,29: VARIABLE
 
300 , parameter_declaration 
 376,29: ,
 377,9: FILE
 377,13: TYPE
 377,14: *
 377,16: __stream
 377,24: VARIABLE
 
391 NAME TYPE 
 377,9: FILE
 377,13: TYPE
 
26 TYPE 
 377,13: TYPE
 
298 * option_type_qualifier_list option_pointer 
 377,14: *
 
386 NAME VARIABLE 
 377,16: __stream
 377,24: VARIABLE
 
65 VARIABLE 
 377,24: VARIABLE
 
187 ) 
 377,24: )
 
60 ; 
 377,26: ;
 
23 extern 
 379,1: extern
 
8 NAME TYPE 
 379,8: FILE
 379,12: TYPE
 
26 TYPE 
 379,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 379,13: *
 
64 NAME VARIABLE 
 379,14: fdopen
 379,20: VARIABLE
 
65 VARIABLE 
 379,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 379,21: (
 379,22: int
 379,26: __fd
 379,30: VARIABLE
 379,30: ,
 379,32: const
 379,38: char
 379,43: *
 379,44: __modes
 379,51: VARIABLE
 379,51: )
 
186 int 
 379,22: int
 
298 NAME VARIABLE 
 379,26: __fd
 379,30: VARIABLE
 
65 VARIABLE 
 379,30: VARIABLE
 
300 , parameter_declaration 
 379,30: ,
 379,32: const
 379,38: char
 379,43: *
 379,44: __modes
 379,51: VARIABLE
 
391 const 
 379,32: const
 
103 char 
 379,38: char
 
298 * option_type_qualifier_list option_pointer 
 379,43: *
 
386 NAME VARIABLE 
 379,44: __modes
 379,51: VARIABLE
 
65 VARIABLE 
 379,51: VARIABLE
 
187 ) 
 379,51: )
 
60 ; 
 380,5: ;
 
23 extern 
 382,1: extern
 
8 NAME TYPE 
 382,8: FILE
 382,12: TYPE
 
26 TYPE 
 382,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 382,13: *
 
64 NAME VARIABLE 
 382,14: fmemopen
 382,22: VARIABLE
 
65 VARIABLE 
 382,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 382,23: (
 382,24: void
 382,29: *
 382,30: __s
 382,33: VARIABLE
 382,33: ,
 382,35: size_t
 382,41: TYPE
 382,42: __len
 382,47: VARIABLE
 382,47: ,
 382,49: const
 382,55: char
 382,60: *
 382,61: __modes
 382,68: VARIABLE
 382,68: )
 
186 void 
 382,24: void
 
298 * option_type_qualifier_list option_pointer 
 382,29: *
 
386 NAME VARIABLE 
 382,30: __s
 382,33: VARIABLE
 
65 VARIABLE 
 382,33: VARIABLE
 
300 , parameter_declaration 
 382,33: ,
 382,35: size_t
 382,41: TYPE
 382,42: __len
 382,47: VARIABLE
 
391 NAME TYPE 
 382,35: size_t
 382,41: TYPE
 
26 TYPE 
 382,41: TYPE
 
298 NAME VARIABLE 
 382,42: __len
 382,47: VARIABLE
 
65 VARIABLE 
 382,47: VARIABLE
 
300 , parameter_declaration 
 382,47: ,
 382,49: const
 382,55: char
 382,60: *
 382,61: __modes
 382,68: VARIABLE
 
391 const 
 382,49: const
 
103 char 
 382,55: char
 
298 * option_type_qualifier_list option_pointer 
 382,60: *
 
386 NAME VARIABLE 
 382,61: __modes
 382,68: VARIABLE
 
65 VARIABLE 
 382,68: VARIABLE
 
187 ) 
 382,68: )
 
60 ; 
 383,6: ;
 
23 extern 
 388,1: extern
 
8 NAME TYPE 
 388,8: FILE
 388,12: TYPE
 
26 TYPE 
 388,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 388,13: *
 
64 NAME VARIABLE 
 388,14: open_memstream
 388,28: VARIABLE
 
65 VARIABLE 
 388,28: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 388,29: (
 388,30: char
 388,35: *
 388,36: *
 388,37: __bufloc
 388,45: VARIABLE
 388,45: ,
 388,47: size_t
 388,53: TYPE
 388,54: *
 388,55: __sizeloc
 388,64: VARIABLE
 388,64: )
 
186 char 
 388,30: char
 
298 * option_type_qualifier_list option_pointer 
 388,35: *
 388,36: *
 
116 * option_type_qualifier_list option_pointer 
 388,36: *
 
386 NAME VARIABLE 
 388,37: __bufloc
 388,45: VARIABLE
 
65 VARIABLE 
 388,45: VARIABLE
 
300 , parameter_declaration 
 388,45: ,
 388,47: size_t
 388,53: TYPE
 388,54: *
 388,55: __sizeloc
 388,64: VARIABLE
 
391 NAME TYPE 
 388,47: size_t
 388,53: TYPE
 
26 TYPE 
 388,53: TYPE
 
298 * option_type_qualifier_list option_pointer 
 388,54: *
 
386 NAME VARIABLE 
 388,55: __sizeloc
 388,64: VARIABLE
 
65 VARIABLE 
 388,64: VARIABLE
 
187 ) 
 388,64: )
 
60 ; 
 389,5: ;
 
23 extern 
 391,1: extern
 
8 void 
 391,8: void
 
5 NAME VARIABLE 
 391,13: setbuf
 391,19: VARIABLE
 
65 VARIABLE 
 391,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 391,20: (
 391,21: FILE
 391,25: TYPE
 391,26: *
 391,28: __stream
 391,36: VARIABLE
 391,36: ,
 391,38: char
 391,43: *
 391,45: __buf
 391,50: VARIABLE
 391,50: )
 
186 NAME TYPE 
 391,21: FILE
 391,25: TYPE
 
65 TYPE 
 391,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 391,26: *
 
386 NAME VARIABLE 
 391,28: __stream
 391,36: VARIABLE
 
65 VARIABLE 
 391,36: VARIABLE
 
300 , parameter_declaration 
 391,36: ,
 391,38: char
 391,43: *
 391,45: __buf
 391,50: VARIABLE
 
391 char 
 391,38: char
 
298 * option_type_qualifier_list option_pointer 
 391,43: *
 
386 NAME VARIABLE 
 391,45: __buf
 391,50: VARIABLE
 
65 VARIABLE 
 391,50: VARIABLE
 
187 ) 
 391,50: )
 
60 ; 
 391,52: ;
 
23 extern 
 395,1: extern
 
8 int 
 395,8: int
 
5 NAME VARIABLE 
 395,12: setvbuf
 395,19: VARIABLE
 
65 VARIABLE 
 395,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 395,20: (
 395,21: FILE
 395,25: TYPE
 395,26: *
 395,28: __stream
 395,36: VARIABLE
 395,36: ,
 395,38: char
 395,43: *
 395,45: __buf
 395,50: VARIABLE
 395,50: ,
 396,7: int
 396,11: __modes
 396,18: VARIABLE
 396,18: ,
 396,20: size_t
 396,26: TYPE
 396,27: __n
 396,30: VARIABLE
 396,30: )
 
186 NAME TYPE 
 395,21: FILE
 395,25: TYPE
 
65 TYPE 
 395,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 395,26: *
 
386 NAME VARIABLE 
 395,28: __stream
 395,36: VARIABLE
 
65 VARIABLE 
 395,36: VARIABLE
 
300 , parameter_declaration 
 395,36: ,
 395,38: char
 395,43: *
 395,45: __buf
 395,50: VARIABLE
 
391 char 
 395,38: char
 
298 * option_type_qualifier_list option_pointer 
 395,43: *
 
386 NAME VARIABLE 
 395,45: __buf
 395,50: VARIABLE
 
65 VARIABLE 
 395,50: VARIABLE
 
300 , parameter_declaration 
 395,50: ,
 396,7: int
 396,11: __modes
 396,18: VARIABLE
 
391 int 
 396,7: int
 
298 NAME VARIABLE 
 396,11: __modes
 396,18: VARIABLE
 
65 VARIABLE 
 396,18: VARIABLE
 
300 , parameter_declaration 
 396,18: ,
 396,20: size_t
 396,26: TYPE
 396,27: __n
 396,30: VARIABLE
 
391 NAME TYPE 
 396,20: size_t
 396,26: TYPE
 
26 TYPE 
 396,26: TYPE
 
298 NAME VARIABLE 
 396,27: __n
 396,30: VARIABLE
 
65 VARIABLE 
 396,30: VARIABLE
 
187 ) 
 396,30: )
 
60 ; 
 396,32: ;
 
23 extern 
 401,1: extern
 
8 void 
 401,8: void
 
5 NAME VARIABLE 
 401,13: setbuffer
 401,22: VARIABLE
 
65 VARIABLE 
 401,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 401,23: (
 401,24: FILE
 401,28: TYPE
 401,29: *
 401,31: __stream
 401,39: VARIABLE
 401,39: ,
 401,41: char
 401,46: *
 401,48: __buf
 401,53: VARIABLE
 401,53: ,
 402,10: size_t
 402,16: TYPE
 402,17: __size
 402,23: VARIABLE
 402,23: )
 
186 NAME TYPE 
 401,24: FILE
 401,28: TYPE
 
65 TYPE 
 401,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 401,29: *
 
386 NAME VARIABLE 
 401,31: __stream
 401,39: VARIABLE
 
65 VARIABLE 
 401,39: VARIABLE
 
300 , parameter_declaration 
 401,39: ,
 401,41: char
 401,46: *
 401,48: __buf
 401,53: VARIABLE
 
391 char 
 401,41: char
 
298 * option_type_qualifier_list option_pointer 
 401,46: *
 
386 NAME VARIABLE 
 401,48: __buf
 401,53: VARIABLE
 
65 VARIABLE 
 401,53: VARIABLE
 
300 , parameter_declaration 
 401,53: ,
 402,10: size_t
 402,16: TYPE
 402,17: __size
 402,23: VARIABLE
 
391 NAME TYPE 
 402,10: size_t
 402,16: TYPE
 
26 TYPE 
 402,16: TYPE
 
298 NAME VARIABLE 
 402,17: __size
 402,23: VARIABLE
 
65 VARIABLE 
 402,23: VARIABLE
 
187 ) 
 402,23: )
 
60 ; 
 402,25: ;
 
23 extern 
 405,1: extern
 
8 void 
 405,8: void
 
5 NAME VARIABLE 
 405,13: setlinebuf
 405,23: VARIABLE
 
65 VARIABLE 
 405,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 405,24: (
 405,25: FILE
 405,29: TYPE
 405,30: *
 405,31: __stream
 405,39: VARIABLE
 405,39: )
 
186 NAME TYPE 
 405,25: FILE
 405,29: TYPE
 
65 TYPE 
 405,29: TYPE
 
298 * option_type_qualifier_list option_pointer 
 405,30: *
 
386 NAME VARIABLE 
 405,31: __stream
 405,39: VARIABLE
 
65 VARIABLE 
 405,39: VARIABLE
 
187 ) 
 405,39: )
 
60 ; 
 405,41: ;
 
23 extern 
 413,1: extern
 
8 int 
 413,8: int
 
5 NAME VARIABLE 
 413,12: fprintf
 413,19: VARIABLE
 
65 VARIABLE 
 413,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 413,20: (
 413,21: FILE
 413,25: TYPE
 413,26: *
 413,28: __stream
 413,36: VARIABLE
 413,36: ,
 414,7: const
 414,13: char
 414,18: *
 414,20: __format
 414,28: VARIABLE
 414,28: ,
 414,30: ...
 414,33: )
 
186 NAME TYPE 
 413,21: FILE
 413,25: TYPE
 
65 TYPE 
 413,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 413,26: *
 
386 NAME VARIABLE 
 413,28: __stream
 413,36: VARIABLE
 
65 VARIABLE 
 413,36: VARIABLE
 
300 , parameter_declaration 
 413,36: ,
 414,7: const
 414,13: char
 414,18: *
 414,20: __format
 414,28: VARIABLE
 
391 const 
 414,7: const
 
103 char 
 414,13: char
 
298 * option_type_qualifier_list option_pointer 
 414,18: *
 
386 NAME VARIABLE 
 414,20: __format
 414,28: VARIABLE
 
65 VARIABLE 
 414,28: VARIABLE
 
300 , ... 
 414,28: ,
 414,30: ...
 
391 ... 
 414,30: ...
 
187 ) 
 414,33: )
 
60 ; 
 414,34: ;
 
23 extern 
 419,1: extern
 
8 int 
 419,8: int
 
5 NAME VARIABLE 
 419,12: printf
 419,18: VARIABLE
 
65 VARIABLE 
 419,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 419,19: (
 419,20: const
 419,26: char
 419,31: *
 419,33: __format
 419,41: VARIABLE
 419,41: ,
 419,43: ...
 419,46: )
 
186 const 
 419,20: const
 
103 char 
 419,26: char
 
298 * option_type_qualifier_list option_pointer 
 419,31: *
 
386 NAME VARIABLE 
 419,33: __format
 419,41: VARIABLE
 
65 VARIABLE 
 419,41: VARIABLE
 
300 , ... 
 419,41: ,
 419,43: ...
 
391 ... 
 419,43: ...
 
187 ) 
 419,46: )
 
60 ; 
 419,47: ;
 
23 extern 
 421,1: extern
 
8 int 
 421,8: int
 
5 NAME VARIABLE 
 421,12: sprintf
 421,19: VARIABLE
 
65 VARIABLE 
 421,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 421,20: (
 421,21: char
 421,26: *
 421,28: __s
 421,31: VARIABLE
 421,31: ,
 422,7: const
 422,13: char
 422,18: *
 422,20: __format
 422,28: VARIABLE
 422,28: ,
 422,30: ...
 422,33: )
 
186 char 
 421,21: char
 
298 * option_type_qualifier_list option_pointer 
 421,26: *
 
386 NAME VARIABLE 
 421,28: __s
 421,31: VARIABLE
 
65 VARIABLE 
 421,31: VARIABLE
 
300 , parameter_declaration 
 421,31: ,
 422,7: const
 422,13: char
 422,18: *
 422,20: __format
 422,28: VARIABLE
 
391 const 
 422,7: const
 
103 char 
 422,13: char
 
298 * option_type_qualifier_list option_pointer 
 422,18: *
 
386 NAME VARIABLE 
 422,20: __format
 422,28: VARIABLE
 
65 VARIABLE 
 422,28: VARIABLE
 
300 , ... 
 422,28: ,
 422,30: ...
 
391 ... 
 422,30: ...
 
187 ) 
 422,33: )
 
60 ; 
 422,35: ;
 
23 extern 
 428,1: extern
 
8 int 
 428,8: int
 
5 NAME VARIABLE 
 428,12: vfprintf
 428,20: VARIABLE
 
65 VARIABLE 
 428,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 428,21: (
 428,22: FILE
 428,26: TYPE
 428,27: *
 428,29: __s
 428,32: VARIABLE
 428,32: ,
 428,34: const
 428,40: char
 428,45: *
 428,47: __format
 428,55: VARIABLE
 428,55: ,
 429,8: __gnuc_va_list
 429,22: TYPE
 429,23: __arg
 429,28: VARIABLE
 429,28: )
 
186 NAME TYPE 
 428,22: FILE
 428,26: TYPE
 
65 TYPE 
 428,26: TYPE
 
298 * option_type_qualifier_list option_pointer 
 428,27: *
 
386 NAME VARIABLE 
 428,29: __s
 428,32: VARIABLE
 
65 VARIABLE 
 428,32: VARIABLE
 
300 , parameter_declaration 
 428,32: ,
 428,34: const
 428,40: char
 428,45: *
 428,47: __format
 428,55: VARIABLE
 
391 const 
 428,34: const
 
103 char 
 428,40: char
 
298 * option_type_qualifier_list option_pointer 
 428,45: *
 
386 NAME VARIABLE 
 428,47: __format
 428,55: VARIABLE
 
65 VARIABLE 
 428,55: VARIABLE
 
300 , parameter_declaration 
 428,55: ,
 429,8: __gnuc_va_list
 429,22: TYPE
 429,23: __arg
 429,28: VARIABLE
 
391 NAME TYPE 
 429,8: __gnuc_va_list
 429,22: TYPE
 
26 TYPE 
 429,22: TYPE
 
298 NAME VARIABLE 
 429,23: __arg
 429,28: VARIABLE
 
65 VARIABLE 
 429,28: VARIABLE
 
187 ) 
 429,28: )
 
60 ; 
 429,29: ;
 
23 extern 
 434,1: extern
 
8 int 
 434,8: int
 
5 NAME VARIABLE 
 434,12: vprintf
 434,19: VARIABLE
 
65 VARIABLE 
 434,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 434,20: (
 434,21: const
 434,27: char
 434,32: *
 434,34: __format
 434,42: VARIABLE
 434,42: ,
 434,44: __gnuc_va_list
 434,58: TYPE
 434,59: __arg
 434,64: VARIABLE
 434,64: )
 
186 const 
 434,21: const
 
103 char 
 434,27: char
 
298 * option_type_qualifier_list option_pointer 
 434,32: *
 
386 NAME VARIABLE 
 434,34: __format
 434,42: VARIABLE
 
65 VARIABLE 
 434,42: VARIABLE
 
300 , parameter_declaration 
 434,42: ,
 434,44: __gnuc_va_list
 434,58: TYPE
 434,59: __arg
 434,64: VARIABLE
 
391 NAME TYPE 
 434,44: __gnuc_va_list
 434,58: TYPE
 
26 TYPE 
 434,58: TYPE
 
298 NAME VARIABLE 
 434,59: __arg
 434,64: VARIABLE
 
65 VARIABLE 
 434,64: VARIABLE
 
187 ) 
 434,64: )
 
60 ; 
 434,65: ;
 
23 extern 
 436,1: extern
 
8 int 
 436,8: int
 
5 NAME VARIABLE 
 436,12: vsprintf
 436,20: VARIABLE
 
65 VARIABLE 
 436,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 436,21: (
 436,22: char
 436,27: *
 436,29: __s
 436,32: VARIABLE
 436,32: ,
 436,34: const
 436,40: char
 436,45: *
 436,47: __format
 436,55: VARIABLE
 436,55: ,
 437,8: __gnuc_va_list
 437,22: TYPE
 437,23: __arg
 437,28: VARIABLE
 437,28: )
 
186 char 
 436,22: char
 
298 * option_type_qualifier_list option_pointer 
 436,27: *
 
386 NAME VARIABLE 
 436,29: __s
 436,32: VARIABLE
 
65 VARIABLE 
 436,32: VARIABLE
 
300 , parameter_declaration 
 436,32: ,
 436,34: const
 436,40: char
 436,45: *
 436,47: __format
 436,55: VARIABLE
 
391 const 
 436,34: const
 
103 char 
 436,40: char
 
298 * option_type_qualifier_list option_pointer 
 436,45: *
 
386 NAME VARIABLE 
 436,47: __format
 436,55: VARIABLE
 
65 VARIABLE 
 436,55: VARIABLE
 
300 , parameter_declaration 
 436,55: ,
 437,8: __gnuc_va_list
 437,22: TYPE
 437,23: __arg
 437,28: VARIABLE
 
391 NAME TYPE 
 437,8: __gnuc_va_list
 437,22: TYPE
 
26 TYPE 
 437,22: TYPE
 
298 NAME VARIABLE 
 437,23: __arg
 437,28: VARIABLE
 
65 VARIABLE 
 437,28: VARIABLE
 
187 ) 
 437,28: )
 
60 ; 
 437,30: ;
 
23 extern 
 441,1: extern
 
8 int 
 441,8: int
 
5 NAME VARIABLE 
 441,12: snprintf
 441,20: VARIABLE
 
65 VARIABLE 
 441,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 441,21: (
 441,22: char
 441,27: *
 441,29: __s
 441,32: VARIABLE
 441,32: ,
 441,34: size_t
 441,40: TYPE
 441,41: __maxlen
 441,49: VARIABLE
 441,49: ,
 442,8: const
 442,14: char
 442,19: *
 442,21: __format
 442,29: VARIABLE
 442,29: ,
 442,31: ...
 442,34: )
 
186 char 
 441,22: char
 
298 * option_type_qualifier_list option_pointer 
 441,27: *
 
386 NAME VARIABLE 
 441,29: __s
 441,32: VARIABLE
 
65 VARIABLE 
 441,32: VARIABLE
 
300 , parameter_declaration 
 441,32: ,
 441,34: size_t
 441,40: TYPE
 441,41: __maxlen
 441,49: VARIABLE
 
391 NAME TYPE 
 441,34: size_t
 441,40: TYPE
 
26 TYPE 
 441,40: TYPE
 
298 NAME VARIABLE 
 441,41: __maxlen
 441,49: VARIABLE
 
65 VARIABLE 
 441,49: VARIABLE
 
300 , parameter_declaration 
 441,49: ,
 442,8: const
 442,14: char
 442,19: *
 442,21: __format
 442,29: VARIABLE
 
391 const 
 442,8: const
 
103 char 
 442,14: char
 
298 * option_type_qualifier_list option_pointer 
 442,19: *
 
386 NAME VARIABLE 
 442,21: __format
 442,29: VARIABLE
 
65 VARIABLE 
 442,29: VARIABLE
 
300 , ... 
 442,29: ,
 442,31: ...
 
391 ... 
 442,31: ...
 
187 ) 
 442,34: )
 
60 ; 
 443,7: ;
 
23 extern 
 445,1: extern
 
8 int 
 445,8: int
 
5 NAME VARIABLE 
 445,12: vsnprintf
 445,21: VARIABLE
 
65 VARIABLE 
 445,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 445,22: (
 445,23: char
 445,28: *
 445,30: __s
 445,33: VARIABLE
 445,33: ,
 445,35: size_t
 445,41: TYPE
 445,42: __maxlen
 445,50: VARIABLE
 445,50: ,
 446,9: const
 446,15: char
 446,20: *
 446,22: __format
 446,30: VARIABLE
 446,30: ,
 446,32: __gnuc_va_list
 446,46: TYPE
 446,47: __arg
 446,52: VARIABLE
 446,52: )
 
186 char 
 445,23: char
 
298 * option_type_qualifier_list option_pointer 
 445,28: *
 
386 NAME VARIABLE 
 445,30: __s
 445,33: VARIABLE
 
65 VARIABLE 
 445,33: VARIABLE
 
300 , parameter_declaration 
 445,33: ,
 445,35: size_t
 445,41: TYPE
 445,42: __maxlen
 445,50: VARIABLE
 
391 NAME TYPE 
 445,35: size_t
 445,41: TYPE
 
26 TYPE 
 445,41: TYPE
 
298 NAME VARIABLE 
 445,42: __maxlen
 445,50: VARIABLE
 
65 VARIABLE 
 445,50: VARIABLE
 
300 , parameter_declaration 
 445,50: ,
 446,9: const
 446,15: char
 446,20: *
 446,22: __format
 446,30: VARIABLE
 
391 const 
 446,9: const
 
103 char 
 446,15: char
 
298 * option_type_qualifier_list option_pointer 
 446,20: *
 
386 NAME VARIABLE 
 446,22: __format
 446,30: VARIABLE
 
65 VARIABLE 
 446,30: VARIABLE
 
300 , parameter_declaration 
 446,30: ,
 446,32: __gnuc_va_list
 446,46: TYPE
 446,47: __arg
 446,52: VARIABLE
 
391 NAME TYPE 
 446,32: __gnuc_va_list
 446,46: TYPE
 
26 TYPE 
 446,46: TYPE
 
298 NAME VARIABLE 
 446,47: __arg
 446,52: VARIABLE
 
65 VARIABLE 
 446,52: VARIABLE
 
187 ) 
 446,52: )
 
60 ; 
 447,7: ;
 
23 extern 
 449,1: extern
 
8 int 
 449,8: int
 
5 NAME VARIABLE 
 449,12: vdprintf
 449,20: VARIABLE
 
65 VARIABLE 
 449,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 449,21: (
 449,22: int
 449,26: __fd
 449,30: VARIABLE
 449,30: ,
 449,32: const
 449,38: char
 449,43: *
 449,45: __fmt
 449,50: VARIABLE
 449,50: ,
 450,8: __gnuc_va_list
 450,22: TYPE
 450,23: __arg
 450,28: VARIABLE
 450,28: )
 
186 int 
 449,22: int
 
298 NAME VARIABLE 
 449,26: __fd
 449,30: VARIABLE
 
65 VARIABLE 
 449,30: VARIABLE
 
300 , parameter_declaration 
 449,30: ,
 449,32: const
 449,38: char
 449,43: *
 449,45: __fmt
 449,50: VARIABLE
 
391 const 
 449,32: const
 
103 char 
 449,38: char
 
298 * option_type_qualifier_list option_pointer 
 449,43: *
 
386 NAME VARIABLE 
 449,45: __fmt
 449,50: VARIABLE
 
65 VARIABLE 
 449,50: VARIABLE
 
300 , parameter_declaration 
 449,50: ,
 450,8: __gnuc_va_list
 450,22: TYPE
 450,23: __arg
 450,28: VARIABLE
 
391 NAME TYPE 
 450,8: __gnuc_va_list
 450,22: TYPE
 
26 TYPE 
 450,22: TYPE
 
298 NAME VARIABLE 
 450,23: __arg
 450,28: VARIABLE
 
65 VARIABLE 
 450,28: VARIABLE
 
187 ) 
 450,28: )
 
60 ; 
 451,6: ;
 
23 extern 
 452,1: extern
 
8 int 
 452,8: int
 
5 NAME VARIABLE 
 452,12: dprintf
 452,19: VARIABLE
 
65 VARIABLE 
 452,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 452,20: (
 452,21: int
 452,25: __fd
 452,29: VARIABLE
 452,29: ,
 452,31: const
 452,37: char
 452,42: *
 452,44: __fmt
 452,49: VARIABLE
 452,49: ,
 452,51: ...
 452,54: )
 
186 int 
 452,21: int
 
298 NAME VARIABLE 
 452,25: __fd
 452,29: VARIABLE
 
65 VARIABLE 
 452,29: VARIABLE
 
300 , parameter_declaration 
 452,29: ,
 452,31: const
 452,37: char
 452,42: *
 452,44: __fmt
 452,49: VARIABLE
 
391 const 
 452,31: const
 
103 char 
 452,37: char
 
298 * option_type_qualifier_list option_pointer 
 452,42: *
 
386 NAME VARIABLE 
 452,44: __fmt
 452,49: VARIABLE
 
65 VARIABLE 
 452,49: VARIABLE
 
300 , ... 
 452,49: ,
 452,51: ...
 
391 ... 
 452,51: ...
 
187 ) 
 452,54: )
 
60 ; 
 453,6: ;
 
23 extern 
 461,1: extern
 
8 int 
 461,8: int
 
5 NAME VARIABLE 
 461,12: fscanf
 461,18: VARIABLE
 
65 VARIABLE 
 461,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 461,19: (
 461,20: FILE
 461,24: TYPE
 461,25: *
 461,27: __stream
 461,35: VARIABLE
 461,35: ,
 462,6: const
 462,12: char
 462,17: *
 462,19: __format
 462,27: VARIABLE
 462,27: ,
 462,29: ...
 462,32: )
 
186 NAME TYPE 
 461,20: FILE
 461,24: TYPE
 
65 TYPE 
 461,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 461,25: *
 
386 NAME VARIABLE 
 461,27: __stream
 461,35: VARIABLE
 
65 VARIABLE 
 461,35: VARIABLE
 
300 , parameter_declaration 
 461,35: ,
 462,6: const
 462,12: char
 462,17: *
 462,19: __format
 462,27: VARIABLE
 
391 const 
 462,6: const
 
103 char 
 462,12: char
 
298 * option_type_qualifier_list option_pointer 
 462,17: *
 
386 NAME VARIABLE 
 462,19: __format
 462,27: VARIABLE
 
65 VARIABLE 
 462,27: VARIABLE
 
300 , ... 
 462,27: ,
 462,29: ...
 
391 ... 
 462,29: ...
 
187 ) 
 462,32: )
 
60 ; 
 462,34: ;
 
23 extern 
 467,1: extern
 
8 int 
 467,8: int
 
5 NAME VARIABLE 
 467,12: scanf
 467,17: VARIABLE
 
65 VARIABLE 
 467,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 467,18: (
 467,19: const
 467,25: char
 467,30: *
 467,32: __format
 467,40: VARIABLE
 467,40: ,
 467,42: ...
 467,45: )
 
186 const 
 467,19: const
 
103 char 
 467,25: char
 
298 * option_type_qualifier_list option_pointer 
 467,30: *
 
386 NAME VARIABLE 
 467,32: __format
 467,40: VARIABLE
 
65 VARIABLE 
 467,40: VARIABLE
 
300 , ... 
 467,40: ,
 467,42: ...
 
391 ... 
 467,42: ...
 
187 ) 
 467,45: )
 
60 ; 
 467,47: ;
 
23 extern 
 469,1: extern
 
8 int 
 469,8: int
 
5 NAME VARIABLE 
 469,12: sscanf
 469,18: VARIABLE
 
65 VARIABLE 
 469,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 469,19: (
 469,20: const
 469,26: char
 469,31: *
 469,33: __s
 469,36: VARIABLE
 469,36: ,
 470,6: const
 470,12: char
 470,17: *
 470,19: __format
 470,27: VARIABLE
 470,27: ,
 470,29: ...
 470,32: )
 
186 const 
 469,20: const
 
103 char 
 469,26: char
 
298 * option_type_qualifier_list option_pointer 
 469,31: *
 
386 NAME VARIABLE 
 469,33: __s
 469,36: VARIABLE
 
65 VARIABLE 
 469,36: VARIABLE
 
300 , parameter_declaration 
 469,36: ,
 470,6: const
 470,12: char
 470,17: *
 470,19: __format
 470,27: VARIABLE
 
391 const 
 470,6: const
 
103 char 
 470,12: char
 
298 * option_type_qualifier_list option_pointer 
 470,17: *
 
386 NAME VARIABLE 
 470,19: __format
 470,27: VARIABLE
 
65 VARIABLE 
 470,27: VARIABLE
 
300 , ... 
 470,27: ,
 470,29: ...
 
391 ... 
 470,29: ...
 
187 ) 
 470,32: )
 
60 ; 
 470,34: ;
 
23 extern 
 487,1: extern
 
8 int 
 487,8: int
 
5 NAME VARIABLE 
 487,12: fscanf
 487,18: VARIABLE
 
65 VARIABLE 
 487,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 487,19: (
 487,20: FILE
 487,24: TYPE
 487,25: *
 487,27: __stream
 487,35: VARIABLE
 487,35: ,
 487,37: const
 487,43: char
 487,48: *
 487,50: __format
 487,58: VARIABLE
 487,58: ,
 487,60: ...
 487,63: )
 
186 NAME TYPE 
 487,20: FILE
 487,24: TYPE
 
65 TYPE 
 487,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 487,25: *
 
386 NAME VARIABLE 
 487,27: __stream
 487,35: VARIABLE
 
65 VARIABLE 
 487,35: VARIABLE
 
300 , parameter_declaration 
 487,35: ,
 487,37: const
 487,43: char
 487,48: *
 487,50: __format
 487,58: VARIABLE
 
391 const 
 487,37: const
 
103 char 
 487,43: char
 
298 * option_type_qualifier_list option_pointer 
 487,48: *
 
386 NAME VARIABLE 
 487,50: __format
 487,58: VARIABLE
 
65 VARIABLE 
 487,58: VARIABLE
 
300 , ... 
 487,58: ,
 487,60: ...
 
391 ... 
 487,60: ...
 
187 ) 
 487,63: )
 
60 ; 
 489,32: ;
 
23 extern 
 490,1: extern
 
8 int 
 490,8: int
 
5 NAME VARIABLE 
 490,12: scanf
 490,17: VARIABLE
 
65 VARIABLE 
 490,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 490,18: (
 490,19: const
 490,25: char
 490,30: *
 490,32: __format
 490,40: VARIABLE
 490,40: ,
 490,42: ...
 490,45: )
 
186 const 
 490,19: const
 
103 char 
 490,25: char
 
298 * option_type_qualifier_list option_pointer 
 490,30: *
 
386 NAME VARIABLE 
 490,32: __format
 490,40: VARIABLE
 
65 VARIABLE 
 490,40: VARIABLE
 
300 , ... 
 490,40: ,
 490,42: ...
 
391 ... 
 490,42: ...
 
187 ) 
 490,45: )
 
60 ; 
 491,31: ;
 
23 extern 
 492,1: extern
 
8 int 
 492,8: int
 
5 NAME VARIABLE 
 492,12: sscanf
 492,18: VARIABLE
 
65 VARIABLE 
 492,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 492,19: (
 492,20: const
 492,26: char
 492,31: *
 492,33: __s
 492,36: VARIABLE
 492,36: ,
 492,38: const
 492,44: char
 492,49: *
 492,51: __format
 492,59: VARIABLE
 492,59: ,
 492,61: ...
 492,64: )
 
186 const 
 492,20: const
 
103 char 
 492,26: char
 
298 * option_type_qualifier_list option_pointer 
 492,31: *
 
386 NAME VARIABLE 
 492,33: __s
 492,36: VARIABLE
 
65 VARIABLE 
 492,36: VARIABLE
 
300 , parameter_declaration 
 492,36: ,
 492,38: const
 492,44: char
 492,49: *
 492,51: __format
 492,59: VARIABLE
 
391 const 
 492,38: const
 
103 char 
 492,44: char
 
298 * option_type_qualifier_list option_pointer 
 492,49: *
 
386 NAME VARIABLE 
 492,51: __format
 492,59: VARIABLE
 
65 VARIABLE 
 492,59: VARIABLE
 
300 , ... 
 492,59: ,
 492,61: ...
 
391 ... 
 492,61: ...
 
187 ) 
 492,64: )
 
60 ; 
 494,23: ;
 
23 extern 
 496,1: extern
 
8 int 
 496,8: int
 
5 NAME VARIABLE 
 496,12: vfscanf
 496,19: VARIABLE
 
65 VARIABLE 
 496,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 496,20: (
 496,21: FILE
 496,25: TYPE
 496,26: *
 496,28: __s
 496,31: VARIABLE
 496,31: ,
 496,33: const
 496,39: char
 496,44: *
 496,46: __format
 496,54: VARIABLE
 496,54: ,
 497,7: __gnuc_va_list
 497,21: TYPE
 497,22: __arg
 497,27: VARIABLE
 497,27: )
 
186 NAME TYPE 
 496,21: FILE
 496,25: TYPE
 
65 TYPE 
 496,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 496,26: *
 
386 NAME VARIABLE 
 496,28: __s
 496,31: VARIABLE
 
65 VARIABLE 
 496,31: VARIABLE
 
300 , parameter_declaration 
 496,31: ,
 496,33: const
 496,39: char
 496,44: *
 496,46: __format
 496,54: VARIABLE
 
391 const 
 496,33: const
 
103 char 
 496,39: char
 
298 * option_type_qualifier_list option_pointer 
 496,44: *
 
386 NAME VARIABLE 
 496,46: __format
 496,54: VARIABLE
 
65 VARIABLE 
 496,54: VARIABLE
 
300 , parameter_declaration 
 496,54: ,
 497,7: __gnuc_va_list
 497,21: TYPE
 497,22: __arg
 497,27: VARIABLE
 
391 NAME TYPE 
 497,7: __gnuc_va_list
 497,21: TYPE
 
26 TYPE 
 497,21: TYPE
 
298 NAME VARIABLE 
 497,22: __arg
 497,27: VARIABLE
 
65 VARIABLE 
 497,27: VARIABLE
 
187 ) 
 497,27: )
 
60 ; 
 498,7: ;
 
23 extern 
 504,1: extern
 
8 int 
 504,8: int
 
5 NAME VARIABLE 
 504,12: vscanf
 504,18: VARIABLE
 
65 VARIABLE 
 504,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 504,19: (
 504,20: const
 504,26: char
 504,31: *
 504,33: __format
 504,41: VARIABLE
 504,41: ,
 504,43: __gnuc_va_list
 504,57: TYPE
 504,58: __arg
 504,63: VARIABLE
 504,63: )
 
186 const 
 504,20: const
 
103 char 
 504,26: char
 
298 * option_type_qualifier_list option_pointer 
 504,31: *
 
386 NAME VARIABLE 
 504,33: __format
 504,41: VARIABLE
 
65 VARIABLE 
 504,41: VARIABLE
 
300 , parameter_declaration 
 504,41: ,
 504,43: __gnuc_va_list
 504,57: TYPE
 504,58: __arg
 504,63: VARIABLE
 
391 NAME TYPE 
 504,43: __gnuc_va_list
 504,57: TYPE
 
26 TYPE 
 504,57: TYPE
 
298 NAME VARIABLE 
 504,58: __arg
 504,63: VARIABLE
 
65 VARIABLE 
 504,63: VARIABLE
 
187 ) 
 504,63: )
 
60 ; 
 505,7: ;
 
23 extern 
 508,1: extern
 
8 int 
 508,8: int
 
5 NAME VARIABLE 
 508,12: vsscanf
 508,19: VARIABLE
 
65 VARIABLE 
 508,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 508,20: (
 508,21: const
 508,27: char
 508,32: *
 508,34: __s
 508,37: VARIABLE
 508,37: ,
 509,7: const
 509,13: char
 509,18: *
 509,20: __format
 509,28: VARIABLE
 509,28: ,
 509,30: __gnuc_va_list
 509,44: TYPE
 509,45: __arg
 509,50: VARIABLE
 509,50: )
 
186 const 
 508,21: const
 
103 char 
 508,27: char
 
298 * option_type_qualifier_list option_pointer 
 508,32: *
 
386 NAME VARIABLE 
 508,34: __s
 508,37: VARIABLE
 
65 VARIABLE 
 508,37: VARIABLE
 
300 , parameter_declaration 
 508,37: ,
 509,7: const
 509,13: char
 509,18: *
 509,20: __format
 509,28: VARIABLE
 
391 const 
 509,7: const
 
103 char 
 509,13: char
 
298 * option_type_qualifier_list option_pointer 
 509,18: *
 
386 NAME VARIABLE 
 509,20: __format
 509,28: VARIABLE
 
65 VARIABLE 
 509,28: VARIABLE
 
300 , parameter_declaration 
 509,28: ,
 509,30: __gnuc_va_list
 509,44: TYPE
 509,45: __arg
 509,50: VARIABLE
 
391 NAME TYPE 
 509,30: __gnuc_va_list
 509,44: TYPE
 
26 TYPE 
 509,44: TYPE
 
298 NAME VARIABLE 
 509,45: __arg
 509,50: VARIABLE
 
65 VARIABLE 
 509,50: VARIABLE
 
187 ) 
 509,50: )
 
60 ; 
 510,7: ;
 
23 extern 
 516,1: extern
 
8 int 
 516,8: int
 
5 NAME VARIABLE 
 516,12: vfscanf
 516,19: VARIABLE
 
65 VARIABLE 
 516,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 516,20: (
 516,21: FILE
 516,25: TYPE
 516,26: *
 516,28: __s
 516,31: VARIABLE
 516,31: ,
 516,33: const
 516,39: char
 516,44: *
 516,46: __format
 516,54: VARIABLE
 516,54: ,
 516,56: __gnuc_va_list
 516,70: TYPE
 516,71: __arg
 516,76: VARIABLE
 516,76: )
 
186 NAME TYPE 
 516,21: FILE
 516,25: TYPE
 
65 TYPE 
 516,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 516,26: *
 
386 NAME VARIABLE 
 516,28: __s
 516,31: VARIABLE
 
65 VARIABLE 
 516,31: VARIABLE
 
300 , parameter_declaration 
 516,31: ,
 516,33: const
 516,39: char
 516,44: *
 516,46: __format
 516,54: VARIABLE
 
391 const 
 516,33: const
 
103 char 
 516,39: char
 
298 * option_type_qualifier_list option_pointer 
 516,44: *
 
386 NAME VARIABLE 
 516,46: __format
 516,54: VARIABLE
 
65 VARIABLE 
 516,54: VARIABLE
 
300 , parameter_declaration 
 516,54: ,
 516,56: __gnuc_va_list
 516,70: TYPE
 516,71: __arg
 516,76: VARIABLE
 
391 NAME TYPE 
 516,56: __gnuc_va_list
 516,70: TYPE
 
26 TYPE 
 516,70: TYPE
 
298 NAME VARIABLE 
 516,71: __arg
 516,76: VARIABLE
 
65 VARIABLE 
 516,76: VARIABLE
 
187 ) 
 516,76: )
 
60 ; 
 520,7: ;
 
23 extern 
 521,1: extern
 
8 int 
 521,8: int
 
5 NAME VARIABLE 
 521,12: vscanf
 521,18: VARIABLE
 
65 VARIABLE 
 521,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 521,19: (
 521,20: const
 521,26: char
 521,31: *
 521,33: __format
 521,41: VARIABLE
 521,41: ,
 521,43: __gnuc_va_list
 521,57: TYPE
 521,58: __arg
 521,63: VARIABLE
 521,63: )
 
186 const 
 521,20: const
 
103 char 
 521,26: char
 
298 * option_type_qualifier_list option_pointer 
 521,31: *
 
386 NAME VARIABLE 
 521,33: __format
 521,41: VARIABLE
 
65 VARIABLE 
 521,41: VARIABLE
 
300 , parameter_declaration 
 521,41: ,
 521,43: __gnuc_va_list
 521,57: TYPE
 521,58: __arg
 521,63: VARIABLE
 
391 NAME TYPE 
 521,43: __gnuc_va_list
 521,57: TYPE
 
26 TYPE 
 521,57: TYPE
 
298 NAME VARIABLE 
 521,58: __arg
 521,63: VARIABLE
 
65 VARIABLE 
 521,63: VARIABLE
 
187 ) 
 521,63: )
 
60 ; 
 523,7: ;
 
23 extern 
 524,1: extern
 
8 int 
 524,8: int
 
5 NAME VARIABLE 
 524,12: vsscanf
 524,19: VARIABLE
 
65 VARIABLE 
 524,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 524,20: (
 524,21: const
 524,27: char
 524,32: *
 524,34: __s
 524,37: VARIABLE
 524,37: ,
 524,39: const
 524,45: char
 524,50: *
 524,52: __format
 524,60: VARIABLE
 524,60: ,
 524,62: __gnuc_va_list
 524,76: TYPE
 524,77: __arg
 524,82: VARIABLE
 524,82: )
 
186 const 
 524,21: const
 
103 char 
 524,27: char
 
298 * option_type_qualifier_list option_pointer 
 524,32: *
 
386 NAME VARIABLE 
 524,34: __s
 524,37: VARIABLE
 
65 VARIABLE 
 524,37: VARIABLE
 
300 , parameter_declaration 
 524,37: ,
 524,39: const
 524,45: char
 524,50: *
 524,52: __format
 524,60: VARIABLE
 
391 const 
 524,39: const
 
103 char 
 524,45: char
 
298 * option_type_qualifier_list option_pointer 
 524,50: *
 
386 NAME VARIABLE 
 524,52: __format
 524,60: VARIABLE
 
65 VARIABLE 
 524,60: VARIABLE
 
300 , parameter_declaration 
 524,60: ,
 524,62: __gnuc_va_list
 524,76: TYPE
 524,77: __arg
 524,82: VARIABLE
 
391 NAME TYPE 
 524,62: __gnuc_va_list
 524,76: TYPE
 
26 TYPE 
 524,76: TYPE
 
298 NAME VARIABLE 
 524,77: __arg
 524,82: VARIABLE
 
65 VARIABLE 
 524,82: VARIABLE
 
187 ) 
 524,82: )
 
60 ; 
 528,6: ;
 
23 extern 
 530,1: extern
 
8 int 
 530,8: int
 
5 NAME VARIABLE 
 530,12: fgetc
 530,17: VARIABLE
 
65 VARIABLE 
 530,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 530,18: (
 530,19: FILE
 530,23: TYPE
 530,24: *
 530,25: __stream
 530,33: VARIABLE
 530,33: )
 
186 NAME TYPE 
 530,19: FILE
 530,23: TYPE
 
65 TYPE 
 530,23: TYPE
 
298 * option_type_qualifier_list option_pointer 
 530,24: *
 
386 NAME VARIABLE 
 530,25: __stream
 530,33: VARIABLE
 
65 VARIABLE 
 530,33: VARIABLE
 
187 ) 
 530,33: )
 
60 ; 
 530,34: ;
 
23 extern 
 531,1: extern
 
8 int 
 531,8: int
 
5 NAME VARIABLE 
 531,12: getc
 531,16: VARIABLE
 
65 VARIABLE 
 531,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 531,17: (
 531,18: FILE
 531,22: TYPE
 531,23: *
 531,24: __stream
 531,32: VARIABLE
 531,32: )
 
186 NAME TYPE 
 531,18: FILE
 531,22: TYPE
 
65 TYPE 
 531,22: TYPE
 
298 * option_type_qualifier_list option_pointer 
 531,23: *
 
386 NAME VARIABLE 
 531,24: __stream
 531,32: VARIABLE
 
65 VARIABLE 
 531,32: VARIABLE
 
187 ) 
 531,32: )
 
60 ; 
 531,33: ;
 
23 extern 
 537,1: extern
 
8 int 
 537,8: int
 
5 NAME VARIABLE 
 537,12: getchar
 537,19: VARIABLE
 
65 VARIABLE 
 537,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 537,20: (
 537,21: void
 537,25: )
 
186 void 
 537,21: void
 
187 ) 
 537,25: )
 
60 ; 
 537,26: ;
 
23 extern 
 544,1: extern
 
8 int 
 544,8: int
 
5 NAME VARIABLE 
 544,12: getc_unlocked
 544,25: VARIABLE
 
65 VARIABLE 
 544,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 544,26: (
 544,27: FILE
 544,31: TYPE
 544,32: *
 544,33: __stream
 544,41: VARIABLE
 544,41: )
 
186 NAME TYPE 
 544,27: FILE
 544,31: TYPE
 
65 TYPE 
 544,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 544,32: *
 
386 NAME VARIABLE 
 544,33: __stream
 544,41: VARIABLE
 
65 VARIABLE 
 544,41: VARIABLE
 
187 ) 
 544,41: )
 
60 ; 
 544,42: ;
 
23 extern 
 545,1: extern
 
8 int 
 545,8: int
 
5 NAME VARIABLE 
 545,12: getchar_unlocked
 545,28: VARIABLE
 
65 VARIABLE 
 545,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 545,29: (
 545,30: void
 545,34: )
 
186 void 
 545,30: void
 
187 ) 
 545,34: )
 
60 ; 
 545,35: ;
 
23 extern 
 547,1: extern
 
8 int 
 547,8: int
 
5 NAME VARIABLE 
 547,12: fgetc_unlocked
 547,26: VARIABLE
 
65 VARIABLE 
 547,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 547,27: (
 547,28: FILE
 547,32: TYPE
 547,33: *
 547,34: __stream
 547,42: VARIABLE
 547,42: )
 
186 NAME TYPE 
 547,28: FILE
 547,32: TYPE
 
65 TYPE 
 547,32: TYPE
 
298 * option_type_qualifier_list option_pointer 
 547,33: *
 
386 NAME VARIABLE 
 547,34: __stream
 547,42: VARIABLE
 
65 VARIABLE 
 547,42: VARIABLE
 
187 ) 
 547,42: )
 
60 ; 
 547,43: ;
 
23 extern 
 549,1: extern
 
8 int 
 549,8: int
 
5 NAME VARIABLE 
 549,12: fputc
 549,17: VARIABLE
 
65 VARIABLE 
 549,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 549,18: (
 549,19: int
 549,23: __c
 549,26: VARIABLE
 549,26: ,
 549,28: FILE
 549,32: TYPE
 549,33: *
 549,34: __stream
 549,42: VARIABLE
 549,42: )
 
186 int 
 549,19: int
 
298 NAME VARIABLE 
 549,23: __c
 549,26: VARIABLE
 
65 VARIABLE 
 549,26: VARIABLE
 
300 , parameter_declaration 
 549,26: ,
 549,28: FILE
 549,32: TYPE
 549,33: *
 549,34: __stream
 549,42: VARIABLE
 
391 NAME TYPE 
 549,28: FILE
 549,32: TYPE
 
26 TYPE 
 549,32: TYPE
 
298 * option_type_qualifier_list option_pointer 
 549,33: *
 
386 NAME VARIABLE 
 549,34: __stream
 549,42: VARIABLE
 
65 VARIABLE 
 549,42: VARIABLE
 
187 ) 
 549,42: )
 
60 ; 
 549,43: ;
 
23 extern 
 550,1: extern
 
8 int 
 550,8: int
 
5 NAME VARIABLE 
 550,12: putc
 550,16: VARIABLE
 
65 VARIABLE 
 550,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 550,17: (
 550,18: int
 550,22: __c
 550,25: VARIABLE
 550,25: ,
 550,27: FILE
 550,31: TYPE
 550,32: *
 550,33: __stream
 550,41: VARIABLE
 550,41: )
 
186 int 
 550,18: int
 
298 NAME VARIABLE 
 550,22: __c
 550,25: VARIABLE
 
65 VARIABLE 
 550,25: VARIABLE
 
300 , parameter_declaration 
 550,25: ,
 550,27: FILE
 550,31: TYPE
 550,32: *
 550,33: __stream
 550,41: VARIABLE
 
391 NAME TYPE 
 550,27: FILE
 550,31: TYPE
 
26 TYPE 
 550,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 550,32: *
 
386 NAME VARIABLE 
 550,33: __stream
 550,41: VARIABLE
 
65 VARIABLE 
 550,41: VARIABLE
 
187 ) 
 550,41: )
 
60 ; 
 550,42: ;
 
23 extern 
 556,1: extern
 
8 int 
 556,8: int
 
5 NAME VARIABLE 
 556,12: putchar
 556,19: VARIABLE
 
65 VARIABLE 
 556,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 556,20: (
 556,21: int
 556,25: __c
 556,28: VARIABLE
 556,28: )
 
186 int 
 556,21: int
 
298 NAME VARIABLE 
 556,25: __c
 556,28: VARIABLE
 
65 VARIABLE 
 556,28: VARIABLE
 
187 ) 
 556,28: )
 
60 ; 
 556,29: ;
 
23 extern 
 558,1: extern
 
8 int 
 558,8: int
 
5 NAME VARIABLE 
 558,12: fputc_unlocked
 558,26: VARIABLE
 
65 VARIABLE 
 558,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 558,27: (
 558,28: int
 558,32: __c
 558,35: VARIABLE
 558,35: ,
 558,37: FILE
 558,41: TYPE
 558,42: *
 558,43: __stream
 558,51: VARIABLE
 558,51: )
 
186 int 
 558,28: int
 
298 NAME VARIABLE 
 558,32: __c
 558,35: VARIABLE
 
65 VARIABLE 
 558,35: VARIABLE
 
300 , parameter_declaration 
 558,35: ,
 558,37: FILE
 558,41: TYPE
 558,42: *
 558,43: __stream
 558,51: VARIABLE
 
391 NAME TYPE 
 558,37: FILE
 558,41: TYPE
 
26 TYPE 
 558,41: TYPE
 
298 * option_type_qualifier_list option_pointer 
 558,42: *
 
386 NAME VARIABLE 
 558,43: __stream
 558,51: VARIABLE
 
65 VARIABLE 
 558,51: VARIABLE
 
187 ) 
 558,51: )
 
60 ; 
 558,52: ;
 
23 extern 
 566,1: extern
 
8 int 
 566,8: int
 
5 NAME VARIABLE 
 566,12: putc_unlocked
 566,25: VARIABLE
 
65 VARIABLE 
 566,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 566,26: (
 566,27: int
 566,31: __c
 566,34: VARIABLE
 566,34: ,
 566,36: FILE
 566,40: TYPE
 566,41: *
 566,42: __stream
 566,50: VARIABLE
 566,50: )
 
186 int 
 566,27: int
 
298 NAME VARIABLE 
 566,31: __c
 566,34: VARIABLE
 
65 VARIABLE 
 566,34: VARIABLE
 
300 , parameter_declaration 
 566,34: ,
 566,36: FILE
 566,40: TYPE
 566,41: *
 566,42: __stream
 566,50: VARIABLE
 
391 NAME TYPE 
 566,36: FILE
 566,40: TYPE
 
26 TYPE 
 566,40: TYPE
 
298 * option_type_qualifier_list option_pointer 
 566,41: *
 
386 NAME VARIABLE 
 566,42: __stream
 566,50: VARIABLE
 
65 VARIABLE 
 566,50: VARIABLE
 
187 ) 
 566,50: )
 
60 ; 
 566,51: ;
 
23 extern 
 567,1: extern
 
8 int 
 567,8: int
 
5 NAME VARIABLE 
 567,12: putchar_unlocked
 567,28: VARIABLE
 
65 VARIABLE 
 567,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 567,29: (
 567,30: int
 567,34: __c
 567,37: VARIABLE
 567,37: )
 
186 int 
 567,30: int
 
298 NAME VARIABLE 
 567,34: __c
 567,37: VARIABLE
 
65 VARIABLE 
 567,37: VARIABLE
 
187 ) 
 567,37: )
 
60 ; 
 567,38: ;
 
23 extern 
 574,1: extern
 
8 int 
 574,8: int
 
5 NAME VARIABLE 
 574,12: getw
 574,16: VARIABLE
 
65 VARIABLE 
 574,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 574,17: (
 574,18: FILE
 574,22: TYPE
 574,23: *
 574,24: __stream
 574,32: VARIABLE
 574,32: )
 
186 NAME TYPE 
 574,18: FILE
 574,22: TYPE
 
65 TYPE 
 574,22: TYPE
 
298 * option_type_qualifier_list option_pointer 
 574,23: *
 
386 NAME VARIABLE 
 574,24: __stream
 574,32: VARIABLE
 
65 VARIABLE 
 574,32: VARIABLE
 
187 ) 
 574,32: )
 
60 ; 
 574,33: ;
 
23 extern 
 577,1: extern
 
8 int 
 577,8: int
 
5 NAME VARIABLE 
 577,12: putw
 577,16: VARIABLE
 
65 VARIABLE 
 577,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 577,17: (
 577,18: int
 577,22: __w
 577,25: VARIABLE
 577,25: ,
 577,27: FILE
 577,31: TYPE
 577,32: *
 577,33: __stream
 577,41: VARIABLE
 577,41: )
 
186 int 
 577,18: int
 
298 NAME VARIABLE 
 577,22: __w
 577,25: VARIABLE
 
65 VARIABLE 
 577,25: VARIABLE
 
300 , parameter_declaration 
 577,25: ,
 577,27: FILE
 577,31: TYPE
 577,32: *
 577,33: __stream
 577,41: VARIABLE
 
391 NAME TYPE 
 577,27: FILE
 577,31: TYPE
 
26 TYPE 
 577,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 577,32: *
 
386 NAME VARIABLE 
 577,33: __stream
 577,41: VARIABLE
 
65 VARIABLE 
 577,41: VARIABLE
 
187 ) 
 577,41: )
 
60 ; 
 577,42: ;
 
23 extern 
 585,1: extern
 
8 char 
 585,8: char
 
5 * option_type_qualifier_list option_pointer 
 585,13: *
 
64 NAME VARIABLE 
 585,14: fgets
 585,19: VARIABLE
 
65 VARIABLE 
 585,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 585,20: (
 585,21: char
 585,26: *
 585,28: __s
 585,31: VARIABLE
 585,31: ,
 585,33: int
 585,37: __n
 585,40: VARIABLE
 585,40: ,
 585,42: FILE
 585,46: TYPE
 585,47: *
 585,49: __stream
 585,57: VARIABLE
 585,57: )
 
186 char 
 585,21: char
 
298 * option_type_qualifier_list option_pointer 
 585,26: *
 
386 NAME VARIABLE 
 585,28: __s
 585,31: VARIABLE
 
65 VARIABLE 
 585,31: VARIABLE
 
300 , parameter_declaration 
 585,31: ,
 585,33: int
 585,37: __n
 585,40: VARIABLE
 
391 int 
 585,33: int
 
298 NAME VARIABLE 
 585,37: __n
 585,40: VARIABLE
 
65 VARIABLE 
 585,40: VARIABLE
 
300 , parameter_declaration 
 585,40: ,
 585,42: FILE
 585,46: TYPE
 585,47: *
 585,49: __stream
 585,57: VARIABLE
 
391 NAME TYPE 
 585,42: FILE
 585,46: TYPE
 
26 TYPE 
 585,46: TYPE
 
298 * option_type_qualifier_list option_pointer 
 585,47: *
 
386 NAME VARIABLE 
 585,49: __stream
 585,57: VARIABLE
 
65 VARIABLE 
 585,57: VARIABLE
 
187 ) 
 585,57: )
 
60 ; 
 586,6: ;
 
23 extern 
 588,1: extern
 
8 NAME TYPE 
 588,8: __ssize_t
 588,17: TYPE
 
26 TYPE 
 588,17: TYPE
 
5 NAME VARIABLE 
 588,18: __getdelim
 588,28: VARIABLE
 
65 VARIABLE 
 588,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 588,29: (
 588,30: char
 588,35: *
 588,36: *
 588,38: __lineptr
 588,47: VARIABLE
 588,47: ,
 589,30: size_t
 589,36: TYPE
 589,37: *
 589,39: __n
 589,42: VARIABLE
 589,42: ,
 589,44: int
 589,48: __delimiter
 589,59: VARIABLE
 589,59: ,
 590,30: FILE
 590,34: TYPE
 590,35: *
 590,37: __stream
 590,45: VARIABLE
 590,45: )
 
186 char 
 588,30: char
 
298 * option_type_qualifier_list option_pointer 
 588,35: *
 588,36: *
 
116 * option_type_qualifier_list option_pointer 
 588,36: *
 
386 NAME VARIABLE 
 588,38: __lineptr
 588,47: VARIABLE
 
65 VARIABLE 
 588,47: VARIABLE
 
300 , parameter_declaration 
 588,47: ,
 589,30: size_t
 589,36: TYPE
 589,37: *
 589,39: __n
 589,42: VARIABLE
 
391 NAME TYPE 
 589,30: size_t
 589,36: TYPE
 
26 TYPE 
 589,36: TYPE
 
298 * option_type_qualifier_list option_pointer 
 589,37: *
 
386 NAME VARIABLE 
 589,39: __n
 589,42: VARIABLE
 
65 VARIABLE 
 589,42: VARIABLE
 
300 , parameter_declaration 
 589,42: ,
 589,44: int
 589,48: __delimiter
 589,59: VARIABLE
 
391 int 
 589,44: int
 
298 NAME VARIABLE 
 589,48: __delimiter
 589,59: VARIABLE
 
65 VARIABLE 
 589,59: VARIABLE
 
300 , parameter_declaration 
 589,59: ,
 590,30: FILE
 590,34: TYPE
 590,35: *
 590,37: __stream
 590,45: VARIABLE
 
391 NAME TYPE 
 590,30: FILE
 590,34: TYPE
 
26 TYPE 
 590,34: TYPE
 
298 * option_type_qualifier_list option_pointer 
 590,35: *
 
386 NAME VARIABLE 
 590,37: __stream
 590,45: VARIABLE
 
65 VARIABLE 
 590,45: VARIABLE
 
187 ) 
 590,45: )
 
60 ; 
 590,47: ;
 
23 extern 
 591,1: extern
 
8 NAME TYPE 
 591,8: __ssize_t
 591,17: TYPE
 
26 TYPE 
 591,17: TYPE
 
5 NAME VARIABLE 
 591,18: getdelim
 591,26: VARIABLE
 
65 VARIABLE 
 591,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 591,27: (
 591,28: char
 591,33: *
 591,34: *
 591,36: __lineptr
 591,45: VARIABLE
 591,45: ,
 592,28: size_t
 592,34: TYPE
 592,35: *
 592,37: __n
 592,40: VARIABLE
 592,40: ,
 592,42: int
 592,46: __delimiter
 592,57: VARIABLE
 592,57: ,
 593,28: FILE
 593,32: TYPE
 593,33: *
 593,35: __stream
 593,43: VARIABLE
 593,43: )
 
186 char 
 591,28: char
 
298 * option_type_qualifier_list option_pointer 
 591,33: *
 591,34: *
 
116 * option_type_qualifier_list option_pointer 
 591,34: *
 
386 NAME VARIABLE 
 591,36: __lineptr
 591,45: VARIABLE
 
65 VARIABLE 
 591,45: VARIABLE
 
300 , parameter_declaration 
 591,45: ,
 592,28: size_t
 592,34: TYPE
 592,35: *
 592,37: __n
 592,40: VARIABLE
 
391 NAME TYPE 
 592,28: size_t
 592,34: TYPE
 
26 TYPE 
 592,34: TYPE
 
298 * option_type_qualifier_list option_pointer 
 592,35: *
 
386 NAME VARIABLE 
 592,37: __n
 592,40: VARIABLE
 
65 VARIABLE 
 592,40: VARIABLE
 
300 , parameter_declaration 
 592,40: ,
 592,42: int
 592,46: __delimiter
 592,57: VARIABLE
 
391 int 
 592,42: int
 
298 NAME VARIABLE 
 592,46: __delimiter
 592,57: VARIABLE
 
65 VARIABLE 
 592,57: VARIABLE
 
300 , parameter_declaration 
 592,57: ,
 593,28: FILE
 593,32: TYPE
 593,33: *
 593,35: __stream
 593,43: VARIABLE
 
391 NAME TYPE 
 593,28: FILE
 593,32: TYPE
 
26 TYPE 
 593,32: TYPE
 
298 * option_type_qualifier_list option_pointer 
 593,33: *
 
386 NAME VARIABLE 
 593,35: __stream
 593,43: VARIABLE
 
65 VARIABLE 
 593,43: VARIABLE
 
187 ) 
 593,43: )
 
60 ; 
 593,45: ;
 
23 extern 
 601,1: extern
 
8 NAME TYPE 
 601,8: __ssize_t
 601,17: TYPE
 
26 TYPE 
 601,17: TYPE
 
5 NAME VARIABLE 
 601,18: getline
 601,25: VARIABLE
 
65 VARIABLE 
 601,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 601,26: (
 601,27: char
 601,32: *
 601,33: *
 601,35: __lineptr
 601,44: VARIABLE
 601,44: ,
 602,27: size_t
 602,33: TYPE
 602,34: *
 602,36: __n
 602,39: VARIABLE
 602,39: ,
 603,27: FILE
 603,31: TYPE
 603,32: *
 603,34: __stream
 603,42: VARIABLE
 603,42: )
 
186 char 
 601,27: char
 
298 * option_type_qualifier_list option_pointer 
 601,32: *
 601,33: *
 
116 * option_type_qualifier_list option_pointer 
 601,33: *
 
386 NAME VARIABLE 
 601,35: __lineptr
 601,44: VARIABLE
 
65 VARIABLE 
 601,44: VARIABLE
 
300 , parameter_declaration 
 601,44: ,
 602,27: size_t
 602,33: TYPE
 602,34: *
 602,36: __n
 602,39: VARIABLE
 
391 NAME TYPE 
 602,27: size_t
 602,33: TYPE
 
26 TYPE 
 602,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 602,34: *
 
386 NAME VARIABLE 
 602,36: __n
 602,39: VARIABLE
 
65 VARIABLE 
 602,39: VARIABLE
 
300 , parameter_declaration 
 602,39: ,
 603,27: FILE
 603,31: TYPE
 603,32: *
 603,34: __stream
 603,42: VARIABLE
 
391 NAME TYPE 
 603,27: FILE
 603,31: TYPE
 
26 TYPE 
 603,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 603,32: *
 
386 NAME VARIABLE 
 603,34: __stream
 603,42: VARIABLE
 
65 VARIABLE 
 603,42: VARIABLE
 
187 ) 
 603,42: )
 
60 ; 
 603,44: ;
 
23 extern 
 611,1: extern
 
8 int 
 611,8: int
 
5 NAME VARIABLE 
 611,12: fputs
 611,17: VARIABLE
 
65 VARIABLE 
 611,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 611,18: (
 611,19: const
 611,25: char
 611,30: *
 611,32: __s
 611,35: VARIABLE
 611,35: ,
 611,37: FILE
 611,41: TYPE
 611,42: *
 611,44: __stream
 611,52: VARIABLE
 611,52: )
 
186 const 
 611,19: const
 
103 char 
 611,25: char
 
298 * option_type_qualifier_list option_pointer 
 611,30: *
 
386 NAME VARIABLE 
 611,32: __s
 611,35: VARIABLE
 
65 VARIABLE 
 611,35: VARIABLE
 
300 , parameter_declaration 
 611,35: ,
 611,37: FILE
 611,41: TYPE
 611,42: *
 611,44: __stream
 611,52: VARIABLE
 
391 NAME TYPE 
 611,37: FILE
 611,41: TYPE
 
26 TYPE 
 611,41: TYPE
 
298 * option_type_qualifier_list option_pointer 
 611,42: *
 
386 NAME VARIABLE 
 611,44: __stream
 611,52: VARIABLE
 
65 VARIABLE 
 611,52: VARIABLE
 
187 ) 
 611,52: )
 
60 ; 
 611,53: ;
 
23 extern 
 617,1: extern
 
8 int 
 617,8: int
 
5 NAME VARIABLE 
 617,12: puts
 617,16: VARIABLE
 
65 VARIABLE 
 617,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 617,17: (
 617,18: const
 617,24: char
 617,29: *
 617,30: __s
 617,33: VARIABLE
 617,33: )
 
186 const 
 617,18: const
 
103 char 
 617,24: char
 
298 * option_type_qualifier_list option_pointer 
 617,29: *
 
386 NAME VARIABLE 
 617,30: __s
 617,33: VARIABLE
 
65 VARIABLE 
 617,33: VARIABLE
 
187 ) 
 617,33: )
 
60 ; 
 617,34: ;
 
23 extern 
 624,1: extern
 
8 int 
 624,8: int
 
5 NAME VARIABLE 
 624,12: ungetc
 624,18: VARIABLE
 
65 VARIABLE 
 624,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 624,19: (
 624,20: int
 624,24: __c
 624,27: VARIABLE
 624,27: ,
 624,29: FILE
 624,33: TYPE
 624,34: *
 624,35: __stream
 624,43: VARIABLE
 624,43: )
 
186 int 
 624,20: int
 
298 NAME VARIABLE 
 624,24: __c
 624,27: VARIABLE
 
65 VARIABLE 
 624,27: VARIABLE
 
300 , parameter_declaration 
 624,27: ,
 624,29: FILE
 624,33: TYPE
 624,34: *
 624,35: __stream
 624,43: VARIABLE
 
391 NAME TYPE 
 624,29: FILE
 624,33: TYPE
 
26 TYPE 
 624,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 624,34: *
 
386 NAME VARIABLE 
 624,35: __stream
 624,43: VARIABLE
 
65 VARIABLE 
 624,43: VARIABLE
 
187 ) 
 624,43: )
 
60 ; 
 624,44: ;
 
23 extern 
 631,1: extern
 
8 NAME TYPE 
 631,8: size_t
 631,14: TYPE
 
26 TYPE 
 631,14: TYPE
 
5 NAME VARIABLE 
 631,15: fread
 631,20: VARIABLE
 
65 VARIABLE 
 631,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 631,21: (
 631,22: void
 631,27: *
 631,29: __ptr
 631,34: VARIABLE
 631,34: ,
 631,36: size_t
 631,42: TYPE
 631,43: __size
 631,49: VARIABLE
 631,49: ,
 632,8: size_t
 632,14: TYPE
 632,15: __n
 632,18: VARIABLE
 632,18: ,
 632,20: FILE
 632,24: TYPE
 632,25: *
 632,27: __stream
 632,35: VARIABLE
 632,35: )
 
186 void 
 631,22: void
 
298 * option_type_qualifier_list option_pointer 
 631,27: *
 
386 NAME VARIABLE 
 631,29: __ptr
 631,34: VARIABLE
 
65 VARIABLE 
 631,34: VARIABLE
 
300 , parameter_declaration 
 631,34: ,
 631,36: size_t
 631,42: TYPE
 631,43: __size
 631,49: VARIABLE
 
391 NAME TYPE 
 631,36: size_t
 631,42: TYPE
 
26 TYPE 
 631,42: TYPE
 
298 NAME VARIABLE 
 631,43: __size
 631,49: VARIABLE
 
65 VARIABLE 
 631,49: VARIABLE
 
300 , parameter_declaration 
 631,49: ,
 632,8: size_t
 632,14: TYPE
 632,15: __n
 632,18: VARIABLE
 
391 NAME TYPE 
 632,8: size_t
 632,14: TYPE
 
26 TYPE 
 632,14: TYPE
 
298 NAME VARIABLE 
 632,15: __n
 632,18: VARIABLE
 
65 VARIABLE 
 632,18: VARIABLE
 
300 , parameter_declaration 
 632,18: ,
 632,20: FILE
 632,24: TYPE
 632,25: *
 632,27: __stream
 632,35: VARIABLE
 
391 NAME TYPE 
 632,20: FILE
 632,24: TYPE
 
26 TYPE 
 632,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 632,25: *
 
386 NAME VARIABLE 
 632,27: __stream
 632,35: VARIABLE
 
65 VARIABLE 
 632,35: VARIABLE
 
187 ) 
 632,35: )
 
60 ; 
 632,37: ;
 
23 extern 
 637,1: extern
 
8 NAME TYPE 
 637,8: size_t
 637,14: TYPE
 
26 TYPE 
 637,14: TYPE
 
5 NAME VARIABLE 
 637,15: fwrite
 637,21: VARIABLE
 
65 VARIABLE 
 637,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 637,22: (
 637,23: const
 637,29: void
 637,34: *
 637,36: __ptr
 637,41: VARIABLE
 637,41: ,
 637,43: size_t
 637,49: TYPE
 637,50: __size
 637,56: VARIABLE
 637,56: ,
 638,9: size_t
 638,15: TYPE
 638,16: __n
 638,19: VARIABLE
 638,19: ,
 638,21: FILE
 638,25: TYPE
 638,26: *
 638,28: __s
 638,31: VARIABLE
 638,31: )
 
186 const 
 637,23: const
 
103 void 
 637,29: void
 
298 * option_type_qualifier_list option_pointer 
 637,34: *
 
386 NAME VARIABLE 
 637,36: __ptr
 637,41: VARIABLE
 
65 VARIABLE 
 637,41: VARIABLE
 
300 , parameter_declaration 
 637,41: ,
 637,43: size_t
 637,49: TYPE
 637,50: __size
 637,56: VARIABLE
 
391 NAME TYPE 
 637,43: size_t
 637,49: TYPE
 
26 TYPE 
 637,49: TYPE
 
298 NAME VARIABLE 
 637,50: __size
 637,56: VARIABLE
 
65 VARIABLE 
 637,56: VARIABLE
 
300 , parameter_declaration 
 637,56: ,
 638,9: size_t
 638,15: TYPE
 638,16: __n
 638,19: VARIABLE
 
391 NAME TYPE 
 638,9: size_t
 638,15: TYPE
 
26 TYPE 
 638,15: TYPE
 
298 NAME VARIABLE 
 638,16: __n
 638,19: VARIABLE
 
65 VARIABLE 
 638,19: VARIABLE
 
300 , parameter_declaration 
 638,19: ,
 638,21: FILE
 638,25: TYPE
 638,26: *
 638,28: __s
 638,31: VARIABLE
 
391 NAME TYPE 
 638,21: FILE
 638,25: TYPE
 
26 TYPE 
 638,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 638,26: *
 
386 NAME VARIABLE 
 638,28: __s
 638,31: VARIABLE
 
65 VARIABLE 
 638,31: VARIABLE
 
187 ) 
 638,31: )
 
60 ; 
 638,32: ;
 
23 extern 
 640,1: extern
 
8 NAME TYPE 
 640,8: size_t
 640,14: TYPE
 
26 TYPE 
 640,14: TYPE
 
5 NAME VARIABLE 
 640,15: fread_unlocked
 640,29: VARIABLE
 
65 VARIABLE 
 640,29: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 640,30: (
 640,31: void
 640,36: *
 640,38: __ptr
 640,43: VARIABLE
 640,43: ,
 640,45: size_t
 640,51: TYPE
 640,52: __size
 640,58: VARIABLE
 640,58: ,
 641,10: size_t
 641,16: TYPE
 641,17: __n
 641,20: VARIABLE
 641,20: ,
 641,22: FILE
 641,26: TYPE
 641,27: *
 641,29: __stream
 641,37: VARIABLE
 641,37: )
 
186 void 
 640,31: void
 
298 * option_type_qualifier_list option_pointer 
 640,36: *
 
386 NAME VARIABLE 
 640,38: __ptr
 640,43: VARIABLE
 
65 VARIABLE 
 640,43: VARIABLE
 
300 , parameter_declaration 
 640,43: ,
 640,45: size_t
 640,51: TYPE
 640,52: __size
 640,58: VARIABLE
 
391 NAME TYPE 
 640,45: size_t
 640,51: TYPE
 
26 TYPE 
 640,51: TYPE
 
298 NAME VARIABLE 
 640,52: __size
 640,58: VARIABLE
 
65 VARIABLE 
 640,58: VARIABLE
 
300 , parameter_declaration 
 640,58: ,
 641,10: size_t
 641,16: TYPE
 641,17: __n
 641,20: VARIABLE
 
391 NAME TYPE 
 641,10: size_t
 641,16: TYPE
 
26 TYPE 
 641,16: TYPE
 
298 NAME VARIABLE 
 641,17: __n
 641,20: VARIABLE
 
65 VARIABLE 
 641,20: VARIABLE
 
300 , parameter_declaration 
 641,20: ,
 641,22: FILE
 641,26: TYPE
 641,27: *
 641,29: __stream
 641,37: VARIABLE
 
391 NAME TYPE 
 641,22: FILE
 641,26: TYPE
 
26 TYPE 
 641,26: TYPE
 
298 * option_type_qualifier_list option_pointer 
 641,27: *
 
386 NAME VARIABLE 
 641,29: __stream
 641,37: VARIABLE
 
65 VARIABLE 
 641,37: VARIABLE
 
187 ) 
 641,37: )
 
60 ; 
 641,39: ;
 
23 extern 
 642,1: extern
 
8 NAME TYPE 
 642,8: size_t
 642,14: TYPE
 
26 TYPE 
 642,14: TYPE
 
5 NAME VARIABLE 
 642,15: fwrite_unlocked
 642,30: VARIABLE
 
65 VARIABLE 
 642,30: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 642,31: (
 642,32: const
 642,38: void
 642,43: *
 642,45: __ptr
 642,50: VARIABLE
 642,50: ,
 642,52: size_t
 642,58: TYPE
 642,59: __size
 642,65: VARIABLE
 642,65: ,
 643,11: size_t
 643,17: TYPE
 643,18: __n
 643,21: VARIABLE
 643,21: ,
 643,23: FILE
 643,27: TYPE
 643,28: *
 643,30: __stream
 643,38: VARIABLE
 643,38: )
 
186 const 
 642,32: const
 
103 void 
 642,38: void
 
298 * option_type_qualifier_list option_pointer 
 642,43: *
 
386 NAME VARIABLE 
 642,45: __ptr
 642,50: VARIABLE
 
65 VARIABLE 
 642,50: VARIABLE
 
300 , parameter_declaration 
 642,50: ,
 642,52: size_t
 642,58: TYPE
 642,59: __size
 642,65: VARIABLE
 
391 NAME TYPE 
 642,52: size_t
 642,58: TYPE
 
26 TYPE 
 642,58: TYPE
 
298 NAME VARIABLE 
 642,59: __size
 642,65: VARIABLE
 
65 VARIABLE 
 642,65: VARIABLE
 
300 , parameter_declaration 
 642,65: ,
 643,11: size_t
 643,17: TYPE
 643,18: __n
 643,21: VARIABLE
 
391 NAME TYPE 
 643,11: size_t
 643,17: TYPE
 
26 TYPE 
 643,17: TYPE
 
298 NAME VARIABLE 
 643,18: __n
 643,21: VARIABLE
 
65 VARIABLE 
 643,21: VARIABLE
 
300 , parameter_declaration 
 643,21: ,
 643,23: FILE
 643,27: TYPE
 643,28: *
 643,30: __stream
 643,38: VARIABLE
 
391 NAME TYPE 
 643,23: FILE
 643,27: TYPE
 
26 TYPE 
 643,27: TYPE
 
298 * option_type_qualifier_list option_pointer 
 643,28: *
 
386 NAME VARIABLE 
 643,30: __stream
 643,38: VARIABLE
 
65 VARIABLE 
 643,38: VARIABLE
 
187 ) 
 643,38: )
 
60 ; 
 643,39: ;
 
23 extern 
 651,1: extern
 
8 int 
 651,8: int
 
5 NAME VARIABLE 
 651,12: fseek
 651,17: VARIABLE
 
65 VARIABLE 
 651,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 651,18: (
 651,19: FILE
 651,23: TYPE
 651,24: *
 651,25: __stream
 651,33: VARIABLE
 651,33: ,
 651,35: long
 651,40: int
 651,44: __off
 651,49: VARIABLE
 651,49: ,
 651,51: int
 651,55: __whence
 651,63: VARIABLE
 651,63: )
 
186 NAME TYPE 
 651,19: FILE
 651,23: TYPE
 
65 TYPE 
 651,23: TYPE
 
298 * option_type_qualifier_list option_pointer 
 651,24: *
 
386 NAME VARIABLE 
 651,25: __stream
 651,33: VARIABLE
 
65 VARIABLE 
 651,33: VARIABLE
 
300 , parameter_declaration 
 651,33: ,
 651,35: long
 651,40: int
 651,44: __off
 651,49: VARIABLE
 
391 long 
 651,35: long
 
106 int 
 651,40: int
 
298 NAME VARIABLE 
 651,44: __off
 651,49: VARIABLE
 
65 VARIABLE 
 651,49: VARIABLE
 
300 , parameter_declaration 
 651,49: ,
 651,51: int
 651,55: __whence
 651,63: VARIABLE
 
391 int 
 651,51: int
 
298 NAME VARIABLE 
 651,55: __whence
 651,63: VARIABLE
 
65 VARIABLE 
 651,63: VARIABLE
 
187 ) 
 651,63: )
 
60 ; 
 651,64: ;
 
23 extern 
 656,1: extern
 
8 long 
 656,8: long
 
17 int 
 656,13: int
 
5 NAME VARIABLE 
 656,17: ftell
 656,22: VARIABLE
 
65 VARIABLE 
 656,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 656,23: (
 656,24: FILE
 656,28: TYPE
 656,29: *
 656,30: __stream
 656,38: VARIABLE
 656,38: )
 
186 NAME TYPE 
 656,24: FILE
 656,28: TYPE
 
65 TYPE 
 656,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 656,29: *
 
386 NAME VARIABLE 
 656,30: __stream
 656,38: VARIABLE
 
65 VARIABLE 
 656,38: VARIABLE
 
187 ) 
 656,38: )
 
60 ; 
 656,40: ;
 
23 extern 
 661,1: extern
 
8 void 
 661,8: void
 
5 NAME VARIABLE 
 661,13: rewind
 661,19: VARIABLE
 
65 VARIABLE 
 661,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 661,20: (
 661,21: FILE
 661,25: TYPE
 661,26: *
 661,27: __stream
 661,35: VARIABLE
 661,35: )
 
186 NAME TYPE 
 661,21: FILE
 661,25: TYPE
 
65 TYPE 
 661,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 661,26: *
 
386 NAME VARIABLE 
 661,27: __stream
 661,35: VARIABLE
 
65 VARIABLE 
 661,35: VARIABLE
 
187 ) 
 661,35: )
 
60 ; 
 661,36: ;
 
23 extern 
 663,1: extern
 
8 int 
 663,8: int
 
5 NAME VARIABLE 
 663,12: fseeko
 663,18: VARIABLE
 
65 VARIABLE 
 663,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 663,19: (
 663,20: FILE
 663,24: TYPE
 663,25: *
 663,26: __stream
 663,34: VARIABLE
 663,34: ,
 663,36: __off_t
 663,43: TYPE
 663,44: __off
 663,49: VARIABLE
 663,49: ,
 663,51: int
 663,55: __whence
 663,63: VARIABLE
 663,63: )
 
186 NAME TYPE 
 663,20: FILE
 663,24: TYPE
 
65 TYPE 
 663,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 663,25: *
 
386 NAME VARIABLE 
 663,26: __stream
 663,34: VARIABLE
 
65 VARIABLE 
 663,34: VARIABLE
 
300 , parameter_declaration 
 663,34: ,
 663,36: __off_t
 663,43: TYPE
 663,44: __off
 663,49: VARIABLE
 
391 NAME TYPE 
 663,36: __off_t
 663,43: TYPE
 
26 TYPE 
 663,43: TYPE
 
298 NAME VARIABLE 
 663,44: __off
 663,49: VARIABLE
 
65 VARIABLE 
 663,49: VARIABLE
 
300 , parameter_declaration 
 663,49: ,
 663,51: int
 663,55: __whence
 663,63: VARIABLE
 
391 int 
 663,51: int
 
298 NAME VARIABLE 
 663,55: __whence
 663,63: VARIABLE
 
65 VARIABLE 
 663,63: VARIABLE
 
187 ) 
 663,63: )
 
60 ; 
 663,64: ;
 
23 extern 
 668,1: extern
 
8 NAME TYPE 
 668,8: __off_t
 668,15: TYPE
 
26 TYPE 
 668,15: TYPE
 
5 NAME VARIABLE 
 668,16: ftello
 668,22: VARIABLE
 
65 VARIABLE 
 668,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 668,23: (
 668,24: FILE
 668,28: TYPE
 668,29: *
 668,30: __stream
 668,38: VARIABLE
 668,38: )
 
186 NAME TYPE 
 668,24: FILE
 668,28: TYPE
 
65 TYPE 
 668,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 668,29: *
 
386 NAME VARIABLE 
 668,30: __stream
 668,38: VARIABLE
 
65 VARIABLE 
 668,38: VARIABLE
 
187 ) 
 668,38: )
 
60 ; 
 668,40: ;
 
23 extern 
 670,1: extern
 
8 int 
 670,8: int
 
5 NAME VARIABLE 
 670,12: fgetpos
 670,19: VARIABLE
 
65 VARIABLE 
 670,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 670,20: (
 670,21: FILE
 670,25: TYPE
 670,26: *
 670,28: __stream
 670,36: VARIABLE
 670,36: ,
 670,38: fpos_t
 670,44: TYPE
 670,45: *
 670,47: __pos
 670,52: VARIABLE
 670,52: )
 
186 NAME TYPE 
 670,21: FILE
 670,25: TYPE
 
65 TYPE 
 670,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 670,26: *
 
386 NAME VARIABLE 
 670,28: __stream
 670,36: VARIABLE
 
65 VARIABLE 
 670,36: VARIABLE
 
300 , parameter_declaration 
 670,36: ,
 670,38: fpos_t
 670,44: TYPE
 670,45: *
 670,47: __pos
 670,52: VARIABLE
 
391 NAME TYPE 
 670,38: fpos_t
 670,44: TYPE
 
26 TYPE 
 670,44: TYPE
 
298 * option_type_qualifier_list option_pointer 
 670,45: *
 
386 NAME VARIABLE 
 670,47: __pos
 670,52: VARIABLE
 
65 VARIABLE 
 670,52: VARIABLE
 
187 ) 
 670,52: )
 
60 ; 
 670,53: ;
 
23 extern 
 675,1: extern
 
8 int 
 675,8: int
 
5 NAME VARIABLE 
 675,12: fsetpos
 675,19: VARIABLE
 
65 VARIABLE 
 675,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 675,20: (
 675,21: FILE
 675,25: TYPE
 675,26: *
 675,27: __stream
 675,35: VARIABLE
 675,35: ,
 675,37: const
 675,43: fpos_t
 675,49: TYPE
 675,50: *
 675,51: __pos
 675,56: VARIABLE
 675,56: )
 
186 NAME TYPE 
 675,21: FILE
 675,25: TYPE
 
65 TYPE 
 675,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 675,26: *
 
386 NAME VARIABLE 
 675,27: __stream
 675,35: VARIABLE
 
65 VARIABLE 
 675,35: VARIABLE
 
300 , parameter_declaration 
 675,35: ,
 675,37: const
 675,43: fpos_t
 675,49: TYPE
 675,50: *
 675,51: __pos
 675,56: VARIABLE
 
391 const 
 675,37: const
 
103 NAME TYPE 
 675,43: fpos_t
 675,49: TYPE
 
26 TYPE 
 675,49: TYPE
 
298 * option_type_qualifier_list option_pointer 
 675,50: *
 
386 NAME VARIABLE 
 675,51: __pos
 675,56: VARIABLE
 
65 VARIABLE 
 675,56: VARIABLE
 
187 ) 
 675,56: )
 
60 ; 
 675,57: ;
 
23 extern 
 677,1: extern
 
8 void 
 677,8: void
 
5 NAME VARIABLE 
 677,13: clearerr
 677,21: VARIABLE
 
65 VARIABLE 
 677,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 677,22: (
 677,23: FILE
 677,27: TYPE
 677,28: *
 677,29: __stream
 677,37: VARIABLE
 677,37: )
 
186 NAME TYPE 
 677,23: FILE
 677,27: TYPE
 
65 TYPE 
 677,27: TYPE
 
298 * option_type_qualifier_list option_pointer 
 677,28: *
 
386 NAME VARIABLE 
 677,29: __stream
 677,37: VARIABLE
 
65 VARIABLE 
 677,37: VARIABLE
 
187 ) 
 677,37: )
 
60 ; 
 677,39: ;
 
23 extern 
 679,1: extern
 
8 int 
 679,8: int
 
5 NAME VARIABLE 
 679,12: feof
 679,16: VARIABLE
 
65 VARIABLE 
 679,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 679,17: (
 679,18: FILE
 679,22: TYPE
 679,23: *
 679,24: __stream
 679,32: VARIABLE
 679,32: )
 
186 NAME TYPE 
 679,18: FILE
 679,22: TYPE
 
65 TYPE 
 679,22: TYPE
 
298 * option_type_qualifier_list option_pointer 
 679,23: *
 
386 NAME VARIABLE 
 679,24: __stream
 679,32: VARIABLE
 
65 VARIABLE 
 679,32: VARIABLE
 
187 ) 
 679,32: )
 
60 ; 
 679,35: ;
 
23 extern 
 681,1: extern
 
8 int 
 681,8: int
 
5 NAME VARIABLE 
 681,12: ferror
 681,18: VARIABLE
 
65 VARIABLE 
 681,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 681,19: (
 681,20: FILE
 681,24: TYPE
 681,25: *
 681,26: __stream
 681,34: VARIABLE
 681,34: )
 
186 NAME TYPE 
 681,20: FILE
 681,24: TYPE
 
65 TYPE 
 681,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 681,25: *
 
386 NAME VARIABLE 
 681,26: __stream
 681,34: VARIABLE
 
65 VARIABLE 
 681,34: VARIABLE
 
187 ) 
 681,34: )
 
60 ; 
 681,37: ;
 
23 extern 
 685,1: extern
 
8 void 
 685,8: void
 
5 NAME VARIABLE 
 685,13: clearerr_unlocked
 685,30: VARIABLE
 
65 VARIABLE 
 685,30: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 685,31: (
 685,32: FILE
 685,36: TYPE
 685,37: *
 685,38: __stream
 685,46: VARIABLE
 685,46: )
 
186 NAME TYPE 
 685,32: FILE
 685,36: TYPE
 
65 TYPE 
 685,36: TYPE
 
298 * option_type_qualifier_list option_pointer 
 685,37: *
 
386 NAME VARIABLE 
 685,38: __stream
 685,46: VARIABLE
 
65 VARIABLE 
 685,46: VARIABLE
 
187 ) 
 685,46: )
 
60 ; 
 685,48: ;
 
23 extern 
 686,1: extern
 
8 int 
 686,8: int
 
5 NAME VARIABLE 
 686,12: feof_unlocked
 686,25: VARIABLE
 
65 VARIABLE 
 686,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 686,26: (
 686,27: FILE
 686,31: TYPE
 686,32: *
 686,33: __stream
 686,41: VARIABLE
 686,41: )
 
186 NAME TYPE 
 686,27: FILE
 686,31: TYPE
 
65 TYPE 
 686,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 686,32: *
 
386 NAME VARIABLE 
 686,33: __stream
 686,41: VARIABLE
 
65 VARIABLE 
 686,41: VARIABLE
 
187 ) 
 686,41: )
 
60 ; 
 686,44: ;
 
23 extern 
 687,1: extern
 
8 int 
 687,8: int
 
5 NAME VARIABLE 
 687,12: ferror_unlocked
 687,27: VARIABLE
 
65 VARIABLE 
 687,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 687,28: (
 687,29: FILE
 687,33: TYPE
 687,34: *
 687,35: __stream
 687,43: VARIABLE
 687,43: )
 
186 NAME TYPE 
 687,29: FILE
 687,33: TYPE
 
65 TYPE 
 687,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 687,34: *
 
386 NAME VARIABLE 
 687,35: __stream
 687,43: VARIABLE
 
65 VARIABLE 
 687,43: VARIABLE
 
187 ) 
 687,43: )
 
60 ; 
 687,46: ;
 
23 extern 
 695,1: extern
 
8 void 
 695,8: void
 
5 NAME VARIABLE 
 695,13: perror
 695,19: VARIABLE
 
65 VARIABLE 
 695,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 695,20: (
 695,21: const
 695,27: char
 695,32: *
 695,33: __s
 695,36: VARIABLE
 695,36: )
 
186 const 
 695,21: const
 
103 char 
 695,27: char
 
298 * option_type_qualifier_list option_pointer 
 695,32: *
 
386 NAME VARIABLE 
 695,33: __s
 695,36: VARIABLE
 
65 VARIABLE 
 695,36: VARIABLE
 
187 ) 
 695,36: )
 
60 ; 
 695,37: ;
 
23 extern 
 700,1: extern
 
8 int 
 700,8: int
 
5 NAME VARIABLE 
 700,12: fileno
 700,18: VARIABLE
 
65 VARIABLE 
 700,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 700,19: (
 700,20: FILE
 700,24: TYPE
 700,25: *
 700,26: __stream
 700,34: VARIABLE
 700,34: )
 
186 NAME TYPE 
 700,20: FILE
 700,24: TYPE
 
65 TYPE 
 700,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 700,25: *
 
386 NAME VARIABLE 
 700,26: __stream
 700,34: VARIABLE
 
65 VARIABLE 
 700,34: VARIABLE
 
187 ) 
 700,34: )
 
60 ; 
 700,37: ;
 
23 extern 
 705,1: extern
 
8 int 
 705,8: int
 
5 NAME VARIABLE 
 705,12: fileno_unlocked
 705,27: VARIABLE
 
65 VARIABLE 
 705,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 705,28: (
 705,29: FILE
 705,33: TYPE
 705,34: *
 705,35: __stream
 705,43: VARIABLE
 705,43: )
 
186 NAME TYPE 
 705,29: FILE
 705,33: TYPE
 
65 TYPE 
 705,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 705,34: *
 
386 NAME VARIABLE 
 705,35: __stream
 705,43: VARIABLE
 
65 VARIABLE 
 705,43: VARIABLE
 
187 ) 
 705,43: )
 
60 ; 
 705,46: ;
 
23 extern 
 707,1: extern
 
8 int 
 707,8: int
 
5 NAME VARIABLE 
 707,12: pclose
 707,18: VARIABLE
 
65 VARIABLE 
 707,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 707,19: (
 707,20: FILE
 707,24: TYPE
 707,25: *
 707,26: __stream
 707,34: VARIABLE
 707,34: )
 
186 NAME TYPE 
 707,20: FILE
 707,24: TYPE
 
65 TYPE 
 707,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 707,25: *
 
386 NAME VARIABLE 
 707,26: __stream
 707,34: VARIABLE
 
65 VARIABLE 
 707,34: VARIABLE
 
187 ) 
 707,34: )
 
60 ; 
 707,35: ;
 
23 extern 
 713,1: extern
 
8 NAME TYPE 
 713,8: FILE
 713,12: TYPE
 
26 TYPE 
 713,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 713,13: *
 
64 NAME VARIABLE 
 713,14: popen
 713,19: VARIABLE
 
65 VARIABLE 
 713,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 713,20: (
 713,21: const
 713,27: char
 713,32: *
 713,33: __command
 713,42: VARIABLE
 713,42: ,
 713,44: const
 713,50: char
 713,55: *
 713,56: __modes
 713,63: VARIABLE
 713,63: )
 
186 const 
 713,21: const
 
103 char 
 713,27: char
 
298 * option_type_qualifier_list option_pointer 
 713,32: *
 
386 NAME VARIABLE 
 713,33: __command
 713,42: VARIABLE
 
65 VARIABLE 
 713,42: VARIABLE
 
300 , parameter_declaration 
 713,42: ,
 713,44: const
 713,50: char
 713,55: *
 713,56: __modes
 713,63: VARIABLE
 
391 const 
 713,44: const
 
103 char 
 713,50: char
 
298 * option_type_qualifier_list option_pointer 
 713,55: *
 
386 NAME VARIABLE 
 713,56: __modes
 713,63: VARIABLE
 
65 VARIABLE 
 713,63: VARIABLE
 
187 ) 
 713,63: )
 
60 ; 
 714,5: ;
 
23 extern 
 721,1: extern
 
8 char 
 721,8: char
 
5 * option_type_qualifier_list option_pointer 
 721,13: *
 
64 NAME VARIABLE 
 721,14: ctermid
 721,21: VARIABLE
 
65 VARIABLE 
 721,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 721,22: (
 721,23: char
 721,28: *
 721,29: __s
 721,32: VARIABLE
 721,32: )
 
186 char 
 721,23: char
 
298 * option_type_qualifier_list option_pointer 
 721,28: *
 
386 NAME VARIABLE 
 721,29: __s
 721,32: VARIABLE
 
65 VARIABLE 
 721,32: VARIABLE
 
187 ) 
 721,32: )
 
60 ; 
 722,3: ;
 
23 extern 
 724,1: extern
 
8 void 
 724,8: void
 
5 NAME VARIABLE 
 724,13: flockfile
 724,22: VARIABLE
 
65 VARIABLE 
 724,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 724,23: (
 724,24: FILE
 724,28: TYPE
 724,29: *
 724,30: __stream
 724,38: VARIABLE
 724,38: )
 
186 NAME TYPE 
 724,24: FILE
 724,28: TYPE
 
65 TYPE 
 724,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 724,29: *
 
386 NAME VARIABLE 
 724,30: __stream
 724,38: VARIABLE
 
65 VARIABLE 
 724,38: VARIABLE
 
187 ) 
 724,38: )
 
60 ; 
 724,40: ;
 
23 extern 
 728,1: extern
 
8 int 
 728,8: int
 
5 NAME VARIABLE 
 728,12: ftrylockfile
 728,24: VARIABLE
 
65 VARIABLE 
 728,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 728,25: (
 728,26: FILE
 728,30: TYPE
 728,31: *
 728,32: __stream
 728,40: VARIABLE
 728,40: )
 
186 NAME TYPE 
 728,26: FILE
 728,30: TYPE
 
65 TYPE 
 728,30: TYPE
 
298 * option_type_qualifier_list option_pointer 
 728,31: *
 
386 NAME VARIABLE 
 728,32: __stream
 728,40: VARIABLE
 
65 VARIABLE 
 728,40: VARIABLE
 
187 ) 
 728,40: )
 
60 ; 
 728,43: ;
 
23 extern 
 731,1: extern
 
8 void 
 731,8: void
 
5 NAME VARIABLE 
 731,13: funlockfile
 731,24: VARIABLE
 
65 VARIABLE 
 731,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 731,25: (
 731,26: FILE
 731,30: TYPE
 731,31: *
 731,32: __stream
 731,40: VARIABLE
 731,40: )
 
186 NAME TYPE 
 731,26: FILE
 731,30: TYPE
 
65 TYPE 
 731,30: TYPE
 
298 * option_type_qualifier_list option_pointer 
 731,31: *
 
386 NAME VARIABLE 
 731,32: __stream
 731,40: VARIABLE
 
65 VARIABLE 
 731,40: VARIABLE
 
187 ) 
 731,40: )
 
60 ; 
 731,42: ;
 
23 extern 
 733,1: extern
 
8 int 
 733,8: int
 
5 NAME VARIABLE 
 733,12: __uflow
 733,19: VARIABLE
 
65 VARIABLE 
 733,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 733,20: (
 733,21: FILE
 733,25: TYPE
 733,26: *
 733,27: )
 
186 NAME TYPE 
 733,21: FILE
 733,25: TYPE
 
65 TYPE 
 733,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 733,26: *
 
187 ) 
 733,27: )
 
60 ; 
 733,28: ;
 
23 extern 
 734,1: extern
 
8 int 
 734,8: int
 
5 NAME VARIABLE 
 734,12: __overflow
 734,22: VARIABLE
 
65 VARIABLE 
 734,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 734,23: (
 734,24: FILE
 734,28: TYPE
 734,29: *
 734,30: ,
 734,32: int
 734,35: )
 
186 NAME TYPE 
 734,24: FILE
 734,28: TYPE
 
65 TYPE 
 734,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 734,29: *
 
300 , parameter_declaration 
 734,30: ,
 734,32: int
 
391 int 
 734,32: int
 
187 ) 
 734,35: )
 
60 ; 
 734,36: ;
 
23 extern 
 751,1: extern
 
8 void 
 751,8: void
 
5 * option_type_qualifier_list option_pointer 
 751,13: *
 
64 NAME VARIABLE 
 751,14: memcpy
 751,20: VARIABLE
 
65 VARIABLE 
 751,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 751,21: (
 751,22: void
 751,27: *
 751,29: __dest
 751,35: VARIABLE
 751,35: ,
 751,37: const
 751,43: void
 751,48: *
 751,50: __src
 751,55: VARIABLE
 751,55: ,
 752,8: size_t
 752,14: TYPE
 752,15: __n
 752,18: VARIABLE
 752,18: )
 
186 void 
 751,22: void
 
298 * option_type_qualifier_list option_pointer 
 751,27: *
 
386 NAME VARIABLE 
 751,29: __dest
 751,35: VARIABLE
 
65 VARIABLE 
 751,35: VARIABLE
 
300 , parameter_declaration 
 751,35: ,
 751,37: const
 751,43: void
 751,48: *
 751,50: __src
 751,55: VARIABLE
 
391 const 
 751,37: const
 
103 void 
 751,43: void
 
298 * option_type_qualifier_list option_pointer 
 751,48: *
 
386 NAME VARIABLE 
 751,50: __src
 751,55: VARIABLE
 
65 VARIABLE 
 751,55: VARIABLE
 
300 , parameter_declaration 
 751,55: ,
 752,8: size_t
 752,14: TYPE
 752,15: __n
 752,18: VARIABLE
 
391 NAME TYPE 
 752,8: size_t
 752,14: TYPE
 
26 TYPE 
 752,14: TYPE
 
298 NAME VARIABLE 
 752,15: __n
 752,18: VARIABLE
 
65 VARIABLE 
 752,18: VARIABLE
 
187 ) 
 752,18: )
 
60 ; 
 752,21: ;
 
23 extern 
 755,1: extern
 
8 void 
 755,8: void
 
5 * option_type_qualifier_list option_pointer 
 755,13: *
 
64 NAME VARIABLE 
 755,14: memmove
 755,21: VARIABLE
 
65 VARIABLE 
 755,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 755,22: (
 755,23: void
 755,28: *
 755,29: __dest
 755,35: VARIABLE
 755,35: ,
 755,37: const
 755,43: void
 755,48: *
 755,49: __src
 755,54: VARIABLE
 755,54: ,
 755,56: size_t
 755,62: TYPE
 755,63: __n
 755,66: VARIABLE
 755,66: )
 
186 void 
 755,23: void
 
298 * option_type_qualifier_list option_pointer 
 755,28: *
 
386 NAME VARIABLE 
 755,29: __dest
 755,35: VARIABLE
 
65 VARIABLE 
 755,35: VARIABLE
 
300 , parameter_declaration 
 755,35: ,
 755,37: const
 755,43: void
 755,48: *
 755,49: __src
 755,54: VARIABLE
 
391 const 
 755,37: const
 
103 void 
 755,43: void
 
298 * option_type_qualifier_list option_pointer 
 755,48: *
 
386 NAME VARIABLE 
 755,49: __src
 755,54: VARIABLE
 
65 VARIABLE 
 755,54: VARIABLE
 
300 , parameter_declaration 
 755,54: ,
 755,56: size_t
 755,62: TYPE
 755,63: __n
 755,66: VARIABLE
 
391 NAME TYPE 
 755,56: size_t
 755,62: TYPE
 
26 TYPE 
 755,62: TYPE
 
298 NAME VARIABLE 
 755,63: __n
 755,66: VARIABLE
 
65 VARIABLE 
 755,66: VARIABLE
 
187 ) 
 755,66: )
 
60 ; 
 756,7: ;
 
23 extern 
 762,1: extern
 
8 void 
 762,8: void
 
5 * option_type_qualifier_list option_pointer 
 762,13: *
 
64 NAME VARIABLE 
 762,14: memccpy
 762,21: VARIABLE
 
65 VARIABLE 
 762,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 762,22: (
 762,23: void
 762,28: *
 762,30: __dest
 762,36: VARIABLE
 762,36: ,
 762,38: const
 762,44: void
 762,49: *
 762,51: __src
 762,56: VARIABLE
 762,56: ,
 763,9: int
 763,13: __c
 763,16: VARIABLE
 763,16: ,
 763,18: size_t
 763,24: TYPE
 763,25: __n
 763,28: VARIABLE
 763,28: )
 
186 void 
 762,23: void
 
298 * option_type_qualifier_list option_pointer 
 762,28: *
 
386 NAME VARIABLE 
 762,30: __dest
 762,36: VARIABLE
 
65 VARIABLE 
 762,36: VARIABLE
 
300 , parameter_declaration 
 762,36: ,
 762,38: const
 762,44: void
 762,49: *
 762,51: __src
 762,56: VARIABLE
 
391 const 
 762,38: const
 
103 void 
 762,44: void
 
298 * option_type_qualifier_list option_pointer 
 762,49: *
 
386 NAME VARIABLE 
 762,51: __src
 762,56: VARIABLE
 
65 VARIABLE 
 762,56: VARIABLE
 
300 , parameter_declaration 
 762,56: ,
 763,9: int
 763,13: __c
 763,16: VARIABLE
 
391 int 
 763,9: int
 
298 NAME VARIABLE 
 763,13: __c
 763,16: VARIABLE
 
65 VARIABLE 
 763,16: VARIABLE
 
300 , parameter_declaration 
 763,16: ,
 763,18: size_t
 763,24: TYPE
 763,25: __n
 763,28: VARIABLE
 
391 NAME TYPE 
 763,18: size_t
 763,24: TYPE
 
26 TYPE 
 763,24: TYPE
 
298 NAME VARIABLE 
 763,25: __n
 763,28: VARIABLE
 
65 VARIABLE 
 763,28: VARIABLE
 
187 ) 
 763,28: )
 
60 ; 
 764,7: ;
 
23 extern 
 769,1: extern
 
8 void 
 769,8: void
 
5 * option_type_qualifier_list option_pointer 
 769,13: *
 
64 NAME VARIABLE 
 769,14: memset
 769,20: VARIABLE
 
65 VARIABLE 
 769,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 769,21: (
 769,22: void
 769,27: *
 769,28: __s
 769,31: VARIABLE
 769,31: ,
 769,33: int
 769,37: __c
 769,40: VARIABLE
 769,40: ,
 769,42: size_t
 769,48: TYPE
 769,49: __n
 769,52: VARIABLE
 769,52: )
 
186 void 
 769,22: void
 
298 * option_type_qualifier_list option_pointer 
 769,27: *
 
386 NAME VARIABLE 
 769,28: __s
 769,31: VARIABLE
 
65 VARIABLE 
 769,31: VARIABLE
 
300 , parameter_declaration 
 769,31: ,
 769,33: int
 769,37: __c
 769,40: VARIABLE
 
391 int 
 769,33: int
 
298 NAME VARIABLE 
 769,37: __c
 769,40: VARIABLE
 
65 VARIABLE 
 769,40: VARIABLE
 
300 , parameter_declaration 
 769,40: ,
 769,42: size_t
 769,48: TYPE
 769,49: __n
 769,52: VARIABLE
 
391 NAME TYPE 
 769,42: size_t
 769,48: TYPE
 
26 TYPE 
 769,48: TYPE
 
298 NAME VARIABLE 
 769,49: __n
 769,52: VARIABLE
 
65 VARIABLE 
 769,52: VARIABLE
 
187 ) 
 769,52: )
 
60 ; 
 769,55: ;
 
23 extern 
 772,1: extern
 
8 int 
 772,8: int
 
5 NAME VARIABLE 
 772,12: memcmp
 772,18: VARIABLE
 
65 VARIABLE 
 772,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 772,19: (
 772,20: const
 772,26: void
 772,31: *
 772,32: __s1
 772,36: VARIABLE
 772,36: ,
 772,38: const
 772,44: void
 772,49: *
 772,50: __s2
 772,54: VARIABLE
 772,54: ,
 772,56: size_t
 772,62: TYPE
 772,63: __n
 772,66: VARIABLE
 772,66: )
 
186 const 
 772,20: const
 
103 void 
 772,26: void
 
298 * option_type_qualifier_list option_pointer 
 772,31: *
 
386 NAME VARIABLE 
 772,32: __s1
 772,36: VARIABLE
 
65 VARIABLE 
 772,36: VARIABLE
 
300 , parameter_declaration 
 772,36: ,
 772,38: const
 772,44: void
 772,49: *
 772,50: __s2
 772,54: VARIABLE
 
391 const 
 772,38: const
 
103 void 
 772,44: void
 
298 * option_type_qualifier_list option_pointer 
 772,49: *
 
386 NAME VARIABLE 
 772,50: __s2
 772,54: VARIABLE
 
65 VARIABLE 
 772,54: VARIABLE
 
300 , parameter_declaration 
 772,54: ,
 772,56: size_t
 772,62: TYPE
 772,63: __n
 772,66: VARIABLE
 
391 NAME TYPE 
 772,56: size_t
 772,62: TYPE
 
26 TYPE 
 772,62: TYPE
 
298 NAME VARIABLE 
 772,63: __n
 772,66: VARIABLE
 
65 VARIABLE 
 772,66: VARIABLE
 
187 ) 
 772,66: )
 
60 ; 
 773,8: ;
 
23 extern 
 775,1: extern
 
8 int 
 775,8: int
 
5 NAME VARIABLE 
 775,12: __memcmpeq
 775,22: VARIABLE
 
65 VARIABLE 
 775,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 775,23: (
 775,24: const
 775,30: void
 775,35: *
 775,36: __s1
 775,40: VARIABLE
 775,40: ,
 775,42: const
 775,48: void
 775,53: *
 775,54: __s2
 775,58: VARIABLE
 775,58: ,
 775,60: size_t
 775,66: TYPE
 775,67: __n
 775,70: VARIABLE
 775,70: )
 
186 const 
 775,24: const
 
103 void 
 775,30: void
 
298 * option_type_qualifier_list option_pointer 
 775,35: *
 
386 NAME VARIABLE 
 775,36: __s1
 775,40: VARIABLE
 
65 VARIABLE 
 775,40: VARIABLE
 
300 , parameter_declaration 
 775,40: ,
 775,42: const
 775,48: void
 775,53: *
 775,54: __s2
 775,58: VARIABLE
 
391 const 
 775,42: const
 
103 void 
 775,48: void
 
298 * option_type_qualifier_list option_pointer 
 775,53: *
 
386 NAME VARIABLE 
 775,54: __s2
 775,58: VARIABLE
 
65 VARIABLE 
 775,58: VARIABLE
 
300 , parameter_declaration 
 775,58: ,
 775,60: size_t
 775,66: TYPE
 775,67: __n
 775,70: VARIABLE
 
391 NAME TYPE 
 775,60: size_t
 775,66: TYPE
 
26 TYPE 
 775,66: TYPE
 
298 NAME VARIABLE 
 775,67: __n
 775,70: VARIABLE
 
65 VARIABLE 
 775,70: VARIABLE
 
187 ) 
 775,70: )
 
60 ; 
 776,8: ;
 
23 extern 
 778,1: extern
 
8 void 
 778,8: void
 
5 * option_type_qualifier_list option_pointer 
 778,13: *
 
64 NAME VARIABLE 
 778,14: memchr
 778,20: VARIABLE
 
65 VARIABLE 
 778,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 778,21: (
 778,22: const
 778,28: void
 778,33: *
 778,34: __s
 778,37: VARIABLE
 778,37: ,
 778,39: int
 778,43: __c
 778,46: VARIABLE
 778,46: ,
 778,48: size_t
 778,54: TYPE
 778,55: __n
 778,58: VARIABLE
 778,58: )
 
186 const 
 778,22: const
 
103 void 
 778,28: void
 
298 * option_type_qualifier_list option_pointer 
 778,33: *
 
386 NAME VARIABLE 
 778,34: __s
 778,37: VARIABLE
 
65 VARIABLE 
 778,37: VARIABLE
 
300 , parameter_declaration 
 778,37: ,
 778,39: int
 778,43: __c
 778,46: VARIABLE
 
391 int 
 778,39: int
 
298 NAME VARIABLE 
 778,43: __c
 778,46: VARIABLE
 
65 VARIABLE 
 778,46: VARIABLE
 
300 , parameter_declaration 
 778,46: ,
 778,48: size_t
 778,54: TYPE
 778,55: __n
 778,58: VARIABLE
 
391 NAME TYPE 
 778,48: size_t
 778,54: TYPE
 
26 TYPE 
 778,54: TYPE
 
298 NAME VARIABLE 
 778,55: __n
 778,58: VARIABLE
 
65 VARIABLE 
 778,58: VARIABLE
 
187 ) 
 778,58: )
 
60 ; 
 779,9: ;
 
23 extern 
 781,1: extern
 
8 char 
 781,8: char
 
5 * option_type_qualifier_list option_pointer 
 781,13: *
 
64 NAME VARIABLE 
 781,14: strcpy
 781,20: VARIABLE
 
65 VARIABLE 
 781,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 781,21: (
 781,22: char
 781,27: *
 781,29: __dest
 781,35: VARIABLE
 781,35: ,
 781,37: const
 781,43: char
 781,48: *
 781,50: __src
 781,55: VARIABLE
 781,55: )
 
186 char 
 781,22: char
 
298 * option_type_qualifier_list option_pointer 
 781,27: *
 
386 NAME VARIABLE 
 781,29: __dest
 781,35: VARIABLE
 
65 VARIABLE 
 781,35: VARIABLE
 
300 , parameter_declaration 
 781,35: ,
 781,37: const
 781,43: char
 781,48: *
 781,50: __src
 781,55: VARIABLE
 
391 const 
 781,37: const
 
103 char 
 781,43: char
 
298 * option_type_qualifier_list option_pointer 
 781,48: *
 
386 NAME VARIABLE 
 781,50: __src
 781,55: VARIABLE
 
65 VARIABLE 
 781,55: VARIABLE
 
187 ) 
 781,55: )
 
60 ; 
 782,7: ;
 
23 extern 
 784,1: extern
 
8 char 
 784,8: char
 
5 * option_type_qualifier_list option_pointer 
 784,13: *
 
64 NAME VARIABLE 
 784,14: strncpy
 784,21: VARIABLE
 
65 VARIABLE 
 784,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 784,22: (
 784,23: char
 784,28: *
 784,30: __dest
 784,36: VARIABLE
 784,36: ,
 785,9: const
 785,15: char
 785,20: *
 785,22: __src
 785,27: VARIABLE
 785,27: ,
 785,29: size_t
 785,35: TYPE
 785,36: __n
 785,39: VARIABLE
 785,39: )
 
186 char 
 784,23: char
 
298 * option_type_qualifier_list option_pointer 
 784,28: *
 
386 NAME VARIABLE 
 784,30: __dest
 784,36: VARIABLE
 
65 VARIABLE 
 784,36: VARIABLE
 
300 , parameter_declaration 
 784,36: ,
 785,9: const
 785,15: char
 785,20: *
 785,22: __src
 785,27: VARIABLE
 
391 const 
 785,9: const
 
103 char 
 785,15: char
 
298 * option_type_qualifier_list option_pointer 
 785,20: *
 
386 NAME VARIABLE 
 785,22: __src
 785,27: VARIABLE
 
65 VARIABLE 
 785,27: VARIABLE
 
300 , parameter_declaration 
 785,27: ,
 785,29: size_t
 785,35: TYPE
 785,36: __n
 785,39: VARIABLE
 
391 NAME TYPE 
 785,29: size_t
 785,35: TYPE
 
26 TYPE 
 785,35: TYPE
 
298 NAME VARIABLE 
 785,36: __n
 785,39: VARIABLE
 
65 VARIABLE 
 785,39: VARIABLE
 
187 ) 
 785,39: )
 
60 ; 
 786,7: ;
 
23 extern 
 789,1: extern
 
8 char 
 789,8: char
 
5 * option_type_qualifier_list option_pointer 
 789,13: *
 
64 NAME VARIABLE 
 789,14: strcat
 789,20: VARIABLE
 
65 VARIABLE 
 789,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 789,21: (
 789,22: char
 789,27: *
 789,29: __dest
 789,35: VARIABLE
 789,35: ,
 789,37: const
 789,43: char
 789,48: *
 789,50: __src
 789,55: VARIABLE
 789,55: )
 
186 char 
 789,22: char
 
298 * option_type_qualifier_list option_pointer 
 789,27: *
 
386 NAME VARIABLE 
 789,29: __dest
 789,35: VARIABLE
 
65 VARIABLE 
 789,35: VARIABLE
 
300 , parameter_declaration 
 789,35: ,
 789,37: const
 789,43: char
 789,48: *
 789,50: __src
 789,55: VARIABLE
 
391 const 
 789,37: const
 
103 char 
 789,43: char
 
298 * option_type_qualifier_list option_pointer 
 789,48: *
 
386 NAME VARIABLE 
 789,50: __src
 789,55: VARIABLE
 
65 VARIABLE 
 789,55: VARIABLE
 
187 ) 
 789,55: )
 
60 ; 
 790,7: ;
 
23 extern 
 792,1: extern
 
8 char 
 792,8: char
 
5 * option_type_qualifier_list option_pointer 
 792,13: *
 
64 NAME VARIABLE 
 792,14: strncat
 792,21: VARIABLE
 
65 VARIABLE 
 792,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 792,22: (
 792,23: char
 792,28: *
 792,30: __dest
 792,36: VARIABLE
 792,36: ,
 792,38: const
 792,44: char
 792,49: *
 792,51: __src
 792,56: VARIABLE
 792,56: ,
 793,9: size_t
 793,15: TYPE
 793,16: __n
 793,19: VARIABLE
 793,19: )
 
186 char 
 792,23: char
 
298 * option_type_qualifier_list option_pointer 
 792,28: *
 
386 NAME VARIABLE 
 792,30: __dest
 792,36: VARIABLE
 
65 VARIABLE 
 792,36: VARIABLE
 
300 , parameter_declaration 
 792,36: ,
 792,38: const
 792,44: char
 792,49: *
 792,51: __src
 792,56: VARIABLE
 
391 const 
 792,38: const
 
103 char 
 792,44: char
 
298 * option_type_qualifier_list option_pointer 
 792,49: *
 
386 NAME VARIABLE 
 792,51: __src
 792,56: VARIABLE
 
65 VARIABLE 
 792,56: VARIABLE
 
300 , parameter_declaration 
 792,56: ,
 793,9: size_t
 793,15: TYPE
 793,16: __n
 793,19: VARIABLE
 
391 NAME TYPE 
 793,9: size_t
 793,15: TYPE
 
26 TYPE 
 793,15: TYPE
 
298 NAME VARIABLE 
 793,16: __n
 793,19: VARIABLE
 
65 VARIABLE 
 793,19: VARIABLE
 
187 ) 
 793,19: )
 
60 ; 
 793,22: ;
 
23 extern 
 796,1: extern
 
8 int 
 796,8: int
 
5 NAME VARIABLE 
 796,12: strcmp
 796,18: VARIABLE
 
65 VARIABLE 
 796,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 796,19: (
 796,20: const
 796,26: char
 796,31: *
 796,32: __s1
 796,36: VARIABLE
 796,36: ,
 796,38: const
 796,44: char
 796,49: *
 796,50: __s2
 796,54: VARIABLE
 796,54: )
 
186 const 
 796,20: const
 
103 char 
 796,26: char
 
298 * option_type_qualifier_list option_pointer 
 796,31: *
 
386 NAME VARIABLE 
 796,32: __s1
 796,36: VARIABLE
 
65 VARIABLE 
 796,36: VARIABLE
 
300 , parameter_declaration 
 796,36: ,
 796,38: const
 796,44: char
 796,49: *
 796,50: __s2
 796,54: VARIABLE
 
391 const 
 796,38: const
 
103 char 
 796,44: char
 
298 * option_type_qualifier_list option_pointer 
 796,49: *
 
386 NAME VARIABLE 
 796,50: __s2
 796,54: VARIABLE
 
65 VARIABLE 
 796,54: VARIABLE
 
187 ) 
 796,54: )
 
60 ; 
 797,8: ;
 
23 extern 
 799,1: extern
 
8 int 
 799,8: int
 
5 NAME VARIABLE 
 799,12: strncmp
 799,19: VARIABLE
 
65 VARIABLE 
 799,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 799,20: (
 799,21: const
 799,27: char
 799,32: *
 799,33: __s1
 799,37: VARIABLE
 799,37: ,
 799,39: const
 799,45: char
 799,50: *
 799,51: __s2
 799,55: VARIABLE
 799,55: ,
 799,57: size_t
 799,63: TYPE
 799,64: __n
 799,67: VARIABLE
 799,67: )
 
186 const 
 799,21: const
 
103 char 
 799,27: char
 
298 * option_type_qualifier_list option_pointer 
 799,32: *
 
386 NAME VARIABLE 
 799,33: __s1
 799,37: VARIABLE
 
65 VARIABLE 
 799,37: VARIABLE
 
300 , parameter_declaration 
 799,37: ,
 799,39: const
 799,45: char
 799,50: *
 799,51: __s2
 799,55: VARIABLE
 
391 const 
 799,39: const
 
103 char 
 799,45: char
 
298 * option_type_qualifier_list option_pointer 
 799,50: *
 
386 NAME VARIABLE 
 799,51: __s2
 799,55: VARIABLE
 
65 VARIABLE 
 799,55: VARIABLE
 
300 , parameter_declaration 
 799,55: ,
 799,57: size_t
 799,63: TYPE
 799,64: __n
 799,67: VARIABLE
 
391 NAME TYPE 
 799,57: size_t
 799,63: TYPE
 
26 TYPE 
 799,63: TYPE
 
298 NAME VARIABLE 
 799,64: __n
 799,67: VARIABLE
 
65 VARIABLE 
 799,67: VARIABLE
 
187 ) 
 799,67: )
 
60 ; 
 800,8: ;
 
23 extern 
 803,1: extern
 
8 int 
 803,8: int
 
5 NAME VARIABLE 
 803,12: strcoll
 803,19: VARIABLE
 
65 VARIABLE 
 803,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 803,20: (
 803,21: const
 803,27: char
 803,32: *
 803,33: __s1
 803,37: VARIABLE
 803,37: ,
 803,39: const
 803,45: char
 803,50: *
 803,51: __s2
 803,55: VARIABLE
 803,55: )
 
186 const 
 803,21: const
 
103 char 
 803,27: char
 
298 * option_type_qualifier_list option_pointer 
 803,32: *
 
386 NAME VARIABLE 
 803,33: __s1
 803,37: VARIABLE
 
65 VARIABLE 
 803,37: VARIABLE
 
300 , parameter_declaration 
 803,37: ,
 803,39: const
 803,45: char
 803,50: *
 803,51: __s2
 803,55: VARIABLE
 
391 const 
 803,39: const
 
103 char 
 803,45: char
 
298 * option_type_qualifier_list option_pointer 
 803,50: *
 
386 NAME VARIABLE 
 803,51: __s2
 803,55: VARIABLE
 
65 VARIABLE 
 803,55: VARIABLE
 
187 ) 
 803,55: )
 
60 ; 
 804,8: ;
 
23 extern 
 806,1: extern
 
8 NAME TYPE 
 806,8: size_t
 806,14: TYPE
 
26 TYPE 
 806,14: TYPE
 
5 NAME VARIABLE 
 806,15: strxfrm
 806,22: VARIABLE
 
65 VARIABLE 
 806,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 806,23: (
 806,24: char
 806,29: *
 806,31: __dest
 806,37: VARIABLE
 806,37: ,
 807,10: const
 807,16: char
 807,21: *
 807,23: __src
 807,28: VARIABLE
 807,28: ,
 807,30: size_t
 807,36: TYPE
 807,37: __n
 807,40: VARIABLE
 807,40: )
 
186 char 
 806,24: char
 
298 * option_type_qualifier_list option_pointer 
 806,29: *
 
386 NAME VARIABLE 
 806,31: __dest
 806,37: VARIABLE
 
65 VARIABLE 
 806,37: VARIABLE
 
300 , parameter_declaration 
 806,37: ,
 807,10: const
 807,16: char
 807,21: *
 807,23: __src
 807,28: VARIABLE
 
391 const 
 807,10: const
 
103 char 
 807,16: char
 
298 * option_type_qualifier_list option_pointer 
 807,21: *
 
386 NAME VARIABLE 
 807,23: __src
 807,28: VARIABLE
 
65 VARIABLE 
 807,28: VARIABLE
 
300 , parameter_declaration 
 807,28: ,
 807,30: size_t
 807,36: TYPE
 807,37: __n
 807,40: VARIABLE
 
391 NAME TYPE 
 807,30: size_t
 807,36: TYPE
 
26 TYPE 
 807,36: TYPE
 
298 NAME VARIABLE 
 807,37: __n
 807,40: VARIABLE
 
65 VARIABLE 
 807,40: VARIABLE
 
187 ) 
 807,40: )
 
60 ; 
 808,7: ;
 
23 struct 
 816,1: struct
 
22 NAME VARIABLE 
 816,8: __locale_struct
 816,23: VARIABLE
 
65 VARIABLE 
 816,23: VARIABLE
 
89 { struct_declaration_list } 
 817,1: {
 819,3: struct
 819,10: __locale_data
 819,23: VARIABLE
 819,24: *
 819,25: __locales
 819,34: VARIABLE
 819,34: [
 819,35: 13
 819,37: ]
 819,38: ;
 822,3: const
 822,9: unsigned
 822,18: short
 822,24: int
 822,28: *
 822,29: __ctype_b
 822,38: VARIABLE
 822,38: ;
 823,3: const
 823,9: int
 823,13: *
 823,14: __ctype_tolower
 823,29: VARIABLE
 823,29: ;
 824,3: const
 824,9: int
 824,13: *
 824,14: __ctype_toupper
 824,29: VARIABLE
 824,29: ;
 827,3: const
 827,9: char
 827,14: *
 827,15: __names
 827,22: VARIABLE
 827,22: [
 827,23: 13
 827,25: ]
 827,26: ;
 828,1: }
 
126 struct 
 819,3: struct
 
22 NAME VARIABLE 
 819,10: __locale_data
 819,23: VARIABLE
 
65 VARIABLE 
 819,23: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 819,24: *
 
64 NAME VARIABLE 
 819,25: __locales
 819,34: VARIABLE
 
65 VARIABLE 
 819,34: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 819,34: [
 819,35: 13
 819,37: ]
 
188 CONSTANT 
 819,35: 13
 
305 ] 
 819,37: ]
 
313 ; 
 819,38: ;
 
198 const 
 822,3: const
 
133 unsigned 
 822,9: unsigned
 
208 short 
 822,18: short
 
208 int 
 822,24: int
 
200 * option_type_qualifier_list option_pointer 
 822,28: *
 
64 NAME VARIABLE 
 822,29: __ctype_b
 822,38: VARIABLE
 
65 VARIABLE 
 822,38: VARIABLE
 
313 ; 
 822,38: ;
 
198 const 
 823,3: const
 
133 int 
 823,9: int
 
200 * option_type_qualifier_list option_pointer 
 823,13: *
 
64 NAME VARIABLE 
 823,14: __ctype_tolower
 823,29: VARIABLE
 
65 VARIABLE 
 823,29: VARIABLE
 
313 ; 
 823,29: ;
 
198 const 
 824,3: const
 
133 int 
 824,9: int
 
200 * option_type_qualifier_list option_pointer 
 824,13: *
 
64 NAME VARIABLE 
 824,14: __ctype_toupper
 824,29: VARIABLE
 
65 VARIABLE 
 824,29: VARIABLE
 
313 ; 
 824,29: ;
 
198 const 
 827,3: const
 
133 char 
 827,9: char
 
200 * option_type_qualifier_list option_pointer 
 827,14: *
 
64 NAME VARIABLE 
 827,15: __names
 827,22: VARIABLE
 
65 VARIABLE 
 827,22: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 827,22: [
 827,23: 13
 827,25: ]
 
188 CONSTANT 
 827,23: 13
 
305 ] 
 827,25: ]
 
313 ; 
 827,26: ;
 
198 } 
 828,1: }
 
60 ; 
 828,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 830,1: typedef
 830,9: struct
 830,16: __locale_struct
 830,31: VARIABLE
 
54 struct 
 830,9: struct
 
22 NAME VARIABLE 
 830,16: __locale_struct
 830,31: VARIABLE
 
65 VARIABLE 
 830,31: VARIABLE
 
6 * option_type_qualifier_list option_pointer 
 830,32: *
 
64 NAME VARIABLE 
 830,33: __locale_t
 830,43: VARIABLE
 
65 VARIABLE 
 830,43: VARIABLE
 
70 ; 
 830,43: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 833,1: typedef
 833,9: __locale_t
 833,19: TYPE
 
54 NAME TYPE 
 833,9: __locale_t
 833,19: TYPE
 
26 TYPE 
 833,19: TYPE
 
6 NAME VARIABLE 
 833,20: locale_t
 833,28: VARIABLE
 
65 VARIABLE 
 833,28: VARIABLE
 
70 ; 
 833,28: ;
 
23 extern 
 837,1: extern
 
8 int 
 837,8: int
 
5 NAME VARIABLE 
 837,12: strcoll_l
 837,21: VARIABLE
 
65 VARIABLE 
 837,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 837,22: (
 837,23: const
 837,29: char
 837,34: *
 837,35: __s1
 837,39: VARIABLE
 837,39: ,
 837,41: const
 837,47: char
 837,52: *
 837,53: __s2
 837,57: VARIABLE
 837,57: ,
 837,59: locale_t
 837,67: TYPE
 837,68: __l
 837,71: VARIABLE
 837,71: )
 
186 const 
 837,23: const
 
103 char 
 837,29: char
 
298 * option_type_qualifier_list option_pointer 
 837,34: *
 
386 NAME VARIABLE 
 837,35: __s1
 837,39: VARIABLE
 
65 VARIABLE 
 837,39: VARIABLE
 
300 , parameter_declaration 
 837,39: ,
 837,41: const
 837,47: char
 837,52: *
 837,53: __s2
 837,57: VARIABLE
 
391 const 
 837,41: const
 
103 char 
 837,47: char
 
298 * option_type_qualifier_list option_pointer 
 837,52: *
 
386 NAME VARIABLE 
 837,53: __s2
 837,57: VARIABLE
 
65 VARIABLE 
 837,57: VARIABLE
 
300 , parameter_declaration 
 837,57: ,
 837,59: locale_t
 837,67: TYPE
 837,68: __l
 837,71: VARIABLE
 
391 NAME TYPE 
 837,59: locale_t
 837,67: TYPE
 
26 TYPE 
 837,67: TYPE
 
298 NAME VARIABLE 
 837,68: __l
 837,71: VARIABLE
 
65 VARIABLE 
 837,71: VARIABLE
 
187 ) 
 837,71: )
 
60 ; 
 838,8: ;
 
23 extern 
 841,1: extern
 
8 NAME TYPE 
 841,8: size_t
 841,14: TYPE
 
26 TYPE 
 841,14: TYPE
 
5 NAME VARIABLE 
 841,15: strxfrm_l
 841,24: VARIABLE
 
65 VARIABLE 
 841,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 841,25: (
 841,26: char
 841,31: *
 841,32: __dest
 841,38: VARIABLE
 841,38: ,
 841,40: const
 841,46: char
 841,51: *
 841,52: __src
 841,57: VARIABLE
 841,57: ,
 841,59: size_t
 841,65: TYPE
 841,66: __n
 841,69: VARIABLE
 841,69: ,
 842,5: locale_t
 842,13: TYPE
 842,14: __l
 842,17: VARIABLE
 842,17: )
 
186 char 
 841,26: char
 
298 * option_type_qualifier_list option_pointer 
 841,31: *
 
386 NAME VARIABLE 
 841,32: __dest
 841,38: VARIABLE
 
65 VARIABLE 
 841,38: VARIABLE
 
300 , parameter_declaration 
 841,38: ,
 841,40: const
 841,46: char
 841,51: *
 841,52: __src
 841,57: VARIABLE
 
391 const 
 841,40: const
 
103 char 
 841,46: char
 
298 * option_type_qualifier_list option_pointer 
 841,51: *
 
386 NAME VARIABLE 
 841,52: __src
 841,57: VARIABLE
 
65 VARIABLE 
 841,57: VARIABLE
 
300 , parameter_declaration 
 841,57: ,
 841,59: size_t
 841,65: TYPE
 841,66: __n
 841,69: VARIABLE
 
391 NAME TYPE 
 841,59: size_t
 841,65: TYPE
 
26 TYPE 
 841,65: TYPE
 
298 NAME VARIABLE 
 841,66: __n
 841,69: VARIABLE
 
65 VARIABLE 
 841,69: VARIABLE
 
300 , parameter_declaration 
 841,69: ,
 842,5: locale_t
 842,13: TYPE
 842,14: __l
 842,17: VARIABLE
 
391 NAME TYPE 
 842,5: locale_t
 842,13: TYPE
 
26 TYPE 
 842,13: TYPE
 
298 NAME VARIABLE 
 842,14: __l
 842,17: VARIABLE
 
65 VARIABLE 
 842,17: VARIABLE
 
187 ) 
 842,17: )
 
60 ; 
 843,6: ;
 
23 extern 
 849,1: extern
 
8 char 
 849,8: char
 
5 * option_type_qualifier_list option_pointer 
 849,13: *
 
64 NAME VARIABLE 
 849,14: strdup
 849,20: VARIABLE
 
65 VARIABLE 
 849,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 849,21: (
 849,22: const
 849,28: char
 849,33: *
 849,34: __s
 849,37: VARIABLE
 849,37: )
 
186 const 
 849,22: const
 
103 char 
 849,28: char
 
298 * option_type_qualifier_list option_pointer 
 849,33: *
 
386 NAME VARIABLE 
 849,34: __s
 849,37: VARIABLE
 
65 VARIABLE 
 849,37: VARIABLE
 
187 ) 
 849,37: )
 
60 ; 
 850,8: ;
 
23 extern 
 857,1: extern
 
8 char 
 857,8: char
 
5 * option_type_qualifier_list option_pointer 
 857,13: *
 
64 NAME VARIABLE 
 857,14: strndup
 857,21: VARIABLE
 
65 VARIABLE 
 857,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 857,22: (
 857,23: const
 857,29: char
 857,34: *
 857,35: __string
 857,43: VARIABLE
 857,43: ,
 857,45: size_t
 857,51: TYPE
 857,52: __n
 857,55: VARIABLE
 857,55: )
 
186 const 
 857,23: const
 
103 char 
 857,29: char
 
298 * option_type_qualifier_list option_pointer 
 857,34: *
 
386 NAME VARIABLE 
 857,35: __string
 857,43: VARIABLE
 
65 VARIABLE 
 857,43: VARIABLE
 
300 , parameter_declaration 
 857,43: ,
 857,45: size_t
 857,51: TYPE
 857,52: __n
 857,55: VARIABLE
 
391 NAME TYPE 
 857,45: size_t
 857,51: TYPE
 
26 TYPE 
 857,51: TYPE
 
298 NAME VARIABLE 
 857,52: __n
 857,55: VARIABLE
 
65 VARIABLE 
 857,55: VARIABLE
 
187 ) 
 857,55: )
 
60 ; 
 858,8: ;
 
23 extern 
 860,1: extern
 
8 char 
 860,8: char
 
5 * option_type_qualifier_list option_pointer 
 860,13: *
 
64 NAME VARIABLE 
 860,14: strchr
 860,20: VARIABLE
 
65 VARIABLE 
 860,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 860,21: (
 860,22: const
 860,28: char
 860,33: *
 860,34: __s
 860,37: VARIABLE
 860,37: ,
 860,39: int
 860,43: __c
 860,46: VARIABLE
 860,46: )
 
186 const 
 860,22: const
 
103 char 
 860,28: char
 
298 * option_type_qualifier_list option_pointer 
 860,33: *
 
386 NAME VARIABLE 
 860,34: __s
 860,37: VARIABLE
 
65 VARIABLE 
 860,37: VARIABLE
 
300 , parameter_declaration 
 860,37: ,
 860,39: int
 860,43: __c
 860,46: VARIABLE
 
391 int 
 860,39: int
 
298 NAME VARIABLE 
 860,43: __c
 860,46: VARIABLE
 
65 VARIABLE 
 860,46: VARIABLE
 
187 ) 
 860,46: )
 
60 ; 
 861,8: ;
 
23 extern 
 863,1: extern
 
8 char 
 863,8: char
 
5 * option_type_qualifier_list option_pointer 
 863,13: *
 
64 NAME VARIABLE 
 863,14: strrchr
 863,21: VARIABLE
 
65 VARIABLE 
 863,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 863,22: (
 863,23: const
 863,29: char
 863,34: *
 863,35: __s
 863,38: VARIABLE
 863,38: ,
 863,40: int
 863,44: __c
 863,47: VARIABLE
 863,47: )
 
186 const 
 863,23: const
 
103 char 
 863,29: char
 
298 * option_type_qualifier_list option_pointer 
 863,34: *
 
386 NAME VARIABLE 
 863,35: __s
 863,38: VARIABLE
 
65 VARIABLE 
 863,38: VARIABLE
 
300 , parameter_declaration 
 863,38: ,
 863,40: int
 863,44: __c
 863,47: VARIABLE
 
391 int 
 863,40: int
 
298 NAME VARIABLE 
 863,44: __c
 863,47: VARIABLE
 
65 VARIABLE 
 863,47: VARIABLE
 
187 ) 
 863,47: )
 
60 ; 
 864,8: ;
 
23 extern 
 866,1: extern
 
8 NAME TYPE 
 866,8: size_t
 866,14: TYPE
 
26 TYPE 
 866,14: TYPE
 
5 NAME VARIABLE 
 866,15: strcspn
 866,22: VARIABLE
 
65 VARIABLE 
 866,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 866,23: (
 866,24: const
 866,30: char
 866,35: *
 866,36: __s
 866,39: VARIABLE
 866,39: ,
 866,41: const
 866,47: char
 866,52: *
 866,53: __reject
 866,61: VARIABLE
 866,61: )
 
186 const 
 866,24: const
 
103 char 
 866,30: char
 
298 * option_type_qualifier_list option_pointer 
 866,35: *
 
386 NAME VARIABLE 
 866,36: __s
 866,39: VARIABLE
 
65 VARIABLE 
 866,39: VARIABLE
 
300 , parameter_declaration 
 866,39: ,
 866,41: const
 866,47: char
 866,52: *
 866,53: __reject
 866,61: VARIABLE
 
391 const 
 866,41: const
 
103 char 
 866,47: char
 
298 * option_type_qualifier_list option_pointer 
 866,52: *
 
386 NAME VARIABLE 
 866,53: __reject
 866,61: VARIABLE
 
65 VARIABLE 
 866,61: VARIABLE
 
187 ) 
 866,61: )
 
60 ; 
 867,8: ;
 
23 extern 
 870,1: extern
 
8 NAME TYPE 
 870,8: size_t
 870,14: TYPE
 
26 TYPE 
 870,14: TYPE
 
5 NAME VARIABLE 
 870,15: strspn
 870,21: VARIABLE
 
65 VARIABLE 
 870,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 870,22: (
 870,23: const
 870,29: char
 870,34: *
 870,35: __s
 870,38: VARIABLE
 870,38: ,
 870,40: const
 870,46: char
 870,51: *
 870,52: __accept
 870,60: VARIABLE
 870,60: )
 
186 const 
 870,23: const
 
103 char 
 870,29: char
 
298 * option_type_qualifier_list option_pointer 
 870,34: *
 
386 NAME VARIABLE 
 870,35: __s
 870,38: VARIABLE
 
65 VARIABLE 
 870,38: VARIABLE
 
300 , parameter_declaration 
 870,38: ,
 870,40: const
 870,46: char
 870,51: *
 870,52: __accept
 870,60: VARIABLE
 
391 const 
 870,40: const
 
103 char 
 870,46: char
 
298 * option_type_qualifier_list option_pointer 
 870,51: *
 
386 NAME VARIABLE 
 870,52: __accept
 870,60: VARIABLE
 
65 VARIABLE 
 870,60: VARIABLE
 
187 ) 
 870,60: )
 
60 ; 
 871,8: ;
 
23 extern 
 873,1: extern
 
8 char 
 873,8: char
 
5 * option_type_qualifier_list option_pointer 
 873,13: *
 
64 NAME VARIABLE 
 873,14: strpbrk
 873,21: VARIABLE
 
65 VARIABLE 
 873,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 873,22: (
 873,23: const
 873,29: char
 873,34: *
 873,35: __s
 873,38: VARIABLE
 873,38: ,
 873,40: const
 873,46: char
 873,51: *
 873,52: __accept
 873,60: VARIABLE
 873,60: )
 
186 const 
 873,23: const
 
103 char 
 873,29: char
 
298 * option_type_qualifier_list option_pointer 
 873,34: *
 
386 NAME VARIABLE 
 873,35: __s
 873,38: VARIABLE
 
65 VARIABLE 
 873,38: VARIABLE
 
300 , parameter_declaration 
 873,38: ,
 873,40: const
 873,46: char
 873,51: *
 873,52: __accept
 873,60: VARIABLE
 
391 const 
 873,40: const
 
103 char 
 873,46: char
 
298 * option_type_qualifier_list option_pointer 
 873,51: *
 
386 NAME VARIABLE 
 873,52: __accept
 873,60: VARIABLE
 
65 VARIABLE 
 873,60: VARIABLE
 
187 ) 
 873,60: )
 
60 ; 
 874,8: ;
 
23 extern 
 876,1: extern
 
8 char 
 876,8: char
 
5 * option_type_qualifier_list option_pointer 
 876,13: *
 
64 NAME VARIABLE 
 876,14: strstr
 876,20: VARIABLE
 
65 VARIABLE 
 876,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 876,21: (
 876,22: const
 876,28: char
 876,33: *
 876,34: __haystack
 876,44: VARIABLE
 876,44: ,
 876,46: const
 876,52: char
 876,57: *
 876,58: __needle
 876,66: VARIABLE
 876,66: )
 
186 const 
 876,22: const
 
103 char 
 876,28: char
 
298 * option_type_qualifier_list option_pointer 
 876,33: *
 
386 NAME VARIABLE 
 876,34: __haystack
 876,44: VARIABLE
 
65 VARIABLE 
 876,44: VARIABLE
 
300 , parameter_declaration 
 876,44: ,
 876,46: const
 876,52: char
 876,57: *
 876,58: __needle
 876,66: VARIABLE
 
391 const 
 876,46: const
 
103 char 
 876,52: char
 
298 * option_type_qualifier_list option_pointer 
 876,57: *
 
386 NAME VARIABLE 
 876,58: __needle
 876,66: VARIABLE
 
65 VARIABLE 
 876,66: VARIABLE
 
187 ) 
 876,66: )
 
60 ; 
 877,8: ;
 
23 extern 
 882,1: extern
 
8 char 
 882,8: char
 
5 * option_type_qualifier_list option_pointer 
 882,13: *
 
64 NAME VARIABLE 
 882,14: strtok
 882,20: VARIABLE
 
65 VARIABLE 
 882,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 882,21: (
 882,22: char
 882,27: *
 882,29: __s
 882,32: VARIABLE
 882,32: ,
 882,34: const
 882,40: char
 882,45: *
 882,47: __delim
 882,54: VARIABLE
 882,54: )
 
186 char 
 882,22: char
 
298 * option_type_qualifier_list option_pointer 
 882,27: *
 
386 NAME VARIABLE 
 882,29: __s
 882,32: VARIABLE
 
65 VARIABLE 
 882,32: VARIABLE
 
300 , parameter_declaration 
 882,32: ,
 882,34: const
 882,40: char
 882,45: *
 882,47: __delim
 882,54: VARIABLE
 
391 const 
 882,34: const
 
103 char 
 882,40: char
 
298 * option_type_qualifier_list option_pointer 
 882,45: *
 
386 NAME VARIABLE 
 882,47: __delim
 882,54: VARIABLE
 
65 VARIABLE 
 882,54: VARIABLE
 
187 ) 
 882,54: )
 
60 ; 
 883,7: ;
 
23 extern 
 887,1: extern
 
8 char 
 887,8: char
 
5 * option_type_qualifier_list option_pointer 
 887,13: *
 
64 NAME VARIABLE 
 887,14: __strtok_r
 887,24: VARIABLE
 
65 VARIABLE 
 887,24: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 887,25: (
 887,26: char
 887,31: *
 887,33: __s
 887,36: VARIABLE
 887,36: ,
 888,5: const
 888,11: char
 888,16: *
 888,18: __delim
 888,25: VARIABLE
 888,25: ,
 889,5: char
 889,10: *
 889,11: *
 889,13: __save_ptr
 889,23: VARIABLE
 889,23: )
 
186 char 
 887,26: char
 
298 * option_type_qualifier_list option_pointer 
 887,31: *
 
386 NAME VARIABLE 
 887,33: __s
 887,36: VARIABLE
 
65 VARIABLE 
 887,36: VARIABLE
 
300 , parameter_declaration 
 887,36: ,
 888,5: const
 888,11: char
 888,16: *
 888,18: __delim
 888,25: VARIABLE
 
391 const 
 888,5: const
 
103 char 
 888,11: char
 
298 * option_type_qualifier_list option_pointer 
 888,16: *
 
386 NAME VARIABLE 
 888,18: __delim
 888,25: VARIABLE
 
65 VARIABLE 
 888,25: VARIABLE
 
300 , parameter_declaration 
 888,25: ,
 889,5: char
 889,10: *
 889,11: *
 889,13: __save_ptr
 889,23: VARIABLE
 
391 char 
 889,5: char
 
298 * option_type_qualifier_list option_pointer 
 889,10: *
 889,11: *
 
116 * option_type_qualifier_list option_pointer 
 889,11: *
 
386 NAME VARIABLE 
 889,13: __save_ptr
 889,23: VARIABLE
 
65 VARIABLE 
 889,23: VARIABLE
 
187 ) 
 889,23: )
 
60 ; 
 890,7: ;
 
23 extern 
 892,1: extern
 
8 char 
 892,8: char
 
5 * option_type_qualifier_list option_pointer 
 892,13: *
 
64 NAME VARIABLE 
 892,14: strtok_r
 892,22: VARIABLE
 
65 VARIABLE 
 892,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 892,23: (
 892,24: char
 892,29: *
 892,31: __s
 892,34: VARIABLE
 892,34: ,
 892,36: const
 892,42: char
 892,47: *
 892,49: __delim
 892,56: VARIABLE
 892,56: ,
 893,10: char
 893,15: *
 893,16: *
 893,18: __save_ptr
 893,28: VARIABLE
 893,28: )
 
186 char 
 892,24: char
 
298 * option_type_qualifier_list option_pointer 
 892,29: *
 
386 NAME VARIABLE 
 892,31: __s
 892,34: VARIABLE
 
65 VARIABLE 
 892,34: VARIABLE
 
300 , parameter_declaration 
 892,34: ,
 892,36: const
 892,42: char
 892,47: *
 892,49: __delim
 892,56: VARIABLE
 
391 const 
 892,36: const
 
103 char 
 892,42: char
 
298 * option_type_qualifier_list option_pointer 
 892,47: *
 
386 NAME VARIABLE 
 892,49: __delim
 892,56: VARIABLE
 
65 VARIABLE 
 892,56: VARIABLE
 
300 , parameter_declaration 
 892,56: ,
 893,10: char
 893,15: *
 893,16: *
 893,18: __save_ptr
 893,28: VARIABLE
 
391 char 
 893,10: char
 
298 * option_type_qualifier_list option_pointer 
 893,15: *
 893,16: *
 
116 * option_type_qualifier_list option_pointer 
 893,16: *
 
386 NAME VARIABLE 
 893,18: __save_ptr
 893,28: VARIABLE
 
65 VARIABLE 
 893,28: VARIABLE
 
187 ) 
 893,28: )
 
60 ; 
 894,7: ;
 
23 extern 
 896,1: extern
 
8 NAME TYPE 
 896,8: size_t
 896,14: TYPE
 
26 TYPE 
 896,14: TYPE
 
5 NAME VARIABLE 
 896,15: strlen
 896,21: VARIABLE
 
65 VARIABLE 
 896,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 896,22: (
 896,23: const
 896,29: char
 896,34: *
 896,35: __s
 896,38: VARIABLE
 896,38: )
 
186 const 
 896,23: const
 
103 char 
 896,29: char
 
298 * option_type_qualifier_list option_pointer 
 896,34: *
 
386 NAME VARIABLE 
 896,35: __s
 896,38: VARIABLE
 
65 VARIABLE 
 896,38: VARIABLE
 
187 ) 
 896,38: )
 
60 ; 
 897,8: ;
 
23 extern 
 902,1: extern
 
8 NAME TYPE 
 902,8: size_t
 902,14: TYPE
 
26 TYPE 
 902,14: TYPE
 
5 NAME VARIABLE 
 902,15: strnlen
 902,22: VARIABLE
 
65 VARIABLE 
 902,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 902,23: (
 902,24: const
 902,30: char
 902,35: *
 902,36: __string
 902,44: VARIABLE
 902,44: ,
 902,46: size_t
 902,52: TYPE
 902,53: __maxlen
 902,61: VARIABLE
 902,61: )
 
186 const 
 902,24: const
 
103 char 
 902,30: char
 
298 * option_type_qualifier_list option_pointer 
 902,35: *
 
386 NAME VARIABLE 
 902,36: __string
 902,44: VARIABLE
 
65 VARIABLE 
 902,44: VARIABLE
 
300 , parameter_declaration 
 902,44: ,
 902,46: size_t
 902,52: TYPE
 902,53: __maxlen
 902,61: VARIABLE
 
391 NAME TYPE 
 902,46: size_t
 902,52: TYPE
 
26 TYPE 
 902,52: TYPE
 
298 NAME VARIABLE 
 902,53: __maxlen
 902,61: VARIABLE
 
65 VARIABLE 
 902,61: VARIABLE
 
187 ) 
 902,61: )
 
60 ; 
 903,8: ;
 
23 extern 
 908,1: extern
 
8 char 
 908,8: char
 
5 * option_type_qualifier_list option_pointer 
 908,13: *
 
64 NAME VARIABLE 
 908,14: strerror
 908,22: VARIABLE
 
65 VARIABLE 
 908,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 908,23: (
 908,24: int
 908,28: __errnum
 908,36: VARIABLE
 908,36: )
 
186 int 
 908,24: int
 
298 NAME VARIABLE 
 908,28: __errnum
 908,36: VARIABLE
 
65 VARIABLE 
 908,36: VARIABLE
 
187 ) 
 908,36: )
 
60 ; 
 908,38: ;
 
23 extern 
 910,1: extern
 
8 int 
 910,8: int
 
5 NAME VARIABLE 
 910,12: strerror_r
 910,22: VARIABLE
 
65 VARIABLE 
 910,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 910,23: (
 910,24: int
 910,28: __errnum
 910,36: VARIABLE
 910,36: ,
 910,38: char
 910,43: *
 910,44: __buf
 910,49: VARIABLE
 910,49: ,
 910,51: size_t
 910,57: TYPE
 910,58: __buflen
 910,66: VARIABLE
 910,66: )
 
186 int 
 910,24: int
 
298 NAME VARIABLE 
 910,28: __errnum
 910,36: VARIABLE
 
65 VARIABLE 
 910,36: VARIABLE
 
300 , parameter_declaration 
 910,36: ,
 910,38: char
 910,43: *
 910,44: __buf
 910,49: VARIABLE
 
391 char 
 910,38: char
 
298 * option_type_qualifier_list option_pointer 
 910,43: *
 
386 NAME VARIABLE 
 910,44: __buf
 910,49: VARIABLE
 
65 VARIABLE 
 910,49: VARIABLE
 
300 , parameter_declaration 
 910,49: ,
 910,51: size_t
 910,57: TYPE
 910,58: __buflen
 910,66: VARIABLE
 
391 NAME TYPE 
 910,51: size_t
 910,57: TYPE
 
26 TYPE 
 910,57: TYPE
 
298 NAME VARIABLE 
 910,58: __buflen
 910,66: VARIABLE
 
65 VARIABLE 
 910,66: VARIABLE
 
187 ) 
 910,66: )
 
60 ; 
 913,5: ;
 
23 extern 
 915,1: extern
 
8 char 
 915,8: char
 
5 * option_type_qualifier_list option_pointer 
 915,13: *
 
64 NAME VARIABLE 
 915,14: strerror_l
 915,24: VARIABLE
 
65 VARIABLE 
 915,24: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 915,25: (
 915,26: int
 915,30: __errnum
 915,38: VARIABLE
 915,38: ,
 915,40: locale_t
 915,48: TYPE
 915,49: __l
 915,52: VARIABLE
 915,52: )
 
186 int 
 915,26: int
 
298 NAME VARIABLE 
 915,30: __errnum
 915,38: VARIABLE
 
65 VARIABLE 
 915,38: VARIABLE
 
300 , parameter_declaration 
 915,38: ,
 915,40: locale_t
 915,48: TYPE
 915,49: __l
 915,52: VARIABLE
 
391 NAME TYPE 
 915,40: locale_t
 915,48: TYPE
 
26 TYPE 
 915,48: TYPE
 
298 NAME VARIABLE 
 915,49: __l
 915,52: VARIABLE
 
65 VARIABLE 
 915,52: VARIABLE
 
187 ) 
 915,52: )
 
60 ; 
 915,54: ;
 
23 extern 
 933,1: extern
 
8 int 
 933,8: int
 
5 NAME VARIABLE 
 933,12: bcmp
 933,16: VARIABLE
 
65 VARIABLE 
 933,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 933,17: (
 933,18: const
 933,24: void
 933,29: *
 933,30: __s1
 933,34: VARIABLE
 933,34: ,
 933,36: const
 933,42: void
 933,47: *
 933,48: __s2
 933,52: VARIABLE
 933,52: ,
 933,54: size_t
 933,60: TYPE
 933,61: __n
 933,64: VARIABLE
 933,64: )
 
186 const 
 933,18: const
 
103 void 
 933,24: void
 
298 * option_type_qualifier_list option_pointer 
 933,29: *
 
386 NAME VARIABLE 
 933,30: __s1
 933,34: VARIABLE
 
65 VARIABLE 
 933,34: VARIABLE
 
300 , parameter_declaration 
 933,34: ,
 933,36: const
 933,42: void
 933,47: *
 933,48: __s2
 933,52: VARIABLE
 
391 const 
 933,36: const
 
103 void 
 933,42: void
 
298 * option_type_qualifier_list option_pointer 
 933,47: *
 
386 NAME VARIABLE 
 933,48: __s2
 933,52: VARIABLE
 
65 VARIABLE 
 933,52: VARIABLE
 
300 , parameter_declaration 
 933,52: ,
 933,54: size_t
 933,60: TYPE
 933,61: __n
 933,64: VARIABLE
 
391 NAME TYPE 
 933,54: size_t
 933,60: TYPE
 
26 TYPE 
 933,60: TYPE
 
298 NAME VARIABLE 
 933,61: __n
 933,64: VARIABLE
 
65 VARIABLE 
 933,64: VARIABLE
 
187 ) 
 933,64: )
 
60 ; 
 934,8: ;
 
23 extern 
 937,1: extern
 
8 void 
 937,8: void
 
5 NAME VARIABLE 
 937,13: bcopy
 937,18: VARIABLE
 
65 VARIABLE 
 937,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 937,19: (
 937,20: const
 937,26: void
 937,31: *
 937,32: __src
 937,37: VARIABLE
 937,37: ,
 937,39: void
 937,44: *
 937,45: __dest
 937,51: VARIABLE
 937,51: ,
 937,53: size_t
 937,59: TYPE
 937,60: __n
 937,63: VARIABLE
 937,63: )
 
186 const 
 937,20: const
 
103 void 
 937,26: void
 
298 * option_type_qualifier_list option_pointer 
 937,31: *
 
386 NAME VARIABLE 
 937,32: __src
 937,37: VARIABLE
 
65 VARIABLE 
 937,37: VARIABLE
 
300 , parameter_declaration 
 937,37: ,
 937,39: void
 937,44: *
 937,45: __dest
 937,51: VARIABLE
 
391 void 
 937,39: void
 
298 * option_type_qualifier_list option_pointer 
 937,44: *
 
386 NAME VARIABLE 
 937,45: __dest
 937,51: VARIABLE
 
65 VARIABLE 
 937,51: VARIABLE
 
300 , parameter_declaration 
 937,51: ,
 937,53: size_t
 937,59: TYPE
 937,60: __n
 937,63: VARIABLE
 
391 NAME TYPE 
 937,53: size_t
 937,59: TYPE
 
26 TYPE 
 937,59: TYPE
 
298 NAME VARIABLE 
 937,60: __n
 937,63: VARIABLE
 
65 VARIABLE 
 937,63: VARIABLE
 
187 ) 
 937,63: )
 
60 ; 
 938,4: ;
 
23 extern 
 941,1: extern
 
8 void 
 941,8: void
 
5 NAME VARIABLE 
 941,13: bzero
 941,18: VARIABLE
 
65 VARIABLE 
 941,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 941,19: (
 941,20: void
 941,25: *
 941,26: __s
 941,29: VARIABLE
 941,29: ,
 941,31: size_t
 941,37: TYPE
 941,38: __n
 941,41: VARIABLE
 941,41: )
 
186 void 
 941,20: void
 
298 * option_type_qualifier_list option_pointer 
 941,25: *
 
386 NAME VARIABLE 
 941,26: __s
 941,29: VARIABLE
 
65 VARIABLE 
 941,29: VARIABLE
 
300 , parameter_declaration 
 941,29: ,
 941,31: size_t
 941,37: TYPE
 941,38: __n
 941,41: VARIABLE
 
391 NAME TYPE 
 941,31: size_t
 941,37: TYPE
 
26 TYPE 
 941,37: TYPE
 
298 NAME VARIABLE 
 941,38: __n
 941,41: VARIABLE
 
65 VARIABLE 
 941,41: VARIABLE
 
187 ) 
 941,41: )
 
60 ; 
 941,44: ;
 
23 extern 
 943,1: extern
 
8 char 
 943,8: char
 
5 * option_type_qualifier_list option_pointer 
 943,13: *
 
64 NAME VARIABLE 
 943,14: index
 943,19: VARIABLE
 
65 VARIABLE 
 943,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 943,20: (
 943,21: const
 943,27: char
 943,32: *
 943,33: __s
 943,36: VARIABLE
 943,36: ,
 943,38: int
 943,42: __c
 943,45: VARIABLE
 943,45: )
 
186 const 
 943,21: const
 
103 char 
 943,27: char
 
298 * option_type_qualifier_list option_pointer 
 943,32: *
 
386 NAME VARIABLE 
 943,33: __s
 943,36: VARIABLE
 
65 VARIABLE 
 943,36: VARIABLE
 
300 , parameter_declaration 
 943,36: ,
 943,38: int
 943,42: __c
 943,45: VARIABLE
 
391 int 
 943,38: int
 
298 NAME VARIABLE 
 943,42: __c
 943,45: VARIABLE
 
65 VARIABLE 
 943,45: VARIABLE
 
187 ) 
 943,45: )
 
60 ; 
 944,8: ;
 
23 extern 
 946,1: extern
 
8 char 
 946,8: char
 
5 * option_type_qualifier_list option_pointer 
 946,13: *
 
64 NAME VARIABLE 
 946,14: rindex
 946,20: VARIABLE
 
65 VARIABLE 
 946,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 946,21: (
 946,22: const
 946,28: char
 946,33: *
 946,34: __s
 946,37: VARIABLE
 946,37: ,
 946,39: int
 946,43: __c
 946,46: VARIABLE
 946,46: )
 
186 const 
 946,22: const
 
103 char 
 946,28: char
 
298 * option_type_qualifier_list option_pointer 
 946,33: *
 
386 NAME VARIABLE 
 946,34: __s
 946,37: VARIABLE
 
65 VARIABLE 
 946,37: VARIABLE
 
300 , parameter_declaration 
 946,37: ,
 946,39: int
 946,43: __c
 946,46: VARIABLE
 
391 int 
 946,39: int
 
298 NAME VARIABLE 
 946,43: __c
 946,46: VARIABLE
 
65 VARIABLE 
 946,46: VARIABLE
 
187 ) 
 946,46: )
 
60 ; 
 947,8: ;
 
23 extern 
 954,1: extern
 
8 int 
 954,8: int
 
5 NAME VARIABLE 
 954,12: ffs
 954,15: VARIABLE
 
65 VARIABLE 
 954,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 954,16: (
 954,17: int
 954,21: __i
 954,24: VARIABLE
 954,24: )
 
186 int 
 954,17: int
 
298 NAME VARIABLE 
 954,21: __i
 954,24: VARIABLE
 
65 VARIABLE 
 954,24: VARIABLE
 
187 ) 
 954,24: )
 
60 ; 
 954,27: ;
 
23 extern 
 960,1: extern
 
8 int 
 960,8: int
 
5 NAME VARIABLE 
 960,12: ffsl
 960,16: VARIABLE
 
65 VARIABLE 
 960,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 960,17: (
 960,18: long
 960,23: int
 960,27: __l
 960,30: VARIABLE
 960,30: )
 
186 long 
 960,18: long
 
106 int 
 960,23: int
 
298 NAME VARIABLE 
 960,27: __l
 960,30: VARIABLE
 
65 VARIABLE 
 960,30: VARIABLE
 
187 ) 
 960,30: )
 
60 ; 
 960,33: ;
 
23 extern 
 961,2: extern
 
8 int 
 961,9: int
 
5 NAME VARIABLE 
 961,13: ffsll
 961,18: VARIABLE
 
65 VARIABLE 
 961,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 961,19: (
 961,20: long
 961,25: long
 961,30: int
 961,34: __ll
 961,38: VARIABLE
 961,38: )
 
186 long 
 961,20: long
 
106 long 
 961,25: long
 
106 int 
 961,30: int
 
298 NAME VARIABLE 
 961,34: __ll
 961,38: VARIABLE
 
65 VARIABLE 
 961,38: VARIABLE
 
187 ) 
 961,38: )
 
60 ; 
 962,7: ;
 
23 extern 
 966,1: extern
 
8 int 
 966,8: int
 
5 NAME VARIABLE 
 966,12: strcasecmp
 966,22: VARIABLE
 
65 VARIABLE 
 966,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 966,23: (
 966,24: const
 966,30: char
 966,35: *
 966,36: __s1
 966,40: VARIABLE
 966,40: ,
 966,42: const
 966,48: char
 966,53: *
 966,54: __s2
 966,58: VARIABLE
 966,58: )
 
186 const 
 966,24: const
 
103 char 
 966,30: char
 
298 * option_type_qualifier_list option_pointer 
 966,35: *
 
386 NAME VARIABLE 
 966,36: __s1
 966,40: VARIABLE
 
65 VARIABLE 
 966,40: VARIABLE
 
300 , parameter_declaration 
 966,40: ,
 966,42: const
 966,48: char
 966,53: *
 966,54: __s2
 966,58: VARIABLE
 
391 const 
 966,42: const
 
103 char 
 966,48: char
 
298 * option_type_qualifier_list option_pointer 
 966,53: *
 
386 NAME VARIABLE 
 966,54: __s2
 966,58: VARIABLE
 
65 VARIABLE 
 966,58: VARIABLE
 
187 ) 
 966,58: )
 
60 ; 
 967,8: ;
 
23 extern 
 970,1: extern
 
8 int 
 970,8: int
 
5 NAME VARIABLE 
 970,12: strncasecmp
 970,23: VARIABLE
 
65 VARIABLE 
 970,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 970,24: (
 970,25: const
 970,31: char
 970,36: *
 970,37: __s1
 970,41: VARIABLE
 970,41: ,
 970,43: const
 970,49: char
 970,54: *
 970,55: __s2
 970,59: VARIABLE
 970,59: ,
 970,61: size_t
 970,67: TYPE
 970,68: __n
 970,71: VARIABLE
 970,71: )
 
186 const 
 970,25: const
 
103 char 
 970,31: char
 
298 * option_type_qualifier_list option_pointer 
 970,36: *
 
386 NAME VARIABLE 
 970,37: __s1
 970,41: VARIABLE
 
65 VARIABLE 
 970,41: VARIABLE
 
300 , parameter_declaration 
 970,41: ,
 970,43: const
 970,49: char
 970,54: *
 970,55: __s2
 970,59: VARIABLE
 
391 const 
 970,43: const
 
103 char 
 970,49: char
 
298 * option_type_qualifier_list option_pointer 
 970,54: *
 
386 NAME VARIABLE 
 970,55: __s2
 970,59: VARIABLE
 
65 VARIABLE 
 970,59: VARIABLE
 
300 , parameter_declaration 
 970,59: ,
 970,61: size_t
 970,67: TYPE
 970,68: __n
 970,71: VARIABLE
 
391 NAME TYPE 
 970,61: size_t
 970,67: TYPE
 
26 TYPE 
 970,67: TYPE
 
298 NAME VARIABLE 
 970,68: __n
 970,71: VARIABLE
 
65 VARIABLE 
 970,71: VARIABLE
 
187 ) 
 970,71: )
 
60 ; 
 971,8: ;
 
23 extern 
 978,1: extern
 
8 int 
 978,8: int
 
5 NAME VARIABLE 
 978,12: strcasecmp_l
 978,24: VARIABLE
 
65 VARIABLE 
 978,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 978,25: (
 978,26: const
 978,32: char
 978,37: *
 978,38: __s1
 978,42: VARIABLE
 978,42: ,
 978,44: const
 978,50: char
 978,55: *
 978,56: __s2
 978,60: VARIABLE
 978,60: ,
 978,62: locale_t
 978,70: TYPE
 978,71: __loc
 978,76: VARIABLE
 978,76: )
 
186 const 
 978,26: const
 
103 char 
 978,32: char
 
298 * option_type_qualifier_list option_pointer 
 978,37: *
 
386 NAME VARIABLE 
 978,38: __s1
 978,42: VARIABLE
 
65 VARIABLE 
 978,42: VARIABLE
 
300 , parameter_declaration 
 978,42: ,
 978,44: const
 978,50: char
 978,55: *
 978,56: __s2
 978,60: VARIABLE
 
391 const 
 978,44: const
 
103 char 
 978,50: char
 
298 * option_type_qualifier_list option_pointer 
 978,55: *
 
386 NAME VARIABLE 
 978,56: __s2
 978,60: VARIABLE
 
65 VARIABLE 
 978,60: VARIABLE
 
300 , parameter_declaration 
 978,60: ,
 978,62: locale_t
 978,70: TYPE
 978,71: __loc
 978,76: VARIABLE
 
391 NAME TYPE 
 978,62: locale_t
 978,70: TYPE
 
26 TYPE 
 978,70: TYPE
 
298 NAME VARIABLE 
 978,71: __loc
 978,76: VARIABLE
 
65 VARIABLE 
 978,76: VARIABLE
 
187 ) 
 978,76: )
 
60 ; 
 979,8: ;
 
23 extern 
 983,1: extern
 
8 int 
 983,8: int
 
5 NAME VARIABLE 
 983,12: strncasecmp_l
 983,25: VARIABLE
 
65 VARIABLE 
 983,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 983,26: (
 983,27: const
 983,33: char
 983,38: *
 983,39: __s1
 983,43: VARIABLE
 983,43: ,
 983,45: const
 983,51: char
 983,56: *
 983,57: __s2
 983,61: VARIABLE
 983,61: ,
 984,6: size_t
 984,12: TYPE
 984,13: __n
 984,16: VARIABLE
 984,16: ,
 984,18: locale_t
 984,26: TYPE
 984,27: __loc
 984,32: VARIABLE
 984,32: )
 
186 const 
 983,27: const
 
103 char 
 983,33: char
 
298 * option_type_qualifier_list option_pointer 
 983,38: *
 
386 NAME VARIABLE 
 983,39: __s1
 983,43: VARIABLE
 
65 VARIABLE 
 983,43: VARIABLE
 
300 , parameter_declaration 
 983,43: ,
 983,45: const
 983,51: char
 983,56: *
 983,57: __s2
 983,61: VARIABLE
 
391 const 
 983,45: const
 
103 char 
 983,51: char
 
298 * option_type_qualifier_list option_pointer 
 983,56: *
 
386 NAME VARIABLE 
 983,57: __s2
 983,61: VARIABLE
 
65 VARIABLE 
 983,61: VARIABLE
 
300 , parameter_declaration 
 983,61: ,
 984,6: size_t
 984,12: TYPE
 984,13: __n
 984,16: VARIABLE
 
391 NAME TYPE 
 984,6: size_t
 984,12: TYPE
 
26 TYPE 
 984,12: TYPE
 
298 NAME VARIABLE 
 984,13: __n
 984,16: VARIABLE
 
65 VARIABLE 
 984,16: VARIABLE
 
300 , parameter_declaration 
 984,16: ,
 984,18: locale_t
 984,26: TYPE
 984,27: __loc
 984,32: VARIABLE
 
391 NAME TYPE 
 984,18: locale_t
 984,26: TYPE
 
26 TYPE 
 984,26: TYPE
 
298 NAME VARIABLE 
 984,27: __loc
 984,32: VARIABLE
 
65 VARIABLE 
 984,32: VARIABLE
 
187 ) 
 984,32: )
 
60 ; 
 985,8: ;
 
23 extern 
 993,1: extern
 
8 void 
 993,8: void
 
5 NAME VARIABLE 
 993,13: explicit_bzero
 993,27: VARIABLE
 
65 VARIABLE 
 993,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 993,28: (
 993,29: void
 993,34: *
 993,35: __s
 993,38: VARIABLE
 993,38: ,
 993,40: size_t
 993,46: TYPE
 993,47: __n
 993,50: VARIABLE
 993,50: )
 
186 void 
 993,29: void
 
298 * option_type_qualifier_list option_pointer 
 993,34: *
 
386 NAME VARIABLE 
 993,35: __s
 993,38: VARIABLE
 
65 VARIABLE 
 993,38: VARIABLE
 
300 , parameter_declaration 
 993,38: ,
 993,40: size_t
 993,46: TYPE
 993,47: __n
 993,50: VARIABLE
 
391 NAME TYPE 
 993,40: size_t
 993,46: TYPE
 
26 TYPE 
 993,46: TYPE
 
298 NAME VARIABLE 
 993,47: __n
 993,50: VARIABLE
 
65 VARIABLE 
 993,50: VARIABLE
 
187 ) 
 993,50: )
 
60 ; 
 994,5: ;
 
23 extern 
 998,1: extern
 
8 char 
 998,8: char
 
5 * option_type_qualifier_list option_pointer 
 998,13: *
 
64 NAME VARIABLE 
 998,14: strsep
 998,20: VARIABLE
 
65 VARIABLE 
 998,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 998,21: (
 998,22: char
 998,27: *
 998,28: *
 998,30: __stringp
 998,39: VARIABLE
 998,39: ,
 999,8: const
 999,14: char
 999,19: *
 999,21: __delim
 999,28: VARIABLE
 999,28: )
 
186 char 
 998,22: char
 
298 * option_type_qualifier_list option_pointer 
 998,27: *
 998,28: *
 
116 * option_type_qualifier_list option_pointer 
 998,28: *
 
386 NAME VARIABLE 
 998,30: __stringp
 998,39: VARIABLE
 
65 VARIABLE 
 998,39: VARIABLE
 
300 , parameter_declaration 
 998,39: ,
 999,8: const
 999,14: char
 999,19: *
 999,21: __delim
 999,28: VARIABLE
 
391 const 
 999,8: const
 
103 char 
 999,14: char
 
298 * option_type_qualifier_list option_pointer 
 999,19: *
 
386 NAME VARIABLE 
 999,21: __delim
 999,28: VARIABLE
 
65 VARIABLE 
 999,28: VARIABLE
 
187 ) 
 999,28: )
 
60 ; 
 1000,7: ;
 
23 extern 
 1005,1: extern
 
8 char 
 1005,8: char
 
5 * option_type_qualifier_list option_pointer 
 1005,13: *
 
64 NAME VARIABLE 
 1005,14: strsignal
 1005,23: VARIABLE
 
65 VARIABLE 
 1005,23: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1005,24: (
 1005,25: int
 1005,29: __sig
 1005,34: VARIABLE
 1005,34: )
 
186 int 
 1005,25: int
 
298 NAME VARIABLE 
 1005,29: __sig
 1005,34: VARIABLE
 
65 VARIABLE 
 1005,34: VARIABLE
 
187 ) 
 1005,34: )
 
60 ; 
 1005,36: ;
 
23 extern 
 1007,1: extern
 
8 char 
 1007,8: char
 
5 * option_type_qualifier_list option_pointer 
 1007,13: *
 
64 NAME VARIABLE 
 1007,14: __stpcpy
 1007,22: VARIABLE
 
65 VARIABLE 
 1007,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1007,23: (
 1007,24: char
 1007,29: *
 1007,31: __dest
 1007,37: VARIABLE
 1007,37: ,
 1007,39: const
 1007,45: char
 1007,50: *
 1007,52: __src
 1007,57: VARIABLE
 1007,57: )
 
186 char 
 1007,24: char
 
298 * option_type_qualifier_list option_pointer 
 1007,29: *
 
386 NAME VARIABLE 
 1007,31: __dest
 1007,37: VARIABLE
 
65 VARIABLE 
 1007,37: VARIABLE
 
300 , parameter_declaration 
 1007,37: ,
 1007,39: const
 1007,45: char
 1007,50: *
 1007,52: __src
 1007,57: VARIABLE
 
391 const 
 1007,39: const
 
103 char 
 1007,45: char
 
298 * option_type_qualifier_list option_pointer 
 1007,50: *
 
386 NAME VARIABLE 
 1007,52: __src
 1007,57: VARIABLE
 
65 VARIABLE 
 1007,57: VARIABLE
 
187 ) 
 1007,57: )
 
60 ; 
 1008,7: ;
 
23 extern 
 1009,1: extern
 
8 char 
 1009,8: char
 
5 * option_type_qualifier_list option_pointer 
 1009,13: *
 
64 NAME VARIABLE 
 1009,14: stpcpy
 1009,20: VARIABLE
 
65 VARIABLE 
 1009,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1009,21: (
 1009,22: char
 1009,27: *
 1009,29: __dest
 1009,35: VARIABLE
 1009,35: ,
 1009,37: const
 1009,43: char
 1009,48: *
 1009,50: __src
 1009,55: VARIABLE
 1009,55: )
 
186 char 
 1009,22: char
 
298 * option_type_qualifier_list option_pointer 
 1009,27: *
 
386 NAME VARIABLE 
 1009,29: __dest
 1009,35: VARIABLE
 
65 VARIABLE 
 1009,35: VARIABLE
 
300 , parameter_declaration 
 1009,35: ,
 1009,37: const
 1009,43: char
 1009,48: *
 1009,50: __src
 1009,55: VARIABLE
 
391 const 
 1009,37: const
 
103 char 
 1009,43: char
 
298 * option_type_qualifier_list option_pointer 
 1009,48: *
 
386 NAME VARIABLE 
 1009,50: __src
 1009,55: VARIABLE
 
65 VARIABLE 
 1009,55: VARIABLE
 
187 ) 
 1009,55: )
 
60 ; 
 1010,7: ;
 
23 extern 
 1014,1: extern
 
8 char 
 1014,8: char
 
5 * option_type_qualifier_list option_pointer 
 1014,13: *
 
64 NAME VARIABLE 
 1014,14: __stpncpy
 1014,23: VARIABLE
 
65 VARIABLE 
 1014,23: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1014,24: (
 1014,25: char
 1014,30: *
 1014,32: __dest
 1014,38: VARIABLE
 1014,38: ,
 1015,4: const
 1015,10: char
 1015,15: *
 1015,17: __src
 1015,22: VARIABLE
 1015,22: ,
 1015,24: size_t
 1015,30: TYPE
 1015,31: __n
 1015,34: VARIABLE
 1015,34: )
 
186 char 
 1014,25: char
 
298 * option_type_qualifier_list option_pointer 
 1014,30: *
 
386 NAME VARIABLE 
 1014,32: __dest
 1014,38: VARIABLE
 
65 VARIABLE 
 1014,38: VARIABLE
 
300 , parameter_declaration 
 1014,38: ,
 1015,4: const
 1015,10: char
 1015,15: *
 1015,17: __src
 1015,22: VARIABLE
 
391 const 
 1015,4: const
 
103 char 
 1015,10: char
 
298 * option_type_qualifier_list option_pointer 
 1015,15: *
 
386 NAME VARIABLE 
 1015,17: __src
 1015,22: VARIABLE
 
65 VARIABLE 
 1015,22: VARIABLE
 
300 , parameter_declaration 
 1015,22: ,
 1015,24: size_t
 1015,30: TYPE
 1015,31: __n
 1015,34: VARIABLE
 
391 NAME TYPE 
 1015,24: size_t
 1015,30: TYPE
 
26 TYPE 
 1015,30: TYPE
 
298 NAME VARIABLE 
 1015,31: __n
 1015,34: VARIABLE
 
65 VARIABLE 
 1015,34: VARIABLE
 
187 ) 
 1015,34: )
 
60 ; 
 1016,7: ;
 
23 extern 
 1017,1: extern
 
8 char 
 1017,8: char
 
5 * option_type_qualifier_list option_pointer 
 1017,13: *
 
64 NAME VARIABLE 
 1017,14: stpncpy
 1017,21: VARIABLE
 
65 VARIABLE 
 1017,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1017,22: (
 1017,23: char
 1017,28: *
 1017,30: __dest
 1017,36: VARIABLE
 1017,36: ,
 1018,9: const
 1018,15: char
 1018,20: *
 1018,22: __src
 1018,27: VARIABLE
 1018,27: ,
 1018,29: size_t
 1018,35: TYPE
 1018,36: __n
 1018,39: VARIABLE
 1018,39: )
 
186 char 
 1017,23: char
 
298 * option_type_qualifier_list option_pointer 
 1017,28: *
 
386 NAME VARIABLE 
 1017,30: __dest
 1017,36: VARIABLE
 
65 VARIABLE 
 1017,36: VARIABLE
 
300 , parameter_declaration 
 1017,36: ,
 1018,9: const
 1018,15: char
 1018,20: *
 1018,22: __src
 1018,27: VARIABLE
 
391 const 
 1018,9: const
 
103 char 
 1018,15: char
 
298 * option_type_qualifier_list option_pointer 
 1018,20: *
 
386 NAME VARIABLE 
 1018,22: __src
 1018,27: VARIABLE
 
65 VARIABLE 
 1018,27: VARIABLE
 
300 , parameter_declaration 
 1018,27: ,
 1018,29: size_t
 1018,35: TYPE
 1018,36: __n
 1018,39: VARIABLE
 
391 NAME TYPE 
 1018,29: size_t
 1018,35: TYPE
 
26 TYPE 
 1018,35: TYPE
 
298 NAME VARIABLE 
 1018,36: __n
 1018,39: VARIABLE
 
65 VARIABLE 
 1018,39: VARIABLE
 
187 ) 
 1018,39: )
 
60 ; 
 1019,7: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1034,1: typedef
 1034,9: int
 
54 int 
 1034,9: int
 
6 NAME VARIABLE 
 1034,13: wchar_t
 1034,20: VARIABLE
 
65 VARIABLE 
 1034,20: VARIABLE
 
70 ; 
 1034,20: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1048,1: typedef
 1048,9: struct
 1049,3: {
 1050,5: int
 1050,9: quot
 1050,13: VARIABLE
 1050,13: ;
 1051,5: int
 1051,9: rem
 1051,12: VARIABLE
 1051,12: ;
 1052,3: }
 
54 struct 
 1048,9: struct
 
89 { struct_declaration_list } 
 1049,3: {
 1050,5: int
 1050,9: quot
 1050,13: VARIABLE
 1050,13: ;
 1051,5: int
 1051,9: rem
 1051,12: VARIABLE
 1051,12: ;
 1052,3: }
 
126 int 
 1050,5: int
 
200 NAME VARIABLE 
 1050,9: quot
 1050,13: VARIABLE
 
65 VARIABLE 
 1050,13: VARIABLE
 
313 ; 
 1050,13: ;
 
198 int 
 1051,5: int
 
200 NAME VARIABLE 
 1051,9: rem
 1051,12: VARIABLE
 
65 VARIABLE 
 1051,12: VARIABLE
 
313 ; 
 1051,12: ;
 
198 } 
 1052,3: }
 
6 NAME VARIABLE 
 1052,5: div_t
 1052,10: VARIABLE
 
65 VARIABLE 
 1052,10: VARIABLE
 
70 ; 
 1052,10: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1056,1: typedef
 1056,9: struct
 1057,3: {
 1058,5: long
 1058,10: int
 1058,14: quot
 1058,18: VARIABLE
 1058,18: ;
 1059,5: long
 1059,10: int
 1059,14: rem
 1059,17: VARIABLE
 1059,17: ;
 1060,3: }
 
54 struct 
 1056,9: struct
 
89 { struct_declaration_list } 
 1057,3: {
 1058,5: long
 1058,10: int
 1058,14: quot
 1058,18: VARIABLE
 1058,18: ;
 1059,5: long
 1059,10: int
 1059,14: rem
 1059,17: VARIABLE
 1059,17: ;
 1060,3: }
 
126 long 
 1058,5: long
 
135 int 
 1058,10: int
 
200 NAME VARIABLE 
 1058,14: quot
 1058,18: VARIABLE
 
65 VARIABLE 
 1058,18: VARIABLE
 
313 ; 
 1058,18: ;
 
198 long 
 1059,5: long
 
135 int 
 1059,10: int
 
200 NAME VARIABLE 
 1059,14: rem
 1059,17: VARIABLE
 
65 VARIABLE 
 1059,17: VARIABLE
 
313 ; 
 1059,17: ;
 
198 } 
 1060,3: }
 
6 NAME VARIABLE 
 1060,5: ldiv_t
 1060,11: VARIABLE
 
65 VARIABLE 
 1060,11: VARIABLE
 
70 ; 
 1060,11: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1066,2: typedef
 1066,10: struct
 1067,3: {
 1068,5: long
 1068,10: long
 1068,15: int
 1068,19: quot
 1068,23: VARIABLE
 1068,23: ;
 1069,5: long
 1069,10: long
 1069,15: int
 1069,19: rem
 1069,22: VARIABLE
 1069,22: ;
 1070,3: }
 
54 struct 
 1066,10: struct
 
89 { struct_declaration_list } 
 1067,3: {
 1068,5: long
 1068,10: long
 1068,15: int
 1068,19: quot
 1068,23: VARIABLE
 1068,23: ;
 1069,5: long
 1069,10: long
 1069,15: int
 1069,19: rem
 1069,22: VARIABLE
 1069,22: ;
 1070,3: }
 
126 long 
 1068,5: long
 
135 long 
 1068,10: long
 
135 int 
 1068,15: int
 
200 NAME VARIABLE 
 1068,19: quot
 1068,23: VARIABLE
 
65 VARIABLE 
 1068,23: VARIABLE
 
313 ; 
 1068,23: ;
 
198 long 
 1069,5: long
 
135 long 
 1069,10: long
 
135 int 
 1069,15: int
 
200 NAME VARIABLE 
 1069,19: rem
 1069,22: VARIABLE
 
65 VARIABLE 
 1069,22: VARIABLE
 
313 ; 
 1069,22: ;
 
198 } 
 1070,3: }
 
6 NAME VARIABLE 
 1070,5: lldiv_t
 1070,12: VARIABLE
 
65 VARIABLE 
 1070,12: VARIABLE
 
70 ; 
 1070,12: ;
 
23 extern 
 1072,1: extern
 
8 NAME TYPE 
 1072,8: size_t
 1072,14: TYPE
 
26 TYPE 
 1072,14: TYPE
 
5 NAME VARIABLE 
 1072,15: __ctype_get_mb_cur_max
 1072,37: VARIABLE
 
65 VARIABLE 
 1072,37: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1072,38: (
 1072,39: void
 1072,43: )
 
186 void 
 1072,39: void
 
187 ) 
 1072,43: )
 
60 ; 
 1072,46: ;
 
23 extern 
 1076,1: extern
 
8 double 
 1076,8: double
 
5 NAME VARIABLE 
 1076,15: atof
 1076,19: VARIABLE
 
65 VARIABLE 
 1076,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1076,20: (
 1076,21: const
 1076,27: char
 1076,32: *
 1076,33: __nptr
 1076,39: VARIABLE
 1076,39: )
 
186 const 
 1076,21: const
 
103 char 
 1076,27: char
 
298 * option_type_qualifier_list option_pointer 
 1076,32: *
 
386 NAME VARIABLE 
 1076,33: __nptr
 1076,39: VARIABLE
 
65 VARIABLE 
 1076,39: VARIABLE
 
187 ) 
 1076,39: )
 
60 ; 
 1077,9: ;
 
23 extern 
 1079,1: extern
 
8 int 
 1079,8: int
 
5 NAME VARIABLE 
 1079,12: atoi
 1079,16: VARIABLE
 
65 VARIABLE 
 1079,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1079,17: (
 1079,18: const
 1079,24: char
 1079,29: *
 1079,30: __nptr
 1079,36: VARIABLE
 1079,36: )
 
186 const 
 1079,18: const
 
103 char 
 1079,24: char
 
298 * option_type_qualifier_list option_pointer 
 1079,29: *
 
386 NAME VARIABLE 
 1079,30: __nptr
 1079,36: VARIABLE
 
65 VARIABLE 
 1079,36: VARIABLE
 
187 ) 
 1079,36: )
 
60 ; 
 1080,9: ;
 
23 extern 
 1082,1: extern
 
8 long 
 1082,8: long
 
17 int 
 1082,13: int
 
5 NAME VARIABLE 
 1082,17: atol
 1082,21: VARIABLE
 
65 VARIABLE 
 1082,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1082,22: (
 1082,23: const
 1082,29: char
 1082,34: *
 1082,35: __nptr
 1082,41: VARIABLE
 1082,41: )
 
186 const 
 1082,23: const
 
103 char 
 1082,29: char
 
298 * option_type_qualifier_list option_pointer 
 1082,34: *
 
386 NAME VARIABLE 
 1082,35: __nptr
 1082,41: VARIABLE
 
65 VARIABLE 
 1082,41: VARIABLE
 
187 ) 
 1082,41: )
 
60 ; 
 1083,9: ;
 
23 extern 
 1087,2: extern
 
8 long 
 1087,9: long
 
17 long 
 1087,14: long
 
17 int 
 1087,19: int
 
5 NAME VARIABLE 
 1087,23: atoll
 1087,28: VARIABLE
 
65 VARIABLE 
 1087,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1087,29: (
 1087,30: const
 1087,36: char
 1087,41: *
 1087,42: __nptr
 1087,48: VARIABLE
 1087,48: )
 
186 const 
 1087,30: const
 
103 char 
 1087,36: char
 
298 * option_type_qualifier_list option_pointer 
 1087,41: *
 
386 NAME VARIABLE 
 1087,42: __nptr
 1087,48: VARIABLE
 
65 VARIABLE 
 1087,48: VARIABLE
 
187 ) 
 1087,48: )
 
60 ; 
 1088,9: ;
 
23 extern 
 1092,1: extern
 
8 double 
 1092,8: double
 
5 NAME VARIABLE 
 1092,15: strtod
 1092,21: VARIABLE
 
65 VARIABLE 
 1092,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1092,22: (
 1092,23: const
 1092,29: char
 1092,34: *
 1092,36: __nptr
 1092,42: VARIABLE
 1092,42: ,
 1093,9: char
 1093,14: *
 1093,15: *
 1093,17: __endptr
 1093,25: VARIABLE
 1093,25: )
 
186 const 
 1092,23: const
 
103 char 
 1092,29: char
 
298 * option_type_qualifier_list option_pointer 
 1092,34: *
 
386 NAME VARIABLE 
 1092,36: __nptr
 1092,42: VARIABLE
 
65 VARIABLE 
 1092,42: VARIABLE
 
300 , parameter_declaration 
 1092,42: ,
 1093,9: char
 1093,14: *
 1093,15: *
 1093,17: __endptr
 1093,25: VARIABLE
 
391 char 
 1093,9: char
 
298 * option_type_qualifier_list option_pointer 
 1093,14: *
 1093,15: *
 
116 * option_type_qualifier_list option_pointer 
 1093,15: *
 
386 NAME VARIABLE 
 1093,17: __endptr
 1093,25: VARIABLE
 
65 VARIABLE 
 1093,25: VARIABLE
 
187 ) 
 1093,25: )
 
60 ; 
 1094,7: ;
 
23 extern 
 1098,1: extern
 
8 float 
 1098,8: float
 
5 NAME VARIABLE 
 1098,14: strtof
 1098,20: VARIABLE
 
65 VARIABLE 
 1098,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1098,21: (
 1098,22: const
 1098,28: char
 1098,33: *
 1098,35: __nptr
 1098,41: VARIABLE
 1098,41: ,
 1099,8: char
 1099,13: *
 1099,14: *
 1099,16: __endptr
 1099,24: VARIABLE
 1099,24: )
 
186 const 
 1098,22: const
 
103 char 
 1098,28: char
 
298 * option_type_qualifier_list option_pointer 
 1098,33: *
 
386 NAME VARIABLE 
 1098,35: __nptr
 1098,41: VARIABLE
 
65 VARIABLE 
 1098,41: VARIABLE
 
300 , parameter_declaration 
 1098,41: ,
 1099,8: char
 1099,13: *
 1099,14: *
 1099,16: __endptr
 1099,24: VARIABLE
 
391 char 
 1099,8: char
 
298 * option_type_qualifier_list option_pointer 
 1099,13: *
 1099,14: *
 
116 * option_type_qualifier_list option_pointer 
 1099,14: *
 
386 NAME VARIABLE 
 1099,16: __endptr
 1099,24: VARIABLE
 
65 VARIABLE 
 1099,24: VARIABLE
 
187 ) 
 1099,24: )
 
60 ; 
 1099,27: ;
 
23 extern 
 1101,1: extern
 
8 long 
 1101,8: long
 
17 double 
 1101,13: double
 
5 NAME VARIABLE 
 1101,20: strtold
 1101,27: VARIABLE
 
65 VARIABLE 
 1101,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1101,28: (
 1101,29: const
 1101,35: char
 1101,40: *
 1101,42: __nptr
 1101,48: VARIABLE
 1101,48: ,
 1102,8: char
 1102,13: *
 1102,14: *
 1102,16: __endptr
 1102,24: VARIABLE
 1102,24: )
 
186 const 
 1101,29: const
 
103 char 
 1101,35: char
 
298 * option_type_qualifier_list option_pointer 
 1101,40: *
 
386 NAME VARIABLE 
 1101,42: __nptr
 1101,48: VARIABLE
 
65 VARIABLE 
 1101,48: VARIABLE
 
300 , parameter_declaration 
 1101,48: ,
 1102,8: char
 1102,13: *
 1102,14: *
 1102,16: __endptr
 1102,24: VARIABLE
 
391 char 
 1102,8: char
 
298 * option_type_qualifier_list option_pointer 
 1102,13: *
 1102,14: *
 
116 * option_type_qualifier_list option_pointer 
 1102,14: *
 
386 NAME VARIABLE 
 1102,16: __endptr
 1102,24: VARIABLE
 
65 VARIABLE 
 1102,24: VARIABLE
 
187 ) 
 1102,24: )
 
60 ; 
 1103,7: ;
 
23 extern 
 1105,1: extern
 
8 long 
 1105,8: long
 
17 int 
 1105,13: int
 
5 NAME VARIABLE 
 1105,17: strtol
 1105,23: VARIABLE
 
65 VARIABLE 
 1105,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1105,24: (
 1105,25: const
 1105,31: char
 1105,36: *
 1105,38: __nptr
 1105,44: VARIABLE
 1105,44: ,
 1106,4: char
 1106,9: *
 1106,10: *
 1106,12: __endptr
 1106,20: VARIABLE
 1106,20: ,
 1106,22: int
 1106,26: __base
 1106,32: VARIABLE
 1106,32: )
 
186 const 
 1105,25: const
 
103 char 
 1105,31: char
 
298 * option_type_qualifier_list option_pointer 
 1105,36: *
 
386 NAME VARIABLE 
 1105,38: __nptr
 1105,44: VARIABLE
 
65 VARIABLE 
 1105,44: VARIABLE
 
300 , parameter_declaration 
 1105,44: ,
 1106,4: char
 1106,9: *
 1106,10: *
 1106,12: __endptr
 1106,20: VARIABLE
 
391 char 
 1106,4: char
 
298 * option_type_qualifier_list option_pointer 
 1106,9: *
 1106,10: *
 
116 * option_type_qualifier_list option_pointer 
 1106,10: *
 
386 NAME VARIABLE 
 1106,12: __endptr
 1106,20: VARIABLE
 
65 VARIABLE 
 1106,20: VARIABLE
 
300 , parameter_declaration 
 1106,20: ,
 1106,22: int
 1106,26: __base
 1106,32: VARIABLE
 
391 int 
 1106,22: int
 
298 NAME VARIABLE 
 1106,26: __base
 1106,32: VARIABLE
 
65 VARIABLE 
 1106,32: VARIABLE
 
187 ) 
 1106,32: )
 
60 ; 
 1107,7: ;
 
23 extern 
 1109,1: extern
 
8 unsigned 
 1109,8: unsigned
 
17 long 
 1109,17: long
 
17 int 
 1109,22: int
 
5 NAME VARIABLE 
 1109,26: strtoul
 1109,33: VARIABLE
 
65 VARIABLE 
 1109,33: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1109,34: (
 1109,35: const
 1109,41: char
 1109,46: *
 1109,48: __nptr
 1109,54: VARIABLE
 1109,54: ,
 1110,7: char
 1110,12: *
 1110,13: *
 1110,15: __endptr
 1110,23: VARIABLE
 1110,23: ,
 1110,25: int
 1110,29: __base
 1110,35: VARIABLE
 1110,35: )
 
186 const 
 1109,35: const
 
103 char 
 1109,41: char
 
298 * option_type_qualifier_list option_pointer 
 1109,46: *
 
386 NAME VARIABLE 
 1109,48: __nptr
 1109,54: VARIABLE
 
65 VARIABLE 
 1109,54: VARIABLE
 
300 , parameter_declaration 
 1109,54: ,
 1110,7: char
 1110,12: *
 1110,13: *
 1110,15: __endptr
 1110,23: VARIABLE
 
391 char 
 1110,7: char
 
298 * option_type_qualifier_list option_pointer 
 1110,12: *
 1110,13: *
 
116 * option_type_qualifier_list option_pointer 
 1110,13: *
 
386 NAME VARIABLE 
 1110,15: __endptr
 1110,23: VARIABLE
 
65 VARIABLE 
 1110,23: VARIABLE
 
300 , parameter_declaration 
 1110,23: ,
 1110,25: int
 1110,29: __base
 1110,35: VARIABLE
 
391 int 
 1110,25: int
 
298 NAME VARIABLE 
 1110,29: __base
 1110,35: VARIABLE
 
65 VARIABLE 
 1110,35: VARIABLE
 
187 ) 
 1110,35: )
 
60 ; 
 1111,7: ;
 
23 extern 
 1116,1: extern
 
8 long 
 1116,8: long
 
17 long 
 1116,13: long
 
17 int 
 1116,18: int
 
5 NAME VARIABLE 
 1116,22: strtoq
 1116,28: VARIABLE
 
65 VARIABLE 
 1116,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1116,29: (
 1116,30: const
 1116,36: char
 1116,41: *
 1116,43: __nptr
 1116,49: VARIABLE
 1116,49: ,
 1117,9: char
 1117,14: *
 1117,15: *
 1117,17: __endptr
 1117,25: VARIABLE
 1117,25: ,
 1117,27: int
 1117,31: __base
 1117,37: VARIABLE
 1117,37: )
 
186 const 
 1116,30: const
 
103 char 
 1116,36: char
 
298 * option_type_qualifier_list option_pointer 
 1116,41: *
 
386 NAME VARIABLE 
 1116,43: __nptr
 1116,49: VARIABLE
 
65 VARIABLE 
 1116,49: VARIABLE
 
300 , parameter_declaration 
 1116,49: ,
 1117,9: char
 1117,14: *
 1117,15: *
 1117,17: __endptr
 1117,25: VARIABLE
 
391 char 
 1117,9: char
 
298 * option_type_qualifier_list option_pointer 
 1117,14: *
 1117,15: *
 
116 * option_type_qualifier_list option_pointer 
 1117,15: *
 
386 NAME VARIABLE 
 1117,17: __endptr
 1117,25: VARIABLE
 
65 VARIABLE 
 1117,25: VARIABLE
 
300 , parameter_declaration 
 1117,25: ,
 1117,27: int
 1117,31: __base
 1117,37: VARIABLE
 
391 int 
 1117,27: int
 
298 NAME VARIABLE 
 1117,31: __base
 1117,37: VARIABLE
 
65 VARIABLE 
 1117,37: VARIABLE
 
187 ) 
 1117,37: )
 
60 ; 
 1118,7: ;
 
23 extern 
 1121,1: extern
 
8 unsigned 
 1121,8: unsigned
 
17 long 
 1121,17: long
 
17 long 
 1121,22: long
 
17 int 
 1121,27: int
 
5 NAME VARIABLE 
 1121,31: strtouq
 1121,38: VARIABLE
 
65 VARIABLE 
 1121,38: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1121,39: (
 1121,40: const
 1121,46: char
 1121,51: *
 1121,53: __nptr
 1121,59: VARIABLE
 1121,59: ,
 1122,12: char
 1122,17: *
 1122,18: *
 1122,20: __endptr
 1122,28: VARIABLE
 1122,28: ,
 1122,30: int
 1122,34: __base
 1122,40: VARIABLE
 1122,40: )
 
186 const 
 1121,40: const
 
103 char 
 1121,46: char
 
298 * option_type_qualifier_list option_pointer 
 1121,51: *
 
386 NAME VARIABLE 
 1121,53: __nptr
 1121,59: VARIABLE
 
65 VARIABLE 
 1121,59: VARIABLE
 
300 , parameter_declaration 
 1121,59: ,
 1122,12: char
 1122,17: *
 1122,18: *
 1122,20: __endptr
 1122,28: VARIABLE
 
391 char 
 1122,12: char
 
298 * option_type_qualifier_list option_pointer 
 1122,17: *
 1122,18: *
 
116 * option_type_qualifier_list option_pointer 
 1122,18: *
 
386 NAME VARIABLE 
 1122,20: __endptr
 1122,28: VARIABLE
 
65 VARIABLE 
 1122,28: VARIABLE
 
300 , parameter_declaration 
 1122,28: ,
 1122,30: int
 1122,34: __base
 1122,40: VARIABLE
 
391 int 
 1122,30: int
 
298 NAME VARIABLE 
 1122,34: __base
 1122,40: VARIABLE
 
65 VARIABLE 
 1122,40: VARIABLE
 
187 ) 
 1122,40: )
 
60 ; 
 1123,7: ;
 
23 extern 
 1129,1: extern
 
8 long 
 1129,8: long
 
17 long 
 1129,13: long
 
17 int 
 1129,18: int
 
5 NAME VARIABLE 
 1129,22: strtoll
 1129,29: VARIABLE
 
65 VARIABLE 
 1129,29: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1129,30: (
 1129,31: const
 1129,37: char
 1129,42: *
 1129,44: __nptr
 1129,50: VARIABLE
 1129,50: ,
 1130,10: char
 1130,15: *
 1130,16: *
 1130,18: __endptr
 1130,26: VARIABLE
 1130,26: ,
 1130,28: int
 1130,32: __base
 1130,38: VARIABLE
 1130,38: )
 
186 const 
 1129,31: const
 
103 char 
 1129,37: char
 
298 * option_type_qualifier_list option_pointer 
 1129,42: *
 
386 NAME VARIABLE 
 1129,44: __nptr
 1129,50: VARIABLE
 
65 VARIABLE 
 1129,50: VARIABLE
 
300 , parameter_declaration 
 1129,50: ,
 1130,10: char
 1130,15: *
 1130,16: *
 1130,18: __endptr
 1130,26: VARIABLE
 
391 char 
 1130,10: char
 
298 * option_type_qualifier_list option_pointer 
 1130,15: *
 1130,16: *
 
116 * option_type_qualifier_list option_pointer 
 1130,16: *
 
386 NAME VARIABLE 
 1130,18: __endptr
 1130,26: VARIABLE
 
65 VARIABLE 
 1130,26: VARIABLE
 
300 , parameter_declaration 
 1130,26: ,
 1130,28: int
 1130,32: __base
 1130,38: VARIABLE
 
391 int 
 1130,28: int
 
298 NAME VARIABLE 
 1130,32: __base
 1130,38: VARIABLE
 
65 VARIABLE 
 1130,38: VARIABLE
 
187 ) 
 1130,38: )
 
60 ; 
 1131,7: ;
 
23 extern 
 1134,1: extern
 
8 unsigned 
 1134,8: unsigned
 
17 long 
 1134,17: long
 
17 long 
 1134,22: long
 
17 int 
 1134,27: int
 
5 NAME VARIABLE 
 1134,31: strtoull
 1134,39: VARIABLE
 
65 VARIABLE 
 1134,39: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1134,40: (
 1134,41: const
 1134,47: char
 1134,52: *
 1134,54: __nptr
 1134,60: VARIABLE
 1134,60: ,
 1135,6: char
 1135,11: *
 1135,12: *
 1135,14: __endptr
 1135,22: VARIABLE
 1135,22: ,
 1135,24: int
 1135,28: __base
 1135,34: VARIABLE
 1135,34: )
 
186 const 
 1134,41: const
 
103 char 
 1134,47: char
 
298 * option_type_qualifier_list option_pointer 
 1134,52: *
 
386 NAME VARIABLE 
 1134,54: __nptr
 1134,60: VARIABLE
 
65 VARIABLE 
 1134,60: VARIABLE
 
300 , parameter_declaration 
 1134,60: ,
 1135,6: char
 1135,11: *
 1135,12: *
 1135,14: __endptr
 1135,22: VARIABLE
 
391 char 
 1135,6: char
 
298 * option_type_qualifier_list option_pointer 
 1135,11: *
 1135,12: *
 
116 * option_type_qualifier_list option_pointer 
 1135,12: *
 
386 NAME VARIABLE 
 1135,14: __endptr
 1135,22: VARIABLE
 
65 VARIABLE 
 1135,22: VARIABLE
 
300 , parameter_declaration 
 1135,22: ,
 1135,24: int
 1135,28: __base
 1135,34: VARIABLE
 
391 int 
 1135,24: int
 
298 NAME VARIABLE 
 1135,28: __base
 1135,34: VARIABLE
 
65 VARIABLE 
 1135,34: VARIABLE
 
187 ) 
 1135,34: )
 
60 ; 
 1136,7: ;
 
23 extern 
 1138,1: extern
 
8 char 
 1138,8: char
 
5 * option_type_qualifier_list option_pointer 
 1138,13: *
 
64 NAME VARIABLE 
 1138,14: l64a
 1138,18: VARIABLE
 
65 VARIABLE 
 1138,18: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1138,19: (
 1138,20: long
 1138,25: int
 1138,29: __n
 1138,32: VARIABLE
 1138,32: )
 
186 long 
 1138,20: long
 
106 int 
 1138,25: int
 
298 NAME VARIABLE 
 1138,29: __n
 1138,32: VARIABLE
 
65 VARIABLE 
 1138,32: VARIABLE
 
187 ) 
 1138,32: )
 
60 ; 
 1138,35: ;
 
23 extern 
 1141,1: extern
 
8 long 
 1141,8: long
 
17 int 
 1141,13: int
 
5 NAME VARIABLE 
 1141,17: a64l
 1141,21: VARIABLE
 
65 VARIABLE 
 1141,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1141,22: (
 1141,23: const
 1141,29: char
 1141,34: *
 1141,35: __s
 1141,38: VARIABLE
 1141,38: )
 
186 const 
 1141,23: const
 
103 char 
 1141,29: char
 
298 * option_type_qualifier_list option_pointer 
 1141,34: *
 
386 NAME VARIABLE 
 1141,35: __s
 1141,38: VARIABLE
 
65 VARIABLE 
 1141,38: VARIABLE
 
187 ) 
 1141,38: )
 
60 ; 
 1142,9: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1155,1: typedef
 1155,9: __u_char
 1155,17: TYPE
 
54 NAME TYPE 
 1155,9: __u_char
 1155,17: TYPE
 
26 TYPE 
 1155,17: TYPE
 
6 NAME VARIABLE 
 1155,18: u_char
 1155,24: VARIABLE
 
65 VARIABLE 
 1155,24: VARIABLE
 
70 ; 
 1155,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1156,1: typedef
 1156,9: __u_short
 1156,18: TYPE
 
54 NAME TYPE 
 1156,9: __u_short
 1156,18: TYPE
 
26 TYPE 
 1156,18: TYPE
 
6 NAME VARIABLE 
 1156,19: u_short
 1156,26: VARIABLE
 
65 VARIABLE 
 1156,26: VARIABLE
 
70 ; 
 1156,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1157,1: typedef
 1157,9: __u_int
 1157,16: TYPE
 
54 NAME TYPE 
 1157,9: __u_int
 1157,16: TYPE
 
26 TYPE 
 1157,16: TYPE
 
6 NAME VARIABLE 
 1157,17: u_int
 1157,22: VARIABLE
 
65 VARIABLE 
 1157,22: VARIABLE
 
70 ; 
 1157,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1158,1: typedef
 1158,9: __u_long
 1158,17: TYPE
 
54 NAME TYPE 
 1158,9: __u_long
 1158,17: TYPE
 
26 TYPE 
 1158,17: TYPE
 
6 NAME VARIABLE 
 1158,18: u_long
 1158,24: VARIABLE
 
65 VARIABLE 
 1158,24: VARIABLE
 
70 ; 
 1158,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1159,1: typedef
 1159,9: __quad_t
 1159,17: TYPE
 
54 NAME TYPE 
 1159,9: __quad_t
 1159,17: TYPE
 
26 TYPE 
 1159,17: TYPE
 
6 NAME VARIABLE 
 1159,18: quad_t
 1159,24: VARIABLE
 
65 VARIABLE 
 1159,24: VARIABLE
 
70 ; 
 1159,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1160,1: typedef
 1160,9: __u_quad_t
 1160,19: TYPE
 
54 NAME TYPE 
 1160,9: __u_quad_t
 1160,19: TYPE
 
26 TYPE 
 1160,19: TYPE
 
6 NAME VARIABLE 
 1160,20: u_quad_t
 1160,28: VARIABLE
 
65 VARIABLE 
 1160,28: VARIABLE
 
70 ; 
 1160,28: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1161,1: typedef
 1161,9: __fsid_t
 1161,17: TYPE
 
54 NAME TYPE 
 1161,9: __fsid_t
 1161,17: TYPE
 
26 TYPE 
 1161,17: TYPE
 
6 NAME VARIABLE 
 1161,18: fsid_t
 1161,24: VARIABLE
 
65 VARIABLE 
 1161,24: VARIABLE
 
70 ; 
 1161,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1164,1: typedef
 1164,9: __loff_t
 1164,17: TYPE
 
54 NAME TYPE 
 1164,9: __loff_t
 1164,17: TYPE
 
26 TYPE 
 1164,17: TYPE
 
6 NAME VARIABLE 
 1164,18: loff_t
 1164,24: VARIABLE
 
65 VARIABLE 
 1164,24: VARIABLE
 
70 ; 
 1164,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1169,1: typedef
 1169,9: __ino_t
 1169,16: TYPE
 
54 NAME TYPE 
 1169,9: __ino_t
 1169,16: TYPE
 
26 TYPE 
 1169,16: TYPE
 
6 NAME VARIABLE 
 1169,17: ino_t
 1169,22: VARIABLE
 
65 VARIABLE 
 1169,22: VARIABLE
 
70 ; 
 1169,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1171,1: typedef
 1171,9: __dev_t
 1171,16: TYPE
 
54 NAME TYPE 
 1171,9: __dev_t
 1171,16: TYPE
 
26 TYPE 
 1171,16: TYPE
 
6 NAME VARIABLE 
 1171,17: dev_t
 1171,22: VARIABLE
 
65 VARIABLE 
 1171,22: VARIABLE
 
70 ; 
 1171,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1176,1: typedef
 1176,9: __gid_t
 1176,16: TYPE
 
54 NAME TYPE 
 1176,9: __gid_t
 1176,16: TYPE
 
26 TYPE 
 1176,16: TYPE
 
6 NAME VARIABLE 
 1176,17: gid_t
 1176,22: VARIABLE
 
65 VARIABLE 
 1176,22: VARIABLE
 
70 ; 
 1176,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1181,1: typedef
 1181,9: __mode_t
 1181,17: TYPE
 
54 NAME TYPE 
 1181,9: __mode_t
 1181,17: TYPE
 
26 TYPE 
 1181,17: TYPE
 
6 NAME VARIABLE 
 1181,18: mode_t
 1181,24: VARIABLE
 
65 VARIABLE 
 1181,24: VARIABLE
 
70 ; 
 1181,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1186,1: typedef
 1186,9: __nlink_t
 1186,18: TYPE
 
54 NAME TYPE 
 1186,9: __nlink_t
 1186,18: TYPE
 
26 TYPE 
 1186,18: TYPE
 
6 NAME VARIABLE 
 1186,19: nlink_t
 1186,26: VARIABLE
 
65 VARIABLE 
 1186,26: VARIABLE
 
70 ; 
 1186,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1191,1: typedef
 1191,9: __uid_t
 1191,16: TYPE
 
54 NAME TYPE 
 1191,9: __uid_t
 1191,16: TYPE
 
26 TYPE 
 1191,16: TYPE
 
6 NAME VARIABLE 
 1191,17: uid_t
 1191,22: VARIABLE
 
65 VARIABLE 
 1191,22: VARIABLE
 
70 ; 
 1191,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1193,1: typedef
 1193,9: __pid_t
 1193,16: TYPE
 
54 NAME TYPE 
 1193,9: __pid_t
 1193,16: TYPE
 
26 TYPE 
 1193,16: TYPE
 
6 NAME VARIABLE 
 1193,17: pid_t
 1193,22: VARIABLE
 
65 VARIABLE 
 1193,22: VARIABLE
 
70 ; 
 1193,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1199,1: typedef
 1199,9: __id_t
 1199,15: TYPE
 
54 NAME TYPE 
 1199,9: __id_t
 1199,15: TYPE
 
26 TYPE 
 1199,15: TYPE
 
6 NAME VARIABLE 
 1199,16: id_t
 1199,20: VARIABLE
 
65 VARIABLE 
 1199,20: VARIABLE
 
70 ; 
 1199,20: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1201,1: typedef
 1201,9: __daddr_t
 1201,18: TYPE
 
54 NAME TYPE 
 1201,9: __daddr_t
 1201,18: TYPE
 
26 TYPE 
 1201,18: TYPE
 
6 NAME VARIABLE 
 1201,19: daddr_t
 1201,26: VARIABLE
 
65 VARIABLE 
 1201,26: VARIABLE
 
70 ; 
 1201,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1202,1: typedef
 1202,9: __caddr_t
 1202,18: TYPE
 
54 NAME TYPE 
 1202,9: __caddr_t
 1202,18: TYPE
 
26 TYPE 
 1202,18: TYPE
 
6 NAME VARIABLE 
 1202,19: caddr_t
 1202,26: VARIABLE
 
65 VARIABLE 
 1202,26: VARIABLE
 
70 ; 
 1202,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1208,1: typedef
 1208,9: __key_t
 1208,16: TYPE
 
54 NAME TYPE 
 1208,9: __key_t
 1208,16: TYPE
 
26 TYPE 
 1208,16: TYPE
 
6 NAME VARIABLE 
 1208,17: key_t
 1208,22: VARIABLE
 
65 VARIABLE 
 1208,22: VARIABLE
 
70 ; 
 1208,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1220,1: typedef
 1220,9: __clock_t
 1220,18: TYPE
 
54 NAME TYPE 
 1220,9: __clock_t
 1220,18: TYPE
 
26 TYPE 
 1220,18: TYPE
 
6 NAME VARIABLE 
 1220,19: clock_t
 1220,26: VARIABLE
 
65 VARIABLE 
 1220,26: VARIABLE
 
70 ; 
 1220,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1230,1: typedef
 1230,9: __clockid_t
 1230,20: TYPE
 
54 NAME TYPE 
 1230,9: __clockid_t
 1230,20: TYPE
 
26 TYPE 
 1230,20: TYPE
 
6 NAME VARIABLE 
 1230,21: clockid_t
 1230,30: VARIABLE
 
65 VARIABLE 
 1230,30: VARIABLE
 
70 ; 
 1230,30: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1234,1: typedef
 1234,9: __time_t
 1234,17: TYPE
 
54 NAME TYPE 
 1234,9: __time_t
 1234,17: TYPE
 
26 TYPE 
 1234,17: TYPE
 
6 NAME VARIABLE 
 1234,18: time_t
 1234,24: VARIABLE
 
65 VARIABLE 
 1234,24: VARIABLE
 
70 ; 
 1234,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1243,1: typedef
 1243,9: __timer_t
 1243,18: TYPE
 
54 NAME TYPE 
 1243,9: __timer_t
 1243,18: TYPE
 
26 TYPE 
 1243,18: TYPE
 
6 NAME VARIABLE 
 1243,19: timer_t
 1243,26: VARIABLE
 
65 VARIABLE 
 1243,26: VARIABLE
 
70 ; 
 1243,26: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1251,1: typedef
 1251,9: unsigned
 1251,18: long
 1251,23: int
 
54 unsigned 
 1251,9: unsigned
 
106 long 
 1251,18: long
 
106 int 
 1251,23: int
 
6 NAME VARIABLE 
 1251,27: ulong
 1251,32: VARIABLE
 
65 VARIABLE 
 1251,32: VARIABLE
 
70 ; 
 1251,32: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1252,1: typedef
 1252,9: unsigned
 1252,18: short
 1252,24: int
 
54 unsigned 
 1252,9: unsigned
 
106 short 
 1252,18: short
 
106 int 
 1252,24: int
 
6 NAME VARIABLE 
 1252,28: ushort
 1252,34: VARIABLE
 
65 VARIABLE 
 1252,34: VARIABLE
 
70 ; 
 1252,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1253,1: typedef
 1253,9: unsigned
 1253,18: int
 
54 unsigned 
 1253,9: unsigned
 
106 int 
 1253,18: int
 
6 NAME VARIABLE 
 1253,22: uint
 1253,26: VARIABLE
 
65 VARIABLE 
 1253,26: VARIABLE
 
70 ; 
 1253,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1260,1: typedef
 1260,9: __int8_t
 1260,17: TYPE
 
54 NAME TYPE 
 1260,9: __int8_t
 1260,17: TYPE
 
26 TYPE 
 1260,17: TYPE
 
6 NAME VARIABLE 
 1260,18: int8_t
 1260,24: VARIABLE
 
65 VARIABLE 
 1260,24: VARIABLE
 
70 ; 
 1260,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1261,1: typedef
 1261,9: __int16_t
 1261,18: TYPE
 
54 NAME TYPE 
 1261,9: __int16_t
 1261,18: TYPE
 
26 TYPE 
 1261,18: TYPE
 
6 NAME VARIABLE 
 1261,19: int16_t
 1261,26: VARIABLE
 
65 VARIABLE 
 1261,26: VARIABLE
 
70 ; 
 1261,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1262,1: typedef
 1262,9: __int32_t
 1262,18: TYPE
 
54 NAME TYPE 
 1262,9: __int32_t
 1262,18: TYPE
 
26 TYPE 
 1262,18: TYPE
 
6 NAME VARIABLE 
 1262,19: int32_t
 1262,26: VARIABLE
 
65 VARIABLE 
 1262,26: VARIABLE
 
70 ; 
 1262,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1263,1: typedef
 1263,9: __int64_t
 1263,18: TYPE
 
54 NAME TYPE 
 1263,9: __int64_t
 1263,18: TYPE
 
26 TYPE 
 1263,18: TYPE
 
6 NAME VARIABLE 
 1263,19: int64_t
 1263,26: VARIABLE
 
65 VARIABLE 
 1263,26: VARIABLE
 
70 ; 
 1263,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1267,1: typedef
 1267,9: __uint8_t
 1267,18: TYPE
 
54 NAME TYPE 
 1267,9: __uint8_t
 1267,18: TYPE
 
26 TYPE 
 1267,18: TYPE
 
6 NAME VARIABLE 
 1267,19: u_int8_t
 1267,27: VARIABLE
 
65 VARIABLE 
 1267,27: VARIABLE
 
70 ; 
 1267,27: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1268,1: typedef
 1268,9: __uint16_t
 1268,19: TYPE
 
54 NAME TYPE 
 1268,9: __uint16_t
 1268,19: TYPE
 
26 TYPE 
 1268,19: TYPE
 
6 NAME VARIABLE 
 1268,20: u_int16_t
 1268,29: VARIABLE
 
65 VARIABLE 
 1268,29: VARIABLE
 
70 ; 
 1268,29: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1269,1: typedef
 1269,9: __uint32_t
 1269,19: TYPE
 
54 NAME TYPE 
 1269,9: __uint32_t
 1269,19: TYPE
 
26 TYPE 
 1269,19: TYPE
 
6 NAME VARIABLE 
 1269,20: u_int32_t
 1269,29: VARIABLE
 
65 VARIABLE 
 1269,29: VARIABLE
 
70 ; 
 1269,29: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1270,1: typedef
 1270,9: __uint64_t
 1270,19: TYPE
 
54 NAME TYPE 
 1270,9: __uint64_t
 1270,19: TYPE
 
26 TYPE 
 1270,19: TYPE
 
6 NAME VARIABLE 
 1270,20: u_int64_t
 1270,29: VARIABLE
 
65 VARIABLE 
 1270,29: VARIABLE
 
70 ; 
 1270,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1273,1: typedef
 1273,9: int
 
54 int 
 1273,9: int
 
6 NAME VARIABLE 
 1273,13: register_t
 1273,23: VARIABLE
 
65 VARIABLE 
 1273,23: VARIABLE
 
70 ; 
 1273,24: ;
 
23 static 
 1285,1: static
 
8 NAME TYPE 
 1285,9: __uint16_t
 1285,19: TYPE
 
26 TYPE 
 1285,19: TYPE
 
5 NAME VARIABLE 
 1286,1: __bswap_16
 1286,11: VARIABLE
 
65 VARIABLE 
 1286,11: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1286,12: (
 1286,13: __uint16_t
 1286,23: TYPE
 1286,24: __bsx
 1286,29: VARIABLE
 1286,29: )
 
186 NAME TYPE 
 1286,13: __uint16_t
 1286,23: TYPE
 
65 TYPE 
 1286,23: TYPE
 
298 NAME VARIABLE 
 1286,24: __bsx
 1286,29: VARIABLE
 
65 VARIABLE 
 1286,29: VARIABLE
 
187 ) 
 1286,29: )
 
94 { option_block_item_list } 
 1287,1: {
 1289,3: return
 1289,10: __builtin_bswap16
 1289,27: VARIABLE
 1289,28: (
 1289,29: __bsx
 1289,34: VARIABLE
 1289,34: )
 1289,35: ;
 1293,1: }
 
201 return option_expression ; 
 1289,3: return
 1289,10: __builtin_bswap16
 1289,27: VARIABLE
 1289,28: (
 1289,29: __bsx
 1289,34: VARIABLE
 1289,34: )
 1289,35: ;
 
338 NAME VARIABLE 
 1289,10: __builtin_bswap16
 1289,27: VARIABLE
 
179 VARIABLE 
 1289,27: VARIABLE
 
147 ( option_argument_expression_list ) 
 1289,28: (
 1289,29: __bsx
 1289,34: VARIABLE
 1289,34: )
 
235 NAME VARIABLE 
 1289,29: __bsx
 1289,34: VARIABLE
 
179 VARIABLE 
 1289,34: VARIABLE
 
351 ) 
 1289,34: )
 
415 ; 
 1289,35: ;
 
201 } 
 1293,1: }
 
23 static 
 1300,1: static
 
8 NAME TYPE 
 1300,9: __uint32_t
 1300,19: TYPE
 
26 TYPE 
 1300,19: TYPE
 
5 NAME VARIABLE 
 1301,1: __bswap_32
 1301,11: VARIABLE
 
65 VARIABLE 
 1301,11: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1301,12: (
 1301,13: __uint32_t
 1301,23: TYPE
 1301,24: __bsx
 1301,29: VARIABLE
 1301,29: )
 
186 NAME TYPE 
 1301,13: __uint32_t
 1301,23: TYPE
 
65 TYPE 
 1301,23: TYPE
 
298 NAME VARIABLE 
 1301,24: __bsx
 1301,29: VARIABLE
 
65 VARIABLE 
 1301,29: VARIABLE
 
187 ) 
 1301,29: )
 
94 { option_block_item_list } 
 1302,1: {
 1304,3: return
 1304,10: __builtin_bswap32
 1304,27: VARIABLE
 1304,28: (
 1304,29: __bsx
 1304,34: VARIABLE
 1304,34: )
 1304,35: ;
 1308,1: }
 
201 return option_expression ; 
 1304,3: return
 1304,10: __builtin_bswap32
 1304,27: VARIABLE
 1304,28: (
 1304,29: __bsx
 1304,34: VARIABLE
 1304,34: )
 1304,35: ;
 
338 NAME VARIABLE 
 1304,10: __builtin_bswap32
 1304,27: VARIABLE
 
179 VARIABLE 
 1304,27: VARIABLE
 
147 ( option_argument_expression_list ) 
 1304,28: (
 1304,29: __bsx
 1304,34: VARIABLE
 1304,34: )
 
235 NAME VARIABLE 
 1304,29: __bsx
 1304,34: VARIABLE
 
179 VARIABLE 
 1304,34: VARIABLE
 
351 ) 
 1304,34: )
 
415 ; 
 1304,35: ;
 
201 } 
 1308,1: }
 
23 static 
 1310,2: static
 
8 NAME TYPE 
 1310,10: __uint64_t
 1310,20: TYPE
 
26 TYPE 
 1310,20: TYPE
 
5 NAME VARIABLE 
 1311,1: __bswap_64
 1311,11: VARIABLE
 
65 VARIABLE 
 1311,11: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1311,12: (
 1311,13: __uint64_t
 1311,23: TYPE
 1311,24: __bsx
 1311,29: VARIABLE
 1311,29: )
 
186 NAME TYPE 
 1311,13: __uint64_t
 1311,23: TYPE
 
65 TYPE 
 1311,23: TYPE
 
298 NAME VARIABLE 
 1311,24: __bsx
 1311,29: VARIABLE
 
65 VARIABLE 
 1311,29: VARIABLE
 
187 ) 
 1311,29: )
 
94 { option_block_item_list } 
 1312,1: {
 1314,3: return
 1314,10: __builtin_bswap64
 1314,27: VARIABLE
 1314,28: (
 1314,29: __bsx
 1314,34: VARIABLE
 1314,34: )
 1314,35: ;
 1318,1: }
 
201 return option_expression ; 
 1314,3: return
 1314,10: __builtin_bswap64
 1314,27: VARIABLE
 1314,28: (
 1314,29: __bsx
 1314,34: VARIABLE
 1314,34: )
 1314,35: ;
 
338 NAME VARIABLE 
 1314,10: __builtin_bswap64
 1314,27: VARIABLE
 
179 VARIABLE 
 1314,27: VARIABLE
 
147 ( option_argument_expression_list ) 
 1314,28: (
 1314,29: __bsx
 1314,34: VARIABLE
 1314,34: )
 
235 NAME VARIABLE 
 1314,29: __bsx
 1314,34: VARIABLE
 
179 VARIABLE 
 1314,34: VARIABLE
 
351 ) 
 1314,34: )
 
415 ; 
 1314,35: ;
 
201 } 
 1318,1: }
 
23 static 
 1322,1: static
 
8 NAME TYPE 
 1322,9: __uint16_t
 1322,19: TYPE
 
26 TYPE 
 1322,19: TYPE
 
5 NAME VARIABLE 
 1323,1: __uint16_identity
 1323,18: VARIABLE
 
65 VARIABLE 
 1323,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1323,19: (
 1323,20: __uint16_t
 1323,30: TYPE
 1323,31: __x
 1323,34: VARIABLE
 1323,34: )
 
186 NAME TYPE 
 1323,20: __uint16_t
 1323,30: TYPE
 
65 TYPE 
 1323,30: TYPE
 
298 NAME VARIABLE 
 1323,31: __x
 1323,34: VARIABLE
 
65 VARIABLE 
 1323,34: VARIABLE
 
187 ) 
 1323,34: )
 
94 { option_block_item_list } 
 1324,1: {
 1325,3: return
 1325,10: __x
 1325,13: VARIABLE
 1325,13: ;
 1326,1: }
 
201 return option_expression ; 
 1325,3: return
 1325,10: __x
 1325,13: VARIABLE
 1325,13: ;
 
338 NAME VARIABLE 
 1325,10: __x
 1325,13: VARIABLE
 
179 VARIABLE 
 1325,13: VARIABLE
 
415 ; 
 1325,13: ;
 
201 } 
 1326,1: }
 
23 static 
 1328,1: static
 
8 NAME TYPE 
 1328,9: __uint32_t
 1328,19: TYPE
 
26 TYPE 
 1328,19: TYPE
 
5 NAME VARIABLE 
 1329,1: __uint32_identity
 1329,18: VARIABLE
 
65 VARIABLE 
 1329,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1329,19: (
 1329,20: __uint32_t
 1329,30: TYPE
 1329,31: __x
 1329,34: VARIABLE
 1329,34: )
 
186 NAME TYPE 
 1329,20: __uint32_t
 1329,30: TYPE
 
65 TYPE 
 1329,30: TYPE
 
298 NAME VARIABLE 
 1329,31: __x
 1329,34: VARIABLE
 
65 VARIABLE 
 1329,34: VARIABLE
 
187 ) 
 1329,34: )
 
94 { option_block_item_list } 
 1330,1: {
 1331,3: return
 1331,10: __x
 1331,13: VARIABLE
 1331,13: ;
 1332,1: }
 
201 return option_expression ; 
 1331,3: return
 1331,10: __x
 1331,13: VARIABLE
 1331,13: ;
 
338 NAME VARIABLE 
 1331,10: __x
 1331,13: VARIABLE
 
179 VARIABLE 
 1331,13: VARIABLE
 
415 ; 
 1331,13: ;
 
201 } 
 1332,1: }
 
23 static 
 1334,1: static
 
8 NAME TYPE 
 1334,9: __uint64_t
 1334,19: TYPE
 
26 TYPE 
 1334,19: TYPE
 
5 NAME VARIABLE 
 1335,1: __uint64_identity
 1335,18: VARIABLE
 
65 VARIABLE 
 1335,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1335,19: (
 1335,20: __uint64_t
 1335,30: TYPE
 1335,31: __x
 1335,34: VARIABLE
 1335,34: )
 
186 NAME TYPE 
 1335,20: __uint64_t
 1335,30: TYPE
 
65 TYPE 
 1335,30: TYPE
 
298 NAME VARIABLE 
 1335,31: __x
 1335,34: VARIABLE
 
65 VARIABLE 
 1335,34: VARIABLE
 
187 ) 
 1335,34: )
 
94 { option_block_item_list } 
 1336,1: {
 1337,3: return
 1337,10: __x
 1337,13: VARIABLE
 1337,13: ;
 1338,1: }
 
201 return option_expression ; 
 1337,3: return
 1337,10: __x
 1337,13: VARIABLE
 1337,13: ;
 
338 NAME VARIABLE 
 1337,10: __x
 1337,13: VARIABLE
 
179 VARIABLE 
 1337,13: VARIABLE
 
415 ; 
 1337,13: ;
 
201 } 
 1338,1: }
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1358,1: typedef
 1358,9: struct
 1359,1: {
 1360,3: unsigned
 1360,12: long
 1360,17: int
 1360,21: __val
 1360,26: VARIABLE
 1360,26: [
 1360,27: (
 1360,28: 1024
 1360,33: /
 1360,35: (
 1360,36: 8
 1360,38: *
 1360,40: sizeof
 1360,47: (
 1360,48: unsigned
 1360,57: long
 1360,62: int
 1360,65: )
 1360,66: )
 1360,67: )
 1360,68: ]
 1360,69: ;
 1361,1: }
 
54 struct 
 1358,9: struct
 
89 { struct_declaration_list } 
 1359,1: {
 1360,3: unsigned
 1360,12: long
 1360,17: int
 1360,21: __val
 1360,26: VARIABLE
 1360,26: [
 1360,27: (
 1360,28: 1024
 1360,33: /
 1360,35: (
 1360,36: 8
 1360,38: *
 1360,40: sizeof
 1360,47: (
 1360,48: unsigned
 1360,57: long
 1360,62: int
 1360,65: )
 1360,66: )
 1360,67: )
 1360,68: ]
 1360,69: ;
 1361,1: }
 
126 unsigned 
 1360,3: unsigned
 
135 long 
 1360,12: long
 
135 int 
 1360,17: int
 
200 NAME VARIABLE 
 1360,21: __val
 1360,26: VARIABLE
 
65 VARIABLE 
 1360,26: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1360,26: [
 1360,27: (
 1360,28: 1024
 1360,33: /
 1360,35: (
 1360,36: 8
 1360,38: *
 1360,40: sizeof
 1360,47: (
 1360,48: unsigned
 1360,57: long
 1360,62: int
 1360,65: )
 1360,66: )
 1360,67: )
 1360,68: ]
 
188 ( expression ) 
 1360,27: (
 1360,28: 1024
 1360,33: /
 1360,35: (
 1360,36: 8
 1360,38: *
 1360,40: sizeof
 1360,47: (
 1360,48: unsigned
 1360,57: long
 1360,62: int
 1360,65: )
 1360,66: )
 1360,67: )
 
165 CONSTANT 
 1360,28: 1024
 
151 / 
 1360,33: /
 
242 ( expression ) 
 1360,35: (
 1360,36: 8
 1360,38: *
 1360,40: sizeof
 1360,47: (
 1360,48: unsigned
 1360,57: long
 1360,62: int
 1360,65: )
 1360,66: )
 
165 CONSTANT 
 1360,36: 8
 
151 * 
 1360,38: *
 
242 sizeof ( type_name ) 
 1360,40: sizeof
 1360,47: (
 1360,48: unsigned
 1360,57: long
 1360,62: int
 1360,65: )
 
170 ( type_name ) 
 1360,47: (
 1360,48: unsigned
 1360,57: long
 1360,62: int
 1360,65: )
 
276 unsigned 
 1360,48: unsigned
 
135 long 
 1360,57: long
 
135 int 
 1360,62: int
 
373 ) 
 1360,65: )
 
267 ) 
 1360,66: )
 
267 ) 
 1360,67: )
 
305 ] 
 1360,68: ]
 
313 ; 
 1360,69: ;
 
198 } 
 1361,1: }
 
6 NAME VARIABLE 
 1361,3: __sigset_t
 1361,13: VARIABLE
 
65 VARIABLE 
 1361,13: VARIABLE
 
70 ; 
 1361,13: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1365,1: typedef
 1365,9: __sigset_t
 1365,19: TYPE
 
54 NAME TYPE 
 1365,9: __sigset_t
 1365,19: TYPE
 
26 TYPE 
 1365,19: TYPE
 
6 NAME VARIABLE 
 1365,20: sigset_t
 1365,28: VARIABLE
 
65 VARIABLE 
 1365,28: VARIABLE
 
70 ; 
 1365,28: ;
 
23 struct 
 1378,1: struct
 
22 NAME VARIABLE 
 1378,8: timeval
 1378,15: VARIABLE
 
65 VARIABLE 
 1378,15: VARIABLE
 
89 { struct_declaration_list } 
 1379,1: {
 1384,3: __time_t
 1384,11: TYPE
 1384,12: tv_sec
 1384,18: VARIABLE
 1384,18: ;
 1385,3: __suseconds_t
 1385,16: TYPE
 1385,17: tv_usec
 1385,24: VARIABLE
 1385,24: ;
 1387,1: }
 
126 NAME TYPE 
 1384,3: __time_t
 1384,11: TYPE
 
26 TYPE 
 1384,11: TYPE
 
200 NAME VARIABLE 
 1384,12: tv_sec
 1384,18: VARIABLE
 
65 VARIABLE 
 1384,18: VARIABLE
 
313 ; 
 1384,18: ;
 
198 NAME TYPE 
 1385,3: __suseconds_t
 1385,16: TYPE
 
26 TYPE 
 1385,16: TYPE
 
200 NAME VARIABLE 
 1385,17: tv_usec
 1385,24: VARIABLE
 
65 VARIABLE 
 1385,24: VARIABLE
 
313 ; 
 1385,24: ;
 
198 } 
 1387,1: }
 
60 ; 
 1387,2: ;
 
23 struct 
 1392,1: struct
 
22 NAME VARIABLE 
 1392,8: timespec
 1392,16: VARIABLE
 
65 VARIABLE 
 1392,16: VARIABLE
 
89 { struct_declaration_list } 
 1393,1: {
 1397,3: __time_t
 1397,11: TYPE
 1397,12: tv_sec
 1397,18: VARIABLE
 1397,18: ;
 1402,3: __syscall_slong_t
 1402,20: TYPE
 1402,21: tv_nsec
 1402,28: VARIABLE
 1402,28: ;
 1404,1: }
 
126 NAME TYPE 
 1397,3: __time_t
 1397,11: TYPE
 
26 TYPE 
 1397,11: TYPE
 
200 NAME VARIABLE 
 1397,12: tv_sec
 1397,18: VARIABLE
 
65 VARIABLE 
 1397,18: VARIABLE
 
313 ; 
 1397,18: ;
 
198 NAME TYPE 
 1402,3: __syscall_slong_t
 1402,20: TYPE
 
26 TYPE 
 1402,20: TYPE
 
200 NAME VARIABLE 
 1402,21: tv_nsec
 1402,28: VARIABLE
 
65 VARIABLE 
 1402,28: VARIABLE
 
313 ; 
 1402,28: ;
 
198 } 
 1404,1: }
 
60 ; 
 1404,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1409,1: typedef
 1409,9: __suseconds_t
 1409,22: TYPE
 
54 NAME TYPE 
 1409,9: __suseconds_t
 1409,22: TYPE
 
26 TYPE 
 1409,22: TYPE
 
6 NAME VARIABLE 
 1409,23: suseconds_t
 1409,34: VARIABLE
 
65 VARIABLE 
 1409,34: VARIABLE
 
70 ; 
 1409,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1415,1: typedef
 1415,9: long
 1415,14: int
 
54 long 
 1415,9: long
 
106 int 
 1415,14: int
 
6 NAME VARIABLE 
 1415,18: __fd_mask
 1415,27: VARIABLE
 
65 VARIABLE 
 1415,27: VARIABLE
 
70 ; 
 1415,27: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1417,1: typedef
 1417,9: struct
 1418,3: {
 1425,5: __fd_mask
 1425,14: TYPE
 1425,15: __fds_bits
 1425,25: VARIABLE
 1425,25: [
 1425,26: 1024
 1425,31: /
 1425,33: (
 1425,34: 8
 1425,36: *
 1425,38: (
 1425,39: int
 1425,42: )
 1425,44: sizeof
 1425,51: (
 1425,52: __fd_mask
 1425,61: TYPE
 1425,61: )
 1425,62: )
 1425,63: ]
 1425,64: ;
 1428,3: }
 
54 struct 
 1417,9: struct
 
89 { struct_declaration_list } 
 1418,3: {
 1425,5: __fd_mask
 1425,14: TYPE
 1425,15: __fds_bits
 1425,25: VARIABLE
 1425,25: [
 1425,26: 1024
 1425,31: /
 1425,33: (
 1425,34: 8
 1425,36: *
 1425,38: (
 1425,39: int
 1425,42: )
 1425,44: sizeof
 1425,51: (
 1425,52: __fd_mask
 1425,61: TYPE
 1425,61: )
 1425,62: )
 1425,63: ]
 1425,64: ;
 1428,3: }
 
126 NAME TYPE 
 1425,5: __fd_mask
 1425,14: TYPE
 
26 TYPE 
 1425,14: TYPE
 
200 NAME VARIABLE 
 1425,15: __fds_bits
 1425,25: VARIABLE
 
65 VARIABLE 
 1425,25: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1425,25: [
 1425,26: 1024
 1425,31: /
 1425,33: (
 1425,34: 8
 1425,36: *
 1425,38: (
 1425,39: int
 1425,42: )
 1425,44: sizeof
 1425,51: (
 1425,52: __fd_mask
 1425,61: TYPE
 1425,61: )
 1425,62: )
 1425,63: ]
 
188 CONSTANT 
 1425,26: 1024
 
151 / 
 1425,31: /
 
242 ( expression ) 
 1425,33: (
 1425,34: 8
 1425,36: *
 1425,38: (
 1425,39: int
 1425,42: )
 1425,44: sizeof
 1425,51: (
 1425,52: __fd_mask
 1425,61: TYPE
 1425,61: )
 1425,62: )
 
165 CONSTANT 
 1425,34: 8
 
151 * 
 1425,36: *
 
242 ( type_name ) cast_expression 
 1425,38: (
 1425,39: int
 1425,42: )
 1425,44: sizeof
 1425,51: (
 1425,52: __fd_mask
 1425,61: TYPE
 1425,61: )
 
165 int 
 1425,39: int
 
269 ) cast_expression 
 1425,42: )
 1425,44: sizeof
 1425,51: (
 1425,52: __fd_mask
 1425,61: TYPE
 1425,61: )
 
369 sizeof ( type_name ) 
 1425,44: sizeof
 1425,51: (
 1425,52: __fd_mask
 1425,61: TYPE
 1425,61: )
 
170 ( type_name ) 
 1425,51: (
 1425,52: __fd_mask
 1425,61: TYPE
 1425,61: )
 
276 NAME TYPE 
 1425,52: __fd_mask
 1425,61: TYPE
 
65 TYPE 
 1425,61: TYPE
 
373 ) 
 1425,61: )
 
267 ) 
 1425,62: )
 
305 ] 
 1425,63: ]
 
313 ; 
 1425,64: ;
 
198 } 
 1428,3: }
 
6 NAME VARIABLE 
 1428,5: fd_set
 1428,11: VARIABLE
 
65 VARIABLE 
 1428,11: VARIABLE
 
70 ; 
 1428,11: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1435,1: typedef
 1435,9: __fd_mask
 1435,18: TYPE
 
54 NAME TYPE 
 1435,9: __fd_mask
 1435,18: TYPE
 
26 TYPE 
 1435,18: TYPE
 
6 NAME VARIABLE 
 1435,19: fd_mask
 1435,26: VARIABLE
 
65 VARIABLE 
 1435,26: VARIABLE
 
70 ; 
 1435,26: ;
 
23 extern 
 1439,1: extern
 
8 int 
 1439,8: int
 
5 NAME VARIABLE 
 1439,12: select
 1439,18: VARIABLE
 
65 VARIABLE 
 1439,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1439,19: (
 1439,20: int
 1439,24: __nfds
 1439,30: VARIABLE
 1439,30: ,
 1439,32: fd_set
 1439,38: TYPE
 1439,39: *
 1439,41: __readfds
 1439,50: VARIABLE
 1439,50: ,
 1440,6: fd_set
 1440,12: TYPE
 1440,13: *
 1440,15: __writefds
 1440,25: VARIABLE
 1440,25: ,
 1441,6: fd_set
 1441,12: TYPE
 1441,13: *
 1441,15: __exceptfds
 1441,26: VARIABLE
 1441,26: ,
 1442,6: struct
 1442,13: timeval
 1442,20: VARIABLE
 1442,21: *
 1442,23: __timeout
 1442,32: VARIABLE
 1442,32: )
 
186 int 
 1439,20: int
 
298 NAME VARIABLE 
 1439,24: __nfds
 1439,30: VARIABLE
 
65 VARIABLE 
 1439,30: VARIABLE
 
300 , parameter_declaration 
 1439,30: ,
 1439,32: fd_set
 1439,38: TYPE
 1439,39: *
 1439,41: __readfds
 1439,50: VARIABLE
 
391 NAME TYPE 
 1439,32: fd_set
 1439,38: TYPE
 
26 TYPE 
 1439,38: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1439,39: *
 
386 NAME VARIABLE 
 1439,41: __readfds
 1439,50: VARIABLE
 
65 VARIABLE 
 1439,50: VARIABLE
 
300 , parameter_declaration 
 1439,50: ,
 1440,6: fd_set
 1440,12: TYPE
 1440,13: *
 1440,15: __writefds
 1440,25: VARIABLE
 
391 NAME TYPE 
 1440,6: fd_set
 1440,12: TYPE
 
26 TYPE 
 1440,12: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1440,13: *
 
386 NAME VARIABLE 
 1440,15: __writefds
 1440,25: VARIABLE
 
65 VARIABLE 
 1440,25: VARIABLE
 
300 , parameter_declaration 
 1440,25: ,
 1441,6: fd_set
 1441,12: TYPE
 1441,13: *
 1441,15: __exceptfds
 1441,26: VARIABLE
 
391 NAME TYPE 
 1441,6: fd_set
 1441,12: TYPE
 
26 TYPE 
 1441,12: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1441,13: *
 
386 NAME VARIABLE 
 1441,15: __exceptfds
 1441,26: VARIABLE
 
65 VARIABLE 
 1441,26: VARIABLE
 
300 , parameter_declaration 
 1441,26: ,
 1442,6: struct
 1442,13: timeval
 1442,20: VARIABLE
 1442,21: *
 1442,23: __timeout
 1442,32: VARIABLE
 
391 struct 
 1442,6: struct
 
22 NAME VARIABLE 
 1442,13: timeval
 1442,20: VARIABLE
 
65 VARIABLE 
 1442,20: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1442,21: *
 
386 NAME VARIABLE 
 1442,23: __timeout
 1442,32: VARIABLE
 
65 VARIABLE 
 1442,32: VARIABLE
 
187 ) 
 1442,32: )
 
60 ; 
 1442,33: ;
 
23 extern 
 1444,1: extern
 
8 int 
 1444,8: int
 
5 NAME VARIABLE 
 1444,12: pselect
 1444,19: VARIABLE
 
65 VARIABLE 
 1444,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1444,20: (
 1444,21: int
 1444,25: __nfds
 1444,31: VARIABLE
 1444,31: ,
 1444,33: fd_set
 1444,39: TYPE
 1444,40: *
 1444,42: __readfds
 1444,51: VARIABLE
 1444,51: ,
 1445,7: fd_set
 1445,13: TYPE
 1445,14: *
 1445,16: __writefds
 1445,26: VARIABLE
 1445,26: ,
 1446,7: fd_set
 1446,13: TYPE
 1446,14: *
 1446,16: __exceptfds
 1446,27: VARIABLE
 1446,27: ,
 1447,7: const
 1447,13: struct
 1447,20: timespec
 1447,28: VARIABLE
 1447,29: *
 1447,31: __timeout
 1447,40: VARIABLE
 1447,40: ,
 1448,7: const
 1448,13: __sigset_t
 1448,23: TYPE
 1448,24: *
 1448,26: __sigmask
 1448,35: VARIABLE
 1448,35: )
 
186 int 
 1444,21: int
 
298 NAME VARIABLE 
 1444,25: __nfds
 1444,31: VARIABLE
 
65 VARIABLE 
 1444,31: VARIABLE
 
300 , parameter_declaration 
 1444,31: ,
 1444,33: fd_set
 1444,39: TYPE
 1444,40: *
 1444,42: __readfds
 1444,51: VARIABLE
 
391 NAME TYPE 
 1444,33: fd_set
 1444,39: TYPE
 
26 TYPE 
 1444,39: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1444,40: *
 
386 NAME VARIABLE 
 1444,42: __readfds
 1444,51: VARIABLE
 
65 VARIABLE 
 1444,51: VARIABLE
 
300 , parameter_declaration 
 1444,51: ,
 1445,7: fd_set
 1445,13: TYPE
 1445,14: *
 1445,16: __writefds
 1445,26: VARIABLE
 
391 NAME TYPE 
 1445,7: fd_set
 1445,13: TYPE
 
26 TYPE 
 1445,13: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1445,14: *
 
386 NAME VARIABLE 
 1445,16: __writefds
 1445,26: VARIABLE
 
65 VARIABLE 
 1445,26: VARIABLE
 
300 , parameter_declaration 
 1445,26: ,
 1446,7: fd_set
 1446,13: TYPE
 1446,14: *
 1446,16: __exceptfds
 1446,27: VARIABLE
 
391 NAME TYPE 
 1446,7: fd_set
 1446,13: TYPE
 
26 TYPE 
 1446,13: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1446,14: *
 
386 NAME VARIABLE 
 1446,16: __exceptfds
 1446,27: VARIABLE
 
65 VARIABLE 
 1446,27: VARIABLE
 
300 , parameter_declaration 
 1446,27: ,
 1447,7: const
 1447,13: struct
 1447,20: timespec
 1447,28: VARIABLE
 1447,29: *
 1447,31: __timeout
 1447,40: VARIABLE
 
391 const 
 1447,7: const
 
103 struct 
 1447,13: struct
 
22 NAME VARIABLE 
 1447,20: timespec
 1447,28: VARIABLE
 
65 VARIABLE 
 1447,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1447,29: *
 
386 NAME VARIABLE 
 1447,31: __timeout
 1447,40: VARIABLE
 
65 VARIABLE 
 1447,40: VARIABLE
 
300 , parameter_declaration 
 1447,40: ,
 1448,7: const
 1448,13: __sigset_t
 1448,23: TYPE
 1448,24: *
 1448,26: __sigmask
 1448,35: VARIABLE
 
391 const 
 1448,7: const
 
103 NAME TYPE 
 1448,13: __sigset_t
 1448,23: TYPE
 
26 TYPE 
 1448,23: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1448,24: *
 
386 NAME VARIABLE 
 1448,26: __sigmask
 1448,35: VARIABLE
 
65 VARIABLE 
 1448,35: VARIABLE
 
187 ) 
 1448,35: )
 
60 ; 
 1448,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1457,1: typedef
 1457,9: __blksize_t
 1457,20: TYPE
 
54 NAME TYPE 
 1457,9: __blksize_t
 1457,20: TYPE
 
26 TYPE 
 1457,20: TYPE
 
6 NAME VARIABLE 
 1457,21: blksize_t
 1457,30: VARIABLE
 
65 VARIABLE 
 1457,30: VARIABLE
 
70 ; 
 1457,30: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1464,1: typedef
 1464,9: __blkcnt_t
 1464,19: TYPE
 
54 NAME TYPE 
 1464,9: __blkcnt_t
 1464,19: TYPE
 
26 TYPE 
 1464,19: TYPE
 
6 NAME VARIABLE 
 1464,20: blkcnt_t
 1464,28: VARIABLE
 
65 VARIABLE 
 1464,28: VARIABLE
 
70 ; 
 1464,28: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1468,1: typedef
 1468,9: __fsblkcnt_t
 1468,21: TYPE
 
54 NAME TYPE 
 1468,9: __fsblkcnt_t
 1468,21: TYPE
 
26 TYPE 
 1468,21: TYPE
 
6 NAME VARIABLE 
 1468,22: fsblkcnt_t
 1468,32: VARIABLE
 
65 VARIABLE 
 1468,32: VARIABLE
 
70 ; 
 1468,32: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1472,1: typedef
 1472,9: __fsfilcnt_t
 1472,21: TYPE
 
54 NAME TYPE 
 1472,9: __fsfilcnt_t
 1472,21: TYPE
 
26 TYPE 
 1472,21: TYPE
 
6 NAME VARIABLE 
 1472,22: fsfilcnt_t
 1472,32: VARIABLE
 
65 VARIABLE 
 1472,32: VARIABLE
 
70 ; 
 1472,32: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1486,1: typedef
 1486,9: union
 1487,1: {
 1488,4: unsigned
 1488,13: long
 1488,18: long
 1488,23: int
 1488,27: __value64
 1488,36: VARIABLE
 1488,36: ;
 1489,3: struct
 1490,3: {
 1491,5: unsigned
 1491,14: int
 1491,18: __low
 1491,23: VARIABLE
 1491,23: ;
 1492,5: unsigned
 1492,14: int
 1492,18: __high
 1492,24: VARIABLE
 1492,24: ;
 1493,3: }
 1493,5: __value32
 1493,14: VARIABLE
 1493,14: ;
 1494,1: }
 
54 union 
 1486,9: union
 
89 { struct_declaration_list } 
 1487,1: {
 1488,4: unsigned
 1488,13: long
 1488,18: long
 1488,23: int
 1488,27: __value64
 1488,36: VARIABLE
 1488,36: ;
 1489,3: struct
 1490,3: {
 1491,5: unsigned
 1491,14: int
 1491,18: __low
 1491,23: VARIABLE
 1491,23: ;
 1492,5: unsigned
 1492,14: int
 1492,18: __high
 1492,24: VARIABLE
 1492,24: ;
 1493,3: }
 1493,5: __value32
 1493,14: VARIABLE
 1493,14: ;
 1494,1: }
 
126 unsigned 
 1488,4: unsigned
 
135 long 
 1488,13: long
 
135 long 
 1488,18: long
 
135 int 
 1488,23: int
 
200 NAME VARIABLE 
 1488,27: __value64
 1488,36: VARIABLE
 
65 VARIABLE 
 1488,36: VARIABLE
 
313 ; 
 1488,36: ;
 
198 struct 
 1489,3: struct
 
89 { struct_declaration_list } 
 1490,3: {
 1491,5: unsigned
 1491,14: int
 1491,18: __low
 1491,23: VARIABLE
 1491,23: ;
 1492,5: unsigned
 1492,14: int
 1492,18: __high
 1492,24: VARIABLE
 1492,24: ;
 1493,3: }
 
126 unsigned 
 1491,5: unsigned
 
135 int 
 1491,14: int
 
200 NAME VARIABLE 
 1491,18: __low
 1491,23: VARIABLE
 
65 VARIABLE 
 1491,23: VARIABLE
 
313 ; 
 1491,23: ;
 
198 unsigned 
 1492,5: unsigned
 
135 int 
 1492,14: int
 
200 NAME VARIABLE 
 1492,18: __high
 1492,24: VARIABLE
 
65 VARIABLE 
 1492,24: VARIABLE
 
313 ; 
 1492,24: ;
 
198 } 
 1493,3: }
 
200 NAME VARIABLE 
 1493,5: __value32
 1493,14: VARIABLE
 
65 VARIABLE 
 1493,14: VARIABLE
 
313 ; 
 1493,14: ;
 
198 } 
 1494,1: }
 
6 NAME VARIABLE 
 1494,3: __atomic_wide_counter
 1494,24: VARIABLE
 
65 VARIABLE 
 1494,24: VARIABLE
 
70 ; 
 1494,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1500,1: typedef
 1500,9: struct
 1500,16: __pthread_internal_list
 1500,39: VARIABLE
 1501,1: {
 1502,3: struct
 1502,10: __pthread_internal_list
 1502,33: VARIABLE
 1502,34: *
 1502,35: __prev
 1502,41: VARIABLE
 1502,41: ;
 1503,3: struct
 1503,10: __pthread_internal_list
 1503,33: VARIABLE
 1503,34: *
 1503,35: __next
 1503,41: VARIABLE
 1503,41: ;
 1504,1: }
 
54 struct 
 1500,9: struct
 
22 NAME VARIABLE 
 1500,16: __pthread_internal_list
 1500,39: VARIABLE
 
65 VARIABLE 
 1500,39: VARIABLE
 
89 { struct_declaration_list } 
 1501,1: {
 1502,3: struct
 1502,10: __pthread_internal_list
 1502,33: VARIABLE
 1502,34: *
 1502,35: __prev
 1502,41: VARIABLE
 1502,41: ;
 1503,3: struct
 1503,10: __pthread_internal_list
 1503,33: VARIABLE
 1503,34: *
 1503,35: __next
 1503,41: VARIABLE
 1503,41: ;
 1504,1: }
 
126 struct 
 1502,3: struct
 
22 NAME VARIABLE 
 1502,10: __pthread_internal_list
 1502,33: VARIABLE
 
65 VARIABLE 
 1502,33: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 1502,34: *
 
64 NAME VARIABLE 
 1502,35: __prev
 1502,41: VARIABLE
 
65 VARIABLE 
 1502,41: VARIABLE
 
313 ; 
 1502,41: ;
 
198 struct 
 1503,3: struct
 
22 NAME VARIABLE 
 1503,10: __pthread_internal_list
 1503,33: VARIABLE
 
65 VARIABLE 
 1503,33: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 1503,34: *
 
64 NAME VARIABLE 
 1503,35: __next
 1503,41: VARIABLE
 
65 VARIABLE 
 1503,41: VARIABLE
 
313 ; 
 1503,41: ;
 
198 } 
 1504,1: }
 
6 NAME VARIABLE 
 1504,3: __pthread_list_t
 1504,19: VARIABLE
 
65 VARIABLE 
 1504,19: VARIABLE
 
70 ; 
 1504,19: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1506,1: typedef
 1506,9: struct
 1506,16: __pthread_internal_slist
 1506,40: VARIABLE
 1507,1: {
 1508,3: struct
 1508,10: __pthread_internal_slist
 1508,34: VARIABLE
 1508,35: *
 1508,36: __next
 1508,42: VARIABLE
 1508,42: ;
 1509,1: }
 
54 struct 
 1506,9: struct
 
22 NAME VARIABLE 
 1506,16: __pthread_internal_slist
 1506,40: VARIABLE
 
65 VARIABLE 
 1506,40: VARIABLE
 
89 { struct_declaration_list } 
 1507,1: {
 1508,3: struct
 1508,10: __pthread_internal_slist
 1508,34: VARIABLE
 1508,35: *
 1508,36: __next
 1508,42: VARIABLE
 1508,42: ;
 1509,1: }
 
126 struct 
 1508,3: struct
 
22 NAME VARIABLE 
 1508,10: __pthread_internal_slist
 1508,34: VARIABLE
 
65 VARIABLE 
 1508,34: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 1508,35: *
 
64 NAME VARIABLE 
 1508,36: __next
 1508,42: VARIABLE
 
65 VARIABLE 
 1508,42: VARIABLE
 
313 ; 
 1508,42: ;
 
198 } 
 1509,1: }
 
6 NAME VARIABLE 
 1509,3: __pthread_slist_t
 1509,20: VARIABLE
 
65 VARIABLE 
 1509,20: VARIABLE
 
70 ; 
 1509,20: ;
 
23 struct 
 1513,1: struct
 
22 NAME VARIABLE 
 1513,8: __pthread_mutex_s
 1513,25: VARIABLE
 
65 VARIABLE 
 1513,25: VARIABLE
 
89 { struct_declaration_list } 
 1514,1: {
 1515,3: int
 1515,7: __lock
 1515,13: VARIABLE
 1515,13: ;
 1516,3: unsigned
 1516,12: int
 1516,16: __count
 1516,23: VARIABLE
 1516,23: ;
 1517,3: int
 1517,7: __owner
 1517,14: VARIABLE
 1517,14: ;
 1519,3: unsigned
 1519,12: int
 1519,16: __nusers
 1519,24: VARIABLE
 1519,24: ;
 1523,3: int
 1523,7: __kind
 1523,13: VARIABLE
 1523,13: ;
 1525,3: short
 1525,9: __spins
 1525,16: VARIABLE
 1525,16: ;
 1526,3: short
 1526,9: __elision
 1526,18: VARIABLE
 1526,18: ;
 1527,3: __pthread_list_t
 1527,19: TYPE
 1527,20: __list
 1527,26: VARIABLE
 1527,26: ;
 1529,1: }
 
126 int 
 1515,3: int
 
200 NAME VARIABLE 
 1515,7: __lock
 1515,13: VARIABLE
 
65 VARIABLE 
 1515,13: VARIABLE
 
313 ; 
 1515,13: ;
 
198 unsigned 
 1516,3: unsigned
 
135 int 
 1516,12: int
 
200 NAME VARIABLE 
 1516,16: __count
 1516,23: VARIABLE
 
65 VARIABLE 
 1516,23: VARIABLE
 
313 ; 
 1516,23: ;
 
198 int 
 1517,3: int
 
200 NAME VARIABLE 
 1517,7: __owner
 1517,14: VARIABLE
 
65 VARIABLE 
 1517,14: VARIABLE
 
313 ; 
 1517,14: ;
 
198 unsigned 
 1519,3: unsigned
 
135 int 
 1519,12: int
 
200 NAME VARIABLE 
 1519,16: __nusers
 1519,24: VARIABLE
 
65 VARIABLE 
 1519,24: VARIABLE
 
313 ; 
 1519,24: ;
 
198 int 
 1523,3: int
 
200 NAME VARIABLE 
 1523,7: __kind
 1523,13: VARIABLE
 
65 VARIABLE 
 1523,13: VARIABLE
 
313 ; 
 1523,13: ;
 
198 short 
 1525,3: short
 
200 NAME VARIABLE 
 1525,9: __spins
 1525,16: VARIABLE
 
65 VARIABLE 
 1525,16: VARIABLE
 
313 ; 
 1525,16: ;
 
198 short 
 1526,3: short
 
200 NAME VARIABLE 
 1526,9: __elision
 1526,18: VARIABLE
 
65 VARIABLE 
 1526,18: VARIABLE
 
313 ; 
 1526,18: ;
 
198 NAME TYPE 
 1527,3: __pthread_list_t
 1527,19: TYPE
 
26 TYPE 
 1527,19: TYPE
 
200 NAME VARIABLE 
 1527,20: __list
 1527,26: VARIABLE
 
65 VARIABLE 
 1527,26: VARIABLE
 
313 ; 
 1527,26: ;
 
198 } 
 1529,1: }
 
60 ; 
 1529,2: ;
 
23 struct 
 1534,1: struct
 
22 NAME VARIABLE 
 1534,8: __pthread_rwlock_arch_t
 1534,31: VARIABLE
 
65 VARIABLE 
 1534,31: VARIABLE
 
89 { struct_declaration_list } 
 1535,1: {
 1536,3: unsigned
 1536,12: int
 1536,16: __readers
 1536,25: VARIABLE
 1536,25: ;
 1537,3: unsigned
 1537,12: int
 1537,16: __writers
 1537,25: VARIABLE
 1537,25: ;
 1538,3: unsigned
 1538,12: int
 1538,16: __wrphase_futex
 1538,31: VARIABLE
 1538,31: ;
 1539,3: unsigned
 1539,12: int
 1539,16: __writers_futex
 1539,31: VARIABLE
 1539,31: ;
 1540,3: unsigned
 1540,12: int
 1540,16: __pad3
 1540,22: VARIABLE
 1540,22: ;
 1541,3: unsigned
 1541,12: int
 1541,16: __pad4
 1541,22: VARIABLE
 1541,22: ;
 1543,3: int
 1543,7: __cur_writer
 1543,19: VARIABLE
 1543,19: ;
 1544,3: int
 1544,7: __shared
 1544,15: VARIABLE
 1544,15: ;
 1545,3: signed
 1545,10: char
 1545,15: __rwelision
 1545,26: VARIABLE
 1545,26: ;
 1550,3: unsigned
 1550,12: char
 1550,17: __pad1
 1550,23: VARIABLE
 1550,23: [
 1550,24: 7
 1550,25: ]
 1550,26: ;
 1553,3: unsigned
 1553,12: long
 1553,17: int
 1553,21: __pad2
 1553,27: VARIABLE
 1553,27: ;
 1556,3: unsigned
 1556,12: int
 1556,16: __flags
 1556,23: VARIABLE
 1556,23: ;
 1558,1: }
 
126 unsigned 
 1536,3: unsigned
 
135 int 
 1536,12: int
 
200 NAME VARIABLE 
 1536,16: __readers
 1536,25: VARIABLE
 
65 VARIABLE 
 1536,25: VARIABLE
 
313 ; 
 1536,25: ;
 
198 unsigned 
 1537,3: unsigned
 
135 int 
 1537,12: int
 
200 NAME VARIABLE 
 1537,16: __writers
 1537,25: VARIABLE
 
65 VARIABLE 
 1537,25: VARIABLE
 
313 ; 
 1537,25: ;
 
198 unsigned 
 1538,3: unsigned
 
135 int 
 1538,12: int
 
200 NAME VARIABLE 
 1538,16: __wrphase_futex
 1538,31: VARIABLE
 
65 VARIABLE 
 1538,31: VARIABLE
 
313 ; 
 1538,31: ;
 
198 unsigned 
 1539,3: unsigned
 
135 int 
 1539,12: int
 
200 NAME VARIABLE 
 1539,16: __writers_futex
 1539,31: VARIABLE
 
65 VARIABLE 
 1539,31: VARIABLE
 
313 ; 
 1539,31: ;
 
198 unsigned 
 1540,3: unsigned
 
135 int 
 1540,12: int
 
200 NAME VARIABLE 
 1540,16: __pad3
 1540,22: VARIABLE
 
65 VARIABLE 
 1540,22: VARIABLE
 
313 ; 
 1540,22: ;
 
198 unsigned 
 1541,3: unsigned
 
135 int 
 1541,12: int
 
200 NAME VARIABLE 
 1541,16: __pad4
 1541,22: VARIABLE
 
65 VARIABLE 
 1541,22: VARIABLE
 
313 ; 
 1541,22: ;
 
198 int 
 1543,3: int
 
200 NAME VARIABLE 
 1543,7: __cur_writer
 1543,19: VARIABLE
 
65 VARIABLE 
 1543,19: VARIABLE
 
313 ; 
 1543,19: ;
 
198 int 
 1544,3: int
 
200 NAME VARIABLE 
 1544,7: __shared
 1544,15: VARIABLE
 
65 VARIABLE 
 1544,15: VARIABLE
 
313 ; 
 1544,15: ;
 
198 signed 
 1545,3: signed
 
135 char 
 1545,10: char
 
200 NAME VARIABLE 
 1545,15: __rwelision
 1545,26: VARIABLE
 
65 VARIABLE 
 1545,26: VARIABLE
 
313 ; 
 1545,26: ;
 
198 unsigned 
 1550,3: unsigned
 
135 char 
 1550,12: char
 
200 NAME VARIABLE 
 1550,17: __pad1
 1550,23: VARIABLE
 
65 VARIABLE 
 1550,23: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1550,23: [
 1550,24: 7
 1550,25: ]
 
188 CONSTANT 
 1550,24: 7
 
305 ] 
 1550,25: ]
 
313 ; 
 1550,26: ;
 
198 unsigned 
 1553,3: unsigned
 
135 long 
 1553,12: long
 
135 int 
 1553,17: int
 
200 NAME VARIABLE 
 1553,21: __pad2
 1553,27: VARIABLE
 
65 VARIABLE 
 1553,27: VARIABLE
 
313 ; 
 1553,27: ;
 
198 unsigned 
 1556,3: unsigned
 
135 int 
 1556,12: int
 
200 NAME VARIABLE 
 1556,16: __flags
 1556,23: VARIABLE
 
65 VARIABLE 
 1556,23: VARIABLE
 
313 ; 
 1556,23: ;
 
198 } 
 1558,1: }
 
60 ; 
 1558,2: ;
 
23 struct 
 1564,1: struct
 
22 NAME VARIABLE 
 1564,8: __pthread_cond_s
 1564,24: VARIABLE
 
65 VARIABLE 
 1564,24: VARIABLE
 
89 { struct_declaration_list } 
 1565,1: {
 1566,3: __atomic_wide_counter
 1566,24: TYPE
 1566,25: __wseq
 1566,31: VARIABLE
 1566,31: ;
 1567,3: __atomic_wide_counter
 1567,24: TYPE
 1567,25: __g1_start
 1567,35: VARIABLE
 1567,35: ;
 1568,3: unsigned
 1568,12: int
 1568,16: __g_refs
 1568,24: VARIABLE
 1568,24: [
 1568,25: 2
 1568,26: ]
 1568,28: ;
 1569,3: unsigned
 1569,12: int
 1569,16: __g_size
 1569,24: VARIABLE
 1569,24: [
 1569,25: 2
 1569,26: ]
 1569,27: ;
 1570,3: unsigned
 1570,12: int
 1570,16: __g1_orig_size
 1570,30: VARIABLE
 1570,30: ;
 1571,3: unsigned
 1571,12: int
 1571,16: __wrefs
 1571,23: VARIABLE
 1571,23: ;
 1572,3: unsigned
 1572,12: int
 1572,16: __g_signals
 1572,27: VARIABLE
 1572,27: [
 1572,28: 2
 1572,29: ]
 1572,30: ;
 1573,1: }
 
126 NAME TYPE 
 1566,3: __atomic_wide_counter
 1566,24: TYPE
 
26 TYPE 
 1566,24: TYPE
 
200 NAME VARIABLE 
 1566,25: __wseq
 1566,31: VARIABLE
 
65 VARIABLE 
 1566,31: VARIABLE
 
313 ; 
 1566,31: ;
 
198 NAME TYPE 
 1567,3: __atomic_wide_counter
 1567,24: TYPE
 
26 TYPE 
 1567,24: TYPE
 
200 NAME VARIABLE 
 1567,25: __g1_start
 1567,35: VARIABLE
 
65 VARIABLE 
 1567,35: VARIABLE
 
313 ; 
 1567,35: ;
 
198 unsigned 
 1568,3: unsigned
 
135 int 
 1568,12: int
 
200 NAME VARIABLE 
 1568,16: __g_refs
 1568,24: VARIABLE
 
65 VARIABLE 
 1568,24: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1568,24: [
 1568,25: 2
 1568,26: ]
 
188 CONSTANT 
 1568,25: 2
 
305 ] 
 1568,26: ]
 
313 ; 
 1568,28: ;
 
198 unsigned 
 1569,3: unsigned
 
135 int 
 1569,12: int
 
200 NAME VARIABLE 
 1569,16: __g_size
 1569,24: VARIABLE
 
65 VARIABLE 
 1569,24: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1569,24: [
 1569,25: 2
 1569,26: ]
 
188 CONSTANT 
 1569,25: 2
 
305 ] 
 1569,26: ]
 
313 ; 
 1569,27: ;
 
198 unsigned 
 1570,3: unsigned
 
135 int 
 1570,12: int
 
200 NAME VARIABLE 
 1570,16: __g1_orig_size
 1570,30: VARIABLE
 
65 VARIABLE 
 1570,30: VARIABLE
 
313 ; 
 1570,30: ;
 
198 unsigned 
 1571,3: unsigned
 
135 int 
 1571,12: int
 
200 NAME VARIABLE 
 1571,16: __wrefs
 1571,23: VARIABLE
 
65 VARIABLE 
 1571,23: VARIABLE
 
313 ; 
 1571,23: ;
 
198 unsigned 
 1572,3: unsigned
 
135 int 
 1572,12: int
 
200 NAME VARIABLE 
 1572,16: __g_signals
 1572,27: VARIABLE
 
65 VARIABLE 
 1572,27: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1572,27: [
 1572,28: 2
 1572,29: ]
 
188 CONSTANT 
 1572,28: 2
 
305 ] 
 1572,29: ]
 
313 ; 
 1572,30: ;
 
198 } 
 1573,1: }
 
60 ; 
 1573,2: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1575,1: typedef
 1575,9: unsigned
 1575,18: int
 
54 unsigned 
 1575,9: unsigned
 
106 int 
 1575,18: int
 
6 NAME VARIABLE 
 1575,22: __tss_t
 1575,29: VARIABLE
 
65 VARIABLE 
 1575,29: VARIABLE
 
70 ; 
 1575,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1576,1: typedef
 1576,9: unsigned
 1576,18: long
 1576,23: int
 
54 unsigned 
 1576,9: unsigned
 
106 long 
 1576,18: long
 
106 int 
 1576,23: int
 
6 NAME VARIABLE 
 1576,27: __thrd_t
 1576,35: VARIABLE
 
65 VARIABLE 
 1576,35: VARIABLE
 
70 ; 
 1576,35: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1578,1: typedef
 1578,9: struct
 1579,1: {
 1580,3: int
 1580,7: __data
 1580,13: VARIABLE
 1580,14: ;
 1581,1: }
 
54 struct 
 1578,9: struct
 
89 { struct_declaration_list } 
 1579,1: {
 1580,3: int
 1580,7: __data
 1580,13: VARIABLE
 1580,14: ;
 1581,1: }
 
126 int 
 1580,3: int
 
200 NAME VARIABLE 
 1580,7: __data
 1580,13: VARIABLE
 
65 VARIABLE 
 1580,13: VARIABLE
 
313 ; 
 1580,14: ;
 
198 } 
 1581,1: }
 
6 NAME VARIABLE 
 1581,3: __once_flag
 1581,14: VARIABLE
 
65 VARIABLE 
 1581,14: VARIABLE
 
70 ; 
 1581,14: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1586,1: typedef
 1586,9: unsigned
 1586,18: long
 1586,23: int
 
54 unsigned 
 1586,9: unsigned
 
106 long 
 1586,18: long
 
106 int 
 1586,23: int
 
6 NAME VARIABLE 
 1586,27: pthread_t
 1586,36: VARIABLE
 
65 VARIABLE 
 1586,36: VARIABLE
 
70 ; 
 1586,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1591,1: typedef
 1591,9: union
 1592,1: {
 1593,3: char
 1593,8: __size
 1593,14: VARIABLE
 1593,14: [
 1593,15: 4
 1593,16: ]
 1593,17: ;
 1594,3: int
 1594,7: __align
 1594,14: VARIABLE
 1594,14: ;
 1595,1: }
 
54 union 
 1591,9: union
 
89 { struct_declaration_list } 
 1592,1: {
 1593,3: char
 1593,8: __size
 1593,14: VARIABLE
 1593,14: [
 1593,15: 4
 1593,16: ]
 1593,17: ;
 1594,3: int
 1594,7: __align
 1594,14: VARIABLE
 1594,14: ;
 1595,1: }
 
126 char 
 1593,3: char
 
200 NAME VARIABLE 
 1593,8: __size
 1593,14: VARIABLE
 
65 VARIABLE 
 1593,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1593,14: [
 1593,15: 4
 1593,16: ]
 
188 CONSTANT 
 1593,15: 4
 
305 ] 
 1593,16: ]
 
313 ; 
 1593,17: ;
 
198 int 
 1594,3: int
 
200 NAME VARIABLE 
 1594,7: __align
 1594,14: VARIABLE
 
65 VARIABLE 
 1594,14: VARIABLE
 
313 ; 
 1594,14: ;
 
198 } 
 1595,1: }
 
6 NAME VARIABLE 
 1595,3: pthread_mutexattr_t
 1595,22: VARIABLE
 
65 VARIABLE 
 1595,22: VARIABLE
 
70 ; 
 1595,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1600,1: typedef
 1600,9: union
 1601,1: {
 1602,3: char
 1602,8: __size
 1602,14: VARIABLE
 1602,14: [
 1602,15: 4
 1602,16: ]
 1602,17: ;
 1603,3: int
 1603,7: __align
 1603,14: VARIABLE
 1603,14: ;
 1604,1: }
 
54 union 
 1600,9: union
 
89 { struct_declaration_list } 
 1601,1: {
 1602,3: char
 1602,8: __size
 1602,14: VARIABLE
 1602,14: [
 1602,15: 4
 1602,16: ]
 1602,17: ;
 1603,3: int
 1603,7: __align
 1603,14: VARIABLE
 1603,14: ;
 1604,1: }
 
126 char 
 1602,3: char
 
200 NAME VARIABLE 
 1602,8: __size
 1602,14: VARIABLE
 
65 VARIABLE 
 1602,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1602,14: [
 1602,15: 4
 1602,16: ]
 
188 CONSTANT 
 1602,15: 4
 
305 ] 
 1602,16: ]
 
313 ; 
 1602,17: ;
 
198 int 
 1603,3: int
 
200 NAME VARIABLE 
 1603,7: __align
 1603,14: VARIABLE
 
65 VARIABLE 
 1603,14: VARIABLE
 
313 ; 
 1603,14: ;
 
198 } 
 1604,1: }
 
6 NAME VARIABLE 
 1604,3: pthread_condattr_t
 1604,21: VARIABLE
 
65 VARIABLE 
 1604,21: VARIABLE
 
70 ; 
 1604,21: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1608,1: typedef
 1608,9: unsigned
 1608,18: int
 
54 unsigned 
 1608,9: unsigned
 
106 int 
 1608,18: int
 
6 NAME VARIABLE 
 1608,22: pthread_key_t
 1608,35: VARIABLE
 
65 VARIABLE 
 1608,35: VARIABLE
 
70 ; 
 1608,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1612,1: typedef
 1612,9: int
 
54 int 
 1612,9: int
 
6 NAME VARIABLE 
 1612,13: pthread_once_t
 1612,27: VARIABLE
 
65 VARIABLE 
 1612,27: VARIABLE
 
70 ; 
 1612,27: ;
 
23 union 
 1615,1: union
 
22 NAME VARIABLE 
 1615,7: pthread_attr_t
 1615,21: VARIABLE
 
65 VARIABLE 
 1615,21: VARIABLE
 
89 { struct_declaration_list } 
 1616,1: {
 1617,3: char
 1617,8: __size
 1617,14: VARIABLE
 1617,14: [
 1617,15: 56
 1617,17: ]
 1617,18: ;
 1618,3: long
 1618,8: int
 1618,12: __align
 1618,19: VARIABLE
 1618,19: ;
 1619,1: }
 
126 char 
 1617,3: char
 
200 NAME VARIABLE 
 1617,8: __size
 1617,14: VARIABLE
 
65 VARIABLE 
 1617,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1617,14: [
 1617,15: 56
 1617,17: ]
 
188 CONSTANT 
 1617,15: 56
 
305 ] 
 1617,17: ]
 
313 ; 
 1617,18: ;
 
198 long 
 1618,3: long
 
135 int 
 1618,8: int
 
200 NAME VARIABLE 
 1618,12: __align
 1618,19: VARIABLE
 
65 VARIABLE 
 1618,19: VARIABLE
 
313 ; 
 1618,19: ;
 
198 } 
 1619,1: }
 
60 ; 
 1619,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1621,1: typedef
 1621,9: union
 1621,15: pthread_attr_t
 1621,29: VARIABLE
 
54 union 
 1621,9: union
 
22 NAME VARIABLE 
 1621,15: pthread_attr_t
 1621,29: VARIABLE
 
65 VARIABLE 
 1621,29: VARIABLE
 
6 NAME VARIABLE 
 1621,30: pthread_attr_t
 1621,44: VARIABLE
 
65 VARIABLE 
 1621,44: VARIABLE
 
70 ; 
 1621,44: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1626,1: typedef
 1626,9: union
 1627,1: {
 1628,3: struct
 1628,10: __pthread_mutex_s
 1628,27: VARIABLE
 1628,28: __data
 1628,34: VARIABLE
 1628,34: ;
 1629,3: char
 1629,8: __size
 1629,14: VARIABLE
 1629,14: [
 1629,15: 40
 1629,17: ]
 1629,18: ;
 1630,3: long
 1630,8: int
 1630,12: __align
 1630,19: VARIABLE
 1630,19: ;
 1631,1: }
 
54 union 
 1626,9: union
 
89 { struct_declaration_list } 
 1627,1: {
 1628,3: struct
 1628,10: __pthread_mutex_s
 1628,27: VARIABLE
 1628,28: __data
 1628,34: VARIABLE
 1628,34: ;
 1629,3: char
 1629,8: __size
 1629,14: VARIABLE
 1629,14: [
 1629,15: 40
 1629,17: ]
 1629,18: ;
 1630,3: long
 1630,8: int
 1630,12: __align
 1630,19: VARIABLE
 1630,19: ;
 1631,1: }
 
126 struct 
 1628,3: struct
 
22 NAME VARIABLE 
 1628,10: __pthread_mutex_s
 1628,27: VARIABLE
 
65 VARIABLE 
 1628,27: VARIABLE
 
200 NAME VARIABLE 
 1628,28: __data
 1628,34: VARIABLE
 
65 VARIABLE 
 1628,34: VARIABLE
 
313 ; 
 1628,34: ;
 
198 char 
 1629,3: char
 
200 NAME VARIABLE 
 1629,8: __size
 1629,14: VARIABLE
 
65 VARIABLE 
 1629,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1629,14: [
 1629,15: 40
 1629,17: ]
 
188 CONSTANT 
 1629,15: 40
 
305 ] 
 1629,17: ]
 
313 ; 
 1629,18: ;
 
198 long 
 1630,3: long
 
135 int 
 1630,8: int
 
200 NAME VARIABLE 
 1630,12: __align
 1630,19: VARIABLE
 
65 VARIABLE 
 1630,19: VARIABLE
 
313 ; 
 1630,19: ;
 
198 } 
 1631,1: }
 
6 NAME VARIABLE 
 1631,3: pthread_mutex_t
 1631,18: VARIABLE
 
65 VARIABLE 
 1631,18: VARIABLE
 
70 ; 
 1631,18: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1634,1: typedef
 1634,9: union
 1635,1: {
 1636,3: struct
 1636,10: __pthread_cond_s
 1636,26: VARIABLE
 1636,27: __data
 1636,33: VARIABLE
 1636,33: ;
 1637,3: char
 1637,8: __size
 1637,14: VARIABLE
 1637,14: [
 1637,15: 48
 1637,17: ]
 1637,18: ;
 1638,4: long
 1638,9: long
 1638,14: int
 1638,18: __align
 1638,25: VARIABLE
 1638,25: ;
 1639,1: }
 
54 union 
 1634,9: union
 
89 { struct_declaration_list } 
 1635,1: {
 1636,3: struct
 1636,10: __pthread_cond_s
 1636,26: VARIABLE
 1636,27: __data
 1636,33: VARIABLE
 1636,33: ;
 1637,3: char
 1637,8: __size
 1637,14: VARIABLE
 1637,14: [
 1637,15: 48
 1637,17: ]
 1637,18: ;
 1638,4: long
 1638,9: long
 1638,14: int
 1638,18: __align
 1638,25: VARIABLE
 1638,25: ;
 1639,1: }
 
126 struct 
 1636,3: struct
 
22 NAME VARIABLE 
 1636,10: __pthread_cond_s
 1636,26: VARIABLE
 
65 VARIABLE 
 1636,26: VARIABLE
 
200 NAME VARIABLE 
 1636,27: __data
 1636,33: VARIABLE
 
65 VARIABLE 
 1636,33: VARIABLE
 
313 ; 
 1636,33: ;
 
198 char 
 1637,3: char
 
200 NAME VARIABLE 
 1637,8: __size
 1637,14: VARIABLE
 
65 VARIABLE 
 1637,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1637,14: [
 1637,15: 48
 1637,17: ]
 
188 CONSTANT 
 1637,15: 48
 
305 ] 
 1637,17: ]
 
313 ; 
 1637,18: ;
 
198 long 
 1638,4: long
 
135 long 
 1638,9: long
 
135 int 
 1638,14: int
 
200 NAME VARIABLE 
 1638,18: __align
 1638,25: VARIABLE
 
65 VARIABLE 
 1638,25: VARIABLE
 
313 ; 
 1638,25: ;
 
198 } 
 1639,1: }
 
6 NAME VARIABLE 
 1639,3: pthread_cond_t
 1639,17: VARIABLE
 
65 VARIABLE 
 1639,17: VARIABLE
 
70 ; 
 1639,17: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1645,1: typedef
 1645,9: union
 1646,1: {
 1647,3: struct
 1647,10: __pthread_rwlock_arch_t
 1647,33: VARIABLE
 1647,34: __data
 1647,40: VARIABLE
 1647,40: ;
 1648,3: char
 1648,8: __size
 1648,14: VARIABLE
 1648,14: [
 1648,15: 56
 1648,17: ]
 1648,18: ;
 1649,3: long
 1649,8: int
 1649,12: __align
 1649,19: VARIABLE
 1649,19: ;
 1650,1: }
 
54 union 
 1645,9: union
 
89 { struct_declaration_list } 
 1646,1: {
 1647,3: struct
 1647,10: __pthread_rwlock_arch_t
 1647,33: VARIABLE
 1647,34: __data
 1647,40: VARIABLE
 1647,40: ;
 1648,3: char
 1648,8: __size
 1648,14: VARIABLE
 1648,14: [
 1648,15: 56
 1648,17: ]
 1648,18: ;
 1649,3: long
 1649,8: int
 1649,12: __align
 1649,19: VARIABLE
 1649,19: ;
 1650,1: }
 
126 struct 
 1647,3: struct
 
22 NAME VARIABLE 
 1647,10: __pthread_rwlock_arch_t
 1647,33: VARIABLE
 
65 VARIABLE 
 1647,33: VARIABLE
 
200 NAME VARIABLE 
 1647,34: __data
 1647,40: VARIABLE
 
65 VARIABLE 
 1647,40: VARIABLE
 
313 ; 
 1647,40: ;
 
198 char 
 1648,3: char
 
200 NAME VARIABLE 
 1648,8: __size
 1648,14: VARIABLE
 
65 VARIABLE 
 1648,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1648,14: [
 1648,15: 56
 1648,17: ]
 
188 CONSTANT 
 1648,15: 56
 
305 ] 
 1648,17: ]
 
313 ; 
 1648,18: ;
 
198 long 
 1649,3: long
 
135 int 
 1649,8: int
 
200 NAME VARIABLE 
 1649,12: __align
 1649,19: VARIABLE
 
65 VARIABLE 
 1649,19: VARIABLE
 
313 ; 
 1649,19: ;
 
198 } 
 1650,1: }
 
6 NAME VARIABLE 
 1650,3: pthread_rwlock_t
 1650,19: VARIABLE
 
65 VARIABLE 
 1650,19: VARIABLE
 
70 ; 
 1650,19: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1652,1: typedef
 1652,9: union
 1653,1: {
 1654,3: char
 1654,8: __size
 1654,14: VARIABLE
 1654,14: [
 1654,15: 8
 1654,16: ]
 1654,17: ;
 1655,3: long
 1655,8: int
 1655,12: __align
 1655,19: VARIABLE
 1655,19: ;
 1656,1: }
 
54 union 
 1652,9: union
 
89 { struct_declaration_list } 
 1653,1: {
 1654,3: char
 1654,8: __size
 1654,14: VARIABLE
 1654,14: [
 1654,15: 8
 1654,16: ]
 1654,17: ;
 1655,3: long
 1655,8: int
 1655,12: __align
 1655,19: VARIABLE
 1655,19: ;
 1656,1: }
 
126 char 
 1654,3: char
 
200 NAME VARIABLE 
 1654,8: __size
 1654,14: VARIABLE
 
65 VARIABLE 
 1654,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1654,14: [
 1654,15: 8
 1654,16: ]
 
188 CONSTANT 
 1654,15: 8
 
305 ] 
 1654,16: ]
 
313 ; 
 1654,17: ;
 
198 long 
 1655,3: long
 
135 int 
 1655,8: int
 
200 NAME VARIABLE 
 1655,12: __align
 1655,19: VARIABLE
 
65 VARIABLE 
 1655,19: VARIABLE
 
313 ; 
 1655,19: ;
 
198 } 
 1656,1: }
 
6 NAME VARIABLE 
 1656,3: pthread_rwlockattr_t
 1656,23: VARIABLE
 
65 VARIABLE 
 1656,23: VARIABLE
 
70 ; 
 1656,23: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1662,1: typedef
 1662,9: volatile
 1662,18: int
 
54 volatile 
 1662,9: volatile
 
103 int 
 1662,18: int
 
6 NAME VARIABLE 
 1662,22: pthread_spinlock_t
 1662,40: VARIABLE
 
65 VARIABLE 
 1662,40: VARIABLE
 
70 ; 
 1662,40: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1667,1: typedef
 1667,9: union
 1668,1: {
 1669,3: char
 1669,8: __size
 1669,14: VARIABLE
 1669,14: [
 1669,15: 32
 1669,17: ]
 1669,18: ;
 1670,3: long
 1670,8: int
 1670,12: __align
 1670,19: VARIABLE
 1670,19: ;
 1671,1: }
 
54 union 
 1667,9: union
 
89 { struct_declaration_list } 
 1668,1: {
 1669,3: char
 1669,8: __size
 1669,14: VARIABLE
 1669,14: [
 1669,15: 32
 1669,17: ]
 1669,18: ;
 1670,3: long
 1670,8: int
 1670,12: __align
 1670,19: VARIABLE
 1670,19: ;
 1671,1: }
 
126 char 
 1669,3: char
 
200 NAME VARIABLE 
 1669,8: __size
 1669,14: VARIABLE
 
65 VARIABLE 
 1669,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1669,14: [
 1669,15: 32
 1669,17: ]
 
188 CONSTANT 
 1669,15: 32
 
305 ] 
 1669,17: ]
 
313 ; 
 1669,18: ;
 
198 long 
 1670,3: long
 
135 int 
 1670,8: int
 
200 NAME VARIABLE 
 1670,12: __align
 1670,19: VARIABLE
 
65 VARIABLE 
 1670,19: VARIABLE
 
313 ; 
 1670,19: ;
 
198 } 
 1671,1: }
 
6 NAME VARIABLE 
 1671,3: pthread_barrier_t
 1671,20: VARIABLE
 
65 VARIABLE 
 1671,20: VARIABLE
 
70 ; 
 1671,20: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1673,1: typedef
 1673,9: union
 1674,1: {
 1675,3: char
 1675,8: __size
 1675,14: VARIABLE
 1675,14: [
 1675,15: 4
 1675,16: ]
 1675,17: ;
 1676,3: int
 1676,7: __align
 1676,14: VARIABLE
 1676,14: ;
 1677,1: }
 
54 union 
 1673,9: union
 
89 { struct_declaration_list } 
 1674,1: {
 1675,3: char
 1675,8: __size
 1675,14: VARIABLE
 1675,14: [
 1675,15: 4
 1675,16: ]
 1675,17: ;
 1676,3: int
 1676,7: __align
 1676,14: VARIABLE
 1676,14: ;
 1677,1: }
 
126 char 
 1675,3: char
 
200 NAME VARIABLE 
 1675,8: __size
 1675,14: VARIABLE
 
65 VARIABLE 
 1675,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1675,14: [
 1675,15: 4
 1675,16: ]
 
188 CONSTANT 
 1675,15: 4
 
305 ] 
 1675,16: ]
 
313 ; 
 1675,17: ;
 
198 int 
 1676,3: int
 
200 NAME VARIABLE 
 1676,7: __align
 1676,14: VARIABLE
 
65 VARIABLE 
 1676,14: VARIABLE
 
313 ; 
 1676,14: ;
 
198 } 
 1677,1: }
 
6 NAME VARIABLE 
 1677,3: pthread_barrierattr_t
 1677,24: VARIABLE
 
65 VARIABLE 
 1677,24: VARIABLE
 
70 ; 
 1677,24: ;
 
23 extern 
 1689,1: extern
 
8 long 
 1689,8: long
 
17 int 
 1689,13: int
 
5 NAME VARIABLE 
 1689,17: random
 1689,23: VARIABLE
 
65 VARIABLE 
 1689,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1689,24: (
 1689,25: void
 1689,29: )
 
186 void 
 1689,25: void
 
187 ) 
 1689,29: )
 
60 ; 
 1689,31: ;
 
23 extern 
 1692,1: extern
 
8 void 
 1692,8: void
 
5 NAME VARIABLE 
 1692,13: srandom
 1692,20: VARIABLE
 
65 VARIABLE 
 1692,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1692,21: (
 1692,22: unsigned
 1692,31: int
 1692,35: __seed
 1692,41: VARIABLE
 1692,41: )
 
186 unsigned 
 1692,22: unsigned
 
106 int 
 1692,31: int
 
298 NAME VARIABLE 
 1692,35: __seed
 1692,41: VARIABLE
 
65 VARIABLE 
 1692,41: VARIABLE
 
187 ) 
 1692,41: )
 
60 ; 
 1692,43: ;
 
23 extern 
 1698,1: extern
 
8 char 
 1698,8: char
 
5 * option_type_qualifier_list option_pointer 
 1698,13: *
 
64 NAME VARIABLE 
 1698,14: initstate
 1698,23: VARIABLE
 
65 VARIABLE 
 1698,23: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1698,24: (
 1698,25: unsigned
 1698,34: int
 1698,38: __seed
 1698,44: VARIABLE
 1698,44: ,
 1698,46: char
 1698,51: *
 1698,52: __statebuf
 1698,62: VARIABLE
 1698,62: ,
 1699,4: size_t
 1699,10: TYPE
 1699,11: __statelen
 1699,21: VARIABLE
 1699,21: )
 
186 unsigned 
 1698,25: unsigned
 
106 int 
 1698,34: int
 
298 NAME VARIABLE 
 1698,38: __seed
 1698,44: VARIABLE
 
65 VARIABLE 
 1698,44: VARIABLE
 
300 , parameter_declaration 
 1698,44: ,
 1698,46: char
 1698,51: *
 1698,52: __statebuf
 1698,62: VARIABLE
 
391 char 
 1698,46: char
 
298 * option_type_qualifier_list option_pointer 
 1698,51: *
 
386 NAME VARIABLE 
 1698,52: __statebuf
 1698,62: VARIABLE
 
65 VARIABLE 
 1698,62: VARIABLE
 
300 , parameter_declaration 
 1698,62: ,
 1699,4: size_t
 1699,10: TYPE
 1699,11: __statelen
 1699,21: VARIABLE
 
391 NAME TYPE 
 1699,4: size_t
 1699,10: TYPE
 
26 TYPE 
 1699,10: TYPE
 
298 NAME VARIABLE 
 1699,11: __statelen
 1699,21: VARIABLE
 
65 VARIABLE 
 1699,21: VARIABLE
 
187 ) 
 1699,21: )
 
60 ; 
 1699,24: ;
 
23 extern 
 1703,1: extern
 
8 char 
 1703,8: char
 
5 * option_type_qualifier_list option_pointer 
 1703,13: *
 
64 NAME VARIABLE 
 1703,14: setstate
 1703,22: VARIABLE
 
65 VARIABLE 
 1703,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1703,23: (
 1703,24: char
 1703,29: *
 1703,30: __statebuf
 1703,40: VARIABLE
 1703,40: )
 
186 char 
 1703,24: char
 
298 * option_type_qualifier_list option_pointer 
 1703,29: *
 
386 NAME VARIABLE 
 1703,30: __statebuf
 1703,40: VARIABLE
 
65 VARIABLE 
 1703,40: VARIABLE
 
187 ) 
 1703,40: )
 
60 ; 
 1703,43: ;
 
23 struct 
 1711,1: struct
 
22 NAME VARIABLE 
 1711,8: random_data
 1711,19: VARIABLE
 
65 VARIABLE 
 1711,19: VARIABLE
 
89 { struct_declaration_list } 
 1712,3: {
 1713,5: int32_t
 1713,12: TYPE
 1713,13: *
 1713,14: fptr
 1713,18: VARIABLE
 1713,18: ;
 1714,5: int32_t
 1714,12: TYPE
 1714,13: *
 1714,14: rptr
 1714,18: VARIABLE
 1714,18: ;
 1715,5: int32_t
 1715,12: TYPE
 1715,13: *
 1715,14: state
 1715,19: VARIABLE
 1715,19: ;
 1716,5: int
 1716,9: rand_type
 1716,18: VARIABLE
 1716,18: ;
 1717,5: int
 1717,9: rand_deg
 1717,17: VARIABLE
 1717,17: ;
 1718,5: int
 1718,9: rand_sep
 1718,17: VARIABLE
 1718,17: ;
 1719,5: int32_t
 1719,12: TYPE
 1719,13: *
 1719,14: end_ptr
 1719,21: VARIABLE
 1719,21: ;
 1720,3: }
 
126 NAME TYPE 
 1713,5: int32_t
 1713,12: TYPE
 
26 TYPE 
 1713,12: TYPE
 
200 * option_type_qualifier_list option_pointer 
 1713,13: *
 
64 NAME VARIABLE 
 1713,14: fptr
 1713,18: VARIABLE
 
65 VARIABLE 
 1713,18: VARIABLE
 
313 ; 
 1713,18: ;
 
198 NAME TYPE 
 1714,5: int32_t
 1714,12: TYPE
 
26 TYPE 
 1714,12: TYPE
 
200 * option_type_qualifier_list option_pointer 
 1714,13: *
 
64 NAME VARIABLE 
 1714,14: rptr
 1714,18: VARIABLE
 
65 VARIABLE 
 1714,18: VARIABLE
 
313 ; 
 1714,18: ;
 
198 NAME TYPE 
 1715,5: int32_t
 1715,12: TYPE
 
26 TYPE 
 1715,12: TYPE
 
200 * option_type_qualifier_list option_pointer 
 1715,13: *
 
64 NAME VARIABLE 
 1715,14: state
 1715,19: VARIABLE
 
65 VARIABLE 
 1715,19: VARIABLE
 
313 ; 
 1715,19: ;
 
198 int 
 1716,5: int
 
200 NAME VARIABLE 
 1716,9: rand_type
 1716,18: VARIABLE
 
65 VARIABLE 
 1716,18: VARIABLE
 
313 ; 
 1716,18: ;
 
198 int 
 1717,5: int
 
200 NAME VARIABLE 
 1717,9: rand_deg
 1717,17: VARIABLE
 
65 VARIABLE 
 1717,17: VARIABLE
 
313 ; 
 1717,17: ;
 
198 int 
 1718,5: int
 
200 NAME VARIABLE 
 1718,9: rand_sep
 1718,17: VARIABLE
 
65 VARIABLE 
 1718,17: VARIABLE
 
313 ; 
 1718,17: ;
 
198 NAME TYPE 
 1719,5: int32_t
 1719,12: TYPE
 
26 TYPE 
 1719,12: TYPE
 
200 * option_type_qualifier_list option_pointer 
 1719,13: *
 
64 NAME VARIABLE 
 1719,14: end_ptr
 1719,21: VARIABLE
 
65 VARIABLE 
 1719,21: VARIABLE
 
313 ; 
 1719,21: ;
 
198 } 
 1720,3: }
 
60 ; 
 1720,4: ;
 
23 extern 
 1722,1: extern
 
8 int 
 1722,8: int
 
5 NAME VARIABLE 
 1722,12: random_r
 1722,20: VARIABLE
 
65 VARIABLE 
 1722,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1722,21: (
 1722,22: struct
 1722,29: random_data
 1722,40: VARIABLE
 1722,41: *
 1722,43: __buf
 1722,48: VARIABLE
 1722,48: ,
 1723,8: int32_t
 1723,15: TYPE
 1723,16: *
 1723,18: __result
 1723,26: VARIABLE
 1723,26: )
 
186 struct 
 1722,22: struct
 
22 NAME VARIABLE 
 1722,29: random_data
 1722,40: VARIABLE
 
65 VARIABLE 
 1722,40: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1722,41: *
 
386 NAME VARIABLE 
 1722,43: __buf
 1722,48: VARIABLE
 
65 VARIABLE 
 1722,48: VARIABLE
 
300 , parameter_declaration 
 1722,48: ,
 1723,8: int32_t
 1723,15: TYPE
 1723,16: *
 1723,18: __result
 1723,26: VARIABLE
 
391 NAME TYPE 
 1723,8: int32_t
 1723,15: TYPE
 
26 TYPE 
 1723,15: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1723,16: *
 
386 NAME VARIABLE 
 1723,18: __result
 1723,26: VARIABLE
 
65 VARIABLE 
 1723,26: VARIABLE
 
187 ) 
 1723,26: )
 
60 ; 
 1723,29: ;
 
23 extern 
 1725,1: extern
 
8 int 
 1725,8: int
 
5 NAME VARIABLE 
 1725,12: srandom_r
 1725,21: VARIABLE
 
65 VARIABLE 
 1725,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1725,22: (
 1725,23: unsigned
 1725,32: int
 1725,36: __seed
 1725,42: VARIABLE
 1725,42: ,
 1725,44: struct
 1725,51: random_data
 1725,62: VARIABLE
 1725,63: *
 1725,64: __buf
 1725,69: VARIABLE
 1725,69: )
 
186 unsigned 
 1725,23: unsigned
 
106 int 
 1725,32: int
 
298 NAME VARIABLE 
 1725,36: __seed
 1725,42: VARIABLE
 
65 VARIABLE 
 1725,42: VARIABLE
 
300 , parameter_declaration 
 1725,42: ,
 1725,44: struct
 1725,51: random_data
 1725,62: VARIABLE
 1725,63: *
 1725,64: __buf
 1725,69: VARIABLE
 
391 struct 
 1725,44: struct
 
22 NAME VARIABLE 
 1725,51: random_data
 1725,62: VARIABLE
 
65 VARIABLE 
 1725,62: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1725,63: *
 
386 NAME VARIABLE 
 1725,64: __buf
 1725,69: VARIABLE
 
65 VARIABLE 
 1725,69: VARIABLE
 
187 ) 
 1725,69: )
 
60 ; 
 1726,7: ;
 
23 extern 
 1728,1: extern
 
8 int 
 1728,8: int
 
5 NAME VARIABLE 
 1728,12: initstate_r
 1728,23: VARIABLE
 
65 VARIABLE 
 1728,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1728,24: (
 1728,25: unsigned
 1728,34: int
 1728,38: __seed
 1728,44: VARIABLE
 1728,44: ,
 1728,46: char
 1728,51: *
 1728,53: __statebuf
 1728,63: VARIABLE
 1728,63: ,
 1729,4: size_t
 1729,10: TYPE
 1729,11: __statelen
 1729,21: VARIABLE
 1729,21: ,
 1730,4: struct
 1730,11: random_data
 1730,22: VARIABLE
 1730,23: *
 1730,25: __buf
 1730,30: VARIABLE
 1730,30: )
 
186 unsigned 
 1728,25: unsigned
 
106 int 
 1728,34: int
 
298 NAME VARIABLE 
 1728,38: __seed
 1728,44: VARIABLE
 
65 VARIABLE 
 1728,44: VARIABLE
 
300 , parameter_declaration 
 1728,44: ,
 1728,46: char
 1728,51: *
 1728,53: __statebuf
 1728,63: VARIABLE
 
391 char 
 1728,46: char
 
298 * option_type_qualifier_list option_pointer 
 1728,51: *
 
386 NAME VARIABLE 
 1728,53: __statebuf
 1728,63: VARIABLE
 
65 VARIABLE 
 1728,63: VARIABLE
 
300 , parameter_declaration 
 1728,63: ,
 1729,4: size_t
 1729,10: TYPE
 1729,11: __statelen
 1729,21: VARIABLE
 
391 NAME TYPE 
 1729,4: size_t
 1729,10: TYPE
 
26 TYPE 
 1729,10: TYPE
 
298 NAME VARIABLE 
 1729,11: __statelen
 1729,21: VARIABLE
 
65 VARIABLE 
 1729,21: VARIABLE
 
300 , parameter_declaration 
 1729,21: ,
 1730,4: struct
 1730,11: random_data
 1730,22: VARIABLE
 1730,23: *
 1730,25: __buf
 1730,30: VARIABLE
 
391 struct 
 1730,4: struct
 
22 NAME VARIABLE 
 1730,11: random_data
 1730,22: VARIABLE
 
65 VARIABLE 
 1730,22: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1730,23: *
 
386 NAME VARIABLE 
 1730,25: __buf
 1730,30: VARIABLE
 
65 VARIABLE 
 1730,30: VARIABLE
 
187 ) 
 1730,30: )
 
60 ; 
 1731,7: ;
 
23 extern 
 1733,1: extern
 
8 int 
 1733,8: int
 
5 NAME VARIABLE 
 1733,12: setstate_r
 1733,22: VARIABLE
 
65 VARIABLE 
 1733,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1733,23: (
 1733,24: char
 1733,29: *
 1733,31: __statebuf
 1733,41: VARIABLE
 1733,41: ,
 1734,10: struct
 1734,17: random_data
 1734,28: VARIABLE
 1734,29: *
 1734,31: __buf
 1734,36: VARIABLE
 1734,36: )
 
186 char 
 1733,24: char
 
298 * option_type_qualifier_list option_pointer 
 1733,29: *
 
386 NAME VARIABLE 
 1733,31: __statebuf
 1733,41: VARIABLE
 
65 VARIABLE 
 1733,41: VARIABLE
 
300 , parameter_declaration 
 1733,41: ,
 1734,10: struct
 1734,17: random_data
 1734,28: VARIABLE
 1734,29: *
 1734,31: __buf
 1734,36: VARIABLE
 
391 struct 
 1734,10: struct
 
22 NAME VARIABLE 
 1734,17: random_data
 1734,28: VARIABLE
 
65 VARIABLE 
 1734,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1734,29: *
 
386 NAME VARIABLE 
 1734,31: __buf
 1734,36: VARIABLE
 
65 VARIABLE 
 1734,36: VARIABLE
 
187 ) 
 1734,36: )
 
60 ; 
 1735,7: ;
 
23 extern 
 1741,1: extern
 
8 int 
 1741,8: int
 
5 NAME VARIABLE 
 1741,12: rand
 1741,16: VARIABLE
 
65 VARIABLE 
 1741,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1741,17: (
 1741,18: void
 1741,22: )
 
186 void 
 1741,18: void
 
187 ) 
 1741,22: )
 
60 ; 
 1741,24: ;
 
23 extern 
 1743,1: extern
 
8 void 
 1743,8: void
 
5 NAME VARIABLE 
 1743,13: srand
 1743,18: VARIABLE
 
65 VARIABLE 
 1743,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1743,19: (
 1743,20: unsigned
 1743,29: int
 1743,33: __seed
 1743,39: VARIABLE
 1743,39: )
 
186 unsigned 
 1743,20: unsigned
 
106 int 
 1743,29: int
 
298 NAME VARIABLE 
 1743,33: __seed
 1743,39: VARIABLE
 
65 VARIABLE 
 1743,39: VARIABLE
 
187 ) 
 1743,39: )
 
60 ; 
 1743,41: ;
 
23 extern 
 1747,1: extern
 
8 int 
 1747,8: int
 
5 NAME VARIABLE 
 1747,12: rand_r
 1747,18: VARIABLE
 
65 VARIABLE 
 1747,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1747,19: (
 1747,20: unsigned
 1747,29: int
 1747,33: *
 1747,34: __seed
 1747,40: VARIABLE
 1747,40: )
 
186 unsigned 
 1747,20: unsigned
 
106 int 
 1747,29: int
 
298 * option_type_qualifier_list option_pointer 
 1747,33: *
 
386 NAME VARIABLE 
 1747,34: __seed
 1747,40: VARIABLE
 
65 VARIABLE 
 1747,40: VARIABLE
 
187 ) 
 1747,40: )
 
60 ; 
 1747,42: ;
 
23 extern 
 1755,1: extern
 
8 double 
 1755,8: double
 
5 NAME VARIABLE 
 1755,15: drand48
 1755,22: VARIABLE
 
65 VARIABLE 
 1755,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1755,23: (
 1755,24: void
 1755,28: )
 
186 void 
 1755,24: void
 
187 ) 
 1755,28: )
 
60 ; 
 1755,30: ;
 
23 extern 
 1756,1: extern
 
8 double 
 1756,8: double
 
5 NAME VARIABLE 
 1756,15: erand48
 1756,22: VARIABLE
 
65 VARIABLE 
 1756,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1756,23: (
 1756,24: unsigned
 1756,33: short
 1756,39: int
 1756,43: __xsubi
 1756,50: VARIABLE
 1756,50: [
 1756,51: 3
 1756,52: ]
 1756,53: )
 
186 unsigned 
 1756,24: unsigned
 
106 short 
 1756,33: short
 
106 int 
 1756,39: int
 
298 NAME VARIABLE 
 1756,43: __xsubi
 1756,50: VARIABLE
 
65 VARIABLE 
 1756,50: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1756,50: [
 1756,51: 3
 1756,52: ]
 
188 CONSTANT 
 1756,51: 3
 
305 ] 
 1756,52: ]
 
187 ) 
 1756,53: )
 
60 ; 
 1756,56: ;
 
23 extern 
 1759,1: extern
 
8 long 
 1759,8: long
 
17 int 
 1759,13: int
 
5 NAME VARIABLE 
 1759,17: lrand48
 1759,24: VARIABLE
 
65 VARIABLE 
 1759,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1759,25: (
 1759,26: void
 1759,30: )
 
186 void 
 1759,26: void
 
187 ) 
 1759,30: )
 
60 ; 
 1759,32: ;
 
23 extern 
 1760,1: extern
 
8 long 
 1760,8: long
 
17 int 
 1760,13: int
 
5 NAME VARIABLE 
 1760,17: nrand48
 1760,24: VARIABLE
 
65 VARIABLE 
 1760,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1760,25: (
 1760,26: unsigned
 1760,35: short
 1760,41: int
 1760,45: __xsubi
 1760,52: VARIABLE
 1760,52: [
 1760,53: 3
 1760,54: ]
 1760,55: )
 
186 unsigned 
 1760,26: unsigned
 
106 short 
 1760,35: short
 
106 int 
 1760,41: int
 
298 NAME VARIABLE 
 1760,45: __xsubi
 1760,52: VARIABLE
 
65 VARIABLE 
 1760,52: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1760,52: [
 1760,53: 3
 1760,54: ]
 
188 CONSTANT 
 1760,53: 3
 
305 ] 
 1760,54: ]
 
187 ) 
 1760,55: )
 
60 ; 
 1761,7: ;
 
23 extern 
 1764,1: extern
 
8 long 
 1764,8: long
 
17 int 
 1764,13: int
 
5 NAME VARIABLE 
 1764,17: mrand48
 1764,24: VARIABLE
 
65 VARIABLE 
 1764,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1764,25: (
 1764,26: void
 1764,30: )
 
186 void 
 1764,26: void
 
187 ) 
 1764,30: )
 
60 ; 
 1764,32: ;
 
23 extern 
 1765,1: extern
 
8 long 
 1765,8: long
 
17 int 
 1765,13: int
 
5 NAME VARIABLE 
 1765,17: jrand48
 1765,24: VARIABLE
 
65 VARIABLE 
 1765,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1765,25: (
 1765,26: unsigned
 1765,35: short
 1765,41: int
 1765,45: __xsubi
 1765,52: VARIABLE
 1765,52: [
 1765,53: 3
 1765,54: ]
 1765,55: )
 
186 unsigned 
 1765,26: unsigned
 
106 short 
 1765,35: short
 
106 int 
 1765,41: int
 
298 NAME VARIABLE 
 1765,45: __xsubi
 1765,52: VARIABLE
 
65 VARIABLE 
 1765,52: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1765,52: [
 1765,53: 3
 1765,54: ]
 
188 CONSTANT 
 1765,53: 3
 
305 ] 
 1765,54: ]
 
187 ) 
 1765,55: )
 
60 ; 
 1766,7: ;
 
23 extern 
 1769,1: extern
 
8 void 
 1769,8: void
 
5 NAME VARIABLE 
 1769,13: srand48
 1769,20: VARIABLE
 
65 VARIABLE 
 1769,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1769,21: (
 1769,22: long
 1769,27: int
 1769,31: __seedval
 1769,40: VARIABLE
 1769,40: )
 
186 long 
 1769,22: long
 
106 int 
 1769,27: int
 
298 NAME VARIABLE 
 1769,31: __seedval
 1769,40: VARIABLE
 
65 VARIABLE 
 1769,40: VARIABLE
 
187 ) 
 1769,40: )
 
60 ; 
 1769,42: ;
 
23 extern 
 1770,1: extern
 
8 unsigned 
 1770,8: unsigned
 
17 short 
 1770,17: short
 
17 int 
 1770,23: int
 
5 * option_type_qualifier_list option_pointer 
 1770,27: *
 
64 NAME VARIABLE 
 1770,28: seed48
 1770,34: VARIABLE
 
65 VARIABLE 
 1770,34: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1770,35: (
 1770,36: unsigned
 1770,45: short
 1770,51: int
 1770,55: __seed16v
 1770,64: VARIABLE
 1770,64: [
 1770,65: 3
 1770,66: ]
 1770,67: )
 
186 unsigned 
 1770,36: unsigned
 
106 short 
 1770,45: short
 
106 int 
 1770,51: int
 
298 NAME VARIABLE 
 1770,55: __seed16v
 1770,64: VARIABLE
 
65 VARIABLE 
 1770,64: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1770,64: [
 1770,65: 3
 1770,66: ]
 
188 CONSTANT 
 1770,65: 3
 
305 ] 
 1770,66: ]
 
187 ) 
 1770,67: )
 
60 ; 
 1771,7: ;
 
23 extern 
 1772,1: extern
 
8 void 
 1772,8: void
 
5 NAME VARIABLE 
 1772,13: lcong48
 1772,20: VARIABLE
 
65 VARIABLE 
 1772,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1772,21: (
 1772,22: unsigned
 1772,31: short
 1772,37: int
 1772,41: __param
 1772,48: VARIABLE
 1772,48: [
 1772,49: 7
 1772,50: ]
 1772,51: )
 
186 unsigned 
 1772,22: unsigned
 
106 short 
 1772,31: short
 
106 int 
 1772,37: int
 
298 NAME VARIABLE 
 1772,41: __param
 1772,48: VARIABLE
 
65 VARIABLE 
 1772,48: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1772,48: [
 1772,49: 7
 1772,50: ]
 
188 CONSTANT 
 1772,49: 7
 
305 ] 
 1772,50: ]
 
187 ) 
 1772,51: )
 
60 ; 
 1772,54: ;
 
23 struct 
 1778,1: struct
 
22 NAME VARIABLE 
 1778,8: drand48_data
 1778,20: VARIABLE
 
65 VARIABLE 
 1778,20: VARIABLE
 
89 { struct_declaration_list } 
 1779,3: {
 1780,5: unsigned
 1780,14: short
 1780,20: int
 1780,24: __x
 1780,27: VARIABLE
 1780,27: [
 1780,28: 3
 1780,29: ]
 1780,30: ;
 1781,5: unsigned
 1781,14: short
 1781,20: int
 1781,24: __old_x
 1781,31: VARIABLE
 1781,31: [
 1781,32: 3
 1781,33: ]
 1781,34: ;
 1782,5: unsigned
 1782,14: short
 1782,20: int
 1782,24: __c
 1782,27: VARIABLE
 1782,27: ;
 1783,5: unsigned
 1783,14: short
 1783,20: int
 1783,24: __init
 1783,30: VARIABLE
 1783,30: ;
 1784,6: unsigned
 1784,15: long
 1784,20: long
 1784,25: int
 1784,29: __a
 1784,32: VARIABLE
 1784,32: ;
 1786,3: }
 
126 unsigned 
 1780,5: unsigned
 
135 short 
 1780,14: short
 
135 int 
 1780,20: int
 
200 NAME VARIABLE 
 1780,24: __x
 1780,27: VARIABLE
 
65 VARIABLE 
 1780,27: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1780,27: [
 1780,28: 3
 1780,29: ]
 
188 CONSTANT 
 1780,28: 3
 
305 ] 
 1780,29: ]
 
313 ; 
 1780,30: ;
 
198 unsigned 
 1781,5: unsigned
 
135 short 
 1781,14: short
 
135 int 
 1781,20: int
 
200 NAME VARIABLE 
 1781,24: __old_x
 1781,31: VARIABLE
 
65 VARIABLE 
 1781,31: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1781,31: [
 1781,32: 3
 1781,33: ]
 
188 CONSTANT 
 1781,32: 3
 
305 ] 
 1781,33: ]
 
313 ; 
 1781,34: ;
 
198 unsigned 
 1782,5: unsigned
 
135 short 
 1782,14: short
 
135 int 
 1782,20: int
 
200 NAME VARIABLE 
 1782,24: __c
 1782,27: VARIABLE
 
65 VARIABLE 
 1782,27: VARIABLE
 
313 ; 
 1782,27: ;
 
198 unsigned 
 1783,5: unsigned
 
135 short 
 1783,14: short
 
135 int 
 1783,20: int
 
200 NAME VARIABLE 
 1783,24: __init
 1783,30: VARIABLE
 
65 VARIABLE 
 1783,30: VARIABLE
 
313 ; 
 1783,30: ;
 
198 unsigned 
 1784,6: unsigned
 
135 long 
 1784,15: long
 
135 long 
 1784,20: long
 
135 int 
 1784,25: int
 
200 NAME VARIABLE 
 1784,29: __a
 1784,32: VARIABLE
 
65 VARIABLE 
 1784,32: VARIABLE
 
313 ; 
 1784,32: ;
 
198 } 
 1786,3: }
 
60 ; 
 1786,4: ;
 
23 extern 
 1789,1: extern
 
8 int 
 1789,8: int
 
5 NAME VARIABLE 
 1789,12: drand48_r
 1789,21: VARIABLE
 
65 VARIABLE 
 1789,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1789,22: (
 1789,23: struct
 1789,30: drand48_data
 1789,42: VARIABLE
 1789,43: *
 1789,45: __buffer
 1789,53: VARIABLE
 1789,53: ,
 1790,9: double
 1790,16: *
 1790,18: __result
 1790,26: VARIABLE
 1790,26: )
 
186 struct 
 1789,23: struct
 
22 NAME VARIABLE 
 1789,30: drand48_data
 1789,42: VARIABLE
 
65 VARIABLE 
 1789,42: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1789,43: *
 
386 NAME VARIABLE 
 1789,45: __buffer
 1789,53: VARIABLE
 
65 VARIABLE 
 1789,53: VARIABLE
 
300 , parameter_declaration 
 1789,53: ,
 1790,9: double
 1790,16: *
 1790,18: __result
 1790,26: VARIABLE
 
391 double 
 1790,9: double
 
298 * option_type_qualifier_list option_pointer 
 1790,16: *
 
386 NAME VARIABLE 
 1790,18: __result
 1790,26: VARIABLE
 
65 VARIABLE 
 1790,26: VARIABLE
 
187 ) 
 1790,26: )
 
60 ; 
 1790,29: ;
 
23 extern 
 1791,1: extern
 
8 int 
 1791,8: int
 
5 NAME VARIABLE 
 1791,12: erand48_r
 1791,21: VARIABLE
 
65 VARIABLE 
 1791,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1791,22: (
 1791,23: unsigned
 1791,32: short
 1791,38: int
 1791,42: __xsubi
 1791,49: VARIABLE
 1791,49: [
 1791,50: 3
 1791,51: ]
 1791,52: ,
 1792,9: struct
 1792,16: drand48_data
 1792,28: VARIABLE
 1792,29: *
 1792,31: __buffer
 1792,39: VARIABLE
 1792,39: ,
 1793,9: double
 1793,16: *
 1793,18: __result
 1793,26: VARIABLE
 1793,26: )
 
186 unsigned 
 1791,23: unsigned
 
106 short 
 1791,32: short
 
106 int 
 1791,38: int
 
298 NAME VARIABLE 
 1791,42: __xsubi
 1791,49: VARIABLE
 
65 VARIABLE 
 1791,49: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1791,49: [
 1791,50: 3
 1791,51: ]
 
188 CONSTANT 
 1791,50: 3
 
305 ] 
 1791,51: ]
 
300 , parameter_declaration 
 1791,52: ,
 1792,9: struct
 1792,16: drand48_data
 1792,28: VARIABLE
 1792,29: *
 1792,31: __buffer
 1792,39: VARIABLE
 
391 struct 
 1792,9: struct
 
22 NAME VARIABLE 
 1792,16: drand48_data
 1792,28: VARIABLE
 
65 VARIABLE 
 1792,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1792,29: *
 
386 NAME VARIABLE 
 1792,31: __buffer
 1792,39: VARIABLE
 
65 VARIABLE 
 1792,39: VARIABLE
 
300 , parameter_declaration 
 1792,39: ,
 1793,9: double
 1793,16: *
 1793,18: __result
 1793,26: VARIABLE
 
391 double 
 1793,9: double
 
298 * option_type_qualifier_list option_pointer 
 1793,16: *
 
386 NAME VARIABLE 
 1793,18: __result
 1793,26: VARIABLE
 
65 VARIABLE 
 1793,26: VARIABLE
 
187 ) 
 1793,26: )
 
60 ; 
 1793,29: ;
 
23 extern 
 1796,1: extern
 
8 int 
 1796,8: int
 
5 NAME VARIABLE 
 1796,12: lrand48_r
 1796,21: VARIABLE
 
65 VARIABLE 
 1796,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1796,22: (
 1796,23: struct
 1796,30: drand48_data
 1796,42: VARIABLE
 1796,43: *
 1796,45: __buffer
 1796,53: VARIABLE
 1796,53: ,
 1797,9: long
 1797,14: int
 1797,18: *
 1797,20: __result
 1797,28: VARIABLE
 1797,28: )
 
186 struct 
 1796,23: struct
 
22 NAME VARIABLE 
 1796,30: drand48_data
 1796,42: VARIABLE
 
65 VARIABLE 
 1796,42: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1796,43: *
 
386 NAME VARIABLE 
 1796,45: __buffer
 1796,53: VARIABLE
 
65 VARIABLE 
 1796,53: VARIABLE
 
300 , parameter_declaration 
 1796,53: ,
 1797,9: long
 1797,14: int
 1797,18: *
 1797,20: __result
 1797,28: VARIABLE
 
391 long 
 1797,9: long
 
106 int 
 1797,14: int
 
298 * option_type_qualifier_list option_pointer 
 1797,18: *
 
386 NAME VARIABLE 
 1797,20: __result
 1797,28: VARIABLE
 
65 VARIABLE 
 1797,28: VARIABLE
 
187 ) 
 1797,28: )
 
60 ; 
 1798,7: ;
 
23 extern 
 1799,1: extern
 
8 int 
 1799,8: int
 
5 NAME VARIABLE 
 1799,12: nrand48_r
 1799,21: VARIABLE
 
65 VARIABLE 
 1799,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1799,22: (
 1799,23: unsigned
 1799,32: short
 1799,38: int
 1799,42: __xsubi
 1799,49: VARIABLE
 1799,49: [
 1799,50: 3
 1799,51: ]
 1799,52: ,
 1800,9: struct
 1800,16: drand48_data
 1800,28: VARIABLE
 1800,29: *
 1800,31: __buffer
 1800,39: VARIABLE
 1800,39: ,
 1801,9: long
 1801,14: int
 1801,18: *
 1801,20: __result
 1801,28: VARIABLE
 1801,28: )
 
186 unsigned 
 1799,23: unsigned
 
106 short 
 1799,32: short
 
106 int 
 1799,38: int
 
298 NAME VARIABLE 
 1799,42: __xsubi
 1799,49: VARIABLE
 
65 VARIABLE 
 1799,49: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1799,49: [
 1799,50: 3
 1799,51: ]
 
188 CONSTANT 
 1799,50: 3
 
305 ] 
 1799,51: ]
 
300 , parameter_declaration 
 1799,52: ,
 1800,9: struct
 1800,16: drand48_data
 1800,28: VARIABLE
 1800,29: *
 1800,31: __buffer
 1800,39: VARIABLE
 
391 struct 
 1800,9: struct
 
22 NAME VARIABLE 
 1800,16: drand48_data
 1800,28: VARIABLE
 
65 VARIABLE 
 1800,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1800,29: *
 
386 NAME VARIABLE 
 1800,31: __buffer
 1800,39: VARIABLE
 
65 VARIABLE 
 1800,39: VARIABLE
 
300 , parameter_declaration 
 1800,39: ,
 1801,9: long
 1801,14: int
 1801,18: *
 1801,20: __result
 1801,28: VARIABLE
 
391 long 
 1801,9: long
 
106 int 
 1801,14: int
 
298 * option_type_qualifier_list option_pointer 
 1801,18: *
 
386 NAME VARIABLE 
 1801,20: __result
 1801,28: VARIABLE
 
65 VARIABLE 
 1801,28: VARIABLE
 
187 ) 
 1801,28: )
 
60 ; 
 1802,7: ;
 
23 extern 
 1805,1: extern
 
8 int 
 1805,8: int
 
5 NAME VARIABLE 
 1805,12: mrand48_r
 1805,21: VARIABLE
 
65 VARIABLE 
 1805,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1805,22: (
 1805,23: struct
 1805,30: drand48_data
 1805,42: VARIABLE
 1805,43: *
 1805,45: __buffer
 1805,53: VARIABLE
 1805,53: ,
 1806,9: long
 1806,14: int
 1806,18: *
 1806,20: __result
 1806,28: VARIABLE
 1806,28: )
 
186 struct 
 1805,23: struct
 
22 NAME VARIABLE 
 1805,30: drand48_data
 1805,42: VARIABLE
 
65 VARIABLE 
 1805,42: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1805,43: *
 
386 NAME VARIABLE 
 1805,45: __buffer
 1805,53: VARIABLE
 
65 VARIABLE 
 1805,53: VARIABLE
 
300 , parameter_declaration 
 1805,53: ,
 1806,9: long
 1806,14: int
 1806,18: *
 1806,20: __result
 1806,28: VARIABLE
 
391 long 
 1806,9: long
 
106 int 
 1806,14: int
 
298 * option_type_qualifier_list option_pointer 
 1806,18: *
 
386 NAME VARIABLE 
 1806,20: __result
 1806,28: VARIABLE
 
65 VARIABLE 
 1806,28: VARIABLE
 
187 ) 
 1806,28: )
 
60 ; 
 1807,7: ;
 
23 extern 
 1808,1: extern
 
8 int 
 1808,8: int
 
5 NAME VARIABLE 
 1808,12: jrand48_r
 1808,21: VARIABLE
 
65 VARIABLE 
 1808,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1808,22: (
 1808,23: unsigned
 1808,32: short
 1808,38: int
 1808,42: __xsubi
 1808,49: VARIABLE
 1808,49: [
 1808,50: 3
 1808,51: ]
 1808,52: ,
 1809,9: struct
 1809,16: drand48_data
 1809,28: VARIABLE
 1809,29: *
 1809,31: __buffer
 1809,39: VARIABLE
 1809,39: ,
 1810,9: long
 1810,14: int
 1810,18: *
 1810,20: __result
 1810,28: VARIABLE
 1810,28: )
 
186 unsigned 
 1808,23: unsigned
 
106 short 
 1808,32: short
 
106 int 
 1808,38: int
 
298 NAME VARIABLE 
 1808,42: __xsubi
 1808,49: VARIABLE
 
65 VARIABLE 
 1808,49: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1808,49: [
 1808,50: 3
 1808,51: ]
 
188 CONSTANT 
 1808,50: 3
 
305 ] 
 1808,51: ]
 
300 , parameter_declaration 
 1808,52: ,
 1809,9: struct
 1809,16: drand48_data
 1809,28: VARIABLE
 1809,29: *
 1809,31: __buffer
 1809,39: VARIABLE
 
391 struct 
 1809,9: struct
 
22 NAME VARIABLE 
 1809,16: drand48_data
 1809,28: VARIABLE
 
65 VARIABLE 
 1809,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1809,29: *
 
386 NAME VARIABLE 
 1809,31: __buffer
 1809,39: VARIABLE
 
65 VARIABLE 
 1809,39: VARIABLE
 
300 , parameter_declaration 
 1809,39: ,
 1810,9: long
 1810,14: int
 1810,18: *
 1810,20: __result
 1810,28: VARIABLE
 
391 long 
 1810,9: long
 
106 int 
 1810,14: int
 
298 * option_type_qualifier_list option_pointer 
 1810,18: *
 
386 NAME VARIABLE 
 1810,20: __result
 1810,28: VARIABLE
 
65 VARIABLE 
 1810,28: VARIABLE
 
187 ) 
 1810,28: )
 
60 ; 
 1811,7: ;
 
23 extern 
 1814,1: extern
 
8 int 
 1814,8: int
 
5 NAME VARIABLE 
 1814,12: srand48_r
 1814,21: VARIABLE
 
65 VARIABLE 
 1814,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1814,22: (
 1814,23: long
 1814,28: int
 1814,32: __seedval
 1814,41: VARIABLE
 1814,41: ,
 1814,43: struct
 1814,50: drand48_data
 1814,62: VARIABLE
 1814,63: *
 1814,64: __buffer
 1814,72: VARIABLE
 1814,72: )
 
186 long 
 1814,23: long
 
106 int 
 1814,28: int
 
298 NAME VARIABLE 
 1814,32: __seedval
 1814,41: VARIABLE
 
65 VARIABLE 
 1814,41: VARIABLE
 
300 , parameter_declaration 
 1814,41: ,
 1814,43: struct
 1814,50: drand48_data
 1814,62: VARIABLE
 1814,63: *
 1814,64: __buffer
 1814,72: VARIABLE
 
391 struct 
 1814,43: struct
 
22 NAME VARIABLE 
 1814,50: drand48_data
 1814,62: VARIABLE
 
65 VARIABLE 
 1814,62: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1814,63: *
 
386 NAME VARIABLE 
 1814,64: __buffer
 1814,72: VARIABLE
 
65 VARIABLE 
 1814,72: VARIABLE
 
187 ) 
 1814,72: )
 
60 ; 
 1815,7: ;
 
23 extern 
 1817,1: extern
 
8 int 
 1817,8: int
 
5 NAME VARIABLE 
 1817,12: seed48_r
 1817,20: VARIABLE
 
65 VARIABLE 
 1817,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1817,21: (
 1817,22: unsigned
 1817,31: short
 1817,37: int
 1817,41: __seed16v
 1817,50: VARIABLE
 1817,50: [
 1817,51: 3
 1817,52: ]
 1817,53: ,
 1818,8: struct
 1818,15: drand48_data
 1818,27: VARIABLE
 1818,28: *
 1818,29: __buffer
 1818,37: VARIABLE
 1818,37: )
 
186 unsigned 
 1817,22: unsigned
 
106 short 
 1817,31: short
 
106 int 
 1817,37: int
 
298 NAME VARIABLE 
 1817,41: __seed16v
 1817,50: VARIABLE
 
65 VARIABLE 
 1817,50: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1817,50: [
 1817,51: 3
 1817,52: ]
 
188 CONSTANT 
 1817,51: 3
 
305 ] 
 1817,52: ]
 
300 , parameter_declaration 
 1817,53: ,
 1818,8: struct
 1818,15: drand48_data
 1818,27: VARIABLE
 1818,28: *
 1818,29: __buffer
 1818,37: VARIABLE
 
391 struct 
 1818,8: struct
 
22 NAME VARIABLE 
 1818,15: drand48_data
 1818,27: VARIABLE
 
65 VARIABLE 
 1818,27: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1818,28: *
 
386 NAME VARIABLE 
 1818,29: __buffer
 1818,37: VARIABLE
 
65 VARIABLE 
 1818,37: VARIABLE
 
187 ) 
 1818,37: )
 
60 ; 
 1818,40: ;
 
23 extern 
 1820,1: extern
 
8 int 
 1820,8: int
 
5 NAME VARIABLE 
 1820,12: lcong48_r
 1820,21: VARIABLE
 
65 VARIABLE 
 1820,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1820,22: (
 1820,23: unsigned
 1820,32: short
 1820,38: int
 1820,42: __param
 1820,49: VARIABLE
 1820,49: [
 1820,50: 7
 1820,51: ]
 1820,52: ,
 1821,9: struct
 1821,16: drand48_data
 1821,28: VARIABLE
 1821,29: *
 1821,30: __buffer
 1821,38: VARIABLE
 1821,38: )
 
186 unsigned 
 1820,23: unsigned
 
106 short 
 1820,32: short
 
106 int 
 1820,38: int
 
298 NAME VARIABLE 
 1820,42: __param
 1820,49: VARIABLE
 
65 VARIABLE 
 1820,49: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1820,49: [
 1820,50: 7
 1820,51: ]
 
188 CONSTANT 
 1820,50: 7
 
305 ] 
 1820,51: ]
 
300 , parameter_declaration 
 1820,52: ,
 1821,9: struct
 1821,16: drand48_data
 1821,28: VARIABLE
 1821,29: *
 1821,30: __buffer
 1821,38: VARIABLE
 
391 struct 
 1821,9: struct
 
22 NAME VARIABLE 
 1821,16: drand48_data
 1821,28: VARIABLE
 
65 VARIABLE 
 1821,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1821,29: *
 
386 NAME VARIABLE 
 1821,30: __buffer
 1821,38: VARIABLE
 
65 VARIABLE 
 1821,38: VARIABLE
 
187 ) 
 1821,38: )
 
60 ; 
 1822,7: ;
 
23 extern 
 1827,1: extern
 
8 void 
 1827,8: void
 
5 * option_type_qualifier_list option_pointer 
 1827,13: *
 
64 NAME VARIABLE 
 1827,14: malloc
 1827,20: VARIABLE
 
65 VARIABLE 
 1827,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1827,21: (
 1827,22: size_t
 1827,28: TYPE
 1827,29: __size
 1827,35: VARIABLE
 1827,35: )
 
186 NAME TYPE 
 1827,22: size_t
 1827,28: TYPE
 
65 TYPE 
 1827,28: TYPE
 
298 NAME VARIABLE 
 1827,29: __size
 1827,35: VARIABLE
 
65 VARIABLE 
 1827,35: VARIABLE
 
187 ) 
 1827,35: )
 
60 ; 
 1828,7: ;
 
23 extern 
 1830,1: extern
 
8 void 
 1830,8: void
 
5 * option_type_qualifier_list option_pointer 
 1830,13: *
 
64 NAME VARIABLE 
 1830,14: calloc
 1830,20: VARIABLE
 
65 VARIABLE 
 1830,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1830,21: (
 1830,22: size_t
 1830,28: TYPE
 1830,29: __nmemb
 1830,36: VARIABLE
 1830,36: ,
 1830,38: size_t
 1830,44: TYPE
 1830,45: __size
 1830,51: VARIABLE
 1830,51: )
 
186 NAME TYPE 
 1830,22: size_t
 1830,28: TYPE
 
65 TYPE 
 1830,28: TYPE
 
298 NAME VARIABLE 
 1830,29: __nmemb
 1830,36: VARIABLE
 
65 VARIABLE 
 1830,36: VARIABLE
 
300 , parameter_declaration 
 1830,36: ,
 1830,38: size_t
 1830,44: TYPE
 1830,45: __size
 1830,51: VARIABLE
 
391 NAME TYPE 
 1830,38: size_t
 1830,44: TYPE
 
26 TYPE 
 1830,44: TYPE
 
298 NAME VARIABLE 
 1830,45: __size
 1830,51: VARIABLE
 
65 VARIABLE 
 1830,51: VARIABLE
 
187 ) 
 1830,51: )
 
60 ; 
 1831,9: ;
 
23 extern 
 1838,1: extern
 
8 void 
 1838,8: void
 
5 * option_type_qualifier_list option_pointer 
 1838,13: *
 
64 NAME VARIABLE 
 1838,14: realloc
 1838,21: VARIABLE
 
65 VARIABLE 
 1838,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1838,22: (
 1838,23: void
 1838,28: *
 1838,29: __ptr
 1838,34: VARIABLE
 1838,34: ,
 1838,36: size_t
 1838,42: TYPE
 1838,43: __size
 1838,49: VARIABLE
 1838,49: )
 
186 void 
 1838,23: void
 
298 * option_type_qualifier_list option_pointer 
 1838,28: *
 
386 NAME VARIABLE 
 1838,29: __ptr
 1838,34: VARIABLE
 
65 VARIABLE 
 1838,34: VARIABLE
 
300 , parameter_declaration 
 1838,34: ,
 1838,36: size_t
 1838,42: TYPE
 1838,43: __size
 1838,49: VARIABLE
 
391 NAME TYPE 
 1838,36: size_t
 1838,42: TYPE
 
26 TYPE 
 1838,42: TYPE
 
298 NAME VARIABLE 
 1838,43: __size
 1838,49: VARIABLE
 
65 VARIABLE 
 1838,49: VARIABLE
 
187 ) 
 1838,49: )
 
60 ; 
 1839,8: ;
 
23 extern 
 1842,1: extern
 
8 void 
 1842,8: void
 
5 NAME VARIABLE 
 1842,13: free
 1842,17: VARIABLE
 
65 VARIABLE 
 1842,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1842,18: (
 1842,19: void
 1842,24: *
 1842,25: __ptr
 1842,30: VARIABLE
 1842,30: )
 
186 void 
 1842,19: void
 
298 * option_type_qualifier_list option_pointer 
 1842,24: *
 
386 NAME VARIABLE 
 1842,25: __ptr
 1842,30: VARIABLE
 
65 VARIABLE 
 1842,30: VARIABLE
 
187 ) 
 1842,30: )
 
60 ; 
 1842,32: ;
 
23 extern 
 1850,1: extern
 
8 void 
 1850,8: void
 
5 * option_type_qualifier_list option_pointer 
 1850,13: *
 
64 NAME VARIABLE 
 1850,14: reallocarray
 1850,26: VARIABLE
 
65 VARIABLE 
 1850,26: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1850,27: (
 1850,28: void
 1850,33: *
 1850,34: __ptr
 1850,39: VARIABLE
 1850,39: ,
 1850,41: size_t
 1850,47: TYPE
 1850,48: __nmemb
 1850,55: VARIABLE
 1850,55: ,
 1850,57: size_t
 1850,63: TYPE
 1850,64: __size
 1850,70: VARIABLE
 1850,70: )
 
186 void 
 1850,28: void
 
298 * option_type_qualifier_list option_pointer 
 1850,33: *
 
386 NAME VARIABLE 
 1850,34: __ptr
 1850,39: VARIABLE
 
65 VARIABLE 
 1850,39: VARIABLE
 
300 , parameter_declaration 
 1850,39: ,
 1850,41: size_t
 1850,47: TYPE
 1850,48: __nmemb
 1850,55: VARIABLE
 
391 NAME TYPE 
 1850,41: size_t
 1850,47: TYPE
 
26 TYPE 
 1850,47: TYPE
 
298 NAME VARIABLE 
 1850,48: __nmemb
 1850,55: VARIABLE
 
65 VARIABLE 
 1850,55: VARIABLE
 
300 , parameter_declaration 
 1850,55: ,
 1850,57: size_t
 1850,63: TYPE
 1850,64: __size
 1850,70: VARIABLE
 
391 NAME TYPE 
 1850,57: size_t
 1850,63: TYPE
 
26 TYPE 
 1850,63: TYPE
 
298 NAME VARIABLE 
 1850,64: __size
 1850,70: VARIABLE
 
65 VARIABLE 
 1850,70: VARIABLE
 
187 ) 
 1850,70: )
 
60 ; 
 1853,5: ;
 
23 extern 
 1856,1: extern
 
8 void 
 1856,8: void
 
5 * option_type_qualifier_list option_pointer 
 1856,13: *
 
64 NAME VARIABLE 
 1856,14: reallocarray
 1856,26: VARIABLE
 
65 VARIABLE 
 1856,26: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1856,27: (
 1856,28: void
 1856,33: *
 1856,34: __ptr
 1856,39: VARIABLE
 1856,39: ,
 1856,41: size_t
 1856,47: TYPE
 1856,48: __nmemb
 1856,55: VARIABLE
 1856,55: ,
 1856,57: size_t
 1856,63: TYPE
 1856,64: __size
 1856,70: VARIABLE
 1856,70: )
 
186 void 
 1856,28: void
 
298 * option_type_qualifier_list option_pointer 
 1856,33: *
 
386 NAME VARIABLE 
 1856,34: __ptr
 1856,39: VARIABLE
 
65 VARIABLE 
 1856,39: VARIABLE
 
300 , parameter_declaration 
 1856,39: ,
 1856,41: size_t
 1856,47: TYPE
 1856,48: __nmemb
 1856,55: VARIABLE
 
391 NAME TYPE 
 1856,41: size_t
 1856,47: TYPE
 
26 TYPE 
 1856,47: TYPE
 
298 NAME VARIABLE 
 1856,48: __nmemb
 1856,55: VARIABLE
 
65 VARIABLE 
 1856,55: VARIABLE
 
300 , parameter_declaration 
 1856,55: ,
 1856,57: size_t
 1856,63: TYPE
 1856,64: __size
 1856,70: VARIABLE
 
391 NAME TYPE 
 1856,57: size_t
 1856,63: TYPE
 
26 TYPE 
 1856,63: TYPE
 
298 NAME VARIABLE 
 1856,64: __size
 1856,70: VARIABLE
 
65 VARIABLE 
 1856,70: VARIABLE
 
187 ) 
 1856,70: )
 
60 ; 
 1857,7: ;
 
23 extern 
 1872,1: extern
 
8 void 
 1872,8: void
 
5 * option_type_qualifier_list option_pointer 
 1872,13: *
 
64 NAME VARIABLE 
 1872,14: alloca
 1872,20: VARIABLE
 
65 VARIABLE 
 1872,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1872,21: (
 1872,22: size_t
 1872,28: TYPE
 1872,29: __size
 1872,35: VARIABLE
 1872,35: )
 
186 NAME TYPE 
 1872,22: size_t
 1872,28: TYPE
 
65 TYPE 
 1872,28: TYPE
 
298 NAME VARIABLE 
 1872,29: __size
 1872,35: VARIABLE
 
65 VARIABLE 
 1872,35: VARIABLE
 
187 ) 
 1872,35: )
 
60 ; 
 1872,37: ;
 
23 extern 
 1885,1: extern
 
8 void 
 1885,8: void
 
5 * option_type_qualifier_list option_pointer 
 1885,13: *
 
64 NAME VARIABLE 
 1885,14: valloc
 1885,20: VARIABLE
 
65 VARIABLE 
 1885,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1885,21: (
 1885,22: size_t
 1885,28: TYPE
 1885,29: __size
 1885,35: VARIABLE
 1885,35: )
 
186 NAME TYPE 
 1885,22: size_t
 1885,28: TYPE
 
65 TYPE 
 1885,28: TYPE
 
298 NAME VARIABLE 
 1885,29: __size
 1885,35: VARIABLE
 
65 VARIABLE 
 1885,35: VARIABLE
 
187 ) 
 1885,35: )
 
60 ; 
 1886,7: ;
 
23 extern 
 1891,1: extern
 
8 int 
 1891,8: int
 
5 NAME VARIABLE 
 1891,12: posix_memalign
 1891,26: VARIABLE
 
65 VARIABLE 
 1891,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1891,27: (
 1891,28: void
 1891,33: *
 1891,34: *
 1891,35: __memptr
 1891,43: VARIABLE
 1891,43: ,
 1891,45: size_t
 1891,51: TYPE
 1891,52: __alignment
 1891,63: VARIABLE
 1891,63: ,
 1891,65: size_t
 1891,71: TYPE
 1891,72: __size
 1891,78: VARIABLE
 1891,78: )
 
186 void 
 1891,28: void
 
298 * option_type_qualifier_list option_pointer 
 1891,33: *
 1891,34: *
 
116 * option_type_qualifier_list option_pointer 
 1891,34: *
 
386 NAME VARIABLE 
 1891,35: __memptr
 1891,43: VARIABLE
 
65 VARIABLE 
 1891,43: VARIABLE
 
300 , parameter_declaration 
 1891,43: ,
 1891,45: size_t
 1891,51: TYPE
 1891,52: __alignment
 1891,63: VARIABLE
 
391 NAME TYPE 
 1891,45: size_t
 1891,51: TYPE
 
26 TYPE 
 1891,51: TYPE
 
298 NAME VARIABLE 
 1891,52: __alignment
 1891,63: VARIABLE
 
65 VARIABLE 
 1891,63: VARIABLE
 
300 , parameter_declaration 
 1891,63: ,
 1891,65: size_t
 1891,71: TYPE
 1891,72: __size
 1891,78: VARIABLE
 
391 NAME TYPE 
 1891,65: size_t
 1891,71: TYPE
 
26 TYPE 
 1891,71: TYPE
 
298 NAME VARIABLE 
 1891,72: __size
 1891,78: VARIABLE
 
65 VARIABLE 
 1891,78: VARIABLE
 
187 ) 
 1891,78: )
 
60 ; 
 1892,8: ;
 
23 extern 
 1897,1: extern
 
8 void 
 1897,8: void
 
5 * option_type_qualifier_list option_pointer 
 1897,13: *
 
64 NAME VARIABLE 
 1897,14: aligned_alloc
 1897,27: VARIABLE
 
65 VARIABLE 
 1897,27: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1897,28: (
 1897,29: size_t
 1897,35: TYPE
 1897,36: __alignment
 1897,47: VARIABLE
 1897,47: ,
 1897,49: size_t
 1897,55: TYPE
 1897,56: __size
 1897,62: VARIABLE
 1897,62: )
 
186 NAME TYPE 
 1897,29: size_t
 1897,35: TYPE
 
65 TYPE 
 1897,35: TYPE
 
298 NAME VARIABLE 
 1897,36: __alignment
 1897,47: VARIABLE
 
65 VARIABLE 
 1897,47: VARIABLE
 
300 , parameter_declaration 
 1897,47: ,
 1897,49: size_t
 1897,55: TYPE
 1897,56: __size
 1897,62: VARIABLE
 
391 NAME TYPE 
 1897,49: size_t
 1897,55: TYPE
 
26 TYPE 
 1897,55: TYPE
 
298 NAME VARIABLE 
 1897,56: __size
 1897,62: VARIABLE
 
65 VARIABLE 
 1897,62: VARIABLE
 
187 ) 
 1897,62: )
 
60 ; 
 1899,7: ;
 
23 extern 
 1903,1: extern
 
8 void 
 1903,8: void
 
5 NAME VARIABLE 
 1903,13: abort
 1903,18: VARIABLE
 
65 VARIABLE 
 1903,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1903,19: (
 1903,20: void
 1903,24: )
 
186 void 
 1903,20: void
 
187 ) 
 1903,24: )
 
60 ; 
 1903,27: ;
 
23 extern 
 1907,1: extern
 
8 int 
 1907,8: int
 
5 NAME VARIABLE 
 1907,12: atexit
 1907,18: VARIABLE
 
65 VARIABLE 
 1907,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1907,19: (
 1907,20: void
 1907,25: (
 1907,26: *
 1907,27: __func
 1907,33: VARIABLE
 1907,33: )
 1907,35: (
 1907,36: void
 1907,40: )
 1907,41: )
 
186 void 
 1907,20: void
 
298 ( save_context declarator ) 
 1907,25: (
 1907,26: *
 1907,27: __func
 1907,33: VARIABLE
 1907,33: )
 
445 * option_type_qualifier_list option_pointer 
 1907,26: *
 
386 NAME VARIABLE 
 1907,27: __func
 1907,33: VARIABLE
 
65 VARIABLE 
 1907,33: VARIABLE
 
191 ) 
 1907,33: )
 
63 ( scoped_parameter_type_list ) 
 1907,35: (
 1907,36: void
 1907,40: )
 
186 void 
 1907,36: void
 
187 ) 
 1907,40: )
 
187 ) 
 1907,41: )
 
60 ; 
 1907,44: ;
 
23 extern 
 1915,1: extern
 
8 int 
 1915,8: int
 
5 NAME VARIABLE 
 1915,12: at_quick_exit
 1915,25: VARIABLE
 
65 VARIABLE 
 1915,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1915,26: (
 1915,27: void
 1915,32: (
 1915,33: *
 1915,34: __func
 1915,40: VARIABLE
 1915,40: )
 1915,42: (
 1915,43: void
 1915,47: )
 1915,48: )
 
186 void 
 1915,27: void
 
298 ( save_context declarator ) 
 1915,32: (
 1915,33: *
 1915,34: __func
 1915,40: VARIABLE
 1915,40: )
 
445 * option_type_qualifier_list option_pointer 
 1915,33: *
 
386 NAME VARIABLE 
 1915,34: __func
 1915,40: VARIABLE
 
65 VARIABLE 
 1915,40: VARIABLE
 
191 ) 
 1915,40: )
 
63 ( scoped_parameter_type_list ) 
 1915,42: (
 1915,43: void
 1915,47: )
 
186 void 
 1915,43: void
 
187 ) 
 1915,47: )
 
187 ) 
 1915,48: )
 
60 ; 
 1915,51: ;
 
23 extern 
 1922,1: extern
 
8 int 
 1922,8: int
 
5 NAME VARIABLE 
 1922,12: on_exit
 1922,19: VARIABLE
 
65 VARIABLE 
 1922,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1922,20: (
 1922,21: void
 1922,26: (
 1922,27: *
 1922,28: __func
 1922,34: VARIABLE
 1922,34: )
 1922,36: (
 1922,37: int
 1922,41: __status
 1922,49: VARIABLE
 1922,49: ,
 1922,51: void
 1922,56: *
 1922,57: __arg
 1922,62: VARIABLE
 1922,62: )
 1922,63: ,
 1922,65: void
 1922,70: *
 1922,71: __arg
 1922,76: VARIABLE
 1922,76: )
 
186 void 
 1922,21: void
 
298 ( save_context declarator ) 
 1922,26: (
 1922,27: *
 1922,28: __func
 1922,34: VARIABLE
 1922,34: )
 
445 * option_type_qualifier_list option_pointer 
 1922,27: *
 
386 NAME VARIABLE 
 1922,28: __func
 1922,34: VARIABLE
 
65 VARIABLE 
 1922,34: VARIABLE
 
191 ) 
 1922,34: )
 
63 ( scoped_parameter_type_list ) 
 1922,36: (
 1922,37: int
 1922,41: __status
 1922,49: VARIABLE
 1922,49: ,
 1922,51: void
 1922,56: *
 1922,57: __arg
 1922,62: VARIABLE
 1922,62: )
 
186 int 
 1922,37: int
 
298 NAME VARIABLE 
 1922,41: __status
 1922,49: VARIABLE
 
65 VARIABLE 
 1922,49: VARIABLE
 
300 , parameter_declaration 
 1922,49: ,
 1922,51: void
 1922,56: *
 1922,57: __arg
 1922,62: VARIABLE
 
391 void 
 1922,51: void
 
298 * option_type_qualifier_list option_pointer 
 1922,56: *
 
386 NAME VARIABLE 
 1922,57: __arg
 1922,62: VARIABLE
 
65 VARIABLE 
 1922,62: VARIABLE
 
187 ) 
 1922,62: )
 
300 , parameter_declaration 
 1922,63: ,
 1922,65: void
 1922,70: *
 1922,71: __arg
 1922,76: VARIABLE
 
391 void 
 1922,65: void
 
298 * option_type_qualifier_list option_pointer 
 1922,70: *
 
386 NAME VARIABLE 
 1922,71: __arg
 1922,76: VARIABLE
 
65 VARIABLE 
 1922,76: VARIABLE
 
187 ) 
 1922,76: )
 
60 ; 
 1923,7: ;
 
23 extern 
 1929,1: extern
 
8 void 
 1929,8: void
 
5 NAME VARIABLE 
 1929,13: exit
 1929,17: VARIABLE
 
65 VARIABLE 
 1929,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1929,18: (
 1929,19: int
 1929,23: __status
 1929,31: VARIABLE
 1929,31: )
 
186 int 
 1929,19: int
 
298 NAME VARIABLE 
 1929,23: __status
 1929,31: VARIABLE
 
65 VARIABLE 
 1929,31: VARIABLE
 
187 ) 
 1929,31: )
 
60 ; 
 1929,34: ;
 
23 extern 
 1935,1: extern
 
8 void 
 1935,8: void
 
5 NAME VARIABLE 
 1935,13: quick_exit
 1935,23: VARIABLE
 
65 VARIABLE 
 1935,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1935,24: (
 1935,25: int
 1935,29: __status
 1935,37: VARIABLE
 1935,37: )
 
186 int 
 1935,25: int
 
298 NAME VARIABLE 
 1935,29: __status
 1935,37: VARIABLE
 
65 VARIABLE 
 1935,37: VARIABLE
 
187 ) 
 1935,37: )
 
60 ; 
 1935,40: ;
 
23 extern 
 1941,1: extern
 
8 void 
 1941,8: void
 
5 NAME VARIABLE 
 1941,13: _Exit
 1941,18: VARIABLE
 
65 VARIABLE 
 1941,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1941,19: (
 1941,20: int
 1941,24: __status
 1941,32: VARIABLE
 1941,32: )
 
186 int 
 1941,20: int
 
298 NAME VARIABLE 
 1941,24: __status
 1941,32: VARIABLE
 
65 VARIABLE 
 1941,32: VARIABLE
 
187 ) 
 1941,32: )
 
60 ; 
 1941,35: ;
 
23 extern 
 1946,1: extern
 
8 char 
 1946,8: char
 
5 * option_type_qualifier_list option_pointer 
 1946,13: *
 
64 NAME VARIABLE 
 1946,14: getenv
 1946,20: VARIABLE
 
65 VARIABLE 
 1946,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1946,21: (
 1946,22: const
 1946,28: char
 1946,33: *
 1946,34: __name
 1946,40: VARIABLE
 1946,40: )
 
186 const 
 1946,22: const
 
103 char 
 1946,28: char
 
298 * option_type_qualifier_list option_pointer 
 1946,33: *
 
386 NAME VARIABLE 
 1946,34: __name
 1946,40: VARIABLE
 
65 VARIABLE 
 1946,40: VARIABLE
 
187 ) 
 1946,40: )
 
60 ; 
 1946,44: ;
 
23 extern 
 1948,1: extern
 
8 int 
 1948,8: int
 
5 NAME VARIABLE 
 1948,12: putenv
 1948,18: VARIABLE
 
65 VARIABLE 
 1948,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1948,19: (
 1948,20: char
 1948,25: *
 1948,26: __string
 1948,34: VARIABLE
 1948,34: )
 
186 char 
 1948,20: char
 
298 * option_type_qualifier_list option_pointer 
 1948,25: *
 
386 NAME VARIABLE 
 1948,26: __string
 1948,34: VARIABLE
 
65 VARIABLE 
 1948,34: VARIABLE
 
187 ) 
 1948,34: )
 
60 ; 
 1948,37: ;
 
23 extern 
 1954,1: extern
 
8 int 
 1954,8: int
 
5 NAME VARIABLE 
 1954,12: setenv
 1954,18: VARIABLE
 
65 VARIABLE 
 1954,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1954,19: (
 1954,20: const
 1954,26: char
 1954,31: *
 1954,32: __name
 1954,38: VARIABLE
 1954,38: ,
 1954,40: const
 1954,46: char
 1954,51: *
 1954,52: __value
 1954,59: VARIABLE
 1954,59: ,
 1954,61: int
 1954,65: __replace
 1954,74: VARIABLE
 1954,74: )
 
186 const 
 1954,20: const
 
103 char 
 1954,26: char
 
298 * option_type_qualifier_list option_pointer 
 1954,31: *
 
386 NAME VARIABLE 
 1954,32: __name
 1954,38: VARIABLE
 
65 VARIABLE 
 1954,38: VARIABLE
 
300 , parameter_declaration 
 1954,38: ,
 1954,40: const
 1954,46: char
 1954,51: *
 1954,52: __value
 1954,59: VARIABLE
 
391 const 
 1954,40: const
 
103 char 
 1954,46: char
 
298 * option_type_qualifier_list option_pointer 
 1954,51: *
 
386 NAME VARIABLE 
 1954,52: __value
 1954,59: VARIABLE
 
65 VARIABLE 
 1954,59: VARIABLE
 
300 , parameter_declaration 
 1954,59: ,
 1954,61: int
 1954,65: __replace
 1954,74: VARIABLE
 
391 int 
 1954,61: int
 
298 NAME VARIABLE 
 1954,65: __replace
 1954,74: VARIABLE
 
65 VARIABLE 
 1954,74: VARIABLE
 
187 ) 
 1954,74: )
 
60 ; 
 1955,7: ;
 
23 extern 
 1958,1: extern
 
8 int 
 1958,8: int
 
5 NAME VARIABLE 
 1958,12: unsetenv
 1958,20: VARIABLE
 
65 VARIABLE 
 1958,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1958,21: (
 1958,22: const
 1958,28: char
 1958,33: *
 1958,34: __name
 1958,40: VARIABLE
 1958,40: )
 
186 const 
 1958,22: const
 
103 char 
 1958,28: char
 
298 * option_type_qualifier_list option_pointer 
 1958,33: *
 
386 NAME VARIABLE 
 1958,34: __name
 1958,40: VARIABLE
 
65 VARIABLE 
 1958,40: VARIABLE
 
187 ) 
 1958,40: )
 
60 ; 
 1958,43: ;
 
23 extern 
 1965,1: extern
 
8 int 
 1965,8: int
 
5 NAME VARIABLE 
 1965,12: clearenv
 1965,20: VARIABLE
 
65 VARIABLE 
 1965,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1965,21: (
 1965,22: void
 1965,26: )
 
186 void 
 1965,22: void
 
187 ) 
 1965,26: )
 
60 ; 
 1965,28: ;
 
23 extern 
 1967,1: extern
 
8 char 
 1967,8: char
 
5 * option_type_qualifier_list option_pointer 
 1967,13: *
 
64 NAME VARIABLE 
 1967,14: mktemp
 1967,20: VARIABLE
 
65 VARIABLE 
 1967,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1967,21: (
 1967,22: char
 1967,27: *
 1967,28: __template
 1967,38: VARIABLE
 1967,38: )
 
186 char 
 1967,22: char
 
298 * option_type_qualifier_list option_pointer 
 1967,27: *
 
386 NAME VARIABLE 
 1967,28: __template
 1967,38: VARIABLE
 
65 VARIABLE 
 1967,38: VARIABLE
 
187 ) 
 1967,38: )
 
60 ; 
 1967,41: ;
 
23 extern 
 1969,1: extern
 
8 int 
 1969,8: int
 
5 NAME VARIABLE 
 1969,12: mkstemp
 1969,19: VARIABLE
 
65 VARIABLE 
 1969,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1969,20: (
 1969,21: char
 1969,26: *
 1969,27: __template
 1969,37: VARIABLE
 1969,37: )
 
186 char 
 1969,21: char
 
298 * option_type_qualifier_list option_pointer 
 1969,26: *
 
386 NAME VARIABLE 
 1969,27: __template
 1969,37: VARIABLE
 
65 VARIABLE 
 1969,37: VARIABLE
 
187 ) 
 1969,37: )
 
60 ; 
 1969,40: ;
 
23 extern 
 1971,1: extern
 
8 int 
 1971,8: int
 
5 NAME VARIABLE 
 1971,12: mkstemps
 1971,20: VARIABLE
 
65 VARIABLE 
 1971,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1971,21: (
 1971,22: char
 1971,27: *
 1971,28: __template
 1971,38: VARIABLE
 1971,38: ,
 1971,40: int
 1971,44: __suffixlen
 1971,55: VARIABLE
 1971,55: )
 
186 char 
 1971,22: char
 
298 * option_type_qualifier_list option_pointer 
 1971,27: *
 
386 NAME VARIABLE 
 1971,28: __template
 1971,38: VARIABLE
 
65 VARIABLE 
 1971,38: VARIABLE
 
300 , parameter_declaration 
 1971,38: ,
 1971,40: int
 1971,44: __suffixlen
 1971,55: VARIABLE
 
391 int 
 1971,40: int
 
298 NAME VARIABLE 
 1971,44: __suffixlen
 1971,55: VARIABLE
 
65 VARIABLE 
 1971,55: VARIABLE
 
187 ) 
 1971,55: )
 
60 ; 
 1971,58: ;
 
23 extern 
 1973,1: extern
 
8 char 
 1973,8: char
 
5 * option_type_qualifier_list option_pointer 
 1973,13: *
 
64 NAME VARIABLE 
 1973,14: mkdtemp
 1973,21: VARIABLE
 
65 VARIABLE 
 1973,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1973,22: (
 1973,23: char
 1973,28: *
 1973,29: __template
 1973,39: VARIABLE
 1973,39: )
 
186 char 
 1973,23: char
 
298 * option_type_qualifier_list option_pointer 
 1973,28: *
 
386 NAME VARIABLE 
 1973,29: __template
 1973,39: VARIABLE
 
65 VARIABLE 
 1973,39: VARIABLE
 
187 ) 
 1973,39: )
 
60 ; 
 1973,43: ;
 
23 extern 
 1975,1: extern
 
8 int 
 1975,8: int
 
5 NAME VARIABLE 
 1975,12: system
 1975,18: VARIABLE
 
65 VARIABLE 
 1975,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1975,19: (
 1975,20: const
 1975,26: char
 1975,31: *
 1975,32: __command
 1975,41: VARIABLE
 1975,41: )
 
186 const 
 1975,20: const
 
103 char 
 1975,26: char
 
298 * option_type_qualifier_list option_pointer 
 1975,31: *
 
386 NAME VARIABLE 
 1975,32: __command
 1975,41: VARIABLE
 
65 VARIABLE 
 1975,41: VARIABLE
 
187 ) 
 1975,41: )
 
60 ; 
 1975,43: ;
 
23 extern 
 1977,1: extern
 
8 char 
 1977,8: char
 
5 * option_type_qualifier_list option_pointer 
 1977,13: *
 
64 NAME VARIABLE 
 1977,14: realpath
 1977,22: VARIABLE
 
65 VARIABLE 
 1977,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1977,23: (
 1977,24: const
 1977,30: char
 1977,35: *
 1977,37: __name
 1977,43: VARIABLE
 1977,43: ,
 1978,10: char
 1978,15: *
 1978,17: __resolved
 1978,27: VARIABLE
 1978,27: )
 
186 const 
 1977,24: const
 
103 char 
 1977,30: char
 
298 * option_type_qualifier_list option_pointer 
 1977,35: *
 
386 NAME VARIABLE 
 1977,37: __name
 1977,43: VARIABLE
 
65 VARIABLE 
 1977,43: VARIABLE
 
300 , parameter_declaration 
 1977,43: ,
 1978,10: char
 1978,15: *
 1978,17: __resolved
 1978,27: VARIABLE
 
391 char 
 1978,10: char
 
298 * option_type_qualifier_list option_pointer 
 1978,15: *
 
386 NAME VARIABLE 
 1978,17: __resolved
 1978,27: VARIABLE
 
65 VARIABLE 
 1978,27: VARIABLE
 
187 ) 
 1978,27: )
 
60 ; 
 1978,30: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1985,1: typedef
 1985,9: int
 
54 int 
 1985,9: int
 
6 ( save_context declarator ) 
 1985,13: (
 1985,14: *
 1985,15: __compar_fn_t
 1985,28: VARIABLE
 1985,28: )
 
115 * option_type_qualifier_list option_pointer 
 1985,14: *
 
64 NAME VARIABLE 
 1985,15: __compar_fn_t
 1985,28: VARIABLE
 
65 VARIABLE 
 1985,28: VARIABLE
 
191 ) 
 1985,28: )
 
63 ( scoped_parameter_type_list ) 
 1985,30: (
 1985,31: const
 1985,37: void
 1985,42: *
 1985,43: ,
 1985,45: const
 1985,51: void
 1985,56: *
 1985,57: )
 
186 const 
 1985,31: const
 
103 void 
 1985,37: void
 
298 * option_type_qualifier_list option_pointer 
 1985,42: *
 
300 , parameter_declaration 
 1985,43: ,
 1985,45: const
 1985,51: void
 1985,56: *
 
391 const 
 1985,45: const
 
103 void 
 1985,51: void
 
298 * option_type_qualifier_list option_pointer 
 1985,56: *
 
187 ) 
 1985,57: )
 
70 ; 
 1985,58: ;
 
23 extern 
 1987,1: extern
 
8 void 
 1987,8: void
 
5 * option_type_qualifier_list option_pointer 
 1987,13: *
 
64 NAME VARIABLE 
 1987,14: bsearch
 1987,21: VARIABLE
 
65 VARIABLE 
 1987,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1987,22: (
 1987,23: const
 1987,29: void
 1987,34: *
 1987,35: __key
 1987,40: VARIABLE
 1987,40: ,
 1987,42: const
 1987,48: void
 1987,53: *
 1987,54: __base
 1987,60: VARIABLE
 1987,60: ,
 1988,9: size_t
 1988,15: TYPE
 1988,16: __nmemb
 1988,23: VARIABLE
 1988,23: ,
 1988,25: size_t
 1988,31: TYPE
 1988,32: __size
 1988,38: VARIABLE
 1988,38: ,
 1988,40: __compar_fn_t
 1988,53: TYPE
 1988,54: __compar
 1988,62: VARIABLE
 1988,62: )
 
186 const 
 1987,23: const
 
103 void 
 1987,29: void
 
298 * option_type_qualifier_list option_pointer 
 1987,34: *
 
386 NAME VARIABLE 
 1987,35: __key
 1987,40: VARIABLE
 
65 VARIABLE 
 1987,40: VARIABLE
 
300 , parameter_declaration 
 1987,40: ,
 1987,42: const
 1987,48: void
 1987,53: *
 1987,54: __base
 1987,60: VARIABLE
 
391 const 
 1987,42: const
 
103 void 
 1987,48: void
 
298 * option_type_qualifier_list option_pointer 
 1987,53: *
 
386 NAME VARIABLE 
 1987,54: __base
 1987,60: VARIABLE
 
65 VARIABLE 
 1987,60: VARIABLE
 
300 , parameter_declaration 
 1987,60: ,
 1988,9: size_t
 1988,15: TYPE
 1988,16: __nmemb
 1988,23: VARIABLE
 
391 NAME TYPE 
 1988,9: size_t
 1988,15: TYPE
 
26 TYPE 
 1988,15: TYPE
 
298 NAME VARIABLE 
 1988,16: __nmemb
 1988,23: VARIABLE
 
65 VARIABLE 
 1988,23: VARIABLE
 
300 , parameter_declaration 
 1988,23: ,
 1988,25: size_t
 1988,31: TYPE
 1988,32: __size
 1988,38: VARIABLE
 
391 NAME TYPE 
 1988,25: size_t
 1988,31: TYPE
 
26 TYPE 
 1988,31: TYPE
 
298 NAME VARIABLE 
 1988,32: __size
 1988,38: VARIABLE
 
65 VARIABLE 
 1988,38: VARIABLE
 
300 , parameter_declaration 
 1988,38: ,
 1988,40: __compar_fn_t
 1988,53: TYPE
 1988,54: __compar
 1988,62: VARIABLE
 
391 NAME TYPE 
 1988,40: __compar_fn_t
 1988,53: TYPE
 
26 TYPE 
 1988,53: TYPE
 
298 NAME VARIABLE 
 1988,54: __compar
 1988,62: VARIABLE
 
65 VARIABLE 
 1988,62: VARIABLE
 
187 ) 
 1988,62: )
 
60 ; 
 1989,7: ;
 
23 extern 
 1997,1: extern
 
8 void 
 1997,8: void
 
5 NAME VARIABLE 
 1997,13: qsort
 1997,18: VARIABLE
 
65 VARIABLE 
 1997,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1997,19: (
 1997,20: void
 1997,25: *
 1997,26: __base
 1997,32: VARIABLE
 1997,32: ,
 1997,34: size_t
 1997,40: TYPE
 1997,41: __nmemb
 1997,48: VARIABLE
 1997,48: ,
 1997,50: size_t
 1997,56: TYPE
 1997,57: __size
 1997,63: VARIABLE
 1997,63: ,
 1998,6: __compar_fn_t
 1998,19: TYPE
 1998,20: __compar
 1998,28: VARIABLE
 1998,28: )
 
186 void 
 1997,20: void
 
298 * option_type_qualifier_list option_pointer 
 1997,25: *
 
386 NAME VARIABLE 
 1997,26: __base
 1997,32: VARIABLE
 
65 VARIABLE 
 1997,32: VARIABLE
 
300 , parameter_declaration 
 1997,32: ,
 1997,34: size_t
 1997,40: TYPE
 1997,41: __nmemb
 1997,48: VARIABLE
 
391 NAME TYPE 
 1997,34: size_t
 1997,40: TYPE
 
26 TYPE 
 1997,40: TYPE
 
298 NAME VARIABLE 
 1997,41: __nmemb
 1997,48: VARIABLE
 
65 VARIABLE 
 1997,48: VARIABLE
 
300 , parameter_declaration 
 1997,48: ,
 1997,50: size_t
 1997,56: TYPE
 1997,57: __size
 1997,63: VARIABLE
 
391 NAME TYPE 
 1997,50: size_t
 1997,56: TYPE
 
26 TYPE 
 1997,56: TYPE
 
298 NAME VARIABLE 
 1997,57: __size
 1997,63: VARIABLE
 
65 VARIABLE 
 1997,63: VARIABLE
 
300 , parameter_declaration 
 1997,63: ,
 1998,6: __compar_fn_t
 1998,19: TYPE
 1998,20: __compar
 1998,28: VARIABLE
 
391 NAME TYPE 
 1998,6: __compar_fn_t
 1998,19: TYPE
 
26 TYPE 
 1998,19: TYPE
 
298 NAME VARIABLE 
 1998,20: __compar
 1998,28: VARIABLE
 
65 VARIABLE 
 1998,28: VARIABLE
 
187 ) 
 1998,28: )
 
60 ; 
 1998,30: ;
 
23 extern 
 2000,1: extern
 
8 int 
 2000,8: int
 
5 NAME VARIABLE 
 2000,12: abs
 2000,15: VARIABLE
 
65 VARIABLE 
 2000,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2000,16: (
 2000,17: int
 2000,21: __x
 2000,24: VARIABLE
 2000,24: )
 
186 int 
 2000,17: int
 
298 NAME VARIABLE 
 2000,21: __x
 2000,24: VARIABLE
 
65 VARIABLE 
 2000,24: VARIABLE
 
187 ) 
 2000,24: )
 
60 ; 
 2000,28: ;
 
23 extern 
 2001,1: extern
 
8 long 
 2001,8: long
 
17 int 
 2001,13: int
 
5 NAME VARIABLE 
 2001,17: labs
 2001,21: VARIABLE
 
65 VARIABLE 
 2001,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2001,22: (
 2001,23: long
 2001,28: int
 2001,32: __x
 2001,35: VARIABLE
 2001,35: )
 
186 long 
 2001,23: long
 
106 int 
 2001,28: int
 
298 NAME VARIABLE 
 2001,32: __x
 2001,35: VARIABLE
 
65 VARIABLE 
 2001,35: VARIABLE
 
187 ) 
 2001,35: )
 
60 ; 
 2001,39: ;
 
23 extern 
 2004,2: extern
 
8 long 
 2004,9: long
 
17 long 
 2004,14: long
 
17 int 
 2004,19: int
 
5 NAME VARIABLE 
 2004,23: llabs
 2004,28: VARIABLE
 
65 VARIABLE 
 2004,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2004,29: (
 2004,30: long
 2004,35: long
 2004,40: int
 2004,44: __x
 2004,47: VARIABLE
 2004,47: )
 
186 long 
 2004,30: long
 
106 long 
 2004,35: long
 
106 int 
 2004,40: int
 
298 NAME VARIABLE 
 2004,44: __x
 2004,47: VARIABLE
 
65 VARIABLE 
 2004,47: VARIABLE
 
187 ) 
 2004,47: )
 
60 ; 
 2005,8: ;
 
23 extern 
 2012,1: extern
 
8 NAME TYPE 
 2012,8: div_t
 2012,13: TYPE
 
26 TYPE 
 2012,13: TYPE
 
5 NAME VARIABLE 
 2012,14: div
 2012,17: VARIABLE
 
65 VARIABLE 
 2012,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2012,18: (
 2012,19: int
 2012,23: __numer
 2012,30: VARIABLE
 2012,30: ,
 2012,32: int
 2012,36: __denom
 2012,43: VARIABLE
 2012,43: )
 
186 int 
 2012,19: int
 
298 NAME VARIABLE 
 2012,23: __numer
 2012,30: VARIABLE
 
65 VARIABLE 
 2012,30: VARIABLE
 
300 , parameter_declaration 
 2012,30: ,
 2012,32: int
 2012,36: __denom
 2012,43: VARIABLE
 
391 int 
 2012,32: int
 
298 NAME VARIABLE 
 2012,36: __denom
 2012,43: VARIABLE
 
65 VARIABLE 
 2012,43: VARIABLE
 
187 ) 
 2012,43: )
 
60 ; 
 2013,8: ;
 
23 extern 
 2014,1: extern
 
8 NAME TYPE 
 2014,8: ldiv_t
 2014,14: TYPE
 
26 TYPE 
 2014,14: TYPE
 
5 NAME VARIABLE 
 2014,15: ldiv
 2014,19: VARIABLE
 
65 VARIABLE 
 2014,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2014,20: (
 2014,21: long
 2014,26: int
 2014,30: __numer
 2014,37: VARIABLE
 2014,37: ,
 2014,39: long
 2014,44: int
 2014,48: __denom
 2014,55: VARIABLE
 2014,55: )
 
186 long 
 2014,21: long
 
106 int 
 2014,26: int
 
298 NAME VARIABLE 
 2014,30: __numer
 2014,37: VARIABLE
 
65 VARIABLE 
 2014,37: VARIABLE
 
300 , parameter_declaration 
 2014,37: ,
 2014,39: long
 2014,44: int
 2014,48: __denom
 2014,55: VARIABLE
 
391 long 
 2014,39: long
 
106 int 
 2014,44: int
 
298 NAME VARIABLE 
 2014,48: __denom
 2014,55: VARIABLE
 
65 VARIABLE 
 2014,55: VARIABLE
 
187 ) 
 2014,55: )
 
60 ; 
 2015,8: ;
 
23 extern 
 2018,2: extern
 
8 NAME TYPE 
 2018,9: lldiv_t
 2018,16: TYPE
 
26 TYPE 
 2018,16: TYPE
 
5 NAME VARIABLE 
 2018,17: lldiv
 2018,22: VARIABLE
 
65 VARIABLE 
 2018,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2018,23: (
 2018,24: long
 2018,29: long
 2018,34: int
 2018,38: __numer
 2018,45: VARIABLE
 2018,45: ,
 2019,9: long
 2019,14: long
 2019,19: int
 2019,23: __denom
 2019,30: VARIABLE
 2019,30: )
 
186 long 
 2018,24: long
 
106 long 
 2018,29: long
 
106 int 
 2018,34: int
 
298 NAME VARIABLE 
 2018,38: __numer
 2018,45: VARIABLE
 
65 VARIABLE 
 2018,45: VARIABLE
 
300 , parameter_declaration 
 2018,45: ,
 2019,9: long
 2019,14: long
 2019,19: int
 2019,23: __denom
 2019,30: VARIABLE
 
391 long 
 2019,9: long
 
106 long 
 2019,14: long
 
106 int 
 2019,19: int
 
298 NAME VARIABLE 
 2019,23: __denom
 2019,30: VARIABLE
 
65 VARIABLE 
 2019,30: VARIABLE
 
187 ) 
 2019,30: )
 
60 ; 
 2020,8: ;
 
23 extern 
 2022,1: extern
 
8 char 
 2022,8: char
 
5 * option_type_qualifier_list option_pointer 
 2022,13: *
 
64 NAME VARIABLE 
 2022,14: ecvt
 2022,18: VARIABLE
 
65 VARIABLE 
 2022,18: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2022,19: (
 2022,20: double
 2022,27: __value
 2022,34: VARIABLE
 2022,34: ,
 2022,36: int
 2022,40: __ndigit
 2022,48: VARIABLE
 2022,48: ,
 2022,50: int
 2022,54: *
 2022,56: __decpt
 2022,63: VARIABLE
 2022,63: ,
 2023,6: int
 2023,10: *
 2023,12: __sign
 2023,18: VARIABLE
 2023,18: )
 
186 double 
 2022,20: double
 
298 NAME VARIABLE 
 2022,27: __value
 2022,34: VARIABLE
 
65 VARIABLE 
 2022,34: VARIABLE
 
300 , parameter_declaration 
 2022,34: ,
 2022,36: int
 2022,40: __ndigit
 2022,48: VARIABLE
 
391 int 
 2022,36: int
 
298 NAME VARIABLE 
 2022,40: __ndigit
 2022,48: VARIABLE
 
65 VARIABLE 
 2022,48: VARIABLE
 
300 , parameter_declaration 
 2022,48: ,
 2022,50: int
 2022,54: *
 2022,56: __decpt
 2022,63: VARIABLE
 
391 int 
 2022,50: int
 
298 * option_type_qualifier_list option_pointer 
 2022,54: *
 
386 NAME VARIABLE 
 2022,56: __decpt
 2022,63: VARIABLE
 
65 VARIABLE 
 2022,63: VARIABLE
 
300 , parameter_declaration 
 2022,63: ,
 2023,6: int
 2023,10: *
 2023,12: __sign
 2023,18: VARIABLE
 
391 int 
 2023,6: int
 
298 * option_type_qualifier_list option_pointer 
 2023,10: *
 
386 NAME VARIABLE 
 2023,12: __sign
 2023,18: VARIABLE
 
65 VARIABLE 
 2023,18: VARIABLE
 
187 ) 
 2023,18: )
 
60 ; 
 2023,22: ;
 
23 extern 
 2028,1: extern
 
8 char 
 2028,8: char
 
5 * option_type_qualifier_list option_pointer 
 2028,13: *
 
64 NAME VARIABLE 
 2028,14: fcvt
 2028,18: VARIABLE
 
65 VARIABLE 
 2028,18: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2028,19: (
 2028,20: double
 2028,27: __value
 2028,34: VARIABLE
 2028,34: ,
 2028,36: int
 2028,40: __ndigit
 2028,48: VARIABLE
 2028,48: ,
 2028,50: int
 2028,54: *
 2028,56: __decpt
 2028,63: VARIABLE
 2028,63: ,
 2029,6: int
 2029,10: *
 2029,12: __sign
 2029,18: VARIABLE
 2029,18: )
 
186 double 
 2028,20: double
 
298 NAME VARIABLE 
 2028,27: __value
 2028,34: VARIABLE
 
65 VARIABLE 
 2028,34: VARIABLE
 
300 , parameter_declaration 
 2028,34: ,
 2028,36: int
 2028,40: __ndigit
 2028,48: VARIABLE
 
391 int 
 2028,36: int
 
298 NAME VARIABLE 
 2028,40: __ndigit
 2028,48: VARIABLE
 
65 VARIABLE 
 2028,48: VARIABLE
 
300 , parameter_declaration 
 2028,48: ,
 2028,50: int
 2028,54: *
 2028,56: __decpt
 2028,63: VARIABLE
 
391 int 
 2028,50: int
 
298 * option_type_qualifier_list option_pointer 
 2028,54: *
 
386 NAME VARIABLE 
 2028,56: __decpt
 2028,63: VARIABLE
 
65 VARIABLE 
 2028,63: VARIABLE
 
300 , parameter_declaration 
 2028,63: ,
 2029,6: int
 2029,10: *
 2029,12: __sign
 2029,18: VARIABLE
 
391 int 
 2029,6: int
 
298 * option_type_qualifier_list option_pointer 
 2029,10: *
 
386 NAME VARIABLE 
 2029,12: __sign
 2029,18: VARIABLE
 
65 VARIABLE 
 2029,18: VARIABLE
 
187 ) 
 2029,18: )
 
60 ; 
 2029,22: ;
 
23 extern 
 2034,1: extern
 
8 char 
 2034,8: char
 
5 * option_type_qualifier_list option_pointer 
 2034,13: *
 
64 NAME VARIABLE 
 2034,14: gcvt
 2034,18: VARIABLE
 
65 VARIABLE 
 2034,18: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2034,19: (
 2034,20: double
 2034,27: __value
 2034,34: VARIABLE
 2034,34: ,
 2034,36: int
 2034,40: __ndigit
 2034,48: VARIABLE
 2034,48: ,
 2034,50: char
 2034,55: *
 2034,56: __buf
 2034,61: VARIABLE
 2034,61: )
 
186 double 
 2034,20: double
 
298 NAME VARIABLE 
 2034,27: __value
 2034,34: VARIABLE
 
65 VARIABLE 
 2034,34: VARIABLE
 
300 , parameter_declaration 
 2034,34: ,
 2034,36: int
 2034,40: __ndigit
 2034,48: VARIABLE
 
391 int 
 2034,36: int
 
298 NAME VARIABLE 
 2034,40: __ndigit
 2034,48: VARIABLE
 
65 VARIABLE 
 2034,48: VARIABLE
 
300 , parameter_declaration 
 2034,48: ,
 2034,50: char
 2034,55: *
 2034,56: __buf
 2034,61: VARIABLE
 
391 char 
 2034,50: char
 
298 * option_type_qualifier_list option_pointer 
 2034,55: *
 
386 NAME VARIABLE 
 2034,56: __buf
 2034,61: VARIABLE
 
65 VARIABLE 
 2034,61: VARIABLE
 
187 ) 
 2034,61: )
 
60 ; 
 2035,8: ;
 
23 extern 
 2040,1: extern
 
8 char 
 2040,8: char
 
5 * option_type_qualifier_list option_pointer 
 2040,13: *
 
64 NAME VARIABLE 
 2040,14: qecvt
 2040,19: VARIABLE
 
65 VARIABLE 
 2040,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2040,20: (
 2040,21: long
 2040,26: double
 2040,33: __value
 2040,40: VARIABLE
 2040,40: ,
 2040,42: int
 2040,46: __ndigit
 2040,54: VARIABLE
 2040,54: ,
 2041,7: int
 2041,11: *
 2041,13: __decpt
 2041,20: VARIABLE
 2041,20: ,
 2041,22: int
 2041,26: *
 2041,28: __sign
 2041,34: VARIABLE
 2041,34: )
 
186 long 
 2040,21: long
 
106 double 
 2040,26: double
 
298 NAME VARIABLE 
 2040,33: __value
 2040,40: VARIABLE
 
65 VARIABLE 
 2040,40: VARIABLE
 
300 , parameter_declaration 
 2040,40: ,
 2040,42: int
 2040,46: __ndigit
 2040,54: VARIABLE
 
391 int 
 2040,42: int
 
298 NAME VARIABLE 
 2040,46: __ndigit
 2040,54: VARIABLE
 
65 VARIABLE 
 2040,54: VARIABLE
 
300 , parameter_declaration 
 2040,54: ,
 2041,7: int
 2041,11: *
 2041,13: __decpt
 2041,20: VARIABLE
 
391 int 
 2041,7: int
 
298 * option_type_qualifier_list option_pointer 
 2041,11: *
 
386 NAME VARIABLE 
 2041,13: __decpt
 2041,20: VARIABLE
 
65 VARIABLE 
 2041,20: VARIABLE
 
300 , parameter_declaration 
 2041,20: ,
 2041,22: int
 2041,26: *
 2041,28: __sign
 2041,34: VARIABLE
 
391 int 
 2041,22: int
 
298 * option_type_qualifier_list option_pointer 
 2041,26: *
 
386 NAME VARIABLE 
 2041,28: __sign
 2041,34: VARIABLE
 
65 VARIABLE 
 2041,34: VARIABLE
 
187 ) 
 2041,34: )
 
60 ; 
 2042,8: ;
 
23 extern 
 2043,1: extern
 
8 char 
 2043,8: char
 
5 * option_type_qualifier_list option_pointer 
 2043,13: *
 
64 NAME VARIABLE 
 2043,14: qfcvt
 2043,19: VARIABLE
 
65 VARIABLE 
 2043,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2043,20: (
 2043,21: long
 2043,26: double
 2043,33: __value
 2043,40: VARIABLE
 2043,40: ,
 2043,42: int
 2043,46: __ndigit
 2043,54: VARIABLE
 2043,54: ,
 2044,7: int
 2044,11: *
 2044,13: __decpt
 2044,20: VARIABLE
 2044,20: ,
 2044,22: int
 2044,26: *
 2044,28: __sign
 2044,34: VARIABLE
 2044,34: )
 
186 long 
 2043,21: long
 
106 double 
 2043,26: double
 
298 NAME VARIABLE 
 2043,33: __value
 2043,40: VARIABLE
 
65 VARIABLE 
 2043,40: VARIABLE
 
300 , parameter_declaration 
 2043,40: ,
 2043,42: int
 2043,46: __ndigit
 2043,54: VARIABLE
 
391 int 
 2043,42: int
 
298 NAME VARIABLE 
 2043,46: __ndigit
 2043,54: VARIABLE
 
65 VARIABLE 
 2043,54: VARIABLE
 
300 , parameter_declaration 
 2043,54: ,
 2044,7: int
 2044,11: *
 2044,13: __decpt
 2044,20: VARIABLE
 
391 int 
 2044,7: int
 
298 * option_type_qualifier_list option_pointer 
 2044,11: *
 
386 NAME VARIABLE 
 2044,13: __decpt
 2044,20: VARIABLE
 
65 VARIABLE 
 2044,20: VARIABLE
 
300 , parameter_declaration 
 2044,20: ,
 2044,22: int
 2044,26: *
 2044,28: __sign
 2044,34: VARIABLE
 
391 int 
 2044,22: int
 
298 * option_type_qualifier_list option_pointer 
 2044,26: *
 
386 NAME VARIABLE 
 2044,28: __sign
 2044,34: VARIABLE
 
65 VARIABLE 
 2044,34: VARIABLE
 
187 ) 
 2044,34: )
 
60 ; 
 2045,8: ;
 
23 extern 
 2046,1: extern
 
8 char 
 2046,8: char
 
5 * option_type_qualifier_list option_pointer 
 2046,13: *
 
64 NAME VARIABLE 
 2046,14: qgcvt
 2046,19: VARIABLE
 
65 VARIABLE 
 2046,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2046,20: (
 2046,21: long
 2046,26: double
 2046,33: __value
 2046,40: VARIABLE
 2046,40: ,
 2046,42: int
 2046,46: __ndigit
 2046,54: VARIABLE
 2046,54: ,
 2046,56: char
 2046,61: *
 2046,62: __buf
 2046,67: VARIABLE
 2046,67: )
 
186 long 
 2046,21: long
 
106 double 
 2046,26: double
 
298 NAME VARIABLE 
 2046,33: __value
 2046,40: VARIABLE
 
65 VARIABLE 
 2046,40: VARIABLE
 
300 , parameter_declaration 
 2046,40: ,
 2046,42: int
 2046,46: __ndigit
 2046,54: VARIABLE
 
391 int 
 2046,42: int
 
298 NAME VARIABLE 
 2046,46: __ndigit
 2046,54: VARIABLE
 
65 VARIABLE 
 2046,54: VARIABLE
 
300 , parameter_declaration 
 2046,54: ,
 2046,56: char
 2046,61: *
 2046,62: __buf
 2046,67: VARIABLE
 
391 char 
 2046,56: char
 
298 * option_type_qualifier_list option_pointer 
 2046,61: *
 
386 NAME VARIABLE 
 2046,62: __buf
 2046,67: VARIABLE
 
65 VARIABLE 
 2046,67: VARIABLE
 
187 ) 
 2046,67: )
 
60 ; 
 2047,8: ;
 
23 extern 
 2052,1: extern
 
8 int 
 2052,8: int
 
5 NAME VARIABLE 
 2052,12: ecvt_r
 2052,18: VARIABLE
 
65 VARIABLE 
 2052,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2052,19: (
 2052,20: double
 2052,27: __value
 2052,34: VARIABLE
 2052,34: ,
 2052,36: int
 2052,40: __ndigit
 2052,48: VARIABLE
 2052,48: ,
 2052,50: int
 2052,54: *
 2052,56: __decpt
 2052,63: VARIABLE
 2052,63: ,
 2053,6: int
 2053,10: *
 2053,12: __sign
 2053,18: VARIABLE
 2053,18: ,
 2053,20: char
 2053,25: *
 2053,27: __buf
 2053,32: VARIABLE
 2053,32: ,
 2054,6: size_t
 2054,12: TYPE
 2054,13: __len
 2054,18: VARIABLE
 2054,18: )
 
186 double 
 2052,20: double
 
298 NAME VARIABLE 
 2052,27: __value
 2052,34: VARIABLE
 
65 VARIABLE 
 2052,34: VARIABLE
 
300 , parameter_declaration 
 2052,34: ,
 2052,36: int
 2052,40: __ndigit
 2052,48: VARIABLE
 
391 int 
 2052,36: int
 
298 NAME VARIABLE 
 2052,40: __ndigit
 2052,48: VARIABLE
 
65 VARIABLE 
 2052,48: VARIABLE
 
300 , parameter_declaration 
 2052,48: ,
 2052,50: int
 2052,54: *
 2052,56: __decpt
 2052,63: VARIABLE
 
391 int 
 2052,50: int
 
298 * option_type_qualifier_list option_pointer 
 2052,54: *
 
386 NAME VARIABLE 
 2052,56: __decpt
 2052,63: VARIABLE
 
65 VARIABLE 
 2052,63: VARIABLE
 
300 , parameter_declaration 
 2052,63: ,
 2053,6: int
 2053,10: *
 2053,12: __sign
 2053,18: VARIABLE
 
391 int 
 2053,6: int
 
298 * option_type_qualifier_list option_pointer 
 2053,10: *
 
386 NAME VARIABLE 
 2053,12: __sign
 2053,18: VARIABLE
 
65 VARIABLE 
 2053,18: VARIABLE
 
300 , parameter_declaration 
 2053,18: ,
 2053,20: char
 2053,25: *
 2053,27: __buf
 2053,32: VARIABLE
 
391 char 
 2053,20: char
 
298 * option_type_qualifier_list option_pointer 
 2053,25: *
 
386 NAME VARIABLE 
 2053,27: __buf
 2053,32: VARIABLE
 
65 VARIABLE 
 2053,32: VARIABLE
 
300 , parameter_declaration 
 2053,32: ,
 2054,6: size_t
 2054,12: TYPE
 2054,13: __len
 2054,18: VARIABLE
 
391 NAME TYPE 
 2054,6: size_t
 2054,12: TYPE
 
26 TYPE 
 2054,12: TYPE
 
298 NAME VARIABLE 
 2054,13: __len
 2054,18: VARIABLE
 
65 VARIABLE 
 2054,18: VARIABLE
 
187 ) 
 2054,18: )
 
60 ; 
 2054,21: ;
 
23 extern 
 2055,1: extern
 
8 int 
 2055,8: int
 
5 NAME VARIABLE 
 2055,12: fcvt_r
 2055,18: VARIABLE
 
65 VARIABLE 
 2055,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2055,19: (
 2055,20: double
 2055,27: __value
 2055,34: VARIABLE
 2055,34: ,
 2055,36: int
 2055,40: __ndigit
 2055,48: VARIABLE
 2055,48: ,
 2055,50: int
 2055,54: *
 2055,56: __decpt
 2055,63: VARIABLE
 2055,63: ,
 2056,6: int
 2056,10: *
 2056,12: __sign
 2056,18: VARIABLE
 2056,18: ,
 2056,20: char
 2056,25: *
 2056,27: __buf
 2056,32: VARIABLE
 2056,32: ,
 2057,6: size_t
 2057,12: TYPE
 2057,13: __len
 2057,18: VARIABLE
 2057,18: )
 
186 double 
 2055,20: double
 
298 NAME VARIABLE 
 2055,27: __value
 2055,34: VARIABLE
 
65 VARIABLE 
 2055,34: VARIABLE
 
300 , parameter_declaration 
 2055,34: ,
 2055,36: int
 2055,40: __ndigit
 2055,48: VARIABLE
 
391 int 
 2055,36: int
 
298 NAME VARIABLE 
 2055,40: __ndigit
 2055,48: VARIABLE
 
65 VARIABLE 
 2055,48: VARIABLE
 
300 , parameter_declaration 
 2055,48: ,
 2055,50: int
 2055,54: *
 2055,56: __decpt
 2055,63: VARIABLE
 
391 int 
 2055,50: int
 
298 * option_type_qualifier_list option_pointer 
 2055,54: *
 
386 NAME VARIABLE 
 2055,56: __decpt
 2055,63: VARIABLE
 
65 VARIABLE 
 2055,63: VARIABLE
 
300 , parameter_declaration 
 2055,63: ,
 2056,6: int
 2056,10: *
 2056,12: __sign
 2056,18: VARIABLE
 
391 int 
 2056,6: int
 
298 * option_type_qualifier_list option_pointer 
 2056,10: *
 
386 NAME VARIABLE 
 2056,12: __sign
 2056,18: VARIABLE
 
65 VARIABLE 
 2056,18: VARIABLE
 
300 , parameter_declaration 
 2056,18: ,
 2056,20: char
 2056,25: *
 2056,27: __buf
 2056,32: VARIABLE
 
391 char 
 2056,20: char
 
298 * option_type_qualifier_list option_pointer 
 2056,25: *
 
386 NAME VARIABLE 
 2056,27: __buf
 2056,32: VARIABLE
 
65 VARIABLE 
 2056,32: VARIABLE
 
300 , parameter_declaration 
 2056,32: ,
 2057,6: size_t
 2057,12: TYPE
 2057,13: __len
 2057,18: VARIABLE
 
391 NAME TYPE 
 2057,6: size_t
 2057,12: TYPE
 
26 TYPE 
 2057,12: TYPE
 
298 NAME VARIABLE 
 2057,13: __len
 2057,18: VARIABLE
 
65 VARIABLE 
 2057,18: VARIABLE
 
187 ) 
 2057,18: )
 
60 ; 
 2057,21: ;
 
23 extern 
 2059,1: extern
 
8 int 
 2059,8: int
 
5 NAME VARIABLE 
 2059,12: qecvt_r
 2059,19: VARIABLE
 
65 VARIABLE 
 2059,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2059,20: (
 2059,21: long
 2059,26: double
 2059,33: __value
 2059,40: VARIABLE
 2059,40: ,
 2059,42: int
 2059,46: __ndigit
 2059,54: VARIABLE
 2059,54: ,
 2060,7: int
 2060,11: *
 2060,13: __decpt
 2060,20: VARIABLE
 2060,20: ,
 2060,22: int
 2060,26: *
 2060,28: __sign
 2060,34: VARIABLE
 2060,34: ,
 2061,7: char
 2061,12: *
 2061,14: __buf
 2061,19: VARIABLE
 2061,19: ,
 2061,21: size_t
 2061,27: TYPE
 2061,28: __len
 2061,33: VARIABLE
 2061,33: )
 
186 long 
 2059,21: long
 
106 double 
 2059,26: double
 
298 NAME VARIABLE 
 2059,33: __value
 2059,40: VARIABLE
 
65 VARIABLE 
 2059,40: VARIABLE
 
300 , parameter_declaration 
 2059,40: ,
 2059,42: int
 2059,46: __ndigit
 2059,54: VARIABLE
 
391 int 
 2059,42: int
 
298 NAME VARIABLE 
 2059,46: __ndigit
 2059,54: VARIABLE
 
65 VARIABLE 
 2059,54: VARIABLE
 
300 , parameter_declaration 
 2059,54: ,
 2060,7: int
 2060,11: *
 2060,13: __decpt
 2060,20: VARIABLE
 
391 int 
 2060,7: int
 
298 * option_type_qualifier_list option_pointer 
 2060,11: *
 
386 NAME VARIABLE 
 2060,13: __decpt
 2060,20: VARIABLE
 
65 VARIABLE 
 2060,20: VARIABLE
 
300 , parameter_declaration 
 2060,20: ,
 2060,22: int
 2060,26: *
 2060,28: __sign
 2060,34: VARIABLE
 
391 int 
 2060,22: int
 
298 * option_type_qualifier_list option_pointer 
 2060,26: *
 
386 NAME VARIABLE 
 2060,28: __sign
 2060,34: VARIABLE
 
65 VARIABLE 
 2060,34: VARIABLE
 
300 , parameter_declaration 
 2060,34: ,
 2061,7: char
 2061,12: *
 2061,14: __buf
 2061,19: VARIABLE
 
391 char 
 2061,7: char
 
298 * option_type_qualifier_list option_pointer 
 2061,12: *
 
386 NAME VARIABLE 
 2061,14: __buf
 2061,19: VARIABLE
 
65 VARIABLE 
 2061,19: VARIABLE
 
300 , parameter_declaration 
 2061,19: ,
 2061,21: size_t
 2061,27: TYPE
 2061,28: __len
 2061,33: VARIABLE
 
391 NAME TYPE 
 2061,21: size_t
 2061,27: TYPE
 
26 TYPE 
 2061,27: TYPE
 
298 NAME VARIABLE 
 2061,28: __len
 2061,33: VARIABLE
 
65 VARIABLE 
 2061,33: VARIABLE
 
187 ) 
 2061,33: )
 
60 ; 
 2062,7: ;
 
23 extern 
 2063,1: extern
 
8 int 
 2063,8: int
 
5 NAME VARIABLE 
 2063,12: qfcvt_r
 2063,19: VARIABLE
 
65 VARIABLE 
 2063,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2063,20: (
 2063,21: long
 2063,26: double
 2063,33: __value
 2063,40: VARIABLE
 2063,40: ,
 2063,42: int
 2063,46: __ndigit
 2063,54: VARIABLE
 2063,54: ,
 2064,7: int
 2064,11: *
 2064,13: __decpt
 2064,20: VARIABLE
 2064,20: ,
 2064,22: int
 2064,26: *
 2064,28: __sign
 2064,34: VARIABLE
 2064,34: ,
 2065,7: char
 2065,12: *
 2065,14: __buf
 2065,19: VARIABLE
 2065,19: ,
 2065,21: size_t
 2065,27: TYPE
 2065,28: __len
 2065,33: VARIABLE
 2065,33: )
 
186 long 
 2063,21: long
 
106 double 
 2063,26: double
 
298 NAME VARIABLE 
 2063,33: __value
 2063,40: VARIABLE
 
65 VARIABLE 
 2063,40: VARIABLE
 
300 , parameter_declaration 
 2063,40: ,
 2063,42: int
 2063,46: __ndigit
 2063,54: VARIABLE
 
391 int 
 2063,42: int
 
298 NAME VARIABLE 
 2063,46: __ndigit
 2063,54: VARIABLE
 
65 VARIABLE 
 2063,54: VARIABLE
 
300 , parameter_declaration 
 2063,54: ,
 2064,7: int
 2064,11: *
 2064,13: __decpt
 2064,20: VARIABLE
 
391 int 
 2064,7: int
 
298 * option_type_qualifier_list option_pointer 
 2064,11: *
 
386 NAME VARIABLE 
 2064,13: __decpt
 2064,20: VARIABLE
 
65 VARIABLE 
 2064,20: VARIABLE
 
300 , parameter_declaration 
 2064,20: ,
 2064,22: int
 2064,26: *
 2064,28: __sign
 2064,34: VARIABLE
 
391 int 
 2064,22: int
 
298 * option_type_qualifier_list option_pointer 
 2064,26: *
 
386 NAME VARIABLE 
 2064,28: __sign
 2064,34: VARIABLE
 
65 VARIABLE 
 2064,34: VARIABLE
 
300 , parameter_declaration 
 2064,34: ,
 2065,7: char
 2065,12: *
 2065,14: __buf
 2065,19: VARIABLE
 
391 char 
 2065,7: char
 
298 * option_type_qualifier_list option_pointer 
 2065,12: *
 
386 NAME VARIABLE 
 2065,14: __buf
 2065,19: VARIABLE
 
65 VARIABLE 
 2065,19: VARIABLE
 
300 , parameter_declaration 
 2065,19: ,
 2065,21: size_t
 2065,27: TYPE
 2065,28: __len
 2065,33: VARIABLE
 
391 NAME TYPE 
 2065,21: size_t
 2065,27: TYPE
 
26 TYPE 
 2065,27: TYPE
 
298 NAME VARIABLE 
 2065,28: __len
 2065,33: VARIABLE
 
65 VARIABLE 
 2065,33: VARIABLE
 
187 ) 
 2065,33: )
 
60 ; 
 2066,7: ;
 
23 extern 
 2072,1: extern
 
8 int 
 2072,8: int
 
5 NAME VARIABLE 
 2072,12: mblen
 2072,17: VARIABLE
 
65 VARIABLE 
 2072,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2072,18: (
 2072,19: const
 2072,25: char
 2072,30: *
 2072,31: __s
 2072,34: VARIABLE
 2072,34: ,
 2072,36: size_t
 2072,42: TYPE
 2072,43: __n
 2072,46: VARIABLE
 2072,46: )
 
186 const 
 2072,19: const
 
103 char 
 2072,25: char
 
298 * option_type_qualifier_list option_pointer 
 2072,30: *
 
386 NAME VARIABLE 
 2072,31: __s
 2072,34: VARIABLE
 
65 VARIABLE 
 2072,34: VARIABLE
 
300 , parameter_declaration 
 2072,34: ,
 2072,36: size_t
 2072,42: TYPE
 2072,43: __n
 2072,46: VARIABLE
 
391 NAME TYPE 
 2072,36: size_t
 2072,42: TYPE
 
26 TYPE 
 2072,42: TYPE
 
298 NAME VARIABLE 
 2072,43: __n
 2072,46: VARIABLE
 
65 VARIABLE 
 2072,46: VARIABLE
 
187 ) 
 2072,46: )
 
60 ; 
 2072,48: ;
 
23 extern 
 2075,1: extern
 
8 int 
 2075,8: int
 
5 NAME VARIABLE 
 2075,12: mbtowc
 2075,18: VARIABLE
 
65 VARIABLE 
 2075,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2075,19: (
 2075,20: wchar_t
 2075,27: TYPE
 2075,28: *
 2075,30: __pwc
 2075,35: VARIABLE
 2075,35: ,
 2076,6: const
 2076,12: char
 2076,17: *
 2076,19: __s
 2076,22: VARIABLE
 2076,22: ,
 2076,24: size_t
 2076,30: TYPE
 2076,31: __n
 2076,34: VARIABLE
 2076,34: )
 
186 NAME TYPE 
 2075,20: wchar_t
 2075,27: TYPE
 
65 TYPE 
 2075,27: TYPE
 
298 * option_type_qualifier_list option_pointer 
 2075,28: *
 
386 NAME VARIABLE 
 2075,30: __pwc
 2075,35: VARIABLE
 
65 VARIABLE 
 2075,35: VARIABLE
 
300 , parameter_declaration 
 2075,35: ,
 2076,6: const
 2076,12: char
 2076,17: *
 2076,19: __s
 2076,22: VARIABLE
 
391 const 
 2076,6: const
 
103 char 
 2076,12: char
 
298 * option_type_qualifier_list option_pointer 
 2076,17: *
 
386 NAME VARIABLE 
 2076,19: __s
 2076,22: VARIABLE
 
65 VARIABLE 
 2076,22: VARIABLE
 
300 , parameter_declaration 
 2076,22: ,
 2076,24: size_t
 2076,30: TYPE
 2076,31: __n
 2076,34: VARIABLE
 
391 NAME TYPE 
 2076,24: size_t
 2076,30: TYPE
 
26 TYPE 
 2076,30: TYPE
 
298 NAME VARIABLE 
 2076,31: __n
 2076,34: VARIABLE
 
65 VARIABLE 
 2076,34: VARIABLE
 
187 ) 
 2076,34: )
 
60 ; 
 2076,36: ;
 
23 extern 
 2079,1: extern
 
8 int 
 2079,8: int
 
5 NAME VARIABLE 
 2079,12: wctomb
 2079,18: VARIABLE
 
65 VARIABLE 
 2079,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2079,19: (
 2079,20: char
 2079,25: *
 2079,26: __s
 2079,29: VARIABLE
 2079,29: ,
 2079,31: wchar_t
 2079,38: TYPE
 2079,39: __wchar
 2079,46: VARIABLE
 2079,46: )
 
186 char 
 2079,20: char
 
298 * option_type_qualifier_list option_pointer 
 2079,25: *
 
386 NAME VARIABLE 
 2079,26: __s
 2079,29: VARIABLE
 
65 VARIABLE 
 2079,29: VARIABLE
 
300 , parameter_declaration 
 2079,29: ,
 2079,31: wchar_t
 2079,38: TYPE
 2079,39: __wchar
 2079,46: VARIABLE
 
391 NAME TYPE 
 2079,31: wchar_t
 2079,38: TYPE
 
26 TYPE 
 2079,38: TYPE
 
298 NAME VARIABLE 
 2079,39: __wchar
 2079,46: VARIABLE
 
65 VARIABLE 
 2079,46: VARIABLE
 
187 ) 
 2079,46: )
 
60 ; 
 2079,48: ;
 
23 extern 
 2083,1: extern
 
8 NAME TYPE 
 2083,8: size_t
 2083,14: TYPE
 
26 TYPE 
 2083,14: TYPE
 
5 NAME VARIABLE 
 2083,15: mbstowcs
 2083,23: VARIABLE
 
65 VARIABLE 
 2083,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2083,24: (
 2083,25: wchar_t
 2083,32: TYPE
 2083,33: *
 2083,35: __pwcs
 2083,41: VARIABLE
 2083,41: ,
 2084,4: const
 2084,10: char
 2084,15: *
 2084,17: __s
 2084,20: VARIABLE
 2084,20: ,
 2084,22: size_t
 2084,28: TYPE
 2084,29: __n
 2084,32: VARIABLE
 2084,32: )
 
186 NAME TYPE 
 2083,25: wchar_t
 2083,32: TYPE
 
65 TYPE 
 2083,32: TYPE
 
298 * option_type_qualifier_list option_pointer 
 2083,33: *
 
386 NAME VARIABLE 
 2083,35: __pwcs
 2083,41: VARIABLE
 
65 VARIABLE 
 2083,41: VARIABLE
 
300 , parameter_declaration 
 2083,41: ,
 2084,4: const
 2084,10: char
 2084,15: *
 2084,17: __s
 2084,20: VARIABLE
 
391 const 
 2084,4: const
 
103 char 
 2084,10: char
 
298 * option_type_qualifier_list option_pointer 
 2084,15: *
 
386 NAME VARIABLE 
 2084,17: __s
 2084,20: VARIABLE
 
65 VARIABLE 
 2084,20: VARIABLE
 
300 , parameter_declaration 
 2084,20: ,
 2084,22: size_t
 2084,28: TYPE
 2084,29: __n
 2084,32: VARIABLE
 
391 NAME TYPE 
 2084,22: size_t
 2084,28: TYPE
 
26 TYPE 
 2084,28: TYPE
 
298 NAME VARIABLE 
 2084,29: __n
 2084,32: VARIABLE
 
65 VARIABLE 
 2084,32: VARIABLE
 
187 ) 
 2084,32: )
 
60 ; 
 2085,5: ;
 
23 extern 
 2087,1: extern
 
8 NAME TYPE 
 2087,8: size_t
 2087,14: TYPE
 
26 TYPE 
 2087,14: TYPE
 
5 NAME VARIABLE 
 2087,15: wcstombs
 2087,23: VARIABLE
 
65 VARIABLE 
 2087,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2087,24: (
 2087,25: char
 2087,30: *
 2087,32: __s
 2087,35: VARIABLE
 2087,35: ,
 2088,4: const
 2088,10: wchar_t
 2088,17: TYPE
 2088,18: *
 2088,20: __pwcs
 2088,26: VARIABLE
 2088,26: ,
 2088,28: size_t
 2088,34: TYPE
 2088,35: __n
 2088,38: VARIABLE
 2088,38: )
 
186 char 
 2087,25: char
 
298 * option_type_qualifier_list option_pointer 
 2087,30: *
 
386 NAME VARIABLE 
 2087,32: __s
 2087,35: VARIABLE
 
65 VARIABLE 
 2087,35: VARIABLE
 
300 , parameter_declaration 
 2087,35: ,
 2088,4: const
 2088,10: wchar_t
 2088,17: TYPE
 2088,18: *
 2088,20: __pwcs
 2088,26: VARIABLE
 
391 const 
 2088,4: const
 
103 NAME TYPE 
 2088,10: wchar_t
 2088,17: TYPE
 
26 TYPE 
 2088,17: TYPE
 
298 * option_type_qualifier_list option_pointer 
 2088,18: *
 
386 NAME VARIABLE 
 2088,20: __pwcs
 2088,26: VARIABLE
 
65 VARIABLE 
 2088,26: VARIABLE
 
300 , parameter_declaration 
 2088,26: ,
 2088,28: size_t
 2088,34: TYPE
 2088,35: __n
 2088,38: VARIABLE
 
391 NAME TYPE 
 2088,28: size_t
 2088,34: TYPE
 
26 TYPE 
 2088,34: TYPE
 
298 NAME VARIABLE 
 2088,35: __n
 2088,38: VARIABLE
 
65 VARIABLE 
 2088,38: VARIABLE
 
187 ) 
 2088,38: )
 
60 ; 
 2091,3: ;
 
23 extern 
 2098,1: extern
 
8 int 
 2098,8: int
 
5 NAME VARIABLE 
 2098,12: rpmatch
 2098,19: VARIABLE
 
65 VARIABLE 
 2098,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2098,20: (
 2098,21: const
 2098,27: char
 2098,32: *
 2098,33: __response
 2098,43: VARIABLE
 2098,43: )
 
186 const 
 2098,21: const
 
103 char 
 2098,27: char
 
298 * option_type_qualifier_list option_pointer 
 2098,32: *
 
386 NAME VARIABLE 
 2098,33: __response
 2098,43: VARIABLE
 
65 VARIABLE 
 2098,43: VARIABLE
 
187 ) 
 2098,43: )
 
60 ; 
 2098,47: ;
 
23 extern 
 2100,1: extern
 
8 int 
 2100,8: int
 
5 NAME VARIABLE 
 2100,12: getsubopt
 2100,21: VARIABLE
 
65 VARIABLE 
 2100,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2100,22: (
 2100,23: char
 2100,28: *
 2100,29: *
 2100,31: __optionp
 2100,40: VARIABLE
 2100,40: ,
 2101,9: char
 2101,14: *
 2101,15: const
 2101,21: *
 2101,23: __tokens
 2101,31: VARIABLE
 2101,31: ,
 2102,9: char
 2102,14: *
 2102,15: *
 2102,17: __valuep
 2102,25: VARIABLE
 2102,25: )
 
186 char 
 2100,23: char
 
298 * option_type_qualifier_list option_pointer 
 2100,28: *
 2100,29: *
 
116 * option_type_qualifier_list option_pointer 
 2100,29: *
 
386 NAME VARIABLE 
 2100,31: __optionp
 2100,40: VARIABLE
 
65 VARIABLE 
 2100,40: VARIABLE
 
300 , parameter_declaration 
 2100,40: ,
 2101,9: char
 2101,14: *
 2101,15: const
 2101,21: *
 2101,23: __tokens
 2101,31: VARIABLE
 
391 char 
 2101,9: char
 
298 * option_type_qualifier_list option_pointer 
 2101,14: *
 2101,15: const
 2101,21: *
 
116 const 
 2101,15: const
 
116 * option_type_qualifier_list option_pointer 
 2101,21: *
 
386 NAME VARIABLE 
 2101,23: __tokens
 2101,31: VARIABLE
 
65 VARIABLE 
 2101,31: VARIABLE
 
300 , parameter_declaration 
 2101,31: ,
 2102,9: char
 2102,14: *
 2102,15: *
 2102,17: __valuep
 2102,25: VARIABLE
 
391 char 
 2102,9: char
 
298 * option_type_qualifier_list option_pointer 
 2102,14: *
 2102,15: *
 
116 * option_type_qualifier_list option_pointer 
 2102,15: *
 
386 NAME VARIABLE 
 2102,17: __valuep
 2102,25: VARIABLE
 
65 VARIABLE 
 2102,25: VARIABLE
 
187 ) 
 2102,25: )
 
60 ; 
 2103,8: ;
 
23 extern 
 2105,1: extern
 
8 int 
 2105,8: int
 
5 NAME VARIABLE 
 2105,12: getloadavg
 2105,22: VARIABLE
 
65 VARIABLE 
 2105,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2105,23: (
 2105,24: double
 2105,31: __loadavg
 2105,40: VARIABLE
 2105,40: [
 2105,41: ]
 2105,42: ,
 2105,44: int
 2105,48: __nelem
 2105,55: VARIABLE
 2105,55: )
 
186 double 
 2105,24: double
 
298 NAME VARIABLE 
 2105,31: __loadavg
 2105,40: VARIABLE
 
65 VARIABLE 
 2105,40: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 2105,40: [
 2105,41: ]
 
305 ] 
 2105,41: ]
 
300 , parameter_declaration 
 2105,42: ,
 2105,44: int
 2105,48: __nelem
 2105,55: VARIABLE
 
391 int 
 2105,44: int
 
298 NAME VARIABLE 
 2105,48: __nelem
 2105,55: VARIABLE
 
65 VARIABLE 
 2105,55: VARIABLE
 
187 ) 
 2105,55: )
 
60 ; 
 2106,7: ;
 
23 enum option_general_identifier { enumerator_list option_comma } 
 2117,1: enum
 2118,1: {
 2119,3: _ISupper
 2119,11: VARIABLE
 2119,12: =
 2119,14: (
 2119,15: (
 2119,16: 0
 2119,17: )
 2119,19: <
 2119,21: 8
 2119,23: ?
 2119,25: (
 2119,26: (
 2119,27: 1
 2119,29: <<
 2119,32: (
 2119,33: 0
 2119,34: )
 2119,35: )
 2119,37: <<
 2119,40: 8
 2119,41: )
 2119,43: :
 2119,45: (
 2119,46: (
 2119,47: 1
 2119,49: <<
 2119,52: (
 2119,53: 0
 2119,54: )
 2119,55: )
 2119,57: >>
 2119,60: 8
 2119,61: )
 2119,62: )
 2119,63: ,
 2120,3: _ISlower
 2120,11: VARIABLE
 2120,12: =
 2120,14: (
 2120,15: (
 2120,16: 1
 2120,17: )
 2120,19: <
 2120,21: 8
 2120,23: ?
 2120,25: (
 2120,26: (
 2120,27: 1
 2120,29: <<
 2120,32: (
 2120,33: 1
 2120,34: )
 2120,35: )
 2120,37: <<
 2120,40: 8
 2120,41: )
 2120,43: :
 2120,45: (
 2120,46: (
 2120,47: 1
 2120,49: <<
 2120,52: (
 2120,53: 1
 2120,54: )
 2120,55: )
 2120,57: >>
 2120,60: 8
 2120,61: )
 2120,62: )
 2120,63: ,
 2121,3: _ISalpha
 2121,11: VARIABLE
 2121,12: =
 2121,14: (
 2121,15: (
 2121,16: 2
 2121,17: )
 2121,19: <
 2121,21: 8
 2121,23: ?
 2121,25: (
 2121,26: (
 2121,27: 1
 2121,29: <<
 2121,32: (
 2121,33: 2
 2121,34: )
 2121,35: )
 2121,37: <<
 2121,40: 8
 2121,41: )
 2121,43: :
 2121,45: (
 2121,46: (
 2121,47: 1
 2121,49: <<
 2121,52: (
 2121,53: 2
 2121,54: )
 2121,55: )
 2121,57: >>
 2121,60: 8
 2121,61: )
 2121,62: )
 2121,63: ,
 2122,3: _ISdigit
 2122,11: VARIABLE
 2122,12: =
 2122,14: (
 2122,15: (
 2122,16: 3
 2122,17: )
 2122,19: <
 2122,21: 8
 2122,23: ?
 2122,25: (
 2122,26: (
 2122,27: 1
 2122,29: <<
 2122,32: (
 2122,33: 3
 2122,34: )
 2122,35: )
 2122,37: <<
 2122,40: 8
 2122,41: )
 2122,43: :
 2122,45: (
 2122,46: (
 2122,47: 1
 2122,49: <<
 2122,52: (
 2122,53: 3
 2122,54: )
 2122,55: )
 2122,57: >>
 2122,60: 8
 2122,61: )
 2122,62: )
 2122,63: ,
 2123,3: _ISxdigit
 2123,12: VARIABLE
 2123,13: =
 2123,15: (
 2123,16: (
 2123,17: 4
 2123,18: )
 2123,20: <
 2123,22: 8
 2123,24: ?
 2123,26: (
 2123,27: (
 2123,28: 1
 2123,30: <<
 2123,33: (
 2123,34: 4
 2123,35: )
 2123,36: )
 2123,38: <<
 2123,41: 8
 2123,42: )
 2123,44: :
 2123,46: (
 2123,47: (
 2123,48: 1
 2123,50: <<
 2123,53: (
 2123,54: 4
 2123,55: )
 2123,56: )
 2123,58: >>
 2123,61: 8
 2123,62: )
 2123,63: )
 2123,64: ,
 2124,3: _ISspace
 2124,11: VARIABLE
 2124,12: =
 2124,14: (
 2124,15: (
 2124,16: 5
 2124,17: )
 2124,19: <
 2124,21: 8
 2124,23: ?
 2124,25: (
 2124,26: (
 2124,27: 1
 2124,29: <<
 2124,32: (
 2124,33: 5
 2124,34: )
 2124,35: )
 2124,37: <<
 2124,40: 8
 2124,41: )
 2124,43: :
 2124,45: (
 2124,46: (
 2124,47: 1
 2124,49: <<
 2124,52: (
 2124,53: 5
 2124,54: )
 2124,55: )
 2124,57: >>
 2124,60: 8
 2124,61: )
 2124,62: )
 2124,63: ,
 2125,3: _ISprint
 2125,11: VARIABLE
 2125,12: =
 2125,14: (
 2125,15: (
 2125,16: 6
 2125,17: )
 2125,19: <
 2125,21: 8
 2125,23: ?
 2125,25: (
 2125,26: (
 2125,27: 1
 2125,29: <<
 2125,32: (
 2125,33: 6
 2125,34: )
 2125,35: )
 2125,37: <<
 2125,40: 8
 2125,41: )
 2125,43: :
 2125,45: (
 2125,46: (
 2125,47: 1
 2125,49: <<
 2125,52: (
 2125,53: 6
 2125,54: )
 2125,55: )
 2125,57: >>
 2125,60: 8
 2125,61: )
 2125,62: )
 2125,63: ,
 2126,3: _ISgraph
 2126,11: VARIABLE
 2126,12: =
 2126,14: (
 2126,15: (
 2126,16: 7
 2126,17: )
 2126,19: <
 2126,21: 8
 2126,23: ?
 2126,25: (
 2126,26: (
 2126,27: 1
 2126,29: <<
 2126,32: (
 2126,33: 7
 2126,34: )
 2126,35: )
 2126,37: <<
 2126,40: 8
 2126,41: )
 2126,43: :
 2126,45: (
 2126,46: (
 2126,47: 1
 2126,49: <<
 2126,52: (
 2126,53: 7
 2126,54: )
 2126,55: )
 2126,57: >>
 2126,60: 8
 2126,61: )
 2126,62: )
 2126,63: ,
 2127,3: _ISblank
 2127,11: VARIABLE
 2127,12: =
 2127,14: (
 2127,15: (
 2127,16: 8
 2127,17: )
 2127,19: <
 2127,21: 8
 2127,23: ?
 2127,25: (
 2127,26: (
 2127,27: 1
 2127,29: <<
 2127,32: (
 2127,33: 8
 2127,34: )
 2127,35: )
 2127,37: <<
 2127,40: 8
 2127,41: )
 2127,43: :
 2127,45: (
 2127,46: (
 2127,47: 1
 2127,49: <<
 2127,52: (
 2127,53: 8
 2127,54: )
 2127,55: )
 2127,57: >>
 2127,60: 8
 2127,61: )
 2127,62: )
 2127,63: ,
 2128,3: _IScntrl
 2128,11: VARIABLE
 2128,12: =
 2128,14: (
 2128,15: (
 2128,16: 9
 2128,17: )
 2128,19: <
 2128,21: 8
 2128,23: ?
 2128,25: (
 2128,26: (
 2128,27: 1
 2128,29: <<
 2128,32: (
 2128,33: 9
 2128,34: )
 2128,35: )
 2128,37: <<
 2128,40: 8
 2128,41: )
 2128,43: :
 2128,45: (
 2128,46: (
 2128,47: 1
 2128,49: <<
 2128,52: (
 2128,53: 9
 2128,54: )
 2128,55: )
 2128,57: >>
 2128,60: 8
 2128,61: )
 2128,62: )
 2128,63: ,
 2129,3: _ISpunct
 2129,11: VARIABLE
 2129,12: =
 2129,14: (
 2129,15: (
 2129,16: 10
 2129,18: )
 2129,20: <
 2129,22: 8
 2129,24: ?
 2129,26: (
 2129,27: (
 2129,28: 1
 2129,30: <<
 2129,33: (
 2129,34: 10
 2129,36: )
 2129,37: )
 2129,39: <<
 2129,42: 8
 2129,43: )
 2129,45: :
 2129,47: (
 2129,48: (
 2129,49: 1
 2129,51: <<
 2129,54: (
 2129,55: 10
 2129,57: )
 2129,58: )
 2129,60: >>
 2129,63: 8
 2129,64: )
 2129,65: )
 2129,66: ,
 2130,3: _ISalnum
 2130,11: VARIABLE
 2130,12: =
 2130,14: (
 2130,15: (
 2130,16: 11
 2130,18: )
 2130,20: <
 2130,22: 8
 2130,24: ?
 2130,26: (
 2130,27: (
 2130,28: 1
 2130,30: <<
 2130,33: (
 2130,34: 11
 2130,36: )
 2130,37: )
 2130,39: <<
 2130,42: 8
 2130,43: )
 2130,45: :
 2130,47: (
 2130,48: (
 2130,49: 1
 2130,51: <<
 2130,54: (
 2130,55: 11
 2130,57: )
 2130,58: )
 2130,60: >>
 2130,63: 8
 2130,64: )
 2130,65: )
 2131,1: }
 
98 { enumerator_list option_comma } 
 2118,1: {
 2119,3: _ISupper
 2119,11: VARIABLE
 2119,12: =
 2119,14: (
 2119,15: (
 2119,16: 0
 2119,17: )
 2119,19: <
 2119,21: 8
 2119,23: ?
 2119,25: (
 2119,26: (
 2119,27: 1
 2119,29: <<
 2119,32: (
 2119,33: 0
 2119,34: )
 2119,35: )
 2119,37: <<
 2119,40: 8
 2119,41: )
 2119,43: :
 2119,45: (
 2119,46: (
 2119,47: 1
 2119,49: <<
 2119,52: (
 2119,53: 0
 2119,54: )
 2119,55: )
 2119,57: >>
 2119,60: 8
 2119,61: )
 2119,62: )
 2119,63: ,
 2120,3: _ISlower
 2120,11: VARIABLE
 2120,12: =
 2120,14: (
 2120,15: (
 2120,16: 1
 2120,17: )
 2120,19: <
 2120,21: 8
 2120,23: ?
 2120,25: (
 2120,26: (
 2120,27: 1
 2120,29: <<
 2120,32: (
 2120,33: 1
 2120,34: )
 2120,35: )
 2120,37: <<
 2120,40: 8
 2120,41: )
 2120,43: :
 2120,45: (
 2120,46: (
 2120,47: 1
 2120,49: <<
 2120,52: (
 2120,53: 1
 2120,54: )
 2120,55: )
 2120,57: >>
 2120,60: 8
 2120,61: )
 2120,62: )
 2120,63: ,
 2121,3: _ISalpha
 2121,11: VARIABLE
 2121,12: =
 2121,14: (
 2121,15: (
 2121,16: 2
 2121,17: )
 2121,19: <
 2121,21: 8
 2121,23: ?
 2121,25: (
 2121,26: (
 2121,27: 1
 2121,29: <<
 2121,32: (
 2121,33: 2
 2121,34: )
 2121,35: )
 2121,37: <<
 2121,40: 8
 2121,41: )
 2121,43: :
 2121,45: (
 2121,46: (
 2121,47: 1
 2121,49: <<
 2121,52: (
 2121,53: 2
 2121,54: )
 2121,55: )
 2121,57: >>
 2121,60: 8
 2121,61: )
 2121,62: )
 2121,63: ,
 2122,3: _ISdigit
 2122,11: VARIABLE
 2122,12: =
 2122,14: (
 2122,15: (
 2122,16: 3
 2122,17: )
 2122,19: <
 2122,21: 8
 2122,23: ?
 2122,25: (
 2122,26: (
 2122,27: 1
 2122,29: <<
 2122,32: (
 2122,33: 3
 2122,34: )
 2122,35: )
 2122,37: <<
 2122,40: 8
 2122,41: )
 2122,43: :
 2122,45: (
 2122,46: (
 2122,47: 1
 2122,49: <<
 2122,52: (
 2122,53: 3
 2122,54: )
 2122,55: )
 2122,57: >>
 2122,60: 8
 2122,61: )
 2122,62: )
 2122,63: ,
 2123,3: _ISxdigit
 2123,12: VARIABLE
 2123,13: =
 2123,15: (
 2123,16: (
 2123,17: 4
 2123,18: )
 2123,20: <
 2123,22: 8
 2123,24: ?
 2123,26: (
 2123,27: (
 2123,28: 1
 2123,30: <<
 2123,33: (
 2123,34: 4
 2123,35: )
 2123,36: )
 2123,38: <<
 2123,41: 8
 2123,42: )
 2123,44: :
 2123,46: (
 2123,47: (
 2123,48: 1
 2123,50: <<
 2123,53: (
 2123,54: 4
 2123,55: )
 2123,56: )
 2123,58: >>
 2123,61: 8
 2123,62: )
 2123,63: )
 2123,64: ,
 2124,3: _ISspace
 2124,11: VARIABLE
 2124,12: =
 2124,14: (
 2124,15: (
 2124,16: 5
 2124,17: )
 2124,19: <
 2124,21: 8
 2124,23: ?
 2124,25: (
 2124,26: (
 2124,27: 1
 2124,29: <<
 2124,32: (
 2124,33: 5
 2124,34: )
 2124,35: )
 2124,37: <<
 2124,40: 8
 2124,41: )
 2124,43: :
 2124,45: (
 2124,46: (
 2124,47: 1
 2124,49: <<
 2124,52: (
 2124,53: 5
 2124,54: )
 2124,55: )
 2124,57: >>
 2124,60: 8
 2124,61: )
 2124,62: )
 2124,63: ,
 2125,3: _ISprint
 2125,11: VARIABLE
 2125,12: =
 2125,14: (
 2125,15: (
 2125,16: 6
 2125,17: )
 2125,19: <
 2125,21: 8
 2125,23: ?
 2125,25: (
 2125,26: (
 2125,27: 1
 2125,29: <<
 2125,32: (
 2125,33: 6
 2125,34: )
 2125,35: )
 2125,37: <<
 2125,40: 8
 2125,41: )
 2125,43: :
 2125,45: (
 2125,46: (
 2125,47: 1
 2125,49: <<
 2125,52: (
 2125,53: 6
 2125,54: )
 2125,55: )
 2125,57: >>
 2125,60: 8
 2125,61: )
 2125,62: )
 2125,63: ,
 2126,3: _ISgraph
 2126,11: VARIABLE
 2126,12: =
 2126,14: (
 2126,15: (
 2126,16: 7
 2126,17: )
 2126,19: <
 2126,21: 8
 2126,23: ?
 2126,25: (
 2126,26: (
 2126,27: 1
 2126,29: <<
 2126,32: (
 2126,33: 7
 2126,34: )
 2126,35: )
 2126,37: <<
 2126,40: 8
 2126,41: )
 2126,43: :
 2126,45: (
 2126,46: (
 2126,47: 1
 2126,49: <<
 2126,52: (
 2126,53: 7
 2126,54: )
 2126,55: )
 2126,57: >>
 2126,60: 8
 2126,61: )
 2126,62: )
 2126,63: ,
 2127,3: _ISblank
 2127,11: VARIABLE
 2127,12: =
 2127,14: (
 2127,15: (
 2127,16: 8
 2127,17: )
 2127,19: <
 2127,21: 8
 2127,23: ?
 2127,25: (
 2127,26: (
 2127,27: 1
 2127,29: <<
 2127,32: (
 2127,33: 8
 2127,34: )
 2127,35: )
 2127,37: <<
 2127,40: 8
 2127,41: )
 2127,43: :
 2127,45: (
 2127,46: (
 2127,47: 1
 2127,49: <<
 2127,52: (
 2127,53: 8
 2127,54: )
 2127,55: )
 2127,57: >>
 2127,60: 8
 2127,61: )
 2127,62: )
 2127,63: ,
 2128,3: _IScntrl
 2128,11: VARIABLE
 2128,12: =
 2128,14: (
 2128,15: (
 2128,16: 9
 2128,17: )
 2128,19: <
 2128,21: 8
 2128,23: ?
 2128,25: (
 2128,26: (
 2128,27: 1
 2128,29: <<
 2128,32: (
 2128,33: 9
 2128,34: )
 2128,35: )
 2128,37: <<
 2128,40: 8
 2128,41: )
 2128,43: :
 2128,45: (
 2128,46: (
 2128,47: 1
 2128,49: <<
 2128,52: (
 2128,53: 9
 2128,54: )
 2128,55: )
 2128,57: >>
 2128,60: 8
 2128,61: )
 2128,62: )
 2128,63: ,
 2129,3: _ISpunct
 2129,11: VARIABLE
 2129,12: =
 2129,14: (
 2129,15: (
 2129,16: 10
 2129,18: )
 2129,20: <
 2129,22: 8
 2129,24: ?
 2129,26: (
 2129,27: (
 2129,28: 1
 2129,30: <<
 2129,33: (
 2129,34: 10
 2129,36: )
 2129,37: )
 2129,39: <<
 2129,42: 8
 2129,43: )
 2129,45: :
 2129,47: (
 2129,48: (
 2129,49: 1
 2129,51: <<
 2129,54: (
 2129,55: 10
 2129,57: )
 2129,58: )
 2129,60: >>
 2129,63: 8
 2129,64: )
 2129,65: )
 2129,66: ,
 2130,3: _ISalnum
 2130,11: VARIABLE
 2130,12: =
 2130,14: (
 2130,15: (
 2130,16: 11
 2130,18: )
 2130,20: <
 2130,22: 8
 2130,24: ?
 2130,26: (
 2130,27: (
 2130,28: 1
 2130,30: <<
 2130,33: (
 2130,34: 11
 2130,36: )
 2130,37: )
 2130,39: <<
 2130,42: 8
 2130,43: )
 2130,45: :
 2130,47: (
 2130,48: (
 2130,49: 1
 2130,51: <<
 2130,54: (
 2130,55: 11
 2130,57: )
 2130,58: )
 2130,60: >>
 2130,63: 8
 2130,64: )
 2130,65: )
 2131,1: }
 
131 NAME VARIABLE 
 2119,3: _ISupper
 2119,11: VARIABLE
 
65 VARIABLE 
 2119,11: VARIABLE
 
206 = constant_expression 
 2119,12: =
 2119,14: (
 2119,15: (
 2119,16: 0
 2119,17: )
 2119,19: <
 2119,21: 8
 2119,23: ?
 2119,25: (
 2119,26: (
 2119,27: 1
 2119,29: <<
 2119,32: (
 2119,33: 0
 2119,34: )
 2119,35: )
 2119,37: <<
 2119,40: 8
 2119,41: )
 2119,43: :
 2119,45: (
 2119,46: (
 2119,47: 1
 2119,49: <<
 2119,52: (
 2119,53: 0
 2119,54: )
 2119,55: )
 2119,57: >>
 2119,60: 8
 2119,61: )
 2119,62: )
 
341 ( expression ) 
 2119,14: (
 2119,15: (
 2119,16: 0
 2119,17: )
 2119,19: <
 2119,21: 8
 2119,23: ?
 2119,25: (
 2119,26: (
 2119,27: 1
 2119,29: <<
 2119,32: (
 2119,33: 0
 2119,34: )
 2119,35: )
 2119,37: <<
 2119,40: 8
 2119,41: )
 2119,43: :
 2119,45: (
 2119,46: (
 2119,47: 1
 2119,49: <<
 2119,52: (
 2119,53: 0
 2119,54: )
 2119,55: )
 2119,57: >>
 2119,60: 8
 2119,61: )
 2119,62: )
 
165 ( expression ) 
 2119,15: (
 2119,16: 0
 2119,17: )
 
165 CONSTANT 
 2119,16: 0
 
267 ) 
 2119,17: )
 
154 < 
 2119,19: <
 
252 CONSTANT 
 2119,21: 8
 
160 ? expression : conditional_expression 
 2119,23: ?
 2119,25: (
 2119,26: (
 2119,27: 1
 2119,29: <<
 2119,32: (
 2119,33: 0
 2119,34: )
 2119,35: )
 2119,37: <<
 2119,40: 8
 2119,41: )
 2119,43: :
 2119,45: (
 2119,46: (
 2119,47: 1
 2119,49: <<
 2119,52: (
 2119,53: 0
 2119,54: )
 2119,55: )
 2119,57: >>
 2119,60: 8
 2119,61: )
 
265 ( expression ) 
 2119,25: (
 2119,26: (
 2119,27: 1
 2119,29: <<
 2119,32: (
 2119,33: 0
 2119,34: )
 2119,35: )
 2119,37: <<
 2119,40: 8
 2119,41: )
 
165 ( expression ) 
 2119,26: (
 2119,27: 1
 2119,29: <<
 2119,32: (
 2119,33: 0
 2119,34: )
 2119,35: )
 
165 CONSTANT 
 2119,27: 1
 
153 << 
 2119,29: <<
 
249 ( expression ) 
 2119,32: (
 2119,33: 0
 2119,34: )
 
165 CONSTANT 
 2119,33: 0
 
267 ) 
 2119,34: )
 
267 ) 
 2119,35: )
 
153 << 
 2119,37: <<
 
249 CONSTANT 
 2119,40: 8
 
267 ) 
 2119,41: )
 
366 : conditional_expression 
 2119,43: :
 2119,45: (
 2119,46: (
 2119,47: 1
 2119,49: <<
 2119,52: (
 2119,53: 0
 2119,54: )
 2119,55: )
 2119,57: >>
 2119,60: 8
 2119,61: )
 
431 ( expression ) 
 2119,45: (
 2119,46: (
 2119,47: 1
 2119,49: <<
 2119,52: (
 2119,53: 0
 2119,54: )
 2119,55: )
 2119,57: >>
 2119,60: 8
 2119,61: )
 
165 ( expression ) 
 2119,46: (
 2119,47: 1
 2119,49: <<
 2119,52: (
 2119,53: 0
 2119,54: )
 2119,55: )
 
165 CONSTANT 
 2119,47: 1
 
153 << 
 2119,49: <<
 
249 ( expression ) 
 2119,52: (
 2119,53: 0
 2119,54: )
 
165 CONSTANT 
 2119,53: 0
 
267 ) 
 2119,54: )
 
267 ) 
 2119,55: )
 
153 >> 
 2119,57: >>
 
249 CONSTANT 
 2119,60: 8
 
267 ) 
 2119,61: )
 
267 ) 
 2119,62: )
 
204 , enumerator 
 2119,63: ,
 2120,3: _ISlower
 2120,11: VARIABLE
 2120,12: =
 2120,14: (
 2120,15: (
 2120,16: 1
 2120,17: )
 2120,19: <
 2120,21: 8
 2120,23: ?
 2120,25: (
 2120,26: (
 2120,27: 1
 2120,29: <<
 2120,32: (
 2120,33: 1
 2120,34: )
 2120,35: )
 2120,37: <<
 2120,40: 8
 2120,41: )
 2120,43: :
 2120,45: (
 2120,46: (
 2120,47: 1
 2120,49: <<
 2120,52: (
 2120,53: 1
 2120,54: )
 2120,55: )
 2120,57: >>
 2120,60: 8
 2120,61: )
 2120,62: )
 
340 NAME VARIABLE 
 2120,3: _ISlower
 2120,11: VARIABLE
 
65 VARIABLE 
 2120,11: VARIABLE
 
206 = constant_expression 
 2120,12: =
 2120,14: (
 2120,15: (
 2120,16: 1
 2120,17: )
 2120,19: <
 2120,21: 8
 2120,23: ?
 2120,25: (
 2120,26: (
 2120,27: 1
 2120,29: <<
 2120,32: (
 2120,33: 1
 2120,34: )
 2120,35: )
 2120,37: <<
 2120,40: 8
 2120,41: )
 2120,43: :
 2120,45: (
 2120,46: (
 2120,47: 1
 2120,49: <<
 2120,52: (
 2120,53: 1
 2120,54: )
 2120,55: )
 2120,57: >>
 2120,60: 8
 2120,61: )
 2120,62: )
 
341 ( expression ) 
 2120,14: (
 2120,15: (
 2120,16: 1
 2120,17: )
 2120,19: <
 2120,21: 8
 2120,23: ?
 2120,25: (
 2120,26: (
 2120,27: 1
 2120,29: <<
 2120,32: (
 2120,33: 1
 2120,34: )
 2120,35: )
 2120,37: <<
 2120,40: 8
 2120,41: )
 2120,43: :
 2120,45: (
 2120,46: (
 2120,47: 1
 2120,49: <<
 2120,52: (
 2120,53: 1
 2120,54: )
 2120,55: )
 2120,57: >>
 2120,60: 8
 2120,61: )
 2120,62: )
 
165 ( expression ) 
 2120,15: (
 2120,16: 1
 2120,17: )
 
165 CONSTANT 
 2120,16: 1
 
267 ) 
 2120,17: )
 
154 < 
 2120,19: <
 
252 CONSTANT 
 2120,21: 8
 
160 ? expression : conditional_expression 
 2120,23: ?
 2120,25: (
 2120,26: (
 2120,27: 1
 2120,29: <<
 2120,32: (
 2120,33: 1
 2120,34: )
 2120,35: )
 2120,37: <<
 2120,40: 8
 2120,41: )
 2120,43: :
 2120,45: (
 2120,46: (
 2120,47: 1
 2120,49: <<
 2120,52: (
 2120,53: 1
 2120,54: )
 2120,55: )
 2120,57: >>
 2120,60: 8
 2120,61: )
 
265 ( expression ) 
 2120,25: (
 2120,26: (
 2120,27: 1
 2120,29: <<
 2120,32: (
 2120,33: 1
 2120,34: )
 2120,35: )
 2120,37: <<
 2120,40: 8
 2120,41: )
 
165 ( expression ) 
 2120,26: (
 2120,27: 1
 2120,29: <<
 2120,32: (
 2120,33: 1
 2120,34: )
 2120,35: )
 
165 CONSTANT 
 2120,27: 1
 
153 << 
 2120,29: <<
 
249 ( expression ) 
 2120,32: (
 2120,33: 1
 2120,34: )
 
165 CONSTANT 
 2120,33: 1
 
267 ) 
 2120,34: )
 
267 ) 
 2120,35: )
 
153 << 
 2120,37: <<
 
249 CONSTANT 
 2120,40: 8
 
267 ) 
 2120,41: )
 
366 : conditional_expression 
 2120,43: :
 2120,45: (
 2120,46: (
 2120,47: 1
 2120,49: <<
 2120,52: (
 2120,53: 1
 2120,54: )
 2120,55: )
 2120,57: >>
 2120,60: 8
 2120,61: )
 
431 ( expression ) 
 2120,45: (
 2120,46: (
 2120,47: 1
 2120,49: <<
 2120,52: (
 2120,53: 1
 2120,54: )
 2120,55: )
 2120,57: >>
 2120,60: 8
 2120,61: )
 
165 ( expression ) 
 2120,46: (
 2120,47: 1
 2120,49: <<
 2120,52: (
 2120,53: 1
 2120,54: )
 2120,55: )
 
165 CONSTANT 
 2120,47: 1
 
153 << 
 2120,49: <<
 
249 ( expression ) 
 2120,52: (
 2120,53: 1
 2120,54: )
 
165 CONSTANT 
 2120,53: 1
 
267 ) 
 2120,54: )
 
267 ) 
 2120,55: )
 
153 >> 
 2120,57: >>
 
249 CONSTANT 
 2120,60: 8
 
267 ) 
 2120,61: )
 
267 ) 
 2120,62: )
 
204 , enumerator 
 2120,63: ,
 2121,3: _ISalpha
 2121,11: VARIABLE
 2121,12: =
 2121,14: (
 2121,15: (
 2121,16: 2
 2121,17: )
 2121,19: <
 2121,21: 8
 2121,23: ?
 2121,25: (
 2121,26: (
 2121,27: 1
 2121,29: <<
 2121,32: (
 2121,33: 2
 2121,34: )
 2121,35: )
 2121,37: <<
 2121,40: 8
 2121,41: )
 2121,43: :
 2121,45: (
 2121,46: (
 2121,47: 1
 2121,49: <<
 2121,52: (
 2121,53: 2
 2121,54: )
 2121,55: )
 2121,57: >>
 2121,60: 8
 2121,61: )
 2121,62: )
 
340 NAME VARIABLE 
 2121,3: _ISalpha
 2121,11: VARIABLE
 
65 VARIABLE 
 2121,11: VARIABLE
 
206 = constant_expression 
 2121,12: =
 2121,14: (
 2121,15: (
 2121,16: 2
 2121,17: )
 2121,19: <
 2121,21: 8
 2121,23: ?
 2121,25: (
 2121,26: (
 2121,27: 1
 2121,29: <<
 2121,32: (
 2121,33: 2
 2121,34: )
 2121,35: )
 2121,37: <<
 2121,40: 8
 2121,41: )
 2121,43: :
 2121,45: (
 2121,46: (
 2121,47: 1
 2121,49: <<
 2121,52: (
 2121,53: 2
 2121,54: )
 2121,55: )
 2121,57: >>
 2121,60: 8
 2121,61: )
 2121,62: )
 
341 ( expression ) 
 2121,14: (
 2121,15: (
 2121,16: 2
 2121,17: )
 2121,19: <
 2121,21: 8
 2121,23: ?
 2121,25: (
 2121,26: (
 2121,27: 1
 2121,29: <<
 2121,32: (
 2121,33: 2
 2121,34: )
 2121,35: )
 2121,37: <<
 2121,40: 8
 2121,41: )
 2121,43: :
 2121,45: (
 2121,46: (
 2121,47: 1
 2121,49: <<
 2121,52: (
 2121,53: 2
 2121,54: )
 2121,55: )
 2121,57: >>
 2121,60: 8
 2121,61: )
 2121,62: )
 
165 ( expression ) 
 2121,15: (
 2121,16: 2
 2121,17: )
 
165 CONSTANT 
 2121,16: 2
 
267 ) 
 2121,17: )
 
154 < 
 2121,19: <
 
252 CONSTANT 
 2121,21: 8
 
160 ? expression : conditional_expression 
 2121,23: ?
 2121,25: (
 2121,26: (
 2121,27: 1
 2121,29: <<
 2121,32: (
 2121,33: 2
 2121,34: )
 2121,35: )
 2121,37: <<
 2121,40: 8
 2121,41: )
 2121,43: :
 2121,45: (
 2121,46: (
 2121,47: 1
 2121,49: <<
 2121,52: (
 2121,53: 2
 2121,54: )
 2121,55: )
 2121,57: >>
 2121,60: 8
 2121,61: )
 
265 ( expression ) 
 2121,25: (
 2121,26: (
 2121,27: 1
 2121,29: <<
 2121,32: (
 2121,33: 2
 2121,34: )
 2121,35: )
 2121,37: <<
 2121,40: 8
 2121,41: )
 
165 ( expression ) 
 2121,26: (
 2121,27: 1
 2121,29: <<
 2121,32: (
 2121,33: 2
 2121,34: )
 2121,35: )
 
165 CONSTANT 
 2121,27: 1
 
153 << 
 2121,29: <<
 
249 ( expression ) 
 2121,32: (
 2121,33: 2
 2121,34: )
 
165 CONSTANT 
 2121,33: 2
 
267 ) 
 2121,34: )
 
267 ) 
 2121,35: )
 
153 << 
 2121,37: <<
 
249 CONSTANT 
 2121,40: 8
 
267 ) 
 2121,41: )
 
366 : conditional_expression 
 2121,43: :
 2121,45: (
 2121,46: (
 2121,47: 1
 2121,49: <<
 2121,52: (
 2121,53: 2
 2121,54: )
 2121,55: )
 2121,57: >>
 2121,60: 8
 2121,61: )
 
431 ( expression ) 
 2121,45: (
 2121,46: (
 2121,47: 1
 2121,49: <<
 2121,52: (
 2121,53: 2
 2121,54: )
 2121,55: )
 2121,57: >>
 2121,60: 8
 2121,61: )
 
165 ( expression ) 
 2121,46: (
 2121,47: 1
 2121,49: <<
 2121,52: (
 2121,53: 2
 2121,54: )
 2121,55: )
 
165 CONSTANT 
 2121,47: 1
 
153 << 
 2121,49: <<
 
249 ( expression ) 
 2121,52: (
 2121,53: 2
 2121,54: )
 
165 CONSTANT 
 2121,53: 2
 
267 ) 
 2121,54: )
 
267 ) 
 2121,55: )
 
153 >> 
 2121,57: >>
 
249 CONSTANT 
 2121,60: 8
 
267 ) 
 2121,61: )
 
267 ) 
 2121,62: )
 
204 , enumerator 
 2121,63: ,
 2122,3: _ISdigit
 2122,11: VARIABLE
 2122,12: =
 2122,14: (
 2122,15: (
 2122,16: 3
 2122,17: )
 2122,19: <
 2122,21: 8
 2122,23: ?
 2122,25: (
 2122,26: (
 2122,27: 1
 2122,29: <<
 2122,32: (
 2122,33: 3
 2122,34: )
 2122,35: )
 2122,37: <<
 2122,40: 8
 2122,41: )
 2122,43: :
 2122,45: (
 2122,46: (
 2122,47: 1
 2122,49: <<
 2122,52: (
 2122,53: 3
 2122,54: )
 2122,55: )
 2122,57: >>
 2122,60: 8
 2122,61: )
 2122,62: )
 
340 NAME VARIABLE 
 2122,3: _ISdigit
 2122,11: VARIABLE
 
65 VARIABLE 
 2122,11: VARIABLE
 
206 = constant_expression 
 2122,12: =
 2122,14: (
 2122,15: (
 2122,16: 3
 2122,17: )
 2122,19: <
 2122,21: 8
 2122,23: ?
 2122,25: (
 2122,26: (
 2122,27: 1
 2122,29: <<
 2122,32: (
 2122,33: 3
 2122,34: )
 2122,35: )
 2122,37: <<
 2122,40: 8
 2122,41: )
 2122,43: :
 2122,45: (
 2122,46: (
 2122,47: 1
 2122,49: <<
 2122,52: (
 2122,53: 3
 2122,54: )
 2122,55: )
 2122,57: >>
 2122,60: 8
 2122,61: )
 2122,62: )
 
341 ( expression ) 
 2122,14: (
 2122,15: (
 2122,16: 3
 2122,17: )
 2122,19: <
 2122,21: 8
 2122,23: ?
 2122,25: (
 2122,26: (
 2122,27: 1
 2122,29: <<
 2122,32: (
 2122,33: 3
 2122,34: )
 2122,35: )
 2122,37: <<
 2122,40: 8
 2122,41: )
 2122,43: :
 2122,45: (
 2122,46: (
 2122,47: 1
 2122,49: <<
 2122,52: (
 2122,53: 3
 2122,54: )
 2122,55: )
 2122,57: >>
 2122,60: 8
 2122,61: )
 2122,62: )
 
165 ( expression ) 
 2122,15: (
 2122,16: 3
 2122,17: )
 
165 CONSTANT 
 2122,16: 3
 
267 ) 
 2122,17: )
 
154 < 
 2122,19: <
 
252 CONSTANT 
 2122,21: 8
 
160 ? expression : conditional_expression 
 2122,23: ?
 2122,25: (
 2122,26: (
 2122,27: 1
 2122,29: <<
 2122,32: (
 2122,33: 3
 2122,34: )
 2122,35: )
 2122,37: <<
 2122,40: 8
 2122,41: )
 2122,43: :
 2122,45: (
 2122,46: (
 2122,47: 1
 2122,49: <<
 2122,52: (
 2122,53: 3
 2122,54: )
 2122,55: )
 2122,57: >>
 2122,60: 8
 2122,61: )
 
265 ( expression ) 
 2122,25: (
 2122,26: (
 2122,27: 1
 2122,29: <<
 2122,32: (
 2122,33: 3
 2122,34: )
 2122,35: )
 2122,37: <<
 2122,40: 8
 2122,41: )
 
165 ( expression ) 
 2122,26: (
 2122,27: 1
 2122,29: <<
 2122,32: (
 2122,33: 3
 2122,34: )
 2122,35: )
 
165 CONSTANT 
 2122,27: 1
 
153 << 
 2122,29: <<
 
249 ( expression ) 
 2122,32: (
 2122,33: 3
 2122,34: )
 
165 CONSTANT 
 2122,33: 3
 
267 ) 
 2122,34: )
 
267 ) 
 2122,35: )
 
153 << 
 2122,37: <<
 
249 CONSTANT 
 2122,40: 8
 
267 ) 
 2122,41: )
 
366 : conditional_expression 
 2122,43: :
 2122,45: (
 2122,46: (
 2122,47: 1
 2122,49: <<
 2122,52: (
 2122,53: 3
 2122,54: )
 2122,55: )
 2122,57: >>
 2122,60: 8
 2122,61: )
 
431 ( expression ) 
 2122,45: (
 2122,46: (
 2122,47: 1
 2122,49: <<
 2122,52: (
 2122,53: 3
 2122,54: )
 2122,55: )
 2122,57: >>
 2122,60: 8
 2122,61: )
 
165 ( expression ) 
 2122,46: (
 2122,47: 1
 2122,49: <<
 2122,52: (
 2122,53: 3
 2122,54: )
 2122,55: )
 
165 CONSTANT 
 2122,47: 1
 
153 << 
 2122,49: <<
 
249 ( expression ) 
 2122,52: (
 2122,53: 3
 2122,54: )
 
165 CONSTANT 
 2122,53: 3
 
267 ) 
 2122,54: )
 
267 ) 
 2122,55: )
 
153 >> 
 2122,57: >>
 
249 CONSTANT 
 2122,60: 8
 
267 ) 
 2122,61: )
 
267 ) 
 2122,62: )
 
204 , enumerator 
 2122,63: ,
 2123,3: _ISxdigit
 2123,12: VARIABLE
 2123,13: =
 2123,15: (
 2123,16: (
 2123,17: 4
 2123,18: )
 2123,20: <
 2123,22: 8
 2123,24: ?
 2123,26: (
 2123,27: (
 2123,28: 1
 2123,30: <<
 2123,33: (
 2123,34: 4
 2123,35: )
 2123,36: )
 2123,38: <<
 2123,41: 8
 2123,42: )
 2123,44: :
 2123,46: (
 2123,47: (
 2123,48: 1
 2123,50: <<
 2123,53: (
 2123,54: 4
 2123,55: )
 2123,56: )
 2123,58: >>
 2123,61: 8
 2123,62: )
 2123,63: )
 
340 NAME VARIABLE 
 2123,3: _ISxdigit
 2123,12: VARIABLE
 
65 VARIABLE 
 2123,12: VARIABLE
 
206 = constant_expression 
 2123,13: =
 2123,15: (
 2123,16: (
 2123,17: 4
 2123,18: )
 2123,20: <
 2123,22: 8
 2123,24: ?
 2123,26: (
 2123,27: (
 2123,28: 1
 2123,30: <<
 2123,33: (
 2123,34: 4
 2123,35: )
 2123,36: )
 2123,38: <<
 2123,41: 8
 2123,42: )
 2123,44: :
 2123,46: (
 2123,47: (
 2123,48: 1
 2123,50: <<
 2123,53: (
 2123,54: 4
 2123,55: )
 2123,56: )
 2123,58: >>
 2123,61: 8
 2123,62: )
 2123,63: )
 
341 ( expression ) 
 2123,15: (
 2123,16: (
 2123,17: 4
 2123,18: )
 2123,20: <
 2123,22: 8
 2123,24: ?
 2123,26: (
 2123,27: (
 2123,28: 1
 2123,30: <<
 2123,33: (
 2123,34: 4
 2123,35: )
 2123,36: )
 2123,38: <<
 2123,41: 8
 2123,42: )
 2123,44: :
 2123,46: (
 2123,47: (
 2123,48: 1
 2123,50: <<
 2123,53: (
 2123,54: 4
 2123,55: )
 2123,56: )
 2123,58: >>
 2123,61: 8
 2123,62: )
 2123,63: )
 
165 ( expression ) 
 2123,16: (
 2123,17: 4
 2123,18: )
 
165 CONSTANT 
 2123,17: 4
 
267 ) 
 2123,18: )
 
154 < 
 2123,20: <
 
252 CONSTANT 
 2123,22: 8
 
160 ? expression : conditional_expression 
 2123,24: ?
 2123,26: (
 2123,27: (
 2123,28: 1
 2123,30: <<
 2123,33: (
 2123,34: 4
 2123,35: )
 2123,36: )
 2123,38: <<
 2123,41: 8
 2123,42: )
 2123,44: :
 2123,46: (
 2123,47: (
 2123,48: 1
 2123,50: <<
 2123,53: (
 2123,54: 4
 2123,55: )
 2123,56: )
 2123,58: >>
 2123,61: 8
 2123,62: )
 
265 ( expression ) 
 2123,26: (
 2123,27: (
 2123,28: 1
 2123,30: <<
 2123,33: (
 2123,34: 4
 2123,35: )
 2123,36: )
 2123,38: <<
 2123,41: 8
 2123,42: )
 
165 ( expression ) 
 2123,27: (
 2123,28: 1
 2123,30: <<
 2123,33: (
 2123,34: 4
 2123,35: )
 2123,36: )
 
165 CONSTANT 
 2123,28: 1
 
153 << 
 2123,30: <<
 
249 ( expression ) 
 2123,33: (
 2123,34: 4
 2123,35: )
 
165 CONSTANT 
 2123,34: 4
 
267 ) 
 2123,35: )
 
267 ) 
 2123,36: )
 
153 << 
 2123,38: <<
 
249 CONSTANT 
 2123,41: 8
 
267 ) 
 2123,42: )
 
366 : conditional_expression 
 2123,44: :
 2123,46: (
 2123,47: (
 2123,48: 1
 2123,50: <<
 2123,53: (
 2123,54: 4
 2123,55: )
 2123,56: )
 2123,58: >>
 2123,61: 8
 2123,62: )
 
431 ( expression ) 
 2123,46: (
 2123,47: (
 2123,48: 1
 2123,50: <<
 2123,53: (
 2123,54: 4
 2123,55: )
 2123,56: )
 2123,58: >>
 2123,61: 8
 2123,62: )
 
165 ( expression ) 
 2123,47: (
 2123,48: 1
 2123,50: <<
 2123,53: (
 2123,54: 4
 2123,55: )
 2123,56: )
 
165 CONSTANT 
 2123,48: 1
 
153 << 
 2123,50: <<
 
249 ( expression ) 
 2123,53: (
 2123,54: 4
 2123,55: )
 
165 CONSTANT 
 2123,54: 4
 
267 ) 
 2123,55: )
 
267 ) 
 2123,56: )
 
153 >> 
 2123,58: >>
 
249 CONSTANT 
 2123,61: 8
 
267 ) 
 2123,62: )
 
267 ) 
 2123,63: )
 
204 , enumerator 
 2123,64: ,
 2124,3: _ISspace
 2124,11: VARIABLE
 2124,12: =
 2124,14: (
 2124,15: (
 2124,16: 5
 2124,17: )
 2124,19: <
 2124,21: 8
 2124,23: ?
 2124,25: (
 2124,26: (
 2124,27: 1
 2124,29: <<
 2124,32: (
 2124,33: 5
 2124,34: )
 2124,35: )
 2124,37: <<
 2124,40: 8
 2124,41: )
 2124,43: :
 2124,45: (
 2124,46: (
 2124,47: 1
 2124,49: <<
 2124,52: (
 2124,53: 5
 2124,54: )
 2124,55: )
 2124,57: >>
 2124,60: 8
 2124,61: )
 2124,62: )
 
340 NAME VARIABLE 
 2124,3: _ISspace
 2124,11: VARIABLE
 
65 VARIABLE 
 2124,11: VARIABLE
 
206 = constant_expression 
 2124,12: =
 2124,14: (
 2124,15: (
 2124,16: 5
 2124,17: )
 2124,19: <
 2124,21: 8
 2124,23: ?
 2124,25: (
 2124,26: (
 2124,27: 1
 2124,29: <<
 2124,32: (
 2124,33: 5
 2124,34: )
 2124,35: )
 2124,37: <<
 2124,40: 8
 2124,41: )
 2124,43: :
 2124,45: (
 2124,46: (
 2124,47: 1
 2124,49: <<
 2124,52: (
 2124,53: 5
 2124,54: )
 2124,55: )
 2124,57: >>
 2124,60: 8
 2124,61: )
 2124,62: )
 
341 ( expression ) 
 2124,14: (
 2124,15: (
 2124,16: 5
 2124,17: )
 2124,19: <
 2124,21: 8
 2124,23: ?
 2124,25: (
 2124,26: (
 2124,27: 1
 2124,29: <<
 2124,32: (
 2124,33: 5
 2124,34: )
 2124,35: )
 2124,37: <<
 2124,40: 8
 2124,41: )
 2124,43: :
 2124,45: (
 2124,46: (
 2124,47: 1
 2124,49: <<
 2124,52: (
 2124,53: 5
 2124,54: )
 2124,55: )
 2124,57: >>
 2124,60: 8
 2124,61: )
 2124,62: )
 
165 ( expression ) 
 2124,15: (
 2124,16: 5
 2124,17: )
 
165 CONSTANT 
 2124,16: 5
 
267 ) 
 2124,17: )
 
154 < 
 2124,19: <
 
252 CONSTANT 
 2124,21: 8
 
160 ? expression : conditional_expression 
 2124,23: ?
 2124,25: (
 2124,26: (
 2124,27: 1
 2124,29: <<
 2124,32: (
 2124,33: 5
 2124,34: )
 2124,35: )
 2124,37: <<
 2124,40: 8
 2124,41: )
 2124,43: :
 2124,45: (
 2124,46: (
 2124,47: 1
 2124,49: <<
 2124,52: (
 2124,53: 5
 2124,54: )
 2124,55: )
 2124,57: >>
 2124,60: 8
 2124,61: )
 
265 ( expression ) 
 2124,25: (
 2124,26: (
 2124,27: 1
 2124,29: <<
 2124,32: (
 2124,33: 5
 2124,34: )
 2124,35: )
 2124,37: <<
 2124,40: 8
 2124,41: )
 
165 ( expression ) 
 2124,26: (
 2124,27: 1
 2124,29: <<
 2124,32: (
 2124,33: 5
 2124,34: )
 2124,35: )
 
165 CONSTANT 
 2124,27: 1
 
153 << 
 2124,29: <<
 
249 ( expression ) 
 2124,32: (
 2124,33: 5
 2124,34: )
 
165 CONSTANT 
 2124,33: 5
 
267 ) 
 2124,34: )
 
267 ) 
 2124,35: )
 
153 << 
 2124,37: <<
 
249 CONSTANT 
 2124,40: 8
 
267 ) 
 2124,41: )
 
366 : conditional_expression 
 2124,43: :
 2124,45: (
 2124,46: (
 2124,47: 1
 2124,49: <<
 2124,52: (
 2124,53: 5
 2124,54: )
 2124,55: )
 2124,57: >>
 2124,60: 8
 2124,61: )
 
431 ( expression ) 
 2124,45: (
 2124,46: (
 2124,47: 1
 2124,49: <<
 2124,52: (
 2124,53: 5
 2124,54: )
 2124,55: )
 2124,57: >>
 2124,60: 8
 2124,61: )
 
165 ( expression ) 
 2124,46: (
 2124,47: 1
 2124,49: <<
 2124,52: (
 2124,53: 5
 2124,54: )
 2124,55: )
 
165 CONSTANT 
 2124,47: 1
 
153 << 
 2124,49: <<
 
249 ( expression ) 
 2124,52: (
 2124,53: 5
 2124,54: )
 
165 CONSTANT 
 2124,53: 5
 
267 ) 
 2124,54: )
 
267 ) 
 2124,55: )
 
153 >> 
 2124,57: >>
 
249 CONSTANT 
 2124,60: 8
 
267 ) 
 2124,61: )
 
267 ) 
 2124,62: )
 
204 , enumerator 
 2124,63: ,
 2125,3: _ISprint
 2125,11: VARIABLE
 2125,12: =
 2125,14: (
 2125,15: (
 2125,16: 6
 2125,17: )
 2125,19: <
 2125,21: 8
 2125,23: ?
 2125,25: (
 2125,26: (
 2125,27: 1
 2125,29: <<
 2125,32: (
 2125,33: 6
 2125,34: )
 2125,35: )
 2125,37: <<
 2125,40: 8
 2125,41: )
 2125,43: :
 2125,45: (
 2125,46: (
 2125,47: 1
 2125,49: <<
 2125,52: (
 2125,53: 6
 2125,54: )
 2125,55: )
 2125,57: >>
 2125,60: 8
 2125,61: )
 2125,62: )
 
340 NAME VARIABLE 
 2125,3: _ISprint
 2125,11: VARIABLE
 
65 VARIABLE 
 2125,11: VARIABLE
 
206 = constant_expression 
 2125,12: =
 2125,14: (
 2125,15: (
 2125,16: 6
 2125,17: )
 2125,19: <
 2125,21: 8
 2125,23: ?
 2125,25: (
 2125,26: (
 2125,27: 1
 2125,29: <<
 2125,32: (
 2125,33: 6
 2125,34: )
 2125,35: )
 2125,37: <<
 2125,40: 8
 2125,41: )
 2125,43: :
 2125,45: (
 2125,46: (
 2125,47: 1
 2125,49: <<
 2125,52: (
 2125,53: 6
 2125,54: )
 2125,55: )
 2125,57: >>
 2125,60: 8
 2125,61: )
 2125,62: )
 
341 ( expression ) 
 2125,14: (
 2125,15: (
 2125,16: 6
 2125,17: )
 2125,19: <
 2125,21: 8
 2125,23: ?
 2125,25: (
 2125,26: (
 2125,27: 1
 2125,29: <<
 2125,32: (
 2125,33: 6
 2125,34: )
 2125,35: )
 2125,37: <<
 2125,40: 8
 2125,41: )
 2125,43: :
 2125,45: (
 2125,46: (
 2125,47: 1
 2125,49: <<
 2125,52: (
 2125,53: 6
 2125,54: )
 2125,55: )
 2125,57: >>
 2125,60: 8
 2125,61: )
 2125,62: )
 
165 ( expression ) 
 2125,15: (
 2125,16: 6
 2125,17: )
 
165 CONSTANT 
 2125,16: 6
 
267 ) 
 2125,17: )
 
154 < 
 2125,19: <
 
252 CONSTANT 
 2125,21: 8
 
160 ? expression : conditional_expression 
 2125,23: ?
 2125,25: (
 2125,26: (
 2125,27: 1
 2125,29: <<
 2125,32: (
 2125,33: 6
 2125,34: )
 2125,35: )
 2125,37: <<
 2125,40: 8
 2125,41: )
 2125,43: :
 2125,45: (
 2125,46: (
 2125,47: 1
 2125,49: <<
 2125,52: (
 2125,53: 6
 2125,54: )
 2125,55: )
 2125,57: >>
 2125,60: 8
 2125,61: )
 
265 ( expression ) 
 2125,25: (
 2125,26: (
 2125,27: 1
 2125,29: <<
 2125,32: (
 2125,33: 6
 2125,34: )
 2125,35: )
 2125,37: <<
 2125,40: 8
 2125,41: )
 
165 ( expression ) 
 2125,26: (
 2125,27: 1
 2125,29: <<
 2125,32: (
 2125,33: 6
 2125,34: )
 2125,35: )
 
165 CONSTANT 
 2125,27: 1
 
153 << 
 2125,29: <<
 
249 ( expression ) 
 2125,32: (
 2125,33: 6
 2125,34: )
 
165 CONSTANT 
 2125,33: 6
 
267 ) 
 2125,34: )
 
267 ) 
 2125,35: )
 
153 << 
 2125,37: <<
 
249 CONSTANT 
 2125,40: 8
 
267 ) 
 2125,41: )
 
366 : conditional_expression 
 2125,43: :
 2125,45: (
 2125,46: (
 2125,47: 1
 2125,49: <<
 2125,52: (
 2125,53: 6
 2125,54: )
 2125,55: )
 2125,57: >>
 2125,60: 8
 2125,61: )
 
431 ( expression ) 
 2125,45: (
 2125,46: (
 2125,47: 1
 2125,49: <<
 2125,52: (
 2125,53: 6
 2125,54: )
 2125,55: )
 2125,57: >>
 2125,60: 8
 2125,61: )
 
165 ( expression ) 
 2125,46: (
 2125,47: 1
 2125,49: <<
 2125,52: (
 2125,53: 6
 2125,54: )
 2125,55: )
 
165 CONSTANT 
 2125,47: 1
 
153 << 
 2125,49: <<
 
249 ( expression ) 
 2125,52: (
 2125,53: 6
 2125,54: )
 
165 CONSTANT 
 2125,53: 6
 
267 ) 
 2125,54: )
 
267 ) 
 2125,55: )
 
153 >> 
 2125,57: >>
 
249 CONSTANT 
 2125,60: 8
 
267 ) 
 2125,61: )
 
267 ) 
 2125,62: )
 
204 , enumerator 
 2125,63: ,
 2126,3: _ISgraph
 2126,11: VARIABLE
 2126,12: =
 2126,14: (
 2126,15: (
 2126,16: 7
 2126,17: )
 2126,19: <
 2126,21: 8
 2126,23: ?
 2126,25: (
 2126,26: (
 2126,27: 1
 2126,29: <<
 2126,32: (
 2126,33: 7
 2126,34: )
 2126,35: )
 2126,37: <<
 2126,40: 8
 2126,41: )
 2126,43: :
 2126,45: (
 2126,46: (
 2126,47: 1
 2126,49: <<
 2126,52: (
 2126,53: 7
 2126,54: )
 2126,55: )
 2126,57: >>
 2126,60: 8
 2126,61: )
 2126,62: )
 
340 NAME VARIABLE 
 2126,3: _ISgraph
 2126,11: VARIABLE
 
65 VARIABLE 
 2126,11: VARIABLE
 
206 = constant_expression 
 2126,12: =
 2126,14: (
 2126,15: (
 2126,16: 7
 2126,17: )
 2126,19: <
 2126,21: 8
 2126,23: ?
 2126,25: (
 2126,26: (
 2126,27: 1
 2126,29: <<
 2126,32: (
 2126,33: 7
 2126,34: )
 2126,35: )
 2126,37: <<
 2126,40: 8
 2126,41: )
 2126,43: :
 2126,45: (
 2126,46: (
 2126,47: 1
 2126,49: <<
 2126,52: (
 2126,53: 7
 2126,54: )
 2126,55: )
 2126,57: >>
 2126,60: 8
 2126,61: )
 2126,62: )
 
341 ( expression ) 
 2126,14: (
 2126,15: (
 2126,16: 7
 2126,17: )
 2126,19: <
 2126,21: 8
 2126,23: ?
 2126,25: (
 2126,26: (
 2126,27: 1
 2126,29: <<
 2126,32: (
 2126,33: 7
 2126,34: )
 2126,35: )
 2126,37: <<
 2126,40: 8
 2126,41: )
 2126,43: :
 2126,45: (
 2126,46: (
 2126,47: 1
 2126,49: <<
 2126,52: (
 2126,53: 7
 2126,54: )
 2126,55: )
 2126,57: >>
 2126,60: 8
 2126,61: )
 2126,62: )
 
165 ( expression ) 
 2126,15: (
 2126,16: 7
 2126,17: )
 
165 CONSTANT 
 2126,16: 7
 
267 ) 
 2126,17: )
 
154 < 
 2126,19: <
 
252 CONSTANT 
 2126,21: 8
 
160 ? expression : conditional_expression 
 2126,23: ?
 2126,25: (
 2126,26: (
 2126,27: 1
 2126,29: <<
 2126,32: (
 2126,33: 7
 2126,34: )
 2126,35: )
 2126,37: <<
 2126,40: 8
 2126,41: )
 2126,43: :
 2126,45: (
 2126,46: (
 2126,47: 1
 2126,49: <<
 2126,52: (
 2126,53: 7
 2126,54: )
 2126,55: )
 2126,57: >>
 2126,60: 8
 2126,61: )
 
265 ( expression ) 
 2126,25: (
 2126,26: (
 2126,27: 1
 2126,29: <<
 2126,32: (
 2126,33: 7
 2126,34: )
 2126,35: )
 2126,37: <<
 2126,40: 8
 2126,41: )
 
165 ( expression ) 
 2126,26: (
 2126,27: 1
 2126,29: <<
 2126,32: (
 2126,33: 7
 2126,34: )
 2126,35: )
 
165 CONSTANT 
 2126,27: 1
 
153 << 
 2126,29: <<
 
249 ( expression ) 
 2126,32: (
 2126,33: 7
 2126,34: )
 
165 CONSTANT 
 2126,33: 7
 
267 ) 
 2126,34: )
 
267 ) 
 2126,35: )
 
153 << 
 2126,37: <<
 
249 CONSTANT 
 2126,40: 8
 
267 ) 
 2126,41: )
 
366 : conditional_expression 
 2126,43: :
 2126,45: (
 2126,46: (
 2126,47: 1
 2126,49: <<
 2126,52: (
 2126,53: 7
 2126,54: )
 2126,55: )
 2126,57: >>
 2126,60: 8
 2126,61: )
 
431 ( expression ) 
 2126,45: (
 2126,46: (
 2126,47: 1
 2126,49: <<
 2126,52: (
 2126,53: 7
 2126,54: )
 2126,55: )
 2126,57: >>
 2126,60: 8
 2126,61: )
 
165 ( expression ) 
 2126,46: (
 2126,47: 1
 2126,49: <<
 2126,52: (
 2126,53: 7
 2126,54: )
 2126,55: )
 
165 CONSTANT 
 2126,47: 1
 
153 << 
 2126,49: <<
 
249 ( expression ) 
 2126,52: (
 2126,53: 7
 2126,54: )
 
165 CONSTANT 
 2126,53: 7
 
267 ) 
 2126,54: )
 
267 ) 
 2126,55: )
 
153 >> 
 2126,57: >>
 
249 CONSTANT 
 2126,60: 8
 
267 ) 
 2126,61: )
 
267 ) 
 2126,62: )
 
204 , enumerator 
 2126,63: ,
 2127,3: _ISblank
 2127,11: VARIABLE
 2127,12: =
 2127,14: (
 2127,15: (
 2127,16: 8
 2127,17: )
 2127,19: <
 2127,21: 8
 2127,23: ?
 2127,25: (
 2127,26: (
 2127,27: 1
 2127,29: <<
 2127,32: (
 2127,33: 8
 2127,34: )
 2127,35: )
 2127,37: <<
 2127,40: 8
 2127,41: )
 2127,43: :
 2127,45: (
 2127,46: (
 2127,47: 1
 2127,49: <<
 2127,52: (
 2127,53: 8
 2127,54: )
 2127,55: )
 2127,57: >>
 2127,60: 8
 2127,61: )
 2127,62: )
 
340 NAME VARIABLE 
 2127,3: _ISblank
 2127,11: VARIABLE
 
65 VARIABLE 
 2127,11: VARIABLE
 
206 = constant_expression 
 2127,12: =
 2127,14: (
 2127,15: (
 2127,16: 8
 2127,17: )
 2127,19: <
 2127,21: 8
 2127,23: ?
 2127,25: (
 2127,26: (
 2127,27: 1
 2127,29: <<
 2127,32: (
 2127,33: 8
 2127,34: )
 2127,35: )
 2127,37: <<
 2127,40: 8
 2127,41: )
 2127,43: :
 2127,45: (
 2127,46: (
 2127,47: 1
 2127,49: <<
 2127,52: (
 2127,53: 8
 2127,54: )
 2127,55: )
 2127,57: >>
 2127,60: 8
 2127,61: )
 2127,62: )
 
341 ( expression ) 
 2127,14: (
 2127,15: (
 2127,16: 8
 2127,17: )
 2127,19: <
 2127,21: 8
 2127,23: ?
 2127,25: (
 2127,26: (
 2127,27: 1
 2127,29: <<
 2127,32: (
 2127,33: 8
 2127,34: )
 2127,35: )
 2127,37: <<
 2127,40: 8
 2127,41: )
 2127,43: :
 2127,45: (
 2127,46: (
 2127,47: 1
 2127,49: <<
 2127,52: (
 2127,53: 8
 2127,54: )
 2127,55: )
 2127,57: >>
 2127,60: 8
 2127,61: )
 2127,62: )
 
165 ( expression ) 
 2127,15: (
 2127,16: 8
 2127,17: )
 
165 CONSTANT 
 2127,16: 8
 
267 ) 
 2127,17: )
 
154 < 
 2127,19: <
 
252 CONSTANT 
 2127,21: 8
 
160 ? expression : conditional_expression 
 2127,23: ?
 2127,25: (
 2127,26: (
 2127,27: 1
 2127,29: <<
 2127,32: (
 2127,33: 8
 2127,34: )
 2127,35: )
 2127,37: <<
 2127,40: 8
 2127,41: )
 2127,43: :
 2127,45: (
 2127,46: (
 2127,47: 1
 2127,49: <<
 2127,52: (
 2127,53: 8
 2127,54: )
 2127,55: )
 2127,57: >>
 2127,60: 8
 2127,61: )
 
265 ( expression ) 
 2127,25: (
 2127,26: (
 2127,27: 1
 2127,29: <<
 2127,32: (
 2127,33: 8
 2127,34: )
 2127,35: )
 2127,37: <<
 2127,40: 8
 2127,41: )
 
165 ( expression ) 
 2127,26: (
 2127,27: 1
 2127,29: <<
 2127,32: (
 2127,33: 8
 2127,34: )
 2127,35: )
 
165 CONSTANT 
 2127,27: 1
 
153 << 
 2127,29: <<
 
249 ( expression ) 
 2127,32: (
 2127,33: 8
 2127,34: )
 
165 CONSTANT 
 2127,33: 8
 
267 ) 
 2127,34: )
 
267 ) 
 2127,35: )
 
153 << 
 2127,37: <<
 
249 CONSTANT 
 2127,40: 8
 
267 ) 
 2127,41: )
 
366 : conditional_expression 
 2127,43: :
 2127,45: (
 2127,46: (
 2127,47: 1
 2127,49: <<
 2127,52: (
 2127,53: 8
 2127,54: )
 2127,55: )
 2127,57: >>
 2127,60: 8
 2127,61: )
 
431 ( expression ) 
 2127,45: (
 2127,46: (
 2127,47: 1
 2127,49: <<
 2127,52: (
 2127,53: 8
 2127,54: )
 2127,55: )
 2127,57: >>
 2127,60: 8
 2127,61: )
 
165 ( expression ) 
 2127,46: (
 2127,47: 1
 2127,49: <<
 2127,52: (
 2127,53: 8
 2127,54: )
 2127,55: )
 
165 CONSTANT 
 2127,47: 1
 
153 << 
 2127,49: <<
 
249 ( expression ) 
 2127,52: (
 2127,53: 8
 2127,54: )
 
165 CONSTANT 
 2127,53: 8
 
267 ) 
 2127,54: )
 
267 ) 
 2127,55: )
 
153 >> 
 2127,57: >>
 
249 CONSTANT 
 2127,60: 8
 
267 ) 
 2127,61: )
 
267 ) 
 2127,62: )
 
204 , enumerator 
 2127,63: ,
 2128,3: _IScntrl
 2128,11: VARIABLE
 2128,12: =
 2128,14: (
 2128,15: (
 2128,16: 9
 2128,17: )
 2128,19: <
 2128,21: 8
 2128,23: ?
 2128,25: (
 2128,26: (
 2128,27: 1
 2128,29: <<
 2128,32: (
 2128,33: 9
 2128,34: )
 2128,35: )
 2128,37: <<
 2128,40: 8
 2128,41: )
 2128,43: :
 2128,45: (
 2128,46: (
 2128,47: 1
 2128,49: <<
 2128,52: (
 2128,53: 9
 2128,54: )
 2128,55: )
 2128,57: >>
 2128,60: 8
 2128,61: )
 2128,62: )
 
340 NAME VARIABLE 
 2128,3: _IScntrl
 2128,11: VARIABLE
 
65 VARIABLE 
 2128,11: VARIABLE
 
206 = constant_expression 
 2128,12: =
 2128,14: (
 2128,15: (
 2128,16: 9
 2128,17: )
 2128,19: <
 2128,21: 8
 2128,23: ?
 2128,25: (
 2128,26: (
 2128,27: 1
 2128,29: <<
 2128,32: (
 2128,33: 9
 2128,34: )
 2128,35: )
 2128,37: <<
 2128,40: 8
 2128,41: )
 2128,43: :
 2128,45: (
 2128,46: (
 2128,47: 1
 2128,49: <<
 2128,52: (
 2128,53: 9
 2128,54: )
 2128,55: )
 2128,57: >>
 2128,60: 8
 2128,61: )
 2128,62: )
 
341 ( expression ) 
 2128,14: (
 2128,15: (
 2128,16: 9
 2128,17: )
 2128,19: <
 2128,21: 8
 2128,23: ?
 2128,25: (
 2128,26: (
 2128,27: 1
 2128,29: <<
 2128,32: (
 2128,33: 9
 2128,34: )
 2128,35: )
 2128,37: <<
 2128,40: 8
 2128,41: )
 2128,43: :
 2128,45: (
 2128,46: (
 2128,47: 1
 2128,49: <<
 2128,52: (
 2128,53: 9
 2128,54: )
 2128,55: )
 2128,57: >>
 2128,60: 8
 2128,61: )
 2128,62: )
 
165 ( expression ) 
 2128,15: (
 2128,16: 9
 2128,17: )
 
165 CONSTANT 
 2128,16: 9
 
267 ) 
 2128,17: )
 
154 < 
 2128,19: <
 
252 CONSTANT 
 2128,21: 8
 
160 ? expression : conditional_expression 
 2128,23: ?
 2128,25: (
 2128,26: (
 2128,27: 1
 2128,29: <<
 2128,32: (
 2128,33: 9
 2128,34: )
 2128,35: )
 2128,37: <<
 2128,40: 8
 2128,41: )
 2128,43: :
 2128,45: (
 2128,46: (
 2128,47: 1
 2128,49: <<
 2128,52: (
 2128,53: 9
 2128,54: )
 2128,55: )
 2128,57: >>
 2128,60: 8
 2128,61: )
 
265 ( expression ) 
 2128,25: (
 2128,26: (
 2128,27: 1
 2128,29: <<
 2128,32: (
 2128,33: 9
 2128,34: )
 2128,35: )
 2128,37: <<
 2128,40: 8
 2128,41: )
 
165 ( expression ) 
 2128,26: (
 2128,27: 1
 2128,29: <<
 2128,32: (
 2128,33: 9
 2128,34: )
 2128,35: )
 
165 CONSTANT 
 2128,27: 1
 
153 << 
 2128,29: <<
 
249 ( expression ) 
 2128,32: (
 2128,33: 9
 2128,34: )
 
165 CONSTANT 
 2128,33: 9
 
267 ) 
 2128,34: )
 
267 ) 
 2128,35: )
 
153 << 
 2128,37: <<
 
249 CONSTANT 
 2128,40: 8
 
267 ) 
 2128,41: )
 
366 : conditional_expression 
 2128,43: :
 2128,45: (
 2128,46: (
 2128,47: 1
 2128,49: <<
 2128,52: (
 2128,53: 9
 2128,54: )
 2128,55: )
 2128,57: >>
 2128,60: 8
 2128,61: )
 
431 ( expression ) 
 2128,45: (
 2128,46: (
 2128,47: 1
 2128,49: <<
 2128,52: (
 2128,53: 9
 2128,54: )
 2128,55: )
 2128,57: >>
 2128,60: 8
 2128,61: )
 
165 ( expression ) 
 2128,46: (
 2128,47: 1
 2128,49: <<
 2128,52: (
 2128,53: 9
 2128,54: )
 2128,55: )
 
165 CONSTANT 
 2128,47: 1
 
153 << 
 2128,49: <<
 
249 ( expression ) 
 2128,52: (
 2128,53: 9
 2128,54: )
 
165 CONSTANT 
 2128,53: 9
 
267 ) 
 2128,54: )
 
267 ) 
 2128,55: )
 
153 >> 
 2128,57: >>
 
249 CONSTANT 
 2128,60: 8
 
267 ) 
 2128,61: )
 
267 ) 
 2128,62: )
 
204 , enumerator 
 2128,63: ,
 2129,3: _ISpunct
 2129,11: VARIABLE
 2129,12: =
 2129,14: (
 2129,15: (
 2129,16: 10
 2129,18: )
 2129,20: <
 2129,22: 8
 2129,24: ?
 2129,26: (
 2129,27: (
 2129,28: 1
 2129,30: <<
 2129,33: (
 2129,34: 10
 2129,36: )
 2129,37: )
 2129,39: <<
 2129,42: 8
 2129,43: )
 2129,45: :
 2129,47: (
 2129,48: (
 2129,49: 1
 2129,51: <<
 2129,54: (
 2129,55: 10
 2129,57: )
 2129,58: )
 2129,60: >>
 2129,63: 8
 2129,64: )
 2129,65: )
 
340 NAME VARIABLE 
 2129,3: _ISpunct
 2129,11: VARIABLE
 
65 VARIABLE 
 2129,11: VARIABLE
 
206 = constant_expression 
 2129,12: =
 2129,14: (
 2129,15: (
 2129,16: 10
 2129,18: )
 2129,20: <
 2129,22: 8
 2129,24: ?
 2129,26: (
 2129,27: (
 2129,28: 1
 2129,30: <<
 2129,33: (
 2129,34: 10
 2129,36: )
 2129,37: )
 2129,39: <<
 2129,42: 8
 2129,43: )
 2129,45: :
 2129,47: (
 2129,48: (
 2129,49: 1
 2129,51: <<
 2129,54: (
 2129,55: 10
 2129,57: )
 2129,58: )
 2129,60: >>
 2129,63: 8
 2129,64: )
 2129,65: )
 
341 ( expression ) 
 2129,14: (
 2129,15: (
 2129,16: 10
 2129,18: )
 2129,20: <
 2129,22: 8
 2129,24: ?
 2129,26: (
 2129,27: (
 2129,28: 1
 2129,30: <<
 2129,33: (
 2129,34: 10
 2129,36: )
 2129,37: )
 2129,39: <<
 2129,42: 8
 2129,43: )
 2129,45: :
 2129,47: (
 2129,48: (
 2129,49: 1
 2129,51: <<
 2129,54: (
 2129,55: 10
 2129,57: )
 2129,58: )
 2129,60: >>
 2129,63: 8
 2129,64: )
 2129,65: )
 
165 ( expression ) 
 2129,15: (
 2129,16: 10
 2129,18: )
 
165 CONSTANT 
 2129,16: 10
 
267 ) 
 2129,18: )
 
154 < 
 2129,20: <
 
252 CONSTANT 
 2129,22: 8
 
160 ? expression : conditional_expression 
 2129,24: ?
 2129,26: (
 2129,27: (
 2129,28: 1
 2129,30: <<
 2129,33: (
 2129,34: 10
 2129,36: )
 2129,37: )
 2129,39: <<
 2129,42: 8
 2129,43: )
 2129,45: :
 2129,47: (
 2129,48: (
 2129,49: 1
 2129,51: <<
 2129,54: (
 2129,55: 10
 2129,57: )
 2129,58: )
 2129,60: >>
 2129,63: 8
 2129,64: )
 
265 ( expression ) 
 2129,26: (
 2129,27: (
 2129,28: 1
 2129,30: <<
 2129,33: (
 2129,34: 10
 2129,36: )
 2129,37: )
 2129,39: <<
 2129,42: 8
 2129,43: )
 
165 ( expression ) 
 2129,27: (
 2129,28: 1
 2129,30: <<
 2129,33: (
 2129,34: 10
 2129,36: )
 2129,37: )
 
165 CONSTANT 
 2129,28: 1
 
153 << 
 2129,30: <<
 
249 ( expression ) 
 2129,33: (
 2129,34: 10
 2129,36: )
 
165 CONSTANT 
 2129,34: 10
 
267 ) 
 2129,36: )
 
267 ) 
 2129,37: )
 
153 << 
 2129,39: <<
 
249 CONSTANT 
 2129,42: 8
 
267 ) 
 2129,43: )
 
366 : conditional_expression 
 2129,45: :
 2129,47: (
 2129,48: (
 2129,49: 1
 2129,51: <<
 2129,54: (
 2129,55: 10
 2129,57: )
 2129,58: )
 2129,60: >>
 2129,63: 8
 2129,64: )
 
431 ( expression ) 
 2129,47: (
 2129,48: (
 2129,49: 1
 2129,51: <<
 2129,54: (
 2129,55: 10
 2129,57: )
 2129,58: )
 2129,60: >>
 2129,63: 8
 2129,64: )
 
165 ( expression ) 
 2129,48: (
 2129,49: 1
 2129,51: <<
 2129,54: (
 2129,55: 10
 2129,57: )
 2129,58: )
 
165 CONSTANT 
 2129,49: 1
 
153 << 
 2129,51: <<
 
249 ( expression ) 
 2129,54: (
 2129,55: 10
 2129,57: )
 
165 CONSTANT 
 2129,55: 10
 
267 ) 
 2129,57: )
 
267 ) 
 2129,58: )
 
153 >> 
 2129,60: >>
 
249 CONSTANT 
 2129,63: 8
 
267 ) 
 2129,64: )
 
267 ) 
 2129,65: )
 
204 , enumerator 
 2129,66: ,
 2130,3: _ISalnum
 2130,11: VARIABLE
 2130,12: =
 2130,14: (
 2130,15: (
 2130,16: 11
 2130,18: )
 2130,20: <
 2130,22: 8
 2130,24: ?
 2130,26: (
 2130,27: (
 2130,28: 1
 2130,30: <<
 2130,33: (
 2130,34: 11
 2130,36: )
 2130,37: )
 2130,39: <<
 2130,42: 8
 2130,43: )
 2130,45: :
 2130,47: (
 2130,48: (
 2130,49: 1
 2130,51: <<
 2130,54: (
 2130,55: 11
 2130,57: )
 2130,58: )
 2130,60: >>
 2130,63: 8
 2130,64: )
 2130,65: )
 
340 NAME VARIABLE 
 2130,3: _ISalnum
 2130,11: VARIABLE
 
65 VARIABLE 
 2130,11: VARIABLE
 
206 = constant_expression 
 2130,12: =
 2130,14: (
 2130,15: (
 2130,16: 11
 2130,18: )
 2130,20: <
 2130,22: 8
 2130,24: ?
 2130,26: (
 2130,27: (
 2130,28: 1
 2130,30: <<
 2130,33: (
 2130,34: 11
 2130,36: )
 2130,37: )
 2130,39: <<
 2130,42: 8
 2130,43: )
 2130,45: :
 2130,47: (
 2130,48: (
 2130,49: 1
 2130,51: <<
 2130,54: (
 2130,55: 11
 2130,57: )
 2130,58: )
 2130,60: >>
 2130,63: 8
 2130,64: )
 2130,65: )
 
341 ( expression ) 
 2130,14: (
 2130,15: (
 2130,16: 11
 2130,18: )
 2130,20: <
 2130,22: 8
 2130,24: ?
 2130,26: (
 2130,27: (
 2130,28: 1
 2130,30: <<
 2130,33: (
 2130,34: 11
 2130,36: )
 2130,37: )
 2130,39: <<
 2130,42: 8
 2130,43: )
 2130,45: :
 2130,47: (
 2130,48: (
 2130,49: 1
 2130,51: <<
 2130,54: (
 2130,55: 11
 2130,57: )
 2130,58: )
 2130,60: >>
 2130,63: 8
 2130,64: )
 2130,65: )
 
165 ( expression ) 
 2130,15: (
 2130,16: 11
 2130,18: )
 
165 CONSTANT 
 2130,16: 11
 
267 ) 
 2130,18: )
 
154 < 
 2130,20: <
 
252 CONSTANT 
 2130,22: 8
 
160 ? expression : conditional_expression 
 2130,24: ?
 2130,26: (
 2130,27: (
 2130,28: 1
 2130,30: <<
 2130,33: (
 2130,34: 11
 2130,36: )
 2130,37: )
 2130,39: <<
 2130,42: 8
 2130,43: )
 2130,45: :
 2130,47: (
 2130,48: (
 2130,49: 1
 2130,51: <<
 2130,54: (
 2130,55: 11
 2130,57: )
 2130,58: )
 2130,60: >>
 2130,63: 8
 2130,64: )
 
265 ( expression ) 
 2130,26: (
 2130,27: (
 2130,28: 1
 2130,30: <<
 2130,33: (
 2130,34: 11
 2130,36: )
 2130,37: )
 2130,39: <<
 2130,42: 8
 2130,43: )
 
165 ( expression ) 
 2130,27: (
 2130,28: 1
 2130,30: <<
 2130,33: (
 2130,34: 11
 2130,36: )
 2130,37: )
 
165 CONSTANT 
 2130,28: 1
 
153 << 
 2130,30: <<
 
249 ( expression ) 
 2130,33: (
 2130,34: 11
 2130,36: )
 
165 CONSTANT 
 2130,34: 11
 
267 ) 
 2130,36: )
 
267 ) 
 2130,37: )
 
153 << 
 2130,39: <<
 
249 CONSTANT 
 2130,42: 8
 
267 ) 
 2130,43: )
 
366 : conditional_expression 
 2130,45: :
 2130,47: (
 2130,48: (
 2130,49: 1
 2130,51: <<
 2130,54: (
 2130,55: 11
 2130,57: )
 2130,58: )
 2130,60: >>
 2130,63: 8
 2130,64: )
 
431 ( expression ) 
 2130,47: (
 2130,48: (
 2130,49: 1
 2130,51: <<
 2130,54: (
 2130,55: 11
 2130,57: )
 2130,58: )
 2130,60: >>
 2130,63: 8
 2130,64: )
 
165 ( expression ) 
 2130,48: (
 2130,49: 1
 2130,51: <<
 2130,54: (
 2130,55: 11
 2130,57: )
 2130,58: )
 
165 CONSTANT 
 2130,49: 1
 
153 << 
 2130,51: <<
 
249 ( expression ) 
 2130,54: (
 2130,55: 11
 2130,57: )
 
165 CONSTANT 
 2130,55: 11
 
267 ) 
 2130,57: )
 
267 ) 
 2130,58: )
 
153 >> 
 2130,60: >>
 
249 CONSTANT 
 2130,63: 8
 
267 ) 
 2130,64: )
 
267 ) 
 2130,65: )
 
339 } 
 2131,1: }
 
60 ; 
 2131,2: ;
 
23 extern 
 2133,1: extern
 
8 const 
 2133,8: const
 
8 unsigned 
 2133,14: unsigned
 
17 short 
 2133,23: short
 
17 int 
 2133,29: int
 
5 * option_type_qualifier_list option_pointer 
 2133,33: *
 2133,34: *
 
116 * option_type_qualifier_list option_pointer 
 2133,34: *
 
64 NAME VARIABLE 
 2133,35: __ctype_b_loc
 2133,48: VARIABLE
 
65 VARIABLE 
 2133,48: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2133,49: (
 2133,50: void
 2133,54: )
 
186 void 
 2133,50: void
 
187 ) 
 2133,54: )
 
60 ; 
 2134,7: ;
 
23 extern 
 2135,1: extern
 
8 const 
 2135,8: const
 
8 NAME TYPE 
 2135,14: __int32_t
 2135,23: TYPE
 
26 TYPE 
 2135,23: TYPE
 
5 * option_type_qualifier_list option_pointer 
 2135,24: *
 2135,25: *
 
116 * option_type_qualifier_list option_pointer 
 2135,25: *
 
64 NAME VARIABLE 
 2135,26: __ctype_tolower_loc
 2135,45: VARIABLE
 
65 VARIABLE 
 2135,45: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2135,46: (
 2135,47: void
 2135,51: )
 
186 void 
 2135,47: void
 
187 ) 
 2135,51: )
 
60 ; 
 2136,7: ;
 
23 extern 
 2137,1: extern
 
8 const 
 2137,8: const
 
8 NAME TYPE 
 2137,14: __int32_t
 2137,23: TYPE
 
26 TYPE 
 2137,23: TYPE
 
5 * option_type_qualifier_list option_pointer 
 2137,24: *
 2137,25: *
 
116 * option_type_qualifier_list option_pointer 
 2137,25: *
 
64 NAME VARIABLE 
 2137,26: __ctype_toupper_loc
 2137,45: VARIABLE
 
65 VARIABLE 
 2137,45: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2137,46: (
 2137,47: void
 2137,51: )
 
186 void 
 2137,47: void
 
187 ) 
 2137,51: )
 
60 ; 
 2138,7: ;
 
23 extern 
 2140,1: extern
 
8 int 
 2140,8: int
 
5 NAME VARIABLE 
 2140,12: isalnum
 2140,19: VARIABLE
 
65 VARIABLE 
 2140,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2140,20: (
 2140,21: int
 2140,24: )
 
186 int 
 2140,21: int
 
187 ) 
 2140,24: )
 
60 ; 
 2140,26: ;
 
23 extern 
 2141,1: extern
 
8 int 
 2141,8: int
 
5 NAME VARIABLE 
 2141,12: isalpha
 2141,19: VARIABLE
 
65 VARIABLE 
 2141,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2141,20: (
 2141,21: int
 2141,24: )
 
186 int 
 2141,21: int
 
187 ) 
 2141,24: )
 
60 ; 
 2141,26: ;
 
23 extern 
 2142,1: extern
 
8 int 
 2142,8: int
 
5 NAME VARIABLE 
 2142,12: iscntrl
 2142,19: VARIABLE
 
65 VARIABLE 
 2142,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2142,20: (
 2142,21: int
 2142,24: )
 
186 int 
 2142,21: int
 
187 ) 
 2142,24: )
 
60 ; 
 2142,26: ;
 
23 extern 
 2143,1: extern
 
8 int 
 2143,8: int
 
5 NAME VARIABLE 
 2143,12: isdigit
 2143,19: VARIABLE
 
65 VARIABLE 
 2143,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2143,20: (
 2143,21: int
 2143,24: )
 
186 int 
 2143,21: int
 
187 ) 
 2143,24: )
 
60 ; 
 2143,26: ;
 
23 extern 
 2144,1: extern
 
8 int 
 2144,8: int
 
5 NAME VARIABLE 
 2144,12: islower
 2144,19: VARIABLE
 
65 VARIABLE 
 2144,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2144,20: (
 2144,21: int
 2144,24: )
 
186 int 
 2144,21: int
 
187 ) 
 2144,24: )
 
60 ; 
 2144,26: ;
 
23 extern 
 2145,1: extern
 
8 int 
 2145,8: int
 
5 NAME VARIABLE 
 2145,12: isgraph
 2145,19: VARIABLE
 
65 VARIABLE 
 2145,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2145,20: (
 2145,21: int
 2145,24: )
 
186 int 
 2145,21: int
 
187 ) 
 2145,24: )
 
60 ; 
 2145,26: ;
 
23 extern 
 2146,1: extern
 
8 int 
 2146,8: int
 
5 NAME VARIABLE 
 2146,12: isprint
 2146,19: VARIABLE
 
65 VARIABLE 
 2146,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2146,20: (
 2146,21: int
 2146,24: )
 
186 int 
 2146,21: int
 
187 ) 
 2146,24: )
 
60 ; 
 2146,26: ;
 
23 extern 
 2147,1: extern
 
8 int 
 2147,8: int
 
5 NAME VARIABLE 
 2147,12: ispunct
 2147,19: VARIABLE
 
65 VARIABLE 
 2147,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2147,20: (
 2147,21: int
 2147,24: )
 
186 int 
 2147,21: int
 
187 ) 
 2147,24: )
 
60 ; 
 2147,26: ;
 
23 extern 
 2148,1: extern
 
8 int 
 2148,8: int
 
5 NAME VARIABLE 
 2148,12: isspace
 2148,19: VARIABLE
 
65 VARIABLE 
 2148,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2148,20: (
 2148,21: int
 2148,24: )
 
186 int 
 2148,21: int
 
187 ) 
 2148,24: )
 
60 ; 
 2148,26: ;
 
23 extern 
 2149,1: extern
 
8 int 
 2149,8: int
 
5 NAME VARIABLE 
 2149,12: isupper
 2149,19: VARIABLE
 
65 VARIABLE 
 2149,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2149,20: (
 2149,21: int
 2149,24: )
 
186 int 
 2149,21: int
 
187 ) 
 2149,24: )
 
60 ; 
 2149,26: ;
 
23 extern 
 2150,1: extern
 
8 int 
 2150,8: int
 
5 NAME VARIABLE 
 2150,12: isxdigit
 2150,20: VARIABLE
 
65 VARIABLE 
 2150,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2150,21: (
 2150,22: int
 2150,25: )
 
186 int 
 2150,22: int
 
187 ) 
 2150,25: )
 
60 ; 
 2150,27: ;
 
23 extern 
 2154,1: extern
 
8 int 
 2154,8: int
 
5 NAME VARIABLE 
 2154,12: tolower
 2154,19: VARIABLE
 
65 VARIABLE 
 2154,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2154,20: (
 2154,21: int
 2154,25: __c
 2154,28: VARIABLE
 2154,28: )
 
186 int 
 2154,21: int
 
298 NAME VARIABLE 
 2154,25: __c
 2154,28: VARIABLE
 
65 VARIABLE 
 2154,28: VARIABLE
 
187 ) 
 2154,28: )
 
60 ; 
 2154,30: ;
 
23 extern 
 2157,1: extern
 
8 int 
 2157,8: int
 
5 NAME VARIABLE 
 2157,12: toupper
 2157,19: VARIABLE
 
65 VARIABLE 
 2157,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2157,20: (
 2157,21: int
 2157,25: __c
 2157,28: VARIABLE
 2157,28: )
 
186 int 
 2157,21: int
 
298 NAME VARIABLE 
 2157,25: __c
 2157,28: VARIABLE
 
65 VARIABLE 
 2157,28: VARIABLE
 
187 ) 
 2157,28: )
 
60 ; 
 2157,30: ;
 
23 extern 
 2162,1: extern
 
8 int 
 2162,8: int
 
5 NAME VARIABLE 
 2162,12: isblank
 2162,19: VARIABLE
 
65 VARIABLE 
 2162,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2162,20: (
 2162,21: int
 2162,24: )
 
186 int 
 2162,21: int
 
187 ) 
 2162,24: )
 
60 ; 
 2162,26: ;
 
23 extern 
 2164,1: extern
 
8 int 
 2164,8: int
 
5 NAME VARIABLE 
 2164,12: isascii
 2164,19: VARIABLE
 
65 VARIABLE 
 2164,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2164,20: (
 2164,21: int
 2164,25: __c
 2164,28: VARIABLE
 2164,28: )
 
186 int 
 2164,21: int
 
298 NAME VARIABLE 
 2164,25: __c
 2164,28: VARIABLE
 
65 VARIABLE 
 2164,28: VARIABLE
 
187 ) 
 2164,28: )
 
60 ; 
 2164,30: ;
 
23 extern 
 2168,1: extern
 
8 int 
 2168,8: int
 
5 NAME VARIABLE 
 2168,12: toascii
 2168,19: VARIABLE
 
65 VARIABLE 
 2168,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2168,20: (
 2168,21: int
 2168,25: __c
 2168,28: VARIABLE
 2168,28: )
 
186 int 
 2168,21: int
 
298 NAME VARIABLE 
 2168,25: __c
 2168,28: VARIABLE
 
65 VARIABLE 
 2168,28: VARIABLE
 
187 ) 
 2168,28: )
 
60 ; 
 2168,30: ;
 
23 extern 
 2172,1: extern
 
8 int 
 2172,8: int
 
5 NAME VARIABLE 
 2172,12: _toupper
 2172,20: VARIABLE
 
65 VARIABLE 
 2172,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2172,21: (
 2172,22: int
 2172,25: )
 
186 int 
 2172,22: int
 
187 ) 
 2172,25: )
 
60 ; 
 2172,27: ;
 
23 extern 
 2173,1: extern
 
8 int 
 2173,8: int
 
5 NAME VARIABLE 
 2173,12: _tolower
 2173,20: VARIABLE
 
65 VARIABLE 
 2173,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2173,21: (
 2173,22: int
 2173,25: )
 
186 int 
 2173,22: int
 
187 ) 
 2173,25: )
 
60 ; 
 2173,27: ;
 
23 extern 
 2175,1: extern
 
8 int 
 2175,8: int
 
5 NAME VARIABLE 
 2175,12: isalnum_l
 2175,21: VARIABLE
 
65 VARIABLE 
 2175,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2175,22: (
 2175,23: int
 2175,26: ,
 2175,28: locale_t
 2175,36: TYPE
 2175,36: )
 
186 int 
 2175,23: int
 
300 , parameter_declaration 
 2175,26: ,
 2175,28: locale_t
 2175,36: TYPE
 
391 NAME TYPE 
 2175,28: locale_t
 2175,36: TYPE
 
26 TYPE 
 2175,36: TYPE
 
187 ) 
 2175,36: )
 
60 ; 
 2175,38: ;
 
23 extern 
 2176,1: extern
 
8 int 
 2176,8: int
 
5 NAME VARIABLE 
 2176,12: isalpha_l
 2176,21: VARIABLE
 
65 VARIABLE 
 2176,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2176,22: (
 2176,23: int
 2176,26: ,
 2176,28: locale_t
 2176,36: TYPE
 2176,36: )
 
186 int 
 2176,23: int
 
300 , parameter_declaration 
 2176,26: ,
 2176,28: locale_t
 2176,36: TYPE
 
391 NAME TYPE 
 2176,28: locale_t
 2176,36: TYPE
 
26 TYPE 
 2176,36: TYPE
 
187 ) 
 2176,36: )
 
60 ; 
 2176,38: ;
 
23 extern 
 2177,1: extern
 
8 int 
 2177,8: int
 
5 NAME VARIABLE 
 2177,12: iscntrl_l
 2177,21: VARIABLE
 
65 VARIABLE 
 2177,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2177,22: (
 2177,23: int
 2177,26: ,
 2177,28: locale_t
 2177,36: TYPE
 2177,36: )
 
186 int 
 2177,23: int
 
300 , parameter_declaration 
 2177,26: ,
 2177,28: locale_t
 2177,36: TYPE
 
391 NAME TYPE 
 2177,28: locale_t
 2177,36: TYPE
 
26 TYPE 
 2177,36: TYPE
 
187 ) 
 2177,36: )
 
60 ; 
 2177,38: ;
 
23 extern 
 2178,1: extern
 
8 int 
 2178,8: int
 
5 NAME VARIABLE 
 2178,12: isdigit_l
 2178,21: VARIABLE
 
65 VARIABLE 
 2178,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2178,22: (
 2178,23: int
 2178,26: ,
 2178,28: locale_t
 2178,36: TYPE
 2178,36: )
 
186 int 
 2178,23: int
 
300 , parameter_declaration 
 2178,26: ,
 2178,28: locale_t
 2178,36: TYPE
 
391 NAME TYPE 
 2178,28: locale_t
 2178,36: TYPE
 
26 TYPE 
 2178,36: TYPE
 
187 ) 
 2178,36: )
 
60 ; 
 2178,38: ;
 
23 extern 
 2179,1: extern
 
8 int 
 2179,8: int
 
5 NAME VARIABLE 
 2179,12: islower_l
 2179,21: VARIABLE
 
65 VARIABLE 
 2179,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2179,22: (
 2179,23: int
 2179,26: ,
 2179,28: locale_t
 2179,36: TYPE
 2179,36: )
 
186 int 
 2179,23: int
 
300 , parameter_declaration 
 2179,26: ,
 2179,28: locale_t
 2179,36: TYPE
 
391 NAME TYPE 
 2179,28: locale_t
 2179,36: TYPE
 
26 TYPE 
 2179,36: TYPE
 
187 ) 
 2179,36: )
 
60 ; 
 2179,38: ;
 
23 extern 
 2180,1: extern
 
8 int 
 2180,8: int
 
5 NAME VARIABLE 
 2180,12: isgraph_l
 2180,21: VARIABLE
 
65 VARIABLE 
 2180,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2180,22: (
 2180,23: int
 2180,26: ,
 2180,28: locale_t
 2180,36: TYPE
 2180,36: )
 
186 int 
 2180,23: int
 
300 , parameter_declaration 
 2180,26: ,
 2180,28: locale_t
 2180,36: TYPE
 
391 NAME TYPE 
 2180,28: locale_t
 2180,36: TYPE
 
26 TYPE 
 2180,36: TYPE
 
187 ) 
 2180,36: )
 
60 ; 
 2180,38: ;
 
23 extern 
 2181,1: extern
 
8 int 
 2181,8: int
 
5 NAME VARIABLE 
 2181,12: isprint_l
 2181,21: VARIABLE
 
65 VARIABLE 
 2181,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2181,22: (
 2181,23: int
 2181,26: ,
 2181,28: locale_t
 2181,36: TYPE
 2181,36: )
 
186 int 
 2181,23: int
 
300 , parameter_declaration 
 2181,26: ,
 2181,28: locale_t
 2181,36: TYPE
 
391 NAME TYPE 
 2181,28: locale_t
 2181,36: TYPE
 
26 TYPE 
 2181,36: TYPE
 
187 ) 
 2181,36: )
 
60 ; 
 2181,38: ;
 
23 extern 
 2182,1: extern
 
8 int 
 2182,8: int
 
5 NAME VARIABLE 
 2182,12: ispunct_l
 2182,21: VARIABLE
 
65 VARIABLE 
 2182,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2182,22: (
 2182,23: int
 2182,26: ,
 2182,28: locale_t
 2182,36: TYPE
 2182,36: )
 
186 int 
 2182,23: int
 
300 , parameter_declaration 
 2182,26: ,
 2182,28: locale_t
 2182,36: TYPE
 
391 NAME TYPE 
 2182,28: locale_t
 2182,36: TYPE
 
26 TYPE 
 2182,36: TYPE
 
187 ) 
 2182,36: )
 
60 ; 
 2182,38: ;
 
23 extern 
 2183,1: extern
 
8 int 
 2183,8: int
 
5 NAME VARIABLE 
 2183,12: isspace_l
 2183,21: VARIABLE
 
65 VARIABLE 
 2183,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2183,22: (
 2183,23: int
 2183,26: ,
 2183,28: locale_t
 2183,36: TYPE
 2183,36: )
 
186 int 
 2183,23: int
 
300 , parameter_declaration 
 2183,26: ,
 2183,28: locale_t
 2183,36: TYPE
 
391 NAME TYPE 
 2183,28: locale_t
 2183,36: TYPE
 
26 TYPE 
 2183,36: TYPE
 
187 ) 
 2183,36: )
 
60 ; 
 2183,38: ;
 
23 extern 
 2184,1: extern
 
8 int 
 2184,8: int
 
5 NAME VARIABLE 
 2184,12: isupper_l
 2184,21: VARIABLE
 
65 VARIABLE 
 2184,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2184,22: (
 2184,23: int
 2184,26: ,
 2184,28: locale_t
 2184,36: TYPE
 2184,36: )
 
186 int 
 2184,23: int
 
300 , parameter_declaration 
 2184,26: ,
 2184,28: locale_t
 2184,36: TYPE
 
391 NAME TYPE 
 2184,28: locale_t
 2184,36: TYPE
 
26 TYPE 
 2184,36: TYPE
 
187 ) 
 2184,36: )
 
60 ; 
 2184,38: ;
 
23 extern 
 2185,1: extern
 
8 int 
 2185,8: int
 
5 NAME VARIABLE 
 2185,12: isxdigit_l
 2185,22: VARIABLE
 
65 VARIABLE 
 2185,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2185,23: (
 2185,24: int
 2185,27: ,
 2185,29: locale_t
 2185,37: TYPE
 2185,37: )
 
186 int 
 2185,24: int
 
300 , parameter_declaration 
 2185,27: ,
 2185,29: locale_t
 2185,37: TYPE
 
391 NAME TYPE 
 2185,29: locale_t
 2185,37: TYPE
 
26 TYPE 
 2185,37: TYPE
 
187 ) 
 2185,37: )
 
60 ; 
 2185,39: ;
 
23 extern 
 2187,1: extern
 
8 int 
 2187,8: int
 
5 NAME VARIABLE 
 2187,12: isblank_l
 2187,21: VARIABLE
 
65 VARIABLE 
 2187,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2187,22: (
 2187,23: int
 2187,26: ,
 2187,28: locale_t
 2187,36: TYPE
 2187,36: )
 
186 int 
 2187,23: int
 
300 , parameter_declaration 
 2187,26: ,
 2187,28: locale_t
 2187,36: TYPE
 
391 NAME TYPE 
 2187,28: locale_t
 2187,36: TYPE
 
26 TYPE 
 2187,36: TYPE
 
187 ) 
 2187,36: )
 
60 ; 
 2187,38: ;
 
23 extern 
 2191,1: extern
 
8 int 
 2191,8: int
 
5 NAME VARIABLE 
 2191,12: __tolower_l
 2191,23: VARIABLE
 
65 VARIABLE 
 2191,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2191,24: (
 2191,25: int
 2191,29: __c
 2191,32: VARIABLE
 2191,32: ,
 2191,34: locale_t
 2191,42: TYPE
 2191,43: __l
 2191,46: VARIABLE
 2191,46: )
 
186 int 
 2191,25: int
 
298 NAME VARIABLE 
 2191,29: __c
 2191,32: VARIABLE
 
65 VARIABLE 
 2191,32: VARIABLE
 
300 , parameter_declaration 
 2191,32: ,
 2191,34: locale_t
 2191,42: TYPE
 2191,43: __l
 2191,46: VARIABLE
 
391 NAME TYPE 
 2191,34: locale_t
 2191,42: TYPE
 
26 TYPE 
 2191,42: TYPE
 
298 NAME VARIABLE 
 2191,43: __l
 2191,46: VARIABLE
 
65 VARIABLE 
 2191,46: VARIABLE
 
187 ) 
 2191,46: )
 
60 ; 
 2191,48: ;
 
23 extern 
 2192,1: extern
 
8 int 
 2192,8: int
 
5 NAME VARIABLE 
 2192,12: tolower_l
 2192,21: VARIABLE
 
65 VARIABLE 
 2192,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2192,22: (
 2192,23: int
 2192,27: __c
 2192,30: VARIABLE
 2192,30: ,
 2192,32: locale_t
 2192,40: TYPE
 2192,41: __l
 2192,44: VARIABLE
 2192,44: )
 
186 int 
 2192,23: int
 
298 NAME VARIABLE 
 2192,27: __c
 2192,30: VARIABLE
 
65 VARIABLE 
 2192,30: VARIABLE
 
300 , parameter_declaration 
 2192,30: ,
 2192,32: locale_t
 2192,40: TYPE
 2192,41: __l
 2192,44: VARIABLE
 
391 NAME TYPE 
 2192,32: locale_t
 2192,40: TYPE
 
26 TYPE 
 2192,40: TYPE
 
298 NAME VARIABLE 
 2192,41: __l
 2192,44: VARIABLE
 
65 VARIABLE 
 2192,44: VARIABLE
 
187 ) 
 2192,44: )
 
60 ; 
 2192,46: ;
 
23 extern 
 2195,1: extern
 
8 int 
 2195,8: int
 
5 NAME VARIABLE 
 2195,12: __toupper_l
 2195,23: VARIABLE
 
65 VARIABLE 
 2195,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2195,24: (
 2195,25: int
 2195,29: __c
 2195,32: VARIABLE
 2195,32: ,
 2195,34: locale_t
 2195,42: TYPE
 2195,43: __l
 2195,46: VARIABLE
 2195,46: )
 
186 int 
 2195,25: int
 
298 NAME VARIABLE 
 2195,29: __c
 2195,32: VARIABLE
 
65 VARIABLE 
 2195,32: VARIABLE
 
300 , parameter_declaration 
 2195,32: ,
 2195,34: locale_t
 2195,42: TYPE
 2195,43: __l
 2195,46: VARIABLE
 
391 NAME TYPE 
 2195,34: locale_t
 2195,42: TYPE
 
26 TYPE 
 2195,42: TYPE
 
298 NAME VARIABLE 
 2195,43: __l
 2195,46: VARIABLE
 
65 VARIABLE 
 2195,46: VARIABLE
 
187 ) 
 2195,46: )
 
60 ; 
 2195,48: ;
 
23 extern 
 2196,1: extern
 
8 int 
 2196,8: int
 
5 NAME VARIABLE 
 2196,12: toupper_l
 2196,21: VARIABLE
 
65 VARIABLE 
 2196,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2196,22: (
 2196,23: int
 2196,27: __c
 2196,30: VARIABLE
 2196,30: ,
 2196,32: locale_t
 2196,40: TYPE
 2196,41: __l
 2196,44: VARIABLE
 2196,44: )
 
186 int 
 2196,23: int
 
298 NAME VARIABLE 
 2196,27: __c
 2196,30: VARIABLE
 
65 VARIABLE 
 2196,30: VARIABLE
 
300 , parameter_declaration 
 2196,30: ,
 2196,32: locale_t
 2196,40: TYPE
 2196,41: __l
 2196,44: VARIABLE
 
391 NAME TYPE 
 2196,32: locale_t
 2196,40: TYPE
 
26 TYPE 
 2196,40: TYPE
 
298 NAME VARIABLE 
 2196,41: __l
 2196,44: VARIABLE
 
65 VARIABLE 
 2196,44: VARIABLE
 
187 ) 
 2196,44: )
 
60 ; 
 2196,46: ;
 
23 unsigned 
 2205,1: unsigned
 
17 char 
 2205,10: char
 
5 NAME VARIABLE 
 2205,15: stack_pointer
 2205,28: VARIABLE
 
65 VARIABLE 
 2205,28: VARIABLE
 
59 = c_initializer 
 2205,29: =
 2205,31: 0
 
108 CONSTANT 
 2205,31: 0
 
60 ; 
 2205,32: ;
 
23 float 
 2206,1: float
 
5 NAME VARIABLE 
 2206,7: stack
 2206,12: VARIABLE
 
65 VARIABLE 
 2206,12: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 2206,12: [
 2206,13: 15
 2206,15: ]
 
188 CONSTANT 
 2206,13: 15
 
305 ] 
 2206,15: ]
 
60 ; 
 2206,16: ;
 
23 float 
 2208,1: float
 
5 NAME VARIABLE 
 2208,7: pop
 2208,10: VARIABLE
 
65 VARIABLE 
 2208,10: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2208,10: (
 2208,11: void
 2208,15: )
 
186 void 
 2208,11: void
 
187 ) 
 2208,15: )
 
60 ; 
 2208,16: ;
 
23 void 
 2209,1: void
 
5 NAME VARIABLE 
 2209,6: push
 2209,10: VARIABLE
 
65 VARIABLE 
 2209,10: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2209,10: (
 2209,11: float
 2209,17: element
 2209,24: VARIABLE
 2209,24: )
 
186 float 
 2209,11: float
 
298 NAME VARIABLE 
 2209,17: element
 2209,24: VARIABLE
 
65 VARIABLE 
 2209,24: VARIABLE
 
187 ) 
 2209,24: )
 
60 ; 
 2209,25: ;
 
23 int 
 2211,1: int
 
5 NAME VARIABLE 
 2211,5: main
 2211,9: VARIABLE
 
65 VARIABLE 
 2211,9: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2211,9: (
 2211,10: int
 2211,14: argc
 2211,18: VARIABLE
 2211,18: ,
 2211,20: char
 2211,25: *
 2211,26: argv
 2211,30: VARIABLE
 2211,30: [
 2211,31: ]
 2211,32: )
 
186 int 
 2211,10: int
 
298 NAME VARIABLE 
 2211,14: argc
 2211,18: VARIABLE
 
65 VARIABLE 
 2211,18: VARIABLE
 
300 , parameter_declaration 
 2211,18: ,
 2211,20: char
 2211,25: *
 2211,26: argv
 2211,30: VARIABLE
 2211,30: [
 2211,31: ]
 
391 char 
 2211,20: char
 
298 * option_type_qualifier_list option_pointer 
 2211,25: *
 
386 NAME VARIABLE 
 2211,26: argv
 2211,30: VARIABLE
 
65 VARIABLE 
 2211,30: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 2211,30: [
 2211,31: ]
 
305 ] 
 2211,31: ]
 
187 ) 
 2211,32: )
 
94 { option_block_item_list } 
 2212,1: {
 2213,3: char
 2213,8: Error
 2213,13: VARIABLE
 2213,14: =
 2213,16: 0
 2213,17: ;
 2215,3: for
 2215,7: (
 2215,8: size_t
 2215,14: TYPE
 2215,15: i
 2215,16: VARIABLE
 2215,17: =
 2215,19: 1
 2215,20: ;
 2215,22: i
 2215,23: VARIABLE
 2215,24: <
 2215,26: argc
 2215,30: VARIABLE
 2215,30: ;
 2215,32: ++
 2215,34: i
 2215,35: VARIABLE
 2215,35: )
 2216,3: {
 2217,5: float
 2217,11: number
 2217,17: VARIABLE
 2217,18: =
 2217,20: atof
 2217,24: VARIABLE
 2217,24: (
 2217,25: argv
 2217,29: VARIABLE
 2217,29: [
 2217,30: i
 2217,31: VARIABLE
 2217,31: ]
 2217,32: )
 2217,33: ;
 2219,5: if
 2219,8: (
 2219,9: number
 2219,15: VARIABLE
 2219,16: ||
 2219,19: strcmp
 2219,25: VARIABLE
 2219,25: (
 2219,26: argv
 2219,30: VARIABLE
 2219,30: [
 2219,31: i
 2219,32: VARIABLE
 2219,32: ]
 2219,33: ,
 2219,35: "
 2219,38: )
 2219,40: ==
 2219,43: 0
 2219,44: )
 2220,5: {
 2221,7: push
 2221,11: VARIABLE
 2221,11: (
 2221,12: number
 2221,18: VARIABLE
 2221,18: )
 2221,19: ;
 2222,5: }
 2223,5: else
 2223,10: if
 2223,13: (
 2223,14: strlen
 2223,20: VARIABLE
 2223,20: (
 2223,21: argv
 2223,25: VARIABLE
 2223,25: [
 2223,26: i
 2223,27: VARIABLE
 2223,27: ]
 2223,28: )
 2223,30: ==
 2223,33: 1
 2223,34: )
 2224,5: {
 2225,7: if
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 2265,5: }
 2266,5: else
 2267,5: {
 2268,7: Error
 2268,12: VARIABLE
 2268,13: =
 2268,15: 1
 2268,16: ;
 2269,5: }
 2270,3: }
 2272,3: if
 2272,6: (
 2272,7: Error
 2272,12: VARIABLE
 2272,12: )
 2273,3: {
 2274,5: switch
 2274,12: (
 2274,13: Error
 2274,18: VARIABLE
 2274,18: )
 2275,5: {
 2276,5: case
 2276,10: 1
 2276,11: :
 2277,7: printf
 2277,13: VARIABLE
 2277,13: (
 2277,14: "
 2277,121: )
 2277,122: ;
 2278,7: break
 2278,12: ;
 2280,5: case
 2280,10: 2
 2280,11: :
 2281,7: printf
 2281,13: VARIABLE
 2281,13: (
 2281,14: "
 2281,55: )
 2281,56: ;
 2282,7: break
 2282,12: ;
 2284,5: case
 2284,10: 3
 2284,11: :
 2285,7: printf
 2285,13: VARIABLE
 2285,13: (
 2285,14: "
 2285,113: )
 2285,114: ;
 2286,7: break
 2286,12: ;
 2288,5: case
 2288,10: 4
 2288,11: :
 2289,7: printf
 2289,13: VARIABLE
 2289,13: (
 2289,14: "
 2289,48: )
 2289,49: ;
 2290,7: break
 2290,12: ;
 2292,5: default
 2292,12: :
 2293,7: break
 2293,12: ;
 2294,5: }
 2296,5: return
 2298,11: 1
 2300,23: ;
 2301,3: }
 2303,3: printf
 2303,9: VARIABLE
 2303,9: (
 2303,10: "
 2303,24: ,
 2303,26: pop
 2303,29: VARIABLE
 2303,29: (
 2303,30: )
 2303,31: )
 2303,32: ;
 2305,3: return
 2307,9: 0
 2309,21: ;
 2310,1: }
 
201 char 
 2213,3: char
 
93 NAME VARIABLE 
 2213,8: Error
 2213,13: VARIABLE
 
65 VARIABLE 
 2213,13: VARIABLE
 
59 = c_initializer 
 2213,14: =
 2213,16: 0
 
108 CONSTANT 
 2213,16: 0
 
60 ; 
 2213,17: ;
 
320 for ( declaration option_expression ; option_expression ) scoped_statement 
 2215,3: for
 2215,7: (
 2215,8: size_t
 2215,14: TYPE
 2215,15: i
 2215,16: VARIABLE
 2215,17: =
 2215,19: 1
 2215,20: ;
 2215,22: i
 2215,23: VARIABLE
 2215,24: <
 2215,26: argc
 2215,30: VARIABLE
 2215,30: ;
 2215,32: ++
 2215,34: i
 2215,35: VARIABLE
 2215,35: )
 2216,3: {
 2217,5: float
 2217,11: number
 2217,17: VARIABLE
 2217,18: =
 2217,20: atof
 2217,24: VARIABLE
 2217,24: (
 2217,25: argv
 2217,29: VARIABLE
 2217,29: [
 2217,30: i
 2217,31: VARIABLE
 2217,31: ]
 2217,32: )
 2217,33: ;
 2219,5: if
 2219,8: (
 2219,9: number
 2219,15: VARIABLE
 2219,16: ||
 2219,19: strcmp
 2219,25: VARIABLE
 2219,25: (
 2219,26: argv
 2219,30: VARIABLE
 2219,30: [
 2219,31: i
 2219,32: VARIABLE
 2219,32: ]
 2219,33: ,
 2219,35: "
 2219,38: )
 2219,40: ==
 2219,43: 0
 2219,44: )
 2220,5: {
 2221,7: push
 2221,11: VARIABLE
 2221,11: (
 2221,12: number
 2221,18: VARIABLE
 2221,18: )
 2221,19: ;
 2222,5: }
 2223,5: else
 2223,10: if
 2223,13: (
 2223,14: strlen
 2223,20: VARIABLE
 2223,20: (
 2223,21: argv
 2223,25: VARIABLE
 2223,25: [
 2223,26: i
 2223,27: VARIABLE
 2223,27: ]
 2223,28: )
 2223,30: ==
 2223,33: 1
 2223,34: )
 2224,5: {
 2225,7: if
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 2265,5: }
 2266,5: else
 2267,5: {
 2268,7: Error
 2268,12: VARIABLE
 2268,13: =
 2268,15: 1
 2268,16: ;
 2269,5: }
 2270,3: }
 
408 ( declaration option_expression ; option_expression ) scoped_statement 
 2215,7: (
 2215,8: size_t
 2215,14: TYPE
 2215,15: i
 2215,16: VARIABLE
 2215,17: =
 2215,19: 1
 2215,20: ;
 2215,22: i
 2215,23: VARIABLE
 2215,24: <
 2215,26: argc
 2215,30: VARIABLE
 2215,30: ;
 2215,32: ++
 2215,34: i
 2215,35: VARIABLE
 2215,35: )
 2216,3: {
 2217,5: float
 2217,11: number
 2217,17: VARIABLE
 2217,18: =
 2217,20: atof
 2217,24: VARIABLE
 2217,24: (
 2217,25: argv
 2217,29: VARIABLE
 2217,29: [
 2217,30: i
 2217,31: VARIABLE
 2217,31: ]
 2217,32: )
 2217,33: ;
 2219,5: if
 2219,8: (
 2219,9: number
 2219,15: VARIABLE
 2219,16: ||
 2219,19: strcmp
 2219,25: VARIABLE
 2219,25: (
 2219,26: argv
 2219,30: VARIABLE
 2219,30: [
 2219,31: i
 2219,32: VARIABLE
 2219,32: ]
 2219,33: ,
 2219,35: "
 2219,38: )
 2219,40: ==
 2219,43: 0
 2219,44: )
 2220,5: {
 2221,7: push
 2221,11: VARIABLE
 2221,11: (
 2221,12: number
 2221,18: VARIABLE
 2221,18: )
 2221,19: ;
 2222,5: }
 2223,5: else
 2223,10: if
 2223,13: (
 2223,14: strlen
 2223,20: VARIABLE
 2223,20: (
 2223,21: argv
 2223,25: VARIABLE
 2223,25: [
 2223,26: i
 2223,27: VARIABLE
 2223,27: ]
 2223,28: )
 2223,30: ==
 2223,33: 1
 2223,34: )
 2224,5: {
 2225,7: if
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 2265,5: }
 2266,5: else
 2267,5: {
 2268,7: Error
 2268,12: VARIABLE
 2268,13: =
 2268,15: 1
 2268,16: ;
 2269,5: }
 2270,3: }
 
460 NAME TYPE 
 2215,8: size_t
 2215,14: TYPE
 
65 TYPE 
 2215,14: TYPE
 
93 NAME VARIABLE 
 2215,15: i
 2215,16: VARIABLE
 
65 VARIABLE 
 2215,16: VARIABLE
 
59 = c_initializer 
 2215,17: =
 2215,19: 1
 
108 CONSTANT 
 2215,19: 1
 
60 ; 
 2215,20: ;
 
488 NAME VARIABLE 
 2215,22: i
 2215,23: VARIABLE
 
179 VARIABLE 
 2215,23: VARIABLE
 
154 < 
 2215,24: <
 
252 NAME VARIABLE 
 2215,26: argc
 2215,30: VARIABLE
 
179 VARIABLE 
 2215,30: VARIABLE
 
504 ; option_expression ) scoped_statement 
 2215,30: ;
 2215,32: ++
 2215,34: i
 2215,35: VARIABLE
 2215,35: )
 2216,3: {
 2217,5: float
 2217,11: number
 2217,17: VARIABLE
 2217,18: =
 2217,20: atof
 2217,24: VARIABLE
 2217,24: (
 2217,25: argv
 2217,29: VARIABLE
 2217,29: [
 2217,30: i
 2217,31: VARIABLE
 2217,31: ]
 2217,32: )
 2217,33: ;
 2219,5: if
 2219,8: (
 2219,9: number
 2219,15: VARIABLE
 2219,16: ||
 2219,19: strcmp
 2219,25: VARIABLE
 2219,25: (
 2219,26: argv
 2219,30: VARIABLE
 2219,30: [
 2219,31: i
 2219,32: VARIABLE
 2219,32: ]
 2219,33: ,
 2219,35: "
 2219,38: )
 2219,40: ==
 2219,43: 0
 2219,44: )
 2220,5: {
 2221,7: push
 2221,11: VARIABLE
 2221,11: (
 2221,12: number
 2221,18: VARIABLE
 2221,18: )
 2221,19: ;
 2222,5: }
 2223,5: else
 2223,10: if
 2223,13: (
 2223,14: strlen
 2223,20: VARIABLE
 2223,20: (
 2223,21: argv
 2223,25: VARIABLE
 2223,25: [
 2223,26: i
 2223,27: VARIABLE
 2223,27: ]
 2223,28: )
 2223,30: ==
 2223,33: 1
 2223,34: )
 2224,5: {
 2225,7: if
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 2265,5: }
 2266,5: else
 2267,5: {
 2268,7: Error
 2268,12: VARIABLE
 2268,13: =
 2268,15: 1
 2268,16: ;
 2269,5: }
 2270,3: }
 
516 ++ unary_expression 
 2215,32: ++
 2215,34: i
 2215,35: VARIABLE
 
168 NAME VARIABLE 
 2215,34: i
 2215,35: VARIABLE
 
179 VARIABLE 
 2215,35: VARIABLE
 
520 ) scoped_statement 
 2215,35: )
 2216,3: {
 2217,5: float
 2217,11: number
 2217,17: VARIABLE
 2217,18: =
 2217,20: atof
 2217,24: VARIABLE
 2217,24: (
 2217,25: argv
 2217,29: VARIABLE
 2217,29: [
 2217,30: i
 2217,31: VARIABLE
 2217,31: ]
 2217,32: )
 2217,33: ;
 2219,5: if
 2219,8: (
 2219,9: number
 2219,15: VARIABLE
 2219,16: ||
 2219,19: strcmp
 2219,25: VARIABLE
 2219,25: (
 2219,26: argv
 2219,30: VARIABLE
 2219,30: [
 2219,31: i
 2219,32: VARIABLE
 2219,32: ]
 2219,33: ,
 2219,35: "
 2219,38: )
 2219,40: ==
 2219,43: 0
 2219,44: )
 2220,5: {
 2221,7: push
 2221,11: VARIABLE
 2221,11: (
 2221,12: number
 2221,18: VARIABLE
 2221,18: )
 2221,19: ;
 2222,5: }
 2223,5: else
 2223,10: if
 2223,13: (
 2223,14: strlen
 2223,20: VARIABLE
 2223,20: (
 2223,21: argv
 2223,25: VARIABLE
 2223,25: [
 2223,26: i
 2223,27: VARIABLE
 2223,27: ]
 2223,28: )
 2223,30: ==
 2223,33: 1
 2223,34: )
 2224,5: {
 2225,7: if
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 2265,5: }
 2266,5: else
 2267,5: {
 2268,7: Error
 2268,12: VARIABLE
 2268,13: =
 2268,15: 1
 2268,16: ;
 2269,5: }
 2270,3: }
 
320 { option_block_item_list } 
 2216,3: {
 2217,5: float
 2217,11: number
 2217,17: VARIABLE
 2217,18: =
 2217,20: atof
 2217,24: VARIABLE
 2217,24: (
 2217,25: argv
 2217,29: VARIABLE
 2217,29: [
 2217,30: i
 2217,31: VARIABLE
 2217,31: ]
 2217,32: )
 2217,33: ;
 2219,5: if
 2219,8: (
 2219,9: number
 2219,15: VARIABLE
 2219,16: ||
 2219,19: strcmp
 2219,25: VARIABLE
 2219,25: (
 2219,26: argv
 2219,30: VARIABLE
 2219,30: [
 2219,31: i
 2219,32: VARIABLE
 2219,32: ]
 2219,33: ,
 2219,35: "
 2219,38: )
 2219,40: ==
 2219,43: 0
 2219,44: )
 2220,5: {
 2221,7: push
 2221,11: VARIABLE
 2221,11: (
 2221,12: number
 2221,18: VARIABLE
 2221,18: )
 2221,19: ;
 2222,5: }
 2223,5: else
 2223,10: if
 2223,13: (
 2223,14: strlen
 2223,20: VARIABLE
 2223,20: (
 2223,21: argv
 2223,25: VARIABLE
 2223,25: [
 2223,26: i
 2223,27: VARIABLE
 2223,27: ]
 2223,28: )
 2223,30: ==
 2223,33: 1
 2223,34: )
 2224,5: {
 2225,7: if
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 2265,5: }
 2266,5: else
 2267,5: {
 2268,7: Error
 2268,12: VARIABLE
 2268,13: =
 2268,15: 1
 2268,16: ;
 2269,5: }
 2270,3: }
 
201 float 
 2217,5: float
 
93 NAME VARIABLE 
 2217,11: number
 2217,17: VARIABLE
 
65 VARIABLE 
 2217,17: VARIABLE
 
59 = c_initializer 
 2217,18: =
 2217,20: atof
 2217,24: VARIABLE
 2217,24: (
 2217,25: argv
 2217,29: VARIABLE
 2217,29: [
 2217,30: i
 2217,31: VARIABLE
 2217,31: ]
 2217,32: )
 
108 NAME VARIABLE 
 2217,20: atof
 2217,24: VARIABLE
 
179 VARIABLE 
 2217,24: VARIABLE
 
147 ( option_argument_expression_list ) 
 2217,24: (
 2217,25: argv
 2217,29: VARIABLE
 2217,29: [
 2217,30: i
 2217,31: VARIABLE
 2217,31: ]
 2217,32: )
 
235 NAME VARIABLE 
 2217,25: argv
 2217,29: VARIABLE
 
179 VARIABLE 
 2217,29: VARIABLE
 
147 [ expression ] 
 2217,29: [
 2217,30: i
 2217,31: VARIABLE
 2217,31: ]
 
236 NAME VARIABLE 
 2217,30: i
 2217,31: VARIABLE
 
179 VARIABLE 
 2217,31: VARIABLE
 
353 ] 
 2217,31: ]
 
351 ) 
 2217,32: )
 
60 ; 
 2217,33: ;
 
320 if ( expression ) scoped_statement else scoped_statement 
 2219,5: if
 2219,8: (
 2219,9: number
 2219,15: VARIABLE
 2219,16: ||
 2219,19: strcmp
 2219,25: VARIABLE
 2219,25: (
 2219,26: argv
 2219,30: VARIABLE
 2219,30: [
 2219,31: i
 2219,32: VARIABLE
 2219,32: ]
 2219,33: ,
 2219,35: "
 2219,38: )
 2219,40: ==
 2219,43: 0
 2219,44: )
 2220,5: {
 2221,7: push
 2221,11: VARIABLE
 2221,11: (
 2221,12: number
 2221,18: VARIABLE
 2221,18: )
 2221,19: ;
 2222,5: }
 2223,5: else
 2223,10: if
 2223,13: (
 2223,14: strlen
 2223,20: VARIABLE
 2223,20: (
 2223,21: argv
 2223,25: VARIABLE
 2223,25: [
 2223,26: i
 2223,27: VARIABLE
 2223,27: ]
 2223,28: )
 2223,30: ==
 2223,33: 1
 2223,34: )
 2224,5: {
 2225,7: if
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 2265,5: }
 2266,5: else
 2267,5: {
 2268,7: Error
 2268,12: VARIABLE
 2268,13: =
 2268,15: 1
 2268,16: ;
 2269,5: }
 
404 ( expression ) scoped_statement else scoped_statement 
 2219,8: (
 2219,9: number
 2219,15: VARIABLE
 2219,16: ||
 2219,19: strcmp
 2219,25: VARIABLE
 2219,25: (
 2219,26: argv
 2219,30: VARIABLE
 2219,30: [
 2219,31: i
 2219,32: VARIABLE
 2219,32: ]
 2219,33: ,
 2219,35: "
 2219,38: )
 2219,40: ==
 2219,43: 0
 2219,44: )
 2220,5: {
 2221,7: push
 2221,11: VARIABLE
 2221,11: (
 2221,12: number
 2221,18: VARIABLE
 2221,18: )
 2221,19: ;
 2222,5: }
 2223,5: else
 2223,10: if
 2223,13: (
 2223,14: strlen
 2223,20: VARIABLE
 2223,20: (
 2223,21: argv
 2223,25: VARIABLE
 2223,25: [
 2223,26: i
 2223,27: VARIABLE
 2223,27: ]
 2223,28: )
 2223,30: ==
 2223,33: 1
 2223,34: )
 2224,5: {
 2225,7: if
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 2265,5: }
 2266,5: else
 2267,5: {
 2268,7: Error
 2268,12: VARIABLE
 2268,13: =
 2268,15: 1
 2268,16: ;
 2269,5: }
 
455 NAME VARIABLE 
 2219,9: number
 2219,15: VARIABLE
 
179 VARIABLE 
 2219,15: VARIABLE
 
160 || logical_and_expression 
 2219,16: ||
 2219,19: strcmp
 2219,25: VARIABLE
 2219,25: (
 2219,26: argv
 2219,30: VARIABLE
 2219,30: [
 2219,31: i
 2219,32: VARIABLE
 2219,32: ]
 2219,33: ,
 2219,35: "
 2219,38: )
 2219,40: ==
 2219,43: 0
 
264 NAME VARIABLE 
 2219,19: strcmp
 2219,25: VARIABLE
 
179 VARIABLE 
 2219,25: VARIABLE
 
147 ( option_argument_expression_list ) 
 2219,25: (
 2219,26: argv
 2219,30: VARIABLE
 2219,30: [
 2219,31: i
 2219,32: VARIABLE
 2219,32: ]
 2219,33: ,
 2219,35: "
 2219,38: )
 
235 NAME VARIABLE 
 2219,26: argv
 2219,30: VARIABLE
 
179 VARIABLE 
 2219,30: VARIABLE
 
147 [ expression ] 
 2219,30: [
 2219,31: i
 2219,32: VARIABLE
 2219,32: ]
 
236 NAME VARIABLE 
 2219,31: i
 2219,32: VARIABLE
 
179 VARIABLE 
 2219,32: VARIABLE
 
353 ] 
 2219,32: ]
 
352 , assignment_expression 
 2219,33: ,
 2219,35: "
 
429 STRING_LITERAL 
 2219,35: "
 
351 ) 
 2219,38: )
 
155 == 
 2219,40: ==
 
257 CONSTANT 
 2219,43: 0
 
483 ) scoped_statement else scoped_statement 
 2219,44: )
 2220,5: {
 2221,7: push
 2221,11: VARIABLE
 2221,11: (
 2221,12: number
 2221,18: VARIABLE
 2221,18: )
 2221,19: ;
 2222,5: }
 2223,5: else
 2223,10: if
 2223,13: (
 2223,14: strlen
 2223,20: VARIABLE
 2223,20: (
 2223,21: argv
 2223,25: VARIABLE
 2223,25: [
 2223,26: i
 2223,27: VARIABLE
 2223,27: ]
 2223,28: )
 2223,30: ==
 2223,33: 1
 2223,34: )
 2224,5: {
 2225,7: if
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 2265,5: }
 2266,5: else
 2267,5: {
 2268,7: Error
 2268,12: VARIABLE
 2268,13: =
 2268,15: 1
 2268,16: ;
 2269,5: }
 
320 { option_block_item_list } 
 2220,5: {
 2221,7: push
 2221,11: VARIABLE
 2221,11: (
 2221,12: number
 2221,18: VARIABLE
 2221,18: )
 2221,19: ;
 2222,5: }
 
201 NAME VARIABLE 
 2221,7: push
 2221,11: VARIABLE
 
65 VARIABLE 
 2221,11: VARIABLE
 
147 ( option_argument_expression_list ) 
 2221,11: (
 2221,12: number
 2221,18: VARIABLE
 2221,18: )
 
235 NAME VARIABLE 
 2221,12: number
 2221,18: VARIABLE
 
179 VARIABLE 
 2221,18: VARIABLE
 
351 ) 
 2221,18: )
 
331 ; 
 2221,19: ;
 
201 } 
 2222,5: }
 
512 else scoped_statement 
 2223,5: else
 2223,10: if
 2223,13: (
 2223,14: strlen
 2223,20: VARIABLE
 2223,20: (
 2223,21: argv
 2223,25: VARIABLE
 2223,25: [
 2223,26: i
 2223,27: VARIABLE
 2223,27: ]
 2223,28: )
 2223,30: ==
 2223,33: 1
 2223,34: )
 2224,5: {
 2225,7: if
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 2265,5: }
 2266,5: else
 2267,5: {
 2268,7: Error
 2268,12: VARIABLE
 2268,13: =
 2268,15: 1
 2268,16: ;
 2269,5: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 2223,10: if
 2223,13: (
 2223,14: strlen
 2223,20: VARIABLE
 2223,20: (
 2223,21: argv
 2223,25: VARIABLE
 2223,25: [
 2223,26: i
 2223,27: VARIABLE
 2223,27: ]
 2223,28: )
 2223,30: ==
 2223,33: 1
 2223,34: )
 2224,5: {
 2225,7: if
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 2265,5: }
 2266,5: else
 2267,5: {
 2268,7: Error
 2268,12: VARIABLE
 2268,13: =
 2268,15: 1
 2268,16: ;
 2269,5: }
 
404 ( expression ) scoped_statement else scoped_statement 
 2223,13: (
 2223,14: strlen
 2223,20: VARIABLE
 2223,20: (
 2223,21: argv
 2223,25: VARIABLE
 2223,25: [
 2223,26: i
 2223,27: VARIABLE
 2223,27: ]
 2223,28: )
 2223,30: ==
 2223,33: 1
 2223,34: )
 2224,5: {
 2225,7: if
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 2265,5: }
 2266,5: else
 2267,5: {
 2268,7: Error
 2268,12: VARIABLE
 2268,13: =
 2268,15: 1
 2268,16: ;
 2269,5: }
 
455 NAME VARIABLE 
 2223,14: strlen
 2223,20: VARIABLE
 
179 VARIABLE 
 2223,20: VARIABLE
 
147 ( option_argument_expression_list ) 
 2223,20: (
 2223,21: argv
 2223,25: VARIABLE
 2223,25: [
 2223,26: i
 2223,27: VARIABLE
 2223,27: ]
 2223,28: )
 
235 NAME VARIABLE 
 2223,21: argv
 2223,25: VARIABLE
 
179 VARIABLE 
 2223,25: VARIABLE
 
147 [ expression ] 
 2223,25: [
 2223,26: i
 2223,27: VARIABLE
 2223,27: ]
 
236 NAME VARIABLE 
 2223,26: i
 2223,27: VARIABLE
 
179 VARIABLE 
 2223,27: VARIABLE
 
353 ] 
 2223,27: ]
 
351 ) 
 2223,28: )
 
155 == 
 2223,30: ==
 
257 CONSTANT 
 2223,33: 1
 
483 ) scoped_statement else scoped_statement 
 2223,34: )
 2224,5: {
 2225,7: if
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 2265,5: }
 2266,5: else
 2267,5: {
 2268,7: Error
 2268,12: VARIABLE
 2268,13: =
 2268,15: 1
 2268,16: ;
 2269,5: }
 
320 { option_block_item_list } 
 2224,5: {
 2225,7: if
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 2265,5: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 2225,7: if
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 
404 ( expression ) scoped_statement else scoped_statement 
 2225,10: (
 2225,11: stack_pointer
 2225,24: VARIABLE
 2225,25: >=
 2225,28: 2
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 
455 NAME VARIABLE 
 2225,11: stack_pointer
 2225,24: VARIABLE
 
179 VARIABLE 
 2225,24: VARIABLE
 
154 >= 
 2225,25: >=
 
252 CONSTANT 
 2225,28: 2
 
159 && inclusive_or_expression 
 2225,30: &&
 2225,33: stack_pointer
 2225,46: VARIABLE
 2225,47: <
 2225,49: 15
 
263 NAME VARIABLE 
 2225,33: stack_pointer
 2225,46: VARIABLE
 
179 VARIABLE 
 2225,46: VARIABLE
 
154 < 
 2225,47: <
 
252 CONSTANT 
 2225,49: 15
 
483 ) scoped_statement else scoped_statement 
 2225,51: )
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 
320 { option_block_item_list } 
 2226,7: {
 2227,9: float
 2227,15: number2
 2227,22: VARIABLE
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 2227,30: ;
 2228,9: float
 2228,15: number1
 2228,22: VARIABLE
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 2228,30: ;
 2230,9: char
 2230,14: op
 2230,16: VARIABLE
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 2230,27: ;
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 2260,7: }
 
201 float 
 2227,9: float
 
93 NAME VARIABLE 
 2227,15: number2
 2227,22: VARIABLE
 
65 VARIABLE 
 2227,22: VARIABLE
 
59 = c_initializer 
 2227,23: =
 2227,25: pop
 2227,28: VARIABLE
 2227,28: (
 2227,29: )
 
108 NAME VARIABLE 
 2227,25: pop
 2227,28: VARIABLE
 
179 VARIABLE 
 2227,28: VARIABLE
 
147 ( option_argument_expression_list ) 
 2227,28: (
 2227,29: )
 
351 ) 
 2227,29: )
 
60 ; 
 2227,30: ;
 
201 float 
 2228,9: float
 
93 NAME VARIABLE 
 2228,15: number1
 2228,22: VARIABLE
 
65 VARIABLE 
 2228,22: VARIABLE
 
59 = c_initializer 
 2228,23: =
 2228,25: pop
 2228,28: VARIABLE
 2228,28: (
 2228,29: )
 
108 NAME VARIABLE 
 2228,25: pop
 2228,28: VARIABLE
 
179 VARIABLE 
 2228,28: VARIABLE
 
147 ( option_argument_expression_list ) 
 2228,28: (
 2228,29: )
 
351 ) 
 2228,29: )
 
60 ; 
 2228,30: ;
 
201 char 
 2230,9: char
 
93 NAME VARIABLE 
 2230,14: op
 2230,16: VARIABLE
 
65 VARIABLE 
 2230,16: VARIABLE
 
59 = c_initializer 
 2230,17: =
 2230,19: *
 2230,20: argv
 2230,24: VARIABLE
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 
108 * 
 2230,19: *
 
149 NAME VARIABLE 
 2230,20: argv
 2230,24: VARIABLE
 
179 VARIABLE 
 2230,24: VARIABLE
 
147 [ expression ] 
 2230,24: [
 2230,25: i
 2230,26: VARIABLE
 2230,26: ]
 
236 NAME VARIABLE 
 2230,25: i
 2230,26: VARIABLE
 
179 VARIABLE 
 2230,26: VARIABLE
 
353 ] 
 2230,26: ]
 
60 ; 
 2230,27: ;
 
320 switch ( expression ) scoped_statement 
 2231,9: switch
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 
405 ( expression ) scoped_statement 
 2231,16: (
 2231,17: op
 2231,19: VARIABLE
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 
456 NAME VARIABLE 
 2231,17: op
 2231,19: VARIABLE
 
179 VARIABLE 
 2231,19: VARIABLE
 
484 ) scoped_statement 
 2231,19: )
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 
320 { option_block_item_list } 
 2232,9: {
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 2235,11: break
 2235,16: ;
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 2239,11: break
 2239,16: ;
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 2243,11: break
 2243,16: ;
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 2254,11: break
 2254,16: ;
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 2258,11: break
 2258,16: ;
 2259,9: }
 
201 case constant_expression : statement 
 2233,9: case
 2233,14: '+'
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 
334 CONSTANT 
 2233,14: '+'
 
411 : statement 
 2233,17: :
 2234,11: push
 2234,15: VARIABLE
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 2234,34: ;
 
462 NAME VARIABLE 
 2234,11: push
 2234,15: VARIABLE
 
65 VARIABLE 
 2234,15: VARIABLE
 
147 ( option_argument_expression_list ) 
 2234,15: (
 2234,16: number1
 2234,23: VARIABLE
 2234,24: +
 2234,26: number2
 2234,33: VARIABLE
 2234,33: )
 
235 NAME VARIABLE 
 2234,16: number1
 2234,23: VARIABLE
 
179 VARIABLE 
 2234,23: VARIABLE
 
152 + 
 2234,24: +
 
246 NAME VARIABLE 
 2234,26: number2
 2234,33: VARIABLE
 
179 VARIABLE 
 2234,33: VARIABLE
 
351 ) 
 2234,33: )
 
331 ; 
 2234,34: ;
 
201 break ; 
 2235,11: break
 2235,16: ;
 
337 ; 
 2235,16: ;
 
201 case constant_expression : statement 
 2237,9: case
 2237,14: '-'
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 
334 CONSTANT 
 2237,14: '-'
 
411 : statement 
 2237,17: :
 2238,11: push
 2238,15: VARIABLE
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 2238,34: ;
 
462 NAME VARIABLE 
 2238,11: push
 2238,15: VARIABLE
 
65 VARIABLE 
 2238,15: VARIABLE
 
147 ( option_argument_expression_list ) 
 2238,15: (
 2238,16: number1
 2238,23: VARIABLE
 2238,24: -
 2238,26: number2
 2238,33: VARIABLE
 2238,33: )
 
235 NAME VARIABLE 
 2238,16: number1
 2238,23: VARIABLE
 
179 VARIABLE 
 2238,23: VARIABLE
 
152 - 
 2238,24: -
 
246 NAME VARIABLE 
 2238,26: number2
 2238,33: VARIABLE
 
179 VARIABLE 
 2238,33: VARIABLE
 
351 ) 
 2238,33: )
 
331 ; 
 2238,34: ;
 
201 break ; 
 2239,11: break
 2239,16: ;
 
337 ; 
 2239,16: ;
 
201 case constant_expression : statement 
 2241,9: case
 2241,14: '*'
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 
334 CONSTANT 
 2241,14: '*'
 
411 : statement 
 2241,17: :
 2242,11: push
 2242,15: VARIABLE
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 2242,34: ;
 
462 NAME VARIABLE 
 2242,11: push
 2242,15: VARIABLE
 
65 VARIABLE 
 2242,15: VARIABLE
 
147 ( option_argument_expression_list ) 
 2242,15: (
 2242,16: number1
 2242,23: VARIABLE
 2242,24: *
 2242,26: number2
 2242,33: VARIABLE
 2242,33: )
 
235 NAME VARIABLE 
 2242,16: number1
 2242,23: VARIABLE
 
179 VARIABLE 
 2242,23: VARIABLE
 
151 * 
 2242,24: *
 
242 NAME VARIABLE 
 2242,26: number2
 2242,33: VARIABLE
 
179 VARIABLE 
 2242,33: VARIABLE
 
351 ) 
 2242,33: )
 
331 ; 
 2242,34: ;
 
201 break ; 
 2243,11: break
 2243,16: ;
 
337 ; 
 2243,16: ;
 
201 case constant_expression : statement 
 2245,9: case
 2245,14: '/'
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 
334 CONSTANT 
 2245,14: '/'
 
411 : statement 
 2245,17: :
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 2246,11: if
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 
404 ( expression ) scoped_statement else scoped_statement 
 2246,14: (
 2246,15: number2
 2246,22: VARIABLE
 2246,23: ==
 2246,26: 0
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 
455 NAME VARIABLE 
 2246,15: number2
 2246,22: VARIABLE
 
179 VARIABLE 
 2246,22: VARIABLE
 
155 == 
 2246,23: ==
 
257 CONSTANT 
 2246,26: 0
 
483 ) scoped_statement else scoped_statement 
 2246,27: )
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 
320 { option_block_item_list } 
 2247,11: {
 2248,13: Error
 2248,18: VARIABLE
 2248,19: =
 2248,21: 4
 2248,22: ;
 2249,11: }
 
201 NAME VARIABLE 
 2248,13: Error
 2248,18: VARIABLE
 
65 VARIABLE 
 2248,18: VARIABLE
 
181 = 
 2248,19: =
 
279 CONSTANT 
 2248,21: 4
 
331 ; 
 2248,22: ;
 
201 } 
 2249,11: }
 
512 else scoped_statement 
 2250,11: else
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 
320 { option_block_item_list } 
 2251,11: {
 2252,13: push
 2252,17: VARIABLE
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 2252,36: ;
 2253,11: }
 
201 NAME VARIABLE 
 2252,13: push
 2252,17: VARIABLE
 
65 VARIABLE 
 2252,17: VARIABLE
 
147 ( option_argument_expression_list ) 
 2252,17: (
 2252,18: number1
 2252,25: VARIABLE
 2252,26: /
 2252,28: number2
 2252,35: VARIABLE
 2252,35: )
 
235 NAME VARIABLE 
 2252,18: number1
 2252,25: VARIABLE
 
179 VARIABLE 
 2252,25: VARIABLE
 
151 / 
 2252,26: /
 
242 NAME VARIABLE 
 2252,28: number2
 2252,35: VARIABLE
 
179 VARIABLE 
 2252,35: VARIABLE
 
351 ) 
 2252,35: )
 
331 ; 
 2252,36: ;
 
201 } 
 2253,11: }
 
201 break ; 
 2254,11: break
 2254,16: ;
 
337 ; 
 2254,16: ;
 
201 default : statement 
 2256,9: default
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 
332 : statement 
 2256,16: :
 2257,11: Error
 2257,16: VARIABLE
 2257,17: =
 2257,19: 3
 2257,20: ;
 
410 NAME VARIABLE 
 2257,11: Error
 2257,16: VARIABLE
 
65 VARIABLE 
 2257,16: VARIABLE
 
181 = 
 2257,17: =
 
279 CONSTANT 
 2257,19: 3
 
331 ; 
 2257,20: ;
 
201 break ; 
 2258,11: break
 2258,16: ;
 
337 ; 
 2258,16: ;
 
201 } 
 2259,9: }
 
201 } 
 2260,7: }
 
512 else scoped_statement 
 2261,7: else
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 
320 { option_block_item_list } 
 2262,7: {
 2263,9: Error
 2263,14: VARIABLE
 2263,15: =
 2263,17: 2
 2263,18: ;
 2264,7: }
 
201 NAME VARIABLE 
 2263,9: Error
 2263,14: VARIABLE
 
65 VARIABLE 
 2263,14: VARIABLE
 
181 = 
 2263,15: =
 
279 CONSTANT 
 2263,17: 2
 
331 ; 
 2263,18: ;
 
201 } 
 2264,7: }
 
201 } 
 2265,5: }
 
512 else scoped_statement 
 2266,5: else
 2267,5: {
 2268,7: Error
 2268,12: VARIABLE
 2268,13: =
 2268,15: 1
 2268,16: ;
 2269,5: }
 
320 { option_block_item_list } 
 2267,5: {
 2268,7: Error
 2268,12: VARIABLE
 2268,13: =
 2268,15: 1
 2268,16: ;
 2269,5: }
 
201 NAME VARIABLE 
 2268,7: Error
 2268,12: VARIABLE
 
65 VARIABLE 
 2268,12: VARIABLE
 
181 = 
 2268,13: =
 
279 CONSTANT 
 2268,15: 1
 
331 ; 
 2268,16: ;
 
201 } 
 2269,5: }
 
201 } 
 2270,3: }
 
320 if ( expression ) scoped_statement 
 2272,3: if
 2272,6: (
 2272,7: Error
 2272,12: VARIABLE
 2272,12: )
 2273,3: {
 2274,5: switch
 2274,12: (
 2274,13: Error
 2274,18: VARIABLE
 2274,18: )
 2275,5: {
 2276,5: case
 2276,10: 1
 2276,11: :
 2277,7: printf
 2277,13: VARIABLE
 2277,13: (
 2277,14: "
 2277,121: )
 2277,122: ;
 2278,7: break
 2278,12: ;
 2280,5: case
 2280,10: 2
 2280,11: :
 2281,7: printf
 2281,13: VARIABLE
 2281,13: (
 2281,14: "
 2281,55: )
 2281,56: ;
 2282,7: break
 2282,12: ;
 2284,5: case
 2284,10: 3
 2284,11: :
 2285,7: printf
 2285,13: VARIABLE
 2285,13: (
 2285,14: "
 2285,113: )
 2285,114: ;
 2286,7: break
 2286,12: ;
 2288,5: case
 2288,10: 4
 2288,11: :
 2289,7: printf
 2289,13: VARIABLE
 2289,13: (
 2289,14: "
 2289,48: )
 2289,49: ;
 2290,7: break
 2290,12: ;
 2292,5: default
 2292,12: :
 2293,7: break
 2293,12: ;
 2294,5: }
 2296,5: return
 2298,11: 1
 2300,23: ;
 2301,3: }
 
404 ( expression ) scoped_statement 
 2272,6: (
 2272,7: Error
 2272,12: VARIABLE
 2272,12: )
 2273,3: {
 2274,5: switch
 2274,12: (
 2274,13: Error
 2274,18: VARIABLE
 2274,18: )
 2275,5: {
 2276,5: case
 2276,10: 1
 2276,11: :
 2277,7: printf
 2277,13: VARIABLE
 2277,13: (
 2277,14: "
 2277,121: )
 2277,122: ;
 2278,7: break
 2278,12: ;
 2280,5: case
 2280,10: 2
 2280,11: :
 2281,7: printf
 2281,13: VARIABLE
 2281,13: (
 2281,14: "
 2281,55: )
 2281,56: ;
 2282,7: break
 2282,12: ;
 2284,5: case
 2284,10: 3
 2284,11: :
 2285,7: printf
 2285,13: VARIABLE
 2285,13: (
 2285,14: "
 2285,113: )
 2285,114: ;
 2286,7: break
 2286,12: ;
 2288,5: case
 2288,10: 4
 2288,11: :
 2289,7: printf
 2289,13: VARIABLE
 2289,13: (
 2289,14: "
 2289,48: )
 2289,49: ;
 2290,7: break
 2290,12: ;
 2292,5: default
 2292,12: :
 2293,7: break
 2293,12: ;
 2294,5: }
 2296,5: return
 2298,11: 1
 2300,23: ;
 2301,3: }
 
455 NAME VARIABLE 
 2272,7: Error
 2272,12: VARIABLE
 
179 VARIABLE 
 2272,12: VARIABLE
 
483 ) scoped_statement 
 2272,12: )
 2273,3: {
 2274,5: switch
 2274,12: (
 2274,13: Error
 2274,18: VARIABLE
 2274,18: )
 2275,5: {
 2276,5: case
 2276,10: 1
 2276,11: :
 2277,7: printf
 2277,13: VARIABLE
 2277,13: (
 2277,14: "
 2277,121: )
 2277,122: ;
 2278,7: break
 2278,12: ;
 2280,5: case
 2280,10: 2
 2280,11: :
 2281,7: printf
 2281,13: VARIABLE
 2281,13: (
 2281,14: "
 2281,55: )
 2281,56: ;
 2282,7: break
 2282,12: ;
 2284,5: case
 2284,10: 3
 2284,11: :
 2285,7: printf
 2285,13: VARIABLE
 2285,13: (
 2285,14: "
 2285,113: )
 2285,114: ;
 2286,7: break
 2286,12: ;
 2288,5: case
 2288,10: 4
 2288,11: :
 2289,7: printf
 2289,13: VARIABLE
 2289,13: (
 2289,14: "
 2289,48: )
 2289,49: ;
 2290,7: break
 2290,12: ;
 2292,5: default
 2292,12: :
 2293,7: break
 2293,12: ;
 2294,5: }
 2296,5: return
 2298,11: 1
 2300,23: ;
 2301,3: }
 
320 { option_block_item_list } 
 2273,3: {
 2274,5: switch
 2274,12: (
 2274,13: Error
 2274,18: VARIABLE
 2274,18: )
 2275,5: {
 2276,5: case
 2276,10: 1
 2276,11: :
 2277,7: printf
 2277,13: VARIABLE
 2277,13: (
 2277,14: "
 2277,121: )
 2277,122: ;
 2278,7: break
 2278,12: ;
 2280,5: case
 2280,10: 2
 2280,11: :
 2281,7: printf
 2281,13: VARIABLE
 2281,13: (
 2281,14: "
 2281,55: )
 2281,56: ;
 2282,7: break
 2282,12: ;
 2284,5: case
 2284,10: 3
 2284,11: :
 2285,7: printf
 2285,13: VARIABLE
 2285,13: (
 2285,14: "
 2285,113: )
 2285,114: ;
 2286,7: break
 2286,12: ;
 2288,5: case
 2288,10: 4
 2288,11: :
 2289,7: printf
 2289,13: VARIABLE
 2289,13: (
 2289,14: "
 2289,48: )
 2289,49: ;
 2290,7: break
 2290,12: ;
 2292,5: default
 2292,12: :
 2293,7: break
 2293,12: ;
 2294,5: }
 2296,5: return
 2298,11: 1
 2300,23: ;
 2301,3: }
 
320 switch ( expression ) scoped_statement 
 2274,5: switch
 2274,12: (
 2274,13: Error
 2274,18: VARIABLE
 2274,18: )
 2275,5: {
 2276,5: case
 2276,10: 1
 2276,11: :
 2277,7: printf
 2277,13: VARIABLE
 2277,13: (
 2277,14: "
 2277,121: )
 2277,122: ;
 2278,7: break
 2278,12: ;
 2280,5: case
 2280,10: 2
 2280,11: :
 2281,7: printf
 2281,13: VARIABLE
 2281,13: (
 2281,14: "
 2281,55: )
 2281,56: ;
 2282,7: break
 2282,12: ;
 2284,5: case
 2284,10: 3
 2284,11: :
 2285,7: printf
 2285,13: VARIABLE
 2285,13: (
 2285,14: "
 2285,113: )
 2285,114: ;
 2286,7: break
 2286,12: ;
 2288,5: case
 2288,10: 4
 2288,11: :
 2289,7: printf
 2289,13: VARIABLE
 2289,13: (
 2289,14: "
 2289,48: )
 2289,49: ;
 2290,7: break
 2290,12: ;
 2292,5: default
 2292,12: :
 2293,7: break
 2293,12: ;
 2294,5: }
 
405 ( expression ) scoped_statement 
 2274,12: (
 2274,13: Error
 2274,18: VARIABLE
 2274,18: )
 2275,5: {
 2276,5: case
 2276,10: 1
 2276,11: :
 2277,7: printf
 2277,13: VARIABLE
 2277,13: (
 2277,14: "
 2277,121: )
 2277,122: ;
 2278,7: break
 2278,12: ;
 2280,5: case
 2280,10: 2
 2280,11: :
 2281,7: printf
 2281,13: VARIABLE
 2281,13: (
 2281,14: "
 2281,55: )
 2281,56: ;
 2282,7: break
 2282,12: ;
 2284,5: case
 2284,10: 3
 2284,11: :
 2285,7: printf
 2285,13: VARIABLE
 2285,13: (
 2285,14: "
 2285,113: )
 2285,114: ;
 2286,7: break
 2286,12: ;
 2288,5: case
 2288,10: 4
 2288,11: :
 2289,7: printf
 2289,13: VARIABLE
 2289,13: (
 2289,14: "
 2289,48: )
 2289,49: ;
 2290,7: break
 2290,12: ;
 2292,5: default
 2292,12: :
 2293,7: break
 2293,12: ;
 2294,5: }
 
456 NAME VARIABLE 
 2274,13: Error
 2274,18: VARIABLE
 
179 VARIABLE 
 2274,18: VARIABLE
 
484 ) scoped_statement 
 2274,18: )
 2275,5: {
 2276,5: case
 2276,10: 1
 2276,11: :
 2277,7: printf
 2277,13: VARIABLE
 2277,13: (
 2277,14: "
 2277,121: )
 2277,122: ;
 2278,7: break
 2278,12: ;
 2280,5: case
 2280,10: 2
 2280,11: :
 2281,7: printf
 2281,13: VARIABLE
 2281,13: (
 2281,14: "
 2281,55: )
 2281,56: ;
 2282,7: break
 2282,12: ;
 2284,5: case
 2284,10: 3
 2284,11: :
 2285,7: printf
 2285,13: VARIABLE
 2285,13: (
 2285,14: "
 2285,113: )
 2285,114: ;
 2286,7: break
 2286,12: ;
 2288,5: case
 2288,10: 4
 2288,11: :
 2289,7: printf
 2289,13: VARIABLE
 2289,13: (
 2289,14: "
 2289,48: )
 2289,49: ;
 2290,7: break
 2290,12: ;
 2292,5: default
 2292,12: :
 2293,7: break
 2293,12: ;
 2294,5: }
 
320 { option_block_item_list } 
 2275,5: {
 2276,5: case
 2276,10: 1
 2276,11: :
 2277,7: printf
 2277,13: VARIABLE
 2277,13: (
 2277,14: "
 2277,121: )
 2277,122: ;
 2278,7: break
 2278,12: ;
 2280,5: case
 2280,10: 2
 2280,11: :
 2281,7: printf
 2281,13: VARIABLE
 2281,13: (
 2281,14: "
 2281,55: )
 2281,56: ;
 2282,7: break
 2282,12: ;
 2284,5: case
 2284,10: 3
 2284,11: :
 2285,7: printf
 2285,13: VARIABLE
 2285,13: (
 2285,14: "
 2285,113: )
 2285,114: ;
 2286,7: break
 2286,12: ;
 2288,5: case
 2288,10: 4
 2288,11: :
 2289,7: printf
 2289,13: VARIABLE
 2289,13: (
 2289,14: "
 2289,48: )
 2289,49: ;
 2290,7: break
 2290,12: ;
 2292,5: default
 2292,12: :
 2293,7: break
 2293,12: ;
 2294,5: }
 
201 case constant_expression : statement 
 2276,5: case
 2276,10: 1
 2276,11: :
 2277,7: printf
 2277,13: VARIABLE
 2277,13: (
 2277,14: "
 2277,121: )
 2277,122: ;
 
334 CONSTANT 
 2276,10: 1
 
411 : statement 
 2276,11: :
 2277,7: printf
 2277,13: VARIABLE
 2277,13: (
 2277,14: "
 2277,121: )
 2277,122: ;
 
462 NAME VARIABLE 
 2277,7: printf
 2277,13: VARIABLE
 
65 VARIABLE 
 2277,13: VARIABLE
 
147 ( option_argument_expression_list ) 
 2277,13: (
 2277,14: "
 2277,121: )
 
235 STRING_LITERAL 
 2277,14: "
 
351 ) 
 2277,121: )
 
331 ; 
 2277,122: ;
 
201 break ; 
 2278,7: break
 2278,12: ;
 
337 ; 
 2278,12: ;
 
201 case constant_expression : statement 
 2280,5: case
 2280,10: 2
 2280,11: :
 2281,7: printf
 2281,13: VARIABLE
 2281,13: (
 2281,14: "
 2281,55: )
 2281,56: ;
 
334 CONSTANT 
 2280,10: 2
 
411 : statement 
 2280,11: :
 2281,7: printf
 2281,13: VARIABLE
 2281,13: (
 2281,14: "
 2281,55: )
 2281,56: ;
 
462 NAME VARIABLE 
 2281,7: printf
 2281,13: VARIABLE
 
65 VARIABLE 
 2281,13: VARIABLE
 
147 ( option_argument_expression_list ) 
 2281,13: (
 2281,14: "
 2281,55: )
 
235 STRING_LITERAL 
 2281,14: "
 
351 ) 
 2281,55: )
 
331 ; 
 2281,56: ;
 
201 break ; 
 2282,7: break
 2282,12: ;
 
337 ; 
 2282,12: ;
 
201 case constant_expression : statement 
 2284,5: case
 2284,10: 3
 2284,11: :
 2285,7: printf
 2285,13: VARIABLE
 2285,13: (
 2285,14: "
 2285,113: )
 2285,114: ;
 
334 CONSTANT 
 2284,10: 3
 
411 : statement 
 2284,11: :
 2285,7: printf
 2285,13: VARIABLE
 2285,13: (
 2285,14: "
 2285,113: )
 2285,114: ;
 
462 NAME VARIABLE 
 2285,7: printf
 2285,13: VARIABLE
 
65 VARIABLE 
 2285,13: VARIABLE
 
147 ( option_argument_expression_list ) 
 2285,13: (
 2285,14: "
 2285,113: )
 
235 STRING_LITERAL 
 2285,14: "
 
351 ) 
 2285,113: )
 
331 ; 
 2285,114: ;
 
201 break ; 
 2286,7: break
 2286,12: ;
 
337 ; 
 2286,12: ;
 
201 case constant_expression : statement 
 2288,5: case
 2288,10: 4
 2288,11: :
 2289,7: printf
 2289,13: VARIABLE
 2289,13: (
 2289,14: "
 2289,48: )
 2289,49: ;
 
334 CONSTANT 
 2288,10: 4
 
411 : statement 
 2288,11: :
 2289,7: printf
 2289,13: VARIABLE
 2289,13: (
 2289,14: "
 2289,48: )
 2289,49: ;
 
462 NAME VARIABLE 
 2289,7: printf
 2289,13: VARIABLE
 
65 VARIABLE 
 2289,13: VARIABLE
 
147 ( option_argument_expression_list ) 
 2289,13: (
 2289,14: "
 2289,48: )
 
235 STRING_LITERAL 
 2289,14: "
 
351 ) 
 2289,48: )
 
331 ; 
 2289,49: ;
 
201 break ; 
 2290,7: break
 2290,12: ;
 
337 ; 
 2290,12: ;
 
201 default : statement 
 2292,5: default
 2292,12: :
 2293,7: break
 2293,12: ;
 
332 : statement 
 2292,12: :
 2293,7: break
 2293,12: ;
 
410 break ; 
 2293,7: break
 2293,12: ;
 
337 ; 
 2293,12: ;
 
201 } 
 2294,5: }
 
201 return option_expression ; 
 2296,5: return
 2298,11: 1
 2300,23: ;
 
338 CONSTANT 
 2298,11: 1
 
415 ; 
 2300,23: ;
 
201 } 
 2301,3: }
 
201 NAME VARIABLE 
 2303,3: printf
 2303,9: VARIABLE
 
65 VARIABLE 
 2303,9: VARIABLE
 
147 ( option_argument_expression_list ) 
 2303,9: (
 2303,10: "
 2303,24: ,
 2303,26: pop
 2303,29: VARIABLE
 2303,29: (
 2303,30: )
 2303,31: )
 
235 STRING_LITERAL 
 2303,10: "
 
352 , assignment_expression 
 2303,24: ,
 2303,26: pop
 2303,29: VARIABLE
 2303,29: (
 2303,30: )
 
429 NAME VARIABLE 
 2303,26: pop
 2303,29: VARIABLE
 
179 VARIABLE 
 2303,29: VARIABLE
 
147 ( option_argument_expression_list ) 
 2303,29: (
 2303,30: )
 
351 ) 
 2303,30: )
 
351 ) 
 2303,31: )
 
331 ; 
 2303,32: ;
 
201 return option_expression ; 
 2305,3: return
 2307,9: 0
 2309,21: ;
 
338 CONSTANT 
 2307,9: 0
 
415 ; 
 2309,21: ;
 
201 } 
 2310,1: }
 
23 float 
 2312,1: float
 
5 NAME VARIABLE 
 2312,7: pop
 2312,10: VARIABLE
 
65 VARIABLE 
 2312,10: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2312,10: (
 2312,11: void
 2312,15: )
 
186 void 
 2312,11: void
 
187 ) 
 2312,15: )
 
94 { option_block_item_list } 
 2313,1: {
 2314,3: if
 2314,6: (
 2314,7: stack_pointer
 2314,20: VARIABLE
 2314,21: >
 2314,23: 0
 2314,24: )
 2315,3: {
 2316,5: return
 2316,12: stack
 2316,17: VARIABLE
 2316,17: [
 2316,18: stack_pointer
 2316,31: VARIABLE
 2316,31: --
 2316,33: ]
 2316,34: ;
 2317,3: }
 2319,3: printf
 2319,9: VARIABLE
 2319,9: (
 2319,10: "
 2319,40: )
 2319,41: ;
 2320,3: return
 2320,10: 0
 2320,11: ;
 2321,1: }
 
320 if ( expression ) scoped_statement 
 2314,3: if
 2314,6: (
 2314,7: stack_pointer
 2314,20: VARIABLE
 2314,21: >
 2314,23: 0
 2314,24: )
 2315,3: {
 2316,5: return
 2316,12: stack
 2316,17: VARIABLE
 2316,17: [
 2316,18: stack_pointer
 2316,31: VARIABLE
 2316,31: --
 2316,33: ]
 2316,34: ;
 2317,3: }
 
404 ( expression ) scoped_statement 
 2314,6: (
 2314,7: stack_pointer
 2314,20: VARIABLE
 2314,21: >
 2314,23: 0
 2314,24: )
 2315,3: {
 2316,5: return
 2316,12: stack
 2316,17: VARIABLE
 2316,17: [
 2316,18: stack_pointer
 2316,31: VARIABLE
 2316,31: --
 2316,33: ]
 2316,34: ;
 2317,3: }
 
455 NAME VARIABLE 
 2314,7: stack_pointer
 2314,20: VARIABLE
 
179 VARIABLE 
 2314,20: VARIABLE
 
154 > 
 2314,21: >
 
252 CONSTANT 
 2314,23: 0
 
483 ) scoped_statement 
 2314,24: )
 2315,3: {
 2316,5: return
 2316,12: stack
 2316,17: VARIABLE
 2316,17: [
 2316,18: stack_pointer
 2316,31: VARIABLE
 2316,31: --
 2316,33: ]
 2316,34: ;
 2317,3: }
 
320 { option_block_item_list } 
 2315,3: {
 2316,5: return
 2316,12: stack
 2316,17: VARIABLE
 2316,17: [
 2316,18: stack_pointer
 2316,31: VARIABLE
 2316,31: --
 2316,33: ]
 2316,34: ;
 2317,3: }
 
201 return option_expression ; 
 2316,5: return
 2316,12: stack
 2316,17: VARIABLE
 2316,17: [
 2316,18: stack_pointer
 2316,31: VARIABLE
 2316,31: --
 2316,33: ]
 2316,34: ;
 
338 NAME VARIABLE 
 2316,12: stack
 2316,17: VARIABLE
 
179 VARIABLE 
 2316,17: VARIABLE
 
147 [ expression ] 
 2316,17: [
 2316,18: stack_pointer
 2316,31: VARIABLE
 2316,31: --
 2316,33: ]
 
236 NAME VARIABLE 
 2316,18: stack_pointer
 2316,31: VARIABLE
 
179 VARIABLE 
 2316,31: VARIABLE
 
147 -- 
 2316,31: --
 
353 ] 
 2316,33: ]
 
415 ; 
 2316,34: ;
 
201 } 
 2317,3: }
 
201 NAME VARIABLE 
 2319,3: printf
 2319,9: VARIABLE
 
65 VARIABLE 
 2319,9: VARIABLE
 
147 ( option_argument_expression_list ) 
 2319,9: (
 2319,10: "
 2319,40: )
 
235 STRING_LITERAL 
 2319,10: "
 
351 ) 
 2319,40: )
 
331 ; 
 2319,41: ;
 
201 return option_expression ; 
 2320,3: return
 2320,10: 0
 2320,11: ;
 
338 CONSTANT 
 2320,10: 0
 
415 ; 
 2320,11: ;
 
201 } 
 2321,1: }
 
23 void 
 2323,1: void
 
5 NAME VARIABLE 
 2323,6: push
 2323,10: VARIABLE
 
65 VARIABLE 
 2323,10: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2323,10: (
 2323,11: float
 2323,17: element
 2323,24: VARIABLE
 2323,24: )
 
186 float 
 2323,11: float
 
298 NAME VARIABLE 
 2323,17: element
 2323,24: VARIABLE
 
65 VARIABLE 
 2323,24: VARIABLE
 
187 ) 
 2323,24: )
 
94 { option_block_item_list } 
 2324,1: {
 2325,3: if
 2325,6: (
 2325,7: stack_pointer
 2325,20: VARIABLE
 2325,21: <
 2325,23: 15
 2325,25: )
 2326,3: {
 2327,5: stack
 2327,10: VARIABLE
 2327,10: [
 2327,11: ++
 2327,13: stack_pointer
 2327,26: VARIABLE
 2327,26: ]
 2327,28: =
 2327,30: element
 2327,37: VARIABLE
 2327,37: ;
 2328,3: }
 2329,3: else
 2330,3: {
 2331,5: printf
 2331,11: VARIABLE
 2331,11: (
 2331,12: "
 2331,41: )
 2331,42: ;
 2332,3: }
 2333,1: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 2325,3: if
 2325,6: (
 2325,7: stack_pointer
 2325,20: VARIABLE
 2325,21: <
 2325,23: 15
 2325,25: )
 2326,3: {
 2327,5: stack
 2327,10: VARIABLE
 2327,10: [
 2327,11: ++
 2327,13: stack_pointer
 2327,26: VARIABLE
 2327,26: ]
 2327,28: =
 2327,30: element
 2327,37: VARIABLE
 2327,37: ;
 2328,3: }
 2329,3: else
 2330,3: {
 2331,5: printf
 2331,11: VARIABLE
 2331,11: (
 2331,12: "
 2331,41: )
 2331,42: ;
 2332,3: }
 
404 ( expression ) scoped_statement else scoped_statement 
 2325,6: (
 2325,7: stack_pointer
 2325,20: VARIABLE
 2325,21: <
 2325,23: 15
 2325,25: )
 2326,3: {
 2327,5: stack
 2327,10: VARIABLE
 2327,10: [
 2327,11: ++
 2327,13: stack_pointer
 2327,26: VARIABLE
 2327,26: ]
 2327,28: =
 2327,30: element
 2327,37: VARIABLE
 2327,37: ;
 2328,3: }
 2329,3: else
 2330,3: {
 2331,5: printf
 2331,11: VARIABLE
 2331,11: (
 2331,12: "
 2331,41: )
 2331,42: ;
 2332,3: }
 
455 NAME VARIABLE 
 2325,7: stack_pointer
 2325,20: VARIABLE
 
179 VARIABLE 
 2325,20: VARIABLE
 
154 < 
 2325,21: <
 
252 CONSTANT 
 2325,23: 15
 
483 ) scoped_statement else scoped_statement 
 2325,25: )
 2326,3: {
 2327,5: stack
 2327,10: VARIABLE
 2327,10: [
 2327,11: ++
 2327,13: stack_pointer
 2327,26: VARIABLE
 2327,26: ]
 2327,28: =
 2327,30: element
 2327,37: VARIABLE
 2327,37: ;
 2328,3: }
 2329,3: else
 2330,3: {
 2331,5: printf
 2331,11: VARIABLE
 2331,11: (
 2331,12: "
 2331,41: )
 2331,42: ;
 2332,3: }
 
320 { option_block_item_list } 
 2326,3: {
 2327,5: stack
 2327,10: VARIABLE
 2327,10: [
 2327,11: ++
 2327,13: stack_pointer
 2327,26: VARIABLE
 2327,26: ]
 2327,28: =
 2327,30: element
 2327,37: VARIABLE
 2327,37: ;
 2328,3: }
 
201 NAME VARIABLE 
 2327,5: stack
 2327,10: VARIABLE
 
65 VARIABLE 
 2327,10: VARIABLE
 
147 [ expression ] 
 2327,10: [
 2327,11: ++
 2327,13: stack_pointer
 2327,26: VARIABLE
 2327,26: ]
 
236 ++ unary_expression 
 2327,11: ++
 2327,13: stack_pointer
 2327,26: VARIABLE
 
168 NAME VARIABLE 
 2327,13: stack_pointer
 2327,26: VARIABLE
 
179 VARIABLE 
 2327,26: VARIABLE
 
353 ] 
 2327,26: ]
 
181 = 
 2327,28: =
 
279 NAME VARIABLE 
 2327,30: element
 2327,37: VARIABLE
 
179 VARIABLE 
 2327,37: VARIABLE
 
331 ; 
 2327,37: ;
 
201 } 
 2328,3: }
 
512 else scoped_statement 
 2329,3: else
 2330,3: {
 2331,5: printf
 2331,11: VARIABLE
 2331,11: (
 2331,12: "
 2331,41: )
 2331,42: ;
 2332,3: }
 
320 { option_block_item_list } 
 2330,3: {
 2331,5: printf
 2331,11: VARIABLE
 2331,11: (
 2331,12: "
 2331,41: )
 2331,42: ;
 2332,3: }
 
201 NAME VARIABLE 
 2331,5: printf
 2331,11: VARIABLE
 
65 VARIABLE 
 2331,11: VARIABLE
 
147 ( option_argument_expression_list ) 
 2331,11: (
 2331,12: "
 2331,41: )
 
235 STRING_LITERAL 
 2331,12: "
 
351 ) 
 2331,41: )
 
331 ; 
 2331,42: ;
 
201 } 
 2332,3: }
 
201 } 
 2333,1: }
 
23 $ 
 2334,1: $
 
