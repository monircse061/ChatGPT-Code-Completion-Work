parse time: 595.83s
0 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 48,1: typedef
 48,9: long
 48,14: unsigned
 48,23: int
 
54 long 
 48,9: long
 
106 unsigned 
 48,14: unsigned
 
106 int 
 48,23: int
 
6 NAME VARIABLE 
 48,27: size_t
 48,33: VARIABLE
 
65 VARIABLE 
 48,33: VARIABLE
 
70 ; 
 48,33: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 54,1: typedef
 54,9: __builtin_va_list
 54,26: TYPE
 
54 NAME TYPE 
 54,9: __builtin_va_list
 54,26: TYPE
 
26 TYPE 
 54,26: TYPE
 
6 NAME VARIABLE 
 54,27: __gnuc_va_list
 54,41: VARIABLE
 
65 VARIABLE 
 54,41: VARIABLE
 
70 ; 
 54,41: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 68,1: typedef
 68,9: unsigned
 68,18: char
 
54 unsigned 
 68,9: unsigned
 
106 char 
 68,18: char
 
6 NAME VARIABLE 
 68,23: __u_char
 68,31: VARIABLE
 
65 VARIABLE 
 68,31: VARIABLE
 
70 ; 
 68,31: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 69,1: typedef
 69,9: unsigned
 69,18: short
 69,24: int
 
54 unsigned 
 69,9: unsigned
 
106 short 
 69,18: short
 
106 int 
 69,24: int
 
6 NAME VARIABLE 
 69,28: __u_short
 69,37: VARIABLE
 
65 VARIABLE 
 69,37: VARIABLE
 
70 ; 
 69,37: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 70,1: typedef
 70,9: unsigned
 70,18: int
 
54 unsigned 
 70,9: unsigned
 
106 int 
 70,18: int
 
6 NAME VARIABLE 
 70,22: __u_int
 70,29: VARIABLE
 
65 VARIABLE 
 70,29: VARIABLE
 
70 ; 
 70,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 71,1: typedef
 71,9: unsigned
 71,18: long
 71,23: int
 
54 unsigned 
 71,9: unsigned
 
106 long 
 71,18: long
 
106 int 
 71,23: int
 
6 NAME VARIABLE 
 71,27: __u_long
 71,35: VARIABLE
 
65 VARIABLE 
 71,35: VARIABLE
 
70 ; 
 71,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 74,1: typedef
 74,9: signed
 74,16: char
 
54 signed 
 74,9: signed
 
106 char 
 74,16: char
 
6 NAME VARIABLE 
 74,21: __int8_t
 74,29: VARIABLE
 
65 VARIABLE 
 74,29: VARIABLE
 
70 ; 
 74,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 75,1: typedef
 75,9: unsigned
 75,18: char
 
54 unsigned 
 75,9: unsigned
 
106 char 
 75,18: char
 
6 NAME VARIABLE 
 75,23: __uint8_t
 75,32: VARIABLE
 
65 VARIABLE 
 75,32: VARIABLE
 
70 ; 
 75,32: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 76,1: typedef
 76,9: signed
 76,16: short
 76,22: int
 
54 signed 
 76,9: signed
 
106 short 
 76,16: short
 
106 int 
 76,22: int
 
6 NAME VARIABLE 
 76,26: __int16_t
 76,35: VARIABLE
 
65 VARIABLE 
 76,35: VARIABLE
 
70 ; 
 76,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 77,1: typedef
 77,9: unsigned
 77,18: short
 77,24: int
 
54 unsigned 
 77,9: unsigned
 
106 short 
 77,18: short
 
106 int 
 77,24: int
 
6 NAME VARIABLE 
 77,28: __uint16_t
 77,38: VARIABLE
 
65 VARIABLE 
 77,38: VARIABLE
 
70 ; 
 77,38: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 78,1: typedef
 78,9: signed
 78,16: int
 
54 signed 
 78,9: signed
 
106 int 
 78,16: int
 
6 NAME VARIABLE 
 78,20: __int32_t
 78,29: VARIABLE
 
65 VARIABLE 
 78,29: VARIABLE
 
70 ; 
 78,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 79,1: typedef
 79,9: unsigned
 79,18: int
 
54 unsigned 
 79,9: unsigned
 
106 int 
 79,18: int
 
6 NAME VARIABLE 
 79,22: __uint32_t
 79,32: VARIABLE
 
65 VARIABLE 
 79,32: VARIABLE
 
70 ; 
 79,32: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 81,1: typedef
 81,9: signed
 81,16: long
 81,21: int
 
54 signed 
 81,9: signed
 
106 long 
 81,16: long
 
106 int 
 81,21: int
 
6 NAME VARIABLE 
 81,25: __int64_t
 81,34: VARIABLE
 
65 VARIABLE 
 81,34: VARIABLE
 
70 ; 
 81,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 82,1: typedef
 82,9: unsigned
 82,18: long
 82,23: int
 
54 unsigned 
 82,9: unsigned
 
106 long 
 82,18: long
 
106 int 
 82,23: int
 
6 NAME VARIABLE 
 82,27: __uint64_t
 82,37: VARIABLE
 
65 VARIABLE 
 82,37: VARIABLE
 
70 ; 
 82,37: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 89,1: typedef
 89,9: __int8_t
 89,17: TYPE
 
54 NAME TYPE 
 89,9: __int8_t
 89,17: TYPE
 
26 TYPE 
 89,17: TYPE
 
6 NAME VARIABLE 
 89,18: __int_least8_t
 89,32: VARIABLE
 
65 VARIABLE 
 89,32: VARIABLE
 
70 ; 
 89,32: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 90,1: typedef
 90,9: __uint8_t
 90,18: TYPE
 
54 NAME TYPE 
 90,9: __uint8_t
 90,18: TYPE
 
26 TYPE 
 90,18: TYPE
 
6 NAME VARIABLE 
 90,19: __uint_least8_t
 90,34: VARIABLE
 
65 VARIABLE 
 90,34: VARIABLE
 
70 ; 
 90,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 91,1: typedef
 91,9: __int16_t
 91,18: TYPE
 
54 NAME TYPE 
 91,9: __int16_t
 91,18: TYPE
 
26 TYPE 
 91,18: TYPE
 
6 NAME VARIABLE 
 91,19: __int_least16_t
 91,34: VARIABLE
 
65 VARIABLE 
 91,34: VARIABLE
 
70 ; 
 91,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 92,1: typedef
 92,9: __uint16_t
 92,19: TYPE
 
54 NAME TYPE 
 92,9: __uint16_t
 92,19: TYPE
 
26 TYPE 
 92,19: TYPE
 
6 NAME VARIABLE 
 92,20: __uint_least16_t
 92,36: VARIABLE
 
65 VARIABLE 
 92,36: VARIABLE
 
70 ; 
 92,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 93,1: typedef
 93,9: __int32_t
 93,18: TYPE
 
54 NAME TYPE 
 93,9: __int32_t
 93,18: TYPE
 
26 TYPE 
 93,18: TYPE
 
6 NAME VARIABLE 
 93,19: __int_least32_t
 93,34: VARIABLE
 
65 VARIABLE 
 93,34: VARIABLE
 
70 ; 
 93,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 94,1: typedef
 94,9: __uint32_t
 94,19: TYPE
 
54 NAME TYPE 
 94,9: __uint32_t
 94,19: TYPE
 
26 TYPE 
 94,19: TYPE
 
6 NAME VARIABLE 
 94,20: __uint_least32_t
 94,36: VARIABLE
 
65 VARIABLE 
 94,36: VARIABLE
 
70 ; 
 94,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 95,1: typedef
 95,9: __int64_t
 95,18: TYPE
 
54 NAME TYPE 
 95,9: __int64_t
 95,18: TYPE
 
26 TYPE 
 95,18: TYPE
 
6 NAME VARIABLE 
 95,19: __int_least64_t
 95,34: VARIABLE
 
65 VARIABLE 
 95,34: VARIABLE
 
70 ; 
 95,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 96,1: typedef
 96,9: __uint64_t
 96,19: TYPE
 
54 NAME TYPE 
 96,9: __uint64_t
 96,19: TYPE
 
26 TYPE 
 96,19: TYPE
 
6 NAME VARIABLE 
 96,20: __uint_least64_t
 96,36: VARIABLE
 
65 VARIABLE 
 96,36: VARIABLE
 
70 ; 
 96,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 100,1: typedef
 100,9: long
 100,14: int
 
54 long 
 100,9: long
 
106 int 
 100,14: int
 
6 NAME VARIABLE 
 100,18: __quad_t
 100,26: VARIABLE
 
65 VARIABLE 
 100,26: VARIABLE
 
70 ; 
 100,26: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 101,1: typedef
 101,9: unsigned
 101,18: long
 101,23: int
 
54 unsigned 
 101,9: unsigned
 
106 long 
 101,18: long
 
106 int 
 101,23: int
 
6 NAME VARIABLE 
 101,27: __u_quad_t
 101,37: VARIABLE
 
65 VARIABLE 
 101,37: VARIABLE
 
70 ; 
 101,37: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 109,1: typedef
 109,9: long
 109,14: int
 
54 long 
 109,9: long
 
106 int 
 109,14: int
 
6 NAME VARIABLE 
 109,18: __intmax_t
 109,28: VARIABLE
 
65 VARIABLE 
 109,28: VARIABLE
 
70 ; 
 109,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 110,1: typedef
 110,9: unsigned
 110,18: long
 110,23: int
 
54 unsigned 
 110,9: unsigned
 
106 long 
 110,18: long
 
106 int 
 110,23: int
 
6 NAME VARIABLE 
 110,27: __uintmax_t
 110,38: VARIABLE
 
65 VARIABLE 
 110,38: VARIABLE
 
70 ; 
 110,38: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 118,1: typedef
 118,9: unsigned
 118,18: long
 118,23: int
 
54 unsigned 
 118,9: unsigned
 
106 long 
 118,18: long
 
106 int 
 118,23: int
 
6 NAME VARIABLE 
 118,27: __dev_t
 118,34: VARIABLE
 
65 VARIABLE 
 118,34: VARIABLE
 
70 ; 
 118,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 119,1: typedef
 119,9: unsigned
 119,18: int
 
54 unsigned 
 119,9: unsigned
 
106 int 
 119,18: int
 
6 NAME VARIABLE 
 119,22: __uid_t
 119,29: VARIABLE
 
65 VARIABLE 
 119,29: VARIABLE
 
70 ; 
 119,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 120,1: typedef
 120,9: unsigned
 120,18: int
 
54 unsigned 
 120,9: unsigned
 
106 int 
 120,18: int
 
6 NAME VARIABLE 
 120,22: __gid_t
 120,29: VARIABLE
 
65 VARIABLE 
 120,29: VARIABLE
 
70 ; 
 120,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 121,1: typedef
 121,9: unsigned
 121,18: long
 121,23: int
 
54 unsigned 
 121,9: unsigned
 
106 long 
 121,18: long
 
106 int 
 121,23: int
 
6 NAME VARIABLE 
 121,27: __ino_t
 121,34: VARIABLE
 
65 VARIABLE 
 121,34: VARIABLE
 
70 ; 
 121,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 122,1: typedef
 122,9: unsigned
 122,18: long
 122,23: int
 
54 unsigned 
 122,9: unsigned
 
106 long 
 122,18: long
 
106 int 
 122,23: int
 
6 NAME VARIABLE 
 122,27: __ino64_t
 122,36: VARIABLE
 
65 VARIABLE 
 122,36: VARIABLE
 
70 ; 
 122,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 123,1: typedef
 123,9: unsigned
 123,18: int
 
54 unsigned 
 123,9: unsigned
 
106 int 
 123,18: int
 
6 NAME VARIABLE 
 123,22: __mode_t
 123,30: VARIABLE
 
65 VARIABLE 
 123,30: VARIABLE
 
70 ; 
 123,30: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 124,1: typedef
 124,9: unsigned
 124,18: long
 124,23: int
 
54 unsigned 
 124,9: unsigned
 
106 long 
 124,18: long
 
106 int 
 124,23: int
 
6 NAME VARIABLE 
 124,27: __nlink_t
 124,36: VARIABLE
 
65 VARIABLE 
 124,36: VARIABLE
 
70 ; 
 124,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 125,1: typedef
 125,9: long
 125,14: int
 
54 long 
 125,9: long
 
106 int 
 125,14: int
 
6 NAME VARIABLE 
 125,18: __off_t
 125,25: VARIABLE
 
65 VARIABLE 
 125,25: VARIABLE
 
70 ; 
 125,25: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 126,1: typedef
 126,9: long
 126,14: int
 
54 long 
 126,9: long
 
106 int 
 126,14: int
 
6 NAME VARIABLE 
 126,18: __off64_t
 126,27: VARIABLE
 
65 VARIABLE 
 126,27: VARIABLE
 
70 ; 
 126,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 127,1: typedef
 127,9: int
 
54 int 
 127,9: int
 
6 NAME VARIABLE 
 127,13: __pid_t
 127,20: VARIABLE
 
65 VARIABLE 
 127,20: VARIABLE
 
70 ; 
 127,20: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 128,1: typedef
 128,9: struct
 128,16: {
 128,18: int
 128,22: __val
 128,27: VARIABLE
 128,27: [
 128,28: 2
 128,29: ]
 128,30: ;
 128,32: }
 
54 struct 
 128,9: struct
 
89 { struct_declaration_list } 
 128,16: {
 128,18: int
 128,22: __val
 128,27: VARIABLE
 128,27: [
 128,28: 2
 128,29: ]
 128,30: ;
 128,32: }
 
126 int 
 128,18: int
 
200 NAME VARIABLE 
 128,22: __val
 128,27: VARIABLE
 
65 VARIABLE 
 128,27: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 128,27: [
 128,28: 2
 128,29: ]
 
188 CONSTANT 
 128,28: 2
 
305 ] 
 128,29: ]
 
313 ; 
 128,30: ;
 
198 } 
 128,32: }
 
6 NAME VARIABLE 
 128,34: __fsid_t
 128,42: VARIABLE
 
65 VARIABLE 
 128,42: VARIABLE
 
70 ; 
 128,42: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 129,1: typedef
 129,9: long
 129,14: int
 
54 long 
 129,9: long
 
106 int 
 129,14: int
 
6 NAME VARIABLE 
 129,18: __clock_t
 129,27: VARIABLE
 
65 VARIABLE 
 129,27: VARIABLE
 
70 ; 
 129,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 130,1: typedef
 130,9: unsigned
 130,18: long
 130,23: int
 
54 unsigned 
 130,9: unsigned
 
106 long 
 130,18: long
 
106 int 
 130,23: int
 
6 NAME VARIABLE 
 130,27: __rlim_t
 130,35: VARIABLE
 
65 VARIABLE 
 130,35: VARIABLE
 
70 ; 
 130,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 131,1: typedef
 131,9: unsigned
 131,18: long
 131,23: int
 
54 unsigned 
 131,9: unsigned
 
106 long 
 131,18: long
 
106 int 
 131,23: int
 
6 NAME VARIABLE 
 131,27: __rlim64_t
 131,37: VARIABLE
 
65 VARIABLE 
 131,37: VARIABLE
 
70 ; 
 131,37: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 132,1: typedef
 132,9: unsigned
 132,18: int
 
54 unsigned 
 132,9: unsigned
 
106 int 
 132,18: int
 
6 NAME VARIABLE 
 132,22: __id_t
 132,28: VARIABLE
 
65 VARIABLE 
 132,28: VARIABLE
 
70 ; 
 132,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 133,1: typedef
 133,9: long
 133,14: int
 
54 long 
 133,9: long
 
106 int 
 133,14: int
 
6 NAME VARIABLE 
 133,18: __time_t
 133,26: VARIABLE
 
65 VARIABLE 
 133,26: VARIABLE
 
70 ; 
 133,26: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 134,1: typedef
 134,9: unsigned
 134,18: int
 
54 unsigned 
 134,9: unsigned
 
106 int 
 134,18: int
 
6 NAME VARIABLE 
 134,22: __useconds_t
 134,34: VARIABLE
 
65 VARIABLE 
 134,34: VARIABLE
 
70 ; 
 134,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 135,1: typedef
 135,9: long
 135,14: int
 
54 long 
 135,9: long
 
106 int 
 135,14: int
 
6 NAME VARIABLE 
 135,18: __suseconds_t
 135,31: VARIABLE
 
65 VARIABLE 
 135,31: VARIABLE
 
70 ; 
 135,31: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 136,1: typedef
 136,9: long
 136,14: int
 
54 long 
 136,9: long
 
106 int 
 136,14: int
 
6 NAME VARIABLE 
 136,18: __suseconds64_t
 136,33: VARIABLE
 
65 VARIABLE 
 136,33: VARIABLE
 
70 ; 
 136,33: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 138,1: typedef
 138,9: int
 
54 int 
 138,9: int
 
6 NAME VARIABLE 
 138,13: __daddr_t
 138,22: VARIABLE
 
65 VARIABLE 
 138,22: VARIABLE
 
70 ; 
 138,22: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 139,1: typedef
 139,9: int
 
54 int 
 139,9: int
 
6 NAME VARIABLE 
 139,13: __key_t
 139,20: VARIABLE
 
65 VARIABLE 
 139,20: VARIABLE
 
70 ; 
 139,20: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 142,1: typedef
 142,9: int
 
54 int 
 142,9: int
 
6 NAME VARIABLE 
 142,13: __clockid_t
 142,24: VARIABLE
 
65 VARIABLE 
 142,24: VARIABLE
 
70 ; 
 142,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 145,1: typedef
 145,9: void
 
54 void 
 145,9: void
 
6 * option_type_qualifier_list option_pointer 
 145,14: *
 
64 NAME VARIABLE 
 145,16: __timer_t
 145,25: VARIABLE
 
65 VARIABLE 
 145,25: VARIABLE
 
70 ; 
 145,25: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 148,1: typedef
 148,9: long
 148,14: int
 
54 long 
 148,9: long
 
106 int 
 148,14: int
 
6 NAME VARIABLE 
 148,18: __blksize_t
 148,29: VARIABLE
 
65 VARIABLE 
 148,29: VARIABLE
 
70 ; 
 148,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 153,1: typedef
 153,9: long
 153,14: int
 
54 long 
 153,9: long
 
106 int 
 153,14: int
 
6 NAME VARIABLE 
 153,18: __blkcnt_t
 153,28: VARIABLE
 
65 VARIABLE 
 153,28: VARIABLE
 
70 ; 
 153,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 154,1: typedef
 154,9: long
 154,14: int
 
54 long 
 154,9: long
 
106 int 
 154,14: int
 
6 NAME VARIABLE 
 154,18: __blkcnt64_t
 154,30: VARIABLE
 
65 VARIABLE 
 154,30: VARIABLE
 
70 ; 
 154,30: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 157,1: typedef
 157,9: unsigned
 157,18: long
 157,23: int
 
54 unsigned 
 157,9: unsigned
 
106 long 
 157,18: long
 
106 int 
 157,23: int
 
6 NAME VARIABLE 
 157,27: __fsblkcnt_t
 157,39: VARIABLE
 
65 VARIABLE 
 157,39: VARIABLE
 
70 ; 
 157,39: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 158,1: typedef
 158,9: unsigned
 158,18: long
 158,23: int
 
54 unsigned 
 158,9: unsigned
 
106 long 
 158,18: long
 
106 int 
 158,23: int
 
6 NAME VARIABLE 
 158,27: __fsblkcnt64_t
 158,41: VARIABLE
 
65 VARIABLE 
 158,41: VARIABLE
 
70 ; 
 158,41: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 161,1: typedef
 161,9: unsigned
 161,18: long
 161,23: int
 
54 unsigned 
 161,9: unsigned
 
106 long 
 161,18: long
 
106 int 
 161,23: int
 
6 NAME VARIABLE 
 161,27: __fsfilcnt_t
 161,39: VARIABLE
 
65 VARIABLE 
 161,39: VARIABLE
 
70 ; 
 161,39: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 162,1: typedef
 162,9: unsigned
 162,18: long
 162,23: int
 
54 unsigned 
 162,9: unsigned
 
106 long 
 162,18: long
 
106 int 
 162,23: int
 
6 NAME VARIABLE 
 162,27: __fsfilcnt64_t
 162,41: VARIABLE
 
65 VARIABLE 
 162,41: VARIABLE
 
70 ; 
 162,41: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 165,1: typedef
 165,9: long
 165,14: int
 
54 long 
 165,9: long
 
106 int 
 165,14: int
 
6 NAME VARIABLE 
 165,18: __fsword_t
 165,28: VARIABLE
 
65 VARIABLE 
 165,28: VARIABLE
 
70 ; 
 165,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 167,1: typedef
 167,9: long
 167,14: int
 
54 long 
 167,9: long
 
106 int 
 167,14: int
 
6 NAME VARIABLE 
 167,18: __ssize_t
 167,27: VARIABLE
 
65 VARIABLE 
 167,27: VARIABLE
 
70 ; 
 167,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 170,1: typedef
 170,9: long
 170,14: int
 
54 long 
 170,9: long
 
106 int 
 170,14: int
 
6 NAME VARIABLE 
 170,18: __syscall_slong_t
 170,35: VARIABLE
 
65 VARIABLE 
 170,35: VARIABLE
 
70 ; 
 170,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 172,1: typedef
 172,9: unsigned
 172,18: long
 172,23: int
 
54 unsigned 
 172,9: unsigned
 
106 long 
 172,18: long
 
106 int 
 172,23: int
 
6 NAME VARIABLE 
 172,27: __syscall_ulong_t
 172,44: VARIABLE
 
65 VARIABLE 
 172,44: VARIABLE
 
70 ; 
 172,44: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 176,1: typedef
 176,9: __off64_t
 176,18: TYPE
 
54 NAME TYPE 
 176,9: __off64_t
 176,18: TYPE
 
26 TYPE 
 176,18: TYPE
 
6 NAME VARIABLE 
 176,19: __loff_t
 176,27: VARIABLE
 
65 VARIABLE 
 176,27: VARIABLE
 
70 ; 
 176,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 177,1: typedef
 177,9: char
 
54 char 
 177,9: char
 
6 * option_type_qualifier_list option_pointer 
 177,14: *
 
64 NAME VARIABLE 
 177,15: __caddr_t
 177,24: VARIABLE
 
65 VARIABLE 
 177,24: VARIABLE
 
70 ; 
 177,24: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 180,1: typedef
 180,9: long
 180,14: int
 
54 long 
 180,9: long
 
106 int 
 180,14: int
 
6 NAME VARIABLE 
 180,18: __intptr_t
 180,28: VARIABLE
 
65 VARIABLE 
 180,28: VARIABLE
 
70 ; 
 180,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 183,1: typedef
 183,9: unsigned
 183,18: int
 
54 unsigned 
 183,9: unsigned
 
106 int 
 183,18: int
 
6 NAME VARIABLE 
 183,22: __socklen_t
 183,33: VARIABLE
 
65 VARIABLE 
 183,33: VARIABLE
 
70 ; 
 183,33: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 188,1: typedef
 188,9: int
 
54 int 
 188,9: int
 
6 NAME VARIABLE 
 188,13: __sig_atomic_t
 188,27: VARIABLE
 
65 VARIABLE 
 188,27: VARIABLE
 
70 ; 
 188,27: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 197,1: typedef
 197,9: struct
 198,1: {
 199,3: int
 199,7: __count
 199,14: VARIABLE
 199,14: ;
 200,3: union
 201,3: {
 202,5: unsigned
 202,14: int
 202,18: __wch
 202,23: VARIABLE
 202,23: ;
 203,5: char
 203,10: __wchb
 203,16: VARIABLE
 203,16: [
 203,17: 4
 203,18: ]
 203,19: ;
 204,3: }
 204,5: __value
 204,12: VARIABLE
 204,12: ;
 205,1: }
 
54 struct 
 197,9: struct
 
89 { struct_declaration_list } 
 198,1: {
 199,3: int
 199,7: __count
 199,14: VARIABLE
 199,14: ;
 200,3: union
 201,3: {
 202,5: unsigned
 202,14: int
 202,18: __wch
 202,23: VARIABLE
 202,23: ;
 203,5: char
 203,10: __wchb
 203,16: VARIABLE
 203,16: [
 203,17: 4
 203,18: ]
 203,19: ;
 204,3: }
 204,5: __value
 204,12: VARIABLE
 204,12: ;
 205,1: }
 
126 int 
 199,3: int
 
200 NAME VARIABLE 
 199,7: __count
 199,14: VARIABLE
 
65 VARIABLE 
 199,14: VARIABLE
 
313 ; 
 199,14: ;
 
198 union 
 200,3: union
 
89 { struct_declaration_list } 
 201,3: {
 202,5: unsigned
 202,14: int
 202,18: __wch
 202,23: VARIABLE
 202,23: ;
 203,5: char
 203,10: __wchb
 203,16: VARIABLE
 203,16: [
 203,17: 4
 203,18: ]
 203,19: ;
 204,3: }
 
126 unsigned 
 202,5: unsigned
 
135 int 
 202,14: int
 
200 NAME VARIABLE 
 202,18: __wch
 202,23: VARIABLE
 
65 VARIABLE 
 202,23: VARIABLE
 
313 ; 
 202,23: ;
 
198 char 
 203,5: char
 
200 NAME VARIABLE 
 203,10: __wchb
 203,16: VARIABLE
 
65 VARIABLE 
 203,16: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 203,16: [
 203,17: 4
 203,18: ]
 
188 CONSTANT 
 203,17: 4
 
305 ] 
 203,18: ]
 
313 ; 
 203,19: ;
 
198 } 
 204,3: }
 
200 NAME VARIABLE 
 204,5: __value
 204,12: VARIABLE
 
65 VARIABLE 
 204,12: VARIABLE
 
313 ; 
 204,12: ;
 
198 } 
 205,1: }
 
6 NAME VARIABLE 
 205,3: __mbstate_t
 205,14: VARIABLE
 
65 VARIABLE 
 205,14: VARIABLE
 
70 ; 
 205,14: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 211,1: typedef
 211,9: struct
 211,16: _G_fpos_t
 211,25: VARIABLE
 212,1: {
 213,3: __off_t
 213,10: TYPE
 213,11: __pos
 213,16: VARIABLE
 213,16: ;
 214,3: __mbstate_t
 214,14: TYPE
 214,15: __state
 214,22: VARIABLE
 214,22: ;
 215,1: }
 
54 struct 
 211,9: struct
 
22 NAME VARIABLE 
 211,16: _G_fpos_t
 211,25: VARIABLE
 
65 VARIABLE 
 211,25: VARIABLE
 
89 { struct_declaration_list } 
 212,1: {
 213,3: __off_t
 213,10: TYPE
 213,11: __pos
 213,16: VARIABLE
 213,16: ;
 214,3: __mbstate_t
 214,14: TYPE
 214,15: __state
 214,22: VARIABLE
 214,22: ;
 215,1: }
 
126 NAME TYPE 
 213,3: __off_t
 213,10: TYPE
 
26 TYPE 
 213,10: TYPE
 
200 NAME VARIABLE 
 213,11: __pos
 213,16: VARIABLE
 
65 VARIABLE 
 213,16: VARIABLE
 
313 ; 
 213,16: ;
 
198 NAME TYPE 
 214,3: __mbstate_t
 214,14: TYPE
 
26 TYPE 
 214,14: TYPE
 
200 NAME VARIABLE 
 214,15: __state
 214,22: VARIABLE
 
65 VARIABLE 
 214,22: VARIABLE
 
313 ; 
 214,22: ;
 
198 } 
 215,1: }
 
6 NAME VARIABLE 
 215,3: __fpos_t
 215,11: VARIABLE
 
65 VARIABLE 
 215,11: VARIABLE
 
70 ; 
 215,11: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 219,1: typedef
 219,9: struct
 219,16: _G_fpos64_t
 219,27: VARIABLE
 220,1: {
 221,3: __off64_t
 221,12: TYPE
 221,13: __pos
 221,18: VARIABLE
 221,18: ;
 222,3: __mbstate_t
 222,14: TYPE
 222,15: __state
 222,22: VARIABLE
 222,22: ;
 223,1: }
 
54 struct 
 219,9: struct
 
22 NAME VARIABLE 
 219,16: _G_fpos64_t
 219,27: VARIABLE
 
65 VARIABLE 
 219,27: VARIABLE
 
89 { struct_declaration_list } 
 220,1: {
 221,3: __off64_t
 221,12: TYPE
 221,13: __pos
 221,18: VARIABLE
 221,18: ;
 222,3: __mbstate_t
 222,14: TYPE
 222,15: __state
 222,22: VARIABLE
 222,22: ;
 223,1: }
 
126 NAME TYPE 
 221,3: __off64_t
 221,12: TYPE
 
26 TYPE 
 221,12: TYPE
 
200 NAME VARIABLE 
 221,13: __pos
 221,18: VARIABLE
 
65 VARIABLE 
 221,18: VARIABLE
 
313 ; 
 221,18: ;
 
198 NAME TYPE 
 222,3: __mbstate_t
 222,14: TYPE
 
26 TYPE 
 222,14: TYPE
 
200 NAME VARIABLE 
 222,15: __state
 222,22: VARIABLE
 
65 VARIABLE 
 222,22: VARIABLE
 
313 ; 
 222,22: ;
 
198 } 
 223,1: }
 
6 NAME VARIABLE 
 223,3: __fpos64_t
 223,13: VARIABLE
 
65 VARIABLE 
 223,13: VARIABLE
 
70 ; 
 223,13: ;
 
23 struct 
 229,1: struct
 
22 NAME VARIABLE 
 229,8: _IO_FILE
 229,16: VARIABLE
 
65 VARIABLE 
 229,16: VARIABLE
 
60 ; 
 229,16: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 230,1: typedef
 230,9: struct
 230,16: _IO_FILE
 230,24: VARIABLE
 
54 struct 
 230,9: struct
 
22 NAME VARIABLE 
 230,16: _IO_FILE
 230,24: VARIABLE
 
65 VARIABLE 
 230,24: VARIABLE
 
6 NAME VARIABLE 
 230,25: __FILE
 230,31: VARIABLE
 
65 VARIABLE 
 230,31: VARIABLE
 
70 ; 
 230,31: ;
 
23 struct 
 236,1: struct
 
22 NAME VARIABLE 
 236,8: _IO_FILE
 236,16: VARIABLE
 
65 VARIABLE 
 236,16: VARIABLE
 
60 ; 
 236,16: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 239,1: typedef
 239,9: struct
 239,16: _IO_FILE
 239,24: VARIABLE
 
54 struct 
 239,9: struct
 
22 NAME VARIABLE 
 239,16: _IO_FILE
 239,24: VARIABLE
 
65 VARIABLE 
 239,24: VARIABLE
 
6 NAME VARIABLE 
 239,25: FILE
 239,29: VARIABLE
 
65 VARIABLE 
 239,29: VARIABLE
 
70 ; 
 239,29: ;
 
23 struct 
 243,1: struct
 
22 NAME VARIABLE 
 243,8: _IO_FILE
 243,16: VARIABLE
 
65 VARIABLE 
 243,16: VARIABLE
 
60 ; 
 243,16: ;
 
23 struct 
 244,1: struct
 
22 NAME VARIABLE 
 244,8: _IO_marker
 244,18: VARIABLE
 
65 VARIABLE 
 244,18: VARIABLE
 
60 ; 
 244,18: ;
 
23 struct 
 245,1: struct
 
22 NAME VARIABLE 
 245,8: _IO_codecvt
 245,19: VARIABLE
 
65 VARIABLE 
 245,19: VARIABLE
 
60 ; 
 245,19: ;
 
23 struct 
 246,1: struct
 
22 NAME VARIABLE 
 246,8: _IO_wide_data
 246,21: VARIABLE
 
65 VARIABLE 
 246,21: VARIABLE
 
60 ; 
 246,21: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 251,1: typedef
 251,9: void
 
54 void 
 251,9: void
 
6 NAME VARIABLE 
 251,14: _IO_lock_t
 251,24: VARIABLE
 
65 VARIABLE 
 251,24: VARIABLE
 
70 ; 
 251,24: ;
 
23 struct 
 257,1: struct
 
22 NAME VARIABLE 
 257,8: _IO_FILE
 257,16: VARIABLE
 
65 VARIABLE 
 257,16: VARIABLE
 
89 { struct_declaration_list } 
 258,1: {
 259,3: int
 259,7: _flags
 259,13: VARIABLE
 259,13: ;
 262,3: char
 262,8: *
 262,9: _IO_read_ptr
 262,21: VARIABLE
 262,21: ;
 263,3: char
 263,8: *
 263,9: _IO_read_end
 263,21: VARIABLE
 263,21: ;
 264,3: char
 264,8: *
 264,9: _IO_read_base
 264,22: VARIABLE
 264,22: ;
 265,3: char
 265,8: *
 265,9: _IO_write_base
 265,23: VARIABLE
 265,23: ;
 266,3: char
 266,8: *
 266,9: _IO_write_ptr
 266,22: VARIABLE
 266,22: ;
 267,3: char
 267,8: *
 267,9: _IO_write_end
 267,22: VARIABLE
 267,22: ;
 268,3: char
 268,8: *
 268,9: _IO_buf_base
 268,21: VARIABLE
 268,21: ;
 269,3: char
 269,8: *
 269,9: _IO_buf_end
 269,20: VARIABLE
 269,20: ;
 272,3: char
 272,8: *
 272,9: _IO_save_base
 272,22: VARIABLE
 272,22: ;
 273,3: char
 273,8: *
 273,9: _IO_backup_base
 273,24: VARIABLE
 273,24: ;
 274,3: char
 274,8: *
 274,9: _IO_save_end
 274,21: VARIABLE
 274,21: ;
 276,3: struct
 276,10: _IO_marker
 276,20: VARIABLE
 276,21: *
 276,22: _markers
 276,30: VARIABLE
 276,30: ;
 278,3: struct
 278,10: _IO_FILE
 278,18: VARIABLE
 278,19: *
 278,20: _chain
 278,26: VARIABLE
 278,26: ;
 280,3: int
 280,7: _fileno
 280,14: VARIABLE
 280,14: ;
 281,3: int
 281,7: _flags2
 281,14: VARIABLE
 281,14: ;
 282,3: __off_t
 282,10: TYPE
 282,11: _old_offset
 282,22: VARIABLE
 282,22: ;
 285,3: unsigned
 285,12: short
 285,18: _cur_column
 285,29: VARIABLE
 285,29: ;
 286,3: signed
 286,10: char
 286,15: _vtable_offset
 286,29: VARIABLE
 286,29: ;
 287,3: char
 287,8: _shortbuf
 287,17: VARIABLE
 287,17: [
 287,18: 1
 287,19: ]
 287,20: ;
 289,3: _IO_lock_t
 289,13: TYPE
 289,14: *
 289,15: _lock
 289,20: VARIABLE
 289,20: ;
 297,3: __off64_t
 297,12: TYPE
 297,13: _offset
 297,20: VARIABLE
 297,20: ;
 299,3: struct
 299,10: _IO_codecvt
 299,21: VARIABLE
 299,22: *
 299,23: _codecvt
 299,31: VARIABLE
 299,31: ;
 300,3: struct
 300,10: _IO_wide_data
 300,23: VARIABLE
 300,24: *
 300,25: _wide_data
 300,35: VARIABLE
 300,35: ;
 301,3: struct
 301,10: _IO_FILE
 301,18: VARIABLE
 301,19: *
 301,20: _freeres_list
 301,33: VARIABLE
 301,33: ;
 302,3: void
 302,8: *
 302,9: _freeres_buf
 302,21: VARIABLE
 302,21: ;
 303,3: size_t
 303,9: TYPE
 303,10: __pad5
 303,16: VARIABLE
 303,16: ;
 304,3: int
 304,7: _mode
 304,12: VARIABLE
 304,12: ;
 306,3: char
 306,8: _unused2
 306,16: VARIABLE
 306,16: [
 306,17: 15
 306,20: *
 306,22: sizeof
 306,29: (
 306,30: int
 306,33: )
 306,35: -
 306,37: 4
 306,39: *
 306,41: sizeof
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 306,57: -
 306,59: sizeof
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 306,74: ]
 306,75: ;
 307,1: }
 
126 int 
 259,3: int
 
200 NAME VARIABLE 
 259,7: _flags
 259,13: VARIABLE
 
65 VARIABLE 
 259,13: VARIABLE
 
313 ; 
 259,13: ;
 
198 char 
 262,3: char
 
200 * option_type_qualifier_list option_pointer 
 262,8: *
 
64 NAME VARIABLE 
 262,9: _IO_read_ptr
 262,21: VARIABLE
 
65 VARIABLE 
 262,21: VARIABLE
 
313 ; 
 262,21: ;
 
198 char 
 263,3: char
 
200 * option_type_qualifier_list option_pointer 
 263,8: *
 
64 NAME VARIABLE 
 263,9: _IO_read_end
 263,21: VARIABLE
 
65 VARIABLE 
 263,21: VARIABLE
 
313 ; 
 263,21: ;
 
198 char 
 264,3: char
 
200 * option_type_qualifier_list option_pointer 
 264,8: *
 
64 NAME VARIABLE 
 264,9: _IO_read_base
 264,22: VARIABLE
 
65 VARIABLE 
 264,22: VARIABLE
 
313 ; 
 264,22: ;
 
198 char 
 265,3: char
 
200 * option_type_qualifier_list option_pointer 
 265,8: *
 
64 NAME VARIABLE 
 265,9: _IO_write_base
 265,23: VARIABLE
 
65 VARIABLE 
 265,23: VARIABLE
 
313 ; 
 265,23: ;
 
198 char 
 266,3: char
 
200 * option_type_qualifier_list option_pointer 
 266,8: *
 
64 NAME VARIABLE 
 266,9: _IO_write_ptr
 266,22: VARIABLE
 
65 VARIABLE 
 266,22: VARIABLE
 
313 ; 
 266,22: ;
 
198 char 
 267,3: char
 
200 * option_type_qualifier_list option_pointer 
 267,8: *
 
64 NAME VARIABLE 
 267,9: _IO_write_end
 267,22: VARIABLE
 
65 VARIABLE 
 267,22: VARIABLE
 
313 ; 
 267,22: ;
 
198 char 
 268,3: char
 
200 * option_type_qualifier_list option_pointer 
 268,8: *
 
64 NAME VARIABLE 
 268,9: _IO_buf_base
 268,21: VARIABLE
 
65 VARIABLE 
 268,21: VARIABLE
 
313 ; 
 268,21: ;
 
198 char 
 269,3: char
 
200 * option_type_qualifier_list option_pointer 
 269,8: *
 
64 NAME VARIABLE 
 269,9: _IO_buf_end
 269,20: VARIABLE
 
65 VARIABLE 
 269,20: VARIABLE
 
313 ; 
 269,20: ;
 
198 char 
 272,3: char
 
200 * option_type_qualifier_list option_pointer 
 272,8: *
 
64 NAME VARIABLE 
 272,9: _IO_save_base
 272,22: VARIABLE
 
65 VARIABLE 
 272,22: VARIABLE
 
313 ; 
 272,22: ;
 
198 char 
 273,3: char
 
200 * option_type_qualifier_list option_pointer 
 273,8: *
 
64 NAME VARIABLE 
 273,9: _IO_backup_base
 273,24: VARIABLE
 
65 VARIABLE 
 273,24: VARIABLE
 
313 ; 
 273,24: ;
 
198 char 
 274,3: char
 
200 * option_type_qualifier_list option_pointer 
 274,8: *
 
64 NAME VARIABLE 
 274,9: _IO_save_end
 274,21: VARIABLE
 
65 VARIABLE 
 274,21: VARIABLE
 
313 ; 
 274,21: ;
 
198 struct 
 276,3: struct
 
22 NAME VARIABLE 
 276,10: _IO_marker
 276,20: VARIABLE
 
65 VARIABLE 
 276,20: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 276,21: *
 
64 NAME VARIABLE 
 276,22: _markers
 276,30: VARIABLE
 
65 VARIABLE 
 276,30: VARIABLE
 
313 ; 
 276,30: ;
 
198 struct 
 278,3: struct
 
22 NAME VARIABLE 
 278,10: _IO_FILE
 278,18: VARIABLE
 
65 VARIABLE 
 278,18: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 278,19: *
 
64 NAME VARIABLE 
 278,20: _chain
 278,26: VARIABLE
 
65 VARIABLE 
 278,26: VARIABLE
 
313 ; 
 278,26: ;
 
198 int 
 280,3: int
 
200 NAME VARIABLE 
 280,7: _fileno
 280,14: VARIABLE
 
65 VARIABLE 
 280,14: VARIABLE
 
313 ; 
 280,14: ;
 
198 int 
 281,3: int
 
200 NAME VARIABLE 
 281,7: _flags2
 281,14: VARIABLE
 
65 VARIABLE 
 281,14: VARIABLE
 
313 ; 
 281,14: ;
 
198 NAME TYPE 
 282,3: __off_t
 282,10: TYPE
 
26 TYPE 
 282,10: TYPE
 
200 NAME VARIABLE 
 282,11: _old_offset
 282,22: VARIABLE
 
65 VARIABLE 
 282,22: VARIABLE
 
313 ; 
 282,22: ;
 
198 unsigned 
 285,3: unsigned
 
135 short 
 285,12: short
 
200 NAME VARIABLE 
 285,18: _cur_column
 285,29: VARIABLE
 
65 VARIABLE 
 285,29: VARIABLE
 
313 ; 
 285,29: ;
 
198 signed 
 286,3: signed
 
135 char 
 286,10: char
 
200 NAME VARIABLE 
 286,15: _vtable_offset
 286,29: VARIABLE
 
65 VARIABLE 
 286,29: VARIABLE
 
313 ; 
 286,29: ;
 
198 char 
 287,3: char
 
200 NAME VARIABLE 
 287,8: _shortbuf
 287,17: VARIABLE
 
65 VARIABLE 
 287,17: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 287,17: [
 287,18: 1
 287,19: ]
 
188 CONSTANT 
 287,18: 1
 
305 ] 
 287,19: ]
 
313 ; 
 287,20: ;
 
198 NAME TYPE 
 289,3: _IO_lock_t
 289,13: TYPE
 
26 TYPE 
 289,13: TYPE
 
200 * option_type_qualifier_list option_pointer 
 289,14: *
 
64 NAME VARIABLE 
 289,15: _lock
 289,20: VARIABLE
 
65 VARIABLE 
 289,20: VARIABLE
 
313 ; 
 289,20: ;
 
198 NAME TYPE 
 297,3: __off64_t
 297,12: TYPE
 
26 TYPE 
 297,12: TYPE
 
200 NAME VARIABLE 
 297,13: _offset
 297,20: VARIABLE
 
65 VARIABLE 
 297,20: VARIABLE
 
313 ; 
 297,20: ;
 
198 struct 
 299,3: struct
 
22 NAME VARIABLE 
 299,10: _IO_codecvt
 299,21: VARIABLE
 
65 VARIABLE 
 299,21: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 299,22: *
 
64 NAME VARIABLE 
 299,23: _codecvt
 299,31: VARIABLE
 
65 VARIABLE 
 299,31: VARIABLE
 
313 ; 
 299,31: ;
 
198 struct 
 300,3: struct
 
22 NAME VARIABLE 
 300,10: _IO_wide_data
 300,23: VARIABLE
 
65 VARIABLE 
 300,23: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 300,24: *
 
64 NAME VARIABLE 
 300,25: _wide_data
 300,35: VARIABLE
 
65 VARIABLE 
 300,35: VARIABLE
 
313 ; 
 300,35: ;
 
198 struct 
 301,3: struct
 
22 NAME VARIABLE 
 301,10: _IO_FILE
 301,18: VARIABLE
 
65 VARIABLE 
 301,18: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 301,19: *
 
64 NAME VARIABLE 
 301,20: _freeres_list
 301,33: VARIABLE
 
65 VARIABLE 
 301,33: VARIABLE
 
313 ; 
 301,33: ;
 
198 void 
 302,3: void
 
200 * option_type_qualifier_list option_pointer 
 302,8: *
 
64 NAME VARIABLE 
 302,9: _freeres_buf
 302,21: VARIABLE
 
65 VARIABLE 
 302,21: VARIABLE
 
313 ; 
 302,21: ;
 
198 NAME TYPE 
 303,3: size_t
 303,9: TYPE
 
26 TYPE 
 303,9: TYPE
 
200 NAME VARIABLE 
 303,10: __pad5
 303,16: VARIABLE
 
65 VARIABLE 
 303,16: VARIABLE
 
313 ; 
 303,16: ;
 
198 int 
 304,3: int
 
200 NAME VARIABLE 
 304,7: _mode
 304,12: VARIABLE
 
65 VARIABLE 
 304,12: VARIABLE
 
313 ; 
 304,12: ;
 
198 char 
 306,3: char
 
200 NAME VARIABLE 
 306,8: _unused2
 306,16: VARIABLE
 
65 VARIABLE 
 306,16: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 306,16: [
 306,17: 15
 306,20: *
 306,22: sizeof
 306,29: (
 306,30: int
 306,33: )
 306,35: -
 306,37: 4
 306,39: *
 306,41: sizeof
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 306,57: -
 306,59: sizeof
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 306,74: ]
 
188 CONSTANT 
 306,17: 15
 
151 * 
 306,20: *
 
242 sizeof ( type_name ) 
 306,22: sizeof
 306,29: (
 306,30: int
 306,33: )
 
170 ( type_name ) 
 306,29: (
 306,30: int
 306,33: )
 
276 int 
 306,30: int
 
373 ) 
 306,33: )
 
152 - 
 306,35: -
 
246 CONSTANT 
 306,37: 4
 
357 * 
 306,39: *
 
242 sizeof ( type_name ) 
 306,41: sizeof
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 
170 ( type_name ) 
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 
276 void 
 306,49: void
 
137 * option_type_qualifier_list option_pointer 
 306,54: *
 
373 ) 
 306,55: )
 
152 - 
 306,57: -
 
246 sizeof ( type_name ) 
 306,59: sizeof
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 
170 ( type_name ) 
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 
276 NAME TYPE 
 306,67: size_t
 306,73: TYPE
 
65 TYPE 
 306,73: TYPE
 
373 ) 
 306,73: )
 
305 ] 
 306,74: ]
 
313 ; 
 306,75: ;
 
198 } 
 307,1: }
 
60 ; 
 307,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 310,1: typedef
 310,9: __gnuc_va_list
 310,23: TYPE
 
54 NAME TYPE 
 310,9: __gnuc_va_list
 310,23: TYPE
 
26 TYPE 
 310,23: TYPE
 
6 NAME VARIABLE 
 310,24: va_list
 310,31: VARIABLE
 
65 VARIABLE 
 310,31: VARIABLE
 
70 ; 
 310,31: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 312,1: typedef
 312,9: __off_t
 312,16: TYPE
 
54 NAME TYPE 
 312,9: __off_t
 312,16: TYPE
 
26 TYPE 
 312,16: TYPE
 
6 NAME VARIABLE 
 312,17: off_t
 312,22: VARIABLE
 
65 VARIABLE 
 312,22: VARIABLE
 
70 ; 
 312,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 314,1: typedef
 314,9: __ssize_t
 314,18: TYPE
 
54 NAME TYPE 
 314,9: __ssize_t
 314,18: TYPE
 
26 TYPE 
 314,18: TYPE
 
6 NAME VARIABLE 
 314,19: ssize_t
 314,26: VARIABLE
 
65 VARIABLE 
 314,26: VARIABLE
 
70 ; 
 314,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 321,1: typedef
 321,9: __fpos_t
 321,17: TYPE
 
54 NAME TYPE 
 321,9: __fpos_t
 321,17: TYPE
 
26 TYPE 
 321,17: TYPE
 
6 NAME VARIABLE 
 321,18: fpos_t
 321,24: VARIABLE
 
65 VARIABLE 
 321,24: VARIABLE
 
70 ; 
 321,24: ;
 
23 extern 
 326,1: extern
 
8 NAME TYPE 
 326,8: FILE
 326,12: TYPE
 
26 TYPE 
 326,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 326,13: *
 
64 NAME VARIABLE 
 326,14: stdin
 326,19: VARIABLE
 
65 VARIABLE 
 326,19: VARIABLE
 
60 ; 
 326,19: ;
 
23 extern 
 327,1: extern
 
8 NAME TYPE 
 327,8: FILE
 327,12: TYPE
 
26 TYPE 
 327,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 327,13: *
 
64 NAME VARIABLE 
 327,14: stdout
 327,20: VARIABLE
 
65 VARIABLE 
 327,20: VARIABLE
 
60 ; 
 327,20: ;
 
23 extern 
 328,1: extern
 
8 NAME TYPE 
 328,8: FILE
 328,12: TYPE
 
26 TYPE 
 328,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 328,13: *
 
64 NAME VARIABLE 
 328,14: stderr
 328,20: VARIABLE
 
65 VARIABLE 
 328,20: VARIABLE
 
60 ; 
 328,20: ;
 
23 extern 
 335,1: extern
 
8 int 
 335,8: int
 
5 NAME VARIABLE 
 335,12: remove
 335,18: VARIABLE
 
65 VARIABLE 
 335,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 335,19: (
 335,20: const
 335,26: char
 335,31: *
 335,32: __filename
 335,42: VARIABLE
 335,42: )
 
186 const 
 335,20: const
 
103 char 
 335,26: char
 
298 * option_type_qualifier_list option_pointer 
 335,31: *
 
386 NAME VARIABLE 
 335,32: __filename
 335,42: VARIABLE
 
65 VARIABLE 
 335,42: VARIABLE
 
187 ) 
 335,42: )
 
60 ; 
 335,44: ;
 
23 extern 
 337,1: extern
 
8 int 
 337,8: int
 
5 NAME VARIABLE 
 337,12: rename
 337,18: VARIABLE
 
65 VARIABLE 
 337,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 337,19: (
 337,20: const
 337,26: char
 337,31: *
 337,32: __old
 337,37: VARIABLE
 337,37: ,
 337,39: const
 337,45: char
 337,50: *
 337,51: __new
 337,56: VARIABLE
 337,56: )
 
186 const 
 337,20: const
 
103 char 
 337,26: char
 
298 * option_type_qualifier_list option_pointer 
 337,31: *
 
386 NAME VARIABLE 
 337,32: __old
 337,37: VARIABLE
 
65 VARIABLE 
 337,37: VARIABLE
 
300 , parameter_declaration 
 337,37: ,
 337,39: const
 337,45: char
 337,50: *
 337,51: __new
 337,56: VARIABLE
 
391 const 
 337,39: const
 
103 char 
 337,45: char
 
298 * option_type_qualifier_list option_pointer 
 337,50: *
 
386 NAME VARIABLE 
 337,51: __new
 337,56: VARIABLE
 
65 VARIABLE 
 337,56: VARIABLE
 
187 ) 
 337,56: )
 
60 ; 
 337,58: ;
 
23 extern 
 341,1: extern
 
8 int 
 341,8: int
 
5 NAME VARIABLE 
 341,12: renameat
 341,20: VARIABLE
 
65 VARIABLE 
 341,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 341,21: (
 341,22: int
 341,26: __oldfd
 341,33: VARIABLE
 341,33: ,
 341,35: const
 341,41: char
 341,46: *
 341,47: __old
 341,52: VARIABLE
 341,52: ,
 341,54: int
 341,58: __newfd
 341,65: VARIABLE
 341,65: ,
 342,8: const
 342,14: char
 342,19: *
 342,20: __new
 342,25: VARIABLE
 342,25: )
 
186 int 
 341,22: int
 
298 NAME VARIABLE 
 341,26: __oldfd
 341,33: VARIABLE
 
65 VARIABLE 
 341,33: VARIABLE
 
300 , parameter_declaration 
 341,33: ,
 341,35: const
 341,41: char
 341,46: *
 341,47: __old
 341,52: VARIABLE
 
391 const 
 341,35: const
 
103 char 
 341,41: char
 
298 * option_type_qualifier_list option_pointer 
 341,46: *
 
386 NAME VARIABLE 
 341,47: __old
 341,52: VARIABLE
 
65 VARIABLE 
 341,52: VARIABLE
 
300 , parameter_declaration 
 341,52: ,
 341,54: int
 341,58: __newfd
 341,65: VARIABLE
 
391 int 
 341,54: int
 
298 NAME VARIABLE 
 341,58: __newfd
 341,65: VARIABLE
 
65 VARIABLE 
 341,65: VARIABLE
 
300 , parameter_declaration 
 341,65: ,
 342,8: const
 342,14: char
 342,19: *
 342,20: __new
 342,25: VARIABLE
 
391 const 
 342,8: const
 
103 char 
 342,14: char
 
298 * option_type_qualifier_list option_pointer 
 342,19: *
 
386 NAME VARIABLE 
 342,20: __new
 342,25: VARIABLE
 
65 VARIABLE 
 342,25: VARIABLE
 
187 ) 
 342,25: )
 
60 ; 
 342,27: ;
 
23 extern 
 344,1: extern
 
8 int 
 344,8: int
 
5 NAME VARIABLE 
 344,12: fclose
 344,18: VARIABLE
 
65 VARIABLE 
 344,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 344,19: (
 344,20: FILE
 344,24: TYPE
 344,25: *
 344,26: __stream
 344,34: VARIABLE
 344,34: )
 
186 NAME TYPE 
 344,20: FILE
 344,24: TYPE
 
65 TYPE 
 344,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 344,25: *
 
386 NAME VARIABLE 
 344,26: __stream
 344,34: VARIABLE
 
65 VARIABLE 
 344,34: VARIABLE
 
187 ) 
 344,34: )
 
60 ; 
 344,35: ;
 
23 extern 
 346,1: extern
 
8 NAME TYPE 
 346,8: FILE
 346,12: TYPE
 
26 TYPE 
 346,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 346,13: *
 
64 NAME VARIABLE 
 346,14: tmpfile
 346,21: VARIABLE
 
65 VARIABLE 
 346,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 346,22: (
 346,23: void
 346,27: )
 
186 void 
 346,23: void
 
187 ) 
 346,27: )
 
60 ; 
 347,5: ;
 
23 extern 
 349,1: extern
 
8 char 
 349,8: char
 
5 * option_type_qualifier_list option_pointer 
 349,13: *
 
64 NAME VARIABLE 
 349,14: tmpnam
 349,20: VARIABLE
 
65 VARIABLE 
 349,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 349,21: (
 349,22: char
 349,26: [
 349,27: 20
 349,29: ]
 349,30: )
 
186 char 
 349,22: char
 
231 [ option_assignment_expression ] 
 349,26: [
 349,27: 20
 349,29: ]
 
346 CONSTANT 
 349,27: 20
 
422 ] 
 349,29: ]
 
187 ) 
 349,30: )
 
60 ; 
 349,33: ;
 
23 extern 
 354,1: extern
 
8 char 
 354,8: char
 
5 * option_type_qualifier_list option_pointer 
 354,13: *
 
64 NAME VARIABLE 
 354,14: tmpnam_r
 354,22: VARIABLE
 
65 VARIABLE 
 354,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 354,23: (
 354,24: char
 354,29: __s
 354,32: VARIABLE
 354,32: [
 354,33: 20
 354,35: ]
 354,36: )
 
186 char 
 354,24: char
 
298 NAME VARIABLE 
 354,29: __s
 354,32: VARIABLE
 
65 VARIABLE 
 354,32: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 354,32: [
 354,33: 20
 354,35: ]
 
188 CONSTANT 
 354,33: 20
 
305 ] 
 354,35: ]
 
187 ) 
 354,36: )
 
60 ; 
 354,39: ;
 
23 extern 
 356,1: extern
 
8 char 
 356,8: char
 
5 * option_type_qualifier_list option_pointer 
 356,13: *
 
64 NAME VARIABLE 
 356,14: tempnam
 356,21: VARIABLE
 
65 VARIABLE 
 356,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 356,22: (
 356,23: const
 356,29: char
 356,34: *
 356,35: __dir
 356,40: VARIABLE
 356,40: ,
 356,42: const
 356,48: char
 356,53: *
 356,54: __pfx
 356,59: VARIABLE
 356,59: )
 
186 const 
 356,23: const
 
103 char 
 356,29: char
 
298 * option_type_qualifier_list option_pointer 
 356,34: *
 
386 NAME VARIABLE 
 356,35: __dir
 356,40: VARIABLE
 
65 VARIABLE 
 356,40: VARIABLE
 
300 , parameter_declaration 
 356,40: ,
 356,42: const
 356,48: char
 356,53: *
 356,54: __pfx
 356,59: VARIABLE
 
391 const 
 356,42: const
 
103 char 
 356,48: char
 
298 * option_type_qualifier_list option_pointer 
 356,53: *
 
386 NAME VARIABLE 
 356,54: __pfx
 356,59: VARIABLE
 
65 VARIABLE 
 356,59: VARIABLE
 
187 ) 
 356,59: )
 
60 ; 
 357,6: ;
 
23 extern 
 364,1: extern
 
8 int 
 364,8: int
 
5 NAME VARIABLE 
 364,12: fflush
 364,18: VARIABLE
 
65 VARIABLE 
 364,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 364,19: (
 364,20: FILE
 364,24: TYPE
 364,25: *
 364,26: __stream
 364,34: VARIABLE
 364,34: )
 
186 NAME TYPE 
 364,20: FILE
 364,24: TYPE
 
65 TYPE 
 364,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 364,25: *
 
386 NAME VARIABLE 
 364,26: __stream
 364,34: VARIABLE
 
65 VARIABLE 
 364,34: VARIABLE
 
187 ) 
 364,34: )
 
60 ; 
 364,35: ;
 
23 extern 
 366,1: extern
 
8 int 
 366,8: int
 
5 NAME VARIABLE 
 366,12: fflush_unlocked
 366,27: VARIABLE
 
65 VARIABLE 
 366,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 366,28: (
 366,29: FILE
 366,33: TYPE
 366,34: *
 366,35: __stream
 366,43: VARIABLE
 366,43: )
 
186 NAME TYPE 
 366,29: FILE
 366,33: TYPE
 
65 TYPE 
 366,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 366,34: *
 
386 NAME VARIABLE 
 366,35: __stream
 366,43: VARIABLE
 
65 VARIABLE 
 366,43: VARIABLE
 
187 ) 
 366,43: )
 
60 ; 
 366,44: ;
 
23 extern 
 368,1: extern
 
8 NAME TYPE 
 368,8: FILE
 368,12: TYPE
 
26 TYPE 
 368,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 368,13: *
 
64 NAME VARIABLE 
 368,14: fopen
 368,19: VARIABLE
 
65 VARIABLE 
 368,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 368,20: (
 368,21: const
 368,27: char
 368,32: *
 368,34: __filename
 368,44: VARIABLE
 368,44: ,
 369,7: const
 369,13: char
 369,18: *
 369,20: __modes
 369,27: VARIABLE
 369,27: )
 
186 const 
 368,21: const
 
103 char 
 368,27: char
 
298 * option_type_qualifier_list option_pointer 
 368,32: *
 
386 NAME VARIABLE 
 368,34: __filename
 368,44: VARIABLE
 
65 VARIABLE 
 368,44: VARIABLE
 
300 , parameter_declaration 
 368,44: ,
 369,7: const
 369,13: char
 369,18: *
 369,20: __modes
 369,27: VARIABLE
 
391 const 
 369,7: const
 
103 char 
 369,13: char
 
298 * option_type_qualifier_list option_pointer 
 369,18: *
 
386 NAME VARIABLE 
 369,20: __modes
 369,27: VARIABLE
 
65 VARIABLE 
 369,27: VARIABLE
 
187 ) 
 369,27: )
 
60 ; 
 370,5: ;
 
23 extern 
 375,1: extern
 
8 NAME TYPE 
 375,8: FILE
 375,12: TYPE
 
26 TYPE 
 375,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 375,13: *
 
64 NAME VARIABLE 
 375,14: freopen
 375,21: VARIABLE
 
65 VARIABLE 
 375,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 375,22: (
 375,23: const
 375,29: char
 375,34: *
 375,36: __filename
 375,46: VARIABLE
 375,46: ,
 376,9: const
 376,15: char
 376,20: *
 376,22: __modes
 376,29: VARIABLE
 376,29: ,
 377,9: FILE
 377,13: TYPE
 377,14: *
 377,16: __stream
 377,24: VARIABLE
 377,24: )
 
186 const 
 375,23: const
 
103 char 
 375,29: char
 
298 * option_type_qualifier_list option_pointer 
 375,34: *
 
386 NAME VARIABLE 
 375,36: __filename
 375,46: VARIABLE
 
65 VARIABLE 
 375,46: VARIABLE
 
300 , parameter_declaration 
 375,46: ,
 376,9: const
 376,15: char
 376,20: *
 376,22: __modes
 376,29: VARIABLE
 
391 const 
 376,9: const
 
103 char 
 376,15: char
 
298 * option_type_qualifier_list option_pointer 
 376,20: *
 
386 NAME VARIABLE 
 376,22: __modes
 376,29: VARIABLE
 
65 VARIABLE 
 376,29: VARIABLE
 
300 , parameter_declaration 
 376,29: ,
 377,9: FILE
 377,13: TYPE
 377,14: *
 377,16: __stream
 377,24: VARIABLE
 
391 NAME TYPE 
 377,9: FILE
 377,13: TYPE
 
26 TYPE 
 377,13: TYPE
 
298 * option_type_qualifier_list option_pointer 
 377,14: *
 
386 NAME VARIABLE 
 377,16: __stream
 377,24: VARIABLE
 
65 VARIABLE 
 377,24: VARIABLE
 
187 ) 
 377,24: )
 
60 ; 
 377,26: ;
 
23 extern 
 379,1: extern
 
8 NAME TYPE 
 379,8: FILE
 379,12: TYPE
 
26 TYPE 
 379,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 379,13: *
 
64 NAME VARIABLE 
 379,14: fdopen
 379,20: VARIABLE
 
65 VARIABLE 
 379,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 379,21: (
 379,22: int
 379,26: __fd
 379,30: VARIABLE
 379,30: ,
 379,32: const
 379,38: char
 379,43: *
 379,44: __modes
 379,51: VARIABLE
 379,51: )
 
186 int 
 379,22: int
 
298 NAME VARIABLE 
 379,26: __fd
 379,30: VARIABLE
 
65 VARIABLE 
 379,30: VARIABLE
 
300 , parameter_declaration 
 379,30: ,
 379,32: const
 379,38: char
 379,43: *
 379,44: __modes
 379,51: VARIABLE
 
391 const 
 379,32: const
 
103 char 
 379,38: char
 
298 * option_type_qualifier_list option_pointer 
 379,43: *
 
386 NAME VARIABLE 
 379,44: __modes
 379,51: VARIABLE
 
65 VARIABLE 
 379,51: VARIABLE
 
187 ) 
 379,51: )
 
60 ; 
 380,5: ;
 
23 extern 
 382,1: extern
 
8 NAME TYPE 
 382,8: FILE
 382,12: TYPE
 
26 TYPE 
 382,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 382,13: *
 
64 NAME VARIABLE 
 382,14: fmemopen
 382,22: VARIABLE
 
65 VARIABLE 
 382,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 382,23: (
 382,24: void
 382,29: *
 382,30: __s
 382,33: VARIABLE
 382,33: ,
 382,35: size_t
 382,41: TYPE
 382,42: __len
 382,47: VARIABLE
 382,47: ,
 382,49: const
 382,55: char
 382,60: *
 382,61: __modes
 382,68: VARIABLE
 382,68: )
 
186 void 
 382,24: void
 
298 * option_type_qualifier_list option_pointer 
 382,29: *
 
386 NAME VARIABLE 
 382,30: __s
 382,33: VARIABLE
 
65 VARIABLE 
 382,33: VARIABLE
 
300 , parameter_declaration 
 382,33: ,
 382,35: size_t
 382,41: TYPE
 382,42: __len
 382,47: VARIABLE
 
391 NAME TYPE 
 382,35: size_t
 382,41: TYPE
 
26 TYPE 
 382,41: TYPE
 
298 NAME VARIABLE 
 382,42: __len
 382,47: VARIABLE
 
65 VARIABLE 
 382,47: VARIABLE
 
300 , parameter_declaration 
 382,47: ,
 382,49: const
 382,55: char
 382,60: *
 382,61: __modes
 382,68: VARIABLE
 
391 const 
 382,49: const
 
103 char 
 382,55: char
 
298 * option_type_qualifier_list option_pointer 
 382,60: *
 
386 NAME VARIABLE 
 382,61: __modes
 382,68: VARIABLE
 
65 VARIABLE 
 382,68: VARIABLE
 
187 ) 
 382,68: )
 
60 ; 
 383,6: ;
 
23 extern 
 388,1: extern
 
8 NAME TYPE 
 388,8: FILE
 388,12: TYPE
 
26 TYPE 
 388,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 388,13: *
 
64 NAME VARIABLE 
 388,14: open_memstream
 388,28: VARIABLE
 
65 VARIABLE 
 388,28: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 388,29: (
 388,30: char
 388,35: *
 388,36: *
 388,37: __bufloc
 388,45: VARIABLE
 388,45: ,
 388,47: size_t
 388,53: TYPE
 388,54: *
 388,55: __sizeloc
 388,64: VARIABLE
 388,64: )
 
186 char 
 388,30: char
 
298 * option_type_qualifier_list option_pointer 
 388,35: *
 388,36: *
 
116 * option_type_qualifier_list option_pointer 
 388,36: *
 
386 NAME VARIABLE 
 388,37: __bufloc
 388,45: VARIABLE
 
65 VARIABLE 
 388,45: VARIABLE
 
300 , parameter_declaration 
 388,45: ,
 388,47: size_t
 388,53: TYPE
 388,54: *
 388,55: __sizeloc
 388,64: VARIABLE
 
391 NAME TYPE 
 388,47: size_t
 388,53: TYPE
 
26 TYPE 
 388,53: TYPE
 
298 * option_type_qualifier_list option_pointer 
 388,54: *
 
386 NAME VARIABLE 
 388,55: __sizeloc
 388,64: VARIABLE
 
65 VARIABLE 
 388,64: VARIABLE
 
187 ) 
 388,64: )
 
60 ; 
 389,5: ;
 
23 extern 
 391,1: extern
 
8 void 
 391,8: void
 
5 NAME VARIABLE 
 391,13: setbuf
 391,19: VARIABLE
 
65 VARIABLE 
 391,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 391,20: (
 391,21: FILE
 391,25: TYPE
 391,26: *
 391,28: __stream
 391,36: VARIABLE
 391,36: ,
 391,38: char
 391,43: *
 391,45: __buf
 391,50: VARIABLE
 391,50: )
 
186 NAME TYPE 
 391,21: FILE
 391,25: TYPE
 
65 TYPE 
 391,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 391,26: *
 
386 NAME VARIABLE 
 391,28: __stream
 391,36: VARIABLE
 
65 VARIABLE 
 391,36: VARIABLE
 
300 , parameter_declaration 
 391,36: ,
 391,38: char
 391,43: *
 391,45: __buf
 391,50: VARIABLE
 
391 char 
 391,38: char
 
298 * option_type_qualifier_list option_pointer 
 391,43: *
 
386 NAME VARIABLE 
 391,45: __buf
 391,50: VARIABLE
 
65 VARIABLE 
 391,50: VARIABLE
 
187 ) 
 391,50: )
 
60 ; 
 391,52: ;
 
23 extern 
 395,1: extern
 
8 int 
 395,8: int
 
5 NAME VARIABLE 
 395,12: setvbuf
 395,19: VARIABLE
 
65 VARIABLE 
 395,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 395,20: (
 395,21: FILE
 395,25: TYPE
 395,26: *
 395,28: __stream
 395,36: VARIABLE
 395,36: ,
 395,38: char
 395,43: *
 395,45: __buf
 395,50: VARIABLE
 395,50: ,
 396,7: int
 396,11: __modes
 396,18: VARIABLE
 396,18: ,
 396,20: size_t
 396,26: TYPE
 396,27: __n
 396,30: VARIABLE
 396,30: )
 
186 NAME TYPE 
 395,21: FILE
 395,25: TYPE
 
65 TYPE 
 395,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 395,26: *
 
386 NAME VARIABLE 
 395,28: __stream
 395,36: VARIABLE
 
65 VARIABLE 
 395,36: VARIABLE
 
300 , parameter_declaration 
 395,36: ,
 395,38: char
 395,43: *
 395,45: __buf
 395,50: VARIABLE
 
391 char 
 395,38: char
 
298 * option_type_qualifier_list option_pointer 
 395,43: *
 
386 NAME VARIABLE 
 395,45: __buf
 395,50: VARIABLE
 
65 VARIABLE 
 395,50: VARIABLE
 
300 , parameter_declaration 
 395,50: ,
 396,7: int
 396,11: __modes
 396,18: VARIABLE
 
391 int 
 396,7: int
 
298 NAME VARIABLE 
 396,11: __modes
 396,18: VARIABLE
 
65 VARIABLE 
 396,18: VARIABLE
 
300 , parameter_declaration 
 396,18: ,
 396,20: size_t
 396,26: TYPE
 396,27: __n
 396,30: VARIABLE
 
391 NAME TYPE 
 396,20: size_t
 396,26: TYPE
 
26 TYPE 
 396,26: TYPE
 
298 NAME VARIABLE 
 396,27: __n
 396,30: VARIABLE
 
65 VARIABLE 
 396,30: VARIABLE
 
187 ) 
 396,30: )
 
60 ; 
 396,32: ;
 
23 extern 
 401,1: extern
 
8 void 
 401,8: void
 
5 NAME VARIABLE 
 401,13: setbuffer
 401,22: VARIABLE
 
65 VARIABLE 
 401,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 401,23: (
 401,24: FILE
 401,28: TYPE
 401,29: *
 401,31: __stream
 401,39: VARIABLE
 401,39: ,
 401,41: char
 401,46: *
 401,48: __buf
 401,53: VARIABLE
 401,53: ,
 402,10: size_t
 402,16: TYPE
 402,17: __size
 402,23: VARIABLE
 402,23: )
 
186 NAME TYPE 
 401,24: FILE
 401,28: TYPE
 
65 TYPE 
 401,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 401,29: *
 
386 NAME VARIABLE 
 401,31: __stream
 401,39: VARIABLE
 
65 VARIABLE 
 401,39: VARIABLE
 
300 , parameter_declaration 
 401,39: ,
 401,41: char
 401,46: *
 401,48: __buf
 401,53: VARIABLE
 
391 char 
 401,41: char
 
298 * option_type_qualifier_list option_pointer 
 401,46: *
 
386 NAME VARIABLE 
 401,48: __buf
 401,53: VARIABLE
 
65 VARIABLE 
 401,53: VARIABLE
 
300 , parameter_declaration 
 401,53: ,
 402,10: size_t
 402,16: TYPE
 402,17: __size
 402,23: VARIABLE
 
391 NAME TYPE 
 402,10: size_t
 402,16: TYPE
 
26 TYPE 
 402,16: TYPE
 
298 NAME VARIABLE 
 402,17: __size
 402,23: VARIABLE
 
65 VARIABLE 
 402,23: VARIABLE
 
187 ) 
 402,23: )
 
60 ; 
 402,25: ;
 
23 extern 
 405,1: extern
 
8 void 
 405,8: void
 
5 NAME VARIABLE 
 405,13: setlinebuf
 405,23: VARIABLE
 
65 VARIABLE 
 405,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 405,24: (
 405,25: FILE
 405,29: TYPE
 405,30: *
 405,31: __stream
 405,39: VARIABLE
 405,39: )
 
186 NAME TYPE 
 405,25: FILE
 405,29: TYPE
 
65 TYPE 
 405,29: TYPE
 
298 * option_type_qualifier_list option_pointer 
 405,30: *
 
386 NAME VARIABLE 
 405,31: __stream
 405,39: VARIABLE
 
65 VARIABLE 
 405,39: VARIABLE
 
187 ) 
 405,39: )
 
60 ; 
 405,41: ;
 
23 extern 
 413,1: extern
 
8 int 
 413,8: int
 
5 NAME VARIABLE 
 413,12: fprintf
 413,19: VARIABLE
 
65 VARIABLE 
 413,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 413,20: (
 413,21: FILE
 413,25: TYPE
 413,26: *
 413,28: __stream
 413,36: VARIABLE
 413,36: ,
 414,7: const
 414,13: char
 414,18: *
 414,20: __format
 414,28: VARIABLE
 414,28: ,
 414,30: ...
 414,33: )
 
186 NAME TYPE 
 413,21: FILE
 413,25: TYPE
 
65 TYPE 
 413,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 413,26: *
 
386 NAME VARIABLE 
 413,28: __stream
 413,36: VARIABLE
 
65 VARIABLE 
 413,36: VARIABLE
 
300 , parameter_declaration 
 413,36: ,
 414,7: const
 414,13: char
 414,18: *
 414,20: __format
 414,28: VARIABLE
 
391 const 
 414,7: const
 
103 char 
 414,13: char
 
298 * option_type_qualifier_list option_pointer 
 414,18: *
 
386 NAME VARIABLE 
 414,20: __format
 414,28: VARIABLE
 
65 VARIABLE 
 414,28: VARIABLE
 
300 , ... 
 414,28: ,
 414,30: ...
 
391 ... 
 414,30: ...
 
187 ) 
 414,33: )
 
60 ; 
 414,34: ;
 
23 extern 
 419,1: extern
 
8 int 
 419,8: int
 
5 NAME VARIABLE 
 419,12: printf
 419,18: VARIABLE
 
65 VARIABLE 
 419,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 419,19: (
 419,20: const
 419,26: char
 419,31: *
 419,33: __format
 419,41: VARIABLE
 419,41: ,
 419,43: ...
 419,46: )
 
186 const 
 419,20: const
 
103 char 
 419,26: char
 
298 * option_type_qualifier_list option_pointer 
 419,31: *
 
386 NAME VARIABLE 
 419,33: __format
 419,41: VARIABLE
 
65 VARIABLE 
 419,41: VARIABLE
 
300 , ... 
 419,41: ,
 419,43: ...
 
391 ... 
 419,43: ...
 
187 ) 
 419,46: )
 
60 ; 
 419,47: ;
 
23 extern 
 421,1: extern
 
8 int 
 421,8: int
 
5 NAME VARIABLE 
 421,12: sprintf
 421,19: VARIABLE
 
65 VARIABLE 
 421,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 421,20: (
 421,21: char
 421,26: *
 421,28: __s
 421,31: VARIABLE
 421,31: ,
 422,7: const
 422,13: char
 422,18: *
 422,20: __format
 422,28: VARIABLE
 422,28: ,
 422,30: ...
 422,33: )
 
186 char 
 421,21: char
 
298 * option_type_qualifier_list option_pointer 
 421,26: *
 
386 NAME VARIABLE 
 421,28: __s
 421,31: VARIABLE
 
65 VARIABLE 
 421,31: VARIABLE
 
300 , parameter_declaration 
 421,31: ,
 422,7: const
 422,13: char
 422,18: *
 422,20: __format
 422,28: VARIABLE
 
391 const 
 422,7: const
 
103 char 
 422,13: char
 
298 * option_type_qualifier_list option_pointer 
 422,18: *
 
386 NAME VARIABLE 
 422,20: __format
 422,28: VARIABLE
 
65 VARIABLE 
 422,28: VARIABLE
 
300 , ... 
 422,28: ,
 422,30: ...
 
391 ... 
 422,30: ...
 
187 ) 
 422,33: )
 
60 ; 
 422,35: ;
 
23 extern 
 428,1: extern
 
8 int 
 428,8: int
 
5 NAME VARIABLE 
 428,12: vfprintf
 428,20: VARIABLE
 
65 VARIABLE 
 428,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 428,21: (
 428,22: FILE
 428,26: TYPE
 428,27: *
 428,29: __s
 428,32: VARIABLE
 428,32: ,
 428,34: const
 428,40: char
 428,45: *
 428,47: __format
 428,55: VARIABLE
 428,55: ,
 429,8: __gnuc_va_list
 429,22: TYPE
 429,23: __arg
 429,28: VARIABLE
 429,28: )
 
186 NAME TYPE 
 428,22: FILE
 428,26: TYPE
 
65 TYPE 
 428,26: TYPE
 
298 * option_type_qualifier_list option_pointer 
 428,27: *
 
386 NAME VARIABLE 
 428,29: __s
 428,32: VARIABLE
 
65 VARIABLE 
 428,32: VARIABLE
 
300 , parameter_declaration 
 428,32: ,
 428,34: const
 428,40: char
 428,45: *
 428,47: __format
 428,55: VARIABLE
 
391 const 
 428,34: const
 
103 char 
 428,40: char
 
298 * option_type_qualifier_list option_pointer 
 428,45: *
 
386 NAME VARIABLE 
 428,47: __format
 428,55: VARIABLE
 
65 VARIABLE 
 428,55: VARIABLE
 
300 , parameter_declaration 
 428,55: ,
 429,8: __gnuc_va_list
 429,22: TYPE
 429,23: __arg
 429,28: VARIABLE
 
391 NAME TYPE 
 429,8: __gnuc_va_list
 429,22: TYPE
 
26 TYPE 
 429,22: TYPE
 
298 NAME VARIABLE 
 429,23: __arg
 429,28: VARIABLE
 
65 VARIABLE 
 429,28: VARIABLE
 
187 ) 
 429,28: )
 
60 ; 
 429,29: ;
 
23 extern 
 434,1: extern
 
8 int 
 434,8: int
 
5 NAME VARIABLE 
 434,12: vprintf
 434,19: VARIABLE
 
65 VARIABLE 
 434,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 434,20: (
 434,21: const
 434,27: char
 434,32: *
 434,34: __format
 434,42: VARIABLE
 434,42: ,
 434,44: __gnuc_va_list
 434,58: TYPE
 434,59: __arg
 434,64: VARIABLE
 434,64: )
 
186 const 
 434,21: const
 
103 char 
 434,27: char
 
298 * option_type_qualifier_list option_pointer 
 434,32: *
 
386 NAME VARIABLE 
 434,34: __format
 434,42: VARIABLE
 
65 VARIABLE 
 434,42: VARIABLE
 
300 , parameter_declaration 
 434,42: ,
 434,44: __gnuc_va_list
 434,58: TYPE
 434,59: __arg
 434,64: VARIABLE
 
391 NAME TYPE 
 434,44: __gnuc_va_list
 434,58: TYPE
 
26 TYPE 
 434,58: TYPE
 
298 NAME VARIABLE 
 434,59: __arg
 434,64: VARIABLE
 
65 VARIABLE 
 434,64: VARIABLE
 
187 ) 
 434,64: )
 
60 ; 
 434,65: ;
 
23 extern 
 436,1: extern
 
8 int 
 436,8: int
 
5 NAME VARIABLE 
 436,12: vsprintf
 436,20: VARIABLE
 
65 VARIABLE 
 436,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 436,21: (
 436,22: char
 436,27: *
 436,29: __s
 436,32: VARIABLE
 436,32: ,
 436,34: const
 436,40: char
 436,45: *
 436,47: __format
 436,55: VARIABLE
 436,55: ,
 437,8: __gnuc_va_list
 437,22: TYPE
 437,23: __arg
 437,28: VARIABLE
 437,28: )
 
186 char 
 436,22: char
 
298 * option_type_qualifier_list option_pointer 
 436,27: *
 
386 NAME VARIABLE 
 436,29: __s
 436,32: VARIABLE
 
65 VARIABLE 
 436,32: VARIABLE
 
300 , parameter_declaration 
 436,32: ,
 436,34: const
 436,40: char
 436,45: *
 436,47: __format
 436,55: VARIABLE
 
391 const 
 436,34: const
 
103 char 
 436,40: char
 
298 * option_type_qualifier_list option_pointer 
 436,45: *
 
386 NAME VARIABLE 
 436,47: __format
 436,55: VARIABLE
 
65 VARIABLE 
 436,55: VARIABLE
 
300 , parameter_declaration 
 436,55: ,
 437,8: __gnuc_va_list
 437,22: TYPE
 437,23: __arg
 437,28: VARIABLE
 
391 NAME TYPE 
 437,8: __gnuc_va_list
 437,22: TYPE
 
26 TYPE 
 437,22: TYPE
 
298 NAME VARIABLE 
 437,23: __arg
 437,28: VARIABLE
 
65 VARIABLE 
 437,28: VARIABLE
 
187 ) 
 437,28: )
 
60 ; 
 437,30: ;
 
23 extern 
 441,1: extern
 
8 int 
 441,8: int
 
5 NAME VARIABLE 
 441,12: snprintf
 441,20: VARIABLE
 
65 VARIABLE 
 441,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 441,21: (
 441,22: char
 441,27: *
 441,29: __s
 441,32: VARIABLE
 441,32: ,
 441,34: size_t
 441,40: TYPE
 441,41: __maxlen
 441,49: VARIABLE
 441,49: ,
 442,8: const
 442,14: char
 442,19: *
 442,21: __format
 442,29: VARIABLE
 442,29: ,
 442,31: ...
 442,34: )
 
186 char 
 441,22: char
 
298 * option_type_qualifier_list option_pointer 
 441,27: *
 
386 NAME VARIABLE 
 441,29: __s
 441,32: VARIABLE
 
65 VARIABLE 
 441,32: VARIABLE
 
300 , parameter_declaration 
 441,32: ,
 441,34: size_t
 441,40: TYPE
 441,41: __maxlen
 441,49: VARIABLE
 
391 NAME TYPE 
 441,34: size_t
 441,40: TYPE
 
26 TYPE 
 441,40: TYPE
 
298 NAME VARIABLE 
 441,41: __maxlen
 441,49: VARIABLE
 
65 VARIABLE 
 441,49: VARIABLE
 
300 , parameter_declaration 
 441,49: ,
 442,8: const
 442,14: char
 442,19: *
 442,21: __format
 442,29: VARIABLE
 
391 const 
 442,8: const
 
103 char 
 442,14: char
 
298 * option_type_qualifier_list option_pointer 
 442,19: *
 
386 NAME VARIABLE 
 442,21: __format
 442,29: VARIABLE
 
65 VARIABLE 
 442,29: VARIABLE
 
300 , ... 
 442,29: ,
 442,31: ...
 
391 ... 
 442,31: ...
 
187 ) 
 442,34: )
 
60 ; 
 443,7: ;
 
23 extern 
 445,1: extern
 
8 int 
 445,8: int
 
5 NAME VARIABLE 
 445,12: vsnprintf
 445,21: VARIABLE
 
65 VARIABLE 
 445,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 445,22: (
 445,23: char
 445,28: *
 445,30: __s
 445,33: VARIABLE
 445,33: ,
 445,35: size_t
 445,41: TYPE
 445,42: __maxlen
 445,50: VARIABLE
 445,50: ,
 446,9: const
 446,15: char
 446,20: *
 446,22: __format
 446,30: VARIABLE
 446,30: ,
 446,32: __gnuc_va_list
 446,46: TYPE
 446,47: __arg
 446,52: VARIABLE
 446,52: )
 
186 char 
 445,23: char
 
298 * option_type_qualifier_list option_pointer 
 445,28: *
 
386 NAME VARIABLE 
 445,30: __s
 445,33: VARIABLE
 
65 VARIABLE 
 445,33: VARIABLE
 
300 , parameter_declaration 
 445,33: ,
 445,35: size_t
 445,41: TYPE
 445,42: __maxlen
 445,50: VARIABLE
 
391 NAME TYPE 
 445,35: size_t
 445,41: TYPE
 
26 TYPE 
 445,41: TYPE
 
298 NAME VARIABLE 
 445,42: __maxlen
 445,50: VARIABLE
 
65 VARIABLE 
 445,50: VARIABLE
 
300 , parameter_declaration 
 445,50: ,
 446,9: const
 446,15: char
 446,20: *
 446,22: __format
 446,30: VARIABLE
 
391 const 
 446,9: const
 
103 char 
 446,15: char
 
298 * option_type_qualifier_list option_pointer 
 446,20: *
 
386 NAME VARIABLE 
 446,22: __format
 446,30: VARIABLE
 
65 VARIABLE 
 446,30: VARIABLE
 
300 , parameter_declaration 
 446,30: ,
 446,32: __gnuc_va_list
 446,46: TYPE
 446,47: __arg
 446,52: VARIABLE
 
391 NAME TYPE 
 446,32: __gnuc_va_list
 446,46: TYPE
 
26 TYPE 
 446,46: TYPE
 
298 NAME VARIABLE 
 446,47: __arg
 446,52: VARIABLE
 
65 VARIABLE 
 446,52: VARIABLE
 
187 ) 
 446,52: )
 
60 ; 
 447,7: ;
 
23 extern 
 449,1: extern
 
8 int 
 449,8: int
 
5 NAME VARIABLE 
 449,12: vdprintf
 449,20: VARIABLE
 
65 VARIABLE 
 449,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 449,21: (
 449,22: int
 449,26: __fd
 449,30: VARIABLE
 449,30: ,
 449,32: const
 449,38: char
 449,43: *
 449,45: __fmt
 449,50: VARIABLE
 449,50: ,
 450,8: __gnuc_va_list
 450,22: TYPE
 450,23: __arg
 450,28: VARIABLE
 450,28: )
 
186 int 
 449,22: int
 
298 NAME VARIABLE 
 449,26: __fd
 449,30: VARIABLE
 
65 VARIABLE 
 449,30: VARIABLE
 
300 , parameter_declaration 
 449,30: ,
 449,32: const
 449,38: char
 449,43: *
 449,45: __fmt
 449,50: VARIABLE
 
391 const 
 449,32: const
 
103 char 
 449,38: char
 
298 * option_type_qualifier_list option_pointer 
 449,43: *
 
386 NAME VARIABLE 
 449,45: __fmt
 449,50: VARIABLE
 
65 VARIABLE 
 449,50: VARIABLE
 
300 , parameter_declaration 
 449,50: ,
 450,8: __gnuc_va_list
 450,22: TYPE
 450,23: __arg
 450,28: VARIABLE
 
391 NAME TYPE 
 450,8: __gnuc_va_list
 450,22: TYPE
 
26 TYPE 
 450,22: TYPE
 
298 NAME VARIABLE 
 450,23: __arg
 450,28: VARIABLE
 
65 VARIABLE 
 450,28: VARIABLE
 
187 ) 
 450,28: )
 
60 ; 
 451,6: ;
 
23 extern 
 452,1: extern
 
8 int 
 452,8: int
 
5 NAME VARIABLE 
 452,12: dprintf
 452,19: VARIABLE
 
65 VARIABLE 
 452,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 452,20: (
 452,21: int
 452,25: __fd
 452,29: VARIABLE
 452,29: ,
 452,31: const
 452,37: char
 452,42: *
 452,44: __fmt
 452,49: VARIABLE
 452,49: ,
 452,51: ...
 452,54: )
 
186 int 
 452,21: int
 
298 NAME VARIABLE 
 452,25: __fd
 452,29: VARIABLE
 
65 VARIABLE 
 452,29: VARIABLE
 
300 , parameter_declaration 
 452,29: ,
 452,31: const
 452,37: char
 452,42: *
 452,44: __fmt
 452,49: VARIABLE
 
391 const 
 452,31: const
 
103 char 
 452,37: char
 
298 * option_type_qualifier_list option_pointer 
 452,42: *
 
386 NAME VARIABLE 
 452,44: __fmt
 452,49: VARIABLE
 
65 VARIABLE 
 452,49: VARIABLE
 
300 , ... 
 452,49: ,
 452,51: ...
 
391 ... 
 452,51: ...
 
187 ) 
 452,54: )
 
60 ; 
 453,6: ;
 
23 extern 
 461,1: extern
 
8 int 
 461,8: int
 
5 NAME VARIABLE 
 461,12: fscanf
 461,18: VARIABLE
 
65 VARIABLE 
 461,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 461,19: (
 461,20: FILE
 461,24: TYPE
 461,25: *
 461,27: __stream
 461,35: VARIABLE
 461,35: ,
 462,6: const
 462,12: char
 462,17: *
 462,19: __format
 462,27: VARIABLE
 462,27: ,
 462,29: ...
 462,32: )
 
186 NAME TYPE 
 461,20: FILE
 461,24: TYPE
 
65 TYPE 
 461,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 461,25: *
 
386 NAME VARIABLE 
 461,27: __stream
 461,35: VARIABLE
 
65 VARIABLE 
 461,35: VARIABLE
 
300 , parameter_declaration 
 461,35: ,
 462,6: const
 462,12: char
 462,17: *
 462,19: __format
 462,27: VARIABLE
 
391 const 
 462,6: const
 
103 char 
 462,12: char
 
298 * option_type_qualifier_list option_pointer 
 462,17: *
 
386 NAME VARIABLE 
 462,19: __format
 462,27: VARIABLE
 
65 VARIABLE 
 462,27: VARIABLE
 
300 , ... 
 462,27: ,
 462,29: ...
 
391 ... 
 462,29: ...
 
187 ) 
 462,32: )
 
60 ; 
 462,34: ;
 
23 extern 
 467,1: extern
 
8 int 
 467,8: int
 
5 NAME VARIABLE 
 467,12: scanf
 467,17: VARIABLE
 
65 VARIABLE 
 467,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 467,18: (
 467,19: const
 467,25: char
 467,30: *
 467,32: __format
 467,40: VARIABLE
 467,40: ,
 467,42: ...
 467,45: )
 
186 const 
 467,19: const
 
103 char 
 467,25: char
 
298 * option_type_qualifier_list option_pointer 
 467,30: *
 
386 NAME VARIABLE 
 467,32: __format
 467,40: VARIABLE
 
65 VARIABLE 
 467,40: VARIABLE
 
300 , ... 
 467,40: ,
 467,42: ...
 
391 ... 
 467,42: ...
 
187 ) 
 467,45: )
 
60 ; 
 467,47: ;
 
23 extern 
 469,1: extern
 
8 int 
 469,8: int
 
5 NAME VARIABLE 
 469,12: sscanf
 469,18: VARIABLE
 
65 VARIABLE 
 469,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 469,19: (
 469,20: const
 469,26: char
 469,31: *
 469,33: __s
 469,36: VARIABLE
 469,36: ,
 470,6: const
 470,12: char
 470,17: *
 470,19: __format
 470,27: VARIABLE
 470,27: ,
 470,29: ...
 470,32: )
 
186 const 
 469,20: const
 
103 char 
 469,26: char
 
298 * option_type_qualifier_list option_pointer 
 469,31: *
 
386 NAME VARIABLE 
 469,33: __s
 469,36: VARIABLE
 
65 VARIABLE 
 469,36: VARIABLE
 
300 , parameter_declaration 
 469,36: ,
 470,6: const
 470,12: char
 470,17: *
 470,19: __format
 470,27: VARIABLE
 
391 const 
 470,6: const
 
103 char 
 470,12: char
 
298 * option_type_qualifier_list option_pointer 
 470,17: *
 
386 NAME VARIABLE 
 470,19: __format
 470,27: VARIABLE
 
65 VARIABLE 
 470,27: VARIABLE
 
300 , ... 
 470,27: ,
 470,29: ...
 
391 ... 
 470,29: ...
 
187 ) 
 470,32: )
 
60 ; 
 470,34: ;
 
23 extern 
 487,1: extern
 
8 int 
 487,8: int
 
5 NAME VARIABLE 
 487,12: fscanf
 487,18: VARIABLE
 
65 VARIABLE 
 487,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 487,19: (
 487,20: FILE
 487,24: TYPE
 487,25: *
 487,27: __stream
 487,35: VARIABLE
 487,35: ,
 487,37: const
 487,43: char
 487,48: *
 487,50: __format
 487,58: VARIABLE
 487,58: ,
 487,60: ...
 487,63: )
 
186 NAME TYPE 
 487,20: FILE
 487,24: TYPE
 
65 TYPE 
 487,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 487,25: *
 
386 NAME VARIABLE 
 487,27: __stream
 487,35: VARIABLE
 
65 VARIABLE 
 487,35: VARIABLE
 
300 , parameter_declaration 
 487,35: ,
 487,37: const
 487,43: char
 487,48: *
 487,50: __format
 487,58: VARIABLE
 
391 const 
 487,37: const
 
103 char 
 487,43: char
 
298 * option_type_qualifier_list option_pointer 
 487,48: *
 
386 NAME VARIABLE 
 487,50: __format
 487,58: VARIABLE
 
65 VARIABLE 
 487,58: VARIABLE
 
300 , ... 
 487,58: ,
 487,60: ...
 
391 ... 
 487,60: ...
 
187 ) 
 487,63: )
 
60 ; 
 489,32: ;
 
23 extern 
 490,1: extern
 
8 int 
 490,8: int
 
5 NAME VARIABLE 
 490,12: scanf
 490,17: VARIABLE
 
65 VARIABLE 
 490,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 490,18: (
 490,19: const
 490,25: char
 490,30: *
 490,32: __format
 490,40: VARIABLE
 490,40: ,
 490,42: ...
 490,45: )
 
186 const 
 490,19: const
 
103 char 
 490,25: char
 
298 * option_type_qualifier_list option_pointer 
 490,30: *
 
386 NAME VARIABLE 
 490,32: __format
 490,40: VARIABLE
 
65 VARIABLE 
 490,40: VARIABLE
 
300 , ... 
 490,40: ,
 490,42: ...
 
391 ... 
 490,42: ...
 
187 ) 
 490,45: )
 
60 ; 
 491,31: ;
 
23 extern 
 492,1: extern
 
8 int 
 492,8: int
 
5 NAME VARIABLE 
 492,12: sscanf
 492,18: VARIABLE
 
65 VARIABLE 
 492,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 492,19: (
 492,20: const
 492,26: char
 492,31: *
 492,33: __s
 492,36: VARIABLE
 492,36: ,
 492,38: const
 492,44: char
 492,49: *
 492,51: __format
 492,59: VARIABLE
 492,59: ,
 492,61: ...
 492,64: )
 
186 const 
 492,20: const
 
103 char 
 492,26: char
 
298 * option_type_qualifier_list option_pointer 
 492,31: *
 
386 NAME VARIABLE 
 492,33: __s
 492,36: VARIABLE
 
65 VARIABLE 
 492,36: VARIABLE
 
300 , parameter_declaration 
 492,36: ,
 492,38: const
 492,44: char
 492,49: *
 492,51: __format
 492,59: VARIABLE
 
391 const 
 492,38: const
 
103 char 
 492,44: char
 
298 * option_type_qualifier_list option_pointer 
 492,49: *
 
386 NAME VARIABLE 
 492,51: __format
 492,59: VARIABLE
 
65 VARIABLE 
 492,59: VARIABLE
 
300 , ... 
 492,59: ,
 492,61: ...
 
391 ... 
 492,61: ...
 
187 ) 
 492,64: )
 
60 ; 
 494,23: ;
 
23 extern 
 496,1: extern
 
8 int 
 496,8: int
 
5 NAME VARIABLE 
 496,12: vfscanf
 496,19: VARIABLE
 
65 VARIABLE 
 496,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 496,20: (
 496,21: FILE
 496,25: TYPE
 496,26: *
 496,28: __s
 496,31: VARIABLE
 496,31: ,
 496,33: const
 496,39: char
 496,44: *
 496,46: __format
 496,54: VARIABLE
 496,54: ,
 497,7: __gnuc_va_list
 497,21: TYPE
 497,22: __arg
 497,27: VARIABLE
 497,27: )
 
186 NAME TYPE 
 496,21: FILE
 496,25: TYPE
 
65 TYPE 
 496,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 496,26: *
 
386 NAME VARIABLE 
 496,28: __s
 496,31: VARIABLE
 
65 VARIABLE 
 496,31: VARIABLE
 
300 , parameter_declaration 
 496,31: ,
 496,33: const
 496,39: char
 496,44: *
 496,46: __format
 496,54: VARIABLE
 
391 const 
 496,33: const
 
103 char 
 496,39: char
 
298 * option_type_qualifier_list option_pointer 
 496,44: *
 
386 NAME VARIABLE 
 496,46: __format
 496,54: VARIABLE
 
65 VARIABLE 
 496,54: VARIABLE
 
300 , parameter_declaration 
 496,54: ,
 497,7: __gnuc_va_list
 497,21: TYPE
 497,22: __arg
 497,27: VARIABLE
 
391 NAME TYPE 
 497,7: __gnuc_va_list
 497,21: TYPE
 
26 TYPE 
 497,21: TYPE
 
298 NAME VARIABLE 
 497,22: __arg
 497,27: VARIABLE
 
65 VARIABLE 
 497,27: VARIABLE
 
187 ) 
 497,27: )
 
60 ; 
 498,7: ;
 
23 extern 
 504,1: extern
 
8 int 
 504,8: int
 
5 NAME VARIABLE 
 504,12: vscanf
 504,18: VARIABLE
 
65 VARIABLE 
 504,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 504,19: (
 504,20: const
 504,26: char
 504,31: *
 504,33: __format
 504,41: VARIABLE
 504,41: ,
 504,43: __gnuc_va_list
 504,57: TYPE
 504,58: __arg
 504,63: VARIABLE
 504,63: )
 
186 const 
 504,20: const
 
103 char 
 504,26: char
 
298 * option_type_qualifier_list option_pointer 
 504,31: *
 
386 NAME VARIABLE 
 504,33: __format
 504,41: VARIABLE
 
65 VARIABLE 
 504,41: VARIABLE
 
300 , parameter_declaration 
 504,41: ,
 504,43: __gnuc_va_list
 504,57: TYPE
 504,58: __arg
 504,63: VARIABLE
 
391 NAME TYPE 
 504,43: __gnuc_va_list
 504,57: TYPE
 
26 TYPE 
 504,57: TYPE
 
298 NAME VARIABLE 
 504,58: __arg
 504,63: VARIABLE
 
65 VARIABLE 
 504,63: VARIABLE
 
187 ) 
 504,63: )
 
60 ; 
 505,7: ;
 
23 extern 
 508,1: extern
 
8 int 
 508,8: int
 
5 NAME VARIABLE 
 508,12: vsscanf
 508,19: VARIABLE
 
65 VARIABLE 
 508,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 508,20: (
 508,21: const
 508,27: char
 508,32: *
 508,34: __s
 508,37: VARIABLE
 508,37: ,
 509,7: const
 509,13: char
 509,18: *
 509,20: __format
 509,28: VARIABLE
 509,28: ,
 509,30: __gnuc_va_list
 509,44: TYPE
 509,45: __arg
 509,50: VARIABLE
 509,50: )
 
186 const 
 508,21: const
 
103 char 
 508,27: char
 
298 * option_type_qualifier_list option_pointer 
 508,32: *
 
386 NAME VARIABLE 
 508,34: __s
 508,37: VARIABLE
 
65 VARIABLE 
 508,37: VARIABLE
 
300 , parameter_declaration 
 508,37: ,
 509,7: const
 509,13: char
 509,18: *
 509,20: __format
 509,28: VARIABLE
 
391 const 
 509,7: const
 
103 char 
 509,13: char
 
298 * option_type_qualifier_list option_pointer 
 509,18: *
 
386 NAME VARIABLE 
 509,20: __format
 509,28: VARIABLE
 
65 VARIABLE 
 509,28: VARIABLE
 
300 , parameter_declaration 
 509,28: ,
 509,30: __gnuc_va_list
 509,44: TYPE
 509,45: __arg
 509,50: VARIABLE
 
391 NAME TYPE 
 509,30: __gnuc_va_list
 509,44: TYPE
 
26 TYPE 
 509,44: TYPE
 
298 NAME VARIABLE 
 509,45: __arg
 509,50: VARIABLE
 
65 VARIABLE 
 509,50: VARIABLE
 
187 ) 
 509,50: )
 
60 ; 
 510,7: ;
 
23 extern 
 516,1: extern
 
8 int 
 516,8: int
 
5 NAME VARIABLE 
 516,12: vfscanf
 516,19: VARIABLE
 
65 VARIABLE 
 516,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 516,20: (
 516,21: FILE
 516,25: TYPE
 516,26: *
 516,28: __s
 516,31: VARIABLE
 516,31: ,
 516,33: const
 516,39: char
 516,44: *
 516,46: __format
 516,54: VARIABLE
 516,54: ,
 516,56: __gnuc_va_list
 516,70: TYPE
 516,71: __arg
 516,76: VARIABLE
 516,76: )
 
186 NAME TYPE 
 516,21: FILE
 516,25: TYPE
 
65 TYPE 
 516,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 516,26: *
 
386 NAME VARIABLE 
 516,28: __s
 516,31: VARIABLE
 
65 VARIABLE 
 516,31: VARIABLE
 
300 , parameter_declaration 
 516,31: ,
 516,33: const
 516,39: char
 516,44: *
 516,46: __format
 516,54: VARIABLE
 
391 const 
 516,33: const
 
103 char 
 516,39: char
 
298 * option_type_qualifier_list option_pointer 
 516,44: *
 
386 NAME VARIABLE 
 516,46: __format
 516,54: VARIABLE
 
65 VARIABLE 
 516,54: VARIABLE
 
300 , parameter_declaration 
 516,54: ,
 516,56: __gnuc_va_list
 516,70: TYPE
 516,71: __arg
 516,76: VARIABLE
 
391 NAME TYPE 
 516,56: __gnuc_va_list
 516,70: TYPE
 
26 TYPE 
 516,70: TYPE
 
298 NAME VARIABLE 
 516,71: __arg
 516,76: VARIABLE
 
65 VARIABLE 
 516,76: VARIABLE
 
187 ) 
 516,76: )
 
60 ; 
 520,7: ;
 
23 extern 
 521,1: extern
 
8 int 
 521,8: int
 
5 NAME VARIABLE 
 521,12: vscanf
 521,18: VARIABLE
 
65 VARIABLE 
 521,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 521,19: (
 521,20: const
 521,26: char
 521,31: *
 521,33: __format
 521,41: VARIABLE
 521,41: ,
 521,43: __gnuc_va_list
 521,57: TYPE
 521,58: __arg
 521,63: VARIABLE
 521,63: )
 
186 const 
 521,20: const
 
103 char 
 521,26: char
 
298 * option_type_qualifier_list option_pointer 
 521,31: *
 
386 NAME VARIABLE 
 521,33: __format
 521,41: VARIABLE
 
65 VARIABLE 
 521,41: VARIABLE
 
300 , parameter_declaration 
 521,41: ,
 521,43: __gnuc_va_list
 521,57: TYPE
 521,58: __arg
 521,63: VARIABLE
 
391 NAME TYPE 
 521,43: __gnuc_va_list
 521,57: TYPE
 
26 TYPE 
 521,57: TYPE
 
298 NAME VARIABLE 
 521,58: __arg
 521,63: VARIABLE
 
65 VARIABLE 
 521,63: VARIABLE
 
187 ) 
 521,63: )
 
60 ; 
 523,7: ;
 
23 extern 
 524,1: extern
 
8 int 
 524,8: int
 
5 NAME VARIABLE 
 524,12: vsscanf
 524,19: VARIABLE
 
65 VARIABLE 
 524,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 524,20: (
 524,21: const
 524,27: char
 524,32: *
 524,34: __s
 524,37: VARIABLE
 524,37: ,
 524,39: const
 524,45: char
 524,50: *
 524,52: __format
 524,60: VARIABLE
 524,60: ,
 524,62: __gnuc_va_list
 524,76: TYPE
 524,77: __arg
 524,82: VARIABLE
 524,82: )
 
186 const 
 524,21: const
 
103 char 
 524,27: char
 
298 * option_type_qualifier_list option_pointer 
 524,32: *
 
386 NAME VARIABLE 
 524,34: __s
 524,37: VARIABLE
 
65 VARIABLE 
 524,37: VARIABLE
 
300 , parameter_declaration 
 524,37: ,
 524,39: const
 524,45: char
 524,50: *
 524,52: __format
 524,60: VARIABLE
 
391 const 
 524,39: const
 
103 char 
 524,45: char
 
298 * option_type_qualifier_list option_pointer 
 524,50: *
 
386 NAME VARIABLE 
 524,52: __format
 524,60: VARIABLE
 
65 VARIABLE 
 524,60: VARIABLE
 
300 , parameter_declaration 
 524,60: ,
 524,62: __gnuc_va_list
 524,76: TYPE
 524,77: __arg
 524,82: VARIABLE
 
391 NAME TYPE 
 524,62: __gnuc_va_list
 524,76: TYPE
 
26 TYPE 
 524,76: TYPE
 
298 NAME VARIABLE 
 524,77: __arg
 524,82: VARIABLE
 
65 VARIABLE 
 524,82: VARIABLE
 
187 ) 
 524,82: )
 
60 ; 
 528,6: ;
 
23 extern 
 530,1: extern
 
8 int 
 530,8: int
 
5 NAME VARIABLE 
 530,12: fgetc
 530,17: VARIABLE
 
65 VARIABLE 
 530,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 530,18: (
 530,19: FILE
 530,23: TYPE
 530,24: *
 530,25: __stream
 530,33: VARIABLE
 530,33: )
 
186 NAME TYPE 
 530,19: FILE
 530,23: TYPE
 
65 TYPE 
 530,23: TYPE
 
298 * option_type_qualifier_list option_pointer 
 530,24: *
 
386 NAME VARIABLE 
 530,25: __stream
 530,33: VARIABLE
 
65 VARIABLE 
 530,33: VARIABLE
 
187 ) 
 530,33: )
 
60 ; 
 530,34: ;
 
23 extern 
 531,1: extern
 
8 int 
 531,8: int
 
5 NAME VARIABLE 
 531,12: getc
 531,16: VARIABLE
 
65 VARIABLE 
 531,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 531,17: (
 531,18: FILE
 531,22: TYPE
 531,23: *
 531,24: __stream
 531,32: VARIABLE
 531,32: )
 
186 NAME TYPE 
 531,18: FILE
 531,22: TYPE
 
65 TYPE 
 531,22: TYPE
 
298 * option_type_qualifier_list option_pointer 
 531,23: *
 
386 NAME VARIABLE 
 531,24: __stream
 531,32: VARIABLE
 
65 VARIABLE 
 531,32: VARIABLE
 
187 ) 
 531,32: )
 
60 ; 
 531,33: ;
 
23 extern 
 537,1: extern
 
8 int 
 537,8: int
 
5 NAME VARIABLE 
 537,12: getchar
 537,19: VARIABLE
 
65 VARIABLE 
 537,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 537,20: (
 537,21: void
 537,25: )
 
186 void 
 537,21: void
 
187 ) 
 537,25: )
 
60 ; 
 537,26: ;
 
23 extern 
 544,1: extern
 
8 int 
 544,8: int
 
5 NAME VARIABLE 
 544,12: getc_unlocked
 544,25: VARIABLE
 
65 VARIABLE 
 544,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 544,26: (
 544,27: FILE
 544,31: TYPE
 544,32: *
 544,33: __stream
 544,41: VARIABLE
 544,41: )
 
186 NAME TYPE 
 544,27: FILE
 544,31: TYPE
 
65 TYPE 
 544,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 544,32: *
 
386 NAME VARIABLE 
 544,33: __stream
 544,41: VARIABLE
 
65 VARIABLE 
 544,41: VARIABLE
 
187 ) 
 544,41: )
 
60 ; 
 544,42: ;
 
23 extern 
 545,1: extern
 
8 int 
 545,8: int
 
5 NAME VARIABLE 
 545,12: getchar_unlocked
 545,28: VARIABLE
 
65 VARIABLE 
 545,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 545,29: (
 545,30: void
 545,34: )
 
186 void 
 545,30: void
 
187 ) 
 545,34: )
 
60 ; 
 545,35: ;
 
23 extern 
 547,1: extern
 
8 int 
 547,8: int
 
5 NAME VARIABLE 
 547,12: fgetc_unlocked
 547,26: VARIABLE
 
65 VARIABLE 
 547,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 547,27: (
 547,28: FILE
 547,32: TYPE
 547,33: *
 547,34: __stream
 547,42: VARIABLE
 547,42: )
 
186 NAME TYPE 
 547,28: FILE
 547,32: TYPE
 
65 TYPE 
 547,32: TYPE
 
298 * option_type_qualifier_list option_pointer 
 547,33: *
 
386 NAME VARIABLE 
 547,34: __stream
 547,42: VARIABLE
 
65 VARIABLE 
 547,42: VARIABLE
 
187 ) 
 547,42: )
 
60 ; 
 547,43: ;
 
23 extern 
 549,1: extern
 
8 int 
 549,8: int
 
5 NAME VARIABLE 
 549,12: fputc
 549,17: VARIABLE
 
65 VARIABLE 
 549,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 549,18: (
 549,19: int
 549,23: __c
 549,26: VARIABLE
 549,26: ,
 549,28: FILE
 549,32: TYPE
 549,33: *
 549,34: __stream
 549,42: VARIABLE
 549,42: )
 
186 int 
 549,19: int
 
298 NAME VARIABLE 
 549,23: __c
 549,26: VARIABLE
 
65 VARIABLE 
 549,26: VARIABLE
 
300 , parameter_declaration 
 549,26: ,
 549,28: FILE
 549,32: TYPE
 549,33: *
 549,34: __stream
 549,42: VARIABLE
 
391 NAME TYPE 
 549,28: FILE
 549,32: TYPE
 
26 TYPE 
 549,32: TYPE
 
298 * option_type_qualifier_list option_pointer 
 549,33: *
 
386 NAME VARIABLE 
 549,34: __stream
 549,42: VARIABLE
 
65 VARIABLE 
 549,42: VARIABLE
 
187 ) 
 549,42: )
 
60 ; 
 549,43: ;
 
23 extern 
 550,1: extern
 
8 int 
 550,8: int
 
5 NAME VARIABLE 
 550,12: putc
 550,16: VARIABLE
 
65 VARIABLE 
 550,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 550,17: (
 550,18: int
 550,22: __c
 550,25: VARIABLE
 550,25: ,
 550,27: FILE
 550,31: TYPE
 550,32: *
 550,33: __stream
 550,41: VARIABLE
 550,41: )
 
186 int 
 550,18: int
 
298 NAME VARIABLE 
 550,22: __c
 550,25: VARIABLE
 
65 VARIABLE 
 550,25: VARIABLE
 
300 , parameter_declaration 
 550,25: ,
 550,27: FILE
 550,31: TYPE
 550,32: *
 550,33: __stream
 550,41: VARIABLE
 
391 NAME TYPE 
 550,27: FILE
 550,31: TYPE
 
26 TYPE 
 550,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 550,32: *
 
386 NAME VARIABLE 
 550,33: __stream
 550,41: VARIABLE
 
65 VARIABLE 
 550,41: VARIABLE
 
187 ) 
 550,41: )
 
60 ; 
 550,42: ;
 
23 extern 
 556,1: extern
 
8 int 
 556,8: int
 
5 NAME VARIABLE 
 556,12: putchar
 556,19: VARIABLE
 
65 VARIABLE 
 556,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 556,20: (
 556,21: int
 556,25: __c
 556,28: VARIABLE
 556,28: )
 
186 int 
 556,21: int
 
298 NAME VARIABLE 
 556,25: __c
 556,28: VARIABLE
 
65 VARIABLE 
 556,28: VARIABLE
 
187 ) 
 556,28: )
 
60 ; 
 556,29: ;
 
23 extern 
 558,1: extern
 
8 int 
 558,8: int
 
5 NAME VARIABLE 
 558,12: fputc_unlocked
 558,26: VARIABLE
 
65 VARIABLE 
 558,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 558,27: (
 558,28: int
 558,32: __c
 558,35: VARIABLE
 558,35: ,
 558,37: FILE
 558,41: TYPE
 558,42: *
 558,43: __stream
 558,51: VARIABLE
 558,51: )
 
186 int 
 558,28: int
 
298 NAME VARIABLE 
 558,32: __c
 558,35: VARIABLE
 
65 VARIABLE 
 558,35: VARIABLE
 
300 , parameter_declaration 
 558,35: ,
 558,37: FILE
 558,41: TYPE
 558,42: *
 558,43: __stream
 558,51: VARIABLE
 
391 NAME TYPE 
 558,37: FILE
 558,41: TYPE
 
26 TYPE 
 558,41: TYPE
 
298 * option_type_qualifier_list option_pointer 
 558,42: *
 
386 NAME VARIABLE 
 558,43: __stream
 558,51: VARIABLE
 
65 VARIABLE 
 558,51: VARIABLE
 
187 ) 
 558,51: )
 
60 ; 
 558,52: ;
 
23 extern 
 566,1: extern
 
8 int 
 566,8: int
 
5 NAME VARIABLE 
 566,12: putc_unlocked
 566,25: VARIABLE
 
65 VARIABLE 
 566,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 566,26: (
 566,27: int
 566,31: __c
 566,34: VARIABLE
 566,34: ,
 566,36: FILE
 566,40: TYPE
 566,41: *
 566,42: __stream
 566,50: VARIABLE
 566,50: )
 
186 int 
 566,27: int
 
298 NAME VARIABLE 
 566,31: __c
 566,34: VARIABLE
 
65 VARIABLE 
 566,34: VARIABLE
 
300 , parameter_declaration 
 566,34: ,
 566,36: FILE
 566,40: TYPE
 566,41: *
 566,42: __stream
 566,50: VARIABLE
 
391 NAME TYPE 
 566,36: FILE
 566,40: TYPE
 
26 TYPE 
 566,40: TYPE
 
298 * option_type_qualifier_list option_pointer 
 566,41: *
 
386 NAME VARIABLE 
 566,42: __stream
 566,50: VARIABLE
 
65 VARIABLE 
 566,50: VARIABLE
 
187 ) 
 566,50: )
 
60 ; 
 566,51: ;
 
23 extern 
 567,1: extern
 
8 int 
 567,8: int
 
5 NAME VARIABLE 
 567,12: putchar_unlocked
 567,28: VARIABLE
 
65 VARIABLE 
 567,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 567,29: (
 567,30: int
 567,34: __c
 567,37: VARIABLE
 567,37: )
 
186 int 
 567,30: int
 
298 NAME VARIABLE 
 567,34: __c
 567,37: VARIABLE
 
65 VARIABLE 
 567,37: VARIABLE
 
187 ) 
 567,37: )
 
60 ; 
 567,38: ;
 
23 extern 
 574,1: extern
 
8 int 
 574,8: int
 
5 NAME VARIABLE 
 574,12: getw
 574,16: VARIABLE
 
65 VARIABLE 
 574,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 574,17: (
 574,18: FILE
 574,22: TYPE
 574,23: *
 574,24: __stream
 574,32: VARIABLE
 574,32: )
 
186 NAME TYPE 
 574,18: FILE
 574,22: TYPE
 
65 TYPE 
 574,22: TYPE
 
298 * option_type_qualifier_list option_pointer 
 574,23: *
 
386 NAME VARIABLE 
 574,24: __stream
 574,32: VARIABLE
 
65 VARIABLE 
 574,32: VARIABLE
 
187 ) 
 574,32: )
 
60 ; 
 574,33: ;
 
23 extern 
 577,1: extern
 
8 int 
 577,8: int
 
5 NAME VARIABLE 
 577,12: putw
 577,16: VARIABLE
 
65 VARIABLE 
 577,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 577,17: (
 577,18: int
 577,22: __w
 577,25: VARIABLE
 577,25: ,
 577,27: FILE
 577,31: TYPE
 577,32: *
 577,33: __stream
 577,41: VARIABLE
 577,41: )
 
186 int 
 577,18: int
 
298 NAME VARIABLE 
 577,22: __w
 577,25: VARIABLE
 
65 VARIABLE 
 577,25: VARIABLE
 
300 , parameter_declaration 
 577,25: ,
 577,27: FILE
 577,31: TYPE
 577,32: *
 577,33: __stream
 577,41: VARIABLE
 
391 NAME TYPE 
 577,27: FILE
 577,31: TYPE
 
26 TYPE 
 577,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 577,32: *
 
386 NAME VARIABLE 
 577,33: __stream
 577,41: VARIABLE
 
65 VARIABLE 
 577,41: VARIABLE
 
187 ) 
 577,41: )
 
60 ; 
 577,42: ;
 
23 extern 
 585,1: extern
 
8 char 
 585,8: char
 
5 * option_type_qualifier_list option_pointer 
 585,13: *
 
64 NAME VARIABLE 
 585,14: fgets
 585,19: VARIABLE
 
65 VARIABLE 
 585,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 585,20: (
 585,21: char
 585,26: *
 585,28: __s
 585,31: VARIABLE
 585,31: ,
 585,33: int
 585,37: __n
 585,40: VARIABLE
 585,40: ,
 585,42: FILE
 585,46: TYPE
 585,47: *
 585,49: __stream
 585,57: VARIABLE
 585,57: )
 
186 char 
 585,21: char
 
298 * option_type_qualifier_list option_pointer 
 585,26: *
 
386 NAME VARIABLE 
 585,28: __s
 585,31: VARIABLE
 
65 VARIABLE 
 585,31: VARIABLE
 
300 , parameter_declaration 
 585,31: ,
 585,33: int
 585,37: __n
 585,40: VARIABLE
 
391 int 
 585,33: int
 
298 NAME VARIABLE 
 585,37: __n
 585,40: VARIABLE
 
65 VARIABLE 
 585,40: VARIABLE
 
300 , parameter_declaration 
 585,40: ,
 585,42: FILE
 585,46: TYPE
 585,47: *
 585,49: __stream
 585,57: VARIABLE
 
391 NAME TYPE 
 585,42: FILE
 585,46: TYPE
 
26 TYPE 
 585,46: TYPE
 
298 * option_type_qualifier_list option_pointer 
 585,47: *
 
386 NAME VARIABLE 
 585,49: __stream
 585,57: VARIABLE
 
65 VARIABLE 
 585,57: VARIABLE
 
187 ) 
 585,57: )
 
60 ; 
 586,6: ;
 
23 extern 
 588,1: extern
 
8 NAME TYPE 
 588,8: __ssize_t
 588,17: TYPE
 
26 TYPE 
 588,17: TYPE
 
5 NAME VARIABLE 
 588,18: __getdelim
 588,28: VARIABLE
 
65 VARIABLE 
 588,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 588,29: (
 588,30: char
 588,35: *
 588,36: *
 588,38: __lineptr
 588,47: VARIABLE
 588,47: ,
 589,30: size_t
 589,36: TYPE
 589,37: *
 589,39: __n
 589,42: VARIABLE
 589,42: ,
 589,44: int
 589,48: __delimiter
 589,59: VARIABLE
 589,59: ,
 590,30: FILE
 590,34: TYPE
 590,35: *
 590,37: __stream
 590,45: VARIABLE
 590,45: )
 
186 char 
 588,30: char
 
298 * option_type_qualifier_list option_pointer 
 588,35: *
 588,36: *
 
116 * option_type_qualifier_list option_pointer 
 588,36: *
 
386 NAME VARIABLE 
 588,38: __lineptr
 588,47: VARIABLE
 
65 VARIABLE 
 588,47: VARIABLE
 
300 , parameter_declaration 
 588,47: ,
 589,30: size_t
 589,36: TYPE
 589,37: *
 589,39: __n
 589,42: VARIABLE
 
391 NAME TYPE 
 589,30: size_t
 589,36: TYPE
 
26 TYPE 
 589,36: TYPE
 
298 * option_type_qualifier_list option_pointer 
 589,37: *
 
386 NAME VARIABLE 
 589,39: __n
 589,42: VARIABLE
 
65 VARIABLE 
 589,42: VARIABLE
 
300 , parameter_declaration 
 589,42: ,
 589,44: int
 589,48: __delimiter
 589,59: VARIABLE
 
391 int 
 589,44: int
 
298 NAME VARIABLE 
 589,48: __delimiter
 589,59: VARIABLE
 
65 VARIABLE 
 589,59: VARIABLE
 
300 , parameter_declaration 
 589,59: ,
 590,30: FILE
 590,34: TYPE
 590,35: *
 590,37: __stream
 590,45: VARIABLE
 
391 NAME TYPE 
 590,30: FILE
 590,34: TYPE
 
26 TYPE 
 590,34: TYPE
 
298 * option_type_qualifier_list option_pointer 
 590,35: *
 
386 NAME VARIABLE 
 590,37: __stream
 590,45: VARIABLE
 
65 VARIABLE 
 590,45: VARIABLE
 
187 ) 
 590,45: )
 
60 ; 
 590,47: ;
 
23 extern 
 591,1: extern
 
8 NAME TYPE 
 591,8: __ssize_t
 591,17: TYPE
 
26 TYPE 
 591,17: TYPE
 
5 NAME VARIABLE 
 591,18: getdelim
 591,26: VARIABLE
 
65 VARIABLE 
 591,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 591,27: (
 591,28: char
 591,33: *
 591,34: *
 591,36: __lineptr
 591,45: VARIABLE
 591,45: ,
 592,28: size_t
 592,34: TYPE
 592,35: *
 592,37: __n
 592,40: VARIABLE
 592,40: ,
 592,42: int
 592,46: __delimiter
 592,57: VARIABLE
 592,57: ,
 593,28: FILE
 593,32: TYPE
 593,33: *
 593,35: __stream
 593,43: VARIABLE
 593,43: )
 
186 char 
 591,28: char
 
298 * option_type_qualifier_list option_pointer 
 591,33: *
 591,34: *
 
116 * option_type_qualifier_list option_pointer 
 591,34: *
 
386 NAME VARIABLE 
 591,36: __lineptr
 591,45: VARIABLE
 
65 VARIABLE 
 591,45: VARIABLE
 
300 , parameter_declaration 
 591,45: ,
 592,28: size_t
 592,34: TYPE
 592,35: *
 592,37: __n
 592,40: VARIABLE
 
391 NAME TYPE 
 592,28: size_t
 592,34: TYPE
 
26 TYPE 
 592,34: TYPE
 
298 * option_type_qualifier_list option_pointer 
 592,35: *
 
386 NAME VARIABLE 
 592,37: __n
 592,40: VARIABLE
 
65 VARIABLE 
 592,40: VARIABLE
 
300 , parameter_declaration 
 592,40: ,
 592,42: int
 592,46: __delimiter
 592,57: VARIABLE
 
391 int 
 592,42: int
 
298 NAME VARIABLE 
 592,46: __delimiter
 592,57: VARIABLE
 
65 VARIABLE 
 592,57: VARIABLE
 
300 , parameter_declaration 
 592,57: ,
 593,28: FILE
 593,32: TYPE
 593,33: *
 593,35: __stream
 593,43: VARIABLE
 
391 NAME TYPE 
 593,28: FILE
 593,32: TYPE
 
26 TYPE 
 593,32: TYPE
 
298 * option_type_qualifier_list option_pointer 
 593,33: *
 
386 NAME VARIABLE 
 593,35: __stream
 593,43: VARIABLE
 
65 VARIABLE 
 593,43: VARIABLE
 
187 ) 
 593,43: )
 
60 ; 
 593,45: ;
 
23 extern 
 601,1: extern
 
8 NAME TYPE 
 601,8: __ssize_t
 601,17: TYPE
 
26 TYPE 
 601,17: TYPE
 
5 NAME VARIABLE 
 601,18: getline
 601,25: VARIABLE
 
65 VARIABLE 
 601,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 601,26: (
 601,27: char
 601,32: *
 601,33: *
 601,35: __lineptr
 601,44: VARIABLE
 601,44: ,
 602,27: size_t
 602,33: TYPE
 602,34: *
 602,36: __n
 602,39: VARIABLE
 602,39: ,
 603,27: FILE
 603,31: TYPE
 603,32: *
 603,34: __stream
 603,42: VARIABLE
 603,42: )
 
186 char 
 601,27: char
 
298 * option_type_qualifier_list option_pointer 
 601,32: *
 601,33: *
 
116 * option_type_qualifier_list option_pointer 
 601,33: *
 
386 NAME VARIABLE 
 601,35: __lineptr
 601,44: VARIABLE
 
65 VARIABLE 
 601,44: VARIABLE
 
300 , parameter_declaration 
 601,44: ,
 602,27: size_t
 602,33: TYPE
 602,34: *
 602,36: __n
 602,39: VARIABLE
 
391 NAME TYPE 
 602,27: size_t
 602,33: TYPE
 
26 TYPE 
 602,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 602,34: *
 
386 NAME VARIABLE 
 602,36: __n
 602,39: VARIABLE
 
65 VARIABLE 
 602,39: VARIABLE
 
300 , parameter_declaration 
 602,39: ,
 603,27: FILE
 603,31: TYPE
 603,32: *
 603,34: __stream
 603,42: VARIABLE
 
391 NAME TYPE 
 603,27: FILE
 603,31: TYPE
 
26 TYPE 
 603,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 603,32: *
 
386 NAME VARIABLE 
 603,34: __stream
 603,42: VARIABLE
 
65 VARIABLE 
 603,42: VARIABLE
 
187 ) 
 603,42: )
 
60 ; 
 603,44: ;
 
23 extern 
 611,1: extern
 
8 int 
 611,8: int
 
5 NAME VARIABLE 
 611,12: fputs
 611,17: VARIABLE
 
65 VARIABLE 
 611,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 611,18: (
 611,19: const
 611,25: char
 611,30: *
 611,32: __s
 611,35: VARIABLE
 611,35: ,
 611,37: FILE
 611,41: TYPE
 611,42: *
 611,44: __stream
 611,52: VARIABLE
 611,52: )
 
186 const 
 611,19: const
 
103 char 
 611,25: char
 
298 * option_type_qualifier_list option_pointer 
 611,30: *
 
386 NAME VARIABLE 
 611,32: __s
 611,35: VARIABLE
 
65 VARIABLE 
 611,35: VARIABLE
 
300 , parameter_declaration 
 611,35: ,
 611,37: FILE
 611,41: TYPE
 611,42: *
 611,44: __stream
 611,52: VARIABLE
 
391 NAME TYPE 
 611,37: FILE
 611,41: TYPE
 
26 TYPE 
 611,41: TYPE
 
298 * option_type_qualifier_list option_pointer 
 611,42: *
 
386 NAME VARIABLE 
 611,44: __stream
 611,52: VARIABLE
 
65 VARIABLE 
 611,52: VARIABLE
 
187 ) 
 611,52: )
 
60 ; 
 611,53: ;
 
23 extern 
 617,1: extern
 
8 int 
 617,8: int
 
5 NAME VARIABLE 
 617,12: puts
 617,16: VARIABLE
 
65 VARIABLE 
 617,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 617,17: (
 617,18: const
 617,24: char
 617,29: *
 617,30: __s
 617,33: VARIABLE
 617,33: )
 
186 const 
 617,18: const
 
103 char 
 617,24: char
 
298 * option_type_qualifier_list option_pointer 
 617,29: *
 
386 NAME VARIABLE 
 617,30: __s
 617,33: VARIABLE
 
65 VARIABLE 
 617,33: VARIABLE
 
187 ) 
 617,33: )
 
60 ; 
 617,34: ;
 
23 extern 
 624,1: extern
 
8 int 
 624,8: int
 
5 NAME VARIABLE 
 624,12: ungetc
 624,18: VARIABLE
 
65 VARIABLE 
 624,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 624,19: (
 624,20: int
 624,24: __c
 624,27: VARIABLE
 624,27: ,
 624,29: FILE
 624,33: TYPE
 624,34: *
 624,35: __stream
 624,43: VARIABLE
 624,43: )
 
186 int 
 624,20: int
 
298 NAME VARIABLE 
 624,24: __c
 624,27: VARIABLE
 
65 VARIABLE 
 624,27: VARIABLE
 
300 , parameter_declaration 
 624,27: ,
 624,29: FILE
 624,33: TYPE
 624,34: *
 624,35: __stream
 624,43: VARIABLE
 
391 NAME TYPE 
 624,29: FILE
 624,33: TYPE
 
26 TYPE 
 624,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 624,34: *
 
386 NAME VARIABLE 
 624,35: __stream
 624,43: VARIABLE
 
65 VARIABLE 
 624,43: VARIABLE
 
187 ) 
 624,43: )
 
60 ; 
 624,44: ;
 
23 extern 
 631,1: extern
 
8 NAME TYPE 
 631,8: size_t
 631,14: TYPE
 
26 TYPE 
 631,14: TYPE
 
5 NAME VARIABLE 
 631,15: fread
 631,20: VARIABLE
 
65 VARIABLE 
 631,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 631,21: (
 631,22: void
 631,27: *
 631,29: __ptr
 631,34: VARIABLE
 631,34: ,
 631,36: size_t
 631,42: TYPE
 631,43: __size
 631,49: VARIABLE
 631,49: ,
 632,8: size_t
 632,14: TYPE
 632,15: __n
 632,18: VARIABLE
 632,18: ,
 632,20: FILE
 632,24: TYPE
 632,25: *
 632,27: __stream
 632,35: VARIABLE
 632,35: )
 
186 void 
 631,22: void
 
298 * option_type_qualifier_list option_pointer 
 631,27: *
 
386 NAME VARIABLE 
 631,29: __ptr
 631,34: VARIABLE
 
65 VARIABLE 
 631,34: VARIABLE
 
300 , parameter_declaration 
 631,34: ,
 631,36: size_t
 631,42: TYPE
 631,43: __size
 631,49: VARIABLE
 
391 NAME TYPE 
 631,36: size_t
 631,42: TYPE
 
26 TYPE 
 631,42: TYPE
 
298 NAME VARIABLE 
 631,43: __size
 631,49: VARIABLE
 
65 VARIABLE 
 631,49: VARIABLE
 
300 , parameter_declaration 
 631,49: ,
 632,8: size_t
 632,14: TYPE
 632,15: __n
 632,18: VARIABLE
 
391 NAME TYPE 
 632,8: size_t
 632,14: TYPE
 
26 TYPE 
 632,14: TYPE
 
298 NAME VARIABLE 
 632,15: __n
 632,18: VARIABLE
 
65 VARIABLE 
 632,18: VARIABLE
 
300 , parameter_declaration 
 632,18: ,
 632,20: FILE
 632,24: TYPE
 632,25: *
 632,27: __stream
 632,35: VARIABLE
 
391 NAME TYPE 
 632,20: FILE
 632,24: TYPE
 
26 TYPE 
 632,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 632,25: *
 
386 NAME VARIABLE 
 632,27: __stream
 632,35: VARIABLE
 
65 VARIABLE 
 632,35: VARIABLE
 
187 ) 
 632,35: )
 
60 ; 
 632,37: ;
 
23 extern 
 637,1: extern
 
8 NAME TYPE 
 637,8: size_t
 637,14: TYPE
 
26 TYPE 
 637,14: TYPE
 
5 NAME VARIABLE 
 637,15: fwrite
 637,21: VARIABLE
 
65 VARIABLE 
 637,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 637,22: (
 637,23: const
 637,29: void
 637,34: *
 637,36: __ptr
 637,41: VARIABLE
 637,41: ,
 637,43: size_t
 637,49: TYPE
 637,50: __size
 637,56: VARIABLE
 637,56: ,
 638,9: size_t
 638,15: TYPE
 638,16: __n
 638,19: VARIABLE
 638,19: ,
 638,21: FILE
 638,25: TYPE
 638,26: *
 638,28: __s
 638,31: VARIABLE
 638,31: )
 
186 const 
 637,23: const
 
103 void 
 637,29: void
 
298 * option_type_qualifier_list option_pointer 
 637,34: *
 
386 NAME VARIABLE 
 637,36: __ptr
 637,41: VARIABLE
 
65 VARIABLE 
 637,41: VARIABLE
 
300 , parameter_declaration 
 637,41: ,
 637,43: size_t
 637,49: TYPE
 637,50: __size
 637,56: VARIABLE
 
391 NAME TYPE 
 637,43: size_t
 637,49: TYPE
 
26 TYPE 
 637,49: TYPE
 
298 NAME VARIABLE 
 637,50: __size
 637,56: VARIABLE
 
65 VARIABLE 
 637,56: VARIABLE
 
300 , parameter_declaration 
 637,56: ,
 638,9: size_t
 638,15: TYPE
 638,16: __n
 638,19: VARIABLE
 
391 NAME TYPE 
 638,9: size_t
 638,15: TYPE
 
26 TYPE 
 638,15: TYPE
 
298 NAME VARIABLE 
 638,16: __n
 638,19: VARIABLE
 
65 VARIABLE 
 638,19: VARIABLE
 
300 , parameter_declaration 
 638,19: ,
 638,21: FILE
 638,25: TYPE
 638,26: *
 638,28: __s
 638,31: VARIABLE
 
391 NAME TYPE 
 638,21: FILE
 638,25: TYPE
 
26 TYPE 
 638,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 638,26: *
 
386 NAME VARIABLE 
 638,28: __s
 638,31: VARIABLE
 
65 VARIABLE 
 638,31: VARIABLE
 
187 ) 
 638,31: )
 
60 ; 
 638,32: ;
 
23 extern 
 640,1: extern
 
8 NAME TYPE 
 640,8: size_t
 640,14: TYPE
 
26 TYPE 
 640,14: TYPE
 
5 NAME VARIABLE 
 640,15: fread_unlocked
 640,29: VARIABLE
 
65 VARIABLE 
 640,29: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 640,30: (
 640,31: void
 640,36: *
 640,38: __ptr
 640,43: VARIABLE
 640,43: ,
 640,45: size_t
 640,51: TYPE
 640,52: __size
 640,58: VARIABLE
 640,58: ,
 641,10: size_t
 641,16: TYPE
 641,17: __n
 641,20: VARIABLE
 641,20: ,
 641,22: FILE
 641,26: TYPE
 641,27: *
 641,29: __stream
 641,37: VARIABLE
 641,37: )
 
186 void 
 640,31: void
 
298 * option_type_qualifier_list option_pointer 
 640,36: *
 
386 NAME VARIABLE 
 640,38: __ptr
 640,43: VARIABLE
 
65 VARIABLE 
 640,43: VARIABLE
 
300 , parameter_declaration 
 640,43: ,
 640,45: size_t
 640,51: TYPE
 640,52: __size
 640,58: VARIABLE
 
391 NAME TYPE 
 640,45: size_t
 640,51: TYPE
 
26 TYPE 
 640,51: TYPE
 
298 NAME VARIABLE 
 640,52: __size
 640,58: VARIABLE
 
65 VARIABLE 
 640,58: VARIABLE
 
300 , parameter_declaration 
 640,58: ,
 641,10: size_t
 641,16: TYPE
 641,17: __n
 641,20: VARIABLE
 
391 NAME TYPE 
 641,10: size_t
 641,16: TYPE
 
26 TYPE 
 641,16: TYPE
 
298 NAME VARIABLE 
 641,17: __n
 641,20: VARIABLE
 
65 VARIABLE 
 641,20: VARIABLE
 
300 , parameter_declaration 
 641,20: ,
 641,22: FILE
 641,26: TYPE
 641,27: *
 641,29: __stream
 641,37: VARIABLE
 
391 NAME TYPE 
 641,22: FILE
 641,26: TYPE
 
26 TYPE 
 641,26: TYPE
 
298 * option_type_qualifier_list option_pointer 
 641,27: *
 
386 NAME VARIABLE 
 641,29: __stream
 641,37: VARIABLE
 
65 VARIABLE 
 641,37: VARIABLE
 
187 ) 
 641,37: )
 
60 ; 
 641,39: ;
 
23 extern 
 642,1: extern
 
8 NAME TYPE 
 642,8: size_t
 642,14: TYPE
 
26 TYPE 
 642,14: TYPE
 
5 NAME VARIABLE 
 642,15: fwrite_unlocked
 642,30: VARIABLE
 
65 VARIABLE 
 642,30: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 642,31: (
 642,32: const
 642,38: void
 642,43: *
 642,45: __ptr
 642,50: VARIABLE
 642,50: ,
 642,52: size_t
 642,58: TYPE
 642,59: __size
 642,65: VARIABLE
 642,65: ,
 643,11: size_t
 643,17: TYPE
 643,18: __n
 643,21: VARIABLE
 643,21: ,
 643,23: FILE
 643,27: TYPE
 643,28: *
 643,30: __stream
 643,38: VARIABLE
 643,38: )
 
186 const 
 642,32: const
 
103 void 
 642,38: void
 
298 * option_type_qualifier_list option_pointer 
 642,43: *
 
386 NAME VARIABLE 
 642,45: __ptr
 642,50: VARIABLE
 
65 VARIABLE 
 642,50: VARIABLE
 
300 , parameter_declaration 
 642,50: ,
 642,52: size_t
 642,58: TYPE
 642,59: __size
 642,65: VARIABLE
 
391 NAME TYPE 
 642,52: size_t
 642,58: TYPE
 
26 TYPE 
 642,58: TYPE
 
298 NAME VARIABLE 
 642,59: __size
 642,65: VARIABLE
 
65 VARIABLE 
 642,65: VARIABLE
 
300 , parameter_declaration 
 642,65: ,
 643,11: size_t
 643,17: TYPE
 643,18: __n
 643,21: VARIABLE
 
391 NAME TYPE 
 643,11: size_t
 643,17: TYPE
 
26 TYPE 
 643,17: TYPE
 
298 NAME VARIABLE 
 643,18: __n
 643,21: VARIABLE
 
65 VARIABLE 
 643,21: VARIABLE
 
300 , parameter_declaration 
 643,21: ,
 643,23: FILE
 643,27: TYPE
 643,28: *
 643,30: __stream
 643,38: VARIABLE
 
391 NAME TYPE 
 643,23: FILE
 643,27: TYPE
 
26 TYPE 
 643,27: TYPE
 
298 * option_type_qualifier_list option_pointer 
 643,28: *
 
386 NAME VARIABLE 
 643,30: __stream
 643,38: VARIABLE
 
65 VARIABLE 
 643,38: VARIABLE
 
187 ) 
 643,38: )
 
60 ; 
 643,39: ;
 
23 extern 
 651,1: extern
 
8 int 
 651,8: int
 
5 NAME VARIABLE 
 651,12: fseek
 651,17: VARIABLE
 
65 VARIABLE 
 651,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 651,18: (
 651,19: FILE
 651,23: TYPE
 651,24: *
 651,25: __stream
 651,33: VARIABLE
 651,33: ,
 651,35: long
 651,40: int
 651,44: __off
 651,49: VARIABLE
 651,49: ,
 651,51: int
 651,55: __whence
 651,63: VARIABLE
 651,63: )
 
186 NAME TYPE 
 651,19: FILE
 651,23: TYPE
 
65 TYPE 
 651,23: TYPE
 
298 * option_type_qualifier_list option_pointer 
 651,24: *
 
386 NAME VARIABLE 
 651,25: __stream
 651,33: VARIABLE
 
65 VARIABLE 
 651,33: VARIABLE
 
300 , parameter_declaration 
 651,33: ,
 651,35: long
 651,40: int
 651,44: __off
 651,49: VARIABLE
 
391 long 
 651,35: long
 
106 int 
 651,40: int
 
298 NAME VARIABLE 
 651,44: __off
 651,49: VARIABLE
 
65 VARIABLE 
 651,49: VARIABLE
 
300 , parameter_declaration 
 651,49: ,
 651,51: int
 651,55: __whence
 651,63: VARIABLE
 
391 int 
 651,51: int
 
298 NAME VARIABLE 
 651,55: __whence
 651,63: VARIABLE
 
65 VARIABLE 
 651,63: VARIABLE
 
187 ) 
 651,63: )
 
60 ; 
 651,64: ;
 
23 extern 
 656,1: extern
 
8 long 
 656,8: long
 
17 int 
 656,13: int
 
5 NAME VARIABLE 
 656,17: ftell
 656,22: VARIABLE
 
65 VARIABLE 
 656,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 656,23: (
 656,24: FILE
 656,28: TYPE
 656,29: *
 656,30: __stream
 656,38: VARIABLE
 656,38: )
 
186 NAME TYPE 
 656,24: FILE
 656,28: TYPE
 
65 TYPE 
 656,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 656,29: *
 
386 NAME VARIABLE 
 656,30: __stream
 656,38: VARIABLE
 
65 VARIABLE 
 656,38: VARIABLE
 
187 ) 
 656,38: )
 
60 ; 
 656,40: ;
 
23 extern 
 661,1: extern
 
8 void 
 661,8: void
 
5 NAME VARIABLE 
 661,13: rewind
 661,19: VARIABLE
 
65 VARIABLE 
 661,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 661,20: (
 661,21: FILE
 661,25: TYPE
 661,26: *
 661,27: __stream
 661,35: VARIABLE
 661,35: )
 
186 NAME TYPE 
 661,21: FILE
 661,25: TYPE
 
65 TYPE 
 661,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 661,26: *
 
386 NAME VARIABLE 
 661,27: __stream
 661,35: VARIABLE
 
65 VARIABLE 
 661,35: VARIABLE
 
187 ) 
 661,35: )
 
60 ; 
 661,36: ;
 
23 extern 
 663,1: extern
 
8 int 
 663,8: int
 
5 NAME VARIABLE 
 663,12: fseeko
 663,18: VARIABLE
 
65 VARIABLE 
 663,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 663,19: (
 663,20: FILE
 663,24: TYPE
 663,25: *
 663,26: __stream
 663,34: VARIABLE
 663,34: ,
 663,36: __off_t
 663,43: TYPE
 663,44: __off
 663,49: VARIABLE
 663,49: ,
 663,51: int
 663,55: __whence
 663,63: VARIABLE
 663,63: )
 
186 NAME TYPE 
 663,20: FILE
 663,24: TYPE
 
65 TYPE 
 663,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 663,25: *
 
386 NAME VARIABLE 
 663,26: __stream
 663,34: VARIABLE
 
65 VARIABLE 
 663,34: VARIABLE
 
300 , parameter_declaration 
 663,34: ,
 663,36: __off_t
 663,43: TYPE
 663,44: __off
 663,49: VARIABLE
 
391 NAME TYPE 
 663,36: __off_t
 663,43: TYPE
 
26 TYPE 
 663,43: TYPE
 
298 NAME VARIABLE 
 663,44: __off
 663,49: VARIABLE
 
65 VARIABLE 
 663,49: VARIABLE
 
300 , parameter_declaration 
 663,49: ,
 663,51: int
 663,55: __whence
 663,63: VARIABLE
 
391 int 
 663,51: int
 
298 NAME VARIABLE 
 663,55: __whence
 663,63: VARIABLE
 
65 VARIABLE 
 663,63: VARIABLE
 
187 ) 
 663,63: )
 
60 ; 
 663,64: ;
 
23 extern 
 668,1: extern
 
8 NAME TYPE 
 668,8: __off_t
 668,15: TYPE
 
26 TYPE 
 668,15: TYPE
 
5 NAME VARIABLE 
 668,16: ftello
 668,22: VARIABLE
 
65 VARIABLE 
 668,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 668,23: (
 668,24: FILE
 668,28: TYPE
 668,29: *
 668,30: __stream
 668,38: VARIABLE
 668,38: )
 
186 NAME TYPE 
 668,24: FILE
 668,28: TYPE
 
65 TYPE 
 668,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 668,29: *
 
386 NAME VARIABLE 
 668,30: __stream
 668,38: VARIABLE
 
65 VARIABLE 
 668,38: VARIABLE
 
187 ) 
 668,38: )
 
60 ; 
 668,40: ;
 
23 extern 
 670,1: extern
 
8 int 
 670,8: int
 
5 NAME VARIABLE 
 670,12: fgetpos
 670,19: VARIABLE
 
65 VARIABLE 
 670,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 670,20: (
 670,21: FILE
 670,25: TYPE
 670,26: *
 670,28: __stream
 670,36: VARIABLE
 670,36: ,
 670,38: fpos_t
 670,44: TYPE
 670,45: *
 670,47: __pos
 670,52: VARIABLE
 670,52: )
 
186 NAME TYPE 
 670,21: FILE
 670,25: TYPE
 
65 TYPE 
 670,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 670,26: *
 
386 NAME VARIABLE 
 670,28: __stream
 670,36: VARIABLE
 
65 VARIABLE 
 670,36: VARIABLE
 
300 , parameter_declaration 
 670,36: ,
 670,38: fpos_t
 670,44: TYPE
 670,45: *
 670,47: __pos
 670,52: VARIABLE
 
391 NAME TYPE 
 670,38: fpos_t
 670,44: TYPE
 
26 TYPE 
 670,44: TYPE
 
298 * option_type_qualifier_list option_pointer 
 670,45: *
 
386 NAME VARIABLE 
 670,47: __pos
 670,52: VARIABLE
 
65 VARIABLE 
 670,52: VARIABLE
 
187 ) 
 670,52: )
 
60 ; 
 670,53: ;
 
23 extern 
 675,1: extern
 
8 int 
 675,8: int
 
5 NAME VARIABLE 
 675,12: fsetpos
 675,19: VARIABLE
 
65 VARIABLE 
 675,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 675,20: (
 675,21: FILE
 675,25: TYPE
 675,26: *
 675,27: __stream
 675,35: VARIABLE
 675,35: ,
 675,37: const
 675,43: fpos_t
 675,49: TYPE
 675,50: *
 675,51: __pos
 675,56: VARIABLE
 675,56: )
 
186 NAME TYPE 
 675,21: FILE
 675,25: TYPE
 
65 TYPE 
 675,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 675,26: *
 
386 NAME VARIABLE 
 675,27: __stream
 675,35: VARIABLE
 
65 VARIABLE 
 675,35: VARIABLE
 
300 , parameter_declaration 
 675,35: ,
 675,37: const
 675,43: fpos_t
 675,49: TYPE
 675,50: *
 675,51: __pos
 675,56: VARIABLE
 
391 const 
 675,37: const
 
103 NAME TYPE 
 675,43: fpos_t
 675,49: TYPE
 
26 TYPE 
 675,49: TYPE
 
298 * option_type_qualifier_list option_pointer 
 675,50: *
 
386 NAME VARIABLE 
 675,51: __pos
 675,56: VARIABLE
 
65 VARIABLE 
 675,56: VARIABLE
 
187 ) 
 675,56: )
 
60 ; 
 675,57: ;
 
23 extern 
 677,1: extern
 
8 void 
 677,8: void
 
5 NAME VARIABLE 
 677,13: clearerr
 677,21: VARIABLE
 
65 VARIABLE 
 677,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 677,22: (
 677,23: FILE
 677,27: TYPE
 677,28: *
 677,29: __stream
 677,37: VARIABLE
 677,37: )
 
186 NAME TYPE 
 677,23: FILE
 677,27: TYPE
 
65 TYPE 
 677,27: TYPE
 
298 * option_type_qualifier_list option_pointer 
 677,28: *
 
386 NAME VARIABLE 
 677,29: __stream
 677,37: VARIABLE
 
65 VARIABLE 
 677,37: VARIABLE
 
187 ) 
 677,37: )
 
60 ; 
 677,39: ;
 
23 extern 
 679,1: extern
 
8 int 
 679,8: int
 
5 NAME VARIABLE 
 679,12: feof
 679,16: VARIABLE
 
65 VARIABLE 
 679,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 679,17: (
 679,18: FILE
 679,22: TYPE
 679,23: *
 679,24: __stream
 679,32: VARIABLE
 679,32: )
 
186 NAME TYPE 
 679,18: FILE
 679,22: TYPE
 
65 TYPE 
 679,22: TYPE
 
298 * option_type_qualifier_list option_pointer 
 679,23: *
 
386 NAME VARIABLE 
 679,24: __stream
 679,32: VARIABLE
 
65 VARIABLE 
 679,32: VARIABLE
 
187 ) 
 679,32: )
 
60 ; 
 679,35: ;
 
23 extern 
 681,1: extern
 
8 int 
 681,8: int
 
5 NAME VARIABLE 
 681,12: ferror
 681,18: VARIABLE
 
65 VARIABLE 
 681,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 681,19: (
 681,20: FILE
 681,24: TYPE
 681,25: *
 681,26: __stream
 681,34: VARIABLE
 681,34: )
 
186 NAME TYPE 
 681,20: FILE
 681,24: TYPE
 
65 TYPE 
 681,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 681,25: *
 
386 NAME VARIABLE 
 681,26: __stream
 681,34: VARIABLE
 
65 VARIABLE 
 681,34: VARIABLE
 
187 ) 
 681,34: )
 
60 ; 
 681,37: ;
 
23 extern 
 685,1: extern
 
8 void 
 685,8: void
 
5 NAME VARIABLE 
 685,13: clearerr_unlocked
 685,30: VARIABLE
 
65 VARIABLE 
 685,30: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 685,31: (
 685,32: FILE
 685,36: TYPE
 685,37: *
 685,38: __stream
 685,46: VARIABLE
 685,46: )
 
186 NAME TYPE 
 685,32: FILE
 685,36: TYPE
 
65 TYPE 
 685,36: TYPE
 
298 * option_type_qualifier_list option_pointer 
 685,37: *
 
386 NAME VARIABLE 
 685,38: __stream
 685,46: VARIABLE
 
65 VARIABLE 
 685,46: VARIABLE
 
187 ) 
 685,46: )
 
60 ; 
 685,48: ;
 
23 extern 
 686,1: extern
 
8 int 
 686,8: int
 
5 NAME VARIABLE 
 686,12: feof_unlocked
 686,25: VARIABLE
 
65 VARIABLE 
 686,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 686,26: (
 686,27: FILE
 686,31: TYPE
 686,32: *
 686,33: __stream
 686,41: VARIABLE
 686,41: )
 
186 NAME TYPE 
 686,27: FILE
 686,31: TYPE
 
65 TYPE 
 686,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 686,32: *
 
386 NAME VARIABLE 
 686,33: __stream
 686,41: VARIABLE
 
65 VARIABLE 
 686,41: VARIABLE
 
187 ) 
 686,41: )
 
60 ; 
 686,44: ;
 
23 extern 
 687,1: extern
 
8 int 
 687,8: int
 
5 NAME VARIABLE 
 687,12: ferror_unlocked
 687,27: VARIABLE
 
65 VARIABLE 
 687,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 687,28: (
 687,29: FILE
 687,33: TYPE
 687,34: *
 687,35: __stream
 687,43: VARIABLE
 687,43: )
 
186 NAME TYPE 
 687,29: FILE
 687,33: TYPE
 
65 TYPE 
 687,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 687,34: *
 
386 NAME VARIABLE 
 687,35: __stream
 687,43: VARIABLE
 
65 VARIABLE 
 687,43: VARIABLE
 
187 ) 
 687,43: )
 
60 ; 
 687,46: ;
 
23 extern 
 695,1: extern
 
8 void 
 695,8: void
 
5 NAME VARIABLE 
 695,13: perror
 695,19: VARIABLE
 
65 VARIABLE 
 695,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 695,20: (
 695,21: const
 695,27: char
 695,32: *
 695,33: __s
 695,36: VARIABLE
 695,36: )
 
186 const 
 695,21: const
 
103 char 
 695,27: char
 
298 * option_type_qualifier_list option_pointer 
 695,32: *
 
386 NAME VARIABLE 
 695,33: __s
 695,36: VARIABLE
 
65 VARIABLE 
 695,36: VARIABLE
 
187 ) 
 695,36: )
 
60 ; 
 695,37: ;
 
23 extern 
 700,1: extern
 
8 int 
 700,8: int
 
5 NAME VARIABLE 
 700,12: fileno
 700,18: VARIABLE
 
65 VARIABLE 
 700,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 700,19: (
 700,20: FILE
 700,24: TYPE
 700,25: *
 700,26: __stream
 700,34: VARIABLE
 700,34: )
 
186 NAME TYPE 
 700,20: FILE
 700,24: TYPE
 
65 TYPE 
 700,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 700,25: *
 
386 NAME VARIABLE 
 700,26: __stream
 700,34: VARIABLE
 
65 VARIABLE 
 700,34: VARIABLE
 
187 ) 
 700,34: )
 
60 ; 
 700,37: ;
 
23 extern 
 705,1: extern
 
8 int 
 705,8: int
 
5 NAME VARIABLE 
 705,12: fileno_unlocked
 705,27: VARIABLE
 
65 VARIABLE 
 705,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 705,28: (
 705,29: FILE
 705,33: TYPE
 705,34: *
 705,35: __stream
 705,43: VARIABLE
 705,43: )
 
186 NAME TYPE 
 705,29: FILE
 705,33: TYPE
 
65 TYPE 
 705,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 705,34: *
 
386 NAME VARIABLE 
 705,35: __stream
 705,43: VARIABLE
 
65 VARIABLE 
 705,43: VARIABLE
 
187 ) 
 705,43: )
 
60 ; 
 705,46: ;
 
23 extern 
 707,1: extern
 
8 int 
 707,8: int
 
5 NAME VARIABLE 
 707,12: pclose
 707,18: VARIABLE
 
65 VARIABLE 
 707,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 707,19: (
 707,20: FILE
 707,24: TYPE
 707,25: *
 707,26: __stream
 707,34: VARIABLE
 707,34: )
 
186 NAME TYPE 
 707,20: FILE
 707,24: TYPE
 
65 TYPE 
 707,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 707,25: *
 
386 NAME VARIABLE 
 707,26: __stream
 707,34: VARIABLE
 
65 VARIABLE 
 707,34: VARIABLE
 
187 ) 
 707,34: )
 
60 ; 
 707,35: ;
 
23 extern 
 713,1: extern
 
8 NAME TYPE 
 713,8: FILE
 713,12: TYPE
 
26 TYPE 
 713,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 713,13: *
 
64 NAME VARIABLE 
 713,14: popen
 713,19: VARIABLE
 
65 VARIABLE 
 713,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 713,20: (
 713,21: const
 713,27: char
 713,32: *
 713,33: __command
 713,42: VARIABLE
 713,42: ,
 713,44: const
 713,50: char
 713,55: *
 713,56: __modes
 713,63: VARIABLE
 713,63: )
 
186 const 
 713,21: const
 
103 char 
 713,27: char
 
298 * option_type_qualifier_list option_pointer 
 713,32: *
 
386 NAME VARIABLE 
 713,33: __command
 713,42: VARIABLE
 
65 VARIABLE 
 713,42: VARIABLE
 
300 , parameter_declaration 
 713,42: ,
 713,44: const
 713,50: char
 713,55: *
 713,56: __modes
 713,63: VARIABLE
 
391 const 
 713,44: const
 
103 char 
 713,50: char
 
298 * option_type_qualifier_list option_pointer 
 713,55: *
 
386 NAME VARIABLE 
 713,56: __modes
 713,63: VARIABLE
 
65 VARIABLE 
 713,63: VARIABLE
 
187 ) 
 713,63: )
 
60 ; 
 714,5: ;
 
23 extern 
 721,1: extern
 
8 char 
 721,8: char
 
5 * option_type_qualifier_list option_pointer 
 721,13: *
 
64 NAME VARIABLE 
 721,14: ctermid
 721,21: VARIABLE
 
65 VARIABLE 
 721,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 721,22: (
 721,23: char
 721,28: *
 721,29: __s
 721,32: VARIABLE
 721,32: )
 
186 char 
 721,23: char
 
298 * option_type_qualifier_list option_pointer 
 721,28: *
 
386 NAME VARIABLE 
 721,29: __s
 721,32: VARIABLE
 
65 VARIABLE 
 721,32: VARIABLE
 
187 ) 
 721,32: )
 
60 ; 
 722,3: ;
 
23 extern 
 724,1: extern
 
8 void 
 724,8: void
 
5 NAME VARIABLE 
 724,13: flockfile
 724,22: VARIABLE
 
65 VARIABLE 
 724,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 724,23: (
 724,24: FILE
 724,28: TYPE
 724,29: *
 724,30: __stream
 724,38: VARIABLE
 724,38: )
 
186 NAME TYPE 
 724,24: FILE
 724,28: TYPE
 
65 TYPE 
 724,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 724,29: *
 
386 NAME VARIABLE 
 724,30: __stream
 724,38: VARIABLE
 
65 VARIABLE 
 724,38: VARIABLE
 
187 ) 
 724,38: )
 
60 ; 
 724,40: ;
 
23 extern 
 728,1: extern
 
8 int 
 728,8: int
 
5 NAME VARIABLE 
 728,12: ftrylockfile
 728,24: VARIABLE
 
65 VARIABLE 
 728,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 728,25: (
 728,26: FILE
 728,30: TYPE
 728,31: *
 728,32: __stream
 728,40: VARIABLE
 728,40: )
 
186 NAME TYPE 
 728,26: FILE
 728,30: TYPE
 
65 TYPE 
 728,30: TYPE
 
298 * option_type_qualifier_list option_pointer 
 728,31: *
 
386 NAME VARIABLE 
 728,32: __stream
 728,40: VARIABLE
 
65 VARIABLE 
 728,40: VARIABLE
 
187 ) 
 728,40: )
 
60 ; 
 728,43: ;
 
23 extern 
 731,1: extern
 
8 void 
 731,8: void
 
5 NAME VARIABLE 
 731,13: funlockfile
 731,24: VARIABLE
 
65 VARIABLE 
 731,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 731,25: (
 731,26: FILE
 731,30: TYPE
 731,31: *
 731,32: __stream
 731,40: VARIABLE
 731,40: )
 
186 NAME TYPE 
 731,26: FILE
 731,30: TYPE
 
65 TYPE 
 731,30: TYPE
 
298 * option_type_qualifier_list option_pointer 
 731,31: *
 
386 NAME VARIABLE 
 731,32: __stream
 731,40: VARIABLE
 
65 VARIABLE 
 731,40: VARIABLE
 
187 ) 
 731,40: )
 
60 ; 
 731,42: ;
 
23 extern 
 733,1: extern
 
8 int 
 733,8: int
 
5 NAME VARIABLE 
 733,12: __uflow
 733,19: VARIABLE
 
65 VARIABLE 
 733,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 733,20: (
 733,21: FILE
 733,25: TYPE
 733,26: *
 733,27: )
 
186 NAME TYPE 
 733,21: FILE
 733,25: TYPE
 
65 TYPE 
 733,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 733,26: *
 
187 ) 
 733,27: )
 
60 ; 
 733,28: ;
 
23 extern 
 734,1: extern
 
8 int 
 734,8: int
 
5 NAME VARIABLE 
 734,12: __overflow
 734,22: VARIABLE
 
65 VARIABLE 
 734,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 734,23: (
 734,24: FILE
 734,28: TYPE
 734,29: *
 734,30: ,
 734,32: int
 734,35: )
 
186 NAME TYPE 
 734,24: FILE
 734,28: TYPE
 
65 TYPE 
 734,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 734,29: *
 
300 , parameter_declaration 
 734,30: ,
 734,32: int
 
391 int 
 734,32: int
 
187 ) 
 734,35: )
 
60 ; 
 734,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 749,1: typedef
 749,9: int
 
54 int 
 749,9: int
 
6 NAME VARIABLE 
 749,13: wchar_t
 749,20: VARIABLE
 
65 VARIABLE 
 749,20: VARIABLE
 
70 ; 
 749,20: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 763,1: typedef
 763,9: struct
 764,3: {
 765,5: int
 765,9: quot
 765,13: VARIABLE
 765,13: ;
 766,5: int
 766,9: rem
 766,12: VARIABLE
 766,12: ;
 767,3: }
 
54 struct 
 763,9: struct
 
89 { struct_declaration_list } 
 764,3: {
 765,5: int
 765,9: quot
 765,13: VARIABLE
 765,13: ;
 766,5: int
 766,9: rem
 766,12: VARIABLE
 766,12: ;
 767,3: }
 
126 int 
 765,5: int
 
200 NAME VARIABLE 
 765,9: quot
 765,13: VARIABLE
 
65 VARIABLE 
 765,13: VARIABLE
 
313 ; 
 765,13: ;
 
198 int 
 766,5: int
 
200 NAME VARIABLE 
 766,9: rem
 766,12: VARIABLE
 
65 VARIABLE 
 766,12: VARIABLE
 
313 ; 
 766,12: ;
 
198 } 
 767,3: }
 
6 NAME VARIABLE 
 767,5: div_t
 767,10: VARIABLE
 
65 VARIABLE 
 767,10: VARIABLE
 
70 ; 
 767,10: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 771,1: typedef
 771,9: struct
 772,3: {
 773,5: long
 773,10: int
 773,14: quot
 773,18: VARIABLE
 773,18: ;
 774,5: long
 774,10: int
 774,14: rem
 774,17: VARIABLE
 774,17: ;
 775,3: }
 
54 struct 
 771,9: struct
 
89 { struct_declaration_list } 
 772,3: {
 773,5: long
 773,10: int
 773,14: quot
 773,18: VARIABLE
 773,18: ;
 774,5: long
 774,10: int
 774,14: rem
 774,17: VARIABLE
 774,17: ;
 775,3: }
 
126 long 
 773,5: long
 
135 int 
 773,10: int
 
200 NAME VARIABLE 
 773,14: quot
 773,18: VARIABLE
 
65 VARIABLE 
 773,18: VARIABLE
 
313 ; 
 773,18: ;
 
198 long 
 774,5: long
 
135 int 
 774,10: int
 
200 NAME VARIABLE 
 774,14: rem
 774,17: VARIABLE
 
65 VARIABLE 
 774,17: VARIABLE
 
313 ; 
 774,17: ;
 
198 } 
 775,3: }
 
6 NAME VARIABLE 
 775,5: ldiv_t
 775,11: VARIABLE
 
65 VARIABLE 
 775,11: VARIABLE
 
70 ; 
 775,11: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 781,2: typedef
 781,10: struct
 782,3: {
 783,5: long
 783,10: long
 783,15: int
 783,19: quot
 783,23: VARIABLE
 783,23: ;
 784,5: long
 784,10: long
 784,15: int
 784,19: rem
 784,22: VARIABLE
 784,22: ;
 785,3: }
 
54 struct 
 781,10: struct
 
89 { struct_declaration_list } 
 782,3: {
 783,5: long
 783,10: long
 783,15: int
 783,19: quot
 783,23: VARIABLE
 783,23: ;
 784,5: long
 784,10: long
 784,15: int
 784,19: rem
 784,22: VARIABLE
 784,22: ;
 785,3: }
 
126 long 
 783,5: long
 
135 long 
 783,10: long
 
135 int 
 783,15: int
 
200 NAME VARIABLE 
 783,19: quot
 783,23: VARIABLE
 
65 VARIABLE 
 783,23: VARIABLE
 
313 ; 
 783,23: ;
 
198 long 
 784,5: long
 
135 long 
 784,10: long
 
135 int 
 784,15: int
 
200 NAME VARIABLE 
 784,19: rem
 784,22: VARIABLE
 
65 VARIABLE 
 784,22: VARIABLE
 
313 ; 
 784,22: ;
 
198 } 
 785,3: }
 
6 NAME VARIABLE 
 785,5: lldiv_t
 785,12: VARIABLE
 
65 VARIABLE 
 785,12: VARIABLE
 
70 ; 
 785,12: ;
 
23 extern 
 787,1: extern
 
8 NAME TYPE 
 787,8: size_t
 787,14: TYPE
 
26 TYPE 
 787,14: TYPE
 
5 NAME VARIABLE 
 787,15: __ctype_get_mb_cur_max
 787,37: VARIABLE
 
65 VARIABLE 
 787,37: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 787,38: (
 787,39: void
 787,43: )
 
186 void 
 787,39: void
 
187 ) 
 787,43: )
 
60 ; 
 787,46: ;
 
23 extern 
 791,1: extern
 
8 double 
 791,8: double
 
5 NAME VARIABLE 
 791,15: atof
 791,19: VARIABLE
 
65 VARIABLE 
 791,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 791,20: (
 791,21: const
 791,27: char
 791,32: *
 791,33: __nptr
 791,39: VARIABLE
 791,39: )
 
186 const 
 791,21: const
 
103 char 
 791,27: char
 
298 * option_type_qualifier_list option_pointer 
 791,32: *
 
386 NAME VARIABLE 
 791,33: __nptr
 791,39: VARIABLE
 
65 VARIABLE 
 791,39: VARIABLE
 
187 ) 
 791,39: )
 
60 ; 
 792,9: ;
 
23 extern 
 794,1: extern
 
8 int 
 794,8: int
 
5 NAME VARIABLE 
 794,12: atoi
 794,16: VARIABLE
 
65 VARIABLE 
 794,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 794,17: (
 794,18: const
 794,24: char
 794,29: *
 794,30: __nptr
 794,36: VARIABLE
 794,36: )
 
186 const 
 794,18: const
 
103 char 
 794,24: char
 
298 * option_type_qualifier_list option_pointer 
 794,29: *
 
386 NAME VARIABLE 
 794,30: __nptr
 794,36: VARIABLE
 
65 VARIABLE 
 794,36: VARIABLE
 
187 ) 
 794,36: )
 
60 ; 
 795,9: ;
 
23 extern 
 797,1: extern
 
8 long 
 797,8: long
 
17 int 
 797,13: int
 
5 NAME VARIABLE 
 797,17: atol
 797,21: VARIABLE
 
65 VARIABLE 
 797,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 797,22: (
 797,23: const
 797,29: char
 797,34: *
 797,35: __nptr
 797,41: VARIABLE
 797,41: )
 
186 const 
 797,23: const
 
103 char 
 797,29: char
 
298 * option_type_qualifier_list option_pointer 
 797,34: *
 
386 NAME VARIABLE 
 797,35: __nptr
 797,41: VARIABLE
 
65 VARIABLE 
 797,41: VARIABLE
 
187 ) 
 797,41: )
 
60 ; 
 798,9: ;
 
23 extern 
 802,2: extern
 
8 long 
 802,9: long
 
17 long 
 802,14: long
 
17 int 
 802,19: int
 
5 NAME VARIABLE 
 802,23: atoll
 802,28: VARIABLE
 
65 VARIABLE 
 802,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 802,29: (
 802,30: const
 802,36: char
 802,41: *
 802,42: __nptr
 802,48: VARIABLE
 802,48: )
 
186 const 
 802,30: const
 
103 char 
 802,36: char
 
298 * option_type_qualifier_list option_pointer 
 802,41: *
 
386 NAME VARIABLE 
 802,42: __nptr
 802,48: VARIABLE
 
65 VARIABLE 
 802,48: VARIABLE
 
187 ) 
 802,48: )
 
60 ; 
 803,9: ;
 
23 extern 
 807,1: extern
 
8 double 
 807,8: double
 
5 NAME VARIABLE 
 807,15: strtod
 807,21: VARIABLE
 
65 VARIABLE 
 807,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 807,22: (
 807,23: const
 807,29: char
 807,34: *
 807,36: __nptr
 807,42: VARIABLE
 807,42: ,
 808,9: char
 808,14: *
 808,15: *
 808,17: __endptr
 808,25: VARIABLE
 808,25: )
 
186 const 
 807,23: const
 
103 char 
 807,29: char
 
298 * option_type_qualifier_list option_pointer 
 807,34: *
 
386 NAME VARIABLE 
 807,36: __nptr
 807,42: VARIABLE
 
65 VARIABLE 
 807,42: VARIABLE
 
300 , parameter_declaration 
 807,42: ,
 808,9: char
 808,14: *
 808,15: *
 808,17: __endptr
 808,25: VARIABLE
 
391 char 
 808,9: char
 
298 * option_type_qualifier_list option_pointer 
 808,14: *
 808,15: *
 
116 * option_type_qualifier_list option_pointer 
 808,15: *
 
386 NAME VARIABLE 
 808,17: __endptr
 808,25: VARIABLE
 
65 VARIABLE 
 808,25: VARIABLE
 
187 ) 
 808,25: )
 
60 ; 
 809,7: ;
 
23 extern 
 813,1: extern
 
8 float 
 813,8: float
 
5 NAME VARIABLE 
 813,14: strtof
 813,20: VARIABLE
 
65 VARIABLE 
 813,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 813,21: (
 813,22: const
 813,28: char
 813,33: *
 813,35: __nptr
 813,41: VARIABLE
 813,41: ,
 814,8: char
 814,13: *
 814,14: *
 814,16: __endptr
 814,24: VARIABLE
 814,24: )
 
186 const 
 813,22: const
 
103 char 
 813,28: char
 
298 * option_type_qualifier_list option_pointer 
 813,33: *
 
386 NAME VARIABLE 
 813,35: __nptr
 813,41: VARIABLE
 
65 VARIABLE 
 813,41: VARIABLE
 
300 , parameter_declaration 
 813,41: ,
 814,8: char
 814,13: *
 814,14: *
 814,16: __endptr
 814,24: VARIABLE
 
391 char 
 814,8: char
 
298 * option_type_qualifier_list option_pointer 
 814,13: *
 814,14: *
 
116 * option_type_qualifier_list option_pointer 
 814,14: *
 
386 NAME VARIABLE 
 814,16: __endptr
 814,24: VARIABLE
 
65 VARIABLE 
 814,24: VARIABLE
 
187 ) 
 814,24: )
 
60 ; 
 814,27: ;
 
23 extern 
 816,1: extern
 
8 long 
 816,8: long
 
17 double 
 816,13: double
 
5 NAME VARIABLE 
 816,20: strtold
 816,27: VARIABLE
 
65 VARIABLE 
 816,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 816,28: (
 816,29: const
 816,35: char
 816,40: *
 816,42: __nptr
 816,48: VARIABLE
 816,48: ,
 817,8: char
 817,13: *
 817,14: *
 817,16: __endptr
 817,24: VARIABLE
 817,24: )
 
186 const 
 816,29: const
 
103 char 
 816,35: char
 
298 * option_type_qualifier_list option_pointer 
 816,40: *
 
386 NAME VARIABLE 
 816,42: __nptr
 816,48: VARIABLE
 
65 VARIABLE 
 816,48: VARIABLE
 
300 , parameter_declaration 
 816,48: ,
 817,8: char
 817,13: *
 817,14: *
 817,16: __endptr
 817,24: VARIABLE
 
391 char 
 817,8: char
 
298 * option_type_qualifier_list option_pointer 
 817,13: *
 817,14: *
 
116 * option_type_qualifier_list option_pointer 
 817,14: *
 
386 NAME VARIABLE 
 817,16: __endptr
 817,24: VARIABLE
 
65 VARIABLE 
 817,24: VARIABLE
 
187 ) 
 817,24: )
 
60 ; 
 818,7: ;
 
23 extern 
 820,1: extern
 
8 long 
 820,8: long
 
17 int 
 820,13: int
 
5 NAME VARIABLE 
 820,17: strtol
 820,23: VARIABLE
 
65 VARIABLE 
 820,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 820,24: (
 820,25: const
 820,31: char
 820,36: *
 820,38: __nptr
 820,44: VARIABLE
 820,44: ,
 821,4: char
 821,9: *
 821,10: *
 821,12: __endptr
 821,20: VARIABLE
 821,20: ,
 821,22: int
 821,26: __base
 821,32: VARIABLE
 821,32: )
 
186 const 
 820,25: const
 
103 char 
 820,31: char
 
298 * option_type_qualifier_list option_pointer 
 820,36: *
 
386 NAME VARIABLE 
 820,38: __nptr
 820,44: VARIABLE
 
65 VARIABLE 
 820,44: VARIABLE
 
300 , parameter_declaration 
 820,44: ,
 821,4: char
 821,9: *
 821,10: *
 821,12: __endptr
 821,20: VARIABLE
 
391 char 
 821,4: char
 
298 * option_type_qualifier_list option_pointer 
 821,9: *
 821,10: *
 
116 * option_type_qualifier_list option_pointer 
 821,10: *
 
386 NAME VARIABLE 
 821,12: __endptr
 821,20: VARIABLE
 
65 VARIABLE 
 821,20: VARIABLE
 
300 , parameter_declaration 
 821,20: ,
 821,22: int
 821,26: __base
 821,32: VARIABLE
 
391 int 
 821,22: int
 
298 NAME VARIABLE 
 821,26: __base
 821,32: VARIABLE
 
65 VARIABLE 
 821,32: VARIABLE
 
187 ) 
 821,32: )
 
60 ; 
 822,7: ;
 
23 extern 
 824,1: extern
 
8 unsigned 
 824,8: unsigned
 
17 long 
 824,17: long
 
17 int 
 824,22: int
 
5 NAME VARIABLE 
 824,26: strtoul
 824,33: VARIABLE
 
65 VARIABLE 
 824,33: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 824,34: (
 824,35: const
 824,41: char
 824,46: *
 824,48: __nptr
 824,54: VARIABLE
 824,54: ,
 825,7: char
 825,12: *
 825,13: *
 825,15: __endptr
 825,23: VARIABLE
 825,23: ,
 825,25: int
 825,29: __base
 825,35: VARIABLE
 825,35: )
 
186 const 
 824,35: const
 
103 char 
 824,41: char
 
298 * option_type_qualifier_list option_pointer 
 824,46: *
 
386 NAME VARIABLE 
 824,48: __nptr
 824,54: VARIABLE
 
65 VARIABLE 
 824,54: VARIABLE
 
300 , parameter_declaration 
 824,54: ,
 825,7: char
 825,12: *
 825,13: *
 825,15: __endptr
 825,23: VARIABLE
 
391 char 
 825,7: char
 
298 * option_type_qualifier_list option_pointer 
 825,12: *
 825,13: *
 
116 * option_type_qualifier_list option_pointer 
 825,13: *
 
386 NAME VARIABLE 
 825,15: __endptr
 825,23: VARIABLE
 
65 VARIABLE 
 825,23: VARIABLE
 
300 , parameter_declaration 
 825,23: ,
 825,25: int
 825,29: __base
 825,35: VARIABLE
 
391 int 
 825,25: int
 
298 NAME VARIABLE 
 825,29: __base
 825,35: VARIABLE
 
65 VARIABLE 
 825,35: VARIABLE
 
187 ) 
 825,35: )
 
60 ; 
 826,7: ;
 
23 extern 
 831,1: extern
 
8 long 
 831,8: long
 
17 long 
 831,13: long
 
17 int 
 831,18: int
 
5 NAME VARIABLE 
 831,22: strtoq
 831,28: VARIABLE
 
65 VARIABLE 
 831,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 831,29: (
 831,30: const
 831,36: char
 831,41: *
 831,43: __nptr
 831,49: VARIABLE
 831,49: ,
 832,9: char
 832,14: *
 832,15: *
 832,17: __endptr
 832,25: VARIABLE
 832,25: ,
 832,27: int
 832,31: __base
 832,37: VARIABLE
 832,37: )
 
186 const 
 831,30: const
 
103 char 
 831,36: char
 
298 * option_type_qualifier_list option_pointer 
 831,41: *
 
386 NAME VARIABLE 
 831,43: __nptr
 831,49: VARIABLE
 
65 VARIABLE 
 831,49: VARIABLE
 
300 , parameter_declaration 
 831,49: ,
 832,9: char
 832,14: *
 832,15: *
 832,17: __endptr
 832,25: VARIABLE
 
391 char 
 832,9: char
 
298 * option_type_qualifier_list option_pointer 
 832,14: *
 832,15: *
 
116 * option_type_qualifier_list option_pointer 
 832,15: *
 
386 NAME VARIABLE 
 832,17: __endptr
 832,25: VARIABLE
 
65 VARIABLE 
 832,25: VARIABLE
 
300 , parameter_declaration 
 832,25: ,
 832,27: int
 832,31: __base
 832,37: VARIABLE
 
391 int 
 832,27: int
 
298 NAME VARIABLE 
 832,31: __base
 832,37: VARIABLE
 
65 VARIABLE 
 832,37: VARIABLE
 
187 ) 
 832,37: )
 
60 ; 
 833,7: ;
 
23 extern 
 836,1: extern
 
8 unsigned 
 836,8: unsigned
 
17 long 
 836,17: long
 
17 long 
 836,22: long
 
17 int 
 836,27: int
 
5 NAME VARIABLE 
 836,31: strtouq
 836,38: VARIABLE
 
65 VARIABLE 
 836,38: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 836,39: (
 836,40: const
 836,46: char
 836,51: *
 836,53: __nptr
 836,59: VARIABLE
 836,59: ,
 837,12: char
 837,17: *
 837,18: *
 837,20: __endptr
 837,28: VARIABLE
 837,28: ,
 837,30: int
 837,34: __base
 837,40: VARIABLE
 837,40: )
 
186 const 
 836,40: const
 
103 char 
 836,46: char
 
298 * option_type_qualifier_list option_pointer 
 836,51: *
 
386 NAME VARIABLE 
 836,53: __nptr
 836,59: VARIABLE
 
65 VARIABLE 
 836,59: VARIABLE
 
300 , parameter_declaration 
 836,59: ,
 837,12: char
 837,17: *
 837,18: *
 837,20: __endptr
 837,28: VARIABLE
 
391 char 
 837,12: char
 
298 * option_type_qualifier_list option_pointer 
 837,17: *
 837,18: *
 
116 * option_type_qualifier_list option_pointer 
 837,18: *
 
386 NAME VARIABLE 
 837,20: __endptr
 837,28: VARIABLE
 
65 VARIABLE 
 837,28: VARIABLE
 
300 , parameter_declaration 
 837,28: ,
 837,30: int
 837,34: __base
 837,40: VARIABLE
 
391 int 
 837,30: int
 
298 NAME VARIABLE 
 837,34: __base
 837,40: VARIABLE
 
65 VARIABLE 
 837,40: VARIABLE
 
187 ) 
 837,40: )
 
60 ; 
 838,7: ;
 
23 extern 
 844,1: extern
 
8 long 
 844,8: long
 
17 long 
 844,13: long
 
17 int 
 844,18: int
 
5 NAME VARIABLE 
 844,22: strtoll
 844,29: VARIABLE
 
65 VARIABLE 
 844,29: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 844,30: (
 844,31: const
 844,37: char
 844,42: *
 844,44: __nptr
 844,50: VARIABLE
 844,50: ,
 845,10: char
 845,15: *
 845,16: *
 845,18: __endptr
 845,26: VARIABLE
 845,26: ,
 845,28: int
 845,32: __base
 845,38: VARIABLE
 845,38: )
 
186 const 
 844,31: const
 
103 char 
 844,37: char
 
298 * option_type_qualifier_list option_pointer 
 844,42: *
 
386 NAME VARIABLE 
 844,44: __nptr
 844,50: VARIABLE
 
65 VARIABLE 
 844,50: VARIABLE
 
300 , parameter_declaration 
 844,50: ,
 845,10: char
 845,15: *
 845,16: *
 845,18: __endptr
 845,26: VARIABLE
 
391 char 
 845,10: char
 
298 * option_type_qualifier_list option_pointer 
 845,15: *
 845,16: *
 
116 * option_type_qualifier_list option_pointer 
 845,16: *
 
386 NAME VARIABLE 
 845,18: __endptr
 845,26: VARIABLE
 
65 VARIABLE 
 845,26: VARIABLE
 
300 , parameter_declaration 
 845,26: ,
 845,28: int
 845,32: __base
 845,38: VARIABLE
 
391 int 
 845,28: int
 
298 NAME VARIABLE 
 845,32: __base
 845,38: VARIABLE
 
65 VARIABLE 
 845,38: VARIABLE
 
187 ) 
 845,38: )
 
60 ; 
 846,7: ;
 
23 extern 
 849,1: extern
 
8 unsigned 
 849,8: unsigned
 
17 long 
 849,17: long
 
17 long 
 849,22: long
 
17 int 
 849,27: int
 
5 NAME VARIABLE 
 849,31: strtoull
 849,39: VARIABLE
 
65 VARIABLE 
 849,39: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 849,40: (
 849,41: const
 849,47: char
 849,52: *
 849,54: __nptr
 849,60: VARIABLE
 849,60: ,
 850,6: char
 850,11: *
 850,12: *
 850,14: __endptr
 850,22: VARIABLE
 850,22: ,
 850,24: int
 850,28: __base
 850,34: VARIABLE
 850,34: )
 
186 const 
 849,41: const
 
103 char 
 849,47: char
 
298 * option_type_qualifier_list option_pointer 
 849,52: *
 
386 NAME VARIABLE 
 849,54: __nptr
 849,60: VARIABLE
 
65 VARIABLE 
 849,60: VARIABLE
 
300 , parameter_declaration 
 849,60: ,
 850,6: char
 850,11: *
 850,12: *
 850,14: __endptr
 850,22: VARIABLE
 
391 char 
 850,6: char
 
298 * option_type_qualifier_list option_pointer 
 850,11: *
 850,12: *
 
116 * option_type_qualifier_list option_pointer 
 850,12: *
 
386 NAME VARIABLE 
 850,14: __endptr
 850,22: VARIABLE
 
65 VARIABLE 
 850,22: VARIABLE
 
300 , parameter_declaration 
 850,22: ,
 850,24: int
 850,28: __base
 850,34: VARIABLE
 
391 int 
 850,24: int
 
298 NAME VARIABLE 
 850,28: __base
 850,34: VARIABLE
 
65 VARIABLE 
 850,34: VARIABLE
 
187 ) 
 850,34: )
 
60 ; 
 851,7: ;
 
23 extern 
 853,1: extern
 
8 char 
 853,8: char
 
5 * option_type_qualifier_list option_pointer 
 853,13: *
 
64 NAME VARIABLE 
 853,14: l64a
 853,18: VARIABLE
 
65 VARIABLE 
 853,18: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 853,19: (
 853,20: long
 853,25: int
 853,29: __n
 853,32: VARIABLE
 853,32: )
 
186 long 
 853,20: long
 
106 int 
 853,25: int
 
298 NAME VARIABLE 
 853,29: __n
 853,32: VARIABLE
 
65 VARIABLE 
 853,32: VARIABLE
 
187 ) 
 853,32: )
 
60 ; 
 853,35: ;
 
23 extern 
 856,1: extern
 
8 long 
 856,8: long
 
17 int 
 856,13: int
 
5 NAME VARIABLE 
 856,17: a64l
 856,21: VARIABLE
 
65 VARIABLE 
 856,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 856,22: (
 856,23: const
 856,29: char
 856,34: *
 856,35: __s
 856,38: VARIABLE
 856,38: )
 
186 const 
 856,23: const
 
103 char 
 856,29: char
 
298 * option_type_qualifier_list option_pointer 
 856,34: *
 
386 NAME VARIABLE 
 856,35: __s
 856,38: VARIABLE
 
65 VARIABLE 
 856,38: VARIABLE
 
187 ) 
 856,38: )
 
60 ; 
 857,9: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 870,1: typedef
 870,9: __u_char
 870,17: TYPE
 
54 NAME TYPE 
 870,9: __u_char
 870,17: TYPE
 
26 TYPE 
 870,17: TYPE
 
6 NAME VARIABLE 
 870,18: u_char
 870,24: VARIABLE
 
65 VARIABLE 
 870,24: VARIABLE
 
70 ; 
 870,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 871,1: typedef
 871,9: __u_short
 871,18: TYPE
 
54 NAME TYPE 
 871,9: __u_short
 871,18: TYPE
 
26 TYPE 
 871,18: TYPE
 
6 NAME VARIABLE 
 871,19: u_short
 871,26: VARIABLE
 
65 VARIABLE 
 871,26: VARIABLE
 
70 ; 
 871,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 872,1: typedef
 872,9: __u_int
 872,16: TYPE
 
54 NAME TYPE 
 872,9: __u_int
 872,16: TYPE
 
26 TYPE 
 872,16: TYPE
 
6 NAME VARIABLE 
 872,17: u_int
 872,22: VARIABLE
 
65 VARIABLE 
 872,22: VARIABLE
 
70 ; 
 872,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 873,1: typedef
 873,9: __u_long
 873,17: TYPE
 
54 NAME TYPE 
 873,9: __u_long
 873,17: TYPE
 
26 TYPE 
 873,17: TYPE
 
6 NAME VARIABLE 
 873,18: u_long
 873,24: VARIABLE
 
65 VARIABLE 
 873,24: VARIABLE
 
70 ; 
 873,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 874,1: typedef
 874,9: __quad_t
 874,17: TYPE
 
54 NAME TYPE 
 874,9: __quad_t
 874,17: TYPE
 
26 TYPE 
 874,17: TYPE
 
6 NAME VARIABLE 
 874,18: quad_t
 874,24: VARIABLE
 
65 VARIABLE 
 874,24: VARIABLE
 
70 ; 
 874,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 875,1: typedef
 875,9: __u_quad_t
 875,19: TYPE
 
54 NAME TYPE 
 875,9: __u_quad_t
 875,19: TYPE
 
26 TYPE 
 875,19: TYPE
 
6 NAME VARIABLE 
 875,20: u_quad_t
 875,28: VARIABLE
 
65 VARIABLE 
 875,28: VARIABLE
 
70 ; 
 875,28: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 876,1: typedef
 876,9: __fsid_t
 876,17: TYPE
 
54 NAME TYPE 
 876,9: __fsid_t
 876,17: TYPE
 
26 TYPE 
 876,17: TYPE
 
6 NAME VARIABLE 
 876,18: fsid_t
 876,24: VARIABLE
 
65 VARIABLE 
 876,24: VARIABLE
 
70 ; 
 876,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 879,1: typedef
 879,9: __loff_t
 879,17: TYPE
 
54 NAME TYPE 
 879,9: __loff_t
 879,17: TYPE
 
26 TYPE 
 879,17: TYPE
 
6 NAME VARIABLE 
 879,18: loff_t
 879,24: VARIABLE
 
65 VARIABLE 
 879,24: VARIABLE
 
70 ; 
 879,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 884,1: typedef
 884,9: __ino_t
 884,16: TYPE
 
54 NAME TYPE 
 884,9: __ino_t
 884,16: TYPE
 
26 TYPE 
 884,16: TYPE
 
6 NAME VARIABLE 
 884,17: ino_t
 884,22: VARIABLE
 
65 VARIABLE 
 884,22: VARIABLE
 
70 ; 
 884,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 886,1: typedef
 886,9: __dev_t
 886,16: TYPE
 
54 NAME TYPE 
 886,9: __dev_t
 886,16: TYPE
 
26 TYPE 
 886,16: TYPE
 
6 NAME VARIABLE 
 886,17: dev_t
 886,22: VARIABLE
 
65 VARIABLE 
 886,22: VARIABLE
 
70 ; 
 886,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 891,1: typedef
 891,9: __gid_t
 891,16: TYPE
 
54 NAME TYPE 
 891,9: __gid_t
 891,16: TYPE
 
26 TYPE 
 891,16: TYPE
 
6 NAME VARIABLE 
 891,17: gid_t
 891,22: VARIABLE
 
65 VARIABLE 
 891,22: VARIABLE
 
70 ; 
 891,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 896,1: typedef
 896,9: __mode_t
 896,17: TYPE
 
54 NAME TYPE 
 896,9: __mode_t
 896,17: TYPE
 
26 TYPE 
 896,17: TYPE
 
6 NAME VARIABLE 
 896,18: mode_t
 896,24: VARIABLE
 
65 VARIABLE 
 896,24: VARIABLE
 
70 ; 
 896,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 901,1: typedef
 901,9: __nlink_t
 901,18: TYPE
 
54 NAME TYPE 
 901,9: __nlink_t
 901,18: TYPE
 
26 TYPE 
 901,18: TYPE
 
6 NAME VARIABLE 
 901,19: nlink_t
 901,26: VARIABLE
 
65 VARIABLE 
 901,26: VARIABLE
 
70 ; 
 901,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 906,1: typedef
 906,9: __uid_t
 906,16: TYPE
 
54 NAME TYPE 
 906,9: __uid_t
 906,16: TYPE
 
26 TYPE 
 906,16: TYPE
 
6 NAME VARIABLE 
 906,17: uid_t
 906,22: VARIABLE
 
65 VARIABLE 
 906,22: VARIABLE
 
70 ; 
 906,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 908,1: typedef
 908,9: __pid_t
 908,16: TYPE
 
54 NAME TYPE 
 908,9: __pid_t
 908,16: TYPE
 
26 TYPE 
 908,16: TYPE
 
6 NAME VARIABLE 
 908,17: pid_t
 908,22: VARIABLE
 
65 VARIABLE 
 908,22: VARIABLE
 
70 ; 
 908,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 914,1: typedef
 914,9: __id_t
 914,15: TYPE
 
54 NAME TYPE 
 914,9: __id_t
 914,15: TYPE
 
26 TYPE 
 914,15: TYPE
 
6 NAME VARIABLE 
 914,16: id_t
 914,20: VARIABLE
 
65 VARIABLE 
 914,20: VARIABLE
 
70 ; 
 914,20: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 916,1: typedef
 916,9: __daddr_t
 916,18: TYPE
 
54 NAME TYPE 
 916,9: __daddr_t
 916,18: TYPE
 
26 TYPE 
 916,18: TYPE
 
6 NAME VARIABLE 
 916,19: daddr_t
 916,26: VARIABLE
 
65 VARIABLE 
 916,26: VARIABLE
 
70 ; 
 916,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 917,1: typedef
 917,9: __caddr_t
 917,18: TYPE
 
54 NAME TYPE 
 917,9: __caddr_t
 917,18: TYPE
 
26 TYPE 
 917,18: TYPE
 
6 NAME VARIABLE 
 917,19: caddr_t
 917,26: VARIABLE
 
65 VARIABLE 
 917,26: VARIABLE
 
70 ; 
 917,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 923,1: typedef
 923,9: __key_t
 923,16: TYPE
 
54 NAME TYPE 
 923,9: __key_t
 923,16: TYPE
 
26 TYPE 
 923,16: TYPE
 
6 NAME VARIABLE 
 923,17: key_t
 923,22: VARIABLE
 
65 VARIABLE 
 923,22: VARIABLE
 
70 ; 
 923,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 935,1: typedef
 935,9: __clock_t
 935,18: TYPE
 
54 NAME TYPE 
 935,9: __clock_t
 935,18: TYPE
 
26 TYPE 
 935,18: TYPE
 
6 NAME VARIABLE 
 935,19: clock_t
 935,26: VARIABLE
 
65 VARIABLE 
 935,26: VARIABLE
 
70 ; 
 935,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 945,1: typedef
 945,9: __clockid_t
 945,20: TYPE
 
54 NAME TYPE 
 945,9: __clockid_t
 945,20: TYPE
 
26 TYPE 
 945,20: TYPE
 
6 NAME VARIABLE 
 945,21: clockid_t
 945,30: VARIABLE
 
65 VARIABLE 
 945,30: VARIABLE
 
70 ; 
 945,30: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 949,1: typedef
 949,9: __time_t
 949,17: TYPE
 
54 NAME TYPE 
 949,9: __time_t
 949,17: TYPE
 
26 TYPE 
 949,17: TYPE
 
6 NAME VARIABLE 
 949,18: time_t
 949,24: VARIABLE
 
65 VARIABLE 
 949,24: VARIABLE
 
70 ; 
 949,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 958,1: typedef
 958,9: __timer_t
 958,18: TYPE
 
54 NAME TYPE 
 958,9: __timer_t
 958,18: TYPE
 
26 TYPE 
 958,18: TYPE
 
6 NAME VARIABLE 
 958,19: timer_t
 958,26: VARIABLE
 
65 VARIABLE 
 958,26: VARIABLE
 
70 ; 
 958,26: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 966,1: typedef
 966,9: unsigned
 966,18: long
 966,23: int
 
54 unsigned 
 966,9: unsigned
 
106 long 
 966,18: long
 
106 int 
 966,23: int
 
6 NAME VARIABLE 
 966,27: ulong
 966,32: VARIABLE
 
65 VARIABLE 
 966,32: VARIABLE
 
70 ; 
 966,32: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 967,1: typedef
 967,9: unsigned
 967,18: short
 967,24: int
 
54 unsigned 
 967,9: unsigned
 
106 short 
 967,18: short
 
106 int 
 967,24: int
 
6 NAME VARIABLE 
 967,28: ushort
 967,34: VARIABLE
 
65 VARIABLE 
 967,34: VARIABLE
 
70 ; 
 967,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 968,1: typedef
 968,9: unsigned
 968,18: int
 
54 unsigned 
 968,9: unsigned
 
106 int 
 968,18: int
 
6 NAME VARIABLE 
 968,22: uint
 968,26: VARIABLE
 
65 VARIABLE 
 968,26: VARIABLE
 
70 ; 
 968,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 975,1: typedef
 975,9: __int8_t
 975,17: TYPE
 
54 NAME TYPE 
 975,9: __int8_t
 975,17: TYPE
 
26 TYPE 
 975,17: TYPE
 
6 NAME VARIABLE 
 975,18: int8_t
 975,24: VARIABLE
 
65 VARIABLE 
 975,24: VARIABLE
 
70 ; 
 975,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 976,1: typedef
 976,9: __int16_t
 976,18: TYPE
 
54 NAME TYPE 
 976,9: __int16_t
 976,18: TYPE
 
26 TYPE 
 976,18: TYPE
 
6 NAME VARIABLE 
 976,19: int16_t
 976,26: VARIABLE
 
65 VARIABLE 
 976,26: VARIABLE
 
70 ; 
 976,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 977,1: typedef
 977,9: __int32_t
 977,18: TYPE
 
54 NAME TYPE 
 977,9: __int32_t
 977,18: TYPE
 
26 TYPE 
 977,18: TYPE
 
6 NAME VARIABLE 
 977,19: int32_t
 977,26: VARIABLE
 
65 VARIABLE 
 977,26: VARIABLE
 
70 ; 
 977,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 978,1: typedef
 978,9: __int64_t
 978,18: TYPE
 
54 NAME TYPE 
 978,9: __int64_t
 978,18: TYPE
 
26 TYPE 
 978,18: TYPE
 
6 NAME VARIABLE 
 978,19: int64_t
 978,26: VARIABLE
 
65 VARIABLE 
 978,26: VARIABLE
 
70 ; 
 978,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 982,1: typedef
 982,9: __uint8_t
 982,18: TYPE
 
54 NAME TYPE 
 982,9: __uint8_t
 982,18: TYPE
 
26 TYPE 
 982,18: TYPE
 
6 NAME VARIABLE 
 982,19: u_int8_t
 982,27: VARIABLE
 
65 VARIABLE 
 982,27: VARIABLE
 
70 ; 
 982,27: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 983,1: typedef
 983,9: __uint16_t
 983,19: TYPE
 
54 NAME TYPE 
 983,9: __uint16_t
 983,19: TYPE
 
26 TYPE 
 983,19: TYPE
 
6 NAME VARIABLE 
 983,20: u_int16_t
 983,29: VARIABLE
 
65 VARIABLE 
 983,29: VARIABLE
 
70 ; 
 983,29: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 984,1: typedef
 984,9: __uint32_t
 984,19: TYPE
 
54 NAME TYPE 
 984,9: __uint32_t
 984,19: TYPE
 
26 TYPE 
 984,19: TYPE
 
6 NAME VARIABLE 
 984,20: u_int32_t
 984,29: VARIABLE
 
65 VARIABLE 
 984,29: VARIABLE
 
70 ; 
 984,29: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 985,1: typedef
 985,9: __uint64_t
 985,19: TYPE
 
54 NAME TYPE 
 985,9: __uint64_t
 985,19: TYPE
 
26 TYPE 
 985,19: TYPE
 
6 NAME VARIABLE 
 985,20: u_int64_t
 985,29: VARIABLE
 
65 VARIABLE 
 985,29: VARIABLE
 
70 ; 
 985,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 988,1: typedef
 988,9: int
 
54 int 
 988,9: int
 
6 NAME VARIABLE 
 988,13: register_t
 988,23: VARIABLE
 
65 VARIABLE 
 988,23: VARIABLE
 
70 ; 
 988,24: ;
 
23 static 
 1000,1: static
 
8 NAME TYPE 
 1000,9: __uint16_t
 1000,19: TYPE
 
26 TYPE 
 1000,19: TYPE
 
5 NAME VARIABLE 
 1001,1: __bswap_16
 1001,11: VARIABLE
 
65 VARIABLE 
 1001,11: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1001,12: (
 1001,13: __uint16_t
 1001,23: TYPE
 1001,24: __bsx
 1001,29: VARIABLE
 1001,29: )
 
186 NAME TYPE 
 1001,13: __uint16_t
 1001,23: TYPE
 
65 TYPE 
 1001,23: TYPE
 
298 NAME VARIABLE 
 1001,24: __bsx
 1001,29: VARIABLE
 
65 VARIABLE 
 1001,29: VARIABLE
 
187 ) 
 1001,29: )
 
94 { option_block_item_list } 
 1002,1: {
 1004,3: return
 1004,10: __builtin_bswap16
 1004,27: VARIABLE
 1004,28: (
 1004,29: __bsx
 1004,34: VARIABLE
 1004,34: )
 1004,35: ;
 1008,1: }
 
201 return option_expression ; 
 1004,3: return
 1004,10: __builtin_bswap16
 1004,27: VARIABLE
 1004,28: (
 1004,29: __bsx
 1004,34: VARIABLE
 1004,34: )
 1004,35: ;
 
338 NAME VARIABLE 
 1004,10: __builtin_bswap16
 1004,27: VARIABLE
 
179 VARIABLE 
 1004,27: VARIABLE
 
147 ( option_argument_expression_list ) 
 1004,28: (
 1004,29: __bsx
 1004,34: VARIABLE
 1004,34: )
 
235 NAME VARIABLE 
 1004,29: __bsx
 1004,34: VARIABLE
 
179 VARIABLE 
 1004,34: VARIABLE
 
351 ) 
 1004,34: )
 
415 ; 
 1004,35: ;
 
201 } 
 1008,1: }
 
23 static 
 1015,1: static
 
8 NAME TYPE 
 1015,9: __uint32_t
 1015,19: TYPE
 
26 TYPE 
 1015,19: TYPE
 
5 NAME VARIABLE 
 1016,1: __bswap_32
 1016,11: VARIABLE
 
65 VARIABLE 
 1016,11: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1016,12: (
 1016,13: __uint32_t
 1016,23: TYPE
 1016,24: __bsx
 1016,29: VARIABLE
 1016,29: )
 
186 NAME TYPE 
 1016,13: __uint32_t
 1016,23: TYPE
 
65 TYPE 
 1016,23: TYPE
 
298 NAME VARIABLE 
 1016,24: __bsx
 1016,29: VARIABLE
 
65 VARIABLE 
 1016,29: VARIABLE
 
187 ) 
 1016,29: )
 
94 { option_block_item_list } 
 1017,1: {
 1019,3: return
 1019,10: __builtin_bswap32
 1019,27: VARIABLE
 1019,28: (
 1019,29: __bsx
 1019,34: VARIABLE
 1019,34: )
 1019,35: ;
 1023,1: }
 
201 return option_expression ; 
 1019,3: return
 1019,10: __builtin_bswap32
 1019,27: VARIABLE
 1019,28: (
 1019,29: __bsx
 1019,34: VARIABLE
 1019,34: )
 1019,35: ;
 
338 NAME VARIABLE 
 1019,10: __builtin_bswap32
 1019,27: VARIABLE
 
179 VARIABLE 
 1019,27: VARIABLE
 
147 ( option_argument_expression_list ) 
 1019,28: (
 1019,29: __bsx
 1019,34: VARIABLE
 1019,34: )
 
235 NAME VARIABLE 
 1019,29: __bsx
 1019,34: VARIABLE
 
179 VARIABLE 
 1019,34: VARIABLE
 
351 ) 
 1019,34: )
 
415 ; 
 1019,35: ;
 
201 } 
 1023,1: }
 
23 static 
 1025,2: static
 
8 NAME TYPE 
 1025,10: __uint64_t
 1025,20: TYPE
 
26 TYPE 
 1025,20: TYPE
 
5 NAME VARIABLE 
 1026,1: __bswap_64
 1026,11: VARIABLE
 
65 VARIABLE 
 1026,11: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1026,12: (
 1026,13: __uint64_t
 1026,23: TYPE
 1026,24: __bsx
 1026,29: VARIABLE
 1026,29: )
 
186 NAME TYPE 
 1026,13: __uint64_t
 1026,23: TYPE
 
65 TYPE 
 1026,23: TYPE
 
298 NAME VARIABLE 
 1026,24: __bsx
 1026,29: VARIABLE
 
65 VARIABLE 
 1026,29: VARIABLE
 
187 ) 
 1026,29: )
 
94 { option_block_item_list } 
 1027,1: {
 1029,3: return
 1029,10: __builtin_bswap64
 1029,27: VARIABLE
 1029,28: (
 1029,29: __bsx
 1029,34: VARIABLE
 1029,34: )
 1029,35: ;
 1033,1: }
 
201 return option_expression ; 
 1029,3: return
 1029,10: __builtin_bswap64
 1029,27: VARIABLE
 1029,28: (
 1029,29: __bsx
 1029,34: VARIABLE
 1029,34: )
 1029,35: ;
 
338 NAME VARIABLE 
 1029,10: __builtin_bswap64
 1029,27: VARIABLE
 
179 VARIABLE 
 1029,27: VARIABLE
 
147 ( option_argument_expression_list ) 
 1029,28: (
 1029,29: __bsx
 1029,34: VARIABLE
 1029,34: )
 
235 NAME VARIABLE 
 1029,29: __bsx
 1029,34: VARIABLE
 
179 VARIABLE 
 1029,34: VARIABLE
 
351 ) 
 1029,34: )
 
415 ; 
 1029,35: ;
 
201 } 
 1033,1: }
 
23 static 
 1037,1: static
 
8 NAME TYPE 
 1037,9: __uint16_t
 1037,19: TYPE
 
26 TYPE 
 1037,19: TYPE
 
5 NAME VARIABLE 
 1038,1: __uint16_identity
 1038,18: VARIABLE
 
65 VARIABLE 
 1038,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1038,19: (
 1038,20: __uint16_t
 1038,30: TYPE
 1038,31: __x
 1038,34: VARIABLE
 1038,34: )
 
186 NAME TYPE 
 1038,20: __uint16_t
 1038,30: TYPE
 
65 TYPE 
 1038,30: TYPE
 
298 NAME VARIABLE 
 1038,31: __x
 1038,34: VARIABLE
 
65 VARIABLE 
 1038,34: VARIABLE
 
187 ) 
 1038,34: )
 
94 { option_block_item_list } 
 1039,1: {
 1040,3: return
 1040,10: __x
 1040,13: VARIABLE
 1040,13: ;
 1041,1: }
 
201 return option_expression ; 
 1040,3: return
 1040,10: __x
 1040,13: VARIABLE
 1040,13: ;
 
338 NAME VARIABLE 
 1040,10: __x
 1040,13: VARIABLE
 
179 VARIABLE 
 1040,13: VARIABLE
 
415 ; 
 1040,13: ;
 
201 } 
 1041,1: }
 
23 static 
 1043,1: static
 
8 NAME TYPE 
 1043,9: __uint32_t
 1043,19: TYPE
 
26 TYPE 
 1043,19: TYPE
 
5 NAME VARIABLE 
 1044,1: __uint32_identity
 1044,18: VARIABLE
 
65 VARIABLE 
 1044,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1044,19: (
 1044,20: __uint32_t
 1044,30: TYPE
 1044,31: __x
 1044,34: VARIABLE
 1044,34: )
 
186 NAME TYPE 
 1044,20: __uint32_t
 1044,30: TYPE
 
65 TYPE 
 1044,30: TYPE
 
298 NAME VARIABLE 
 1044,31: __x
 1044,34: VARIABLE
 
65 VARIABLE 
 1044,34: VARIABLE
 
187 ) 
 1044,34: )
 
94 { option_block_item_list } 
 1045,1: {
 1046,3: return
 1046,10: __x
 1046,13: VARIABLE
 1046,13: ;
 1047,1: }
 
201 return option_expression ; 
 1046,3: return
 1046,10: __x
 1046,13: VARIABLE
 1046,13: ;
 
338 NAME VARIABLE 
 1046,10: __x
 1046,13: VARIABLE
 
179 VARIABLE 
 1046,13: VARIABLE
 
415 ; 
 1046,13: ;
 
201 } 
 1047,1: }
 
23 static 
 1049,1: static
 
8 NAME TYPE 
 1049,9: __uint64_t
 1049,19: TYPE
 
26 TYPE 
 1049,19: TYPE
 
5 NAME VARIABLE 
 1050,1: __uint64_identity
 1050,18: VARIABLE
 
65 VARIABLE 
 1050,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1050,19: (
 1050,20: __uint64_t
 1050,30: TYPE
 1050,31: __x
 1050,34: VARIABLE
 1050,34: )
 
186 NAME TYPE 
 1050,20: __uint64_t
 1050,30: TYPE
 
65 TYPE 
 1050,30: TYPE
 
298 NAME VARIABLE 
 1050,31: __x
 1050,34: VARIABLE
 
65 VARIABLE 
 1050,34: VARIABLE
 
187 ) 
 1050,34: )
 
94 { option_block_item_list } 
 1051,1: {
 1052,3: return
 1052,10: __x
 1052,13: VARIABLE
 1052,13: ;
 1053,1: }
 
201 return option_expression ; 
 1052,3: return
 1052,10: __x
 1052,13: VARIABLE
 1052,13: ;
 
338 NAME VARIABLE 
 1052,10: __x
 1052,13: VARIABLE
 
179 VARIABLE 
 1052,13: VARIABLE
 
415 ; 
 1052,13: ;
 
201 } 
 1053,1: }
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1073,1: typedef
 1073,9: struct
 1074,1: {
 1075,3: unsigned
 1075,12: long
 1075,17: int
 1075,21: __val
 1075,26: VARIABLE
 1075,26: [
 1075,27: (
 1075,28: 1024
 1075,33: /
 1075,35: (
 1075,36: 8
 1075,38: *
 1075,40: sizeof
 1075,47: (
 1075,48: unsigned
 1075,57: long
 1075,62: int
 1075,65: )
 1075,66: )
 1075,67: )
 1075,68: ]
 1075,69: ;
 1076,1: }
 
54 struct 
 1073,9: struct
 
89 { struct_declaration_list } 
 1074,1: {
 1075,3: unsigned
 1075,12: long
 1075,17: int
 1075,21: __val
 1075,26: VARIABLE
 1075,26: [
 1075,27: (
 1075,28: 1024
 1075,33: /
 1075,35: (
 1075,36: 8
 1075,38: *
 1075,40: sizeof
 1075,47: (
 1075,48: unsigned
 1075,57: long
 1075,62: int
 1075,65: )
 1075,66: )
 1075,67: )
 1075,68: ]
 1075,69: ;
 1076,1: }
 
126 unsigned 
 1075,3: unsigned
 
135 long 
 1075,12: long
 
135 int 
 1075,17: int
 
200 NAME VARIABLE 
 1075,21: __val
 1075,26: VARIABLE
 
65 VARIABLE 
 1075,26: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1075,26: [
 1075,27: (
 1075,28: 1024
 1075,33: /
 1075,35: (
 1075,36: 8
 1075,38: *
 1075,40: sizeof
 1075,47: (
 1075,48: unsigned
 1075,57: long
 1075,62: int
 1075,65: )
 1075,66: )
 1075,67: )
 1075,68: ]
 
188 ( expression ) 
 1075,27: (
 1075,28: 1024
 1075,33: /
 1075,35: (
 1075,36: 8
 1075,38: *
 1075,40: sizeof
 1075,47: (
 1075,48: unsigned
 1075,57: long
 1075,62: int
 1075,65: )
 1075,66: )
 1075,67: )
 
165 CONSTANT 
 1075,28: 1024
 
151 / 
 1075,33: /
 
242 ( expression ) 
 1075,35: (
 1075,36: 8
 1075,38: *
 1075,40: sizeof
 1075,47: (
 1075,48: unsigned
 1075,57: long
 1075,62: int
 1075,65: )
 1075,66: )
 
165 CONSTANT 
 1075,36: 8
 
151 * 
 1075,38: *
 
242 sizeof ( type_name ) 
 1075,40: sizeof
 1075,47: (
 1075,48: unsigned
 1075,57: long
 1075,62: int
 1075,65: )
 
170 ( type_name ) 
 1075,47: (
 1075,48: unsigned
 1075,57: long
 1075,62: int
 1075,65: )
 
276 unsigned 
 1075,48: unsigned
 
135 long 
 1075,57: long
 
135 int 
 1075,62: int
 
373 ) 
 1075,65: )
 
267 ) 
 1075,66: )
 
267 ) 
 1075,67: )
 
305 ] 
 1075,68: ]
 
313 ; 
 1075,69: ;
 
198 } 
 1076,1: }
 
6 NAME VARIABLE 
 1076,3: __sigset_t
 1076,13: VARIABLE
 
65 VARIABLE 
 1076,13: VARIABLE
 
70 ; 
 1076,13: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1080,1: typedef
 1080,9: __sigset_t
 1080,19: TYPE
 
54 NAME TYPE 
 1080,9: __sigset_t
 1080,19: TYPE
 
26 TYPE 
 1080,19: TYPE
 
6 NAME VARIABLE 
 1080,20: sigset_t
 1080,28: VARIABLE
 
65 VARIABLE 
 1080,28: VARIABLE
 
70 ; 
 1080,28: ;
 
23 struct 
 1093,1: struct
 
22 NAME VARIABLE 
 1093,8: timeval
 1093,15: VARIABLE
 
65 VARIABLE 
 1093,15: VARIABLE
 
89 { struct_declaration_list } 
 1094,1: {
 1099,3: __time_t
 1099,11: TYPE
 1099,12: tv_sec
 1099,18: VARIABLE
 1099,18: ;
 1100,3: __suseconds_t
 1100,16: TYPE
 1100,17: tv_usec
 1100,24: VARIABLE
 1100,24: ;
 1102,1: }
 
126 NAME TYPE 
 1099,3: __time_t
 1099,11: TYPE
 
26 TYPE 
 1099,11: TYPE
 
200 NAME VARIABLE 
 1099,12: tv_sec
 1099,18: VARIABLE
 
65 VARIABLE 
 1099,18: VARIABLE
 
313 ; 
 1099,18: ;
 
198 NAME TYPE 
 1100,3: __suseconds_t
 1100,16: TYPE
 
26 TYPE 
 1100,16: TYPE
 
200 NAME VARIABLE 
 1100,17: tv_usec
 1100,24: VARIABLE
 
65 VARIABLE 
 1100,24: VARIABLE
 
313 ; 
 1100,24: ;
 
198 } 
 1102,1: }
 
60 ; 
 1102,2: ;
 
23 struct 
 1107,1: struct
 
22 NAME VARIABLE 
 1107,8: timespec
 1107,16: VARIABLE
 
65 VARIABLE 
 1107,16: VARIABLE
 
89 { struct_declaration_list } 
 1108,1: {
 1112,3: __time_t
 1112,11: TYPE
 1112,12: tv_sec
 1112,18: VARIABLE
 1112,18: ;
 1117,3: __syscall_slong_t
 1117,20: TYPE
 1117,21: tv_nsec
 1117,28: VARIABLE
 1117,28: ;
 1119,1: }
 
126 NAME TYPE 
 1112,3: __time_t
 1112,11: TYPE
 
26 TYPE 
 1112,11: TYPE
 
200 NAME VARIABLE 
 1112,12: tv_sec
 1112,18: VARIABLE
 
65 VARIABLE 
 1112,18: VARIABLE
 
313 ; 
 1112,18: ;
 
198 NAME TYPE 
 1117,3: __syscall_slong_t
 1117,20: TYPE
 
26 TYPE 
 1117,20: TYPE
 
200 NAME VARIABLE 
 1117,21: tv_nsec
 1117,28: VARIABLE
 
65 VARIABLE 
 1117,28: VARIABLE
 
313 ; 
 1117,28: ;
 
198 } 
 1119,1: }
 
60 ; 
 1119,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1124,1: typedef
 1124,9: __suseconds_t
 1124,22: TYPE
 
54 NAME TYPE 
 1124,9: __suseconds_t
 1124,22: TYPE
 
26 TYPE 
 1124,22: TYPE
 
6 NAME VARIABLE 
 1124,23: suseconds_t
 1124,34: VARIABLE
 
65 VARIABLE 
 1124,34: VARIABLE
 
70 ; 
 1124,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1130,1: typedef
 1130,9: long
 1130,14: int
 
54 long 
 1130,9: long
 
106 int 
 1130,14: int
 
6 NAME VARIABLE 
 1130,18: __fd_mask
 1130,27: VARIABLE
 
65 VARIABLE 
 1130,27: VARIABLE
 
70 ; 
 1130,27: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1132,1: typedef
 1132,9: struct
 1133,3: {
 1140,5: __fd_mask
 1140,14: TYPE
 1140,15: __fds_bits
 1140,25: VARIABLE
 1140,25: [
 1140,26: 1024
 1140,31: /
 1140,33: (
 1140,34: 8
 1140,36: *
 1140,38: (
 1140,39: int
 1140,42: )
 1140,44: sizeof
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 1140,62: )
 1140,63: ]
 1140,64: ;
 1143,3: }
 
54 struct 
 1132,9: struct
 
89 { struct_declaration_list } 
 1133,3: {
 1140,5: __fd_mask
 1140,14: TYPE
 1140,15: __fds_bits
 1140,25: VARIABLE
 1140,25: [
 1140,26: 1024
 1140,31: /
 1140,33: (
 1140,34: 8
 1140,36: *
 1140,38: (
 1140,39: int
 1140,42: )
 1140,44: sizeof
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 1140,62: )
 1140,63: ]
 1140,64: ;
 1143,3: }
 
126 NAME TYPE 
 1140,5: __fd_mask
 1140,14: TYPE
 
26 TYPE 
 1140,14: TYPE
 
200 NAME VARIABLE 
 1140,15: __fds_bits
 1140,25: VARIABLE
 
65 VARIABLE 
 1140,25: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1140,25: [
 1140,26: 1024
 1140,31: /
 1140,33: (
 1140,34: 8
 1140,36: *
 1140,38: (
 1140,39: int
 1140,42: )
 1140,44: sizeof
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 1140,62: )
 1140,63: ]
 
188 CONSTANT 
 1140,26: 1024
 
151 / 
 1140,31: /
 
242 ( expression ) 
 1140,33: (
 1140,34: 8
 1140,36: *
 1140,38: (
 1140,39: int
 1140,42: )
 1140,44: sizeof
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 1140,62: )
 
165 CONSTANT 
 1140,34: 8
 
151 * 
 1140,36: *
 
242 ( type_name ) cast_expression 
 1140,38: (
 1140,39: int
 1140,42: )
 1140,44: sizeof
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 
165 int 
 1140,39: int
 
269 ) cast_expression 
 1140,42: )
 1140,44: sizeof
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 
369 sizeof ( type_name ) 
 1140,44: sizeof
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 
170 ( type_name ) 
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 
276 NAME TYPE 
 1140,52: __fd_mask
 1140,61: TYPE
 
65 TYPE 
 1140,61: TYPE
 
373 ) 
 1140,61: )
 
267 ) 
 1140,62: )
 
305 ] 
 1140,63: ]
 
313 ; 
 1140,64: ;
 
198 } 
 1143,3: }
 
6 NAME VARIABLE 
 1143,5: fd_set
 1143,11: VARIABLE
 
65 VARIABLE 
 1143,11: VARIABLE
 
70 ; 
 1143,11: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1150,1: typedef
 1150,9: __fd_mask
 1150,18: TYPE
 
54 NAME TYPE 
 1150,9: __fd_mask
 1150,18: TYPE
 
26 TYPE 
 1150,18: TYPE
 
6 NAME VARIABLE 
 1150,19: fd_mask
 1150,26: VARIABLE
 
65 VARIABLE 
 1150,26: VARIABLE
 
70 ; 
 1150,26: ;
 
23 extern 
 1154,1: extern
 
8 int 
 1154,8: int
 
5 NAME VARIABLE 
 1154,12: select
 1154,18: VARIABLE
 
65 VARIABLE 
 1154,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1154,19: (
 1154,20: int
 1154,24: __nfds
 1154,30: VARIABLE
 1154,30: ,
 1154,32: fd_set
 1154,38: TYPE
 1154,39: *
 1154,41: __readfds
 1154,50: VARIABLE
 1154,50: ,
 1155,6: fd_set
 1155,12: TYPE
 1155,13: *
 1155,15: __writefds
 1155,25: VARIABLE
 1155,25: ,
 1156,6: fd_set
 1156,12: TYPE
 1156,13: *
 1156,15: __exceptfds
 1156,26: VARIABLE
 1156,26: ,
 1157,6: struct
 1157,13: timeval
 1157,20: VARIABLE
 1157,21: *
 1157,23: __timeout
 1157,32: VARIABLE
 1157,32: )
 
186 int 
 1154,20: int
 
298 NAME VARIABLE 
 1154,24: __nfds
 1154,30: VARIABLE
 
65 VARIABLE 
 1154,30: VARIABLE
 
300 , parameter_declaration 
 1154,30: ,
 1154,32: fd_set
 1154,38: TYPE
 1154,39: *
 1154,41: __readfds
 1154,50: VARIABLE
 
391 NAME TYPE 
 1154,32: fd_set
 1154,38: TYPE
 
26 TYPE 
 1154,38: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1154,39: *
 
386 NAME VARIABLE 
 1154,41: __readfds
 1154,50: VARIABLE
 
65 VARIABLE 
 1154,50: VARIABLE
 
300 , parameter_declaration 
 1154,50: ,
 1155,6: fd_set
 1155,12: TYPE
 1155,13: *
 1155,15: __writefds
 1155,25: VARIABLE
 
391 NAME TYPE 
 1155,6: fd_set
 1155,12: TYPE
 
26 TYPE 
 1155,12: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1155,13: *
 
386 NAME VARIABLE 
 1155,15: __writefds
 1155,25: VARIABLE
 
65 VARIABLE 
 1155,25: VARIABLE
 
300 , parameter_declaration 
 1155,25: ,
 1156,6: fd_set
 1156,12: TYPE
 1156,13: *
 1156,15: __exceptfds
 1156,26: VARIABLE
 
391 NAME TYPE 
 1156,6: fd_set
 1156,12: TYPE
 
26 TYPE 
 1156,12: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1156,13: *
 
386 NAME VARIABLE 
 1156,15: __exceptfds
 1156,26: VARIABLE
 
65 VARIABLE 
 1156,26: VARIABLE
 
300 , parameter_declaration 
 1156,26: ,
 1157,6: struct
 1157,13: timeval
 1157,20: VARIABLE
 1157,21: *
 1157,23: __timeout
 1157,32: VARIABLE
 
391 struct 
 1157,6: struct
 
22 NAME VARIABLE 
 1157,13: timeval
 1157,20: VARIABLE
 
65 VARIABLE 
 1157,20: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1157,21: *
 
386 NAME VARIABLE 
 1157,23: __timeout
 1157,32: VARIABLE
 
65 VARIABLE 
 1157,32: VARIABLE
 
187 ) 
 1157,32: )
 
60 ; 
 1157,33: ;
 
23 extern 
 1159,1: extern
 
8 int 
 1159,8: int
 
5 NAME VARIABLE 
 1159,12: pselect
 1159,19: VARIABLE
 
65 VARIABLE 
 1159,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1159,20: (
 1159,21: int
 1159,25: __nfds
 1159,31: VARIABLE
 1159,31: ,
 1159,33: fd_set
 1159,39: TYPE
 1159,40: *
 1159,42: __readfds
 1159,51: VARIABLE
 1159,51: ,
 1160,7: fd_set
 1160,13: TYPE
 1160,14: *
 1160,16: __writefds
 1160,26: VARIABLE
 1160,26: ,
 1161,7: fd_set
 1161,13: TYPE
 1161,14: *
 1161,16: __exceptfds
 1161,27: VARIABLE
 1161,27: ,
 1162,7: const
 1162,13: struct
 1162,20: timespec
 1162,28: VARIABLE
 1162,29: *
 1162,31: __timeout
 1162,40: VARIABLE
 1162,40: ,
 1163,7: const
 1163,13: __sigset_t
 1163,23: TYPE
 1163,24: *
 1163,26: __sigmask
 1163,35: VARIABLE
 1163,35: )
 
186 int 
 1159,21: int
 
298 NAME VARIABLE 
 1159,25: __nfds
 1159,31: VARIABLE
 
65 VARIABLE 
 1159,31: VARIABLE
 
300 , parameter_declaration 
 1159,31: ,
 1159,33: fd_set
 1159,39: TYPE
 1159,40: *
 1159,42: __readfds
 1159,51: VARIABLE
 
391 NAME TYPE 
 1159,33: fd_set
 1159,39: TYPE
 
26 TYPE 
 1159,39: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1159,40: *
 
386 NAME VARIABLE 
 1159,42: __readfds
 1159,51: VARIABLE
 
65 VARIABLE 
 1159,51: VARIABLE
 
300 , parameter_declaration 
 1159,51: ,
 1160,7: fd_set
 1160,13: TYPE
 1160,14: *
 1160,16: __writefds
 1160,26: VARIABLE
 
391 NAME TYPE 
 1160,7: fd_set
 1160,13: TYPE
 
26 TYPE 
 1160,13: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1160,14: *
 
386 NAME VARIABLE 
 1160,16: __writefds
 1160,26: VARIABLE
 
65 VARIABLE 
 1160,26: VARIABLE
 
300 , parameter_declaration 
 1160,26: ,
 1161,7: fd_set
 1161,13: TYPE
 1161,14: *
 1161,16: __exceptfds
 1161,27: VARIABLE
 
391 NAME TYPE 
 1161,7: fd_set
 1161,13: TYPE
 
26 TYPE 
 1161,13: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1161,14: *
 
386 NAME VARIABLE 
 1161,16: __exceptfds
 1161,27: VARIABLE
 
65 VARIABLE 
 1161,27: VARIABLE
 
300 , parameter_declaration 
 1161,27: ,
 1162,7: const
 1162,13: struct
 1162,20: timespec
 1162,28: VARIABLE
 1162,29: *
 1162,31: __timeout
 1162,40: VARIABLE
 
391 const 
 1162,7: const
 
103 struct 
 1162,13: struct
 
22 NAME VARIABLE 
 1162,20: timespec
 1162,28: VARIABLE
 
65 VARIABLE 
 1162,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1162,29: *
 
386 NAME VARIABLE 
 1162,31: __timeout
 1162,40: VARIABLE
 
65 VARIABLE 
 1162,40: VARIABLE
 
300 , parameter_declaration 
 1162,40: ,
 1163,7: const
 1163,13: __sigset_t
 1163,23: TYPE
 1163,24: *
 1163,26: __sigmask
 1163,35: VARIABLE
 
391 const 
 1163,7: const
 
103 NAME TYPE 
 1163,13: __sigset_t
 1163,23: TYPE
 
26 TYPE 
 1163,23: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1163,24: *
 
386 NAME VARIABLE 
 1163,26: __sigmask
 1163,35: VARIABLE
 
65 VARIABLE 
 1163,35: VARIABLE
 
187 ) 
 1163,35: )
 
60 ; 
 1163,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1172,1: typedef
 1172,9: __blksize_t
 1172,20: TYPE
 
54 NAME TYPE 
 1172,9: __blksize_t
 1172,20: TYPE
 
26 TYPE 
 1172,20: TYPE
 
6 NAME VARIABLE 
 1172,21: blksize_t
 1172,30: VARIABLE
 
65 VARIABLE 
 1172,30: VARIABLE
 
70 ; 
 1172,30: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1179,1: typedef
 1179,9: __blkcnt_t
 1179,19: TYPE
 
54 NAME TYPE 
 1179,9: __blkcnt_t
 1179,19: TYPE
 
26 TYPE 
 1179,19: TYPE
 
6 NAME VARIABLE 
 1179,20: blkcnt_t
 1179,28: VARIABLE
 
65 VARIABLE 
 1179,28: VARIABLE
 
70 ; 
 1179,28: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1183,1: typedef
 1183,9: __fsblkcnt_t
 1183,21: TYPE
 
54 NAME TYPE 
 1183,9: __fsblkcnt_t
 1183,21: TYPE
 
26 TYPE 
 1183,21: TYPE
 
6 NAME VARIABLE 
 1183,22: fsblkcnt_t
 1183,32: VARIABLE
 
65 VARIABLE 
 1183,32: VARIABLE
 
70 ; 
 1183,32: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1187,1: typedef
 1187,9: __fsfilcnt_t
 1187,21: TYPE
 
54 NAME TYPE 
 1187,9: __fsfilcnt_t
 1187,21: TYPE
 
26 TYPE 
 1187,21: TYPE
 
6 NAME VARIABLE 
 1187,22: fsfilcnt_t
 1187,32: VARIABLE
 
65 VARIABLE 
 1187,32: VARIABLE
 
70 ; 
 1187,32: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1201,1: typedef
 1201,9: union
 1202,1: {
 1203,4: unsigned
 1203,13: long
 1203,18: long
 1203,23: int
 1203,27: __value64
 1203,36: VARIABLE
 1203,36: ;
 1204,3: struct
 1205,3: {
 1206,5: unsigned
 1206,14: int
 1206,18: __low
 1206,23: VARIABLE
 1206,23: ;
 1207,5: unsigned
 1207,14: int
 1207,18: __high
 1207,24: VARIABLE
 1207,24: ;
 1208,3: }
 1208,5: __value32
 1208,14: VARIABLE
 1208,14: ;
 1209,1: }
 
54 union 
 1201,9: union
 
89 { struct_declaration_list } 
 1202,1: {
 1203,4: unsigned
 1203,13: long
 1203,18: long
 1203,23: int
 1203,27: __value64
 1203,36: VARIABLE
 1203,36: ;
 1204,3: struct
 1205,3: {
 1206,5: unsigned
 1206,14: int
 1206,18: __low
 1206,23: VARIABLE
 1206,23: ;
 1207,5: unsigned
 1207,14: int
 1207,18: __high
 1207,24: VARIABLE
 1207,24: ;
 1208,3: }
 1208,5: __value32
 1208,14: VARIABLE
 1208,14: ;
 1209,1: }
 
126 unsigned 
 1203,4: unsigned
 
135 long 
 1203,13: long
 
135 long 
 1203,18: long
 
135 int 
 1203,23: int
 
200 NAME VARIABLE 
 1203,27: __value64
 1203,36: VARIABLE
 
65 VARIABLE 
 1203,36: VARIABLE
 
313 ; 
 1203,36: ;
 
198 struct 
 1204,3: struct
 
89 { struct_declaration_list } 
 1205,3: {
 1206,5: unsigned
 1206,14: int
 1206,18: __low
 1206,23: VARIABLE
 1206,23: ;
 1207,5: unsigned
 1207,14: int
 1207,18: __high
 1207,24: VARIABLE
 1207,24: ;
 1208,3: }
 
126 unsigned 
 1206,5: unsigned
 
135 int 
 1206,14: int
 
200 NAME VARIABLE 
 1206,18: __low
 1206,23: VARIABLE
 
65 VARIABLE 
 1206,23: VARIABLE
 
313 ; 
 1206,23: ;
 
198 unsigned 
 1207,5: unsigned
 
135 int 
 1207,14: int
 
200 NAME VARIABLE 
 1207,18: __high
 1207,24: VARIABLE
 
65 VARIABLE 
 1207,24: VARIABLE
 
313 ; 
 1207,24: ;
 
198 } 
 1208,3: }
 
200 NAME VARIABLE 
 1208,5: __value32
 1208,14: VARIABLE
 
65 VARIABLE 
 1208,14: VARIABLE
 
313 ; 
 1208,14: ;
 
198 } 
 1209,1: }
 
6 NAME VARIABLE 
 1209,3: __atomic_wide_counter
 1209,24: VARIABLE
 
65 VARIABLE 
 1209,24: VARIABLE
 
70 ; 
 1209,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1215,1: typedef
 1215,9: struct
 1215,16: __pthread_internal_list
 1215,39: VARIABLE
 1216,1: {
 1217,3: struct
 1217,10: __pthread_internal_list
 1217,33: VARIABLE
 1217,34: *
 1217,35: __prev
 1217,41: VARIABLE
 1217,41: ;
 1218,3: struct
 1218,10: __pthread_internal_list
 1218,33: VARIABLE
 1218,34: *
 1218,35: __next
 1218,41: VARIABLE
 1218,41: ;
 1219,1: }
 
54 struct 
 1215,9: struct
 
22 NAME VARIABLE 
 1215,16: __pthread_internal_list
 1215,39: VARIABLE
 
65 VARIABLE 
 1215,39: VARIABLE
 
89 { struct_declaration_list } 
 1216,1: {
 1217,3: struct
 1217,10: __pthread_internal_list
 1217,33: VARIABLE
 1217,34: *
 1217,35: __prev
 1217,41: VARIABLE
 1217,41: ;
 1218,3: struct
 1218,10: __pthread_internal_list
 1218,33: VARIABLE
 1218,34: *
 1218,35: __next
 1218,41: VARIABLE
 1218,41: ;
 1219,1: }
 
126 struct 
 1217,3: struct
 
22 NAME VARIABLE 
 1217,10: __pthread_internal_list
 1217,33: VARIABLE
 
65 VARIABLE 
 1217,33: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 1217,34: *
 
64 NAME VARIABLE 
 1217,35: __prev
 1217,41: VARIABLE
 
65 VARIABLE 
 1217,41: VARIABLE
 
313 ; 
 1217,41: ;
 
198 struct 
 1218,3: struct
 
22 NAME VARIABLE 
 1218,10: __pthread_internal_list
 1218,33: VARIABLE
 
65 VARIABLE 
 1218,33: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 1218,34: *
 
64 NAME VARIABLE 
 1218,35: __next
 1218,41: VARIABLE
 
65 VARIABLE 
 1218,41: VARIABLE
 
313 ; 
 1218,41: ;
 
198 } 
 1219,1: }
 
6 NAME VARIABLE 
 1219,3: __pthread_list_t
 1219,19: VARIABLE
 
65 VARIABLE 
 1219,19: VARIABLE
 
70 ; 
 1219,19: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1221,1: typedef
 1221,9: struct
 1221,16: __pthread_internal_slist
 1221,40: VARIABLE
 1222,1: {
 1223,3: struct
 1223,10: __pthread_internal_slist
 1223,34: VARIABLE
 1223,35: *
 1223,36: __next
 1223,42: VARIABLE
 1223,42: ;
 1224,1: }
 
54 struct 
 1221,9: struct
 
22 NAME VARIABLE 
 1221,16: __pthread_internal_slist
 1221,40: VARIABLE
 
65 VARIABLE 
 1221,40: VARIABLE
 
89 { struct_declaration_list } 
 1222,1: {
 1223,3: struct
 1223,10: __pthread_internal_slist
 1223,34: VARIABLE
 1223,35: *
 1223,36: __next
 1223,42: VARIABLE
 1223,42: ;
 1224,1: }
 
126 struct 
 1223,3: struct
 
22 NAME VARIABLE 
 1223,10: __pthread_internal_slist
 1223,34: VARIABLE
 
65 VARIABLE 
 1223,34: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 1223,35: *
 
64 NAME VARIABLE 
 1223,36: __next
 1223,42: VARIABLE
 
65 VARIABLE 
 1223,42: VARIABLE
 
313 ; 
 1223,42: ;
 
198 } 
 1224,1: }
 
6 NAME VARIABLE 
 1224,3: __pthread_slist_t
 1224,20: VARIABLE
 
65 VARIABLE 
 1224,20: VARIABLE
 
70 ; 
 1224,20: ;
 
23 struct 
 1228,1: struct
 
22 NAME VARIABLE 
 1228,8: __pthread_mutex_s
 1228,25: VARIABLE
 
65 VARIABLE 
 1228,25: VARIABLE
 
89 { struct_declaration_list } 
 1229,1: {
 1230,3: int
 1230,7: __lock
 1230,13: VARIABLE
 1230,13: ;
 1231,3: unsigned
 1231,12: int
 1231,16: __count
 1231,23: VARIABLE
 1231,23: ;
 1232,3: int
 1232,7: __owner
 1232,14: VARIABLE
 1232,14: ;
 1234,3: unsigned
 1234,12: int
 1234,16: __nusers
 1234,24: VARIABLE
 1234,24: ;
 1238,3: int
 1238,7: __kind
 1238,13: VARIABLE
 1238,13: ;
 1240,3: short
 1240,9: __spins
 1240,16: VARIABLE
 1240,16: ;
 1241,3: short
 1241,9: __elision
 1241,18: VARIABLE
 1241,18: ;
 1242,3: __pthread_list_t
 1242,19: TYPE
 1242,20: __list
 1242,26: VARIABLE
 1242,26: ;
 1244,1: }
 
126 int 
 1230,3: int
 
200 NAME VARIABLE 
 1230,7: __lock
 1230,13: VARIABLE
 
65 VARIABLE 
 1230,13: VARIABLE
 
313 ; 
 1230,13: ;
 
198 unsigned 
 1231,3: unsigned
 
135 int 
 1231,12: int
 
200 NAME VARIABLE 
 1231,16: __count
 1231,23: VARIABLE
 
65 VARIABLE 
 1231,23: VARIABLE
 
313 ; 
 1231,23: ;
 
198 int 
 1232,3: int
 
200 NAME VARIABLE 
 1232,7: __owner
 1232,14: VARIABLE
 
65 VARIABLE 
 1232,14: VARIABLE
 
313 ; 
 1232,14: ;
 
198 unsigned 
 1234,3: unsigned
 
135 int 
 1234,12: int
 
200 NAME VARIABLE 
 1234,16: __nusers
 1234,24: VARIABLE
 
65 VARIABLE 
 1234,24: VARIABLE
 
313 ; 
 1234,24: ;
 
198 int 
 1238,3: int
 
200 NAME VARIABLE 
 1238,7: __kind
 1238,13: VARIABLE
 
65 VARIABLE 
 1238,13: VARIABLE
 
313 ; 
 1238,13: ;
 
198 short 
 1240,3: short
 
200 NAME VARIABLE 
 1240,9: __spins
 1240,16: VARIABLE
 
65 VARIABLE 
 1240,16: VARIABLE
 
313 ; 
 1240,16: ;
 
198 short 
 1241,3: short
 
200 NAME VARIABLE 
 1241,9: __elision
 1241,18: VARIABLE
 
65 VARIABLE 
 1241,18: VARIABLE
 
313 ; 
 1241,18: ;
 
198 NAME TYPE 
 1242,3: __pthread_list_t
 1242,19: TYPE
 
26 TYPE 
 1242,19: TYPE
 
200 NAME VARIABLE 
 1242,20: __list
 1242,26: VARIABLE
 
65 VARIABLE 
 1242,26: VARIABLE
 
313 ; 
 1242,26: ;
 
198 } 
 1244,1: }
 
60 ; 
 1244,2: ;
 
23 struct 
 1249,1: struct
 
22 NAME VARIABLE 
 1249,8: __pthread_rwlock_arch_t
 1249,31: VARIABLE
 
65 VARIABLE 
 1249,31: VARIABLE
 
89 { struct_declaration_list } 
 1250,1: {
 1251,3: unsigned
 1251,12: int
 1251,16: __readers
 1251,25: VARIABLE
 1251,25: ;
 1252,3: unsigned
 1252,12: int
 1252,16: __writers
 1252,25: VARIABLE
 1252,25: ;
 1253,3: unsigned
 1253,12: int
 1253,16: __wrphase_futex
 1253,31: VARIABLE
 1253,31: ;
 1254,3: unsigned
 1254,12: int
 1254,16: __writers_futex
 1254,31: VARIABLE
 1254,31: ;
 1255,3: unsigned
 1255,12: int
 1255,16: __pad3
 1255,22: VARIABLE
 1255,22: ;
 1256,3: unsigned
 1256,12: int
 1256,16: __pad4
 1256,22: VARIABLE
 1256,22: ;
 1258,3: int
 1258,7: __cur_writer
 1258,19: VARIABLE
 1258,19: ;
 1259,3: int
 1259,7: __shared
 1259,15: VARIABLE
 1259,15: ;
 1260,3: signed
 1260,10: char
 1260,15: __rwelision
 1260,26: VARIABLE
 1260,26: ;
 1265,3: unsigned
 1265,12: char
 1265,17: __pad1
 1265,23: VARIABLE
 1265,23: [
 1265,24: 7
 1265,25: ]
 1265,26: ;
 1268,3: unsigned
 1268,12: long
 1268,17: int
 1268,21: __pad2
 1268,27: VARIABLE
 1268,27: ;
 1271,3: unsigned
 1271,12: int
 1271,16: __flags
 1271,23: VARIABLE
 1271,23: ;
 1273,1: }
 
126 unsigned 
 1251,3: unsigned
 
135 int 
 1251,12: int
 
200 NAME VARIABLE 
 1251,16: __readers
 1251,25: VARIABLE
 
65 VARIABLE 
 1251,25: VARIABLE
 
313 ; 
 1251,25: ;
 
198 unsigned 
 1252,3: unsigned
 
135 int 
 1252,12: int
 
200 NAME VARIABLE 
 1252,16: __writers
 1252,25: VARIABLE
 
65 VARIABLE 
 1252,25: VARIABLE
 
313 ; 
 1252,25: ;
 
198 unsigned 
 1253,3: unsigned
 
135 int 
 1253,12: int
 
200 NAME VARIABLE 
 1253,16: __wrphase_futex
 1253,31: VARIABLE
 
65 VARIABLE 
 1253,31: VARIABLE
 
313 ; 
 1253,31: ;
 
198 unsigned 
 1254,3: unsigned
 
135 int 
 1254,12: int
 
200 NAME VARIABLE 
 1254,16: __writers_futex
 1254,31: VARIABLE
 
65 VARIABLE 
 1254,31: VARIABLE
 
313 ; 
 1254,31: ;
 
198 unsigned 
 1255,3: unsigned
 
135 int 
 1255,12: int
 
200 NAME VARIABLE 
 1255,16: __pad3
 1255,22: VARIABLE
 
65 VARIABLE 
 1255,22: VARIABLE
 
313 ; 
 1255,22: ;
 
198 unsigned 
 1256,3: unsigned
 
135 int 
 1256,12: int
 
200 NAME VARIABLE 
 1256,16: __pad4
 1256,22: VARIABLE
 
65 VARIABLE 
 1256,22: VARIABLE
 
313 ; 
 1256,22: ;
 
198 int 
 1258,3: int
 
200 NAME VARIABLE 
 1258,7: __cur_writer
 1258,19: VARIABLE
 
65 VARIABLE 
 1258,19: VARIABLE
 
313 ; 
 1258,19: ;
 
198 int 
 1259,3: int
 
200 NAME VARIABLE 
 1259,7: __shared
 1259,15: VARIABLE
 
65 VARIABLE 
 1259,15: VARIABLE
 
313 ; 
 1259,15: ;
 
198 signed 
 1260,3: signed
 
135 char 
 1260,10: char
 
200 NAME VARIABLE 
 1260,15: __rwelision
 1260,26: VARIABLE
 
65 VARIABLE 
 1260,26: VARIABLE
 
313 ; 
 1260,26: ;
 
198 unsigned 
 1265,3: unsigned
 
135 char 
 1265,12: char
 
200 NAME VARIABLE 
 1265,17: __pad1
 1265,23: VARIABLE
 
65 VARIABLE 
 1265,23: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1265,23: [
 1265,24: 7
 1265,25: ]
 
188 CONSTANT 
 1265,24: 7
 
305 ] 
 1265,25: ]
 
313 ; 
 1265,26: ;
 
198 unsigned 
 1268,3: unsigned
 
135 long 
 1268,12: long
 
135 int 
 1268,17: int
 
200 NAME VARIABLE 
 1268,21: __pad2
 1268,27: VARIABLE
 
65 VARIABLE 
 1268,27: VARIABLE
 
313 ; 
 1268,27: ;
 
198 unsigned 
 1271,3: unsigned
 
135 int 
 1271,12: int
 
200 NAME VARIABLE 
 1271,16: __flags
 1271,23: VARIABLE
 
65 VARIABLE 
 1271,23: VARIABLE
 
313 ; 
 1271,23: ;
 
198 } 
 1273,1: }
 
60 ; 
 1273,2: ;
 
23 struct 
 1279,1: struct
 
22 NAME VARIABLE 
 1279,8: __pthread_cond_s
 1279,24: VARIABLE
 
65 VARIABLE 
 1279,24: VARIABLE
 
89 { struct_declaration_list } 
 1280,1: {
 1281,3: __atomic_wide_counter
 1281,24: TYPE
 1281,25: __wseq
 1281,31: VARIABLE
 1281,31: ;
 1282,3: __atomic_wide_counter
 1282,24: TYPE
 1282,25: __g1_start
 1282,35: VARIABLE
 1282,35: ;
 1283,3: unsigned
 1283,12: int
 1283,16: __g_refs
 1283,24: VARIABLE
 1283,24: [
 1283,25: 2
 1283,26: ]
 1283,28: ;
 1284,3: unsigned
 1284,12: int
 1284,16: __g_size
 1284,24: VARIABLE
 1284,24: [
 1284,25: 2
 1284,26: ]
 1284,27: ;
 1285,3: unsigned
 1285,12: int
 1285,16: __g1_orig_size
 1285,30: VARIABLE
 1285,30: ;
 1286,3: unsigned
 1286,12: int
 1286,16: __wrefs
 1286,23: VARIABLE
 1286,23: ;
 1287,3: unsigned
 1287,12: int
 1287,16: __g_signals
 1287,27: VARIABLE
 1287,27: [
 1287,28: 2
 1287,29: ]
 1287,30: ;
 1288,1: }
 
126 NAME TYPE 
 1281,3: __atomic_wide_counter
 1281,24: TYPE
 
26 TYPE 
 1281,24: TYPE
 
200 NAME VARIABLE 
 1281,25: __wseq
 1281,31: VARIABLE
 
65 VARIABLE 
 1281,31: VARIABLE
 
313 ; 
 1281,31: ;
 
198 NAME TYPE 
 1282,3: __atomic_wide_counter
 1282,24: TYPE
 
26 TYPE 
 1282,24: TYPE
 
200 NAME VARIABLE 
 1282,25: __g1_start
 1282,35: VARIABLE
 
65 VARIABLE 
 1282,35: VARIABLE
 
313 ; 
 1282,35: ;
 
198 unsigned 
 1283,3: unsigned
 
135 int 
 1283,12: int
 
200 NAME VARIABLE 
 1283,16: __g_refs
 1283,24: VARIABLE
 
65 VARIABLE 
 1283,24: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1283,24: [
 1283,25: 2
 1283,26: ]
 
188 CONSTANT 
 1283,25: 2
 
305 ] 
 1283,26: ]
 
313 ; 
 1283,28: ;
 
198 unsigned 
 1284,3: unsigned
 
135 int 
 1284,12: int
 
200 NAME VARIABLE 
 1284,16: __g_size
 1284,24: VARIABLE
 
65 VARIABLE 
 1284,24: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1284,24: [
 1284,25: 2
 1284,26: ]
 
188 CONSTANT 
 1284,25: 2
 
305 ] 
 1284,26: ]
 
313 ; 
 1284,27: ;
 
198 unsigned 
 1285,3: unsigned
 
135 int 
 1285,12: int
 
200 NAME VARIABLE 
 1285,16: __g1_orig_size
 1285,30: VARIABLE
 
65 VARIABLE 
 1285,30: VARIABLE
 
313 ; 
 1285,30: ;
 
198 unsigned 
 1286,3: unsigned
 
135 int 
 1286,12: int
 
200 NAME VARIABLE 
 1286,16: __wrefs
 1286,23: VARIABLE
 
65 VARIABLE 
 1286,23: VARIABLE
 
313 ; 
 1286,23: ;
 
198 unsigned 
 1287,3: unsigned
 
135 int 
 1287,12: int
 
200 NAME VARIABLE 
 1287,16: __g_signals
 1287,27: VARIABLE
 
65 VARIABLE 
 1287,27: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1287,27: [
 1287,28: 2
 1287,29: ]
 
188 CONSTANT 
 1287,28: 2
 
305 ] 
 1287,29: ]
 
313 ; 
 1287,30: ;
 
198 } 
 1288,1: }
 
60 ; 
 1288,2: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1290,1: typedef
 1290,9: unsigned
 1290,18: int
 
54 unsigned 
 1290,9: unsigned
 
106 int 
 1290,18: int
 
6 NAME VARIABLE 
 1290,22: __tss_t
 1290,29: VARIABLE
 
65 VARIABLE 
 1290,29: VARIABLE
 
70 ; 
 1290,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1291,1: typedef
 1291,9: unsigned
 1291,18: long
 1291,23: int
 
54 unsigned 
 1291,9: unsigned
 
106 long 
 1291,18: long
 
106 int 
 1291,23: int
 
6 NAME VARIABLE 
 1291,27: __thrd_t
 1291,35: VARIABLE
 
65 VARIABLE 
 1291,35: VARIABLE
 
70 ; 
 1291,35: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1293,1: typedef
 1293,9: struct
 1294,1: {
 1295,3: int
 1295,7: __data
 1295,13: VARIABLE
 1295,14: ;
 1296,1: }
 
54 struct 
 1293,9: struct
 
89 { struct_declaration_list } 
 1294,1: {
 1295,3: int
 1295,7: __data
 1295,13: VARIABLE
 1295,14: ;
 1296,1: }
 
126 int 
 1295,3: int
 
200 NAME VARIABLE 
 1295,7: __data
 1295,13: VARIABLE
 
65 VARIABLE 
 1295,13: VARIABLE
 
313 ; 
 1295,14: ;
 
198 } 
 1296,1: }
 
6 NAME VARIABLE 
 1296,3: __once_flag
 1296,14: VARIABLE
 
65 VARIABLE 
 1296,14: VARIABLE
 
70 ; 
 1296,14: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1301,1: typedef
 1301,9: unsigned
 1301,18: long
 1301,23: int
 
54 unsigned 
 1301,9: unsigned
 
106 long 
 1301,18: long
 
106 int 
 1301,23: int
 
6 NAME VARIABLE 
 1301,27: pthread_t
 1301,36: VARIABLE
 
65 VARIABLE 
 1301,36: VARIABLE
 
70 ; 
 1301,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1306,1: typedef
 1306,9: union
 1307,1: {
 1308,3: char
 1308,8: __size
 1308,14: VARIABLE
 1308,14: [
 1308,15: 4
 1308,16: ]
 1308,17: ;
 1309,3: int
 1309,7: __align
 1309,14: VARIABLE
 1309,14: ;
 1310,1: }
 
54 union 
 1306,9: union
 
89 { struct_declaration_list } 
 1307,1: {
 1308,3: char
 1308,8: __size
 1308,14: VARIABLE
 1308,14: [
 1308,15: 4
 1308,16: ]
 1308,17: ;
 1309,3: int
 1309,7: __align
 1309,14: VARIABLE
 1309,14: ;
 1310,1: }
 
126 char 
 1308,3: char
 
200 NAME VARIABLE 
 1308,8: __size
 1308,14: VARIABLE
 
65 VARIABLE 
 1308,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1308,14: [
 1308,15: 4
 1308,16: ]
 
188 CONSTANT 
 1308,15: 4
 
305 ] 
 1308,16: ]
 
313 ; 
 1308,17: ;
 
198 int 
 1309,3: int
 
200 NAME VARIABLE 
 1309,7: __align
 1309,14: VARIABLE
 
65 VARIABLE 
 1309,14: VARIABLE
 
313 ; 
 1309,14: ;
 
198 } 
 1310,1: }
 
6 NAME VARIABLE 
 1310,3: pthread_mutexattr_t
 1310,22: VARIABLE
 
65 VARIABLE 
 1310,22: VARIABLE
 
70 ; 
 1310,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1315,1: typedef
 1315,9: union
 1316,1: {
 1317,3: char
 1317,8: __size
 1317,14: VARIABLE
 1317,14: [
 1317,15: 4
 1317,16: ]
 1317,17: ;
 1318,3: int
 1318,7: __align
 1318,14: VARIABLE
 1318,14: ;
 1319,1: }
 
54 union 
 1315,9: union
 
89 { struct_declaration_list } 
 1316,1: {
 1317,3: char
 1317,8: __size
 1317,14: VARIABLE
 1317,14: [
 1317,15: 4
 1317,16: ]
 1317,17: ;
 1318,3: int
 1318,7: __align
 1318,14: VARIABLE
 1318,14: ;
 1319,1: }
 
126 char 
 1317,3: char
 
200 NAME VARIABLE 
 1317,8: __size
 1317,14: VARIABLE
 
65 VARIABLE 
 1317,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1317,14: [
 1317,15: 4
 1317,16: ]
 
188 CONSTANT 
 1317,15: 4
 
305 ] 
 1317,16: ]
 
313 ; 
 1317,17: ;
 
198 int 
 1318,3: int
 
200 NAME VARIABLE 
 1318,7: __align
 1318,14: VARIABLE
 
65 VARIABLE 
 1318,14: VARIABLE
 
313 ; 
 1318,14: ;
 
198 } 
 1319,1: }
 
6 NAME VARIABLE 
 1319,3: pthread_condattr_t
 1319,21: VARIABLE
 
65 VARIABLE 
 1319,21: VARIABLE
 
70 ; 
 1319,21: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1323,1: typedef
 1323,9: unsigned
 1323,18: int
 
54 unsigned 
 1323,9: unsigned
 
106 int 
 1323,18: int
 
6 NAME VARIABLE 
 1323,22: pthread_key_t
 1323,35: VARIABLE
 
65 VARIABLE 
 1323,35: VARIABLE
 
70 ; 
 1323,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1327,1: typedef
 1327,9: int
 
54 int 
 1327,9: int
 
6 NAME VARIABLE 
 1327,13: pthread_once_t
 1327,27: VARIABLE
 
65 VARIABLE 
 1327,27: VARIABLE
 
70 ; 
 1327,27: ;
 
23 union 
 1330,1: union
 
22 NAME VARIABLE 
 1330,7: pthread_attr_t
 1330,21: VARIABLE
 
65 VARIABLE 
 1330,21: VARIABLE
 
89 { struct_declaration_list } 
 1331,1: {
 1332,3: char
 1332,8: __size
 1332,14: VARIABLE
 1332,14: [
 1332,15: 56
 1332,17: ]
 1332,18: ;
 1333,3: long
 1333,8: int
 1333,12: __align
 1333,19: VARIABLE
 1333,19: ;
 1334,1: }
 
126 char 
 1332,3: char
 
200 NAME VARIABLE 
 1332,8: __size
 1332,14: VARIABLE
 
65 VARIABLE 
 1332,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1332,14: [
 1332,15: 56
 1332,17: ]
 
188 CONSTANT 
 1332,15: 56
 
305 ] 
 1332,17: ]
 
313 ; 
 1332,18: ;
 
198 long 
 1333,3: long
 
135 int 
 1333,8: int
 
200 NAME VARIABLE 
 1333,12: __align
 1333,19: VARIABLE
 
65 VARIABLE 
 1333,19: VARIABLE
 
313 ; 
 1333,19: ;
 
198 } 
 1334,1: }
 
60 ; 
 1334,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1336,1: typedef
 1336,9: union
 1336,15: pthread_attr_t
 1336,29: VARIABLE
 
54 union 
 1336,9: union
 
22 NAME VARIABLE 
 1336,15: pthread_attr_t
 1336,29: VARIABLE
 
65 VARIABLE 
 1336,29: VARIABLE
 
6 NAME VARIABLE 
 1336,30: pthread_attr_t
 1336,44: VARIABLE
 
65 VARIABLE 
 1336,44: VARIABLE
 
70 ; 
 1336,44: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1341,1: typedef
 1341,9: union
 1342,1: {
 1343,3: struct
 1343,10: __pthread_mutex_s
 1343,27: VARIABLE
 1343,28: __data
 1343,34: VARIABLE
 1343,34: ;
 1344,3: char
 1344,8: __size
 1344,14: VARIABLE
 1344,14: [
 1344,15: 40
 1344,17: ]
 1344,18: ;
 1345,3: long
 1345,8: int
 1345,12: __align
 1345,19: VARIABLE
 1345,19: ;
 1346,1: }
 
54 union 
 1341,9: union
 
89 { struct_declaration_list } 
 1342,1: {
 1343,3: struct
 1343,10: __pthread_mutex_s
 1343,27: VARIABLE
 1343,28: __data
 1343,34: VARIABLE
 1343,34: ;
 1344,3: char
 1344,8: __size
 1344,14: VARIABLE
 1344,14: [
 1344,15: 40
 1344,17: ]
 1344,18: ;
 1345,3: long
 1345,8: int
 1345,12: __align
 1345,19: VARIABLE
 1345,19: ;
 1346,1: }
 
126 struct 
 1343,3: struct
 
22 NAME VARIABLE 
 1343,10: __pthread_mutex_s
 1343,27: VARIABLE
 
65 VARIABLE 
 1343,27: VARIABLE
 
200 NAME VARIABLE 
 1343,28: __data
 1343,34: VARIABLE
 
65 VARIABLE 
 1343,34: VARIABLE
 
313 ; 
 1343,34: ;
 
198 char 
 1344,3: char
 
200 NAME VARIABLE 
 1344,8: __size
 1344,14: VARIABLE
 
65 VARIABLE 
 1344,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1344,14: [
 1344,15: 40
 1344,17: ]
 
188 CONSTANT 
 1344,15: 40
 
305 ] 
 1344,17: ]
 
313 ; 
 1344,18: ;
 
198 long 
 1345,3: long
 
135 int 
 1345,8: int
 
200 NAME VARIABLE 
 1345,12: __align
 1345,19: VARIABLE
 
65 VARIABLE 
 1345,19: VARIABLE
 
313 ; 
 1345,19: ;
 
198 } 
 1346,1: }
 
6 NAME VARIABLE 
 1346,3: pthread_mutex_t
 1346,18: VARIABLE
 
65 VARIABLE 
 1346,18: VARIABLE
 
70 ; 
 1346,18: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1349,1: typedef
 1349,9: union
 1350,1: {
 1351,3: struct
 1351,10: __pthread_cond_s
 1351,26: VARIABLE
 1351,27: __data
 1351,33: VARIABLE
 1351,33: ;
 1352,3: char
 1352,8: __size
 1352,14: VARIABLE
 1352,14: [
 1352,15: 48
 1352,17: ]
 1352,18: ;
 1353,4: long
 1353,9: long
 1353,14: int
 1353,18: __align
 1353,25: VARIABLE
 1353,25: ;
 1354,1: }
 
54 union 
 1349,9: union
 
89 { struct_declaration_list } 
 1350,1: {
 1351,3: struct
 1351,10: __pthread_cond_s
 1351,26: VARIABLE
 1351,27: __data
 1351,33: VARIABLE
 1351,33: ;
 1352,3: char
 1352,8: __size
 1352,14: VARIABLE
 1352,14: [
 1352,15: 48
 1352,17: ]
 1352,18: ;
 1353,4: long
 1353,9: long
 1353,14: int
 1353,18: __align
 1353,25: VARIABLE
 1353,25: ;
 1354,1: }
 
126 struct 
 1351,3: struct
 
22 NAME VARIABLE 
 1351,10: __pthread_cond_s
 1351,26: VARIABLE
 
65 VARIABLE 
 1351,26: VARIABLE
 
200 NAME VARIABLE 
 1351,27: __data
 1351,33: VARIABLE
 
65 VARIABLE 
 1351,33: VARIABLE
 
313 ; 
 1351,33: ;
 
198 char 
 1352,3: char
 
200 NAME VARIABLE 
 1352,8: __size
 1352,14: VARIABLE
 
65 VARIABLE 
 1352,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1352,14: [
 1352,15: 48
 1352,17: ]
 
188 CONSTANT 
 1352,15: 48
 
305 ] 
 1352,17: ]
 
313 ; 
 1352,18: ;
 
198 long 
 1353,4: long
 
135 long 
 1353,9: long
 
135 int 
 1353,14: int
 
200 NAME VARIABLE 
 1353,18: __align
 1353,25: VARIABLE
 
65 VARIABLE 
 1353,25: VARIABLE
 
313 ; 
 1353,25: ;
 
198 } 
 1354,1: }
 
6 NAME VARIABLE 
 1354,3: pthread_cond_t
 1354,17: VARIABLE
 
65 VARIABLE 
 1354,17: VARIABLE
 
70 ; 
 1354,17: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1360,1: typedef
 1360,9: union
 1361,1: {
 1362,3: struct
 1362,10: __pthread_rwlock_arch_t
 1362,33: VARIABLE
 1362,34: __data
 1362,40: VARIABLE
 1362,40: ;
 1363,3: char
 1363,8: __size
 1363,14: VARIABLE
 1363,14: [
 1363,15: 56
 1363,17: ]
 1363,18: ;
 1364,3: long
 1364,8: int
 1364,12: __align
 1364,19: VARIABLE
 1364,19: ;
 1365,1: }
 
54 union 
 1360,9: union
 
89 { struct_declaration_list } 
 1361,1: {
 1362,3: struct
 1362,10: __pthread_rwlock_arch_t
 1362,33: VARIABLE
 1362,34: __data
 1362,40: VARIABLE
 1362,40: ;
 1363,3: char
 1363,8: __size
 1363,14: VARIABLE
 1363,14: [
 1363,15: 56
 1363,17: ]
 1363,18: ;
 1364,3: long
 1364,8: int
 1364,12: __align
 1364,19: VARIABLE
 1364,19: ;
 1365,1: }
 
126 struct 
 1362,3: struct
 
22 NAME VARIABLE 
 1362,10: __pthread_rwlock_arch_t
 1362,33: VARIABLE
 
65 VARIABLE 
 1362,33: VARIABLE
 
200 NAME VARIABLE 
 1362,34: __data
 1362,40: VARIABLE
 
65 VARIABLE 
 1362,40: VARIABLE
 
313 ; 
 1362,40: ;
 
198 char 
 1363,3: char
 
200 NAME VARIABLE 
 1363,8: __size
 1363,14: VARIABLE
 
65 VARIABLE 
 1363,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1363,14: [
 1363,15: 56
 1363,17: ]
 
188 CONSTANT 
 1363,15: 56
 
305 ] 
 1363,17: ]
 
313 ; 
 1363,18: ;
 
198 long 
 1364,3: long
 
135 int 
 1364,8: int
 
200 NAME VARIABLE 
 1364,12: __align
 1364,19: VARIABLE
 
65 VARIABLE 
 1364,19: VARIABLE
 
313 ; 
 1364,19: ;
 
198 } 
 1365,1: }
 
6 NAME VARIABLE 
 1365,3: pthread_rwlock_t
 1365,19: VARIABLE
 
65 VARIABLE 
 1365,19: VARIABLE
 
70 ; 
 1365,19: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1367,1: typedef
 1367,9: union
 1368,1: {
 1369,3: char
 1369,8: __size
 1369,14: VARIABLE
 1369,14: [
 1369,15: 8
 1369,16: ]
 1369,17: ;
 1370,3: long
 1370,8: int
 1370,12: __align
 1370,19: VARIABLE
 1370,19: ;
 1371,1: }
 
54 union 
 1367,9: union
 
89 { struct_declaration_list } 
 1368,1: {
 1369,3: char
 1369,8: __size
 1369,14: VARIABLE
 1369,14: [
 1369,15: 8
 1369,16: ]
 1369,17: ;
 1370,3: long
 1370,8: int
 1370,12: __align
 1370,19: VARIABLE
 1370,19: ;
 1371,1: }
 
126 char 
 1369,3: char
 
200 NAME VARIABLE 
 1369,8: __size
 1369,14: VARIABLE
 
65 VARIABLE 
 1369,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1369,14: [
 1369,15: 8
 1369,16: ]
 
188 CONSTANT 
 1369,15: 8
 
305 ] 
 1369,16: ]
 
313 ; 
 1369,17: ;
 
198 long 
 1370,3: long
 
135 int 
 1370,8: int
 
200 NAME VARIABLE 
 1370,12: __align
 1370,19: VARIABLE
 
65 VARIABLE 
 1370,19: VARIABLE
 
313 ; 
 1370,19: ;
 
198 } 
 1371,1: }
 
6 NAME VARIABLE 
 1371,3: pthread_rwlockattr_t
 1371,23: VARIABLE
 
65 VARIABLE 
 1371,23: VARIABLE
 
70 ; 
 1371,23: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1377,1: typedef
 1377,9: volatile
 1377,18: int
 
54 volatile 
 1377,9: volatile
 
103 int 
 1377,18: int
 
6 NAME VARIABLE 
 1377,22: pthread_spinlock_t
 1377,40: VARIABLE
 
65 VARIABLE 
 1377,40: VARIABLE
 
70 ; 
 1377,40: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1382,1: typedef
 1382,9: union
 1383,1: {
 1384,3: char
 1384,8: __size
 1384,14: VARIABLE
 1384,14: [
 1384,15: 32
 1384,17: ]
 1384,18: ;
 1385,3: long
 1385,8: int
 1385,12: __align
 1385,19: VARIABLE
 1385,19: ;
 1386,1: }
 
54 union 
 1382,9: union
 
89 { struct_declaration_list } 
 1383,1: {
 1384,3: char
 1384,8: __size
 1384,14: VARIABLE
 1384,14: [
 1384,15: 32
 1384,17: ]
 1384,18: ;
 1385,3: long
 1385,8: int
 1385,12: __align
 1385,19: VARIABLE
 1385,19: ;
 1386,1: }
 
126 char 
 1384,3: char
 
200 NAME VARIABLE 
 1384,8: __size
 1384,14: VARIABLE
 
65 VARIABLE 
 1384,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1384,14: [
 1384,15: 32
 1384,17: ]
 
188 CONSTANT 
 1384,15: 32
 
305 ] 
 1384,17: ]
 
313 ; 
 1384,18: ;
 
198 long 
 1385,3: long
 
135 int 
 1385,8: int
 
200 NAME VARIABLE 
 1385,12: __align
 1385,19: VARIABLE
 
65 VARIABLE 
 1385,19: VARIABLE
 
313 ; 
 1385,19: ;
 
198 } 
 1386,1: }
 
6 NAME VARIABLE 
 1386,3: pthread_barrier_t
 1386,20: VARIABLE
 
65 VARIABLE 
 1386,20: VARIABLE
 
70 ; 
 1386,20: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1388,1: typedef
 1388,9: union
 1389,1: {
 1390,3: char
 1390,8: __size
 1390,14: VARIABLE
 1390,14: [
 1390,15: 4
 1390,16: ]
 1390,17: ;
 1391,3: int
 1391,7: __align
 1391,14: VARIABLE
 1391,14: ;
 1392,1: }
 
54 union 
 1388,9: union
 
89 { struct_declaration_list } 
 1389,1: {
 1390,3: char
 1390,8: __size
 1390,14: VARIABLE
 1390,14: [
 1390,15: 4
 1390,16: ]
 1390,17: ;
 1391,3: int
 1391,7: __align
 1391,14: VARIABLE
 1391,14: ;
 1392,1: }
 
126 char 
 1390,3: char
 
200 NAME VARIABLE 
 1390,8: __size
 1390,14: VARIABLE
 
65 VARIABLE 
 1390,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1390,14: [
 1390,15: 4
 1390,16: ]
 
188 CONSTANT 
 1390,15: 4
 
305 ] 
 1390,16: ]
 
313 ; 
 1390,17: ;
 
198 int 
 1391,3: int
 
200 NAME VARIABLE 
 1391,7: __align
 1391,14: VARIABLE
 
65 VARIABLE 
 1391,14: VARIABLE
 
313 ; 
 1391,14: ;
 
198 } 
 1392,1: }
 
6 NAME VARIABLE 
 1392,3: pthread_barrierattr_t
 1392,24: VARIABLE
 
65 VARIABLE 
 1392,24: VARIABLE
 
70 ; 
 1392,24: ;
 
23 extern 
 1404,1: extern
 
8 long 
 1404,8: long
 
17 int 
 1404,13: int
 
5 NAME VARIABLE 
 1404,17: random
 1404,23: VARIABLE
 
65 VARIABLE 
 1404,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1404,24: (
 1404,25: void
 1404,29: )
 
186 void 
 1404,25: void
 
187 ) 
 1404,29: )
 
60 ; 
 1404,31: ;
 
23 extern 
 1407,1: extern
 
8 void 
 1407,8: void
 
5 NAME VARIABLE 
 1407,13: srandom
 1407,20: VARIABLE
 
65 VARIABLE 
 1407,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1407,21: (
 1407,22: unsigned
 1407,31: int
 1407,35: __seed
 1407,41: VARIABLE
 1407,41: )
 
186 unsigned 
 1407,22: unsigned
 
106 int 
 1407,31: int
 
298 NAME VARIABLE 
 1407,35: __seed
 1407,41: VARIABLE
 
65 VARIABLE 
 1407,41: VARIABLE
 
187 ) 
 1407,41: )
 
60 ; 
 1407,43: ;
 
23 extern 
 1413,1: extern
 
8 char 
 1413,8: char
 
5 * option_type_qualifier_list option_pointer 
 1413,13: *
 
64 NAME VARIABLE 
 1413,14: initstate
 1413,23: VARIABLE
 
65 VARIABLE 
 1413,23: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1413,24: (
 1413,25: unsigned
 1413,34: int
 1413,38: __seed
 1413,44: VARIABLE
 1413,44: ,
 1413,46: char
 1413,51: *
 1413,52: __statebuf
 1413,62: VARIABLE
 1413,62: ,
 1414,4: size_t
 1414,10: TYPE
 1414,11: __statelen
 1414,21: VARIABLE
 1414,21: )
 
186 unsigned 
 1413,25: unsigned
 
106 int 
 1413,34: int
 
298 NAME VARIABLE 
 1413,38: __seed
 1413,44: VARIABLE
 
65 VARIABLE 
 1413,44: VARIABLE
 
300 , parameter_declaration 
 1413,44: ,
 1413,46: char
 1413,51: *
 1413,52: __statebuf
 1413,62: VARIABLE
 
391 char 
 1413,46: char
 
298 * option_type_qualifier_list option_pointer 
 1413,51: *
 
386 NAME VARIABLE 
 1413,52: __statebuf
 1413,62: VARIABLE
 
65 VARIABLE 
 1413,62: VARIABLE
 
300 , parameter_declaration 
 1413,62: ,
 1414,4: size_t
 1414,10: TYPE
 1414,11: __statelen
 1414,21: VARIABLE
 
391 NAME TYPE 
 1414,4: size_t
 1414,10: TYPE
 
26 TYPE 
 1414,10: TYPE
 
298 NAME VARIABLE 
 1414,11: __statelen
 1414,21: VARIABLE
 
65 VARIABLE 
 1414,21: VARIABLE
 
187 ) 
 1414,21: )
 
60 ; 
 1414,24: ;
 
23 extern 
 1418,1: extern
 
8 char 
 1418,8: char
 
5 * option_type_qualifier_list option_pointer 
 1418,13: *
 
64 NAME VARIABLE 
 1418,14: setstate
 1418,22: VARIABLE
 
65 VARIABLE 
 1418,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1418,23: (
 1418,24: char
 1418,29: *
 1418,30: __statebuf
 1418,40: VARIABLE
 1418,40: )
 
186 char 
 1418,24: char
 
298 * option_type_qualifier_list option_pointer 
 1418,29: *
 
386 NAME VARIABLE 
 1418,30: __statebuf
 1418,40: VARIABLE
 
65 VARIABLE 
 1418,40: VARIABLE
 
187 ) 
 1418,40: )
 
60 ; 
 1418,43: ;
 
23 struct 
 1426,1: struct
 
22 NAME VARIABLE 
 1426,8: random_data
 1426,19: VARIABLE
 
65 VARIABLE 
 1426,19: VARIABLE
 
89 { struct_declaration_list } 
 1427,3: {
 1428,5: int32_t
 1428,12: TYPE
 1428,13: *
 1428,14: fptr
 1428,18: VARIABLE
 1428,18: ;
 1429,5: int32_t
 1429,12: TYPE
 1429,13: *
 1429,14: rptr
 1429,18: VARIABLE
 1429,18: ;
 1430,5: int32_t
 1430,12: TYPE
 1430,13: *
 1430,14: state
 1430,19: VARIABLE
 1430,19: ;
 1431,5: int
 1431,9: rand_type
 1431,18: VARIABLE
 1431,18: ;
 1432,5: int
 1432,9: rand_deg
 1432,17: VARIABLE
 1432,17: ;
 1433,5: int
 1433,9: rand_sep
 1433,17: VARIABLE
 1433,17: ;
 1434,5: int32_t
 1434,12: TYPE
 1434,13: *
 1434,14: end_ptr
 1434,21: VARIABLE
 1434,21: ;
 1435,3: }
 
126 NAME TYPE 
 1428,5: int32_t
 1428,12: TYPE
 
26 TYPE 
 1428,12: TYPE
 
200 * option_type_qualifier_list option_pointer 
 1428,13: *
 
64 NAME VARIABLE 
 1428,14: fptr
 1428,18: VARIABLE
 
65 VARIABLE 
 1428,18: VARIABLE
 
313 ; 
 1428,18: ;
 
198 NAME TYPE 
 1429,5: int32_t
 1429,12: TYPE
 
26 TYPE 
 1429,12: TYPE
 
200 * option_type_qualifier_list option_pointer 
 1429,13: *
 
64 NAME VARIABLE 
 1429,14: rptr
 1429,18: VARIABLE
 
65 VARIABLE 
 1429,18: VARIABLE
 
313 ; 
 1429,18: ;
 
198 NAME TYPE 
 1430,5: int32_t
 1430,12: TYPE
 
26 TYPE 
 1430,12: TYPE
 
200 * option_type_qualifier_list option_pointer 
 1430,13: *
 
64 NAME VARIABLE 
 1430,14: state
 1430,19: VARIABLE
 
65 VARIABLE 
 1430,19: VARIABLE
 
313 ; 
 1430,19: ;
 
198 int 
 1431,5: int
 
200 NAME VARIABLE 
 1431,9: rand_type
 1431,18: VARIABLE
 
65 VARIABLE 
 1431,18: VARIABLE
 
313 ; 
 1431,18: ;
 
198 int 
 1432,5: int
 
200 NAME VARIABLE 
 1432,9: rand_deg
 1432,17: VARIABLE
 
65 VARIABLE 
 1432,17: VARIABLE
 
313 ; 
 1432,17: ;
 
198 int 
 1433,5: int
 
200 NAME VARIABLE 
 1433,9: rand_sep
 1433,17: VARIABLE
 
65 VARIABLE 
 1433,17: VARIABLE
 
313 ; 
 1433,17: ;
 
198 NAME TYPE 
 1434,5: int32_t
 1434,12: TYPE
 
26 TYPE 
 1434,12: TYPE
 
200 * option_type_qualifier_list option_pointer 
 1434,13: *
 
64 NAME VARIABLE 
 1434,14: end_ptr
 1434,21: VARIABLE
 
65 VARIABLE 
 1434,21: VARIABLE
 
313 ; 
 1434,21: ;
 
198 } 
 1435,3: }
 
60 ; 
 1435,4: ;
 
23 extern 
 1437,1: extern
 
8 int 
 1437,8: int
 
5 NAME VARIABLE 
 1437,12: random_r
 1437,20: VARIABLE
 
65 VARIABLE 
 1437,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1437,21: (
 1437,22: struct
 1437,29: random_data
 1437,40: VARIABLE
 1437,41: *
 1437,43: __buf
 1437,48: VARIABLE
 1437,48: ,
 1438,8: int32_t
 1438,15: TYPE
 1438,16: *
 1438,18: __result
 1438,26: VARIABLE
 1438,26: )
 
186 struct 
 1437,22: struct
 
22 NAME VARIABLE 
 1437,29: random_data
 1437,40: VARIABLE
 
65 VARIABLE 
 1437,40: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1437,41: *
 
386 NAME VARIABLE 
 1437,43: __buf
 1437,48: VARIABLE
 
65 VARIABLE 
 1437,48: VARIABLE
 
300 , parameter_declaration 
 1437,48: ,
 1438,8: int32_t
 1438,15: TYPE
 1438,16: *
 1438,18: __result
 1438,26: VARIABLE
 
391 NAME TYPE 
 1438,8: int32_t
 1438,15: TYPE
 
26 TYPE 
 1438,15: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1438,16: *
 
386 NAME VARIABLE 
 1438,18: __result
 1438,26: VARIABLE
 
65 VARIABLE 
 1438,26: VARIABLE
 
187 ) 
 1438,26: )
 
60 ; 
 1438,29: ;
 
23 extern 
 1440,1: extern
 
8 int 
 1440,8: int
 
5 NAME VARIABLE 
 1440,12: srandom_r
 1440,21: VARIABLE
 
65 VARIABLE 
 1440,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1440,22: (
 1440,23: unsigned
 1440,32: int
 1440,36: __seed
 1440,42: VARIABLE
 1440,42: ,
 1440,44: struct
 1440,51: random_data
 1440,62: VARIABLE
 1440,63: *
 1440,64: __buf
 1440,69: VARIABLE
 1440,69: )
 
186 unsigned 
 1440,23: unsigned
 
106 int 
 1440,32: int
 
298 NAME VARIABLE 
 1440,36: __seed
 1440,42: VARIABLE
 
65 VARIABLE 
 1440,42: VARIABLE
 
300 , parameter_declaration 
 1440,42: ,
 1440,44: struct
 1440,51: random_data
 1440,62: VARIABLE
 1440,63: *
 1440,64: __buf
 1440,69: VARIABLE
 
391 struct 
 1440,44: struct
 
22 NAME VARIABLE 
 1440,51: random_data
 1440,62: VARIABLE
 
65 VARIABLE 
 1440,62: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1440,63: *
 
386 NAME VARIABLE 
 1440,64: __buf
 1440,69: VARIABLE
 
65 VARIABLE 
 1440,69: VARIABLE
 
187 ) 
 1440,69: )
 
60 ; 
 1441,7: ;
 
23 extern 
 1443,1: extern
 
8 int 
 1443,8: int
 
5 NAME VARIABLE 
 1443,12: initstate_r
 1443,23: VARIABLE
 
65 VARIABLE 
 1443,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1443,24: (
 1443,25: unsigned
 1443,34: int
 1443,38: __seed
 1443,44: VARIABLE
 1443,44: ,
 1443,46: char
 1443,51: *
 1443,53: __statebuf
 1443,63: VARIABLE
 1443,63: ,
 1444,4: size_t
 1444,10: TYPE
 1444,11: __statelen
 1444,21: VARIABLE
 1444,21: ,
 1445,4: struct
 1445,11: random_data
 1445,22: VARIABLE
 1445,23: *
 1445,25: __buf
 1445,30: VARIABLE
 1445,30: )
 
186 unsigned 
 1443,25: unsigned
 
106 int 
 1443,34: int
 
298 NAME VARIABLE 
 1443,38: __seed
 1443,44: VARIABLE
 
65 VARIABLE 
 1443,44: VARIABLE
 
300 , parameter_declaration 
 1443,44: ,
 1443,46: char
 1443,51: *
 1443,53: __statebuf
 1443,63: VARIABLE
 
391 char 
 1443,46: char
 
298 * option_type_qualifier_list option_pointer 
 1443,51: *
 
386 NAME VARIABLE 
 1443,53: __statebuf
 1443,63: VARIABLE
 
65 VARIABLE 
 1443,63: VARIABLE
 
300 , parameter_declaration 
 1443,63: ,
 1444,4: size_t
 1444,10: TYPE
 1444,11: __statelen
 1444,21: VARIABLE
 
391 NAME TYPE 
 1444,4: size_t
 1444,10: TYPE
 
26 TYPE 
 1444,10: TYPE
 
298 NAME VARIABLE 
 1444,11: __statelen
 1444,21: VARIABLE
 
65 VARIABLE 
 1444,21: VARIABLE
 
300 , parameter_declaration 
 1444,21: ,
 1445,4: struct
 1445,11: random_data
 1445,22: VARIABLE
 1445,23: *
 1445,25: __buf
 1445,30: VARIABLE
 
391 struct 
 1445,4: struct
 
22 NAME VARIABLE 
 1445,11: random_data
 1445,22: VARIABLE
 
65 VARIABLE 
 1445,22: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1445,23: *
 
386 NAME VARIABLE 
 1445,25: __buf
 1445,30: VARIABLE
 
65 VARIABLE 
 1445,30: VARIABLE
 
187 ) 
 1445,30: )
 
60 ; 
 1446,7: ;
 
23 extern 
 1448,1: extern
 
8 int 
 1448,8: int
 
5 NAME VARIABLE 
 1448,12: setstate_r
 1448,22: VARIABLE
 
65 VARIABLE 
 1448,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1448,23: (
 1448,24: char
 1448,29: *
 1448,31: __statebuf
 1448,41: VARIABLE
 1448,41: ,
 1449,10: struct
 1449,17: random_data
 1449,28: VARIABLE
 1449,29: *
 1449,31: __buf
 1449,36: VARIABLE
 1449,36: )
 
186 char 
 1448,24: char
 
298 * option_type_qualifier_list option_pointer 
 1448,29: *
 
386 NAME VARIABLE 
 1448,31: __statebuf
 1448,41: VARIABLE
 
65 VARIABLE 
 1448,41: VARIABLE
 
300 , parameter_declaration 
 1448,41: ,
 1449,10: struct
 1449,17: random_data
 1449,28: VARIABLE
 1449,29: *
 1449,31: __buf
 1449,36: VARIABLE
 
391 struct 
 1449,10: struct
 
22 NAME VARIABLE 
 1449,17: random_data
 1449,28: VARIABLE
 
65 VARIABLE 
 1449,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1449,29: *
 
386 NAME VARIABLE 
 1449,31: __buf
 1449,36: VARIABLE
 
65 VARIABLE 
 1449,36: VARIABLE
 
187 ) 
 1449,36: )
 
60 ; 
 1450,7: ;
 
23 extern 
 1456,1: extern
 
8 int 
 1456,8: int
 
5 NAME VARIABLE 
 1456,12: rand
 1456,16: VARIABLE
 
65 VARIABLE 
 1456,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1456,17: (
 1456,18: void
 1456,22: )
 
186 void 
 1456,18: void
 
187 ) 
 1456,22: )
 
60 ; 
 1456,24: ;
 
23 extern 
 1458,1: extern
 
8 void 
 1458,8: void
 
5 NAME VARIABLE 
 1458,13: srand
 1458,18: VARIABLE
 
65 VARIABLE 
 1458,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1458,19: (
 1458,20: unsigned
 1458,29: int
 1458,33: __seed
 1458,39: VARIABLE
 1458,39: )
 
186 unsigned 
 1458,20: unsigned
 
106 int 
 1458,29: int
 
298 NAME VARIABLE 
 1458,33: __seed
 1458,39: VARIABLE
 
65 VARIABLE 
 1458,39: VARIABLE
 
187 ) 
 1458,39: )
 
60 ; 
 1458,41: ;
 
23 extern 
 1462,1: extern
 
8 int 
 1462,8: int
 
5 NAME VARIABLE 
 1462,12: rand_r
 1462,18: VARIABLE
 
65 VARIABLE 
 1462,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1462,19: (
 1462,20: unsigned
 1462,29: int
 1462,33: *
 1462,34: __seed
 1462,40: VARIABLE
 1462,40: )
 
186 unsigned 
 1462,20: unsigned
 
106 int 
 1462,29: int
 
298 * option_type_qualifier_list option_pointer 
 1462,33: *
 
386 NAME VARIABLE 
 1462,34: __seed
 1462,40: VARIABLE
 
65 VARIABLE 
 1462,40: VARIABLE
 
187 ) 
 1462,40: )
 
60 ; 
 1462,42: ;
 
23 extern 
 1470,1: extern
 
8 double 
 1470,8: double
 
5 NAME VARIABLE 
 1470,15: drand48
 1470,22: VARIABLE
 
65 VARIABLE 
 1470,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1470,23: (
 1470,24: void
 1470,28: )
 
186 void 
 1470,24: void
 
187 ) 
 1470,28: )
 
60 ; 
 1470,30: ;
 
23 extern 
 1471,1: extern
 
8 double 
 1471,8: double
 
5 NAME VARIABLE 
 1471,15: erand48
 1471,22: VARIABLE
 
65 VARIABLE 
 1471,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1471,23: (
 1471,24: unsigned
 1471,33: short
 1471,39: int
 1471,43: __xsubi
 1471,50: VARIABLE
 1471,50: [
 1471,51: 3
 1471,52: ]
 1471,53: )
 
186 unsigned 
 1471,24: unsigned
 
106 short 
 1471,33: short
 
106 int 
 1471,39: int
 
298 NAME VARIABLE 
 1471,43: __xsubi
 1471,50: VARIABLE
 
65 VARIABLE 
 1471,50: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1471,50: [
 1471,51: 3
 1471,52: ]
 
188 CONSTANT 
 1471,51: 3
 
305 ] 
 1471,52: ]
 
187 ) 
 1471,53: )
 
60 ; 
 1471,56: ;
 
23 extern 
 1474,1: extern
 
8 long 
 1474,8: long
 
17 int 
 1474,13: int
 
5 NAME VARIABLE 
 1474,17: lrand48
 1474,24: VARIABLE
 
65 VARIABLE 
 1474,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1474,25: (
 1474,26: void
 1474,30: )
 
186 void 
 1474,26: void
 
187 ) 
 1474,30: )
 
60 ; 
 1474,32: ;
 
23 extern 
 1475,1: extern
 
8 long 
 1475,8: long
 
17 int 
 1475,13: int
 
5 NAME VARIABLE 
 1475,17: nrand48
 1475,24: VARIABLE
 
65 VARIABLE 
 1475,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1475,25: (
 1475,26: unsigned
 1475,35: short
 1475,41: int
 1475,45: __xsubi
 1475,52: VARIABLE
 1475,52: [
 1475,53: 3
 1475,54: ]
 1475,55: )
 
186 unsigned 
 1475,26: unsigned
 
106 short 
 1475,35: short
 
106 int 
 1475,41: int
 
298 NAME VARIABLE 
 1475,45: __xsubi
 1475,52: VARIABLE
 
65 VARIABLE 
 1475,52: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1475,52: [
 1475,53: 3
 1475,54: ]
 
188 CONSTANT 
 1475,53: 3
 
305 ] 
 1475,54: ]
 
187 ) 
 1475,55: )
 
60 ; 
 1476,7: ;
 
23 extern 
 1479,1: extern
 
8 long 
 1479,8: long
 
17 int 
 1479,13: int
 
5 NAME VARIABLE 
 1479,17: mrand48
 1479,24: VARIABLE
 
65 VARIABLE 
 1479,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1479,25: (
 1479,26: void
 1479,30: )
 
186 void 
 1479,26: void
 
187 ) 
 1479,30: )
 
60 ; 
 1479,32: ;
 
23 extern 
 1480,1: extern
 
8 long 
 1480,8: long
 
17 int 
 1480,13: int
 
5 NAME VARIABLE 
 1480,17: jrand48
 1480,24: VARIABLE
 
65 VARIABLE 
 1480,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1480,25: (
 1480,26: unsigned
 1480,35: short
 1480,41: int
 1480,45: __xsubi
 1480,52: VARIABLE
 1480,52: [
 1480,53: 3
 1480,54: ]
 1480,55: )
 
186 unsigned 
 1480,26: unsigned
 
106 short 
 1480,35: short
 
106 int 
 1480,41: int
 
298 NAME VARIABLE 
 1480,45: __xsubi
 1480,52: VARIABLE
 
65 VARIABLE 
 1480,52: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1480,52: [
 1480,53: 3
 1480,54: ]
 
188 CONSTANT 
 1480,53: 3
 
305 ] 
 1480,54: ]
 
187 ) 
 1480,55: )
 
60 ; 
 1481,7: ;
 
23 extern 
 1484,1: extern
 
8 void 
 1484,8: void
 
5 NAME VARIABLE 
 1484,13: srand48
 1484,20: VARIABLE
 
65 VARIABLE 
 1484,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1484,21: (
 1484,22: long
 1484,27: int
 1484,31: __seedval
 1484,40: VARIABLE
 1484,40: )
 
186 long 
 1484,22: long
 
106 int 
 1484,27: int
 
298 NAME VARIABLE 
 1484,31: __seedval
 1484,40: VARIABLE
 
65 VARIABLE 
 1484,40: VARIABLE
 
187 ) 
 1484,40: )
 
60 ; 
 1484,42: ;
 
23 extern 
 1485,1: extern
 
8 unsigned 
 1485,8: unsigned
 
17 short 
 1485,17: short
 
17 int 
 1485,23: int
 
5 * option_type_qualifier_list option_pointer 
 1485,27: *
 
64 NAME VARIABLE 
 1485,28: seed48
 1485,34: VARIABLE
 
65 VARIABLE 
 1485,34: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1485,35: (
 1485,36: unsigned
 1485,45: short
 1485,51: int
 1485,55: __seed16v
 1485,64: VARIABLE
 1485,64: [
 1485,65: 3
 1485,66: ]
 1485,67: )
 
186 unsigned 
 1485,36: unsigned
 
106 short 
 1485,45: short
 
106 int 
 1485,51: int
 
298 NAME VARIABLE 
 1485,55: __seed16v
 1485,64: VARIABLE
 
65 VARIABLE 
 1485,64: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1485,64: [
 1485,65: 3
 1485,66: ]
 
188 CONSTANT 
 1485,65: 3
 
305 ] 
 1485,66: ]
 
187 ) 
 1485,67: )
 
60 ; 
 1486,7: ;
 
23 extern 
 1487,1: extern
 
8 void 
 1487,8: void
 
5 NAME VARIABLE 
 1487,13: lcong48
 1487,20: VARIABLE
 
65 VARIABLE 
 1487,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1487,21: (
 1487,22: unsigned
 1487,31: short
 1487,37: int
 1487,41: __param
 1487,48: VARIABLE
 1487,48: [
 1487,49: 7
 1487,50: ]
 1487,51: )
 
186 unsigned 
 1487,22: unsigned
 
106 short 
 1487,31: short
 
106 int 
 1487,37: int
 
298 NAME VARIABLE 
 1487,41: __param
 1487,48: VARIABLE
 
65 VARIABLE 
 1487,48: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1487,48: [
 1487,49: 7
 1487,50: ]
 
188 CONSTANT 
 1487,49: 7
 
305 ] 
 1487,50: ]
 
187 ) 
 1487,51: )
 
60 ; 
 1487,54: ;
 
23 struct 
 1493,1: struct
 
22 NAME VARIABLE 
 1493,8: drand48_data
 1493,20: VARIABLE
 
65 VARIABLE 
 1493,20: VARIABLE
 
89 { struct_declaration_list } 
 1494,3: {
 1495,5: unsigned
 1495,14: short
 1495,20: int
 1495,24: __x
 1495,27: VARIABLE
 1495,27: [
 1495,28: 3
 1495,29: ]
 1495,30: ;
 1496,5: unsigned
 1496,14: short
 1496,20: int
 1496,24: __old_x
 1496,31: VARIABLE
 1496,31: [
 1496,32: 3
 1496,33: ]
 1496,34: ;
 1497,5: unsigned
 1497,14: short
 1497,20: int
 1497,24: __c
 1497,27: VARIABLE
 1497,27: ;
 1498,5: unsigned
 1498,14: short
 1498,20: int
 1498,24: __init
 1498,30: VARIABLE
 1498,30: ;
 1499,6: unsigned
 1499,15: long
 1499,20: long
 1499,25: int
 1499,29: __a
 1499,32: VARIABLE
 1499,32: ;
 1501,3: }
 
126 unsigned 
 1495,5: unsigned
 
135 short 
 1495,14: short
 
135 int 
 1495,20: int
 
200 NAME VARIABLE 
 1495,24: __x
 1495,27: VARIABLE
 
65 VARIABLE 
 1495,27: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1495,27: [
 1495,28: 3
 1495,29: ]
 
188 CONSTANT 
 1495,28: 3
 
305 ] 
 1495,29: ]
 
313 ; 
 1495,30: ;
 
198 unsigned 
 1496,5: unsigned
 
135 short 
 1496,14: short
 
135 int 
 1496,20: int
 
200 NAME VARIABLE 
 1496,24: __old_x
 1496,31: VARIABLE
 
65 VARIABLE 
 1496,31: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1496,31: [
 1496,32: 3
 1496,33: ]
 
188 CONSTANT 
 1496,32: 3
 
305 ] 
 1496,33: ]
 
313 ; 
 1496,34: ;
 
198 unsigned 
 1497,5: unsigned
 
135 short 
 1497,14: short
 
135 int 
 1497,20: int
 
200 NAME VARIABLE 
 1497,24: __c
 1497,27: VARIABLE
 
65 VARIABLE 
 1497,27: VARIABLE
 
313 ; 
 1497,27: ;
 
198 unsigned 
 1498,5: unsigned
 
135 short 
 1498,14: short
 
135 int 
 1498,20: int
 
200 NAME VARIABLE 
 1498,24: __init
 1498,30: VARIABLE
 
65 VARIABLE 
 1498,30: VARIABLE
 
313 ; 
 1498,30: ;
 
198 unsigned 
 1499,6: unsigned
 
135 long 
 1499,15: long
 
135 long 
 1499,20: long
 
135 int 
 1499,25: int
 
200 NAME VARIABLE 
 1499,29: __a
 1499,32: VARIABLE
 
65 VARIABLE 
 1499,32: VARIABLE
 
313 ; 
 1499,32: ;
 
198 } 
 1501,3: }
 
60 ; 
 1501,4: ;
 
23 extern 
 1504,1: extern
 
8 int 
 1504,8: int
 
5 NAME VARIABLE 
 1504,12: drand48_r
 1504,21: VARIABLE
 
65 VARIABLE 
 1504,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1504,22: (
 1504,23: struct
 1504,30: drand48_data
 1504,42: VARIABLE
 1504,43: *
 1504,45: __buffer
 1504,53: VARIABLE
 1504,53: ,
 1505,9: double
 1505,16: *
 1505,18: __result
 1505,26: VARIABLE
 1505,26: )
 
186 struct 
 1504,23: struct
 
22 NAME VARIABLE 
 1504,30: drand48_data
 1504,42: VARIABLE
 
65 VARIABLE 
 1504,42: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1504,43: *
 
386 NAME VARIABLE 
 1504,45: __buffer
 1504,53: VARIABLE
 
65 VARIABLE 
 1504,53: VARIABLE
 
300 , parameter_declaration 
 1504,53: ,
 1505,9: double
 1505,16: *
 1505,18: __result
 1505,26: VARIABLE
 
391 double 
 1505,9: double
 
298 * option_type_qualifier_list option_pointer 
 1505,16: *
 
386 NAME VARIABLE 
 1505,18: __result
 1505,26: VARIABLE
 
65 VARIABLE 
 1505,26: VARIABLE
 
187 ) 
 1505,26: )
 
60 ; 
 1505,29: ;
 
23 extern 
 1506,1: extern
 
8 int 
 1506,8: int
 
5 NAME VARIABLE 
 1506,12: erand48_r
 1506,21: VARIABLE
 
65 VARIABLE 
 1506,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1506,22: (
 1506,23: unsigned
 1506,32: short
 1506,38: int
 1506,42: __xsubi
 1506,49: VARIABLE
 1506,49: [
 1506,50: 3
 1506,51: ]
 1506,52: ,
 1507,9: struct
 1507,16: drand48_data
 1507,28: VARIABLE
 1507,29: *
 1507,31: __buffer
 1507,39: VARIABLE
 1507,39: ,
 1508,9: double
 1508,16: *
 1508,18: __result
 1508,26: VARIABLE
 1508,26: )
 
186 unsigned 
 1506,23: unsigned
 
106 short 
 1506,32: short
 
106 int 
 1506,38: int
 
298 NAME VARIABLE 
 1506,42: __xsubi
 1506,49: VARIABLE
 
65 VARIABLE 
 1506,49: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1506,49: [
 1506,50: 3
 1506,51: ]
 
188 CONSTANT 
 1506,50: 3
 
305 ] 
 1506,51: ]
 
300 , parameter_declaration 
 1506,52: ,
 1507,9: struct
 1507,16: drand48_data
 1507,28: VARIABLE
 1507,29: *
 1507,31: __buffer
 1507,39: VARIABLE
 
391 struct 
 1507,9: struct
 
22 NAME VARIABLE 
 1507,16: drand48_data
 1507,28: VARIABLE
 
65 VARIABLE 
 1507,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1507,29: *
 
386 NAME VARIABLE 
 1507,31: __buffer
 1507,39: VARIABLE
 
65 VARIABLE 
 1507,39: VARIABLE
 
300 , parameter_declaration 
 1507,39: ,
 1508,9: double
 1508,16: *
 1508,18: __result
 1508,26: VARIABLE
 
391 double 
 1508,9: double
 
298 * option_type_qualifier_list option_pointer 
 1508,16: *
 
386 NAME VARIABLE 
 1508,18: __result
 1508,26: VARIABLE
 
65 VARIABLE 
 1508,26: VARIABLE
 
187 ) 
 1508,26: )
 
60 ; 
 1508,29: ;
 
23 extern 
 1511,1: extern
 
8 int 
 1511,8: int
 
5 NAME VARIABLE 
 1511,12: lrand48_r
 1511,21: VARIABLE
 
65 VARIABLE 
 1511,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1511,22: (
 1511,23: struct
 1511,30: drand48_data
 1511,42: VARIABLE
 1511,43: *
 1511,45: __buffer
 1511,53: VARIABLE
 1511,53: ,
 1512,9: long
 1512,14: int
 1512,18: *
 1512,20: __result
 1512,28: VARIABLE
 1512,28: )
 
186 struct 
 1511,23: struct
 
22 NAME VARIABLE 
 1511,30: drand48_data
 1511,42: VARIABLE
 
65 VARIABLE 
 1511,42: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1511,43: *
 
386 NAME VARIABLE 
 1511,45: __buffer
 1511,53: VARIABLE
 
65 VARIABLE 
 1511,53: VARIABLE
 
300 , parameter_declaration 
 1511,53: ,
 1512,9: long
 1512,14: int
 1512,18: *
 1512,20: __result
 1512,28: VARIABLE
 
391 long 
 1512,9: long
 
106 int 
 1512,14: int
 
298 * option_type_qualifier_list option_pointer 
 1512,18: *
 
386 NAME VARIABLE 
 1512,20: __result
 1512,28: VARIABLE
 
65 VARIABLE 
 1512,28: VARIABLE
 
187 ) 
 1512,28: )
 
60 ; 
 1513,7: ;
 
23 extern 
 1514,1: extern
 
8 int 
 1514,8: int
 
5 NAME VARIABLE 
 1514,12: nrand48_r
 1514,21: VARIABLE
 
65 VARIABLE 
 1514,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1514,22: (
 1514,23: unsigned
 1514,32: short
 1514,38: int
 1514,42: __xsubi
 1514,49: VARIABLE
 1514,49: [
 1514,50: 3
 1514,51: ]
 1514,52: ,
 1515,9: struct
 1515,16: drand48_data
 1515,28: VARIABLE
 1515,29: *
 1515,31: __buffer
 1515,39: VARIABLE
 1515,39: ,
 1516,9: long
 1516,14: int
 1516,18: *
 1516,20: __result
 1516,28: VARIABLE
 1516,28: )
 
186 unsigned 
 1514,23: unsigned
 
106 short 
 1514,32: short
 
106 int 
 1514,38: int
 
298 NAME VARIABLE 
 1514,42: __xsubi
 1514,49: VARIABLE
 
65 VARIABLE 
 1514,49: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1514,49: [
 1514,50: 3
 1514,51: ]
 
188 CONSTANT 
 1514,50: 3
 
305 ] 
 1514,51: ]
 
300 , parameter_declaration 
 1514,52: ,
 1515,9: struct
 1515,16: drand48_data
 1515,28: VARIABLE
 1515,29: *
 1515,31: __buffer
 1515,39: VARIABLE
 
391 struct 
 1515,9: struct
 
22 NAME VARIABLE 
 1515,16: drand48_data
 1515,28: VARIABLE
 
65 VARIABLE 
 1515,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1515,29: *
 
386 NAME VARIABLE 
 1515,31: __buffer
 1515,39: VARIABLE
 
65 VARIABLE 
 1515,39: VARIABLE
 
300 , parameter_declaration 
 1515,39: ,
 1516,9: long
 1516,14: int
 1516,18: *
 1516,20: __result
 1516,28: VARIABLE
 
391 long 
 1516,9: long
 
106 int 
 1516,14: int
 
298 * option_type_qualifier_list option_pointer 
 1516,18: *
 
386 NAME VARIABLE 
 1516,20: __result
 1516,28: VARIABLE
 
65 VARIABLE 
 1516,28: VARIABLE
 
187 ) 
 1516,28: )
 
60 ; 
 1517,7: ;
 
23 extern 
 1520,1: extern
 
8 int 
 1520,8: int
 
5 NAME VARIABLE 
 1520,12: mrand48_r
 1520,21: VARIABLE
 
65 VARIABLE 
 1520,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1520,22: (
 1520,23: struct
 1520,30: drand48_data
 1520,42: VARIABLE
 1520,43: *
 1520,45: __buffer
 1520,53: VARIABLE
 1520,53: ,
 1521,9: long
 1521,14: int
 1521,18: *
 1521,20: __result
 1521,28: VARIABLE
 1521,28: )
 
186 struct 
 1520,23: struct
 
22 NAME VARIABLE 
 1520,30: drand48_data
 1520,42: VARIABLE
 
65 VARIABLE 
 1520,42: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1520,43: *
 
386 NAME VARIABLE 
 1520,45: __buffer
 1520,53: VARIABLE
 
65 VARIABLE 
 1520,53: VARIABLE
 
300 , parameter_declaration 
 1520,53: ,
 1521,9: long
 1521,14: int
 1521,18: *
 1521,20: __result
 1521,28: VARIABLE
 
391 long 
 1521,9: long
 
106 int 
 1521,14: int
 
298 * option_type_qualifier_list option_pointer 
 1521,18: *
 
386 NAME VARIABLE 
 1521,20: __result
 1521,28: VARIABLE
 
65 VARIABLE 
 1521,28: VARIABLE
 
187 ) 
 1521,28: )
 
60 ; 
 1522,7: ;
 
23 extern 
 1523,1: extern
 
8 int 
 1523,8: int
 
5 NAME VARIABLE 
 1523,12: jrand48_r
 1523,21: VARIABLE
 
65 VARIABLE 
 1523,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1523,22: (
 1523,23: unsigned
 1523,32: short
 1523,38: int
 1523,42: __xsubi
 1523,49: VARIABLE
 1523,49: [
 1523,50: 3
 1523,51: ]
 1523,52: ,
 1524,9: struct
 1524,16: drand48_data
 1524,28: VARIABLE
 1524,29: *
 1524,31: __buffer
 1524,39: VARIABLE
 1524,39: ,
 1525,9: long
 1525,14: int
 1525,18: *
 1525,20: __result
 1525,28: VARIABLE
 1525,28: )
 
186 unsigned 
 1523,23: unsigned
 
106 short 
 1523,32: short
 
106 int 
 1523,38: int
 
298 NAME VARIABLE 
 1523,42: __xsubi
 1523,49: VARIABLE
 
65 VARIABLE 
 1523,49: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1523,49: [
 1523,50: 3
 1523,51: ]
 
188 CONSTANT 
 1523,50: 3
 
305 ] 
 1523,51: ]
 
300 , parameter_declaration 
 1523,52: ,
 1524,9: struct
 1524,16: drand48_data
 1524,28: VARIABLE
 1524,29: *
 1524,31: __buffer
 1524,39: VARIABLE
 
391 struct 
 1524,9: struct
 
22 NAME VARIABLE 
 1524,16: drand48_data
 1524,28: VARIABLE
 
65 VARIABLE 
 1524,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1524,29: *
 
386 NAME VARIABLE 
 1524,31: __buffer
 1524,39: VARIABLE
 
65 VARIABLE 
 1524,39: VARIABLE
 
300 , parameter_declaration 
 1524,39: ,
 1525,9: long
 1525,14: int
 1525,18: *
 1525,20: __result
 1525,28: VARIABLE
 
391 long 
 1525,9: long
 
106 int 
 1525,14: int
 
298 * option_type_qualifier_list option_pointer 
 1525,18: *
 
386 NAME VARIABLE 
 1525,20: __result
 1525,28: VARIABLE
 
65 VARIABLE 
 1525,28: VARIABLE
 
187 ) 
 1525,28: )
 
60 ; 
 1526,7: ;
 
23 extern 
 1529,1: extern
 
8 int 
 1529,8: int
 
5 NAME VARIABLE 
 1529,12: srand48_r
 1529,21: VARIABLE
 
65 VARIABLE 
 1529,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1529,22: (
 1529,23: long
 1529,28: int
 1529,32: __seedval
 1529,41: VARIABLE
 1529,41: ,
 1529,43: struct
 1529,50: drand48_data
 1529,62: VARIABLE
 1529,63: *
 1529,64: __buffer
 1529,72: VARIABLE
 1529,72: )
 
186 long 
 1529,23: long
 
106 int 
 1529,28: int
 
298 NAME VARIABLE 
 1529,32: __seedval
 1529,41: VARIABLE
 
65 VARIABLE 
 1529,41: VARIABLE
 
300 , parameter_declaration 
 1529,41: ,
 1529,43: struct
 1529,50: drand48_data
 1529,62: VARIABLE
 1529,63: *
 1529,64: __buffer
 1529,72: VARIABLE
 
391 struct 
 1529,43: struct
 
22 NAME VARIABLE 
 1529,50: drand48_data
 1529,62: VARIABLE
 
65 VARIABLE 
 1529,62: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1529,63: *
 
386 NAME VARIABLE 
 1529,64: __buffer
 1529,72: VARIABLE
 
65 VARIABLE 
 1529,72: VARIABLE
 
187 ) 
 1529,72: )
 
60 ; 
 1530,7: ;
 
23 extern 
 1532,1: extern
 
8 int 
 1532,8: int
 
5 NAME VARIABLE 
 1532,12: seed48_r
 1532,20: VARIABLE
 
65 VARIABLE 
 1532,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1532,21: (
 1532,22: unsigned
 1532,31: short
 1532,37: int
 1532,41: __seed16v
 1532,50: VARIABLE
 1532,50: [
 1532,51: 3
 1532,52: ]
 1532,53: ,
 1533,8: struct
 1533,15: drand48_data
 1533,27: VARIABLE
 1533,28: *
 1533,29: __buffer
 1533,37: VARIABLE
 1533,37: )
 
186 unsigned 
 1532,22: unsigned
 
106 short 
 1532,31: short
 
106 int 
 1532,37: int
 
298 NAME VARIABLE 
 1532,41: __seed16v
 1532,50: VARIABLE
 
65 VARIABLE 
 1532,50: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1532,50: [
 1532,51: 3
 1532,52: ]
 
188 CONSTANT 
 1532,51: 3
 
305 ] 
 1532,52: ]
 
300 , parameter_declaration 
 1532,53: ,
 1533,8: struct
 1533,15: drand48_data
 1533,27: VARIABLE
 1533,28: *
 1533,29: __buffer
 1533,37: VARIABLE
 
391 struct 
 1533,8: struct
 
22 NAME VARIABLE 
 1533,15: drand48_data
 1533,27: VARIABLE
 
65 VARIABLE 
 1533,27: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1533,28: *
 
386 NAME VARIABLE 
 1533,29: __buffer
 1533,37: VARIABLE
 
65 VARIABLE 
 1533,37: VARIABLE
 
187 ) 
 1533,37: )
 
60 ; 
 1533,40: ;
 
23 extern 
 1535,1: extern
 
8 int 
 1535,8: int
 
5 NAME VARIABLE 
 1535,12: lcong48_r
 1535,21: VARIABLE
 
65 VARIABLE 
 1535,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1535,22: (
 1535,23: unsigned
 1535,32: short
 1535,38: int
 1535,42: __param
 1535,49: VARIABLE
 1535,49: [
 1535,50: 7
 1535,51: ]
 1535,52: ,
 1536,9: struct
 1536,16: drand48_data
 1536,28: VARIABLE
 1536,29: *
 1536,30: __buffer
 1536,38: VARIABLE
 1536,38: )
 
186 unsigned 
 1535,23: unsigned
 
106 short 
 1535,32: short
 
106 int 
 1535,38: int
 
298 NAME VARIABLE 
 1535,42: __param
 1535,49: VARIABLE
 
65 VARIABLE 
 1535,49: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1535,49: [
 1535,50: 7
 1535,51: ]
 
188 CONSTANT 
 1535,50: 7
 
305 ] 
 1535,51: ]
 
300 , parameter_declaration 
 1535,52: ,
 1536,9: struct
 1536,16: drand48_data
 1536,28: VARIABLE
 1536,29: *
 1536,30: __buffer
 1536,38: VARIABLE
 
391 struct 
 1536,9: struct
 
22 NAME VARIABLE 
 1536,16: drand48_data
 1536,28: VARIABLE
 
65 VARIABLE 
 1536,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1536,29: *
 
386 NAME VARIABLE 
 1536,30: __buffer
 1536,38: VARIABLE
 
65 VARIABLE 
 1536,38: VARIABLE
 
187 ) 
 1536,38: )
 
60 ; 
 1537,7: ;
 
23 extern 
 1542,1: extern
 
8 void 
 1542,8: void
 
5 * option_type_qualifier_list option_pointer 
 1542,13: *
 
64 NAME VARIABLE 
 1542,14: malloc
 1542,20: VARIABLE
 
65 VARIABLE 
 1542,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1542,21: (
 1542,22: size_t
 1542,28: TYPE
 1542,29: __size
 1542,35: VARIABLE
 1542,35: )
 
186 NAME TYPE 
 1542,22: size_t
 1542,28: TYPE
 
65 TYPE 
 1542,28: TYPE
 
298 NAME VARIABLE 
 1542,29: __size
 1542,35: VARIABLE
 
65 VARIABLE 
 1542,35: VARIABLE
 
187 ) 
 1542,35: )
 
60 ; 
 1543,7: ;
 
23 extern 
 1545,1: extern
 
8 void 
 1545,8: void
 
5 * option_type_qualifier_list option_pointer 
 1545,13: *
 
64 NAME VARIABLE 
 1545,14: calloc
 1545,20: VARIABLE
 
65 VARIABLE 
 1545,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1545,21: (
 1545,22: size_t
 1545,28: TYPE
 1545,29: __nmemb
 1545,36: VARIABLE
 1545,36: ,
 1545,38: size_t
 1545,44: TYPE
 1545,45: __size
 1545,51: VARIABLE
 1545,51: )
 
186 NAME TYPE 
 1545,22: size_t
 1545,28: TYPE
 
65 TYPE 
 1545,28: TYPE
 
298 NAME VARIABLE 
 1545,29: __nmemb
 1545,36: VARIABLE
 
65 VARIABLE 
 1545,36: VARIABLE
 
300 , parameter_declaration 
 1545,36: ,
 1545,38: size_t
 1545,44: TYPE
 1545,45: __size
 1545,51: VARIABLE
 
391 NAME TYPE 
 1545,38: size_t
 1545,44: TYPE
 
26 TYPE 
 1545,44: TYPE
 
298 NAME VARIABLE 
 1545,45: __size
 1545,51: VARIABLE
 
65 VARIABLE 
 1545,51: VARIABLE
 
187 ) 
 1545,51: )
 
60 ; 
 1546,9: ;
 
23 extern 
 1553,1: extern
 
8 void 
 1553,8: void
 
5 * option_type_qualifier_list option_pointer 
 1553,13: *
 
64 NAME VARIABLE 
 1553,14: realloc
 1553,21: VARIABLE
 
65 VARIABLE 
 1553,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1553,22: (
 1553,23: void
 1553,28: *
 1553,29: __ptr
 1553,34: VARIABLE
 1553,34: ,
 1553,36: size_t
 1553,42: TYPE
 1553,43: __size
 1553,49: VARIABLE
 1553,49: )
 
186 void 
 1553,23: void
 
298 * option_type_qualifier_list option_pointer 
 1553,28: *
 
386 NAME VARIABLE 
 1553,29: __ptr
 1553,34: VARIABLE
 
65 VARIABLE 
 1553,34: VARIABLE
 
300 , parameter_declaration 
 1553,34: ,
 1553,36: size_t
 1553,42: TYPE
 1553,43: __size
 1553,49: VARIABLE
 
391 NAME TYPE 
 1553,36: size_t
 1553,42: TYPE
 
26 TYPE 
 1553,42: TYPE
 
298 NAME VARIABLE 
 1553,43: __size
 1553,49: VARIABLE
 
65 VARIABLE 
 1553,49: VARIABLE
 
187 ) 
 1553,49: )
 
60 ; 
 1554,8: ;
 
23 extern 
 1557,1: extern
 
8 void 
 1557,8: void
 
5 NAME VARIABLE 
 1557,13: free
 1557,17: VARIABLE
 
65 VARIABLE 
 1557,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1557,18: (
 1557,19: void
 1557,24: *
 1557,25: __ptr
 1557,30: VARIABLE
 1557,30: )
 
186 void 
 1557,19: void
 
298 * option_type_qualifier_list option_pointer 
 1557,24: *
 
386 NAME VARIABLE 
 1557,25: __ptr
 1557,30: VARIABLE
 
65 VARIABLE 
 1557,30: VARIABLE
 
187 ) 
 1557,30: )
 
60 ; 
 1557,32: ;
 
23 extern 
 1565,1: extern
 
8 void 
 1565,8: void
 
5 * option_type_qualifier_list option_pointer 
 1565,13: *
 
64 NAME VARIABLE 
 1565,14: reallocarray
 1565,26: VARIABLE
 
65 VARIABLE 
 1565,26: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1565,27: (
 1565,28: void
 1565,33: *
 1565,34: __ptr
 1565,39: VARIABLE
 1565,39: ,
 1565,41: size_t
 1565,47: TYPE
 1565,48: __nmemb
 1565,55: VARIABLE
 1565,55: ,
 1565,57: size_t
 1565,63: TYPE
 1565,64: __size
 1565,70: VARIABLE
 1565,70: )
 
186 void 
 1565,28: void
 
298 * option_type_qualifier_list option_pointer 
 1565,33: *
 
386 NAME VARIABLE 
 1565,34: __ptr
 1565,39: VARIABLE
 
65 VARIABLE 
 1565,39: VARIABLE
 
300 , parameter_declaration 
 1565,39: ,
 1565,41: size_t
 1565,47: TYPE
 1565,48: __nmemb
 1565,55: VARIABLE
 
391 NAME TYPE 
 1565,41: size_t
 1565,47: TYPE
 
26 TYPE 
 1565,47: TYPE
 
298 NAME VARIABLE 
 1565,48: __nmemb
 1565,55: VARIABLE
 
65 VARIABLE 
 1565,55: VARIABLE
 
300 , parameter_declaration 
 1565,55: ,
 1565,57: size_t
 1565,63: TYPE
 1565,64: __size
 1565,70: VARIABLE
 
391 NAME TYPE 
 1565,57: size_t
 1565,63: TYPE
 
26 TYPE 
 1565,63: TYPE
 
298 NAME VARIABLE 
 1565,64: __size
 1565,70: VARIABLE
 
65 VARIABLE 
 1565,70: VARIABLE
 
187 ) 
 1565,70: )
 
60 ; 
 1568,5: ;
 
23 extern 
 1571,1: extern
 
8 void 
 1571,8: void
 
5 * option_type_qualifier_list option_pointer 
 1571,13: *
 
64 NAME VARIABLE 
 1571,14: reallocarray
 1571,26: VARIABLE
 
65 VARIABLE 
 1571,26: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1571,27: (
 1571,28: void
 1571,33: *
 1571,34: __ptr
 1571,39: VARIABLE
 1571,39: ,
 1571,41: size_t
 1571,47: TYPE
 1571,48: __nmemb
 1571,55: VARIABLE
 1571,55: ,
 1571,57: size_t
 1571,63: TYPE
 1571,64: __size
 1571,70: VARIABLE
 1571,70: )
 
186 void 
 1571,28: void
 
298 * option_type_qualifier_list option_pointer 
 1571,33: *
 
386 NAME VARIABLE 
 1571,34: __ptr
 1571,39: VARIABLE
 
65 VARIABLE 
 1571,39: VARIABLE
 
300 , parameter_declaration 
 1571,39: ,
 1571,41: size_t
 1571,47: TYPE
 1571,48: __nmemb
 1571,55: VARIABLE
 
391 NAME TYPE 
 1571,41: size_t
 1571,47: TYPE
 
26 TYPE 
 1571,47: TYPE
 
298 NAME VARIABLE 
 1571,48: __nmemb
 1571,55: VARIABLE
 
65 VARIABLE 
 1571,55: VARIABLE
 
300 , parameter_declaration 
 1571,55: ,
 1571,57: size_t
 1571,63: TYPE
 1571,64: __size
 1571,70: VARIABLE
 
391 NAME TYPE 
 1571,57: size_t
 1571,63: TYPE
 
26 TYPE 
 1571,63: TYPE
 
298 NAME VARIABLE 
 1571,64: __size
 1571,70: VARIABLE
 
65 VARIABLE 
 1571,70: VARIABLE
 
187 ) 
 1571,70: )
 
60 ; 
 1572,7: ;
 
23 extern 
 1587,1: extern
 
8 void 
 1587,8: void
 
5 * option_type_qualifier_list option_pointer 
 1587,13: *
 
64 NAME VARIABLE 
 1587,14: alloca
 1587,20: VARIABLE
 
65 VARIABLE 
 1587,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1587,21: (
 1587,22: size_t
 1587,28: TYPE
 1587,29: __size
 1587,35: VARIABLE
 1587,35: )
 
186 NAME TYPE 
 1587,22: size_t
 1587,28: TYPE
 
65 TYPE 
 1587,28: TYPE
 
298 NAME VARIABLE 
 1587,29: __size
 1587,35: VARIABLE
 
65 VARIABLE 
 1587,35: VARIABLE
 
187 ) 
 1587,35: )
 
60 ; 
 1587,37: ;
 
23 extern 
 1600,1: extern
 
8 void 
 1600,8: void
 
5 * option_type_qualifier_list option_pointer 
 1600,13: *
 
64 NAME VARIABLE 
 1600,14: valloc
 1600,20: VARIABLE
 
65 VARIABLE 
 1600,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1600,21: (
 1600,22: size_t
 1600,28: TYPE
 1600,29: __size
 1600,35: VARIABLE
 1600,35: )
 
186 NAME TYPE 
 1600,22: size_t
 1600,28: TYPE
 
65 TYPE 
 1600,28: TYPE
 
298 NAME VARIABLE 
 1600,29: __size
 1600,35: VARIABLE
 
65 VARIABLE 
 1600,35: VARIABLE
 
187 ) 
 1600,35: )
 
60 ; 
 1601,7: ;
 
23 extern 
 1606,1: extern
 
8 int 
 1606,8: int
 
5 NAME VARIABLE 
 1606,12: posix_memalign
 1606,26: VARIABLE
 
65 VARIABLE 
 1606,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1606,27: (
 1606,28: void
 1606,33: *
 1606,34: *
 1606,35: __memptr
 1606,43: VARIABLE
 1606,43: ,
 1606,45: size_t
 1606,51: TYPE
 1606,52: __alignment
 1606,63: VARIABLE
 1606,63: ,
 1606,65: size_t
 1606,71: TYPE
 1606,72: __size
 1606,78: VARIABLE
 1606,78: )
 
186 void 
 1606,28: void
 
298 * option_type_qualifier_list option_pointer 
 1606,33: *
 1606,34: *
 
116 * option_type_qualifier_list option_pointer 
 1606,34: *
 
386 NAME VARIABLE 
 1606,35: __memptr
 1606,43: VARIABLE
 
65 VARIABLE 
 1606,43: VARIABLE
 
300 , parameter_declaration 
 1606,43: ,
 1606,45: size_t
 1606,51: TYPE
 1606,52: __alignment
 1606,63: VARIABLE
 
391 NAME TYPE 
 1606,45: size_t
 1606,51: TYPE
 
26 TYPE 
 1606,51: TYPE
 
298 NAME VARIABLE 
 1606,52: __alignment
 1606,63: VARIABLE
 
65 VARIABLE 
 1606,63: VARIABLE
 
300 , parameter_declaration 
 1606,63: ,
 1606,65: size_t
 1606,71: TYPE
 1606,72: __size
 1606,78: VARIABLE
 
391 NAME TYPE 
 1606,65: size_t
 1606,71: TYPE
 
26 TYPE 
 1606,71: TYPE
 
298 NAME VARIABLE 
 1606,72: __size
 1606,78: VARIABLE
 
65 VARIABLE 
 1606,78: VARIABLE
 
187 ) 
 1606,78: )
 
60 ; 
 1607,8: ;
 
23 extern 
 1612,1: extern
 
8 void 
 1612,8: void
 
5 * option_type_qualifier_list option_pointer 
 1612,13: *
 
64 NAME VARIABLE 
 1612,14: aligned_alloc
 1612,27: VARIABLE
 
65 VARIABLE 
 1612,27: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1612,28: (
 1612,29: size_t
 1612,35: TYPE
 1612,36: __alignment
 1612,47: VARIABLE
 1612,47: ,
 1612,49: size_t
 1612,55: TYPE
 1612,56: __size
 1612,62: VARIABLE
 1612,62: )
 
186 NAME TYPE 
 1612,29: size_t
 1612,35: TYPE
 
65 TYPE 
 1612,35: TYPE
 
298 NAME VARIABLE 
 1612,36: __alignment
 1612,47: VARIABLE
 
65 VARIABLE 
 1612,47: VARIABLE
 
300 , parameter_declaration 
 1612,47: ,
 1612,49: size_t
 1612,55: TYPE
 1612,56: __size
 1612,62: VARIABLE
 
391 NAME TYPE 
 1612,49: size_t
 1612,55: TYPE
 
26 TYPE 
 1612,55: TYPE
 
298 NAME VARIABLE 
 1612,56: __size
 1612,62: VARIABLE
 
65 VARIABLE 
 1612,62: VARIABLE
 
187 ) 
 1612,62: )
 
60 ; 
 1614,7: ;
 
23 extern 
 1618,1: extern
 
8 void 
 1618,8: void
 
5 NAME VARIABLE 
 1618,13: abort
 1618,18: VARIABLE
 
65 VARIABLE 
 1618,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1618,19: (
 1618,20: void
 1618,24: )
 
186 void 
 1618,20: void
 
187 ) 
 1618,24: )
 
60 ; 
 1618,27: ;
 
23 extern 
 1622,1: extern
 
8 int 
 1622,8: int
 
5 NAME VARIABLE 
 1622,12: atexit
 1622,18: VARIABLE
 
65 VARIABLE 
 1622,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1622,19: (
 1622,20: void
 1622,25: (
 1622,26: *
 1622,27: __func
 1622,33: VARIABLE
 1622,33: )
 1622,35: (
 1622,36: void
 1622,40: )
 1622,41: )
 
186 void 
 1622,20: void
 
298 ( save_context declarator ) 
 1622,25: (
 1622,26: *
 1622,27: __func
 1622,33: VARIABLE
 1622,33: )
 
445 * option_type_qualifier_list option_pointer 
 1622,26: *
 
386 NAME VARIABLE 
 1622,27: __func
 1622,33: VARIABLE
 
65 VARIABLE 
 1622,33: VARIABLE
 
191 ) 
 1622,33: )
 
63 ( scoped_parameter_type_list ) 
 1622,35: (
 1622,36: void
 1622,40: )
 
186 void 
 1622,36: void
 
187 ) 
 1622,40: )
 
187 ) 
 1622,41: )
 
60 ; 
 1622,44: ;
 
23 extern 
 1630,1: extern
 
8 int 
 1630,8: int
 
5 NAME VARIABLE 
 1630,12: at_quick_exit
 1630,25: VARIABLE
 
65 VARIABLE 
 1630,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1630,26: (
 1630,27: void
 1630,32: (
 1630,33: *
 1630,34: __func
 1630,40: VARIABLE
 1630,40: )
 1630,42: (
 1630,43: void
 1630,47: )
 1630,48: )
 
186 void 
 1630,27: void
 
298 ( save_context declarator ) 
 1630,32: (
 1630,33: *
 1630,34: __func
 1630,40: VARIABLE
 1630,40: )
 
445 * option_type_qualifier_list option_pointer 
 1630,33: *
 
386 NAME VARIABLE 
 1630,34: __func
 1630,40: VARIABLE
 
65 VARIABLE 
 1630,40: VARIABLE
 
191 ) 
 1630,40: )
 
63 ( scoped_parameter_type_list ) 
 1630,42: (
 1630,43: void
 1630,47: )
 
186 void 
 1630,43: void
 
187 ) 
 1630,47: )
 
187 ) 
 1630,48: )
 
60 ; 
 1630,51: ;
 
23 extern 
 1637,1: extern
 
8 int 
 1637,8: int
 
5 NAME VARIABLE 
 1637,12: on_exit
 1637,19: VARIABLE
 
65 VARIABLE 
 1637,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1637,20: (
 1637,21: void
 1637,26: (
 1637,27: *
 1637,28: __func
 1637,34: VARIABLE
 1637,34: )
 1637,36: (
 1637,37: int
 1637,41: __status
 1637,49: VARIABLE
 1637,49: ,
 1637,51: void
 1637,56: *
 1637,57: __arg
 1637,62: VARIABLE
 1637,62: )
 1637,63: ,
 1637,65: void
 1637,70: *
 1637,71: __arg
 1637,76: VARIABLE
 1637,76: )
 
186 void 
 1637,21: void
 
298 ( save_context declarator ) 
 1637,26: (
 1637,27: *
 1637,28: __func
 1637,34: VARIABLE
 1637,34: )
 
445 * option_type_qualifier_list option_pointer 
 1637,27: *
 
386 NAME VARIABLE 
 1637,28: __func
 1637,34: VARIABLE
 
65 VARIABLE 
 1637,34: VARIABLE
 
191 ) 
 1637,34: )
 
63 ( scoped_parameter_type_list ) 
 1637,36: (
 1637,37: int
 1637,41: __status
 1637,49: VARIABLE
 1637,49: ,
 1637,51: void
 1637,56: *
 1637,57: __arg
 1637,62: VARIABLE
 1637,62: )
 
186 int 
 1637,37: int
 
298 NAME VARIABLE 
 1637,41: __status
 1637,49: VARIABLE
 
65 VARIABLE 
 1637,49: VARIABLE
 
300 , parameter_declaration 
 1637,49: ,
 1637,51: void
 1637,56: *
 1637,57: __arg
 1637,62: VARIABLE
 
391 void 
 1637,51: void
 
298 * option_type_qualifier_list option_pointer 
 1637,56: *
 
386 NAME VARIABLE 
 1637,57: __arg
 1637,62: VARIABLE
 
65 VARIABLE 
 1637,62: VARIABLE
 
187 ) 
 1637,62: )
 
300 , parameter_declaration 
 1637,63: ,
 1637,65: void
 1637,70: *
 1637,71: __arg
 1637,76: VARIABLE
 
391 void 
 1637,65: void
 
298 * option_type_qualifier_list option_pointer 
 1637,70: *
 
386 NAME VARIABLE 
 1637,71: __arg
 1637,76: VARIABLE
 
65 VARIABLE 
 1637,76: VARIABLE
 
187 ) 
 1637,76: )
 
60 ; 
 1638,7: ;
 
23 extern 
 1644,1: extern
 
8 void 
 1644,8: void
 
5 NAME VARIABLE 
 1644,13: exit
 1644,17: VARIABLE
 
65 VARIABLE 
 1644,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1644,18: (
 1644,19: int
 1644,23: __status
 1644,31: VARIABLE
 1644,31: )
 
186 int 
 1644,19: int
 
298 NAME VARIABLE 
 1644,23: __status
 1644,31: VARIABLE
 
65 VARIABLE 
 1644,31: VARIABLE
 
187 ) 
 1644,31: )
 
60 ; 
 1644,34: ;
 
23 extern 
 1650,1: extern
 
8 void 
 1650,8: void
 
5 NAME VARIABLE 
 1650,13: quick_exit
 1650,23: VARIABLE
 
65 VARIABLE 
 1650,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1650,24: (
 1650,25: int
 1650,29: __status
 1650,37: VARIABLE
 1650,37: )
 
186 int 
 1650,25: int
 
298 NAME VARIABLE 
 1650,29: __status
 1650,37: VARIABLE
 
65 VARIABLE 
 1650,37: VARIABLE
 
187 ) 
 1650,37: )
 
60 ; 
 1650,40: ;
 
23 extern 
 1656,1: extern
 
8 void 
 1656,8: void
 
5 NAME VARIABLE 
 1656,13: _Exit
 1656,18: VARIABLE
 
65 VARIABLE 
 1656,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1656,19: (
 1656,20: int
 1656,24: __status
 1656,32: VARIABLE
 1656,32: )
 
186 int 
 1656,20: int
 
298 NAME VARIABLE 
 1656,24: __status
 1656,32: VARIABLE
 
65 VARIABLE 
 1656,32: VARIABLE
 
187 ) 
 1656,32: )
 
60 ; 
 1656,35: ;
 
23 extern 
 1661,1: extern
 
8 char 
 1661,8: char
 
5 * option_type_qualifier_list option_pointer 
 1661,13: *
 
64 NAME VARIABLE 
 1661,14: getenv
 1661,20: VARIABLE
 
65 VARIABLE 
 1661,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1661,21: (
 1661,22: const
 1661,28: char
 1661,33: *
 1661,34: __name
 1661,40: VARIABLE
 1661,40: )
 
186 const 
 1661,22: const
 
103 char 
 1661,28: char
 
298 * option_type_qualifier_list option_pointer 
 1661,33: *
 
386 NAME VARIABLE 
 1661,34: __name
 1661,40: VARIABLE
 
65 VARIABLE 
 1661,40: VARIABLE
 
187 ) 
 1661,40: )
 
60 ; 
 1661,44: ;
 
23 extern 
 1663,1: extern
 
8 int 
 1663,8: int
 
5 NAME VARIABLE 
 1663,12: putenv
 1663,18: VARIABLE
 
65 VARIABLE 
 1663,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1663,19: (
 1663,20: char
 1663,25: *
 1663,26: __string
 1663,34: VARIABLE
 1663,34: )
 
186 char 
 1663,20: char
 
298 * option_type_qualifier_list option_pointer 
 1663,25: *
 
386 NAME VARIABLE 
 1663,26: __string
 1663,34: VARIABLE
 
65 VARIABLE 
 1663,34: VARIABLE
 
187 ) 
 1663,34: )
 
60 ; 
 1663,37: ;
 
23 extern 
 1669,1: extern
 
8 int 
 1669,8: int
 
5 NAME VARIABLE 
 1669,12: setenv
 1669,18: VARIABLE
 
65 VARIABLE 
 1669,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1669,19: (
 1669,20: const
 1669,26: char
 1669,31: *
 1669,32: __name
 1669,38: VARIABLE
 1669,38: ,
 1669,40: const
 1669,46: char
 1669,51: *
 1669,52: __value
 1669,59: VARIABLE
 1669,59: ,
 1669,61: int
 1669,65: __replace
 1669,74: VARIABLE
 1669,74: )
 
186 const 
 1669,20: const
 
103 char 
 1669,26: char
 
298 * option_type_qualifier_list option_pointer 
 1669,31: *
 
386 NAME VARIABLE 
 1669,32: __name
 1669,38: VARIABLE
 
65 VARIABLE 
 1669,38: VARIABLE
 
300 , parameter_declaration 
 1669,38: ,
 1669,40: const
 1669,46: char
 1669,51: *
 1669,52: __value
 1669,59: VARIABLE
 
391 const 
 1669,40: const
 
103 char 
 1669,46: char
 
298 * option_type_qualifier_list option_pointer 
 1669,51: *
 
386 NAME VARIABLE 
 1669,52: __value
 1669,59: VARIABLE
 
65 VARIABLE 
 1669,59: VARIABLE
 
300 , parameter_declaration 
 1669,59: ,
 1669,61: int
 1669,65: __replace
 1669,74: VARIABLE
 
391 int 
 1669,61: int
 
298 NAME VARIABLE 
 1669,65: __replace
 1669,74: VARIABLE
 
65 VARIABLE 
 1669,74: VARIABLE
 
187 ) 
 1669,74: )
 
60 ; 
 1670,7: ;
 
23 extern 
 1673,1: extern
 
8 int 
 1673,8: int
 
5 NAME VARIABLE 
 1673,12: unsetenv
 1673,20: VARIABLE
 
65 VARIABLE 
 1673,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1673,21: (
 1673,22: const
 1673,28: char
 1673,33: *
 1673,34: __name
 1673,40: VARIABLE
 1673,40: )
 
186 const 
 1673,22: const
 
103 char 
 1673,28: char
 
298 * option_type_qualifier_list option_pointer 
 1673,33: *
 
386 NAME VARIABLE 
 1673,34: __name
 1673,40: VARIABLE
 
65 VARIABLE 
 1673,40: VARIABLE
 
187 ) 
 1673,40: )
 
60 ; 
 1673,43: ;
 
23 extern 
 1680,1: extern
 
8 int 
 1680,8: int
 
5 NAME VARIABLE 
 1680,12: clearenv
 1680,20: VARIABLE
 
65 VARIABLE 
 1680,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1680,21: (
 1680,22: void
 1680,26: )
 
186 void 
 1680,22: void
 
187 ) 
 1680,26: )
 
60 ; 
 1680,28: ;
 
23 extern 
 1682,1: extern
 
8 char 
 1682,8: char
 
5 * option_type_qualifier_list option_pointer 
 1682,13: *
 
64 NAME VARIABLE 
 1682,14: mktemp
 1682,20: VARIABLE
 
65 VARIABLE 
 1682,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1682,21: (
 1682,22: char
 1682,27: *
 1682,28: __template
 1682,38: VARIABLE
 1682,38: )
 
186 char 
 1682,22: char
 
298 * option_type_qualifier_list option_pointer 
 1682,27: *
 
386 NAME VARIABLE 
 1682,28: __template
 1682,38: VARIABLE
 
65 VARIABLE 
 1682,38: VARIABLE
 
187 ) 
 1682,38: )
 
60 ; 
 1682,41: ;
 
23 extern 
 1684,1: extern
 
8 int 
 1684,8: int
 
5 NAME VARIABLE 
 1684,12: mkstemp
 1684,19: VARIABLE
 
65 VARIABLE 
 1684,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1684,20: (
 1684,21: char
 1684,26: *
 1684,27: __template
 1684,37: VARIABLE
 1684,37: )
 
186 char 
 1684,21: char
 
298 * option_type_qualifier_list option_pointer 
 1684,26: *
 
386 NAME VARIABLE 
 1684,27: __template
 1684,37: VARIABLE
 
65 VARIABLE 
 1684,37: VARIABLE
 
187 ) 
 1684,37: )
 
60 ; 
 1684,40: ;
 
23 extern 
 1686,1: extern
 
8 int 
 1686,8: int
 
5 NAME VARIABLE 
 1686,12: mkstemps
 1686,20: VARIABLE
 
65 VARIABLE 
 1686,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1686,21: (
 1686,22: char
 1686,27: *
 1686,28: __template
 1686,38: VARIABLE
 1686,38: ,
 1686,40: int
 1686,44: __suffixlen
 1686,55: VARIABLE
 1686,55: )
 
186 char 
 1686,22: char
 
298 * option_type_qualifier_list option_pointer 
 1686,27: *
 
386 NAME VARIABLE 
 1686,28: __template
 1686,38: VARIABLE
 
65 VARIABLE 
 1686,38: VARIABLE
 
300 , parameter_declaration 
 1686,38: ,
 1686,40: int
 1686,44: __suffixlen
 1686,55: VARIABLE
 
391 int 
 1686,40: int
 
298 NAME VARIABLE 
 1686,44: __suffixlen
 1686,55: VARIABLE
 
65 VARIABLE 
 1686,55: VARIABLE
 
187 ) 
 1686,55: )
 
60 ; 
 1686,58: ;
 
23 extern 
 1688,1: extern
 
8 char 
 1688,8: char
 
5 * option_type_qualifier_list option_pointer 
 1688,13: *
 
64 NAME VARIABLE 
 1688,14: mkdtemp
 1688,21: VARIABLE
 
65 VARIABLE 
 1688,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1688,22: (
 1688,23: char
 1688,28: *
 1688,29: __template
 1688,39: VARIABLE
 1688,39: )
 
186 char 
 1688,23: char
 
298 * option_type_qualifier_list option_pointer 
 1688,28: *
 
386 NAME VARIABLE 
 1688,29: __template
 1688,39: VARIABLE
 
65 VARIABLE 
 1688,39: VARIABLE
 
187 ) 
 1688,39: )
 
60 ; 
 1688,43: ;
 
23 extern 
 1690,1: extern
 
8 int 
 1690,8: int
 
5 NAME VARIABLE 
 1690,12: system
 1690,18: VARIABLE
 
65 VARIABLE 
 1690,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1690,19: (
 1690,20: const
 1690,26: char
 1690,31: *
 1690,32: __command
 1690,41: VARIABLE
 1690,41: )
 
186 const 
 1690,20: const
 
103 char 
 1690,26: char
 
298 * option_type_qualifier_list option_pointer 
 1690,31: *
 
386 NAME VARIABLE 
 1690,32: __command
 1690,41: VARIABLE
 
65 VARIABLE 
 1690,41: VARIABLE
 
187 ) 
 1690,41: )
 
60 ; 
 1690,43: ;
 
23 extern 
 1692,1: extern
 
8 char 
 1692,8: char
 
5 * option_type_qualifier_list option_pointer 
 1692,13: *
 
64 NAME VARIABLE 
 1692,14: realpath
 1692,22: VARIABLE
 
65 VARIABLE 
 1692,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1692,23: (
 1692,24: const
 1692,30: char
 1692,35: *
 1692,37: __name
 1692,43: VARIABLE
 1692,43: ,
 1693,10: char
 1693,15: *
 1693,17: __resolved
 1693,27: VARIABLE
 1693,27: )
 
186 const 
 1692,24: const
 
103 char 
 1692,30: char
 
298 * option_type_qualifier_list option_pointer 
 1692,35: *
 
386 NAME VARIABLE 
 1692,37: __name
 1692,43: VARIABLE
 
65 VARIABLE 
 1692,43: VARIABLE
 
300 , parameter_declaration 
 1692,43: ,
 1693,10: char
 1693,15: *
 1693,17: __resolved
 1693,27: VARIABLE
 
391 char 
 1693,10: char
 
298 * option_type_qualifier_list option_pointer 
 1693,15: *
 
386 NAME VARIABLE 
 1693,17: __resolved
 1693,27: VARIABLE
 
65 VARIABLE 
 1693,27: VARIABLE
 
187 ) 
 1693,27: )
 
60 ; 
 1693,30: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1700,1: typedef
 1700,9: int
 
54 int 
 1700,9: int
 
6 ( save_context declarator ) 
 1700,13: (
 1700,14: *
 1700,15: __compar_fn_t
 1700,28: VARIABLE
 1700,28: )
 
115 * option_type_qualifier_list option_pointer 
 1700,14: *
 
64 NAME VARIABLE 
 1700,15: __compar_fn_t
 1700,28: VARIABLE
 
65 VARIABLE 
 1700,28: VARIABLE
 
191 ) 
 1700,28: )
 
63 ( scoped_parameter_type_list ) 
 1700,30: (
 1700,31: const
 1700,37: void
 1700,42: *
 1700,43: ,
 1700,45: const
 1700,51: void
 1700,56: *
 1700,57: )
 
186 const 
 1700,31: const
 
103 void 
 1700,37: void
 
298 * option_type_qualifier_list option_pointer 
 1700,42: *
 
300 , parameter_declaration 
 1700,43: ,
 1700,45: const
 1700,51: void
 1700,56: *
 
391 const 
 1700,45: const
 
103 void 
 1700,51: void
 
298 * option_type_qualifier_list option_pointer 
 1700,56: *
 
187 ) 
 1700,57: )
 
70 ; 
 1700,58: ;
 
23 extern 
 1702,1: extern
 
8 void 
 1702,8: void
 
5 * option_type_qualifier_list option_pointer 
 1702,13: *
 
64 NAME VARIABLE 
 1702,14: bsearch
 1702,21: VARIABLE
 
65 VARIABLE 
 1702,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1702,22: (
 1702,23: const
 1702,29: void
 1702,34: *
 1702,35: __key
 1702,40: VARIABLE
 1702,40: ,
 1702,42: const
 1702,48: void
 1702,53: *
 1702,54: __base
 1702,60: VARIABLE
 1702,60: ,
 1703,9: size_t
 1703,15: TYPE
 1703,16: __nmemb
 1703,23: VARIABLE
 1703,23: ,
 1703,25: size_t
 1703,31: TYPE
 1703,32: __size
 1703,38: VARIABLE
 1703,38: ,
 1703,40: __compar_fn_t
 1703,53: TYPE
 1703,54: __compar
 1703,62: VARIABLE
 1703,62: )
 
186 const 
 1702,23: const
 
103 void 
 1702,29: void
 
298 * option_type_qualifier_list option_pointer 
 1702,34: *
 
386 NAME VARIABLE 
 1702,35: __key
 1702,40: VARIABLE
 
65 VARIABLE 
 1702,40: VARIABLE
 
300 , parameter_declaration 
 1702,40: ,
 1702,42: const
 1702,48: void
 1702,53: *
 1702,54: __base
 1702,60: VARIABLE
 
391 const 
 1702,42: const
 
103 void 
 1702,48: void
 
298 * option_type_qualifier_list option_pointer 
 1702,53: *
 
386 NAME VARIABLE 
 1702,54: __base
 1702,60: VARIABLE
 
65 VARIABLE 
 1702,60: VARIABLE
 
300 , parameter_declaration 
 1702,60: ,
 1703,9: size_t
 1703,15: TYPE
 1703,16: __nmemb
 1703,23: VARIABLE
 
391 NAME TYPE 
 1703,9: size_t
 1703,15: TYPE
 
26 TYPE 
 1703,15: TYPE
 
298 NAME VARIABLE 
 1703,16: __nmemb
 1703,23: VARIABLE
 
65 VARIABLE 
 1703,23: VARIABLE
 
300 , parameter_declaration 
 1703,23: ,
 1703,25: size_t
 1703,31: TYPE
 1703,32: __size
 1703,38: VARIABLE
 
391 NAME TYPE 
 1703,25: size_t
 1703,31: TYPE
 
26 TYPE 
 1703,31: TYPE
 
298 NAME VARIABLE 
 1703,32: __size
 1703,38: VARIABLE
 
65 VARIABLE 
 1703,38: VARIABLE
 
300 , parameter_declaration 
 1703,38: ,
 1703,40: __compar_fn_t
 1703,53: TYPE
 1703,54: __compar
 1703,62: VARIABLE
 
391 NAME TYPE 
 1703,40: __compar_fn_t
 1703,53: TYPE
 
26 TYPE 
 1703,53: TYPE
 
298 NAME VARIABLE 
 1703,54: __compar
 1703,62: VARIABLE
 
65 VARIABLE 
 1703,62: VARIABLE
 
187 ) 
 1703,62: )
 
60 ; 
 1704,7: ;
 
23 extern 
 1712,1: extern
 
8 void 
 1712,8: void
 
5 NAME VARIABLE 
 1712,13: qsort
 1712,18: VARIABLE
 
65 VARIABLE 
 1712,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1712,19: (
 1712,20: void
 1712,25: *
 1712,26: __base
 1712,32: VARIABLE
 1712,32: ,
 1712,34: size_t
 1712,40: TYPE
 1712,41: __nmemb
 1712,48: VARIABLE
 1712,48: ,
 1712,50: size_t
 1712,56: TYPE
 1712,57: __size
 1712,63: VARIABLE
 1712,63: ,
 1713,6: __compar_fn_t
 1713,19: TYPE
 1713,20: __compar
 1713,28: VARIABLE
 1713,28: )
 
186 void 
 1712,20: void
 
298 * option_type_qualifier_list option_pointer 
 1712,25: *
 
386 NAME VARIABLE 
 1712,26: __base
 1712,32: VARIABLE
 
65 VARIABLE 
 1712,32: VARIABLE
 
300 , parameter_declaration 
 1712,32: ,
 1712,34: size_t
 1712,40: TYPE
 1712,41: __nmemb
 1712,48: VARIABLE
 
391 NAME TYPE 
 1712,34: size_t
 1712,40: TYPE
 
26 TYPE 
 1712,40: TYPE
 
298 NAME VARIABLE 
 1712,41: __nmemb
 1712,48: VARIABLE
 
65 VARIABLE 
 1712,48: VARIABLE
 
300 , parameter_declaration 
 1712,48: ,
 1712,50: size_t
 1712,56: TYPE
 1712,57: __size
 1712,63: VARIABLE
 
391 NAME TYPE 
 1712,50: size_t
 1712,56: TYPE
 
26 TYPE 
 1712,56: TYPE
 
298 NAME VARIABLE 
 1712,57: __size
 1712,63: VARIABLE
 
65 VARIABLE 
 1712,63: VARIABLE
 
300 , parameter_declaration 
 1712,63: ,
 1713,6: __compar_fn_t
 1713,19: TYPE
 1713,20: __compar
 1713,28: VARIABLE
 
391 NAME TYPE 
 1713,6: __compar_fn_t
 1713,19: TYPE
 
26 TYPE 
 1713,19: TYPE
 
298 NAME VARIABLE 
 1713,20: __compar
 1713,28: VARIABLE
 
65 VARIABLE 
 1713,28: VARIABLE
 
187 ) 
 1713,28: )
 
60 ; 
 1713,30: ;
 
23 extern 
 1715,1: extern
 
8 int 
 1715,8: int
 
5 NAME VARIABLE 
 1715,12: abs
 1715,15: VARIABLE
 
65 VARIABLE 
 1715,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1715,16: (
 1715,17: int
 1715,21: __x
 1715,24: VARIABLE
 1715,24: )
 
186 int 
 1715,17: int
 
298 NAME VARIABLE 
 1715,21: __x
 1715,24: VARIABLE
 
65 VARIABLE 
 1715,24: VARIABLE
 
187 ) 
 1715,24: )
 
60 ; 
 1715,28: ;
 
23 extern 
 1716,1: extern
 
8 long 
 1716,8: long
 
17 int 
 1716,13: int
 
5 NAME VARIABLE 
 1716,17: labs
 1716,21: VARIABLE
 
65 VARIABLE 
 1716,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1716,22: (
 1716,23: long
 1716,28: int
 1716,32: __x
 1716,35: VARIABLE
 1716,35: )
 
186 long 
 1716,23: long
 
106 int 
 1716,28: int
 
298 NAME VARIABLE 
 1716,32: __x
 1716,35: VARIABLE
 
65 VARIABLE 
 1716,35: VARIABLE
 
187 ) 
 1716,35: )
 
60 ; 
 1716,39: ;
 
23 extern 
 1719,2: extern
 
8 long 
 1719,9: long
 
17 long 
 1719,14: long
 
17 int 
 1719,19: int
 
5 NAME VARIABLE 
 1719,23: llabs
 1719,28: VARIABLE
 
65 VARIABLE 
 1719,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1719,29: (
 1719,30: long
 1719,35: long
 1719,40: int
 1719,44: __x
 1719,47: VARIABLE
 1719,47: )
 
186 long 
 1719,30: long
 
106 long 
 1719,35: long
 
106 int 
 1719,40: int
 
298 NAME VARIABLE 
 1719,44: __x
 1719,47: VARIABLE
 
65 VARIABLE 
 1719,47: VARIABLE
 
187 ) 
 1719,47: )
 
60 ; 
 1720,8: ;
 
23 extern 
 1727,1: extern
 
8 NAME TYPE 
 1727,8: div_t
 1727,13: TYPE
 
26 TYPE 
 1727,13: TYPE
 
5 NAME VARIABLE 
 1727,14: div
 1727,17: VARIABLE
 
65 VARIABLE 
 1727,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1727,18: (
 1727,19: int
 1727,23: __numer
 1727,30: VARIABLE
 1727,30: ,
 1727,32: int
 1727,36: __denom
 1727,43: VARIABLE
 1727,43: )
 
186 int 
 1727,19: int
 
298 NAME VARIABLE 
 1727,23: __numer
 1727,30: VARIABLE
 
65 VARIABLE 
 1727,30: VARIABLE
 
300 , parameter_declaration 
 1727,30: ,
 1727,32: int
 1727,36: __denom
 1727,43: VARIABLE
 
391 int 
 1727,32: int
 
298 NAME VARIABLE 
 1727,36: __denom
 1727,43: VARIABLE
 
65 VARIABLE 
 1727,43: VARIABLE
 
187 ) 
 1727,43: )
 
60 ; 
 1728,8: ;
 
23 extern 
 1729,1: extern
 
8 NAME TYPE 
 1729,8: ldiv_t
 1729,14: TYPE
 
26 TYPE 
 1729,14: TYPE
 
5 NAME VARIABLE 
 1729,15: ldiv
 1729,19: VARIABLE
 
65 VARIABLE 
 1729,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1729,20: (
 1729,21: long
 1729,26: int
 1729,30: __numer
 1729,37: VARIABLE
 1729,37: ,
 1729,39: long
 1729,44: int
 1729,48: __denom
 1729,55: VARIABLE
 1729,55: )
 
186 long 
 1729,21: long
 
106 int 
 1729,26: int
 
298 NAME VARIABLE 
 1729,30: __numer
 1729,37: VARIABLE
 
65 VARIABLE 
 1729,37: VARIABLE
 
300 , parameter_declaration 
 1729,37: ,
 1729,39: long
 1729,44: int
 1729,48: __denom
 1729,55: VARIABLE
 
391 long 
 1729,39: long
 
106 int 
 1729,44: int
 
298 NAME VARIABLE 
 1729,48: __denom
 1729,55: VARIABLE
 
65 VARIABLE 
 1729,55: VARIABLE
 
187 ) 
 1729,55: )
 
60 ; 
 1730,8: ;
 
23 extern 
 1733,2: extern
 
8 NAME TYPE 
 1733,9: lldiv_t
 1733,16: TYPE
 
26 TYPE 
 1733,16: TYPE
 
5 NAME VARIABLE 
 1733,17: lldiv
 1733,22: VARIABLE
 
65 VARIABLE 
 1733,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1733,23: (
 1733,24: long
 1733,29: long
 1733,34: int
 1733,38: __numer
 1733,45: VARIABLE
 1733,45: ,
 1734,9: long
 1734,14: long
 1734,19: int
 1734,23: __denom
 1734,30: VARIABLE
 1734,30: )
 
186 long 
 1733,24: long
 
106 long 
 1733,29: long
 
106 int 
 1733,34: int
 
298 NAME VARIABLE 
 1733,38: __numer
 1733,45: VARIABLE
 
65 VARIABLE 
 1733,45: VARIABLE
 
300 , parameter_declaration 
 1733,45: ,
 1734,9: long
 1734,14: long
 1734,19: int
 1734,23: __denom
 1734,30: VARIABLE
 
391 long 
 1734,9: long
 
106 long 
 1734,14: long
 
106 int 
 1734,19: int
 
298 NAME VARIABLE 
 1734,23: __denom
 1734,30: VARIABLE
 
65 VARIABLE 
 1734,30: VARIABLE
 
187 ) 
 1734,30: )
 
60 ; 
 1735,8: ;
 
23 extern 
 1737,1: extern
 
8 char 
 1737,8: char
 
5 * option_type_qualifier_list option_pointer 
 1737,13: *
 
64 NAME VARIABLE 
 1737,14: ecvt
 1737,18: VARIABLE
 
65 VARIABLE 
 1737,18: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1737,19: (
 1737,20: double
 1737,27: __value
 1737,34: VARIABLE
 1737,34: ,
 1737,36: int
 1737,40: __ndigit
 1737,48: VARIABLE
 1737,48: ,
 1737,50: int
 1737,54: *
 1737,56: __decpt
 1737,63: VARIABLE
 1737,63: ,
 1738,6: int
 1738,10: *
 1738,12: __sign
 1738,18: VARIABLE
 1738,18: )
 
186 double 
 1737,20: double
 
298 NAME VARIABLE 
 1737,27: __value
 1737,34: VARIABLE
 
65 VARIABLE 
 1737,34: VARIABLE
 
300 , parameter_declaration 
 1737,34: ,
 1737,36: int
 1737,40: __ndigit
 1737,48: VARIABLE
 
391 int 
 1737,36: int
 
298 NAME VARIABLE 
 1737,40: __ndigit
 1737,48: VARIABLE
 
65 VARIABLE 
 1737,48: VARIABLE
 
300 , parameter_declaration 
 1737,48: ,
 1737,50: int
 1737,54: *
 1737,56: __decpt
 1737,63: VARIABLE
 
391 int 
 1737,50: int
 
298 * option_type_qualifier_list option_pointer 
 1737,54: *
 
386 NAME VARIABLE 
 1737,56: __decpt
 1737,63: VARIABLE
 
65 VARIABLE 
 1737,63: VARIABLE
 
300 , parameter_declaration 
 1737,63: ,
 1738,6: int
 1738,10: *
 1738,12: __sign
 1738,18: VARIABLE
 
391 int 
 1738,6: int
 
298 * option_type_qualifier_list option_pointer 
 1738,10: *
 
386 NAME VARIABLE 
 1738,12: __sign
 1738,18: VARIABLE
 
65 VARIABLE 
 1738,18: VARIABLE
 
187 ) 
 1738,18: )
 
60 ; 
 1738,22: ;
 
23 extern 
 1743,1: extern
 
8 char 
 1743,8: char
 
5 * option_type_qualifier_list option_pointer 
 1743,13: *
 
64 NAME VARIABLE 
 1743,14: fcvt
 1743,18: VARIABLE
 
65 VARIABLE 
 1743,18: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1743,19: (
 1743,20: double
 1743,27: __value
 1743,34: VARIABLE
 1743,34: ,
 1743,36: int
 1743,40: __ndigit
 1743,48: VARIABLE
 1743,48: ,
 1743,50: int
 1743,54: *
 1743,56: __decpt
 1743,63: VARIABLE
 1743,63: ,
 1744,6: int
 1744,10: *
 1744,12: __sign
 1744,18: VARIABLE
 1744,18: )
 
186 double 
 1743,20: double
 
298 NAME VARIABLE 
 1743,27: __value
 1743,34: VARIABLE
 
65 VARIABLE 
 1743,34: VARIABLE
 
300 , parameter_declaration 
 1743,34: ,
 1743,36: int
 1743,40: __ndigit
 1743,48: VARIABLE
 
391 int 
 1743,36: int
 
298 NAME VARIABLE 
 1743,40: __ndigit
 1743,48: VARIABLE
 
65 VARIABLE 
 1743,48: VARIABLE
 
300 , parameter_declaration 
 1743,48: ,
 1743,50: int
 1743,54: *
 1743,56: __decpt
 1743,63: VARIABLE
 
391 int 
 1743,50: int
 
298 * option_type_qualifier_list option_pointer 
 1743,54: *
 
386 NAME VARIABLE 
 1743,56: __decpt
 1743,63: VARIABLE
 
65 VARIABLE 
 1743,63: VARIABLE
 
300 , parameter_declaration 
 1743,63: ,
 1744,6: int
 1744,10: *
 1744,12: __sign
 1744,18: VARIABLE
 
391 int 
 1744,6: int
 
298 * option_type_qualifier_list option_pointer 
 1744,10: *
 
386 NAME VARIABLE 
 1744,12: __sign
 1744,18: VARIABLE
 
65 VARIABLE 
 1744,18: VARIABLE
 
187 ) 
 1744,18: )
 
60 ; 
 1744,22: ;
 
23 extern 
 1749,1: extern
 
8 char 
 1749,8: char
 
5 * option_type_qualifier_list option_pointer 
 1749,13: *
 
64 NAME VARIABLE 
 1749,14: gcvt
 1749,18: VARIABLE
 
65 VARIABLE 
 1749,18: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1749,19: (
 1749,20: double
 1749,27: __value
 1749,34: VARIABLE
 1749,34: ,
 1749,36: int
 1749,40: __ndigit
 1749,48: VARIABLE
 1749,48: ,
 1749,50: char
 1749,55: *
 1749,56: __buf
 1749,61: VARIABLE
 1749,61: )
 
186 double 
 1749,20: double
 
298 NAME VARIABLE 
 1749,27: __value
 1749,34: VARIABLE
 
65 VARIABLE 
 1749,34: VARIABLE
 
300 , parameter_declaration 
 1749,34: ,
 1749,36: int
 1749,40: __ndigit
 1749,48: VARIABLE
 
391 int 
 1749,36: int
 
298 NAME VARIABLE 
 1749,40: __ndigit
 1749,48: VARIABLE
 
65 VARIABLE 
 1749,48: VARIABLE
 
300 , parameter_declaration 
 1749,48: ,
 1749,50: char
 1749,55: *
 1749,56: __buf
 1749,61: VARIABLE
 
391 char 
 1749,50: char
 
298 * option_type_qualifier_list option_pointer 
 1749,55: *
 
386 NAME VARIABLE 
 1749,56: __buf
 1749,61: VARIABLE
 
65 VARIABLE 
 1749,61: VARIABLE
 
187 ) 
 1749,61: )
 
60 ; 
 1750,8: ;
 
23 extern 
 1755,1: extern
 
8 char 
 1755,8: char
 
5 * option_type_qualifier_list option_pointer 
 1755,13: *
 
64 NAME VARIABLE 
 1755,14: qecvt
 1755,19: VARIABLE
 
65 VARIABLE 
 1755,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1755,20: (
 1755,21: long
 1755,26: double
 1755,33: __value
 1755,40: VARIABLE
 1755,40: ,
 1755,42: int
 1755,46: __ndigit
 1755,54: VARIABLE
 1755,54: ,
 1756,7: int
 1756,11: *
 1756,13: __decpt
 1756,20: VARIABLE
 1756,20: ,
 1756,22: int
 1756,26: *
 1756,28: __sign
 1756,34: VARIABLE
 1756,34: )
 
186 long 
 1755,21: long
 
106 double 
 1755,26: double
 
298 NAME VARIABLE 
 1755,33: __value
 1755,40: VARIABLE
 
65 VARIABLE 
 1755,40: VARIABLE
 
300 , parameter_declaration 
 1755,40: ,
 1755,42: int
 1755,46: __ndigit
 1755,54: VARIABLE
 
391 int 
 1755,42: int
 
298 NAME VARIABLE 
 1755,46: __ndigit
 1755,54: VARIABLE
 
65 VARIABLE 
 1755,54: VARIABLE
 
300 , parameter_declaration 
 1755,54: ,
 1756,7: int
 1756,11: *
 1756,13: __decpt
 1756,20: VARIABLE
 
391 int 
 1756,7: int
 
298 * option_type_qualifier_list option_pointer 
 1756,11: *
 
386 NAME VARIABLE 
 1756,13: __decpt
 1756,20: VARIABLE
 
65 VARIABLE 
 1756,20: VARIABLE
 
300 , parameter_declaration 
 1756,20: ,
 1756,22: int
 1756,26: *
 1756,28: __sign
 1756,34: VARIABLE
 
391 int 
 1756,22: int
 
298 * option_type_qualifier_list option_pointer 
 1756,26: *
 
386 NAME VARIABLE 
 1756,28: __sign
 1756,34: VARIABLE
 
65 VARIABLE 
 1756,34: VARIABLE
 
187 ) 
 1756,34: )
 
60 ; 
 1757,8: ;
 
23 extern 
 1758,1: extern
 
8 char 
 1758,8: char
 
5 * option_type_qualifier_list option_pointer 
 1758,13: *
 
64 NAME VARIABLE 
 1758,14: qfcvt
 1758,19: VARIABLE
 
65 VARIABLE 
 1758,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1758,20: (
 1758,21: long
 1758,26: double
 1758,33: __value
 1758,40: VARIABLE
 1758,40: ,
 1758,42: int
 1758,46: __ndigit
 1758,54: VARIABLE
 1758,54: ,
 1759,7: int
 1759,11: *
 1759,13: __decpt
 1759,20: VARIABLE
 1759,20: ,
 1759,22: int
 1759,26: *
 1759,28: __sign
 1759,34: VARIABLE
 1759,34: )
 
186 long 
 1758,21: long
 
106 double 
 1758,26: double
 
298 NAME VARIABLE 
 1758,33: __value
 1758,40: VARIABLE
 
65 VARIABLE 
 1758,40: VARIABLE
 
300 , parameter_declaration 
 1758,40: ,
 1758,42: int
 1758,46: __ndigit
 1758,54: VARIABLE
 
391 int 
 1758,42: int
 
298 NAME VARIABLE 
 1758,46: __ndigit
 1758,54: VARIABLE
 
65 VARIABLE 
 1758,54: VARIABLE
 
300 , parameter_declaration 
 1758,54: ,
 1759,7: int
 1759,11: *
 1759,13: __decpt
 1759,20: VARIABLE
 
391 int 
 1759,7: int
 
298 * option_type_qualifier_list option_pointer 
 1759,11: *
 
386 NAME VARIABLE 
 1759,13: __decpt
 1759,20: VARIABLE
 
65 VARIABLE 
 1759,20: VARIABLE
 
300 , parameter_declaration 
 1759,20: ,
 1759,22: int
 1759,26: *
 1759,28: __sign
 1759,34: VARIABLE
 
391 int 
 1759,22: int
 
298 * option_type_qualifier_list option_pointer 
 1759,26: *
 
386 NAME VARIABLE 
 1759,28: __sign
 1759,34: VARIABLE
 
65 VARIABLE 
 1759,34: VARIABLE
 
187 ) 
 1759,34: )
 
60 ; 
 1760,8: ;
 
23 extern 
 1761,1: extern
 
8 char 
 1761,8: char
 
5 * option_type_qualifier_list option_pointer 
 1761,13: *
 
64 NAME VARIABLE 
 1761,14: qgcvt
 1761,19: VARIABLE
 
65 VARIABLE 
 1761,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1761,20: (
 1761,21: long
 1761,26: double
 1761,33: __value
 1761,40: VARIABLE
 1761,40: ,
 1761,42: int
 1761,46: __ndigit
 1761,54: VARIABLE
 1761,54: ,
 1761,56: char
 1761,61: *
 1761,62: __buf
 1761,67: VARIABLE
 1761,67: )
 
186 long 
 1761,21: long
 
106 double 
 1761,26: double
 
298 NAME VARIABLE 
 1761,33: __value
 1761,40: VARIABLE
 
65 VARIABLE 
 1761,40: VARIABLE
 
300 , parameter_declaration 
 1761,40: ,
 1761,42: int
 1761,46: __ndigit
 1761,54: VARIABLE
 
391 int 
 1761,42: int
 
298 NAME VARIABLE 
 1761,46: __ndigit
 1761,54: VARIABLE
 
65 VARIABLE 
 1761,54: VARIABLE
 
300 , parameter_declaration 
 1761,54: ,
 1761,56: char
 1761,61: *
 1761,62: __buf
 1761,67: VARIABLE
 
391 char 
 1761,56: char
 
298 * option_type_qualifier_list option_pointer 
 1761,61: *
 
386 NAME VARIABLE 
 1761,62: __buf
 1761,67: VARIABLE
 
65 VARIABLE 
 1761,67: VARIABLE
 
187 ) 
 1761,67: )
 
60 ; 
 1762,8: ;
 
23 extern 
 1767,1: extern
 
8 int 
 1767,8: int
 
5 NAME VARIABLE 
 1767,12: ecvt_r
 1767,18: VARIABLE
 
65 VARIABLE 
 1767,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1767,19: (
 1767,20: double
 1767,27: __value
 1767,34: VARIABLE
 1767,34: ,
 1767,36: int
 1767,40: __ndigit
 1767,48: VARIABLE
 1767,48: ,
 1767,50: int
 1767,54: *
 1767,56: __decpt
 1767,63: VARIABLE
 1767,63: ,
 1768,6: int
 1768,10: *
 1768,12: __sign
 1768,18: VARIABLE
 1768,18: ,
 1768,20: char
 1768,25: *
 1768,27: __buf
 1768,32: VARIABLE
 1768,32: ,
 1769,6: size_t
 1769,12: TYPE
 1769,13: __len
 1769,18: VARIABLE
 1769,18: )
 
186 double 
 1767,20: double
 
298 NAME VARIABLE 
 1767,27: __value
 1767,34: VARIABLE
 
65 VARIABLE 
 1767,34: VARIABLE
 
300 , parameter_declaration 
 1767,34: ,
 1767,36: int
 1767,40: __ndigit
 1767,48: VARIABLE
 
391 int 
 1767,36: int
 
298 NAME VARIABLE 
 1767,40: __ndigit
 1767,48: VARIABLE
 
65 VARIABLE 
 1767,48: VARIABLE
 
300 , parameter_declaration 
 1767,48: ,
 1767,50: int
 1767,54: *
 1767,56: __decpt
 1767,63: VARIABLE
 
391 int 
 1767,50: int
 
298 * option_type_qualifier_list option_pointer 
 1767,54: *
 
386 NAME VARIABLE 
 1767,56: __decpt
 1767,63: VARIABLE
 
65 VARIABLE 
 1767,63: VARIABLE
 
300 , parameter_declaration 
 1767,63: ,
 1768,6: int
 1768,10: *
 1768,12: __sign
 1768,18: VARIABLE
 
391 int 
 1768,6: int
 
298 * option_type_qualifier_list option_pointer 
 1768,10: *
 
386 NAME VARIABLE 
 1768,12: __sign
 1768,18: VARIABLE
 
65 VARIABLE 
 1768,18: VARIABLE
 
300 , parameter_declaration 
 1768,18: ,
 1768,20: char
 1768,25: *
 1768,27: __buf
 1768,32: VARIABLE
 
391 char 
 1768,20: char
 
298 * option_type_qualifier_list option_pointer 
 1768,25: *
 
386 NAME VARIABLE 
 1768,27: __buf
 1768,32: VARIABLE
 
65 VARIABLE 
 1768,32: VARIABLE
 
300 , parameter_declaration 
 1768,32: ,
 1769,6: size_t
 1769,12: TYPE
 1769,13: __len
 1769,18: VARIABLE
 
391 NAME TYPE 
 1769,6: size_t
 1769,12: TYPE
 
26 TYPE 
 1769,12: TYPE
 
298 NAME VARIABLE 
 1769,13: __len
 1769,18: VARIABLE
 
65 VARIABLE 
 1769,18: VARIABLE
 
187 ) 
 1769,18: )
 
60 ; 
 1769,21: ;
 
23 extern 
 1770,1: extern
 
8 int 
 1770,8: int
 
5 NAME VARIABLE 
 1770,12: fcvt_r
 1770,18: VARIABLE
 
65 VARIABLE 
 1770,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1770,19: (
 1770,20: double
 1770,27: __value
 1770,34: VARIABLE
 1770,34: ,
 1770,36: int
 1770,40: __ndigit
 1770,48: VARIABLE
 1770,48: ,
 1770,50: int
 1770,54: *
 1770,56: __decpt
 1770,63: VARIABLE
 1770,63: ,
 1771,6: int
 1771,10: *
 1771,12: __sign
 1771,18: VARIABLE
 1771,18: ,
 1771,20: char
 1771,25: *
 1771,27: __buf
 1771,32: VARIABLE
 1771,32: ,
 1772,6: size_t
 1772,12: TYPE
 1772,13: __len
 1772,18: VARIABLE
 1772,18: )
 
186 double 
 1770,20: double
 
298 NAME VARIABLE 
 1770,27: __value
 1770,34: VARIABLE
 
65 VARIABLE 
 1770,34: VARIABLE
 
300 , parameter_declaration 
 1770,34: ,
 1770,36: int
 1770,40: __ndigit
 1770,48: VARIABLE
 
391 int 
 1770,36: int
 
298 NAME VARIABLE 
 1770,40: __ndigit
 1770,48: VARIABLE
 
65 VARIABLE 
 1770,48: VARIABLE
 
300 , parameter_declaration 
 1770,48: ,
 1770,50: int
 1770,54: *
 1770,56: __decpt
 1770,63: VARIABLE
 
391 int 
 1770,50: int
 
298 * option_type_qualifier_list option_pointer 
 1770,54: *
 
386 NAME VARIABLE 
 1770,56: __decpt
 1770,63: VARIABLE
 
65 VARIABLE 
 1770,63: VARIABLE
 
300 , parameter_declaration 
 1770,63: ,
 1771,6: int
 1771,10: *
 1771,12: __sign
 1771,18: VARIABLE
 
391 int 
 1771,6: int
 
298 * option_type_qualifier_list option_pointer 
 1771,10: *
 
386 NAME VARIABLE 
 1771,12: __sign
 1771,18: VARIABLE
 
65 VARIABLE 
 1771,18: VARIABLE
 
300 , parameter_declaration 
 1771,18: ,
 1771,20: char
 1771,25: *
 1771,27: __buf
 1771,32: VARIABLE
 
391 char 
 1771,20: char
 
298 * option_type_qualifier_list option_pointer 
 1771,25: *
 
386 NAME VARIABLE 
 1771,27: __buf
 1771,32: VARIABLE
 
65 VARIABLE 
 1771,32: VARIABLE
 
300 , parameter_declaration 
 1771,32: ,
 1772,6: size_t
 1772,12: TYPE
 1772,13: __len
 1772,18: VARIABLE
 
391 NAME TYPE 
 1772,6: size_t
 1772,12: TYPE
 
26 TYPE 
 1772,12: TYPE
 
298 NAME VARIABLE 
 1772,13: __len
 1772,18: VARIABLE
 
65 VARIABLE 
 1772,18: VARIABLE
 
187 ) 
 1772,18: )
 
60 ; 
 1772,21: ;
 
23 extern 
 1774,1: extern
 
8 int 
 1774,8: int
 
5 NAME VARIABLE 
 1774,12: qecvt_r
 1774,19: VARIABLE
 
65 VARIABLE 
 1774,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1774,20: (
 1774,21: long
 1774,26: double
 1774,33: __value
 1774,40: VARIABLE
 1774,40: ,
 1774,42: int
 1774,46: __ndigit
 1774,54: VARIABLE
 1774,54: ,
 1775,7: int
 1775,11: *
 1775,13: __decpt
 1775,20: VARIABLE
 1775,20: ,
 1775,22: int
 1775,26: *
 1775,28: __sign
 1775,34: VARIABLE
 1775,34: ,
 1776,7: char
 1776,12: *
 1776,14: __buf
 1776,19: VARIABLE
 1776,19: ,
 1776,21: size_t
 1776,27: TYPE
 1776,28: __len
 1776,33: VARIABLE
 1776,33: )
 
186 long 
 1774,21: long
 
106 double 
 1774,26: double
 
298 NAME VARIABLE 
 1774,33: __value
 1774,40: VARIABLE
 
65 VARIABLE 
 1774,40: VARIABLE
 
300 , parameter_declaration 
 1774,40: ,
 1774,42: int
 1774,46: __ndigit
 1774,54: VARIABLE
 
391 int 
 1774,42: int
 
298 NAME VARIABLE 
 1774,46: __ndigit
 1774,54: VARIABLE
 
65 VARIABLE 
 1774,54: VARIABLE
 
300 , parameter_declaration 
 1774,54: ,
 1775,7: int
 1775,11: *
 1775,13: __decpt
 1775,20: VARIABLE
 
391 int 
 1775,7: int
 
298 * option_type_qualifier_list option_pointer 
 1775,11: *
 
386 NAME VARIABLE 
 1775,13: __decpt
 1775,20: VARIABLE
 
65 VARIABLE 
 1775,20: VARIABLE
 
300 , parameter_declaration 
 1775,20: ,
 1775,22: int
 1775,26: *
 1775,28: __sign
 1775,34: VARIABLE
 
391 int 
 1775,22: int
 
298 * option_type_qualifier_list option_pointer 
 1775,26: *
 
386 NAME VARIABLE 
 1775,28: __sign
 1775,34: VARIABLE
 
65 VARIABLE 
 1775,34: VARIABLE
 
300 , parameter_declaration 
 1775,34: ,
 1776,7: char
 1776,12: *
 1776,14: __buf
 1776,19: VARIABLE
 
391 char 
 1776,7: char
 
298 * option_type_qualifier_list option_pointer 
 1776,12: *
 
386 NAME VARIABLE 
 1776,14: __buf
 1776,19: VARIABLE
 
65 VARIABLE 
 1776,19: VARIABLE
 
300 , parameter_declaration 
 1776,19: ,
 1776,21: size_t
 1776,27: TYPE
 1776,28: __len
 1776,33: VARIABLE
 
391 NAME TYPE 
 1776,21: size_t
 1776,27: TYPE
 
26 TYPE 
 1776,27: TYPE
 
298 NAME VARIABLE 
 1776,28: __len
 1776,33: VARIABLE
 
65 VARIABLE 
 1776,33: VARIABLE
 
187 ) 
 1776,33: )
 
60 ; 
 1777,7: ;
 
23 extern 
 1778,1: extern
 
8 int 
 1778,8: int
 
5 NAME VARIABLE 
 1778,12: qfcvt_r
 1778,19: VARIABLE
 
65 VARIABLE 
 1778,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1778,20: (
 1778,21: long
 1778,26: double
 1778,33: __value
 1778,40: VARIABLE
 1778,40: ,
 1778,42: int
 1778,46: __ndigit
 1778,54: VARIABLE
 1778,54: ,
 1779,7: int
 1779,11: *
 1779,13: __decpt
 1779,20: VARIABLE
 1779,20: ,
 1779,22: int
 1779,26: *
 1779,28: __sign
 1779,34: VARIABLE
 1779,34: ,
 1780,7: char
 1780,12: *
 1780,14: __buf
 1780,19: VARIABLE
 1780,19: ,
 1780,21: size_t
 1780,27: TYPE
 1780,28: __len
 1780,33: VARIABLE
 1780,33: )
 
186 long 
 1778,21: long
 
106 double 
 1778,26: double
 
298 NAME VARIABLE 
 1778,33: __value
 1778,40: VARIABLE
 
65 VARIABLE 
 1778,40: VARIABLE
 
300 , parameter_declaration 
 1778,40: ,
 1778,42: int
 1778,46: __ndigit
 1778,54: VARIABLE
 
391 int 
 1778,42: int
 
298 NAME VARIABLE 
 1778,46: __ndigit
 1778,54: VARIABLE
 
65 VARIABLE 
 1778,54: VARIABLE
 
300 , parameter_declaration 
 1778,54: ,
 1779,7: int
 1779,11: *
 1779,13: __decpt
 1779,20: VARIABLE
 
391 int 
 1779,7: int
 
298 * option_type_qualifier_list option_pointer 
 1779,11: *
 
386 NAME VARIABLE 
 1779,13: __decpt
 1779,20: VARIABLE
 
65 VARIABLE 
 1779,20: VARIABLE
 
300 , parameter_declaration 
 1779,20: ,
 1779,22: int
 1779,26: *
 1779,28: __sign
 1779,34: VARIABLE
 
391 int 
 1779,22: int
 
298 * option_type_qualifier_list option_pointer 
 1779,26: *
 
386 NAME VARIABLE 
 1779,28: __sign
 1779,34: VARIABLE
 
65 VARIABLE 
 1779,34: VARIABLE
 
300 , parameter_declaration 
 1779,34: ,
 1780,7: char
 1780,12: *
 1780,14: __buf
 1780,19: VARIABLE
 
391 char 
 1780,7: char
 
298 * option_type_qualifier_list option_pointer 
 1780,12: *
 
386 NAME VARIABLE 
 1780,14: __buf
 1780,19: VARIABLE
 
65 VARIABLE 
 1780,19: VARIABLE
 
300 , parameter_declaration 
 1780,19: ,
 1780,21: size_t
 1780,27: TYPE
 1780,28: __len
 1780,33: VARIABLE
 
391 NAME TYPE 
 1780,21: size_t
 1780,27: TYPE
 
26 TYPE 
 1780,27: TYPE
 
298 NAME VARIABLE 
 1780,28: __len
 1780,33: VARIABLE
 
65 VARIABLE 
 1780,33: VARIABLE
 
187 ) 
 1780,33: )
 
60 ; 
 1781,7: ;
 
23 extern 
 1787,1: extern
 
8 int 
 1787,8: int
 
5 NAME VARIABLE 
 1787,12: mblen
 1787,17: VARIABLE
 
65 VARIABLE 
 1787,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1787,18: (
 1787,19: const
 1787,25: char
 1787,30: *
 1787,31: __s
 1787,34: VARIABLE
 1787,34: ,
 1787,36: size_t
 1787,42: TYPE
 1787,43: __n
 1787,46: VARIABLE
 1787,46: )
 
186 const 
 1787,19: const
 
103 char 
 1787,25: char
 
298 * option_type_qualifier_list option_pointer 
 1787,30: *
 
386 NAME VARIABLE 
 1787,31: __s
 1787,34: VARIABLE
 
65 VARIABLE 
 1787,34: VARIABLE
 
300 , parameter_declaration 
 1787,34: ,
 1787,36: size_t
 1787,42: TYPE
 1787,43: __n
 1787,46: VARIABLE
 
391 NAME TYPE 
 1787,36: size_t
 1787,42: TYPE
 
26 TYPE 
 1787,42: TYPE
 
298 NAME VARIABLE 
 1787,43: __n
 1787,46: VARIABLE
 
65 VARIABLE 
 1787,46: VARIABLE
 
187 ) 
 1787,46: )
 
60 ; 
 1787,48: ;
 
23 extern 
 1790,1: extern
 
8 int 
 1790,8: int
 
5 NAME VARIABLE 
 1790,12: mbtowc
 1790,18: VARIABLE
 
65 VARIABLE 
 1790,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1790,19: (
 1790,20: wchar_t
 1790,27: TYPE
 1790,28: *
 1790,30: __pwc
 1790,35: VARIABLE
 1790,35: ,
 1791,6: const
 1791,12: char
 1791,17: *
 1791,19: __s
 1791,22: VARIABLE
 1791,22: ,
 1791,24: size_t
 1791,30: TYPE
 1791,31: __n
 1791,34: VARIABLE
 1791,34: )
 
186 NAME TYPE 
 1790,20: wchar_t
 1790,27: TYPE
 
65 TYPE 
 1790,27: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1790,28: *
 
386 NAME VARIABLE 
 1790,30: __pwc
 1790,35: VARIABLE
 
65 VARIABLE 
 1790,35: VARIABLE
 
300 , parameter_declaration 
 1790,35: ,
 1791,6: const
 1791,12: char
 1791,17: *
 1791,19: __s
 1791,22: VARIABLE
 
391 const 
 1791,6: const
 
103 char 
 1791,12: char
 
298 * option_type_qualifier_list option_pointer 
 1791,17: *
 
386 NAME VARIABLE 
 1791,19: __s
 1791,22: VARIABLE
 
65 VARIABLE 
 1791,22: VARIABLE
 
300 , parameter_declaration 
 1791,22: ,
 1791,24: size_t
 1791,30: TYPE
 1791,31: __n
 1791,34: VARIABLE
 
391 NAME TYPE 
 1791,24: size_t
 1791,30: TYPE
 
26 TYPE 
 1791,30: TYPE
 
298 NAME VARIABLE 
 1791,31: __n
 1791,34: VARIABLE
 
65 VARIABLE 
 1791,34: VARIABLE
 
187 ) 
 1791,34: )
 
60 ; 
 1791,36: ;
 
23 extern 
 1794,1: extern
 
8 int 
 1794,8: int
 
5 NAME VARIABLE 
 1794,12: wctomb
 1794,18: VARIABLE
 
65 VARIABLE 
 1794,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1794,19: (
 1794,20: char
 1794,25: *
 1794,26: __s
 1794,29: VARIABLE
 1794,29: ,
 1794,31: wchar_t
 1794,38: TYPE
 1794,39: __wchar
 1794,46: VARIABLE
 1794,46: )
 
186 char 
 1794,20: char
 
298 * option_type_qualifier_list option_pointer 
 1794,25: *
 
386 NAME VARIABLE 
 1794,26: __s
 1794,29: VARIABLE
 
65 VARIABLE 
 1794,29: VARIABLE
 
300 , parameter_declaration 
 1794,29: ,
 1794,31: wchar_t
 1794,38: TYPE
 1794,39: __wchar
 1794,46: VARIABLE
 
391 NAME TYPE 
 1794,31: wchar_t
 1794,38: TYPE
 
26 TYPE 
 1794,38: TYPE
 
298 NAME VARIABLE 
 1794,39: __wchar
 1794,46: VARIABLE
 
65 VARIABLE 
 1794,46: VARIABLE
 
187 ) 
 1794,46: )
 
60 ; 
 1794,48: ;
 
23 extern 
 1798,1: extern
 
8 NAME TYPE 
 1798,8: size_t
 1798,14: TYPE
 
26 TYPE 
 1798,14: TYPE
 
5 NAME VARIABLE 
 1798,15: mbstowcs
 1798,23: VARIABLE
 
65 VARIABLE 
 1798,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1798,24: (
 1798,25: wchar_t
 1798,32: TYPE
 1798,33: *
 1798,35: __pwcs
 1798,41: VARIABLE
 1798,41: ,
 1799,4: const
 1799,10: char
 1799,15: *
 1799,17: __s
 1799,20: VARIABLE
 1799,20: ,
 1799,22: size_t
 1799,28: TYPE
 1799,29: __n
 1799,32: VARIABLE
 1799,32: )
 
186 NAME TYPE 
 1798,25: wchar_t
 1798,32: TYPE
 
65 TYPE 
 1798,32: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1798,33: *
 
386 NAME VARIABLE 
 1798,35: __pwcs
 1798,41: VARIABLE
 
65 VARIABLE 
 1798,41: VARIABLE
 
300 , parameter_declaration 
 1798,41: ,
 1799,4: const
 1799,10: char
 1799,15: *
 1799,17: __s
 1799,20: VARIABLE
 
391 const 
 1799,4: const
 
103 char 
 1799,10: char
 
298 * option_type_qualifier_list option_pointer 
 1799,15: *
 
386 NAME VARIABLE 
 1799,17: __s
 1799,20: VARIABLE
 
65 VARIABLE 
 1799,20: VARIABLE
 
300 , parameter_declaration 
 1799,20: ,
 1799,22: size_t
 1799,28: TYPE
 1799,29: __n
 1799,32: VARIABLE
 
391 NAME TYPE 
 1799,22: size_t
 1799,28: TYPE
 
26 TYPE 
 1799,28: TYPE
 
298 NAME VARIABLE 
 1799,29: __n
 1799,32: VARIABLE
 
65 VARIABLE 
 1799,32: VARIABLE
 
187 ) 
 1799,32: )
 
60 ; 
 1800,5: ;
 
23 extern 
 1802,1: extern
 
8 NAME TYPE 
 1802,8: size_t
 1802,14: TYPE
 
26 TYPE 
 1802,14: TYPE
 
5 NAME VARIABLE 
 1802,15: wcstombs
 1802,23: VARIABLE
 
65 VARIABLE 
 1802,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1802,24: (
 1802,25: char
 1802,30: *
 1802,32: __s
 1802,35: VARIABLE
 1802,35: ,
 1803,4: const
 1803,10: wchar_t
 1803,17: TYPE
 1803,18: *
 1803,20: __pwcs
 1803,26: VARIABLE
 1803,26: ,
 1803,28: size_t
 1803,34: TYPE
 1803,35: __n
 1803,38: VARIABLE
 1803,38: )
 
186 char 
 1802,25: char
 
298 * option_type_qualifier_list option_pointer 
 1802,30: *
 
386 NAME VARIABLE 
 1802,32: __s
 1802,35: VARIABLE
 
65 VARIABLE 
 1802,35: VARIABLE
 
300 , parameter_declaration 
 1802,35: ,
 1803,4: const
 1803,10: wchar_t
 1803,17: TYPE
 1803,18: *
 1803,20: __pwcs
 1803,26: VARIABLE
 
391 const 
 1803,4: const
 
103 NAME TYPE 
 1803,10: wchar_t
 1803,17: TYPE
 
26 TYPE 
 1803,17: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1803,18: *
 
386 NAME VARIABLE 
 1803,20: __pwcs
 1803,26: VARIABLE
 
65 VARIABLE 
 1803,26: VARIABLE
 
300 , parameter_declaration 
 1803,26: ,
 1803,28: size_t
 1803,34: TYPE
 1803,35: __n
 1803,38: VARIABLE
 
391 NAME TYPE 
 1803,28: size_t
 1803,34: TYPE
 
26 TYPE 
 1803,34: TYPE
 
298 NAME VARIABLE 
 1803,35: __n
 1803,38: VARIABLE
 
65 VARIABLE 
 1803,38: VARIABLE
 
187 ) 
 1803,38: )
 
60 ; 
 1806,3: ;
 
23 extern 
 1813,1: extern
 
8 int 
 1813,8: int
 
5 NAME VARIABLE 
 1813,12: rpmatch
 1813,19: VARIABLE
 
65 VARIABLE 
 1813,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1813,20: (
 1813,21: const
 1813,27: char
 1813,32: *
 1813,33: __response
 1813,43: VARIABLE
 1813,43: )
 
186 const 
 1813,21: const
 
103 char 
 1813,27: char
 
298 * option_type_qualifier_list option_pointer 
 1813,32: *
 
386 NAME VARIABLE 
 1813,33: __response
 1813,43: VARIABLE
 
65 VARIABLE 
 1813,43: VARIABLE
 
187 ) 
 1813,43: )
 
60 ; 
 1813,47: ;
 
23 extern 
 1815,1: extern
 
8 int 
 1815,8: int
 
5 NAME VARIABLE 
 1815,12: getsubopt
 1815,21: VARIABLE
 
65 VARIABLE 
 1815,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1815,22: (
 1815,23: char
 1815,28: *
 1815,29: *
 1815,31: __optionp
 1815,40: VARIABLE
 1815,40: ,
 1816,9: char
 1816,14: *
 1816,15: const
 1816,21: *
 1816,23: __tokens
 1816,31: VARIABLE
 1816,31: ,
 1817,9: char
 1817,14: *
 1817,15: *
 1817,17: __valuep
 1817,25: VARIABLE
 1817,25: )
 
186 char 
 1815,23: char
 
298 * option_type_qualifier_list option_pointer 
 1815,28: *
 1815,29: *
 
116 * option_type_qualifier_list option_pointer 
 1815,29: *
 
386 NAME VARIABLE 
 1815,31: __optionp
 1815,40: VARIABLE
 
65 VARIABLE 
 1815,40: VARIABLE
 
300 , parameter_declaration 
 1815,40: ,
 1816,9: char
 1816,14: *
 1816,15: const
 1816,21: *
 1816,23: __tokens
 1816,31: VARIABLE
 
391 char 
 1816,9: char
 
298 * option_type_qualifier_list option_pointer 
 1816,14: *
 1816,15: const
 1816,21: *
 
116 const 
 1816,15: const
 
116 * option_type_qualifier_list option_pointer 
 1816,21: *
 
386 NAME VARIABLE 
 1816,23: __tokens
 1816,31: VARIABLE
 
65 VARIABLE 
 1816,31: VARIABLE
 
300 , parameter_declaration 
 1816,31: ,
 1817,9: char
 1817,14: *
 1817,15: *
 1817,17: __valuep
 1817,25: VARIABLE
 
391 char 
 1817,9: char
 
298 * option_type_qualifier_list option_pointer 
 1817,14: *
 1817,15: *
 
116 * option_type_qualifier_list option_pointer 
 1817,15: *
 
386 NAME VARIABLE 
 1817,17: __valuep
 1817,25: VARIABLE
 
65 VARIABLE 
 1817,25: VARIABLE
 
187 ) 
 1817,25: )
 
60 ; 
 1818,8: ;
 
23 extern 
 1820,1: extern
 
8 int 
 1820,8: int
 
5 NAME VARIABLE 
 1820,12: getloadavg
 1820,22: VARIABLE
 
65 VARIABLE 
 1820,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1820,23: (
 1820,24: double
 1820,31: __loadavg
 1820,40: VARIABLE
 1820,40: [
 1820,41: ]
 1820,42: ,
 1820,44: int
 1820,48: __nelem
 1820,55: VARIABLE
 1820,55: )
 
186 double 
 1820,24: double
 
298 NAME VARIABLE 
 1820,31: __loadavg
 1820,40: VARIABLE
 
65 VARIABLE 
 1820,40: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1820,40: [
 1820,41: ]
 
305 ] 
 1820,41: ]
 
300 , parameter_declaration 
 1820,42: ,
 1820,44: int
 1820,48: __nelem
 1820,55: VARIABLE
 
391 int 
 1820,44: int
 
298 NAME VARIABLE 
 1820,48: __nelem
 1820,55: VARIABLE
 
65 VARIABLE 
 1820,55: VARIABLE
 
187 ) 
 1820,55: )
 
60 ; 
 1821,7: ;
 
23 enum option_general_identifier { enumerator_list option_comma } 
 1832,1: enum
 1833,1: {
 1834,3: _ISupper
 1834,11: VARIABLE
 1834,12: =
 1834,14: (
 1834,15: (
 1834,16: 0
 1834,17: )
 1834,19: <
 1834,21: 8
 1834,23: ?
 1834,25: (
 1834,26: (
 1834,27: 1
 1834,29: <<
 1834,32: (
 1834,33: 0
 1834,34: )
 1834,35: )
 1834,37: <<
 1834,40: 8
 1834,41: )
 1834,43: :
 1834,45: (
 1834,46: (
 1834,47: 1
 1834,49: <<
 1834,52: (
 1834,53: 0
 1834,54: )
 1834,55: )
 1834,57: >>
 1834,60: 8
 1834,61: )
 1834,62: )
 1834,63: ,
 1835,3: _ISlower
 1835,11: VARIABLE
 1835,12: =
 1835,14: (
 1835,15: (
 1835,16: 1
 1835,17: )
 1835,19: <
 1835,21: 8
 1835,23: ?
 1835,25: (
 1835,26: (
 1835,27: 1
 1835,29: <<
 1835,32: (
 1835,33: 1
 1835,34: )
 1835,35: )
 1835,37: <<
 1835,40: 8
 1835,41: )
 1835,43: :
 1835,45: (
 1835,46: (
 1835,47: 1
 1835,49: <<
 1835,52: (
 1835,53: 1
 1835,54: )
 1835,55: )
 1835,57: >>
 1835,60: 8
 1835,61: )
 1835,62: )
 1835,63: ,
 1836,3: _ISalpha
 1836,11: VARIABLE
 1836,12: =
 1836,14: (
 1836,15: (
 1836,16: 2
 1836,17: )
 1836,19: <
 1836,21: 8
 1836,23: ?
 1836,25: (
 1836,26: (
 1836,27: 1
 1836,29: <<
 1836,32: (
 1836,33: 2
 1836,34: )
 1836,35: )
 1836,37: <<
 1836,40: 8
 1836,41: )
 1836,43: :
 1836,45: (
 1836,46: (
 1836,47: 1
 1836,49: <<
 1836,52: (
 1836,53: 2
 1836,54: )
 1836,55: )
 1836,57: >>
 1836,60: 8
 1836,61: )
 1836,62: )
 1836,63: ,
 1837,3: _ISdigit
 1837,11: VARIABLE
 1837,12: =
 1837,14: (
 1837,15: (
 1837,16: 3
 1837,17: )
 1837,19: <
 1837,21: 8
 1837,23: ?
 1837,25: (
 1837,26: (
 1837,27: 1
 1837,29: <<
 1837,32: (
 1837,33: 3
 1837,34: )
 1837,35: )
 1837,37: <<
 1837,40: 8
 1837,41: )
 1837,43: :
 1837,45: (
 1837,46: (
 1837,47: 1
 1837,49: <<
 1837,52: (
 1837,53: 3
 1837,54: )
 1837,55: )
 1837,57: >>
 1837,60: 8
 1837,61: )
 1837,62: )
 1837,63: ,
 1838,3: _ISxdigit
 1838,12: VARIABLE
 1838,13: =
 1838,15: (
 1838,16: (
 1838,17: 4
 1838,18: )
 1838,20: <
 1838,22: 8
 1838,24: ?
 1838,26: (
 1838,27: (
 1838,28: 1
 1838,30: <<
 1838,33: (
 1838,34: 4
 1838,35: )
 1838,36: )
 1838,38: <<
 1838,41: 8
 1838,42: )
 1838,44: :
 1838,46: (
 1838,47: (
 1838,48: 1
 1838,50: <<
 1838,53: (
 1838,54: 4
 1838,55: )
 1838,56: )
 1838,58: >>
 1838,61: 8
 1838,62: )
 1838,63: )
 1838,64: ,
 1839,3: _ISspace
 1839,11: VARIABLE
 1839,12: =
 1839,14: (
 1839,15: (
 1839,16: 5
 1839,17: )
 1839,19: <
 1839,21: 8
 1839,23: ?
 1839,25: (
 1839,26: (
 1839,27: 1
 1839,29: <<
 1839,32: (
 1839,33: 5
 1839,34: )
 1839,35: )
 1839,37: <<
 1839,40: 8
 1839,41: )
 1839,43: :
 1839,45: (
 1839,46: (
 1839,47: 1
 1839,49: <<
 1839,52: (
 1839,53: 5
 1839,54: )
 1839,55: )
 1839,57: >>
 1839,60: 8
 1839,61: )
 1839,62: )
 1839,63: ,
 1840,3: _ISprint
 1840,11: VARIABLE
 1840,12: =
 1840,14: (
 1840,15: (
 1840,16: 6
 1840,17: )
 1840,19: <
 1840,21: 8
 1840,23: ?
 1840,25: (
 1840,26: (
 1840,27: 1
 1840,29: <<
 1840,32: (
 1840,33: 6
 1840,34: )
 1840,35: )
 1840,37: <<
 1840,40: 8
 1840,41: )
 1840,43: :
 1840,45: (
 1840,46: (
 1840,47: 1
 1840,49: <<
 1840,52: (
 1840,53: 6
 1840,54: )
 1840,55: )
 1840,57: >>
 1840,60: 8
 1840,61: )
 1840,62: )
 1840,63: ,
 1841,3: _ISgraph
 1841,11: VARIABLE
 1841,12: =
 1841,14: (
 1841,15: (
 1841,16: 7
 1841,17: )
 1841,19: <
 1841,21: 8
 1841,23: ?
 1841,25: (
 1841,26: (
 1841,27: 1
 1841,29: <<
 1841,32: (
 1841,33: 7
 1841,34: )
 1841,35: )
 1841,37: <<
 1841,40: 8
 1841,41: )
 1841,43: :
 1841,45: (
 1841,46: (
 1841,47: 1
 1841,49: <<
 1841,52: (
 1841,53: 7
 1841,54: )
 1841,55: )
 1841,57: >>
 1841,60: 8
 1841,61: )
 1841,62: )
 1841,63: ,
 1842,3: _ISblank
 1842,11: VARIABLE
 1842,12: =
 1842,14: (
 1842,15: (
 1842,16: 8
 1842,17: )
 1842,19: <
 1842,21: 8
 1842,23: ?
 1842,25: (
 1842,26: (
 1842,27: 1
 1842,29: <<
 1842,32: (
 1842,33: 8
 1842,34: )
 1842,35: )
 1842,37: <<
 1842,40: 8
 1842,41: )
 1842,43: :
 1842,45: (
 1842,46: (
 1842,47: 1
 1842,49: <<
 1842,52: (
 1842,53: 8
 1842,54: )
 1842,55: )
 1842,57: >>
 1842,60: 8
 1842,61: )
 1842,62: )
 1842,63: ,
 1843,3: _IScntrl
 1843,11: VARIABLE
 1843,12: =
 1843,14: (
 1843,15: (
 1843,16: 9
 1843,17: )
 1843,19: <
 1843,21: 8
 1843,23: ?
 1843,25: (
 1843,26: (
 1843,27: 1
 1843,29: <<
 1843,32: (
 1843,33: 9
 1843,34: )
 1843,35: )
 1843,37: <<
 1843,40: 8
 1843,41: )
 1843,43: :
 1843,45: (
 1843,46: (
 1843,47: 1
 1843,49: <<
 1843,52: (
 1843,53: 9
 1843,54: )
 1843,55: )
 1843,57: >>
 1843,60: 8
 1843,61: )
 1843,62: )
 1843,63: ,
 1844,3: _ISpunct
 1844,11: VARIABLE
 1844,12: =
 1844,14: (
 1844,15: (
 1844,16: 10
 1844,18: )
 1844,20: <
 1844,22: 8
 1844,24: ?
 1844,26: (
 1844,27: (
 1844,28: 1
 1844,30: <<
 1844,33: (
 1844,34: 10
 1844,36: )
 1844,37: )
 1844,39: <<
 1844,42: 8
 1844,43: )
 1844,45: :
 1844,47: (
 1844,48: (
 1844,49: 1
 1844,51: <<
 1844,54: (
 1844,55: 10
 1844,57: )
 1844,58: )
 1844,60: >>
 1844,63: 8
 1844,64: )
 1844,65: )
 1844,66: ,
 1845,3: _ISalnum
 1845,11: VARIABLE
 1845,12: =
 1845,14: (
 1845,15: (
 1845,16: 11
 1845,18: )
 1845,20: <
 1845,22: 8
 1845,24: ?
 1845,26: (
 1845,27: (
 1845,28: 1
 1845,30: <<
 1845,33: (
 1845,34: 11
 1845,36: )
 1845,37: )
 1845,39: <<
 1845,42: 8
 1845,43: )
 1845,45: :
 1845,47: (
 1845,48: (
 1845,49: 1
 1845,51: <<
 1845,54: (
 1845,55: 11
 1845,57: )
 1845,58: )
 1845,60: >>
 1845,63: 8
 1845,64: )
 1845,65: )
 1846,1: }
 
98 { enumerator_list option_comma } 
 1833,1: {
 1834,3: _ISupper
 1834,11: VARIABLE
 1834,12: =
 1834,14: (
 1834,15: (
 1834,16: 0
 1834,17: )
 1834,19: <
 1834,21: 8
 1834,23: ?
 1834,25: (
 1834,26: (
 1834,27: 1
 1834,29: <<
 1834,32: (
 1834,33: 0
 1834,34: )
 1834,35: )
 1834,37: <<
 1834,40: 8
 1834,41: )
 1834,43: :
 1834,45: (
 1834,46: (
 1834,47: 1
 1834,49: <<
 1834,52: (
 1834,53: 0
 1834,54: )
 1834,55: )
 1834,57: >>
 1834,60: 8
 1834,61: )
 1834,62: )
 1834,63: ,
 1835,3: _ISlower
 1835,11: VARIABLE
 1835,12: =
 1835,14: (
 1835,15: (
 1835,16: 1
 1835,17: )
 1835,19: <
 1835,21: 8
 1835,23: ?
 1835,25: (
 1835,26: (
 1835,27: 1
 1835,29: <<
 1835,32: (
 1835,33: 1
 1835,34: )
 1835,35: )
 1835,37: <<
 1835,40: 8
 1835,41: )
 1835,43: :
 1835,45: (
 1835,46: (
 1835,47: 1
 1835,49: <<
 1835,52: (
 1835,53: 1
 1835,54: )
 1835,55: )
 1835,57: >>
 1835,60: 8
 1835,61: )
 1835,62: )
 1835,63: ,
 1836,3: _ISalpha
 1836,11: VARIABLE
 1836,12: =
 1836,14: (
 1836,15: (
 1836,16: 2
 1836,17: )
 1836,19: <
 1836,21: 8
 1836,23: ?
 1836,25: (
 1836,26: (
 1836,27: 1
 1836,29: <<
 1836,32: (
 1836,33: 2
 1836,34: )
 1836,35: )
 1836,37: <<
 1836,40: 8
 1836,41: )
 1836,43: :
 1836,45: (
 1836,46: (
 1836,47: 1
 1836,49: <<
 1836,52: (
 1836,53: 2
 1836,54: )
 1836,55: )
 1836,57: >>
 1836,60: 8
 1836,61: )
 1836,62: )
 1836,63: ,
 1837,3: _ISdigit
 1837,11: VARIABLE
 1837,12: =
 1837,14: (
 1837,15: (
 1837,16: 3
 1837,17: )
 1837,19: <
 1837,21: 8
 1837,23: ?
 1837,25: (
 1837,26: (
 1837,27: 1
 1837,29: <<
 1837,32: (
 1837,33: 3
 1837,34: )
 1837,35: )
 1837,37: <<
 1837,40: 8
 1837,41: )
 1837,43: :
 1837,45: (
 1837,46: (
 1837,47: 1
 1837,49: <<
 1837,52: (
 1837,53: 3
 1837,54: )
 1837,55: )
 1837,57: >>
 1837,60: 8
 1837,61: )
 1837,62: )
 1837,63: ,
 1838,3: _ISxdigit
 1838,12: VARIABLE
 1838,13: =
 1838,15: (
 1838,16: (
 1838,17: 4
 1838,18: )
 1838,20: <
 1838,22: 8
 1838,24: ?
 1838,26: (
 1838,27: (
 1838,28: 1
 1838,30: <<
 1838,33: (
 1838,34: 4
 1838,35: )
 1838,36: )
 1838,38: <<
 1838,41: 8
 1838,42: )
 1838,44: :
 1838,46: (
 1838,47: (
 1838,48: 1
 1838,50: <<
 1838,53: (
 1838,54: 4
 1838,55: )
 1838,56: )
 1838,58: >>
 1838,61: 8
 1838,62: )
 1838,63: )
 1838,64: ,
 1839,3: _ISspace
 1839,11: VARIABLE
 1839,12: =
 1839,14: (
 1839,15: (
 1839,16: 5
 1839,17: )
 1839,19: <
 1839,21: 8
 1839,23: ?
 1839,25: (
 1839,26: (
 1839,27: 1
 1839,29: <<
 1839,32: (
 1839,33: 5
 1839,34: )
 1839,35: )
 1839,37: <<
 1839,40: 8
 1839,41: )
 1839,43: :
 1839,45: (
 1839,46: (
 1839,47: 1
 1839,49: <<
 1839,52: (
 1839,53: 5
 1839,54: )
 1839,55: )
 1839,57: >>
 1839,60: 8
 1839,61: )
 1839,62: )
 1839,63: ,
 1840,3: _ISprint
 1840,11: VARIABLE
 1840,12: =
 1840,14: (
 1840,15: (
 1840,16: 6
 1840,17: )
 1840,19: <
 1840,21: 8
 1840,23: ?
 1840,25: (
 1840,26: (
 1840,27: 1
 1840,29: <<
 1840,32: (
 1840,33: 6
 1840,34: )
 1840,35: )
 1840,37: <<
 1840,40: 8
 1840,41: )
 1840,43: :
 1840,45: (
 1840,46: (
 1840,47: 1
 1840,49: <<
 1840,52: (
 1840,53: 6
 1840,54: )
 1840,55: )
 1840,57: >>
 1840,60: 8
 1840,61: )
 1840,62: )
 1840,63: ,
 1841,3: _ISgraph
 1841,11: VARIABLE
 1841,12: =
 1841,14: (
 1841,15: (
 1841,16: 7
 1841,17: )
 1841,19: <
 1841,21: 8
 1841,23: ?
 1841,25: (
 1841,26: (
 1841,27: 1
 1841,29: <<
 1841,32: (
 1841,33: 7
 1841,34: )
 1841,35: )
 1841,37: <<
 1841,40: 8
 1841,41: )
 1841,43: :
 1841,45: (
 1841,46: (
 1841,47: 1
 1841,49: <<
 1841,52: (
 1841,53: 7
 1841,54: )
 1841,55: )
 1841,57: >>
 1841,60: 8
 1841,61: )
 1841,62: )
 1841,63: ,
 1842,3: _ISblank
 1842,11: VARIABLE
 1842,12: =
 1842,14: (
 1842,15: (
 1842,16: 8
 1842,17: )
 1842,19: <
 1842,21: 8
 1842,23: ?
 1842,25: (
 1842,26: (
 1842,27: 1
 1842,29: <<
 1842,32: (
 1842,33: 8
 1842,34: )
 1842,35: )
 1842,37: <<
 1842,40: 8
 1842,41: )
 1842,43: :
 1842,45: (
 1842,46: (
 1842,47: 1
 1842,49: <<
 1842,52: (
 1842,53: 8
 1842,54: )
 1842,55: )
 1842,57: >>
 1842,60: 8
 1842,61: )
 1842,62: )
 1842,63: ,
 1843,3: _IScntrl
 1843,11: VARIABLE
 1843,12: =
 1843,14: (
 1843,15: (
 1843,16: 9
 1843,17: )
 1843,19: <
 1843,21: 8
 1843,23: ?
 1843,25: (
 1843,26: (
 1843,27: 1
 1843,29: <<
 1843,32: (
 1843,33: 9
 1843,34: )
 1843,35: )
 1843,37: <<
 1843,40: 8
 1843,41: )
 1843,43: :
 1843,45: (
 1843,46: (
 1843,47: 1
 1843,49: <<
 1843,52: (
 1843,53: 9
 1843,54: )
 1843,55: )
 1843,57: >>
 1843,60: 8
 1843,61: )
 1843,62: )
 1843,63: ,
 1844,3: _ISpunct
 1844,11: VARIABLE
 1844,12: =
 1844,14: (
 1844,15: (
 1844,16: 10
 1844,18: )
 1844,20: <
 1844,22: 8
 1844,24: ?
 1844,26: (
 1844,27: (
 1844,28: 1
 1844,30: <<
 1844,33: (
 1844,34: 10
 1844,36: )
 1844,37: )
 1844,39: <<
 1844,42: 8
 1844,43: )
 1844,45: :
 1844,47: (
 1844,48: (
 1844,49: 1
 1844,51: <<
 1844,54: (
 1844,55: 10
 1844,57: )
 1844,58: )
 1844,60: >>
 1844,63: 8
 1844,64: )
 1844,65: )
 1844,66: ,
 1845,3: _ISalnum
 1845,11: VARIABLE
 1845,12: =
 1845,14: (
 1845,15: (
 1845,16: 11
 1845,18: )
 1845,20: <
 1845,22: 8
 1845,24: ?
 1845,26: (
 1845,27: (
 1845,28: 1
 1845,30: <<
 1845,33: (
 1845,34: 11
 1845,36: )
 1845,37: )
 1845,39: <<
 1845,42: 8
 1845,43: )
 1845,45: :
 1845,47: (
 1845,48: (
 1845,49: 1
 1845,51: <<
 1845,54: (
 1845,55: 11
 1845,57: )
 1845,58: )
 1845,60: >>
 1845,63: 8
 1845,64: )
 1845,65: )
 1846,1: }
 
131 NAME VARIABLE 
 1834,3: _ISupper
 1834,11: VARIABLE
 
65 VARIABLE 
 1834,11: VARIABLE
 
206 = constant_expression 
 1834,12: =
 1834,14: (
 1834,15: (
 1834,16: 0
 1834,17: )
 1834,19: <
 1834,21: 8
 1834,23: ?
 1834,25: (
 1834,26: (
 1834,27: 1
 1834,29: <<
 1834,32: (
 1834,33: 0
 1834,34: )
 1834,35: )
 1834,37: <<
 1834,40: 8
 1834,41: )
 1834,43: :
 1834,45: (
 1834,46: (
 1834,47: 1
 1834,49: <<
 1834,52: (
 1834,53: 0
 1834,54: )
 1834,55: )
 1834,57: >>
 1834,60: 8
 1834,61: )
 1834,62: )
 
341 ( expression ) 
 1834,14: (
 1834,15: (
 1834,16: 0
 1834,17: )
 1834,19: <
 1834,21: 8
 1834,23: ?
 1834,25: (
 1834,26: (
 1834,27: 1
 1834,29: <<
 1834,32: (
 1834,33: 0
 1834,34: )
 1834,35: )
 1834,37: <<
 1834,40: 8
 1834,41: )
 1834,43: :
 1834,45: (
 1834,46: (
 1834,47: 1
 1834,49: <<
 1834,52: (
 1834,53: 0
 1834,54: )
 1834,55: )
 1834,57: >>
 1834,60: 8
 1834,61: )
 1834,62: )
 
165 ( expression ) 
 1834,15: (
 1834,16: 0
 1834,17: )
 
165 CONSTANT 
 1834,16: 0
 
267 ) 
 1834,17: )
 
154 < 
 1834,19: <
 
252 CONSTANT 
 1834,21: 8
 
160 ? expression : conditional_expression 
 1834,23: ?
 1834,25: (
 1834,26: (
 1834,27: 1
 1834,29: <<
 1834,32: (
 1834,33: 0
 1834,34: )
 1834,35: )
 1834,37: <<
 1834,40: 8
 1834,41: )
 1834,43: :
 1834,45: (
 1834,46: (
 1834,47: 1
 1834,49: <<
 1834,52: (
 1834,53: 0
 1834,54: )
 1834,55: )
 1834,57: >>
 1834,60: 8
 1834,61: )
 
265 ( expression ) 
 1834,25: (
 1834,26: (
 1834,27: 1
 1834,29: <<
 1834,32: (
 1834,33: 0
 1834,34: )
 1834,35: )
 1834,37: <<
 1834,40: 8
 1834,41: )
 
165 ( expression ) 
 1834,26: (
 1834,27: 1
 1834,29: <<
 1834,32: (
 1834,33: 0
 1834,34: )
 1834,35: )
 
165 CONSTANT 
 1834,27: 1
 
153 << 
 1834,29: <<
 
249 ( expression ) 
 1834,32: (
 1834,33: 0
 1834,34: )
 
165 CONSTANT 
 1834,33: 0
 
267 ) 
 1834,34: )
 
267 ) 
 1834,35: )
 
153 << 
 1834,37: <<
 
249 CONSTANT 
 1834,40: 8
 
267 ) 
 1834,41: )
 
366 : conditional_expression 
 1834,43: :
 1834,45: (
 1834,46: (
 1834,47: 1
 1834,49: <<
 1834,52: (
 1834,53: 0
 1834,54: )
 1834,55: )
 1834,57: >>
 1834,60: 8
 1834,61: )
 
431 ( expression ) 
 1834,45: (
 1834,46: (
 1834,47: 1
 1834,49: <<
 1834,52: (
 1834,53: 0
 1834,54: )
 1834,55: )
 1834,57: >>
 1834,60: 8
 1834,61: )
 
165 ( expression ) 
 1834,46: (
 1834,47: 1
 1834,49: <<
 1834,52: (
 1834,53: 0
 1834,54: )
 1834,55: )
 
165 CONSTANT 
 1834,47: 1
 
153 << 
 1834,49: <<
 
249 ( expression ) 
 1834,52: (
 1834,53: 0
 1834,54: )
 
165 CONSTANT 
 1834,53: 0
 
267 ) 
 1834,54: )
 
267 ) 
 1834,55: )
 
153 >> 
 1834,57: >>
 
249 CONSTANT 
 1834,60: 8
 
267 ) 
 1834,61: )
 
267 ) 
 1834,62: )
 
204 , enumerator 
 1834,63: ,
 1835,3: _ISlower
 1835,11: VARIABLE
 1835,12: =
 1835,14: (
 1835,15: (
 1835,16: 1
 1835,17: )
 1835,19: <
 1835,21: 8
 1835,23: ?
 1835,25: (
 1835,26: (
 1835,27: 1
 1835,29: <<
 1835,32: (
 1835,33: 1
 1835,34: )
 1835,35: )
 1835,37: <<
 1835,40: 8
 1835,41: )
 1835,43: :
 1835,45: (
 1835,46: (
 1835,47: 1
 1835,49: <<
 1835,52: (
 1835,53: 1
 1835,54: )
 1835,55: )
 1835,57: >>
 1835,60: 8
 1835,61: )
 1835,62: )
 
340 NAME VARIABLE 
 1835,3: _ISlower
 1835,11: VARIABLE
 
65 VARIABLE 
 1835,11: VARIABLE
 
206 = constant_expression 
 1835,12: =
 1835,14: (
 1835,15: (
 1835,16: 1
 1835,17: )
 1835,19: <
 1835,21: 8
 1835,23: ?
 1835,25: (
 1835,26: (
 1835,27: 1
 1835,29: <<
 1835,32: (
 1835,33: 1
 1835,34: )
 1835,35: )
 1835,37: <<
 1835,40: 8
 1835,41: )
 1835,43: :
 1835,45: (
 1835,46: (
 1835,47: 1
 1835,49: <<
 1835,52: (
 1835,53: 1
 1835,54: )
 1835,55: )
 1835,57: >>
 1835,60: 8
 1835,61: )
 1835,62: )
 
341 ( expression ) 
 1835,14: (
 1835,15: (
 1835,16: 1
 1835,17: )
 1835,19: <
 1835,21: 8
 1835,23: ?
 1835,25: (
 1835,26: (
 1835,27: 1
 1835,29: <<
 1835,32: (
 1835,33: 1
 1835,34: )
 1835,35: )
 1835,37: <<
 1835,40: 8
 1835,41: )
 1835,43: :
 1835,45: (
 1835,46: (
 1835,47: 1
 1835,49: <<
 1835,52: (
 1835,53: 1
 1835,54: )
 1835,55: )
 1835,57: >>
 1835,60: 8
 1835,61: )
 1835,62: )
 
165 ( expression ) 
 1835,15: (
 1835,16: 1
 1835,17: )
 
165 CONSTANT 
 1835,16: 1
 
267 ) 
 1835,17: )
 
154 < 
 1835,19: <
 
252 CONSTANT 
 1835,21: 8
 
160 ? expression : conditional_expression 
 1835,23: ?
 1835,25: (
 1835,26: (
 1835,27: 1
 1835,29: <<
 1835,32: (
 1835,33: 1
 1835,34: )
 1835,35: )
 1835,37: <<
 1835,40: 8
 1835,41: )
 1835,43: :
 1835,45: (
 1835,46: (
 1835,47: 1
 1835,49: <<
 1835,52: (
 1835,53: 1
 1835,54: )
 1835,55: )
 1835,57: >>
 1835,60: 8
 1835,61: )
 
265 ( expression ) 
 1835,25: (
 1835,26: (
 1835,27: 1
 1835,29: <<
 1835,32: (
 1835,33: 1
 1835,34: )
 1835,35: )
 1835,37: <<
 1835,40: 8
 1835,41: )
 
165 ( expression ) 
 1835,26: (
 1835,27: 1
 1835,29: <<
 1835,32: (
 1835,33: 1
 1835,34: )
 1835,35: )
 
165 CONSTANT 
 1835,27: 1
 
153 << 
 1835,29: <<
 
249 ( expression ) 
 1835,32: (
 1835,33: 1
 1835,34: )
 
165 CONSTANT 
 1835,33: 1
 
267 ) 
 1835,34: )
 
267 ) 
 1835,35: )
 
153 << 
 1835,37: <<
 
249 CONSTANT 
 1835,40: 8
 
267 ) 
 1835,41: )
 
366 : conditional_expression 
 1835,43: :
 1835,45: (
 1835,46: (
 1835,47: 1
 1835,49: <<
 1835,52: (
 1835,53: 1
 1835,54: )
 1835,55: )
 1835,57: >>
 1835,60: 8
 1835,61: )
 
431 ( expression ) 
 1835,45: (
 1835,46: (
 1835,47: 1
 1835,49: <<
 1835,52: (
 1835,53: 1
 1835,54: )
 1835,55: )
 1835,57: >>
 1835,60: 8
 1835,61: )
 
165 ( expression ) 
 1835,46: (
 1835,47: 1
 1835,49: <<
 1835,52: (
 1835,53: 1
 1835,54: )
 1835,55: )
 
165 CONSTANT 
 1835,47: 1
 
153 << 
 1835,49: <<
 
249 ( expression ) 
 1835,52: (
 1835,53: 1
 1835,54: )
 
165 CONSTANT 
 1835,53: 1
 
267 ) 
 1835,54: )
 
267 ) 
 1835,55: )
 
153 >> 
 1835,57: >>
 
249 CONSTANT 
 1835,60: 8
 
267 ) 
 1835,61: )
 
267 ) 
 1835,62: )
 
204 , enumerator 
 1835,63: ,
 1836,3: _ISalpha
 1836,11: VARIABLE
 1836,12: =
 1836,14: (
 1836,15: (
 1836,16: 2
 1836,17: )
 1836,19: <
 1836,21: 8
 1836,23: ?
 1836,25: (
 1836,26: (
 1836,27: 1
 1836,29: <<
 1836,32: (
 1836,33: 2
 1836,34: )
 1836,35: )
 1836,37: <<
 1836,40: 8
 1836,41: )
 1836,43: :
 1836,45: (
 1836,46: (
 1836,47: 1
 1836,49: <<
 1836,52: (
 1836,53: 2
 1836,54: )
 1836,55: )
 1836,57: >>
 1836,60: 8
 1836,61: )
 1836,62: )
 
340 NAME VARIABLE 
 1836,3: _ISalpha
 1836,11: VARIABLE
 
65 VARIABLE 
 1836,11: VARIABLE
 
206 = constant_expression 
 1836,12: =
 1836,14: (
 1836,15: (
 1836,16: 2
 1836,17: )
 1836,19: <
 1836,21: 8
 1836,23: ?
 1836,25: (
 1836,26: (
 1836,27: 1
 1836,29: <<
 1836,32: (
 1836,33: 2
 1836,34: )
 1836,35: )
 1836,37: <<
 1836,40: 8
 1836,41: )
 1836,43: :
 1836,45: (
 1836,46: (
 1836,47: 1
 1836,49: <<
 1836,52: (
 1836,53: 2
 1836,54: )
 1836,55: )
 1836,57: >>
 1836,60: 8
 1836,61: )
 1836,62: )
 
341 ( expression ) 
 1836,14: (
 1836,15: (
 1836,16: 2
 1836,17: )
 1836,19: <
 1836,21: 8
 1836,23: ?
 1836,25: (
 1836,26: (
 1836,27: 1
 1836,29: <<
 1836,32: (
 1836,33: 2
 1836,34: )
 1836,35: )
 1836,37: <<
 1836,40: 8
 1836,41: )
 1836,43: :
 1836,45: (
 1836,46: (
 1836,47: 1
 1836,49: <<
 1836,52: (
 1836,53: 2
 1836,54: )
 1836,55: )
 1836,57: >>
 1836,60: 8
 1836,61: )
 1836,62: )
 
165 ( expression ) 
 1836,15: (
 1836,16: 2
 1836,17: )
 
165 CONSTANT 
 1836,16: 2
 
267 ) 
 1836,17: )
 
154 < 
 1836,19: <
 
252 CONSTANT 
 1836,21: 8
 
160 ? expression : conditional_expression 
 1836,23: ?
 1836,25: (
 1836,26: (
 1836,27: 1
 1836,29: <<
 1836,32: (
 1836,33: 2
 1836,34: )
 1836,35: )
 1836,37: <<
 1836,40: 8
 1836,41: )
 1836,43: :
 1836,45: (
 1836,46: (
 1836,47: 1
 1836,49: <<
 1836,52: (
 1836,53: 2
 1836,54: )
 1836,55: )
 1836,57: >>
 1836,60: 8
 1836,61: )
 
265 ( expression ) 
 1836,25: (
 1836,26: (
 1836,27: 1
 1836,29: <<
 1836,32: (
 1836,33: 2
 1836,34: )
 1836,35: )
 1836,37: <<
 1836,40: 8
 1836,41: )
 
165 ( expression ) 
 1836,26: (
 1836,27: 1
 1836,29: <<
 1836,32: (
 1836,33: 2
 1836,34: )
 1836,35: )
 
165 CONSTANT 
 1836,27: 1
 
153 << 
 1836,29: <<
 
249 ( expression ) 
 1836,32: (
 1836,33: 2
 1836,34: )
 
165 CONSTANT 
 1836,33: 2
 
267 ) 
 1836,34: )
 
267 ) 
 1836,35: )
 
153 << 
 1836,37: <<
 
249 CONSTANT 
 1836,40: 8
 
267 ) 
 1836,41: )
 
366 : conditional_expression 
 1836,43: :
 1836,45: (
 1836,46: (
 1836,47: 1
 1836,49: <<
 1836,52: (
 1836,53: 2
 1836,54: )
 1836,55: )
 1836,57: >>
 1836,60: 8
 1836,61: )
 
431 ( expression ) 
 1836,45: (
 1836,46: (
 1836,47: 1
 1836,49: <<
 1836,52: (
 1836,53: 2
 1836,54: )
 1836,55: )
 1836,57: >>
 1836,60: 8
 1836,61: )
 
165 ( expression ) 
 1836,46: (
 1836,47: 1
 1836,49: <<
 1836,52: (
 1836,53: 2
 1836,54: )
 1836,55: )
 
165 CONSTANT 
 1836,47: 1
 
153 << 
 1836,49: <<
 
249 ( expression ) 
 1836,52: (
 1836,53: 2
 1836,54: )
 
165 CONSTANT 
 1836,53: 2
 
267 ) 
 1836,54: )
 
267 ) 
 1836,55: )
 
153 >> 
 1836,57: >>
 
249 CONSTANT 
 1836,60: 8
 
267 ) 
 1836,61: )
 
267 ) 
 1836,62: )
 
204 , enumerator 
 1836,63: ,
 1837,3: _ISdigit
 1837,11: VARIABLE
 1837,12: =
 1837,14: (
 1837,15: (
 1837,16: 3
 1837,17: )
 1837,19: <
 1837,21: 8
 1837,23: ?
 1837,25: (
 1837,26: (
 1837,27: 1
 1837,29: <<
 1837,32: (
 1837,33: 3
 1837,34: )
 1837,35: )
 1837,37: <<
 1837,40: 8
 1837,41: )
 1837,43: :
 1837,45: (
 1837,46: (
 1837,47: 1
 1837,49: <<
 1837,52: (
 1837,53: 3
 1837,54: )
 1837,55: )
 1837,57: >>
 1837,60: 8
 1837,61: )
 1837,62: )
 
340 NAME VARIABLE 
 1837,3: _ISdigit
 1837,11: VARIABLE
 
65 VARIABLE 
 1837,11: VARIABLE
 
206 = constant_expression 
 1837,12: =
 1837,14: (
 1837,15: (
 1837,16: 3
 1837,17: )
 1837,19: <
 1837,21: 8
 1837,23: ?
 1837,25: (
 1837,26: (
 1837,27: 1
 1837,29: <<
 1837,32: (
 1837,33: 3
 1837,34: )
 1837,35: )
 1837,37: <<
 1837,40: 8
 1837,41: )
 1837,43: :
 1837,45: (
 1837,46: (
 1837,47: 1
 1837,49: <<
 1837,52: (
 1837,53: 3
 1837,54: )
 1837,55: )
 1837,57: >>
 1837,60: 8
 1837,61: )
 1837,62: )
 
341 ( expression ) 
 1837,14: (
 1837,15: (
 1837,16: 3
 1837,17: )
 1837,19: <
 1837,21: 8
 1837,23: ?
 1837,25: (
 1837,26: (
 1837,27: 1
 1837,29: <<
 1837,32: (
 1837,33: 3
 1837,34: )
 1837,35: )
 1837,37: <<
 1837,40: 8
 1837,41: )
 1837,43: :
 1837,45: (
 1837,46: (
 1837,47: 1
 1837,49: <<
 1837,52: (
 1837,53: 3
 1837,54: )
 1837,55: )
 1837,57: >>
 1837,60: 8
 1837,61: )
 1837,62: )
 
165 ( expression ) 
 1837,15: (
 1837,16: 3
 1837,17: )
 
165 CONSTANT 
 1837,16: 3
 
267 ) 
 1837,17: )
 
154 < 
 1837,19: <
 
252 CONSTANT 
 1837,21: 8
 
160 ? expression : conditional_expression 
 1837,23: ?
 1837,25: (
 1837,26: (
 1837,27: 1
 1837,29: <<
 1837,32: (
 1837,33: 3
 1837,34: )
 1837,35: )
 1837,37: <<
 1837,40: 8
 1837,41: )
 1837,43: :
 1837,45: (
 1837,46: (
 1837,47: 1
 1837,49: <<
 1837,52: (
 1837,53: 3
 1837,54: )
 1837,55: )
 1837,57: >>
 1837,60: 8
 1837,61: )
 
265 ( expression ) 
 1837,25: (
 1837,26: (
 1837,27: 1
 1837,29: <<
 1837,32: (
 1837,33: 3
 1837,34: )
 1837,35: )
 1837,37: <<
 1837,40: 8
 1837,41: )
 
165 ( expression ) 
 1837,26: (
 1837,27: 1
 1837,29: <<
 1837,32: (
 1837,33: 3
 1837,34: )
 1837,35: )
 
165 CONSTANT 
 1837,27: 1
 
153 << 
 1837,29: <<
 
249 ( expression ) 
 1837,32: (
 1837,33: 3
 1837,34: )
 
165 CONSTANT 
 1837,33: 3
 
267 ) 
 1837,34: )
 
267 ) 
 1837,35: )
 
153 << 
 1837,37: <<
 
249 CONSTANT 
 1837,40: 8
 
267 ) 
 1837,41: )
 
366 : conditional_expression 
 1837,43: :
 1837,45: (
 1837,46: (
 1837,47: 1
 1837,49: <<
 1837,52: (
 1837,53: 3
 1837,54: )
 1837,55: )
 1837,57: >>
 1837,60: 8
 1837,61: )
 
431 ( expression ) 
 1837,45: (
 1837,46: (
 1837,47: 1
 1837,49: <<
 1837,52: (
 1837,53: 3
 1837,54: )
 1837,55: )
 1837,57: >>
 1837,60: 8
 1837,61: )
 
165 ( expression ) 
 1837,46: (
 1837,47: 1
 1837,49: <<
 1837,52: (
 1837,53: 3
 1837,54: )
 1837,55: )
 
165 CONSTANT 
 1837,47: 1
 
153 << 
 1837,49: <<
 
249 ( expression ) 
 1837,52: (
 1837,53: 3
 1837,54: )
 
165 CONSTANT 
 1837,53: 3
 
267 ) 
 1837,54: )
 
267 ) 
 1837,55: )
 
153 >> 
 1837,57: >>
 
249 CONSTANT 
 1837,60: 8
 
267 ) 
 1837,61: )
 
267 ) 
 1837,62: )
 
204 , enumerator 
 1837,63: ,
 1838,3: _ISxdigit
 1838,12: VARIABLE
 1838,13: =
 1838,15: (
 1838,16: (
 1838,17: 4
 1838,18: )
 1838,20: <
 1838,22: 8
 1838,24: ?
 1838,26: (
 1838,27: (
 1838,28: 1
 1838,30: <<
 1838,33: (
 1838,34: 4
 1838,35: )
 1838,36: )
 1838,38: <<
 1838,41: 8
 1838,42: )
 1838,44: :
 1838,46: (
 1838,47: (
 1838,48: 1
 1838,50: <<
 1838,53: (
 1838,54: 4
 1838,55: )
 1838,56: )
 1838,58: >>
 1838,61: 8
 1838,62: )
 1838,63: )
 
340 NAME VARIABLE 
 1838,3: _ISxdigit
 1838,12: VARIABLE
 
65 VARIABLE 
 1838,12: VARIABLE
 
206 = constant_expression 
 1838,13: =
 1838,15: (
 1838,16: (
 1838,17: 4
 1838,18: )
 1838,20: <
 1838,22: 8
 1838,24: ?
 1838,26: (
 1838,27: (
 1838,28: 1
 1838,30: <<
 1838,33: (
 1838,34: 4
 1838,35: )
 1838,36: )
 1838,38: <<
 1838,41: 8
 1838,42: )
 1838,44: :
 1838,46: (
 1838,47: (
 1838,48: 1
 1838,50: <<
 1838,53: (
 1838,54: 4
 1838,55: )
 1838,56: )
 1838,58: >>
 1838,61: 8
 1838,62: )
 1838,63: )
 
341 ( expression ) 
 1838,15: (
 1838,16: (
 1838,17: 4
 1838,18: )
 1838,20: <
 1838,22: 8
 1838,24: ?
 1838,26: (
 1838,27: (
 1838,28: 1
 1838,30: <<
 1838,33: (
 1838,34: 4
 1838,35: )
 1838,36: )
 1838,38: <<
 1838,41: 8
 1838,42: )
 1838,44: :
 1838,46: (
 1838,47: (
 1838,48: 1
 1838,50: <<
 1838,53: (
 1838,54: 4
 1838,55: )
 1838,56: )
 1838,58: >>
 1838,61: 8
 1838,62: )
 1838,63: )
 
165 ( expression ) 
 1838,16: (
 1838,17: 4
 1838,18: )
 
165 CONSTANT 
 1838,17: 4
 
267 ) 
 1838,18: )
 
154 < 
 1838,20: <
 
252 CONSTANT 
 1838,22: 8
 
160 ? expression : conditional_expression 
 1838,24: ?
 1838,26: (
 1838,27: (
 1838,28: 1
 1838,30: <<
 1838,33: (
 1838,34: 4
 1838,35: )
 1838,36: )
 1838,38: <<
 1838,41: 8
 1838,42: )
 1838,44: :
 1838,46: (
 1838,47: (
 1838,48: 1
 1838,50: <<
 1838,53: (
 1838,54: 4
 1838,55: )
 1838,56: )
 1838,58: >>
 1838,61: 8
 1838,62: )
 
265 ( expression ) 
 1838,26: (
 1838,27: (
 1838,28: 1
 1838,30: <<
 1838,33: (
 1838,34: 4
 1838,35: )
 1838,36: )
 1838,38: <<
 1838,41: 8
 1838,42: )
 
165 ( expression ) 
 1838,27: (
 1838,28: 1
 1838,30: <<
 1838,33: (
 1838,34: 4
 1838,35: )
 1838,36: )
 
165 CONSTANT 
 1838,28: 1
 
153 << 
 1838,30: <<
 
249 ( expression ) 
 1838,33: (
 1838,34: 4
 1838,35: )
 
165 CONSTANT 
 1838,34: 4
 
267 ) 
 1838,35: )
 
267 ) 
 1838,36: )
 
153 << 
 1838,38: <<
 
249 CONSTANT 
 1838,41: 8
 
267 ) 
 1838,42: )
 
366 : conditional_expression 
 1838,44: :
 1838,46: (
 1838,47: (
 1838,48: 1
 1838,50: <<
 1838,53: (
 1838,54: 4
 1838,55: )
 1838,56: )
 1838,58: >>
 1838,61: 8
 1838,62: )
 
431 ( expression ) 
 1838,46: (
 1838,47: (
 1838,48: 1
 1838,50: <<
 1838,53: (
 1838,54: 4
 1838,55: )
 1838,56: )
 1838,58: >>
 1838,61: 8
 1838,62: )
 
165 ( expression ) 
 1838,47: (
 1838,48: 1
 1838,50: <<
 1838,53: (
 1838,54: 4
 1838,55: )
 1838,56: )
 
165 CONSTANT 
 1838,48: 1
 
153 << 
 1838,50: <<
 
249 ( expression ) 
 1838,53: (
 1838,54: 4
 1838,55: )
 
165 CONSTANT 
 1838,54: 4
 
267 ) 
 1838,55: )
 
267 ) 
 1838,56: )
 
153 >> 
 1838,58: >>
 
249 CONSTANT 
 1838,61: 8
 
267 ) 
 1838,62: )
 
267 ) 
 1838,63: )
 
204 , enumerator 
 1838,64: ,
 1839,3: _ISspace
 1839,11: VARIABLE
 1839,12: =
 1839,14: (
 1839,15: (
 1839,16: 5
 1839,17: )
 1839,19: <
 1839,21: 8
 1839,23: ?
 1839,25: (
 1839,26: (
 1839,27: 1
 1839,29: <<
 1839,32: (
 1839,33: 5
 1839,34: )
 1839,35: )
 1839,37: <<
 1839,40: 8
 1839,41: )
 1839,43: :
 1839,45: (
 1839,46: (
 1839,47: 1
 1839,49: <<
 1839,52: (
 1839,53: 5
 1839,54: )
 1839,55: )
 1839,57: >>
 1839,60: 8
 1839,61: )
 1839,62: )
 
340 NAME VARIABLE 
 1839,3: _ISspace
 1839,11: VARIABLE
 
65 VARIABLE 
 1839,11: VARIABLE
 
206 = constant_expression 
 1839,12: =
 1839,14: (
 1839,15: (
 1839,16: 5
 1839,17: )
 1839,19: <
 1839,21: 8
 1839,23: ?
 1839,25: (
 1839,26: (
 1839,27: 1
 1839,29: <<
 1839,32: (
 1839,33: 5
 1839,34: )
 1839,35: )
 1839,37: <<
 1839,40: 8
 1839,41: )
 1839,43: :
 1839,45: (
 1839,46: (
 1839,47: 1
 1839,49: <<
 1839,52: (
 1839,53: 5
 1839,54: )
 1839,55: )
 1839,57: >>
 1839,60: 8
 1839,61: )
 1839,62: )
 
341 ( expression ) 
 1839,14: (
 1839,15: (
 1839,16: 5
 1839,17: )
 1839,19: <
 1839,21: 8
 1839,23: ?
 1839,25: (
 1839,26: (
 1839,27: 1
 1839,29: <<
 1839,32: (
 1839,33: 5
 1839,34: )
 1839,35: )
 1839,37: <<
 1839,40: 8
 1839,41: )
 1839,43: :
 1839,45: (
 1839,46: (
 1839,47: 1
 1839,49: <<
 1839,52: (
 1839,53: 5
 1839,54: )
 1839,55: )
 1839,57: >>
 1839,60: 8
 1839,61: )
 1839,62: )
 
165 ( expression ) 
 1839,15: (
 1839,16: 5
 1839,17: )
 
165 CONSTANT 
 1839,16: 5
 
267 ) 
 1839,17: )
 
154 < 
 1839,19: <
 
252 CONSTANT 
 1839,21: 8
 
160 ? expression : conditional_expression 
 1839,23: ?
 1839,25: (
 1839,26: (
 1839,27: 1
 1839,29: <<
 1839,32: (
 1839,33: 5
 1839,34: )
 1839,35: )
 1839,37: <<
 1839,40: 8
 1839,41: )
 1839,43: :
 1839,45: (
 1839,46: (
 1839,47: 1
 1839,49: <<
 1839,52: (
 1839,53: 5
 1839,54: )
 1839,55: )
 1839,57: >>
 1839,60: 8
 1839,61: )
 
265 ( expression ) 
 1839,25: (
 1839,26: (
 1839,27: 1
 1839,29: <<
 1839,32: (
 1839,33: 5
 1839,34: )
 1839,35: )
 1839,37: <<
 1839,40: 8
 1839,41: )
 
165 ( expression ) 
 1839,26: (
 1839,27: 1
 1839,29: <<
 1839,32: (
 1839,33: 5
 1839,34: )
 1839,35: )
 
165 CONSTANT 
 1839,27: 1
 
153 << 
 1839,29: <<
 
249 ( expression ) 
 1839,32: (
 1839,33: 5
 1839,34: )
 
165 CONSTANT 
 1839,33: 5
 
267 ) 
 1839,34: )
 
267 ) 
 1839,35: )
 
153 << 
 1839,37: <<
 
249 CONSTANT 
 1839,40: 8
 
267 ) 
 1839,41: )
 
366 : conditional_expression 
 1839,43: :
 1839,45: (
 1839,46: (
 1839,47: 1
 1839,49: <<
 1839,52: (
 1839,53: 5
 1839,54: )
 1839,55: )
 1839,57: >>
 1839,60: 8
 1839,61: )
 
431 ( expression ) 
 1839,45: (
 1839,46: (
 1839,47: 1
 1839,49: <<
 1839,52: (
 1839,53: 5
 1839,54: )
 1839,55: )
 1839,57: >>
 1839,60: 8
 1839,61: )
 
165 ( expression ) 
 1839,46: (
 1839,47: 1
 1839,49: <<
 1839,52: (
 1839,53: 5
 1839,54: )
 1839,55: )
 
165 CONSTANT 
 1839,47: 1
 
153 << 
 1839,49: <<
 
249 ( expression ) 
 1839,52: (
 1839,53: 5
 1839,54: )
 
165 CONSTANT 
 1839,53: 5
 
267 ) 
 1839,54: )
 
267 ) 
 1839,55: )
 
153 >> 
 1839,57: >>
 
249 CONSTANT 
 1839,60: 8
 
267 ) 
 1839,61: )
 
267 ) 
 1839,62: )
 
204 , enumerator 
 1839,63: ,
 1840,3: _ISprint
 1840,11: VARIABLE
 1840,12: =
 1840,14: (
 1840,15: (
 1840,16: 6
 1840,17: )
 1840,19: <
 1840,21: 8
 1840,23: ?
 1840,25: (
 1840,26: (
 1840,27: 1
 1840,29: <<
 1840,32: (
 1840,33: 6
 1840,34: )
 1840,35: )
 1840,37: <<
 1840,40: 8
 1840,41: )
 1840,43: :
 1840,45: (
 1840,46: (
 1840,47: 1
 1840,49: <<
 1840,52: (
 1840,53: 6
 1840,54: )
 1840,55: )
 1840,57: >>
 1840,60: 8
 1840,61: )
 1840,62: )
 
340 NAME VARIABLE 
 1840,3: _ISprint
 1840,11: VARIABLE
 
65 VARIABLE 
 1840,11: VARIABLE
 
206 = constant_expression 
 1840,12: =
 1840,14: (
 1840,15: (
 1840,16: 6
 1840,17: )
 1840,19: <
 1840,21: 8
 1840,23: ?
 1840,25: (
 1840,26: (
 1840,27: 1
 1840,29: <<
 1840,32: (
 1840,33: 6
 1840,34: )
 1840,35: )
 1840,37: <<
 1840,40: 8
 1840,41: )
 1840,43: :
 1840,45: (
 1840,46: (
 1840,47: 1
 1840,49: <<
 1840,52: (
 1840,53: 6
 1840,54: )
 1840,55: )
 1840,57: >>
 1840,60: 8
 1840,61: )
 1840,62: )
 
341 ( expression ) 
 1840,14: (
 1840,15: (
 1840,16: 6
 1840,17: )
 1840,19: <
 1840,21: 8
 1840,23: ?
 1840,25: (
 1840,26: (
 1840,27: 1
 1840,29: <<
 1840,32: (
 1840,33: 6
 1840,34: )
 1840,35: )
 1840,37: <<
 1840,40: 8
 1840,41: )
 1840,43: :
 1840,45: (
 1840,46: (
 1840,47: 1
 1840,49: <<
 1840,52: (
 1840,53: 6
 1840,54: )
 1840,55: )
 1840,57: >>
 1840,60: 8
 1840,61: )
 1840,62: )
 
165 ( expression ) 
 1840,15: (
 1840,16: 6
 1840,17: )
 
165 CONSTANT 
 1840,16: 6
 
267 ) 
 1840,17: )
 
154 < 
 1840,19: <
 
252 CONSTANT 
 1840,21: 8
 
160 ? expression : conditional_expression 
 1840,23: ?
 1840,25: (
 1840,26: (
 1840,27: 1
 1840,29: <<
 1840,32: (
 1840,33: 6
 1840,34: )
 1840,35: )
 1840,37: <<
 1840,40: 8
 1840,41: )
 1840,43: :
 1840,45: (
 1840,46: (
 1840,47: 1
 1840,49: <<
 1840,52: (
 1840,53: 6
 1840,54: )
 1840,55: )
 1840,57: >>
 1840,60: 8
 1840,61: )
 
265 ( expression ) 
 1840,25: (
 1840,26: (
 1840,27: 1
 1840,29: <<
 1840,32: (
 1840,33: 6
 1840,34: )
 1840,35: )
 1840,37: <<
 1840,40: 8
 1840,41: )
 
165 ( expression ) 
 1840,26: (
 1840,27: 1
 1840,29: <<
 1840,32: (
 1840,33: 6
 1840,34: )
 1840,35: )
 
165 CONSTANT 
 1840,27: 1
 
153 << 
 1840,29: <<
 
249 ( expression ) 
 1840,32: (
 1840,33: 6
 1840,34: )
 
165 CONSTANT 
 1840,33: 6
 
267 ) 
 1840,34: )
 
267 ) 
 1840,35: )
 
153 << 
 1840,37: <<
 
249 CONSTANT 
 1840,40: 8
 
267 ) 
 1840,41: )
 
366 : conditional_expression 
 1840,43: :
 1840,45: (
 1840,46: (
 1840,47: 1
 1840,49: <<
 1840,52: (
 1840,53: 6
 1840,54: )
 1840,55: )
 1840,57: >>
 1840,60: 8
 1840,61: )
 
431 ( expression ) 
 1840,45: (
 1840,46: (
 1840,47: 1
 1840,49: <<
 1840,52: (
 1840,53: 6
 1840,54: )
 1840,55: )
 1840,57: >>
 1840,60: 8
 1840,61: )
 
165 ( expression ) 
 1840,46: (
 1840,47: 1
 1840,49: <<
 1840,52: (
 1840,53: 6
 1840,54: )
 1840,55: )
 
165 CONSTANT 
 1840,47: 1
 
153 << 
 1840,49: <<
 
249 ( expression ) 
 1840,52: (
 1840,53: 6
 1840,54: )
 
165 CONSTANT 
 1840,53: 6
 
267 ) 
 1840,54: )
 
267 ) 
 1840,55: )
 
153 >> 
 1840,57: >>
 
249 CONSTANT 
 1840,60: 8
 
267 ) 
 1840,61: )
 
267 ) 
 1840,62: )
 
204 , enumerator 
 1840,63: ,
 1841,3: _ISgraph
 1841,11: VARIABLE
 1841,12: =
 1841,14: (
 1841,15: (
 1841,16: 7
 1841,17: )
 1841,19: <
 1841,21: 8
 1841,23: ?
 1841,25: (
 1841,26: (
 1841,27: 1
 1841,29: <<
 1841,32: (
 1841,33: 7
 1841,34: )
 1841,35: )
 1841,37: <<
 1841,40: 8
 1841,41: )
 1841,43: :
 1841,45: (
 1841,46: (
 1841,47: 1
 1841,49: <<
 1841,52: (
 1841,53: 7
 1841,54: )
 1841,55: )
 1841,57: >>
 1841,60: 8
 1841,61: )
 1841,62: )
 
340 NAME VARIABLE 
 1841,3: _ISgraph
 1841,11: VARIABLE
 
65 VARIABLE 
 1841,11: VARIABLE
 
206 = constant_expression 
 1841,12: =
 1841,14: (
 1841,15: (
 1841,16: 7
 1841,17: )
 1841,19: <
 1841,21: 8
 1841,23: ?
 1841,25: (
 1841,26: (
 1841,27: 1
 1841,29: <<
 1841,32: (
 1841,33: 7
 1841,34: )
 1841,35: )
 1841,37: <<
 1841,40: 8
 1841,41: )
 1841,43: :
 1841,45: (
 1841,46: (
 1841,47: 1
 1841,49: <<
 1841,52: (
 1841,53: 7
 1841,54: )
 1841,55: )
 1841,57: >>
 1841,60: 8
 1841,61: )
 1841,62: )
 
341 ( expression ) 
 1841,14: (
 1841,15: (
 1841,16: 7
 1841,17: )
 1841,19: <
 1841,21: 8
 1841,23: ?
 1841,25: (
 1841,26: (
 1841,27: 1
 1841,29: <<
 1841,32: (
 1841,33: 7
 1841,34: )
 1841,35: )
 1841,37: <<
 1841,40: 8
 1841,41: )
 1841,43: :
 1841,45: (
 1841,46: (
 1841,47: 1
 1841,49: <<
 1841,52: (
 1841,53: 7
 1841,54: )
 1841,55: )
 1841,57: >>
 1841,60: 8
 1841,61: )
 1841,62: )
 
165 ( expression ) 
 1841,15: (
 1841,16: 7
 1841,17: )
 
165 CONSTANT 
 1841,16: 7
 
267 ) 
 1841,17: )
 
154 < 
 1841,19: <
 
252 CONSTANT 
 1841,21: 8
 
160 ? expression : conditional_expression 
 1841,23: ?
 1841,25: (
 1841,26: (
 1841,27: 1
 1841,29: <<
 1841,32: (
 1841,33: 7
 1841,34: )
 1841,35: )
 1841,37: <<
 1841,40: 8
 1841,41: )
 1841,43: :
 1841,45: (
 1841,46: (
 1841,47: 1
 1841,49: <<
 1841,52: (
 1841,53: 7
 1841,54: )
 1841,55: )
 1841,57: >>
 1841,60: 8
 1841,61: )
 
265 ( expression ) 
 1841,25: (
 1841,26: (
 1841,27: 1
 1841,29: <<
 1841,32: (
 1841,33: 7
 1841,34: )
 1841,35: )
 1841,37: <<
 1841,40: 8
 1841,41: )
 
165 ( expression ) 
 1841,26: (
 1841,27: 1
 1841,29: <<
 1841,32: (
 1841,33: 7
 1841,34: )
 1841,35: )
 
165 CONSTANT 
 1841,27: 1
 
153 << 
 1841,29: <<
 
249 ( expression ) 
 1841,32: (
 1841,33: 7
 1841,34: )
 
165 CONSTANT 
 1841,33: 7
 
267 ) 
 1841,34: )
 
267 ) 
 1841,35: )
 
153 << 
 1841,37: <<
 
249 CONSTANT 
 1841,40: 8
 
267 ) 
 1841,41: )
 
366 : conditional_expression 
 1841,43: :
 1841,45: (
 1841,46: (
 1841,47: 1
 1841,49: <<
 1841,52: (
 1841,53: 7
 1841,54: )
 1841,55: )
 1841,57: >>
 1841,60: 8
 1841,61: )
 
431 ( expression ) 
 1841,45: (
 1841,46: (
 1841,47: 1
 1841,49: <<
 1841,52: (
 1841,53: 7
 1841,54: )
 1841,55: )
 1841,57: >>
 1841,60: 8
 1841,61: )
 
165 ( expression ) 
 1841,46: (
 1841,47: 1
 1841,49: <<
 1841,52: (
 1841,53: 7
 1841,54: )
 1841,55: )
 
165 CONSTANT 
 1841,47: 1
 
153 << 
 1841,49: <<
 
249 ( expression ) 
 1841,52: (
 1841,53: 7
 1841,54: )
 
165 CONSTANT 
 1841,53: 7
 
267 ) 
 1841,54: )
 
267 ) 
 1841,55: )
 
153 >> 
 1841,57: >>
 
249 CONSTANT 
 1841,60: 8
 
267 ) 
 1841,61: )
 
267 ) 
 1841,62: )
 
204 , enumerator 
 1841,63: ,
 1842,3: _ISblank
 1842,11: VARIABLE
 1842,12: =
 1842,14: (
 1842,15: (
 1842,16: 8
 1842,17: )
 1842,19: <
 1842,21: 8
 1842,23: ?
 1842,25: (
 1842,26: (
 1842,27: 1
 1842,29: <<
 1842,32: (
 1842,33: 8
 1842,34: )
 1842,35: )
 1842,37: <<
 1842,40: 8
 1842,41: )
 1842,43: :
 1842,45: (
 1842,46: (
 1842,47: 1
 1842,49: <<
 1842,52: (
 1842,53: 8
 1842,54: )
 1842,55: )
 1842,57: >>
 1842,60: 8
 1842,61: )
 1842,62: )
 
340 NAME VARIABLE 
 1842,3: _ISblank
 1842,11: VARIABLE
 
65 VARIABLE 
 1842,11: VARIABLE
 
206 = constant_expression 
 1842,12: =
 1842,14: (
 1842,15: (
 1842,16: 8
 1842,17: )
 1842,19: <
 1842,21: 8
 1842,23: ?
 1842,25: (
 1842,26: (
 1842,27: 1
 1842,29: <<
 1842,32: (
 1842,33: 8
 1842,34: )
 1842,35: )
 1842,37: <<
 1842,40: 8
 1842,41: )
 1842,43: :
 1842,45: (
 1842,46: (
 1842,47: 1
 1842,49: <<
 1842,52: (
 1842,53: 8
 1842,54: )
 1842,55: )
 1842,57: >>
 1842,60: 8
 1842,61: )
 1842,62: )
 
341 ( expression ) 
 1842,14: (
 1842,15: (
 1842,16: 8
 1842,17: )
 1842,19: <
 1842,21: 8
 1842,23: ?
 1842,25: (
 1842,26: (
 1842,27: 1
 1842,29: <<
 1842,32: (
 1842,33: 8
 1842,34: )
 1842,35: )
 1842,37: <<
 1842,40: 8
 1842,41: )
 1842,43: :
 1842,45: (
 1842,46: (
 1842,47: 1
 1842,49: <<
 1842,52: (
 1842,53: 8
 1842,54: )
 1842,55: )
 1842,57: >>
 1842,60: 8
 1842,61: )
 1842,62: )
 
165 ( expression ) 
 1842,15: (
 1842,16: 8
 1842,17: )
 
165 CONSTANT 
 1842,16: 8
 
267 ) 
 1842,17: )
 
154 < 
 1842,19: <
 
252 CONSTANT 
 1842,21: 8
 
160 ? expression : conditional_expression 
 1842,23: ?
 1842,25: (
 1842,26: (
 1842,27: 1
 1842,29: <<
 1842,32: (
 1842,33: 8
 1842,34: )
 1842,35: )
 1842,37: <<
 1842,40: 8
 1842,41: )
 1842,43: :
 1842,45: (
 1842,46: (
 1842,47: 1
 1842,49: <<
 1842,52: (
 1842,53: 8
 1842,54: )
 1842,55: )
 1842,57: >>
 1842,60: 8
 1842,61: )
 
265 ( expression ) 
 1842,25: (
 1842,26: (
 1842,27: 1
 1842,29: <<
 1842,32: (
 1842,33: 8
 1842,34: )
 1842,35: )
 1842,37: <<
 1842,40: 8
 1842,41: )
 
165 ( expression ) 
 1842,26: (
 1842,27: 1
 1842,29: <<
 1842,32: (
 1842,33: 8
 1842,34: )
 1842,35: )
 
165 CONSTANT 
 1842,27: 1
 
153 << 
 1842,29: <<
 
249 ( expression ) 
 1842,32: (
 1842,33: 8
 1842,34: )
 
165 CONSTANT 
 1842,33: 8
 
267 ) 
 1842,34: )
 
267 ) 
 1842,35: )
 
153 << 
 1842,37: <<
 
249 CONSTANT 
 1842,40: 8
 
267 ) 
 1842,41: )
 
366 : conditional_expression 
 1842,43: :
 1842,45: (
 1842,46: (
 1842,47: 1
 1842,49: <<
 1842,52: (
 1842,53: 8
 1842,54: )
 1842,55: )
 1842,57: >>
 1842,60: 8
 1842,61: )
 
431 ( expression ) 
 1842,45: (
 1842,46: (
 1842,47: 1
 1842,49: <<
 1842,52: (
 1842,53: 8
 1842,54: )
 1842,55: )
 1842,57: >>
 1842,60: 8
 1842,61: )
 
165 ( expression ) 
 1842,46: (
 1842,47: 1
 1842,49: <<
 1842,52: (
 1842,53: 8
 1842,54: )
 1842,55: )
 
165 CONSTANT 
 1842,47: 1
 
153 << 
 1842,49: <<
 
249 ( expression ) 
 1842,52: (
 1842,53: 8
 1842,54: )
 
165 CONSTANT 
 1842,53: 8
 
267 ) 
 1842,54: )
 
267 ) 
 1842,55: )
 
153 >> 
 1842,57: >>
 
249 CONSTANT 
 1842,60: 8
 
267 ) 
 1842,61: )
 
267 ) 
 1842,62: )
 
204 , enumerator 
 1842,63: ,
 1843,3: _IScntrl
 1843,11: VARIABLE
 1843,12: =
 1843,14: (
 1843,15: (
 1843,16: 9
 1843,17: )
 1843,19: <
 1843,21: 8
 1843,23: ?
 1843,25: (
 1843,26: (
 1843,27: 1
 1843,29: <<
 1843,32: (
 1843,33: 9
 1843,34: )
 1843,35: )
 1843,37: <<
 1843,40: 8
 1843,41: )
 1843,43: :
 1843,45: (
 1843,46: (
 1843,47: 1
 1843,49: <<
 1843,52: (
 1843,53: 9
 1843,54: )
 1843,55: )
 1843,57: >>
 1843,60: 8
 1843,61: )
 1843,62: )
 
340 NAME VARIABLE 
 1843,3: _IScntrl
 1843,11: VARIABLE
 
65 VARIABLE 
 1843,11: VARIABLE
 
206 = constant_expression 
 1843,12: =
 1843,14: (
 1843,15: (
 1843,16: 9
 1843,17: )
 1843,19: <
 1843,21: 8
 1843,23: ?
 1843,25: (
 1843,26: (
 1843,27: 1
 1843,29: <<
 1843,32: (
 1843,33: 9
 1843,34: )
 1843,35: )
 1843,37: <<
 1843,40: 8
 1843,41: )
 1843,43: :
 1843,45: (
 1843,46: (
 1843,47: 1
 1843,49: <<
 1843,52: (
 1843,53: 9
 1843,54: )
 1843,55: )
 1843,57: >>
 1843,60: 8
 1843,61: )
 1843,62: )
 
341 ( expression ) 
 1843,14: (
 1843,15: (
 1843,16: 9
 1843,17: )
 1843,19: <
 1843,21: 8
 1843,23: ?
 1843,25: (
 1843,26: (
 1843,27: 1
 1843,29: <<
 1843,32: (
 1843,33: 9
 1843,34: )
 1843,35: )
 1843,37: <<
 1843,40: 8
 1843,41: )
 1843,43: :
 1843,45: (
 1843,46: (
 1843,47: 1
 1843,49: <<
 1843,52: (
 1843,53: 9
 1843,54: )
 1843,55: )
 1843,57: >>
 1843,60: 8
 1843,61: )
 1843,62: )
 
165 ( expression ) 
 1843,15: (
 1843,16: 9
 1843,17: )
 
165 CONSTANT 
 1843,16: 9
 
267 ) 
 1843,17: )
 
154 < 
 1843,19: <
 
252 CONSTANT 
 1843,21: 8
 
160 ? expression : conditional_expression 
 1843,23: ?
 1843,25: (
 1843,26: (
 1843,27: 1
 1843,29: <<
 1843,32: (
 1843,33: 9
 1843,34: )
 1843,35: )
 1843,37: <<
 1843,40: 8
 1843,41: )
 1843,43: :
 1843,45: (
 1843,46: (
 1843,47: 1
 1843,49: <<
 1843,52: (
 1843,53: 9
 1843,54: )
 1843,55: )
 1843,57: >>
 1843,60: 8
 1843,61: )
 
265 ( expression ) 
 1843,25: (
 1843,26: (
 1843,27: 1
 1843,29: <<
 1843,32: (
 1843,33: 9
 1843,34: )
 1843,35: )
 1843,37: <<
 1843,40: 8
 1843,41: )
 
165 ( expression ) 
 1843,26: (
 1843,27: 1
 1843,29: <<
 1843,32: (
 1843,33: 9
 1843,34: )
 1843,35: )
 
165 CONSTANT 
 1843,27: 1
 
153 << 
 1843,29: <<
 
249 ( expression ) 
 1843,32: (
 1843,33: 9
 1843,34: )
 
165 CONSTANT 
 1843,33: 9
 
267 ) 
 1843,34: )
 
267 ) 
 1843,35: )
 
153 << 
 1843,37: <<
 
249 CONSTANT 
 1843,40: 8
 
267 ) 
 1843,41: )
 
366 : conditional_expression 
 1843,43: :
 1843,45: (
 1843,46: (
 1843,47: 1
 1843,49: <<
 1843,52: (
 1843,53: 9
 1843,54: )
 1843,55: )
 1843,57: >>
 1843,60: 8
 1843,61: )
 
431 ( expression ) 
 1843,45: (
 1843,46: (
 1843,47: 1
 1843,49: <<
 1843,52: (
 1843,53: 9
 1843,54: )
 1843,55: )
 1843,57: >>
 1843,60: 8
 1843,61: )
 
165 ( expression ) 
 1843,46: (
 1843,47: 1
 1843,49: <<
 1843,52: (
 1843,53: 9
 1843,54: )
 1843,55: )
 
165 CONSTANT 
 1843,47: 1
 
153 << 
 1843,49: <<
 
249 ( expression ) 
 1843,52: (
 1843,53: 9
 1843,54: )
 
165 CONSTANT 
 1843,53: 9
 
267 ) 
 1843,54: )
 
267 ) 
 1843,55: )
 
153 >> 
 1843,57: >>
 
249 CONSTANT 
 1843,60: 8
 
267 ) 
 1843,61: )
 
267 ) 
 1843,62: )
 
204 , enumerator 
 1843,63: ,
 1844,3: _ISpunct
 1844,11: VARIABLE
 1844,12: =
 1844,14: (
 1844,15: (
 1844,16: 10
 1844,18: )
 1844,20: <
 1844,22: 8
 1844,24: ?
 1844,26: (
 1844,27: (
 1844,28: 1
 1844,30: <<
 1844,33: (
 1844,34: 10
 1844,36: )
 1844,37: )
 1844,39: <<
 1844,42: 8
 1844,43: )
 1844,45: :
 1844,47: (
 1844,48: (
 1844,49: 1
 1844,51: <<
 1844,54: (
 1844,55: 10
 1844,57: )
 1844,58: )
 1844,60: >>
 1844,63: 8
 1844,64: )
 1844,65: )
 
340 NAME VARIABLE 
 1844,3: _ISpunct
 1844,11: VARIABLE
 
65 VARIABLE 
 1844,11: VARIABLE
 
206 = constant_expression 
 1844,12: =
 1844,14: (
 1844,15: (
 1844,16: 10
 1844,18: )
 1844,20: <
 1844,22: 8
 1844,24: ?
 1844,26: (
 1844,27: (
 1844,28: 1
 1844,30: <<
 1844,33: (
 1844,34: 10
 1844,36: )
 1844,37: )
 1844,39: <<
 1844,42: 8
 1844,43: )
 1844,45: :
 1844,47: (
 1844,48: (
 1844,49: 1
 1844,51: <<
 1844,54: (
 1844,55: 10
 1844,57: )
 1844,58: )
 1844,60: >>
 1844,63: 8
 1844,64: )
 1844,65: )
 
341 ( expression ) 
 1844,14: (
 1844,15: (
 1844,16: 10
 1844,18: )
 1844,20: <
 1844,22: 8
 1844,24: ?
 1844,26: (
 1844,27: (
 1844,28: 1
 1844,30: <<
 1844,33: (
 1844,34: 10
 1844,36: )
 1844,37: )
 1844,39: <<
 1844,42: 8
 1844,43: )
 1844,45: :
 1844,47: (
 1844,48: (
 1844,49: 1
 1844,51: <<
 1844,54: (
 1844,55: 10
 1844,57: )
 1844,58: )
 1844,60: >>
 1844,63: 8
 1844,64: )
 1844,65: )
 
165 ( expression ) 
 1844,15: (
 1844,16: 10
 1844,18: )
 
165 CONSTANT 
 1844,16: 10
 
267 ) 
 1844,18: )
 
154 < 
 1844,20: <
 
252 CONSTANT 
 1844,22: 8
 
160 ? expression : conditional_expression 
 1844,24: ?
 1844,26: (
 1844,27: (
 1844,28: 1
 1844,30: <<
 1844,33: (
 1844,34: 10
 1844,36: )
 1844,37: )
 1844,39: <<
 1844,42: 8
 1844,43: )
 1844,45: :
 1844,47: (
 1844,48: (
 1844,49: 1
 1844,51: <<
 1844,54: (
 1844,55: 10
 1844,57: )
 1844,58: )
 1844,60: >>
 1844,63: 8
 1844,64: )
 
265 ( expression ) 
 1844,26: (
 1844,27: (
 1844,28: 1
 1844,30: <<
 1844,33: (
 1844,34: 10
 1844,36: )
 1844,37: )
 1844,39: <<
 1844,42: 8
 1844,43: )
 
165 ( expression ) 
 1844,27: (
 1844,28: 1
 1844,30: <<
 1844,33: (
 1844,34: 10
 1844,36: )
 1844,37: )
 
165 CONSTANT 
 1844,28: 1
 
153 << 
 1844,30: <<
 
249 ( expression ) 
 1844,33: (
 1844,34: 10
 1844,36: )
 
165 CONSTANT 
 1844,34: 10
 
267 ) 
 1844,36: )
 
267 ) 
 1844,37: )
 
153 << 
 1844,39: <<
 
249 CONSTANT 
 1844,42: 8
 
267 ) 
 1844,43: )
 
366 : conditional_expression 
 1844,45: :
 1844,47: (
 1844,48: (
 1844,49: 1
 1844,51: <<
 1844,54: (
 1844,55: 10
 1844,57: )
 1844,58: )
 1844,60: >>
 1844,63: 8
 1844,64: )
 
431 ( expression ) 
 1844,47: (
 1844,48: (
 1844,49: 1
 1844,51: <<
 1844,54: (
 1844,55: 10
 1844,57: )
 1844,58: )
 1844,60: >>
 1844,63: 8
 1844,64: )
 
165 ( expression ) 
 1844,48: (
 1844,49: 1
 1844,51: <<
 1844,54: (
 1844,55: 10
 1844,57: )
 1844,58: )
 
165 CONSTANT 
 1844,49: 1
 
153 << 
 1844,51: <<
 
249 ( expression ) 
 1844,54: (
 1844,55: 10
 1844,57: )
 
165 CONSTANT 
 1844,55: 10
 
267 ) 
 1844,57: )
 
267 ) 
 1844,58: )
 
153 >> 
 1844,60: >>
 
249 CONSTANT 
 1844,63: 8
 
267 ) 
 1844,64: )
 
267 ) 
 1844,65: )
 
204 , enumerator 
 1844,66: ,
 1845,3: _ISalnum
 1845,11: VARIABLE
 1845,12: =
 1845,14: (
 1845,15: (
 1845,16: 11
 1845,18: )
 1845,20: <
 1845,22: 8
 1845,24: ?
 1845,26: (
 1845,27: (
 1845,28: 1
 1845,30: <<
 1845,33: (
 1845,34: 11
 1845,36: )
 1845,37: )
 1845,39: <<
 1845,42: 8
 1845,43: )
 1845,45: :
 1845,47: (
 1845,48: (
 1845,49: 1
 1845,51: <<
 1845,54: (
 1845,55: 11
 1845,57: )
 1845,58: )
 1845,60: >>
 1845,63: 8
 1845,64: )
 1845,65: )
 
340 NAME VARIABLE 
 1845,3: _ISalnum
 1845,11: VARIABLE
 
65 VARIABLE 
 1845,11: VARIABLE
 
206 = constant_expression 
 1845,12: =
 1845,14: (
 1845,15: (
 1845,16: 11
 1845,18: )
 1845,20: <
 1845,22: 8
 1845,24: ?
 1845,26: (
 1845,27: (
 1845,28: 1
 1845,30: <<
 1845,33: (
 1845,34: 11
 1845,36: )
 1845,37: )
 1845,39: <<
 1845,42: 8
 1845,43: )
 1845,45: :
 1845,47: (
 1845,48: (
 1845,49: 1
 1845,51: <<
 1845,54: (
 1845,55: 11
 1845,57: )
 1845,58: )
 1845,60: >>
 1845,63: 8
 1845,64: )
 1845,65: )
 
341 ( expression ) 
 1845,14: (
 1845,15: (
 1845,16: 11
 1845,18: )
 1845,20: <
 1845,22: 8
 1845,24: ?
 1845,26: (
 1845,27: (
 1845,28: 1
 1845,30: <<
 1845,33: (
 1845,34: 11
 1845,36: )
 1845,37: )
 1845,39: <<
 1845,42: 8
 1845,43: )
 1845,45: :
 1845,47: (
 1845,48: (
 1845,49: 1
 1845,51: <<
 1845,54: (
 1845,55: 11
 1845,57: )
 1845,58: )
 1845,60: >>
 1845,63: 8
 1845,64: )
 1845,65: )
 
165 ( expression ) 
 1845,15: (
 1845,16: 11
 1845,18: )
 
165 CONSTANT 
 1845,16: 11
 
267 ) 
 1845,18: )
 
154 < 
 1845,20: <
 
252 CONSTANT 
 1845,22: 8
 
160 ? expression : conditional_expression 
 1845,24: ?
 1845,26: (
 1845,27: (
 1845,28: 1
 1845,30: <<
 1845,33: (
 1845,34: 11
 1845,36: )
 1845,37: )
 1845,39: <<
 1845,42: 8
 1845,43: )
 1845,45: :
 1845,47: (
 1845,48: (
 1845,49: 1
 1845,51: <<
 1845,54: (
 1845,55: 11
 1845,57: )
 1845,58: )
 1845,60: >>
 1845,63: 8
 1845,64: )
 
265 ( expression ) 
 1845,26: (
 1845,27: (
 1845,28: 1
 1845,30: <<
 1845,33: (
 1845,34: 11
 1845,36: )
 1845,37: )
 1845,39: <<
 1845,42: 8
 1845,43: )
 
165 ( expression ) 
 1845,27: (
 1845,28: 1
 1845,30: <<
 1845,33: (
 1845,34: 11
 1845,36: )
 1845,37: )
 
165 CONSTANT 
 1845,28: 1
 
153 << 
 1845,30: <<
 
249 ( expression ) 
 1845,33: (
 1845,34: 11
 1845,36: )
 
165 CONSTANT 
 1845,34: 11
 
267 ) 
 1845,36: )
 
267 ) 
 1845,37: )
 
153 << 
 1845,39: <<
 
249 CONSTANT 
 1845,42: 8
 
267 ) 
 1845,43: )
 
366 : conditional_expression 
 1845,45: :
 1845,47: (
 1845,48: (
 1845,49: 1
 1845,51: <<
 1845,54: (
 1845,55: 11
 1845,57: )
 1845,58: )
 1845,60: >>
 1845,63: 8
 1845,64: )
 
431 ( expression ) 
 1845,47: (
 1845,48: (
 1845,49: 1
 1845,51: <<
 1845,54: (
 1845,55: 11
 1845,57: )
 1845,58: )
 1845,60: >>
 1845,63: 8
 1845,64: )
 
165 ( expression ) 
 1845,48: (
 1845,49: 1
 1845,51: <<
 1845,54: (
 1845,55: 11
 1845,57: )
 1845,58: )
 
165 CONSTANT 
 1845,49: 1
 
153 << 
 1845,51: <<
 
249 ( expression ) 
 1845,54: (
 1845,55: 11
 1845,57: )
 
165 CONSTANT 
 1845,55: 11
 
267 ) 
 1845,57: )
 
267 ) 
 1845,58: )
 
153 >> 
 1845,60: >>
 
249 CONSTANT 
 1845,63: 8
 
267 ) 
 1845,64: )
 
267 ) 
 1845,65: )
 
339 } 
 1846,1: }
 
60 ; 
 1846,2: ;
 
23 extern 
 1848,1: extern
 
8 const 
 1848,8: const
 
8 unsigned 
 1848,14: unsigned
 
17 short 
 1848,23: short
 
17 int 
 1848,29: int
 
5 * option_type_qualifier_list option_pointer 
 1848,33: *
 1848,34: *
 
116 * option_type_qualifier_list option_pointer 
 1848,34: *
 
64 NAME VARIABLE 
 1848,35: __ctype_b_loc
 1848,48: VARIABLE
 
65 VARIABLE 
 1848,48: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1848,49: (
 1848,50: void
 1848,54: )
 
186 void 
 1848,50: void
 
187 ) 
 1848,54: )
 
60 ; 
 1849,7: ;
 
23 extern 
 1850,1: extern
 
8 const 
 1850,8: const
 
8 NAME TYPE 
 1850,14: __int32_t
 1850,23: TYPE
 
26 TYPE 
 1850,23: TYPE
 
5 * option_type_qualifier_list option_pointer 
 1850,24: *
 1850,25: *
 
116 * option_type_qualifier_list option_pointer 
 1850,25: *
 
64 NAME VARIABLE 
 1850,26: __ctype_tolower_loc
 1850,45: VARIABLE
 
65 VARIABLE 
 1850,45: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1850,46: (
 1850,47: void
 1850,51: )
 
186 void 
 1850,47: void
 
187 ) 
 1850,51: )
 
60 ; 
 1851,7: ;
 
23 extern 
 1852,1: extern
 
8 const 
 1852,8: const
 
8 NAME TYPE 
 1852,14: __int32_t
 1852,23: TYPE
 
26 TYPE 
 1852,23: TYPE
 
5 * option_type_qualifier_list option_pointer 
 1852,24: *
 1852,25: *
 
116 * option_type_qualifier_list option_pointer 
 1852,25: *
 
64 NAME VARIABLE 
 1852,26: __ctype_toupper_loc
 1852,45: VARIABLE
 
65 VARIABLE 
 1852,45: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1852,46: (
 1852,47: void
 1852,51: )
 
186 void 
 1852,47: void
 
187 ) 
 1852,51: )
 
60 ; 
 1853,7: ;
 
23 extern 
 1855,1: extern
 
8 int 
 1855,8: int
 
5 NAME VARIABLE 
 1855,12: isalnum
 1855,19: VARIABLE
 
65 VARIABLE 
 1855,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1855,20: (
 1855,21: int
 1855,24: )
 
186 int 
 1855,21: int
 
187 ) 
 1855,24: )
 
60 ; 
 1855,26: ;
 
23 extern 
 1856,1: extern
 
8 int 
 1856,8: int
 
5 NAME VARIABLE 
 1856,12: isalpha
 1856,19: VARIABLE
 
65 VARIABLE 
 1856,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1856,20: (
 1856,21: int
 1856,24: )
 
186 int 
 1856,21: int
 
187 ) 
 1856,24: )
 
60 ; 
 1856,26: ;
 
23 extern 
 1857,1: extern
 
8 int 
 1857,8: int
 
5 NAME VARIABLE 
 1857,12: iscntrl
 1857,19: VARIABLE
 
65 VARIABLE 
 1857,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1857,20: (
 1857,21: int
 1857,24: )
 
186 int 
 1857,21: int
 
187 ) 
 1857,24: )
 
60 ; 
 1857,26: ;
 
23 extern 
 1858,1: extern
 
8 int 
 1858,8: int
 
5 NAME VARIABLE 
 1858,12: isdigit
 1858,19: VARIABLE
 
65 VARIABLE 
 1858,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1858,20: (
 1858,21: int
 1858,24: )
 
186 int 
 1858,21: int
 
187 ) 
 1858,24: )
 
60 ; 
 1858,26: ;
 
23 extern 
 1859,1: extern
 
8 int 
 1859,8: int
 
5 NAME VARIABLE 
 1859,12: islower
 1859,19: VARIABLE
 
65 VARIABLE 
 1859,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1859,20: (
 1859,21: int
 1859,24: )
 
186 int 
 1859,21: int
 
187 ) 
 1859,24: )
 
60 ; 
 1859,26: ;
 
23 extern 
 1860,1: extern
 
8 int 
 1860,8: int
 
5 NAME VARIABLE 
 1860,12: isgraph
 1860,19: VARIABLE
 
65 VARIABLE 
 1860,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1860,20: (
 1860,21: int
 1860,24: )
 
186 int 
 1860,21: int
 
187 ) 
 1860,24: )
 
60 ; 
 1860,26: ;
 
23 extern 
 1861,1: extern
 
8 int 
 1861,8: int
 
5 NAME VARIABLE 
 1861,12: isprint
 1861,19: VARIABLE
 
65 VARIABLE 
 1861,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1861,20: (
 1861,21: int
 1861,24: )
 
186 int 
 1861,21: int
 
187 ) 
 1861,24: )
 
60 ; 
 1861,26: ;
 
23 extern 
 1862,1: extern
 
8 int 
 1862,8: int
 
5 NAME VARIABLE 
 1862,12: ispunct
 1862,19: VARIABLE
 
65 VARIABLE 
 1862,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1862,20: (
 1862,21: int
 1862,24: )
 
186 int 
 1862,21: int
 
187 ) 
 1862,24: )
 
60 ; 
 1862,26: ;
 
23 extern 
 1863,1: extern
 
8 int 
 1863,8: int
 
5 NAME VARIABLE 
 1863,12: isspace
 1863,19: VARIABLE
 
65 VARIABLE 
 1863,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1863,20: (
 1863,21: int
 1863,24: )
 
186 int 
 1863,21: int
 
187 ) 
 1863,24: )
 
60 ; 
 1863,26: ;
 
23 extern 
 1864,1: extern
 
8 int 
 1864,8: int
 
5 NAME VARIABLE 
 1864,12: isupper
 1864,19: VARIABLE
 
65 VARIABLE 
 1864,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1864,20: (
 1864,21: int
 1864,24: )
 
186 int 
 1864,21: int
 
187 ) 
 1864,24: )
 
60 ; 
 1864,26: ;
 
23 extern 
 1865,1: extern
 
8 int 
 1865,8: int
 
5 NAME VARIABLE 
 1865,12: isxdigit
 1865,20: VARIABLE
 
65 VARIABLE 
 1865,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1865,21: (
 1865,22: int
 1865,25: )
 
186 int 
 1865,22: int
 
187 ) 
 1865,25: )
 
60 ; 
 1865,27: ;
 
23 extern 
 1869,1: extern
 
8 int 
 1869,8: int
 
5 NAME VARIABLE 
 1869,12: tolower
 1869,19: VARIABLE
 
65 VARIABLE 
 1869,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1869,20: (
 1869,21: int
 1869,25: __c
 1869,28: VARIABLE
 1869,28: )
 
186 int 
 1869,21: int
 
298 NAME VARIABLE 
 1869,25: __c
 1869,28: VARIABLE
 
65 VARIABLE 
 1869,28: VARIABLE
 
187 ) 
 1869,28: )
 
60 ; 
 1869,30: ;
 
23 extern 
 1872,1: extern
 
8 int 
 1872,8: int
 
5 NAME VARIABLE 
 1872,12: toupper
 1872,19: VARIABLE
 
65 VARIABLE 
 1872,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1872,20: (
 1872,21: int
 1872,25: __c
 1872,28: VARIABLE
 1872,28: )
 
186 int 
 1872,21: int
 
298 NAME VARIABLE 
 1872,25: __c
 1872,28: VARIABLE
 
65 VARIABLE 
 1872,28: VARIABLE
 
187 ) 
 1872,28: )
 
60 ; 
 1872,30: ;
 
23 extern 
 1877,1: extern
 
8 int 
 1877,8: int
 
5 NAME VARIABLE 
 1877,12: isblank
 1877,19: VARIABLE
 
65 VARIABLE 
 1877,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1877,20: (
 1877,21: int
 1877,24: )
 
186 int 
 1877,21: int
 
187 ) 
 1877,24: )
 
60 ; 
 1877,26: ;
 
23 extern 
 1879,1: extern
 
8 int 
 1879,8: int
 
5 NAME VARIABLE 
 1879,12: isascii
 1879,19: VARIABLE
 
65 VARIABLE 
 1879,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1879,20: (
 1879,21: int
 1879,25: __c
 1879,28: VARIABLE
 1879,28: )
 
186 int 
 1879,21: int
 
298 NAME VARIABLE 
 1879,25: __c
 1879,28: VARIABLE
 
65 VARIABLE 
 1879,28: VARIABLE
 
187 ) 
 1879,28: )
 
60 ; 
 1879,30: ;
 
23 extern 
 1883,1: extern
 
8 int 
 1883,8: int
 
5 NAME VARIABLE 
 1883,12: toascii
 1883,19: VARIABLE
 
65 VARIABLE 
 1883,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1883,20: (
 1883,21: int
 1883,25: __c
 1883,28: VARIABLE
 1883,28: )
 
186 int 
 1883,21: int
 
298 NAME VARIABLE 
 1883,25: __c
 1883,28: VARIABLE
 
65 VARIABLE 
 1883,28: VARIABLE
 
187 ) 
 1883,28: )
 
60 ; 
 1883,30: ;
 
23 extern 
 1887,1: extern
 
8 int 
 1887,8: int
 
5 NAME VARIABLE 
 1887,12: _toupper
 1887,20: VARIABLE
 
65 VARIABLE 
 1887,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1887,21: (
 1887,22: int
 1887,25: )
 
186 int 
 1887,22: int
 
187 ) 
 1887,25: )
 
60 ; 
 1887,27: ;
 
23 extern 
 1888,1: extern
 
8 int 
 1888,8: int
 
5 NAME VARIABLE 
 1888,12: _tolower
 1888,20: VARIABLE
 
65 VARIABLE 
 1888,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1888,21: (
 1888,22: int
 1888,25: )
 
186 int 
 1888,22: int
 
187 ) 
 1888,25: )
 
60 ; 
 1888,27: ;
 
23 struct 
 1894,1: struct
 
22 NAME VARIABLE 
 1894,8: __locale_struct
 1894,23: VARIABLE
 
65 VARIABLE 
 1894,23: VARIABLE
 
89 { struct_declaration_list } 
 1895,1: {
 1897,3: struct
 1897,10: __locale_data
 1897,23: VARIABLE
 1897,24: *
 1897,25: __locales
 1897,34: VARIABLE
 1897,34: [
 1897,35: 13
 1897,37: ]
 1897,38: ;
 1900,3: const
 1900,9: unsigned
 1900,18: short
 1900,24: int
 1900,28: *
 1900,29: __ctype_b
 1900,38: VARIABLE
 1900,38: ;
 1901,3: const
 1901,9: int
 1901,13: *
 1901,14: __ctype_tolower
 1901,29: VARIABLE
 1901,29: ;
 1902,3: const
 1902,9: int
 1902,13: *
 1902,14: __ctype_toupper
 1902,29: VARIABLE
 1902,29: ;
 1905,3: const
 1905,9: char
 1905,14: *
 1905,15: __names
 1905,22: VARIABLE
 1905,22: [
 1905,23: 13
 1905,25: ]
 1905,26: ;
 1906,1: }
 
126 struct 
 1897,3: struct
 
22 NAME VARIABLE 
 1897,10: __locale_data
 1897,23: VARIABLE
 
65 VARIABLE 
 1897,23: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 1897,24: *
 
64 NAME VARIABLE 
 1897,25: __locales
 1897,34: VARIABLE
 
65 VARIABLE 
 1897,34: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 1897,34: [
 1897,35: 13
 1897,37: ]
 
188 CONSTANT 
 1897,35: 13
 
305 ] 
 1897,37: ]
 
313 ; 
 1897,38: ;
 
198 const 
 1900,3: const
 
133 unsigned 
 1900,9: unsigned
 
208 short 
 1900,18: short
 
208 int 
 1900,24: int
 
200 * option_type_qualifier_list option_pointer 
 1900,28: *
 
64 NAME VARIABLE 
 1900,29: __ctype_b
 1900,38: VARIABLE
 
65 VARIABLE 
 1900,38: VARIABLE
 
313 ; 
 1900,38: ;
 
198 const 
 1901,3: const
 
133 int 
 1901,9: int
 
200 * option_type_qualifier_list option_pointer 
 1901,13: *
 
64 NAME VARIABLE 
 1901,14: __ctype_tolower
 1901,29: VARIABLE
 
65 VARIABLE 
 1901,29: VARIABLE
 
313 ; 
 1901,29: ;
 
198 const 
 1902,3: const
 
133 int 
 1902,9: int
 
200 * option_type_qualifier_list option_pointer 
 1902,13: *
 
64 NAME VARIABLE 
 1902,14: __ctype_toupper
 1902,29: VARIABLE
 
65 VARIABLE 
 1902,29: VARIABLE
 
313 ; 
 1902,29: ;
 
198 const 
 1905,3: const
 
133 char 
 1905,9: char
 
200 * option_type_qualifier_list option_pointer 
 1905,14: *
 
64 NAME VARIABLE 
 1905,15: __names
 1905,22: VARIABLE
 
65 VARIABLE 
 1905,22: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 1905,22: [
 1905,23: 13
 1905,25: ]
 
188 CONSTANT 
 1905,23: 13
 
305 ] 
 1905,25: ]
 
313 ; 
 1905,26: ;
 
198 } 
 1906,1: }
 
60 ; 
 1906,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1908,1: typedef
 1908,9: struct
 1908,16: __locale_struct
 1908,31: VARIABLE
 
54 struct 
 1908,9: struct
 
22 NAME VARIABLE 
 1908,16: __locale_struct
 1908,31: VARIABLE
 
65 VARIABLE 
 1908,31: VARIABLE
 
6 * option_type_qualifier_list option_pointer 
 1908,32: *
 
64 NAME VARIABLE 
 1908,33: __locale_t
 1908,43: VARIABLE
 
65 VARIABLE 
 1908,43: VARIABLE
 
70 ; 
 1908,43: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1911,1: typedef
 1911,9: __locale_t
 1911,19: TYPE
 
54 NAME TYPE 
 1911,9: __locale_t
 1911,19: TYPE
 
26 TYPE 
 1911,19: TYPE
 
6 NAME VARIABLE 
 1911,20: locale_t
 1911,28: VARIABLE
 
65 VARIABLE 
 1911,28: VARIABLE
 
70 ; 
 1911,28: ;
 
23 extern 
 1914,1: extern
 
8 int 
 1914,8: int
 
5 NAME VARIABLE 
 1914,12: isalnum_l
 1914,21: VARIABLE
 
65 VARIABLE 
 1914,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1914,22: (
 1914,23: int
 1914,26: ,
 1914,28: locale_t
 1914,36: TYPE
 1914,36: )
 
186 int 
 1914,23: int
 
300 , parameter_declaration 
 1914,26: ,
 1914,28: locale_t
 1914,36: TYPE
 
391 NAME TYPE 
 1914,28: locale_t
 1914,36: TYPE
 
26 TYPE 
 1914,36: TYPE
 
187 ) 
 1914,36: )
 
60 ; 
 1914,38: ;
 
23 extern 
 1915,1: extern
 
8 int 
 1915,8: int
 
5 NAME VARIABLE 
 1915,12: isalpha_l
 1915,21: VARIABLE
 
65 VARIABLE 
 1915,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1915,22: (
 1915,23: int
 1915,26: ,
 1915,28: locale_t
 1915,36: TYPE
 1915,36: )
 
186 int 
 1915,23: int
 
300 , parameter_declaration 
 1915,26: ,
 1915,28: locale_t
 1915,36: TYPE
 
391 NAME TYPE 
 1915,28: locale_t
 1915,36: TYPE
 
26 TYPE 
 1915,36: TYPE
 
187 ) 
 1915,36: )
 
60 ; 
 1915,38: ;
 
23 extern 
 1916,1: extern
 
8 int 
 1916,8: int
 
5 NAME VARIABLE 
 1916,12: iscntrl_l
 1916,21: VARIABLE
 
65 VARIABLE 
 1916,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1916,22: (
 1916,23: int
 1916,26: ,
 1916,28: locale_t
 1916,36: TYPE
 1916,36: )
 
186 int 
 1916,23: int
 
300 , parameter_declaration 
 1916,26: ,
 1916,28: locale_t
 1916,36: TYPE
 
391 NAME TYPE 
 1916,28: locale_t
 1916,36: TYPE
 
26 TYPE 
 1916,36: TYPE
 
187 ) 
 1916,36: )
 
60 ; 
 1916,38: ;
 
23 extern 
 1917,1: extern
 
8 int 
 1917,8: int
 
5 NAME VARIABLE 
 1917,12: isdigit_l
 1917,21: VARIABLE
 
65 VARIABLE 
 1917,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1917,22: (
 1917,23: int
 1917,26: ,
 1917,28: locale_t
 1917,36: TYPE
 1917,36: )
 
186 int 
 1917,23: int
 
300 , parameter_declaration 
 1917,26: ,
 1917,28: locale_t
 1917,36: TYPE
 
391 NAME TYPE 
 1917,28: locale_t
 1917,36: TYPE
 
26 TYPE 
 1917,36: TYPE
 
187 ) 
 1917,36: )
 
60 ; 
 1917,38: ;
 
23 extern 
 1918,1: extern
 
8 int 
 1918,8: int
 
5 NAME VARIABLE 
 1918,12: islower_l
 1918,21: VARIABLE
 
65 VARIABLE 
 1918,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1918,22: (
 1918,23: int
 1918,26: ,
 1918,28: locale_t
 1918,36: TYPE
 1918,36: )
 
186 int 
 1918,23: int
 
300 , parameter_declaration 
 1918,26: ,
 1918,28: locale_t
 1918,36: TYPE
 
391 NAME TYPE 
 1918,28: locale_t
 1918,36: TYPE
 
26 TYPE 
 1918,36: TYPE
 
187 ) 
 1918,36: )
 
60 ; 
 1918,38: ;
 
23 extern 
 1919,1: extern
 
8 int 
 1919,8: int
 
5 NAME VARIABLE 
 1919,12: isgraph_l
 1919,21: VARIABLE
 
65 VARIABLE 
 1919,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1919,22: (
 1919,23: int
 1919,26: ,
 1919,28: locale_t
 1919,36: TYPE
 1919,36: )
 
186 int 
 1919,23: int
 
300 , parameter_declaration 
 1919,26: ,
 1919,28: locale_t
 1919,36: TYPE
 
391 NAME TYPE 
 1919,28: locale_t
 1919,36: TYPE
 
26 TYPE 
 1919,36: TYPE
 
187 ) 
 1919,36: )
 
60 ; 
 1919,38: ;
 
23 extern 
 1920,1: extern
 
8 int 
 1920,8: int
 
5 NAME VARIABLE 
 1920,12: isprint_l
 1920,21: VARIABLE
 
65 VARIABLE 
 1920,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1920,22: (
 1920,23: int
 1920,26: ,
 1920,28: locale_t
 1920,36: TYPE
 1920,36: )
 
186 int 
 1920,23: int
 
300 , parameter_declaration 
 1920,26: ,
 1920,28: locale_t
 1920,36: TYPE
 
391 NAME TYPE 
 1920,28: locale_t
 1920,36: TYPE
 
26 TYPE 
 1920,36: TYPE
 
187 ) 
 1920,36: )
 
60 ; 
 1920,38: ;
 
23 extern 
 1921,1: extern
 
8 int 
 1921,8: int
 
5 NAME VARIABLE 
 1921,12: ispunct_l
 1921,21: VARIABLE
 
65 VARIABLE 
 1921,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1921,22: (
 1921,23: int
 1921,26: ,
 1921,28: locale_t
 1921,36: TYPE
 1921,36: )
 
186 int 
 1921,23: int
 
300 , parameter_declaration 
 1921,26: ,
 1921,28: locale_t
 1921,36: TYPE
 
391 NAME TYPE 
 1921,28: locale_t
 1921,36: TYPE
 
26 TYPE 
 1921,36: TYPE
 
187 ) 
 1921,36: )
 
60 ; 
 1921,38: ;
 
23 extern 
 1922,1: extern
 
8 int 
 1922,8: int
 
5 NAME VARIABLE 
 1922,12: isspace_l
 1922,21: VARIABLE
 
65 VARIABLE 
 1922,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1922,22: (
 1922,23: int
 1922,26: ,
 1922,28: locale_t
 1922,36: TYPE
 1922,36: )
 
186 int 
 1922,23: int
 
300 , parameter_declaration 
 1922,26: ,
 1922,28: locale_t
 1922,36: TYPE
 
391 NAME TYPE 
 1922,28: locale_t
 1922,36: TYPE
 
26 TYPE 
 1922,36: TYPE
 
187 ) 
 1922,36: )
 
60 ; 
 1922,38: ;
 
23 extern 
 1923,1: extern
 
8 int 
 1923,8: int
 
5 NAME VARIABLE 
 1923,12: isupper_l
 1923,21: VARIABLE
 
65 VARIABLE 
 1923,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1923,22: (
 1923,23: int
 1923,26: ,
 1923,28: locale_t
 1923,36: TYPE
 1923,36: )
 
186 int 
 1923,23: int
 
300 , parameter_declaration 
 1923,26: ,
 1923,28: locale_t
 1923,36: TYPE
 
391 NAME TYPE 
 1923,28: locale_t
 1923,36: TYPE
 
26 TYPE 
 1923,36: TYPE
 
187 ) 
 1923,36: )
 
60 ; 
 1923,38: ;
 
23 extern 
 1924,1: extern
 
8 int 
 1924,8: int
 
5 NAME VARIABLE 
 1924,12: isxdigit_l
 1924,22: VARIABLE
 
65 VARIABLE 
 1924,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1924,23: (
 1924,24: int
 1924,27: ,
 1924,29: locale_t
 1924,37: TYPE
 1924,37: )
 
186 int 
 1924,24: int
 
300 , parameter_declaration 
 1924,27: ,
 1924,29: locale_t
 1924,37: TYPE
 
391 NAME TYPE 
 1924,29: locale_t
 1924,37: TYPE
 
26 TYPE 
 1924,37: TYPE
 
187 ) 
 1924,37: )
 
60 ; 
 1924,39: ;
 
23 extern 
 1926,1: extern
 
8 int 
 1926,8: int
 
5 NAME VARIABLE 
 1926,12: isblank_l
 1926,21: VARIABLE
 
65 VARIABLE 
 1926,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1926,22: (
 1926,23: int
 1926,26: ,
 1926,28: locale_t
 1926,36: TYPE
 1926,36: )
 
186 int 
 1926,23: int
 
300 , parameter_declaration 
 1926,26: ,
 1926,28: locale_t
 1926,36: TYPE
 
391 NAME TYPE 
 1926,28: locale_t
 1926,36: TYPE
 
26 TYPE 
 1926,36: TYPE
 
187 ) 
 1926,36: )
 
60 ; 
 1926,38: ;
 
23 extern 
 1930,1: extern
 
8 int 
 1930,8: int
 
5 NAME VARIABLE 
 1930,12: __tolower_l
 1930,23: VARIABLE
 
65 VARIABLE 
 1930,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1930,24: (
 1930,25: int
 1930,29: __c
 1930,32: VARIABLE
 1930,32: ,
 1930,34: locale_t
 1930,42: TYPE
 1930,43: __l
 1930,46: VARIABLE
 1930,46: )
 
186 int 
 1930,25: int
 
298 NAME VARIABLE 
 1930,29: __c
 1930,32: VARIABLE
 
65 VARIABLE 
 1930,32: VARIABLE
 
300 , parameter_declaration 
 1930,32: ,
 1930,34: locale_t
 1930,42: TYPE
 1930,43: __l
 1930,46: VARIABLE
 
391 NAME TYPE 
 1930,34: locale_t
 1930,42: TYPE
 
26 TYPE 
 1930,42: TYPE
 
298 NAME VARIABLE 
 1930,43: __l
 1930,46: VARIABLE
 
65 VARIABLE 
 1930,46: VARIABLE
 
187 ) 
 1930,46: )
 
60 ; 
 1930,48: ;
 
23 extern 
 1931,1: extern
 
8 int 
 1931,8: int
 
5 NAME VARIABLE 
 1931,12: tolower_l
 1931,21: VARIABLE
 
65 VARIABLE 
 1931,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1931,22: (
 1931,23: int
 1931,27: __c
 1931,30: VARIABLE
 1931,30: ,
 1931,32: locale_t
 1931,40: TYPE
 1931,41: __l
 1931,44: VARIABLE
 1931,44: )
 
186 int 
 1931,23: int
 
298 NAME VARIABLE 
 1931,27: __c
 1931,30: VARIABLE
 
65 VARIABLE 
 1931,30: VARIABLE
 
300 , parameter_declaration 
 1931,30: ,
 1931,32: locale_t
 1931,40: TYPE
 1931,41: __l
 1931,44: VARIABLE
 
391 NAME TYPE 
 1931,32: locale_t
 1931,40: TYPE
 
26 TYPE 
 1931,40: TYPE
 
298 NAME VARIABLE 
 1931,41: __l
 1931,44: VARIABLE
 
65 VARIABLE 
 1931,44: VARIABLE
 
187 ) 
 1931,44: )
 
60 ; 
 1931,46: ;
 
23 extern 
 1934,1: extern
 
8 int 
 1934,8: int
 
5 NAME VARIABLE 
 1934,12: __toupper_l
 1934,23: VARIABLE
 
65 VARIABLE 
 1934,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1934,24: (
 1934,25: int
 1934,29: __c
 1934,32: VARIABLE
 1934,32: ,
 1934,34: locale_t
 1934,42: TYPE
 1934,43: __l
 1934,46: VARIABLE
 1934,46: )
 
186 int 
 1934,25: int
 
298 NAME VARIABLE 
 1934,29: __c
 1934,32: VARIABLE
 
65 VARIABLE 
 1934,32: VARIABLE
 
300 , parameter_declaration 
 1934,32: ,
 1934,34: locale_t
 1934,42: TYPE
 1934,43: __l
 1934,46: VARIABLE
 
391 NAME TYPE 
 1934,34: locale_t
 1934,42: TYPE
 
26 TYPE 
 1934,42: TYPE
 
298 NAME VARIABLE 
 1934,43: __l
 1934,46: VARIABLE
 
65 VARIABLE 
 1934,46: VARIABLE
 
187 ) 
 1934,46: )
 
60 ; 
 1934,48: ;
 
23 extern 
 1935,1: extern
 
8 int 
 1935,8: int
 
5 NAME VARIABLE 
 1935,12: toupper_l
 1935,21: VARIABLE
 
65 VARIABLE 
 1935,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1935,22: (
 1935,23: int
 1935,27: __c
 1935,30: VARIABLE
 1935,30: ,
 1935,32: locale_t
 1935,40: TYPE
 1935,41: __l
 1935,44: VARIABLE
 1935,44: )
 
186 int 
 1935,23: int
 
298 NAME VARIABLE 
 1935,27: __c
 1935,30: VARIABLE
 
65 VARIABLE 
 1935,30: VARIABLE
 
300 , parameter_declaration 
 1935,30: ,
 1935,32: locale_t
 1935,40: TYPE
 1935,41: __l
 1935,44: VARIABLE
 
391 NAME TYPE 
 1935,32: locale_t
 1935,40: TYPE
 
26 TYPE 
 1935,40: TYPE
 
298 NAME VARIABLE 
 1935,41: __l
 1935,44: VARIABLE
 
65 VARIABLE 
 1935,44: VARIABLE
 
187 ) 
 1935,44: )
 
60 ; 
 1935,46: ;
 
23 int 
 1947,1: int
 
5 NAME VARIABLE 
 1947,5: getop
 1947,10: VARIABLE
 
65 VARIABLE 
 1947,10: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1947,10: (
 1947,11: char
 1947,15: [
 1947,16: ]
 1947,17: )
 
186 char 
 1947,11: char
 
231 [ option_assignment_expression ] 
 1947,15: [
 1947,16: ]
 
422 ] 
 1947,16: ]
 
187 ) 
 1947,17: )
 
60 ; 
 1947,18: ;
 
23 void 
 1949,1: void
 
5 NAME VARIABLE 
 1949,6: push
 1949,10: VARIABLE
 
65 VARIABLE 
 1949,10: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1949,10: (
 1949,11: double
 1949,18: f
 1949,19: VARIABLE
 1949,19: )
 
186 double 
 1949,11: double
 
298 NAME VARIABLE 
 1949,18: f
 1949,19: VARIABLE
 
65 VARIABLE 
 1949,19: VARIABLE
 
187 ) 
 1949,19: )
 
60 ; 
 1949,20: ;
 
23 double 
 1950,1: double
 
5 NAME VARIABLE 
 1950,8: pop
 1950,11: VARIABLE
 
65 VARIABLE 
 1950,11: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1950,11: (
 1950,12: void
 1950,16: )
 
186 void 
 1950,12: void
 
187 ) 
 1950,16: )
 
60 ; 
 1950,17: ;
 
23 void 
 1951,1: void
 
5 NAME VARIABLE 
 1951,6: view_head
 1951,15: VARIABLE
 
65 VARIABLE 
 1951,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1951,15: (
 1951,16: void
 1951,20: )
 
186 void 
 1951,16: void
 
187 ) 
 1951,20: )
 
60 ; 
 1951,21: ;
 
23 void 
 1952,1: void
 
5 NAME VARIABLE 
 1952,6: duplicate
 1952,15: VARIABLE
 
65 VARIABLE 
 1952,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1952,15: (
 1952,16: void
 1952,20: )
 
186 void 
 1952,16: void
 
187 ) 
 1952,20: )
 
60 ; 
 1952,21: ;
 
23 void 
 1953,1: void
 
5 NAME VARIABLE 
 1953,6: swap
 1953,10: VARIABLE
 
65 VARIABLE 
 1953,10: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1953,10: (
 1953,11: void
 1953,15: )
 
186 void 
 1953,11: void
 
187 ) 
 1953,15: )
 
60 ; 
 1953,16: ;
 
23 void 
 1954,1: void
 
5 NAME VARIABLE 
 1954,6: clear
 1954,11: VARIABLE
 
65 VARIABLE 
 1954,11: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1954,11: (
 1954,12: void
 1954,16: )
 
186 void 
 1954,12: void
 
187 ) 
 1954,16: )
 
60 ; 
 1954,17: ;
 
23 int 
 1956,1: int
 
5 NAME VARIABLE 
 1956,5: main
 1956,9: VARIABLE
 
65 VARIABLE 
 1956,9: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1956,9: (
 1956,10: void
 1956,14: )
 
186 void 
 1956,10: void
 
187 ) 
 1956,14: )
 
94 { option_block_item_list } 
 1957,1: {
 1958,3: int
 1958,7: type
 1958,11: VARIABLE
 1958,11: ;
 1959,3: double
 1959,10: op2
 1959,13: VARIABLE
 1959,13: ;
 1960,3: char
 1960,8: s
 1960,9: VARIABLE
 1960,9: [
 1960,10: 100
 1960,13: ]
 1960,14: ;
 1962,3: while
 1962,9: (
 1962,10: (
 1962,11: type
 1962,15: VARIABLE
 1962,16: =
 1962,18: getop
 1962,23: VARIABLE
 1962,23: (
 1962,24: s
 1962,25: VARIABLE
 1962,25: )
 1962,26: )
 1962,28: !=
 1964,30: (
 1964,31: -
 1964,32: 1
 1964,33: )
 1966,33: )
 1967,3: {
 1968,5: switch
 1968,12: (
 1968,13: type
 1968,17: VARIABLE
 1968,17: )
 1969,5: {
 1970,5: case
 1970,10: '0'
 1970,13: :
 1971,7: push
 1971,11: VARIABLE
 1971,11: (
 1971,12: atof
 1971,16: VARIABLE
 1971,16: (
 1971,17: s
 1971,18: VARIABLE
 1971,18: )
 1971,19: )
 1971,20: ;
 1972,7: break
 1972,12: ;
 1974,5: case
 1974,10: '+'
 1974,13: :
 1975,7: push
 1975,11: VARIABLE
 1975,11: (
 1975,12: pop
 1975,15: VARIABLE
 1975,15: (
 1975,16: )
 1975,18: +
 1975,20: pop
 1975,23: VARIABLE
 1975,23: (
 1975,24: )
 1975,25: )
 1975,26: ;
 1976,7: break
 1976,12: ;
 1978,5: case
 1978,10: '-'
 1978,13: :
 1979,7: op2
 1979,10: VARIABLE
 1979,11: =
 1979,13: pop
 1979,16: VARIABLE
 1979,16: (
 1979,17: )
 1979,18: ;
 1980,7: push
 1980,11: VARIABLE
 1980,11: (
 1980,12: pop
 1980,15: VARIABLE
 1980,15: (
 1980,16: )
 1980,18: -
 1980,20: op2
 1980,23: VARIABLE
 1980,23: )
 1980,24: ;
 1981,7: break
 1981,12: ;
 1983,5: case
 1983,10: '*'
 1983,13: :
 1984,7: push
 1984,11: VARIABLE
 1984,11: (
 1984,12: pop
 1984,15: VARIABLE
 1984,15: (
 1984,16: )
 1984,18: *
 1984,20: pop
 1984,23: VARIABLE
 1984,23: (
 1984,24: )
 1984,25: )
 1984,26: ;
 1985,7: break
 1985,12: ;
 1987,5: case
 1987,10: '/'
 1987,13: :
 1988,7: op2
 1988,10: VARIABLE
 1988,11: =
 1988,13: pop
 1988,16: VARIABLE
 1988,16: (
 1988,17: )
 1988,18: ;
 1990,7: if
 1990,10: (
 1990,11: op2
 1990,14: VARIABLE
 1990,15: !=
 1990,18: 0.0
 1990,21: )
 1991,7: {
 1992,9: push
 1992,13: VARIABLE
 1992,13: (
 1992,14: pop
 1992,17: VARIABLE
 1992,17: (
 1992,18: )
 1992,20: /
 1992,22: op2
 1992,25: VARIABLE
 1992,25: )
 1992,26: ;
 1993,7: }
 1994,7: else
 1995,7: {
 1996,9: printf
 1996,15: VARIABLE
 1996,15: (
 1996,16: "
 1996,40: )
 1996,41: ;
 1997,7: }
 1999,7: break
 1999,12: ;
 2001,5: case
 2001,10: '%'
 2001,13: :
 2002,7: op2
 2002,10: VARIABLE
 2002,11: =
 2002,13: pop
 2002,16: VARIABLE
 2002,16: (
 2002,17: )
 2002,18: ;
 2004,7: if
 2004,10: (
 2004,11: op2
 2004,14: VARIABLE
 2004,15: !=
 2004,18: 0.0
 2004,21: )
 2005,7: {
 2006,9: push
 2006,13: VARIABLE
 2006,13: (
 2006,14: (
 2006,15: int
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 2006,25: %
 2006,27: (
 2006,28: int
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 2006,35: )
 2006,36: ;
 2007,7: }
 2008,7: else
 2009,7: {
 2010,9: printf
 2010,15: VARIABLE
 2010,15: (
 2010,16: "
 2010,40: )
 2010,41: ;
 2011,7: }
 2012,7: break
 2012,12: ;
 2014,5: case
 2014,10: 'h'
 2014,13: :
 2015,7: view_head
 2015,16: VARIABLE
 2015,16: (
 2015,17: )
 2015,18: ;
 2016,7: break
 2016,12: ;
 2018,5: case
 2018,10: 'd'
 2018,13: :
 2019,7: duplicate
 2019,16: VARIABLE
 2019,16: (
 2019,17: )
 2019,18: ;
 2020,7: break
 2020,12: ;
 2022,5: case
 2022,10: 's'
 2022,13: :
 2023,7: swap
 2023,11: VARIABLE
 2023,11: (
 2023,12: )
 2023,13: ;
 2024,7: break
 2024,12: ;
 2026,5: case
 2026,10: 'c'
 2026,13: :
 2027,7: clear
 2027,12: VARIABLE
 2027,12: (
 2027,13: )
 2027,14: ;
 2028,7: break
 2028,12: ;
 2030,5: case
 2030,10: '\n'
 2030,14: :
 2031,7: printf
 2031,13: VARIABLE
 2031,13: (
 2031,14: "
 2031,30: ,
 2031,32: pop
 2031,35: VARIABLE
 2031,35: (
 2031,36: )
 2031,37: )
 2031,38: ;
 2032,7: break
 2032,12: ;
 2034,5: default
 2034,12: :
 2035,7: printf
 2035,13: VARIABLE
 2035,13: (
 2035,14: "
 2035,44: ,
 2035,46: s
 2035,47: VARIABLE
 2035,47: )
 2035,48: ;
 2036,7: break
 2036,12: ;
 2037,5: }
 2038,3: }
 2040,3: return
 2040,10: 0
 2040,11: ;
 2041,1: }
 
201 int 
 1958,3: int
 
93 NAME VARIABLE 
 1958,7: type
 1958,11: VARIABLE
 
65 VARIABLE 
 1958,11: VARIABLE
 
60 ; 
 1958,11: ;
 
201 double 
 1959,3: double
 
93 NAME VARIABLE 
 1959,10: op2
 1959,13: VARIABLE
 
65 VARIABLE 
 1959,13: VARIABLE
 
60 ; 
 1959,13: ;
 
201 char 
 1960,3: char
 
93 NAME VARIABLE 
 1960,8: s
 1960,9: VARIABLE
 
65 VARIABLE 
 1960,9: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1960,9: [
 1960,10: 100
 1960,13: ]
 
188 CONSTANT 
 1960,10: 100
 
305 ] 
 1960,13: ]
 
60 ; 
 1960,14: ;
 
320 while ( expression ) scoped_statement 
 1962,3: while
 1962,9: (
 1962,10: (
 1962,11: type
 1962,15: VARIABLE
 1962,16: =
 1962,18: getop
 1962,23: VARIABLE
 1962,23: (
 1962,24: s
 1962,25: VARIABLE
 1962,25: )
 1962,26: )
 1962,28: !=
 1964,30: (
 1964,31: -
 1964,32: 1
 1964,33: )
 1966,33: )
 1967,3: {
 1968,5: switch
 1968,12: (
 1968,13: type
 1968,17: VARIABLE
 1968,17: )
 1969,5: {
 1970,5: case
 1970,10: '0'
 1970,13: :
 1971,7: push
 1971,11: VARIABLE
 1971,11: (
 1971,12: atof
 1971,16: VARIABLE
 1971,16: (
 1971,17: s
 1971,18: VARIABLE
 1971,18: )
 1971,19: )
 1971,20: ;
 1972,7: break
 1972,12: ;
 1974,5: case
 1974,10: '+'
 1974,13: :
 1975,7: push
 1975,11: VARIABLE
 1975,11: (
 1975,12: pop
 1975,15: VARIABLE
 1975,15: (
 1975,16: )
 1975,18: +
 1975,20: pop
 1975,23: VARIABLE
 1975,23: (
 1975,24: )
 1975,25: )
 1975,26: ;
 1976,7: break
 1976,12: ;
 1978,5: case
 1978,10: '-'
 1978,13: :
 1979,7: op2
 1979,10: VARIABLE
 1979,11: =
 1979,13: pop
 1979,16: VARIABLE
 1979,16: (
 1979,17: )
 1979,18: ;
 1980,7: push
 1980,11: VARIABLE
 1980,11: (
 1980,12: pop
 1980,15: VARIABLE
 1980,15: (
 1980,16: )
 1980,18: -
 1980,20: op2
 1980,23: VARIABLE
 1980,23: )
 1980,24: ;
 1981,7: break
 1981,12: ;
 1983,5: case
 1983,10: '*'
 1983,13: :
 1984,7: push
 1984,11: VARIABLE
 1984,11: (
 1984,12: pop
 1984,15: VARIABLE
 1984,15: (
 1984,16: )
 1984,18: *
 1984,20: pop
 1984,23: VARIABLE
 1984,23: (
 1984,24: )
 1984,25: )
 1984,26: ;
 1985,7: break
 1985,12: ;
 1987,5: case
 1987,10: '/'
 1987,13: :
 1988,7: op2
 1988,10: VARIABLE
 1988,11: =
 1988,13: pop
 1988,16: VARIABLE
 1988,16: (
 1988,17: )
 1988,18: ;
 1990,7: if
 1990,10: (
 1990,11: op2
 1990,14: VARIABLE
 1990,15: !=
 1990,18: 0.0
 1990,21: )
 1991,7: {
 1992,9: push
 1992,13: VARIABLE
 1992,13: (
 1992,14: pop
 1992,17: VARIABLE
 1992,17: (
 1992,18: )
 1992,20: /
 1992,22: op2
 1992,25: VARIABLE
 1992,25: )
 1992,26: ;
 1993,7: }
 1994,7: else
 1995,7: {
 1996,9: printf
 1996,15: VARIABLE
 1996,15: (
 1996,16: "
 1996,40: )
 1996,41: ;
 1997,7: }
 1999,7: break
 1999,12: ;
 2001,5: case
 2001,10: '%'
 2001,13: :
 2002,7: op2
 2002,10: VARIABLE
 2002,11: =
 2002,13: pop
 2002,16: VARIABLE
 2002,16: (
 2002,17: )
 2002,18: ;
 2004,7: if
 2004,10: (
 2004,11: op2
 2004,14: VARIABLE
 2004,15: !=
 2004,18: 0.0
 2004,21: )
 2005,7: {
 2006,9: push
 2006,13: VARIABLE
 2006,13: (
 2006,14: (
 2006,15: int
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 2006,25: %
 2006,27: (
 2006,28: int
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 2006,35: )
 2006,36: ;
 2007,7: }
 2008,7: else
 2009,7: {
 2010,9: printf
 2010,15: VARIABLE
 2010,15: (
 2010,16: "
 2010,40: )
 2010,41: ;
 2011,7: }
 2012,7: break
 2012,12: ;
 2014,5: case
 2014,10: 'h'
 2014,13: :
 2015,7: view_head
 2015,16: VARIABLE
 2015,16: (
 2015,17: )
 2015,18: ;
 2016,7: break
 2016,12: ;
 2018,5: case
 2018,10: 'd'
 2018,13: :
 2019,7: duplicate
 2019,16: VARIABLE
 2019,16: (
 2019,17: )
 2019,18: ;
 2020,7: break
 2020,12: ;
 2022,5: case
 2022,10: 's'
 2022,13: :
 2023,7: swap
 2023,11: VARIABLE
 2023,11: (
 2023,12: )
 2023,13: ;
 2024,7: break
 2024,12: ;
 2026,5: case
 2026,10: 'c'
 2026,13: :
 2027,7: clear
 2027,12: VARIABLE
 2027,12: (
 2027,13: )
 2027,14: ;
 2028,7: break
 2028,12: ;
 2030,5: case
 2030,10: '\n'
 2030,14: :
 2031,7: printf
 2031,13: VARIABLE
 2031,13: (
 2031,14: "
 2031,30: ,
 2031,32: pop
 2031,35: VARIABLE
 2031,35: (
 2031,36: )
 2031,37: )
 2031,38: ;
 2032,7: break
 2032,12: ;
 2034,5: default
 2034,12: :
 2035,7: printf
 2035,13: VARIABLE
 2035,13: (
 2035,14: "
 2035,44: ,
 2035,46: s
 2035,47: VARIABLE
 2035,47: )
 2035,48: ;
 2036,7: break
 2036,12: ;
 2037,5: }
 2038,3: }
 
406 ( expression ) scoped_statement 
 1962,9: (
 1962,10: (
 1962,11: type
 1962,15: VARIABLE
 1962,16: =
 1962,18: getop
 1962,23: VARIABLE
 1962,23: (
 1962,24: s
 1962,25: VARIABLE
 1962,25: )
 1962,26: )
 1962,28: !=
 1964,30: (
 1964,31: -
 1964,32: 1
 1964,33: )
 1966,33: )
 1967,3: {
 1968,5: switch
 1968,12: (
 1968,13: type
 1968,17: VARIABLE
 1968,17: )
 1969,5: {
 1970,5: case
 1970,10: '0'
 1970,13: :
 1971,7: push
 1971,11: VARIABLE
 1971,11: (
 1971,12: atof
 1971,16: VARIABLE
 1971,16: (
 1971,17: s
 1971,18: VARIABLE
 1971,18: )
 1971,19: )
 1971,20: ;
 1972,7: break
 1972,12: ;
 1974,5: case
 1974,10: '+'
 1974,13: :
 1975,7: push
 1975,11: VARIABLE
 1975,11: (
 1975,12: pop
 1975,15: VARIABLE
 1975,15: (
 1975,16: )
 1975,18: +
 1975,20: pop
 1975,23: VARIABLE
 1975,23: (
 1975,24: )
 1975,25: )
 1975,26: ;
 1976,7: break
 1976,12: ;
 1978,5: case
 1978,10: '-'
 1978,13: :
 1979,7: op2
 1979,10: VARIABLE
 1979,11: =
 1979,13: pop
 1979,16: VARIABLE
 1979,16: (
 1979,17: )
 1979,18: ;
 1980,7: push
 1980,11: VARIABLE
 1980,11: (
 1980,12: pop
 1980,15: VARIABLE
 1980,15: (
 1980,16: )
 1980,18: -
 1980,20: op2
 1980,23: VARIABLE
 1980,23: )
 1980,24: ;
 1981,7: break
 1981,12: ;
 1983,5: case
 1983,10: '*'
 1983,13: :
 1984,7: push
 1984,11: VARIABLE
 1984,11: (
 1984,12: pop
 1984,15: VARIABLE
 1984,15: (
 1984,16: )
 1984,18: *
 1984,20: pop
 1984,23: VARIABLE
 1984,23: (
 1984,24: )
 1984,25: )
 1984,26: ;
 1985,7: break
 1985,12: ;
 1987,5: case
 1987,10: '/'
 1987,13: :
 1988,7: op2
 1988,10: VARIABLE
 1988,11: =
 1988,13: pop
 1988,16: VARIABLE
 1988,16: (
 1988,17: )
 1988,18: ;
 1990,7: if
 1990,10: (
 1990,11: op2
 1990,14: VARIABLE
 1990,15: !=
 1990,18: 0.0
 1990,21: )
 1991,7: {
 1992,9: push
 1992,13: VARIABLE
 1992,13: (
 1992,14: pop
 1992,17: VARIABLE
 1992,17: (
 1992,18: )
 1992,20: /
 1992,22: op2
 1992,25: VARIABLE
 1992,25: )
 1992,26: ;
 1993,7: }
 1994,7: else
 1995,7: {
 1996,9: printf
 1996,15: VARIABLE
 1996,15: (
 1996,16: "
 1996,40: )
 1996,41: ;
 1997,7: }
 1999,7: break
 1999,12: ;
 2001,5: case
 2001,10: '%'
 2001,13: :
 2002,7: op2
 2002,10: VARIABLE
 2002,11: =
 2002,13: pop
 2002,16: VARIABLE
 2002,16: (
 2002,17: )
 2002,18: ;
 2004,7: if
 2004,10: (
 2004,11: op2
 2004,14: VARIABLE
 2004,15: !=
 2004,18: 0.0
 2004,21: )
 2005,7: {
 2006,9: push
 2006,13: VARIABLE
 2006,13: (
 2006,14: (
 2006,15: int
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 2006,25: %
 2006,27: (
 2006,28: int
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 2006,35: )
 2006,36: ;
 2007,7: }
 2008,7: else
 2009,7: {
 2010,9: printf
 2010,15: VARIABLE
 2010,15: (
 2010,16: "
 2010,40: )
 2010,41: ;
 2011,7: }
 2012,7: break
 2012,12: ;
 2014,5: case
 2014,10: 'h'
 2014,13: :
 2015,7: view_head
 2015,16: VARIABLE
 2015,16: (
 2015,17: )
 2015,18: ;
 2016,7: break
 2016,12: ;
 2018,5: case
 2018,10: 'd'
 2018,13: :
 2019,7: duplicate
 2019,16: VARIABLE
 2019,16: (
 2019,17: )
 2019,18: ;
 2020,7: break
 2020,12: ;
 2022,5: case
 2022,10: 's'
 2022,13: :
 2023,7: swap
 2023,11: VARIABLE
 2023,11: (
 2023,12: )
 2023,13: ;
 2024,7: break
 2024,12: ;
 2026,5: case
 2026,10: 'c'
 2026,13: :
 2027,7: clear
 2027,12: VARIABLE
 2027,12: (
 2027,13: )
 2027,14: ;
 2028,7: break
 2028,12: ;
 2030,5: case
 2030,10: '\n'
 2030,14: :
 2031,7: printf
 2031,13: VARIABLE
 2031,13: (
 2031,14: "
 2031,30: ,
 2031,32: pop
 2031,35: VARIABLE
 2031,35: (
 2031,36: )
 2031,37: )
 2031,38: ;
 2032,7: break
 2032,12: ;
 2034,5: default
 2034,12: :
 2035,7: printf
 2035,13: VARIABLE
 2035,13: (
 2035,14: "
 2035,44: ,
 2035,46: s
 2035,47: VARIABLE
 2035,47: )
 2035,48: ;
 2036,7: break
 2036,12: ;
 2037,5: }
 2038,3: }
 
457 ( expression ) 
 1962,10: (
 1962,11: type
 1962,15: VARIABLE
 1962,16: =
 1962,18: getop
 1962,23: VARIABLE
 1962,23: (
 1962,24: s
 1962,25: VARIABLE
 1962,25: )
 1962,26: )
 
165 NAME VARIABLE 
 1962,11: type
 1962,15: VARIABLE
 
65 VARIABLE 
 1962,15: VARIABLE
 
181 = 
 1962,16: =
 
279 NAME VARIABLE 
 1962,18: getop
 1962,23: VARIABLE
 
179 VARIABLE 
 1962,23: VARIABLE
 
147 ( option_argument_expression_list ) 
 1962,23: (
 1962,24: s
 1962,25: VARIABLE
 1962,25: )
 
235 NAME VARIABLE 
 1962,24: s
 1962,25: VARIABLE
 
179 VARIABLE 
 1962,25: VARIABLE
 
351 ) 
 1962,25: )
 
267 ) 
 1962,26: )
 
155 != 
 1962,28: !=
 
257 ( expression ) 
 1964,30: (
 1964,31: -
 1964,32: 1
 1964,33: )
 
165 - 
 1964,31: -
 
149 CONSTANT 
 1964,32: 1
 
267 ) 
 1964,33: )
 
485 ) scoped_statement 
 1966,33: )
 1967,3: {
 1968,5: switch
 1968,12: (
 1968,13: type
 1968,17: VARIABLE
 1968,17: )
 1969,5: {
 1970,5: case
 1970,10: '0'
 1970,13: :
 1971,7: push
 1971,11: VARIABLE
 1971,11: (
 1971,12: atof
 1971,16: VARIABLE
 1971,16: (
 1971,17: s
 1971,18: VARIABLE
 1971,18: )
 1971,19: )
 1971,20: ;
 1972,7: break
 1972,12: ;
 1974,5: case
 1974,10: '+'
 1974,13: :
 1975,7: push
 1975,11: VARIABLE
 1975,11: (
 1975,12: pop
 1975,15: VARIABLE
 1975,15: (
 1975,16: )
 1975,18: +
 1975,20: pop
 1975,23: VARIABLE
 1975,23: (
 1975,24: )
 1975,25: )
 1975,26: ;
 1976,7: break
 1976,12: ;
 1978,5: case
 1978,10: '-'
 1978,13: :
 1979,7: op2
 1979,10: VARIABLE
 1979,11: =
 1979,13: pop
 1979,16: VARIABLE
 1979,16: (
 1979,17: )
 1979,18: ;
 1980,7: push
 1980,11: VARIABLE
 1980,11: (
 1980,12: pop
 1980,15: VARIABLE
 1980,15: (
 1980,16: )
 1980,18: -
 1980,20: op2
 1980,23: VARIABLE
 1980,23: )
 1980,24: ;
 1981,7: break
 1981,12: ;
 1983,5: case
 1983,10: '*'
 1983,13: :
 1984,7: push
 1984,11: VARIABLE
 1984,11: (
 1984,12: pop
 1984,15: VARIABLE
 1984,15: (
 1984,16: )
 1984,18: *
 1984,20: pop
 1984,23: VARIABLE
 1984,23: (
 1984,24: )
 1984,25: )
 1984,26: ;
 1985,7: break
 1985,12: ;
 1987,5: case
 1987,10: '/'
 1987,13: :
 1988,7: op2
 1988,10: VARIABLE
 1988,11: =
 1988,13: pop
 1988,16: VARIABLE
 1988,16: (
 1988,17: )
 1988,18: ;
 1990,7: if
 1990,10: (
 1990,11: op2
 1990,14: VARIABLE
 1990,15: !=
 1990,18: 0.0
 1990,21: )
 1991,7: {
 1992,9: push
 1992,13: VARIABLE
 1992,13: (
 1992,14: pop
 1992,17: VARIABLE
 1992,17: (
 1992,18: )
 1992,20: /
 1992,22: op2
 1992,25: VARIABLE
 1992,25: )
 1992,26: ;
 1993,7: }
 1994,7: else
 1995,7: {
 1996,9: printf
 1996,15: VARIABLE
 1996,15: (
 1996,16: "
 1996,40: )
 1996,41: ;
 1997,7: }
 1999,7: break
 1999,12: ;
 2001,5: case
 2001,10: '%'
 2001,13: :
 2002,7: op2
 2002,10: VARIABLE
 2002,11: =
 2002,13: pop
 2002,16: VARIABLE
 2002,16: (
 2002,17: )
 2002,18: ;
 2004,7: if
 2004,10: (
 2004,11: op2
 2004,14: VARIABLE
 2004,15: !=
 2004,18: 0.0
 2004,21: )
 2005,7: {
 2006,9: push
 2006,13: VARIABLE
 2006,13: (
 2006,14: (
 2006,15: int
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 2006,25: %
 2006,27: (
 2006,28: int
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 2006,35: )
 2006,36: ;
 2007,7: }
 2008,7: else
 2009,7: {
 2010,9: printf
 2010,15: VARIABLE
 2010,15: (
 2010,16: "
 2010,40: )
 2010,41: ;
 2011,7: }
 2012,7: break
 2012,12: ;
 2014,5: case
 2014,10: 'h'
 2014,13: :
 2015,7: view_head
 2015,16: VARIABLE
 2015,16: (
 2015,17: )
 2015,18: ;
 2016,7: break
 2016,12: ;
 2018,5: case
 2018,10: 'd'
 2018,13: :
 2019,7: duplicate
 2019,16: VARIABLE
 2019,16: (
 2019,17: )
 2019,18: ;
 2020,7: break
 2020,12: ;
 2022,5: case
 2022,10: 's'
 2022,13: :
 2023,7: swap
 2023,11: VARIABLE
 2023,11: (
 2023,12: )
 2023,13: ;
 2024,7: break
 2024,12: ;
 2026,5: case
 2026,10: 'c'
 2026,13: :
 2027,7: clear
 2027,12: VARIABLE
 2027,12: (
 2027,13: )
 2027,14: ;
 2028,7: break
 2028,12: ;
 2030,5: case
 2030,10: '\n'
 2030,14: :
 2031,7: printf
 2031,13: VARIABLE
 2031,13: (
 2031,14: "
 2031,30: ,
 2031,32: pop
 2031,35: VARIABLE
 2031,35: (
 2031,36: )
 2031,37: )
 2031,38: ;
 2032,7: break
 2032,12: ;
 2034,5: default
 2034,12: :
 2035,7: printf
 2035,13: VARIABLE
 2035,13: (
 2035,14: "
 2035,44: ,
 2035,46: s
 2035,47: VARIABLE
 2035,47: )
 2035,48: ;
 2036,7: break
 2036,12: ;
 2037,5: }
 2038,3: }
 
320 { option_block_item_list } 
 1967,3: {
 1968,5: switch
 1968,12: (
 1968,13: type
 1968,17: VARIABLE
 1968,17: )
 1969,5: {
 1970,5: case
 1970,10: '0'
 1970,13: :
 1971,7: push
 1971,11: VARIABLE
 1971,11: (
 1971,12: atof
 1971,16: VARIABLE
 1971,16: (
 1971,17: s
 1971,18: VARIABLE
 1971,18: )
 1971,19: )
 1971,20: ;
 1972,7: break
 1972,12: ;
 1974,5: case
 1974,10: '+'
 1974,13: :
 1975,7: push
 1975,11: VARIABLE
 1975,11: (
 1975,12: pop
 1975,15: VARIABLE
 1975,15: (
 1975,16: )
 1975,18: +
 1975,20: pop
 1975,23: VARIABLE
 1975,23: (
 1975,24: )
 1975,25: )
 1975,26: ;
 1976,7: break
 1976,12: ;
 1978,5: case
 1978,10: '-'
 1978,13: :
 1979,7: op2
 1979,10: VARIABLE
 1979,11: =
 1979,13: pop
 1979,16: VARIABLE
 1979,16: (
 1979,17: )
 1979,18: ;
 1980,7: push
 1980,11: VARIABLE
 1980,11: (
 1980,12: pop
 1980,15: VARIABLE
 1980,15: (
 1980,16: )
 1980,18: -
 1980,20: op2
 1980,23: VARIABLE
 1980,23: )
 1980,24: ;
 1981,7: break
 1981,12: ;
 1983,5: case
 1983,10: '*'
 1983,13: :
 1984,7: push
 1984,11: VARIABLE
 1984,11: (
 1984,12: pop
 1984,15: VARIABLE
 1984,15: (
 1984,16: )
 1984,18: *
 1984,20: pop
 1984,23: VARIABLE
 1984,23: (
 1984,24: )
 1984,25: )
 1984,26: ;
 1985,7: break
 1985,12: ;
 1987,5: case
 1987,10: '/'
 1987,13: :
 1988,7: op2
 1988,10: VARIABLE
 1988,11: =
 1988,13: pop
 1988,16: VARIABLE
 1988,16: (
 1988,17: )
 1988,18: ;
 1990,7: if
 1990,10: (
 1990,11: op2
 1990,14: VARIABLE
 1990,15: !=
 1990,18: 0.0
 1990,21: )
 1991,7: {
 1992,9: push
 1992,13: VARIABLE
 1992,13: (
 1992,14: pop
 1992,17: VARIABLE
 1992,17: (
 1992,18: )
 1992,20: /
 1992,22: op2
 1992,25: VARIABLE
 1992,25: )
 1992,26: ;
 1993,7: }
 1994,7: else
 1995,7: {
 1996,9: printf
 1996,15: VARIABLE
 1996,15: (
 1996,16: "
 1996,40: )
 1996,41: ;
 1997,7: }
 1999,7: break
 1999,12: ;
 2001,5: case
 2001,10: '%'
 2001,13: :
 2002,7: op2
 2002,10: VARIABLE
 2002,11: =
 2002,13: pop
 2002,16: VARIABLE
 2002,16: (
 2002,17: )
 2002,18: ;
 2004,7: if
 2004,10: (
 2004,11: op2
 2004,14: VARIABLE
 2004,15: !=
 2004,18: 0.0
 2004,21: )
 2005,7: {
 2006,9: push
 2006,13: VARIABLE
 2006,13: (
 2006,14: (
 2006,15: int
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 2006,25: %
 2006,27: (
 2006,28: int
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 2006,35: )
 2006,36: ;
 2007,7: }
 2008,7: else
 2009,7: {
 2010,9: printf
 2010,15: VARIABLE
 2010,15: (
 2010,16: "
 2010,40: )
 2010,41: ;
 2011,7: }
 2012,7: break
 2012,12: ;
 2014,5: case
 2014,10: 'h'
 2014,13: :
 2015,7: view_head
 2015,16: VARIABLE
 2015,16: (
 2015,17: )
 2015,18: ;
 2016,7: break
 2016,12: ;
 2018,5: case
 2018,10: 'd'
 2018,13: :
 2019,7: duplicate
 2019,16: VARIABLE
 2019,16: (
 2019,17: )
 2019,18: ;
 2020,7: break
 2020,12: ;
 2022,5: case
 2022,10: 's'
 2022,13: :
 2023,7: swap
 2023,11: VARIABLE
 2023,11: (
 2023,12: )
 2023,13: ;
 2024,7: break
 2024,12: ;
 2026,5: case
 2026,10: 'c'
 2026,13: :
 2027,7: clear
 2027,12: VARIABLE
 2027,12: (
 2027,13: )
 2027,14: ;
 2028,7: break
 2028,12: ;
 2030,5: case
 2030,10: '\n'
 2030,14: :
 2031,7: printf
 2031,13: VARIABLE
 2031,13: (
 2031,14: "
 2031,30: ,
 2031,32: pop
 2031,35: VARIABLE
 2031,35: (
 2031,36: )
 2031,37: )
 2031,38: ;
 2032,7: break
 2032,12: ;
 2034,5: default
 2034,12: :
 2035,7: printf
 2035,13: VARIABLE
 2035,13: (
 2035,14: "
 2035,44: ,
 2035,46: s
 2035,47: VARIABLE
 2035,47: )
 2035,48: ;
 2036,7: break
 2036,12: ;
 2037,5: }
 2038,3: }
 
320 switch ( expression ) scoped_statement 
 1968,5: switch
 1968,12: (
 1968,13: type
 1968,17: VARIABLE
 1968,17: )
 1969,5: {
 1970,5: case
 1970,10: '0'
 1970,13: :
 1971,7: push
 1971,11: VARIABLE
 1971,11: (
 1971,12: atof
 1971,16: VARIABLE
 1971,16: (
 1971,17: s
 1971,18: VARIABLE
 1971,18: )
 1971,19: )
 1971,20: ;
 1972,7: break
 1972,12: ;
 1974,5: case
 1974,10: '+'
 1974,13: :
 1975,7: push
 1975,11: VARIABLE
 1975,11: (
 1975,12: pop
 1975,15: VARIABLE
 1975,15: (
 1975,16: )
 1975,18: +
 1975,20: pop
 1975,23: VARIABLE
 1975,23: (
 1975,24: )
 1975,25: )
 1975,26: ;
 1976,7: break
 1976,12: ;
 1978,5: case
 1978,10: '-'
 1978,13: :
 1979,7: op2
 1979,10: VARIABLE
 1979,11: =
 1979,13: pop
 1979,16: VARIABLE
 1979,16: (
 1979,17: )
 1979,18: ;
 1980,7: push
 1980,11: VARIABLE
 1980,11: (
 1980,12: pop
 1980,15: VARIABLE
 1980,15: (
 1980,16: )
 1980,18: -
 1980,20: op2
 1980,23: VARIABLE
 1980,23: )
 1980,24: ;
 1981,7: break
 1981,12: ;
 1983,5: case
 1983,10: '*'
 1983,13: :
 1984,7: push
 1984,11: VARIABLE
 1984,11: (
 1984,12: pop
 1984,15: VARIABLE
 1984,15: (
 1984,16: )
 1984,18: *
 1984,20: pop
 1984,23: VARIABLE
 1984,23: (
 1984,24: )
 1984,25: )
 1984,26: ;
 1985,7: break
 1985,12: ;
 1987,5: case
 1987,10: '/'
 1987,13: :
 1988,7: op2
 1988,10: VARIABLE
 1988,11: =
 1988,13: pop
 1988,16: VARIABLE
 1988,16: (
 1988,17: )
 1988,18: ;
 1990,7: if
 1990,10: (
 1990,11: op2
 1990,14: VARIABLE
 1990,15: !=
 1990,18: 0.0
 1990,21: )
 1991,7: {
 1992,9: push
 1992,13: VARIABLE
 1992,13: (
 1992,14: pop
 1992,17: VARIABLE
 1992,17: (
 1992,18: )
 1992,20: /
 1992,22: op2
 1992,25: VARIABLE
 1992,25: )
 1992,26: ;
 1993,7: }
 1994,7: else
 1995,7: {
 1996,9: printf
 1996,15: VARIABLE
 1996,15: (
 1996,16: "
 1996,40: )
 1996,41: ;
 1997,7: }
 1999,7: break
 1999,12: ;
 2001,5: case
 2001,10: '%'
 2001,13: :
 2002,7: op2
 2002,10: VARIABLE
 2002,11: =
 2002,13: pop
 2002,16: VARIABLE
 2002,16: (
 2002,17: )
 2002,18: ;
 2004,7: if
 2004,10: (
 2004,11: op2
 2004,14: VARIABLE
 2004,15: !=
 2004,18: 0.0
 2004,21: )
 2005,7: {
 2006,9: push
 2006,13: VARIABLE
 2006,13: (
 2006,14: (
 2006,15: int
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 2006,25: %
 2006,27: (
 2006,28: int
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 2006,35: )
 2006,36: ;
 2007,7: }
 2008,7: else
 2009,7: {
 2010,9: printf
 2010,15: VARIABLE
 2010,15: (
 2010,16: "
 2010,40: )
 2010,41: ;
 2011,7: }
 2012,7: break
 2012,12: ;
 2014,5: case
 2014,10: 'h'
 2014,13: :
 2015,7: view_head
 2015,16: VARIABLE
 2015,16: (
 2015,17: )
 2015,18: ;
 2016,7: break
 2016,12: ;
 2018,5: case
 2018,10: 'd'
 2018,13: :
 2019,7: duplicate
 2019,16: VARIABLE
 2019,16: (
 2019,17: )
 2019,18: ;
 2020,7: break
 2020,12: ;
 2022,5: case
 2022,10: 's'
 2022,13: :
 2023,7: swap
 2023,11: VARIABLE
 2023,11: (
 2023,12: )
 2023,13: ;
 2024,7: break
 2024,12: ;
 2026,5: case
 2026,10: 'c'
 2026,13: :
 2027,7: clear
 2027,12: VARIABLE
 2027,12: (
 2027,13: )
 2027,14: ;
 2028,7: break
 2028,12: ;
 2030,5: case
 2030,10: '\n'
 2030,14: :
 2031,7: printf
 2031,13: VARIABLE
 2031,13: (
 2031,14: "
 2031,30: ,
 2031,32: pop
 2031,35: VARIABLE
 2031,35: (
 2031,36: )
 2031,37: )
 2031,38: ;
 2032,7: break
 2032,12: ;
 2034,5: default
 2034,12: :
 2035,7: printf
 2035,13: VARIABLE
 2035,13: (
 2035,14: "
 2035,44: ,
 2035,46: s
 2035,47: VARIABLE
 2035,47: )
 2035,48: ;
 2036,7: break
 2036,12: ;
 2037,5: }
 
405 ( expression ) scoped_statement 
 1968,12: (
 1968,13: type
 1968,17: VARIABLE
 1968,17: )
 1969,5: {
 1970,5: case
 1970,10: '0'
 1970,13: :
 1971,7: push
 1971,11: VARIABLE
 1971,11: (
 1971,12: atof
 1971,16: VARIABLE
 1971,16: (
 1971,17: s
 1971,18: VARIABLE
 1971,18: )
 1971,19: )
 1971,20: ;
 1972,7: break
 1972,12: ;
 1974,5: case
 1974,10: '+'
 1974,13: :
 1975,7: push
 1975,11: VARIABLE
 1975,11: (
 1975,12: pop
 1975,15: VARIABLE
 1975,15: (
 1975,16: )
 1975,18: +
 1975,20: pop
 1975,23: VARIABLE
 1975,23: (
 1975,24: )
 1975,25: )
 1975,26: ;
 1976,7: break
 1976,12: ;
 1978,5: case
 1978,10: '-'
 1978,13: :
 1979,7: op2
 1979,10: VARIABLE
 1979,11: =
 1979,13: pop
 1979,16: VARIABLE
 1979,16: (
 1979,17: )
 1979,18: ;
 1980,7: push
 1980,11: VARIABLE
 1980,11: (
 1980,12: pop
 1980,15: VARIABLE
 1980,15: (
 1980,16: )
 1980,18: -
 1980,20: op2
 1980,23: VARIABLE
 1980,23: )
 1980,24: ;
 1981,7: break
 1981,12: ;
 1983,5: case
 1983,10: '*'
 1983,13: :
 1984,7: push
 1984,11: VARIABLE
 1984,11: (
 1984,12: pop
 1984,15: VARIABLE
 1984,15: (
 1984,16: )
 1984,18: *
 1984,20: pop
 1984,23: VARIABLE
 1984,23: (
 1984,24: )
 1984,25: )
 1984,26: ;
 1985,7: break
 1985,12: ;
 1987,5: case
 1987,10: '/'
 1987,13: :
 1988,7: op2
 1988,10: VARIABLE
 1988,11: =
 1988,13: pop
 1988,16: VARIABLE
 1988,16: (
 1988,17: )
 1988,18: ;
 1990,7: if
 1990,10: (
 1990,11: op2
 1990,14: VARIABLE
 1990,15: !=
 1990,18: 0.0
 1990,21: )
 1991,7: {
 1992,9: push
 1992,13: VARIABLE
 1992,13: (
 1992,14: pop
 1992,17: VARIABLE
 1992,17: (
 1992,18: )
 1992,20: /
 1992,22: op2
 1992,25: VARIABLE
 1992,25: )
 1992,26: ;
 1993,7: }
 1994,7: else
 1995,7: {
 1996,9: printf
 1996,15: VARIABLE
 1996,15: (
 1996,16: "
 1996,40: )
 1996,41: ;
 1997,7: }
 1999,7: break
 1999,12: ;
 2001,5: case
 2001,10: '%'
 2001,13: :
 2002,7: op2
 2002,10: VARIABLE
 2002,11: =
 2002,13: pop
 2002,16: VARIABLE
 2002,16: (
 2002,17: )
 2002,18: ;
 2004,7: if
 2004,10: (
 2004,11: op2
 2004,14: VARIABLE
 2004,15: !=
 2004,18: 0.0
 2004,21: )
 2005,7: {
 2006,9: push
 2006,13: VARIABLE
 2006,13: (
 2006,14: (
 2006,15: int
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 2006,25: %
 2006,27: (
 2006,28: int
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 2006,35: )
 2006,36: ;
 2007,7: }
 2008,7: else
 2009,7: {
 2010,9: printf
 2010,15: VARIABLE
 2010,15: (
 2010,16: "
 2010,40: )
 2010,41: ;
 2011,7: }
 2012,7: break
 2012,12: ;
 2014,5: case
 2014,10: 'h'
 2014,13: :
 2015,7: view_head
 2015,16: VARIABLE
 2015,16: (
 2015,17: )
 2015,18: ;
 2016,7: break
 2016,12: ;
 2018,5: case
 2018,10: 'd'
 2018,13: :
 2019,7: duplicate
 2019,16: VARIABLE
 2019,16: (
 2019,17: )
 2019,18: ;
 2020,7: break
 2020,12: ;
 2022,5: case
 2022,10: 's'
 2022,13: :
 2023,7: swap
 2023,11: VARIABLE
 2023,11: (
 2023,12: )
 2023,13: ;
 2024,7: break
 2024,12: ;
 2026,5: case
 2026,10: 'c'
 2026,13: :
 2027,7: clear
 2027,12: VARIABLE
 2027,12: (
 2027,13: )
 2027,14: ;
 2028,7: break
 2028,12: ;
 2030,5: case
 2030,10: '\n'
 2030,14: :
 2031,7: printf
 2031,13: VARIABLE
 2031,13: (
 2031,14: "
 2031,30: ,
 2031,32: pop
 2031,35: VARIABLE
 2031,35: (
 2031,36: )
 2031,37: )
 2031,38: ;
 2032,7: break
 2032,12: ;
 2034,5: default
 2034,12: :
 2035,7: printf
 2035,13: VARIABLE
 2035,13: (
 2035,14: "
 2035,44: ,
 2035,46: s
 2035,47: VARIABLE
 2035,47: )
 2035,48: ;
 2036,7: break
 2036,12: ;
 2037,5: }
 
456 NAME VARIABLE 
 1968,13: type
 1968,17: VARIABLE
 
179 VARIABLE 
 1968,17: VARIABLE
 
484 ) scoped_statement 
 1968,17: )
 1969,5: {
 1970,5: case
 1970,10: '0'
 1970,13: :
 1971,7: push
 1971,11: VARIABLE
 1971,11: (
 1971,12: atof
 1971,16: VARIABLE
 1971,16: (
 1971,17: s
 1971,18: VARIABLE
 1971,18: )
 1971,19: )
 1971,20: ;
 1972,7: break
 1972,12: ;
 1974,5: case
 1974,10: '+'
 1974,13: :
 1975,7: push
 1975,11: VARIABLE
 1975,11: (
 1975,12: pop
 1975,15: VARIABLE
 1975,15: (
 1975,16: )
 1975,18: +
 1975,20: pop
 1975,23: VARIABLE
 1975,23: (
 1975,24: )
 1975,25: )
 1975,26: ;
 1976,7: break
 1976,12: ;
 1978,5: case
 1978,10: '-'
 1978,13: :
 1979,7: op2
 1979,10: VARIABLE
 1979,11: =
 1979,13: pop
 1979,16: VARIABLE
 1979,16: (
 1979,17: )
 1979,18: ;
 1980,7: push
 1980,11: VARIABLE
 1980,11: (
 1980,12: pop
 1980,15: VARIABLE
 1980,15: (
 1980,16: )
 1980,18: -
 1980,20: op2
 1980,23: VARIABLE
 1980,23: )
 1980,24: ;
 1981,7: break
 1981,12: ;
 1983,5: case
 1983,10: '*'
 1983,13: :
 1984,7: push
 1984,11: VARIABLE
 1984,11: (
 1984,12: pop
 1984,15: VARIABLE
 1984,15: (
 1984,16: )
 1984,18: *
 1984,20: pop
 1984,23: VARIABLE
 1984,23: (
 1984,24: )
 1984,25: )
 1984,26: ;
 1985,7: break
 1985,12: ;
 1987,5: case
 1987,10: '/'
 1987,13: :
 1988,7: op2
 1988,10: VARIABLE
 1988,11: =
 1988,13: pop
 1988,16: VARIABLE
 1988,16: (
 1988,17: )
 1988,18: ;
 1990,7: if
 1990,10: (
 1990,11: op2
 1990,14: VARIABLE
 1990,15: !=
 1990,18: 0.0
 1990,21: )
 1991,7: {
 1992,9: push
 1992,13: VARIABLE
 1992,13: (
 1992,14: pop
 1992,17: VARIABLE
 1992,17: (
 1992,18: )
 1992,20: /
 1992,22: op2
 1992,25: VARIABLE
 1992,25: )
 1992,26: ;
 1993,7: }
 1994,7: else
 1995,7: {
 1996,9: printf
 1996,15: VARIABLE
 1996,15: (
 1996,16: "
 1996,40: )
 1996,41: ;
 1997,7: }
 1999,7: break
 1999,12: ;
 2001,5: case
 2001,10: '%'
 2001,13: :
 2002,7: op2
 2002,10: VARIABLE
 2002,11: =
 2002,13: pop
 2002,16: VARIABLE
 2002,16: (
 2002,17: )
 2002,18: ;
 2004,7: if
 2004,10: (
 2004,11: op2
 2004,14: VARIABLE
 2004,15: !=
 2004,18: 0.0
 2004,21: )
 2005,7: {
 2006,9: push
 2006,13: VARIABLE
 2006,13: (
 2006,14: (
 2006,15: int
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 2006,25: %
 2006,27: (
 2006,28: int
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 2006,35: )
 2006,36: ;
 2007,7: }
 2008,7: else
 2009,7: {
 2010,9: printf
 2010,15: VARIABLE
 2010,15: (
 2010,16: "
 2010,40: )
 2010,41: ;
 2011,7: }
 2012,7: break
 2012,12: ;
 2014,5: case
 2014,10: 'h'
 2014,13: :
 2015,7: view_head
 2015,16: VARIABLE
 2015,16: (
 2015,17: )
 2015,18: ;
 2016,7: break
 2016,12: ;
 2018,5: case
 2018,10: 'd'
 2018,13: :
 2019,7: duplicate
 2019,16: VARIABLE
 2019,16: (
 2019,17: )
 2019,18: ;
 2020,7: break
 2020,12: ;
 2022,5: case
 2022,10: 's'
 2022,13: :
 2023,7: swap
 2023,11: VARIABLE
 2023,11: (
 2023,12: )
 2023,13: ;
 2024,7: break
 2024,12: ;
 2026,5: case
 2026,10: 'c'
 2026,13: :
 2027,7: clear
 2027,12: VARIABLE
 2027,12: (
 2027,13: )
 2027,14: ;
 2028,7: break
 2028,12: ;
 2030,5: case
 2030,10: '\n'
 2030,14: :
 2031,7: printf
 2031,13: VARIABLE
 2031,13: (
 2031,14: "
 2031,30: ,
 2031,32: pop
 2031,35: VARIABLE
 2031,35: (
 2031,36: )
 2031,37: )
 2031,38: ;
 2032,7: break
 2032,12: ;
 2034,5: default
 2034,12: :
 2035,7: printf
 2035,13: VARIABLE
 2035,13: (
 2035,14: "
 2035,44: ,
 2035,46: s
 2035,47: VARIABLE
 2035,47: )
 2035,48: ;
 2036,7: break
 2036,12: ;
 2037,5: }
 
320 { option_block_item_list } 
 1969,5: {
 1970,5: case
 1970,10: '0'
 1970,13: :
 1971,7: push
 1971,11: VARIABLE
 1971,11: (
 1971,12: atof
 1971,16: VARIABLE
 1971,16: (
 1971,17: s
 1971,18: VARIABLE
 1971,18: )
 1971,19: )
 1971,20: ;
 1972,7: break
 1972,12: ;
 1974,5: case
 1974,10: '+'
 1974,13: :
 1975,7: push
 1975,11: VARIABLE
 1975,11: (
 1975,12: pop
 1975,15: VARIABLE
 1975,15: (
 1975,16: )
 1975,18: +
 1975,20: pop
 1975,23: VARIABLE
 1975,23: (
 1975,24: )
 1975,25: )
 1975,26: ;
 1976,7: break
 1976,12: ;
 1978,5: case
 1978,10: '-'
 1978,13: :
 1979,7: op2
 1979,10: VARIABLE
 1979,11: =
 1979,13: pop
 1979,16: VARIABLE
 1979,16: (
 1979,17: )
 1979,18: ;
 1980,7: push
 1980,11: VARIABLE
 1980,11: (
 1980,12: pop
 1980,15: VARIABLE
 1980,15: (
 1980,16: )
 1980,18: -
 1980,20: op2
 1980,23: VARIABLE
 1980,23: )
 1980,24: ;
 1981,7: break
 1981,12: ;
 1983,5: case
 1983,10: '*'
 1983,13: :
 1984,7: push
 1984,11: VARIABLE
 1984,11: (
 1984,12: pop
 1984,15: VARIABLE
 1984,15: (
 1984,16: )
 1984,18: *
 1984,20: pop
 1984,23: VARIABLE
 1984,23: (
 1984,24: )
 1984,25: )
 1984,26: ;
 1985,7: break
 1985,12: ;
 1987,5: case
 1987,10: '/'
 1987,13: :
 1988,7: op2
 1988,10: VARIABLE
 1988,11: =
 1988,13: pop
 1988,16: VARIABLE
 1988,16: (
 1988,17: )
 1988,18: ;
 1990,7: if
 1990,10: (
 1990,11: op2
 1990,14: VARIABLE
 1990,15: !=
 1990,18: 0.0
 1990,21: )
 1991,7: {
 1992,9: push
 1992,13: VARIABLE
 1992,13: (
 1992,14: pop
 1992,17: VARIABLE
 1992,17: (
 1992,18: )
 1992,20: /
 1992,22: op2
 1992,25: VARIABLE
 1992,25: )
 1992,26: ;
 1993,7: }
 1994,7: else
 1995,7: {
 1996,9: printf
 1996,15: VARIABLE
 1996,15: (
 1996,16: "
 1996,40: )
 1996,41: ;
 1997,7: }
 1999,7: break
 1999,12: ;
 2001,5: case
 2001,10: '%'
 2001,13: :
 2002,7: op2
 2002,10: VARIABLE
 2002,11: =
 2002,13: pop
 2002,16: VARIABLE
 2002,16: (
 2002,17: )
 2002,18: ;
 2004,7: if
 2004,10: (
 2004,11: op2
 2004,14: VARIABLE
 2004,15: !=
 2004,18: 0.0
 2004,21: )
 2005,7: {
 2006,9: push
 2006,13: VARIABLE
 2006,13: (
 2006,14: (
 2006,15: int
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 2006,25: %
 2006,27: (
 2006,28: int
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 2006,35: )
 2006,36: ;
 2007,7: }
 2008,7: else
 2009,7: {
 2010,9: printf
 2010,15: VARIABLE
 2010,15: (
 2010,16: "
 2010,40: )
 2010,41: ;
 2011,7: }
 2012,7: break
 2012,12: ;
 2014,5: case
 2014,10: 'h'
 2014,13: :
 2015,7: view_head
 2015,16: VARIABLE
 2015,16: (
 2015,17: )
 2015,18: ;
 2016,7: break
 2016,12: ;
 2018,5: case
 2018,10: 'd'
 2018,13: :
 2019,7: duplicate
 2019,16: VARIABLE
 2019,16: (
 2019,17: )
 2019,18: ;
 2020,7: break
 2020,12: ;
 2022,5: case
 2022,10: 's'
 2022,13: :
 2023,7: swap
 2023,11: VARIABLE
 2023,11: (
 2023,12: )
 2023,13: ;
 2024,7: break
 2024,12: ;
 2026,5: case
 2026,10: 'c'
 2026,13: :
 2027,7: clear
 2027,12: VARIABLE
 2027,12: (
 2027,13: )
 2027,14: ;
 2028,7: break
 2028,12: ;
 2030,5: case
 2030,10: '\n'
 2030,14: :
 2031,7: printf
 2031,13: VARIABLE
 2031,13: (
 2031,14: "
 2031,30: ,
 2031,32: pop
 2031,35: VARIABLE
 2031,35: (
 2031,36: )
 2031,37: )
 2031,38: ;
 2032,7: break
 2032,12: ;
 2034,5: default
 2034,12: :
 2035,7: printf
 2035,13: VARIABLE
 2035,13: (
 2035,14: "
 2035,44: ,
 2035,46: s
 2035,47: VARIABLE
 2035,47: )
 2035,48: ;
 2036,7: break
 2036,12: ;
 2037,5: }
 
201 case constant_expression : statement 
 1970,5: case
 1970,10: '0'
 1970,13: :
 1971,7: push
 1971,11: VARIABLE
 1971,11: (
 1971,12: atof
 1971,16: VARIABLE
 1971,16: (
 1971,17: s
 1971,18: VARIABLE
 1971,18: )
 1971,19: )
 1971,20: ;
 
334 CONSTANT 
 1970,10: '0'
 
411 : statement 
 1970,13: :
 1971,7: push
 1971,11: VARIABLE
 1971,11: (
 1971,12: atof
 1971,16: VARIABLE
 1971,16: (
 1971,17: s
 1971,18: VARIABLE
 1971,18: )
 1971,19: )
 1971,20: ;
 
462 NAME VARIABLE 
 1971,7: push
 1971,11: VARIABLE
 
65 VARIABLE 
 1971,11: VARIABLE
 
147 ( option_argument_expression_list ) 
 1971,11: (
 1971,12: atof
 1971,16: VARIABLE
 1971,16: (
 1971,17: s
 1971,18: VARIABLE
 1971,18: )
 1971,19: )
 
235 NAME VARIABLE 
 1971,12: atof
 1971,16: VARIABLE
 
179 VARIABLE 
 1971,16: VARIABLE
 
147 ( option_argument_expression_list ) 
 1971,16: (
 1971,17: s
 1971,18: VARIABLE
 1971,18: )
 
235 NAME VARIABLE 
 1971,17: s
 1971,18: VARIABLE
 
179 VARIABLE 
 1971,18: VARIABLE
 
351 ) 
 1971,18: )
 
351 ) 
 1971,19: )
 
331 ; 
 1971,20: ;
 
201 break ; 
 1972,7: break
 1972,12: ;
 
337 ; 
 1972,12: ;
 
201 case constant_expression : statement 
 1974,5: case
 1974,10: '+'
 1974,13: :
 1975,7: push
 1975,11: VARIABLE
 1975,11: (
 1975,12: pop
 1975,15: VARIABLE
 1975,15: (
 1975,16: )
 1975,18: +
 1975,20: pop
 1975,23: VARIABLE
 1975,23: (
 1975,24: )
 1975,25: )
 1975,26: ;
 
334 CONSTANT 
 1974,10: '+'
 
411 : statement 
 1974,13: :
 1975,7: push
 1975,11: VARIABLE
 1975,11: (
 1975,12: pop
 1975,15: VARIABLE
 1975,15: (
 1975,16: )
 1975,18: +
 1975,20: pop
 1975,23: VARIABLE
 1975,23: (
 1975,24: )
 1975,25: )
 1975,26: ;
 
462 NAME VARIABLE 
 1975,7: push
 1975,11: VARIABLE
 
65 VARIABLE 
 1975,11: VARIABLE
 
147 ( option_argument_expression_list ) 
 1975,11: (
 1975,12: pop
 1975,15: VARIABLE
 1975,15: (
 1975,16: )
 1975,18: +
 1975,20: pop
 1975,23: VARIABLE
 1975,23: (
 1975,24: )
 1975,25: )
 
235 NAME VARIABLE 
 1975,12: pop
 1975,15: VARIABLE
 
179 VARIABLE 
 1975,15: VARIABLE
 
147 ( option_argument_expression_list ) 
 1975,15: (
 1975,16: )
 
351 ) 
 1975,16: )
 
152 + 
 1975,18: +
 
246 NAME VARIABLE 
 1975,20: pop
 1975,23: VARIABLE
 
179 VARIABLE 
 1975,23: VARIABLE
 
147 ( option_argument_expression_list ) 
 1975,23: (
 1975,24: )
 
351 ) 
 1975,24: )
 
351 ) 
 1975,25: )
 
331 ; 
 1975,26: ;
 
201 break ; 
 1976,7: break
 1976,12: ;
 
337 ; 
 1976,12: ;
 
201 case constant_expression : statement 
 1978,5: case
 1978,10: '-'
 1978,13: :
 1979,7: op2
 1979,10: VARIABLE
 1979,11: =
 1979,13: pop
 1979,16: VARIABLE
 1979,16: (
 1979,17: )
 1979,18: ;
 
334 CONSTANT 
 1978,10: '-'
 
411 : statement 
 1978,13: :
 1979,7: op2
 1979,10: VARIABLE
 1979,11: =
 1979,13: pop
 1979,16: VARIABLE
 1979,16: (
 1979,17: )
 1979,18: ;
 
462 NAME VARIABLE 
 1979,7: op2
 1979,10: VARIABLE
 
65 VARIABLE 
 1979,10: VARIABLE
 
181 = 
 1979,11: =
 
279 NAME VARIABLE 
 1979,13: pop
 1979,16: VARIABLE
 
179 VARIABLE 
 1979,16: VARIABLE
 
147 ( option_argument_expression_list ) 
 1979,16: (
 1979,17: )
 
351 ) 
 1979,17: )
 
331 ; 
 1979,18: ;
 
201 NAME VARIABLE 
 1980,7: push
 1980,11: VARIABLE
 
65 VARIABLE 
 1980,11: VARIABLE
 
147 ( option_argument_expression_list ) 
 1980,11: (
 1980,12: pop
 1980,15: VARIABLE
 1980,15: (
 1980,16: )
 1980,18: -
 1980,20: op2
 1980,23: VARIABLE
 1980,23: )
 
235 NAME VARIABLE 
 1980,12: pop
 1980,15: VARIABLE
 
179 VARIABLE 
 1980,15: VARIABLE
 
147 ( option_argument_expression_list ) 
 1980,15: (
 1980,16: )
 
351 ) 
 1980,16: )
 
152 - 
 1980,18: -
 
246 NAME VARIABLE 
 1980,20: op2
 1980,23: VARIABLE
 
179 VARIABLE 
 1980,23: VARIABLE
 
351 ) 
 1980,23: )
 
331 ; 
 1980,24: ;
 
201 break ; 
 1981,7: break
 1981,12: ;
 
337 ; 
 1981,12: ;
 
201 case constant_expression : statement 
 1983,5: case
 1983,10: '*'
 1983,13: :
 1984,7: push
 1984,11: VARIABLE
 1984,11: (
 1984,12: pop
 1984,15: VARIABLE
 1984,15: (
 1984,16: )
 1984,18: *
 1984,20: pop
 1984,23: VARIABLE
 1984,23: (
 1984,24: )
 1984,25: )
 1984,26: ;
 
334 CONSTANT 
 1983,10: '*'
 
411 : statement 
 1983,13: :
 1984,7: push
 1984,11: VARIABLE
 1984,11: (
 1984,12: pop
 1984,15: VARIABLE
 1984,15: (
 1984,16: )
 1984,18: *
 1984,20: pop
 1984,23: VARIABLE
 1984,23: (
 1984,24: )
 1984,25: )
 1984,26: ;
 
462 NAME VARIABLE 
 1984,7: push
 1984,11: VARIABLE
 
65 VARIABLE 
 1984,11: VARIABLE
 
147 ( option_argument_expression_list ) 
 1984,11: (
 1984,12: pop
 1984,15: VARIABLE
 1984,15: (
 1984,16: )
 1984,18: *
 1984,20: pop
 1984,23: VARIABLE
 1984,23: (
 1984,24: )
 1984,25: )
 
235 NAME VARIABLE 
 1984,12: pop
 1984,15: VARIABLE
 
179 VARIABLE 
 1984,15: VARIABLE
 
147 ( option_argument_expression_list ) 
 1984,15: (
 1984,16: )
 
351 ) 
 1984,16: )
 
151 * 
 1984,18: *
 
242 NAME VARIABLE 
 1984,20: pop
 1984,23: VARIABLE
 
179 VARIABLE 
 1984,23: VARIABLE
 
147 ( option_argument_expression_list ) 
 1984,23: (
 1984,24: )
 
351 ) 
 1984,24: )
 
351 ) 
 1984,25: )
 
331 ; 
 1984,26: ;
 
201 break ; 
 1985,7: break
 1985,12: ;
 
337 ; 
 1985,12: ;
 
201 case constant_expression : statement 
 1987,5: case
 1987,10: '/'
 1987,13: :
 1988,7: op2
 1988,10: VARIABLE
 1988,11: =
 1988,13: pop
 1988,16: VARIABLE
 1988,16: (
 1988,17: )
 1988,18: ;
 
334 CONSTANT 
 1987,10: '/'
 
411 : statement 
 1987,13: :
 1988,7: op2
 1988,10: VARIABLE
 1988,11: =
 1988,13: pop
 1988,16: VARIABLE
 1988,16: (
 1988,17: )
 1988,18: ;
 
462 NAME VARIABLE 
 1988,7: op2
 1988,10: VARIABLE
 
65 VARIABLE 
 1988,10: VARIABLE
 
181 = 
 1988,11: =
 
279 NAME VARIABLE 
 1988,13: pop
 1988,16: VARIABLE
 
179 VARIABLE 
 1988,16: VARIABLE
 
147 ( option_argument_expression_list ) 
 1988,16: (
 1988,17: )
 
351 ) 
 1988,17: )
 
331 ; 
 1988,18: ;
 
320 if ( expression ) scoped_statement else scoped_statement 
 1990,7: if
 1990,10: (
 1990,11: op2
 1990,14: VARIABLE
 1990,15: !=
 1990,18: 0.0
 1990,21: )
 1991,7: {
 1992,9: push
 1992,13: VARIABLE
 1992,13: (
 1992,14: pop
 1992,17: VARIABLE
 1992,17: (
 1992,18: )
 1992,20: /
 1992,22: op2
 1992,25: VARIABLE
 1992,25: )
 1992,26: ;
 1993,7: }
 1994,7: else
 1995,7: {
 1996,9: printf
 1996,15: VARIABLE
 1996,15: (
 1996,16: "
 1996,40: )
 1996,41: ;
 1997,7: }
 
404 ( expression ) scoped_statement else scoped_statement 
 1990,10: (
 1990,11: op2
 1990,14: VARIABLE
 1990,15: !=
 1990,18: 0.0
 1990,21: )
 1991,7: {
 1992,9: push
 1992,13: VARIABLE
 1992,13: (
 1992,14: pop
 1992,17: VARIABLE
 1992,17: (
 1992,18: )
 1992,20: /
 1992,22: op2
 1992,25: VARIABLE
 1992,25: )
 1992,26: ;
 1993,7: }
 1994,7: else
 1995,7: {
 1996,9: printf
 1996,15: VARIABLE
 1996,15: (
 1996,16: "
 1996,40: )
 1996,41: ;
 1997,7: }
 
455 NAME VARIABLE 
 1990,11: op2
 1990,14: VARIABLE
 
179 VARIABLE 
 1990,14: VARIABLE
 
155 != 
 1990,15: !=
 
257 CONSTANT 
 1990,18: 0.0
 
483 ) scoped_statement else scoped_statement 
 1990,21: )
 1991,7: {
 1992,9: push
 1992,13: VARIABLE
 1992,13: (
 1992,14: pop
 1992,17: VARIABLE
 1992,17: (
 1992,18: )
 1992,20: /
 1992,22: op2
 1992,25: VARIABLE
 1992,25: )
 1992,26: ;
 1993,7: }
 1994,7: else
 1995,7: {
 1996,9: printf
 1996,15: VARIABLE
 1996,15: (
 1996,16: "
 1996,40: )
 1996,41: ;
 1997,7: }
 
320 { option_block_item_list } 
 1991,7: {
 1992,9: push
 1992,13: VARIABLE
 1992,13: (
 1992,14: pop
 1992,17: VARIABLE
 1992,17: (
 1992,18: )
 1992,20: /
 1992,22: op2
 1992,25: VARIABLE
 1992,25: )
 1992,26: ;
 1993,7: }
 
201 NAME VARIABLE 
 1992,9: push
 1992,13: VARIABLE
 
65 VARIABLE 
 1992,13: VARIABLE
 
147 ( option_argument_expression_list ) 
 1992,13: (
 1992,14: pop
 1992,17: VARIABLE
 1992,17: (
 1992,18: )
 1992,20: /
 1992,22: op2
 1992,25: VARIABLE
 1992,25: )
 
235 NAME VARIABLE 
 1992,14: pop
 1992,17: VARIABLE
 
179 VARIABLE 
 1992,17: VARIABLE
 
147 ( option_argument_expression_list ) 
 1992,17: (
 1992,18: )
 
351 ) 
 1992,18: )
 
151 / 
 1992,20: /
 
242 NAME VARIABLE 
 1992,22: op2
 1992,25: VARIABLE
 
179 VARIABLE 
 1992,25: VARIABLE
 
351 ) 
 1992,25: )
 
331 ; 
 1992,26: ;
 
201 } 
 1993,7: }
 
512 else scoped_statement 
 1994,7: else
 1995,7: {
 1996,9: printf
 1996,15: VARIABLE
 1996,15: (
 1996,16: "
 1996,40: )
 1996,41: ;
 1997,7: }
 
320 { option_block_item_list } 
 1995,7: {
 1996,9: printf
 1996,15: VARIABLE
 1996,15: (
 1996,16: "
 1996,40: )
 1996,41: ;
 1997,7: }
 
201 NAME VARIABLE 
 1996,9: printf
 1996,15: VARIABLE
 
65 VARIABLE 
 1996,15: VARIABLE
 
147 ( option_argument_expression_list ) 
 1996,15: (
 1996,16: "
 1996,40: )
 
235 STRING_LITERAL 
 1996,16: "
 
351 ) 
 1996,40: )
 
331 ; 
 1996,41: ;
 
201 } 
 1997,7: }
 
201 break ; 
 1999,7: break
 1999,12: ;
 
337 ; 
 1999,12: ;
 
201 case constant_expression : statement 
 2001,5: case
 2001,10: '%'
 2001,13: :
 2002,7: op2
 2002,10: VARIABLE
 2002,11: =
 2002,13: pop
 2002,16: VARIABLE
 2002,16: (
 2002,17: )
 2002,18: ;
 
334 CONSTANT 
 2001,10: '%'
 
411 : statement 
 2001,13: :
 2002,7: op2
 2002,10: VARIABLE
 2002,11: =
 2002,13: pop
 2002,16: VARIABLE
 2002,16: (
 2002,17: )
 2002,18: ;
 
462 NAME VARIABLE 
 2002,7: op2
 2002,10: VARIABLE
 
65 VARIABLE 
 2002,10: VARIABLE
 
181 = 
 2002,11: =
 
279 NAME VARIABLE 
 2002,13: pop
 2002,16: VARIABLE
 
179 VARIABLE 
 2002,16: VARIABLE
 
147 ( option_argument_expression_list ) 
 2002,16: (
 2002,17: )
 
351 ) 
 2002,17: )
 
331 ; 
 2002,18: ;
 
320 if ( expression ) scoped_statement else scoped_statement 
 2004,7: if
 2004,10: (
 2004,11: op2
 2004,14: VARIABLE
 2004,15: !=
 2004,18: 0.0
 2004,21: )
 2005,7: {
 2006,9: push
 2006,13: VARIABLE
 2006,13: (
 2006,14: (
 2006,15: int
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 2006,25: %
 2006,27: (
 2006,28: int
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 2006,35: )
 2006,36: ;
 2007,7: }
 2008,7: else
 2009,7: {
 2010,9: printf
 2010,15: VARIABLE
 2010,15: (
 2010,16: "
 2010,40: )
 2010,41: ;
 2011,7: }
 
404 ( expression ) scoped_statement else scoped_statement 
 2004,10: (
 2004,11: op2
 2004,14: VARIABLE
 2004,15: !=
 2004,18: 0.0
 2004,21: )
 2005,7: {
 2006,9: push
 2006,13: VARIABLE
 2006,13: (
 2006,14: (
 2006,15: int
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 2006,25: %
 2006,27: (
 2006,28: int
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 2006,35: )
 2006,36: ;
 2007,7: }
 2008,7: else
 2009,7: {
 2010,9: printf
 2010,15: VARIABLE
 2010,15: (
 2010,16: "
 2010,40: )
 2010,41: ;
 2011,7: }
 
455 NAME VARIABLE 
 2004,11: op2
 2004,14: VARIABLE
 
179 VARIABLE 
 2004,14: VARIABLE
 
155 != 
 2004,15: !=
 
257 CONSTANT 
 2004,18: 0.0
 
483 ) scoped_statement else scoped_statement 
 2004,21: )
 2005,7: {
 2006,9: push
 2006,13: VARIABLE
 2006,13: (
 2006,14: (
 2006,15: int
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 2006,25: %
 2006,27: (
 2006,28: int
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 2006,35: )
 2006,36: ;
 2007,7: }
 2008,7: else
 2009,7: {
 2010,9: printf
 2010,15: VARIABLE
 2010,15: (
 2010,16: "
 2010,40: )
 2010,41: ;
 2011,7: }
 
320 { option_block_item_list } 
 2005,7: {
 2006,9: push
 2006,13: VARIABLE
 2006,13: (
 2006,14: (
 2006,15: int
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 2006,25: %
 2006,27: (
 2006,28: int
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 2006,35: )
 2006,36: ;
 2007,7: }
 
201 NAME VARIABLE 
 2006,9: push
 2006,13: VARIABLE
 
65 VARIABLE 
 2006,13: VARIABLE
 
147 ( option_argument_expression_list ) 
 2006,13: (
 2006,14: (
 2006,15: int
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 2006,25: %
 2006,27: (
 2006,28: int
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 2006,35: )
 
235 ( type_name ) cast_expression 
 2006,14: (
 2006,15: int
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 
165 int 
 2006,15: int
 
269 ) cast_expression 
 2006,18: )
 2006,19: pop
 2006,22: VARIABLE
 2006,22: (
 2006,23: )
 
369 NAME VARIABLE 
 2006,19: pop
 2006,22: VARIABLE
 
179 VARIABLE 
 2006,22: VARIABLE
 
147 ( option_argument_expression_list ) 
 2006,22: (
 2006,23: )
 
351 ) 
 2006,23: )
 
151 % 
 2006,25: %
 
242 ( type_name ) cast_expression 
 2006,27: (
 2006,28: int
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 
165 int 
 2006,28: int
 
269 ) cast_expression 
 2006,31: )
 2006,32: op2
 2006,35: VARIABLE
 
369 NAME VARIABLE 
 2006,32: op2
 2006,35: VARIABLE
 
179 VARIABLE 
 2006,35: VARIABLE
 
351 ) 
 2006,35: )
 
331 ; 
 2006,36: ;
 
201 } 
 2007,7: }
 
512 else scoped_statement 
 2008,7: else
 2009,7: {
 2010,9: printf
 2010,15: VARIABLE
 2010,15: (
 2010,16: "
 2010,40: )
 2010,41: ;
 2011,7: }
 
320 { option_block_item_list } 
 2009,7: {
 2010,9: printf
 2010,15: VARIABLE
 2010,15: (
 2010,16: "
 2010,40: )
 2010,41: ;
 2011,7: }
 
201 NAME VARIABLE 
 2010,9: printf
 2010,15: VARIABLE
 
65 VARIABLE 
 2010,15: VARIABLE
 
147 ( option_argument_expression_list ) 
 2010,15: (
 2010,16: "
 2010,40: )
 
235 STRING_LITERAL 
 2010,16: "
 
351 ) 
 2010,40: )
 
331 ; 
 2010,41: ;
 
201 } 
 2011,7: }
 
201 break ; 
 2012,7: break
 2012,12: ;
 
337 ; 
 2012,12: ;
 
201 case constant_expression : statement 
 2014,5: case
 2014,10: 'h'
 2014,13: :
 2015,7: view_head
 2015,16: VARIABLE
 2015,16: (
 2015,17: )
 2015,18: ;
 
334 CONSTANT 
 2014,10: 'h'
 
411 : statement 
 2014,13: :
 2015,7: view_head
 2015,16: VARIABLE
 2015,16: (
 2015,17: )
 2015,18: ;
 
462 NAME VARIABLE 
 2015,7: view_head
 2015,16: VARIABLE
 
65 VARIABLE 
 2015,16: VARIABLE
 
147 ( option_argument_expression_list ) 
 2015,16: (
 2015,17: )
 
351 ) 
 2015,17: )
 
331 ; 
 2015,18: ;
 
201 break ; 
 2016,7: break
 2016,12: ;
 
337 ; 
 2016,12: ;
 
201 case constant_expression : statement 
 2018,5: case
 2018,10: 'd'
 2018,13: :
 2019,7: duplicate
 2019,16: VARIABLE
 2019,16: (
 2019,17: )
 2019,18: ;
 
334 CONSTANT 
 2018,10: 'd'
 
411 : statement 
 2018,13: :
 2019,7: duplicate
 2019,16: VARIABLE
 2019,16: (
 2019,17: )
 2019,18: ;
 
462 NAME VARIABLE 
 2019,7: duplicate
 2019,16: VARIABLE
 
65 VARIABLE 
 2019,16: VARIABLE
 
147 ( option_argument_expression_list ) 
 2019,16: (
 2019,17: )
 
351 ) 
 2019,17: )
 
331 ; 
 2019,18: ;
 
201 break ; 
 2020,7: break
 2020,12: ;
 
337 ; 
 2020,12: ;
 
201 case constant_expression : statement 
 2022,5: case
 2022,10: 's'
 2022,13: :
 2023,7: swap
 2023,11: VARIABLE
 2023,11: (
 2023,12: )
 2023,13: ;
 
334 CONSTANT 
 2022,10: 's'
 
411 : statement 
 2022,13: :
 2023,7: swap
 2023,11: VARIABLE
 2023,11: (
 2023,12: )
 2023,13: ;
 
462 NAME VARIABLE 
 2023,7: swap
 2023,11: VARIABLE
 
65 VARIABLE 
 2023,11: VARIABLE
 
147 ( option_argument_expression_list ) 
 2023,11: (
 2023,12: )
 
351 ) 
 2023,12: )
 
331 ; 
 2023,13: ;
 
201 break ; 
 2024,7: break
 2024,12: ;
 
337 ; 
 2024,12: ;
 
201 case constant_expression : statement 
 2026,5: case
 2026,10: 'c'
 2026,13: :
 2027,7: clear
 2027,12: VARIABLE
 2027,12: (
 2027,13: )
 2027,14: ;
 
334 CONSTANT 
 2026,10: 'c'
 
411 : statement 
 2026,13: :
 2027,7: clear
 2027,12: VARIABLE
 2027,12: (
 2027,13: )
 2027,14: ;
 
462 NAME VARIABLE 
 2027,7: clear
 2027,12: VARIABLE
 
65 VARIABLE 
 2027,12: VARIABLE
 
147 ( option_argument_expression_list ) 
 2027,12: (
 2027,13: )
 
351 ) 
 2027,13: )
 
331 ; 
 2027,14: ;
 
201 break ; 
 2028,7: break
 2028,12: ;
 
337 ; 
 2028,12: ;
 
201 case constant_expression : statement 
 2030,5: case
 2030,10: '\n'
 2030,14: :
 2031,7: printf
 2031,13: VARIABLE
 2031,13: (
 2031,14: "
 2031,30: ,
 2031,32: pop
 2031,35: VARIABLE
 2031,35: (
 2031,36: )
 2031,37: )
 2031,38: ;
 
334 CONSTANT 
 2030,10: '\n'
 
411 : statement 
 2030,14: :
 2031,7: printf
 2031,13: VARIABLE
 2031,13: (
 2031,14: "
 2031,30: ,
 2031,32: pop
 2031,35: VARIABLE
 2031,35: (
 2031,36: )
 2031,37: )
 2031,38: ;
 
462 NAME VARIABLE 
 2031,7: printf
 2031,13: VARIABLE
 
65 VARIABLE 
 2031,13: VARIABLE
 
147 ( option_argument_expression_list ) 
 2031,13: (
 2031,14: "
 2031,30: ,
 2031,32: pop
 2031,35: VARIABLE
 2031,35: (
 2031,36: )
 2031,37: )
 
235 STRING_LITERAL 
 2031,14: "
 
352 , assignment_expression 
 2031,30: ,
 2031,32: pop
 2031,35: VARIABLE
 2031,35: (
 2031,36: )
 
429 NAME VARIABLE 
 2031,32: pop
 2031,35: VARIABLE
 
179 VARIABLE 
 2031,35: VARIABLE
 
147 ( option_argument_expression_list ) 
 2031,35: (
 2031,36: )
 
351 ) 
 2031,36: )
 
351 ) 
 2031,37: )
 
331 ; 
 2031,38: ;
 
201 break ; 
 2032,7: break
 2032,12: ;
 
337 ; 
 2032,12: ;
 
201 default : statement 
 2034,5: default
 2034,12: :
 2035,7: printf
 2035,13: VARIABLE
 2035,13: (
 2035,14: "
 2035,44: ,
 2035,46: s
 2035,47: VARIABLE
 2035,47: )
 2035,48: ;
 
332 : statement 
 2034,12: :
 2035,7: printf
 2035,13: VARIABLE
 2035,13: (
 2035,14: "
 2035,44: ,
 2035,46: s
 2035,47: VARIABLE
 2035,47: )
 2035,48: ;
 
410 NAME VARIABLE 
 2035,7: printf
 2035,13: VARIABLE
 
65 VARIABLE 
 2035,13: VARIABLE
 
147 ( option_argument_expression_list ) 
 2035,13: (
 2035,14: "
 2035,44: ,
 2035,46: s
 2035,47: VARIABLE
 2035,47: )
 
235 STRING_LITERAL 
 2035,14: "
 
352 , assignment_expression 
 2035,44: ,
 2035,46: s
 2035,47: VARIABLE
 
429 NAME VARIABLE 
 2035,46: s
 2035,47: VARIABLE
 
179 VARIABLE 
 2035,47: VARIABLE
 
351 ) 
 2035,47: )
 
331 ; 
 2035,48: ;
 
201 break ; 
 2036,7: break
 2036,12: ;
 
337 ; 
 2036,12: ;
 
201 } 
 2037,5: }
 
201 } 
 2038,3: }
 
201 return option_expression ; 
 2040,3: return
 2040,10: 0
 2040,11: ;
 
338 CONSTANT 
 2040,10: 0
 
415 ; 
 2040,11: ;
 
201 } 
 2041,1: }
 
23 int 
 2043,1: int
 
5 NAME VARIABLE 
 2043,5: sp
 2043,7: VARIABLE
 
65 VARIABLE 
 2043,7: VARIABLE
 
59 = c_initializer 
 2043,8: =
 2043,10: 0
 
108 CONSTANT 
 2043,10: 0
 
60 ; 
 2043,11: ;
 
23 double 
 2044,1: double
 
5 NAME VARIABLE 
 2044,8: stack
 2044,13: VARIABLE
 
65 VARIABLE 
 2044,13: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 2044,13: [
 2044,14: 100
 2044,17: ]
 
188 CONSTANT 
 2044,14: 100
 
305 ] 
 2044,17: ]
 
60 ; 
 2044,18: ;
 
23 void 
 2046,1: void
 
5 NAME VARIABLE 
 2046,6: push
 2046,10: VARIABLE
 
65 VARIABLE 
 2046,10: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2046,10: (
 2046,11: double
 2046,18: f
 2046,19: VARIABLE
 2046,19: )
 
186 double 
 2046,11: double
 
298 NAME VARIABLE 
 2046,18: f
 2046,19: VARIABLE
 
65 VARIABLE 
 2046,19: VARIABLE
 
187 ) 
 2046,19: )
 
94 { option_block_item_list } 
 2047,1: {
 2048,3: if
 2048,6: (
 2048,7: sp
 2048,9: VARIABLE
 2048,10: <
 2048,12: 100
 2048,15: )
 2049,3: {
 2050,5: stack
 2050,10: VARIABLE
 2050,10: [
 2050,11: sp
 2050,13: VARIABLE
 2050,13: ++
 2050,15: ]
 2050,17: =
 2050,19: f
 2050,20: VARIABLE
 2050,20: ;
 2051,3: }
 2052,3: else
 2053,3: {
 2054,5: printf
 2054,11: VARIABLE
 2054,11: (
 2054,12: "
 2054,34: )
 2054,35: ;
 2055,3: }
 2056,1: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 2048,3: if
 2048,6: (
 2048,7: sp
 2048,9: VARIABLE
 2048,10: <
 2048,12: 100
 2048,15: )
 2049,3: {
 2050,5: stack
 2050,10: VARIABLE
 2050,10: [
 2050,11: sp
 2050,13: VARIABLE
 2050,13: ++
 2050,15: ]
 2050,17: =
 2050,19: f
 2050,20: VARIABLE
 2050,20: ;
 2051,3: }
 2052,3: else
 2053,3: {
 2054,5: printf
 2054,11: VARIABLE
 2054,11: (
 2054,12: "
 2054,34: )
 2054,35: ;
 2055,3: }
 
404 ( expression ) scoped_statement else scoped_statement 
 2048,6: (
 2048,7: sp
 2048,9: VARIABLE
 2048,10: <
 2048,12: 100
 2048,15: )
 2049,3: {
 2050,5: stack
 2050,10: VARIABLE
 2050,10: [
 2050,11: sp
 2050,13: VARIABLE
 2050,13: ++
 2050,15: ]
 2050,17: =
 2050,19: f
 2050,20: VARIABLE
 2050,20: ;
 2051,3: }
 2052,3: else
 2053,3: {
 2054,5: printf
 2054,11: VARIABLE
 2054,11: (
 2054,12: "
 2054,34: )
 2054,35: ;
 2055,3: }
 
455 NAME VARIABLE 
 2048,7: sp
 2048,9: VARIABLE
 
179 VARIABLE 
 2048,9: VARIABLE
 
154 < 
 2048,10: <
 
252 CONSTANT 
 2048,12: 100
 
483 ) scoped_statement else scoped_statement 
 2048,15: )
 2049,3: {
 2050,5: stack
 2050,10: VARIABLE
 2050,10: [
 2050,11: sp
 2050,13: VARIABLE
 2050,13: ++
 2050,15: ]
 2050,17: =
 2050,19: f
 2050,20: VARIABLE
 2050,20: ;
 2051,3: }
 2052,3: else
 2053,3: {
 2054,5: printf
 2054,11: VARIABLE
 2054,11: (
 2054,12: "
 2054,34: )
 2054,35: ;
 2055,3: }
 
320 { option_block_item_list } 
 2049,3: {
 2050,5: stack
 2050,10: VARIABLE
 2050,10: [
 2050,11: sp
 2050,13: VARIABLE
 2050,13: ++
 2050,15: ]
 2050,17: =
 2050,19: f
 2050,20: VARIABLE
 2050,20: ;
 2051,3: }
 
201 NAME VARIABLE 
 2050,5: stack
 2050,10: VARIABLE
 
65 VARIABLE 
 2050,10: VARIABLE
 
147 [ expression ] 
 2050,10: [
 2050,11: sp
 2050,13: VARIABLE
 2050,13: ++
 2050,15: ]
 
236 NAME VARIABLE 
 2050,11: sp
 2050,13: VARIABLE
 
179 VARIABLE 
 2050,13: VARIABLE
 
147 ++ 
 2050,13: ++
 
353 ] 
 2050,15: ]
 
181 = 
 2050,17: =
 
279 NAME VARIABLE 
 2050,19: f
 2050,20: VARIABLE
 
179 VARIABLE 
 2050,20: VARIABLE
 
331 ; 
 2050,20: ;
 
201 } 
 2051,3: }
 
512 else scoped_statement 
 2052,3: else
 2053,3: {
 2054,5: printf
 2054,11: VARIABLE
 2054,11: (
 2054,12: "
 2054,34: )
 2054,35: ;
 2055,3: }
 
320 { option_block_item_list } 
 2053,3: {
 2054,5: printf
 2054,11: VARIABLE
 2054,11: (
 2054,12: "
 2054,34: )
 2054,35: ;
 2055,3: }
 
201 NAME VARIABLE 
 2054,5: printf
 2054,11: VARIABLE
 
65 VARIABLE 
 2054,11: VARIABLE
 
147 ( option_argument_expression_list ) 
 2054,11: (
 2054,12: "
 2054,34: )
 
235 STRING_LITERAL 
 2054,12: "
 
351 ) 
 2054,34: )
 
331 ; 
 2054,35: ;
 
201 } 
 2055,3: }
 
201 } 
 2056,1: }
 
23 double 
 2058,1: double
 
5 NAME VARIABLE 
 2058,8: pop
 2058,11: VARIABLE
 
65 VARIABLE 
 2058,11: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2058,11: (
 2058,12: void
 2058,16: )
 
186 void 
 2058,12: void
 
187 ) 
 2058,16: )
 
94 { option_block_item_list } 
 2059,1: {
 2060,3: if
 2060,6: (
 2060,7: sp
 2060,9: VARIABLE
 2060,10: >
 2060,12: 0
 2060,13: )
 2061,3: {
 2062,5: return
 2062,12: stack
 2062,17: VARIABLE
 2062,17: [
 2062,18: --
 2062,20: sp
 2062,22: VARIABLE
 2062,22: ]
 2062,23: ;
 2063,3: }
 2064,3: else
 2065,3: {
 2066,5: printf
 2066,11: VARIABLE
 2066,11: (
 2066,12: "
 2066,35: )
 2066,36: ;
 2067,3: }
 2069,3: return
 2069,10: 0.0
 2069,13: ;
 2070,1: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 2060,3: if
 2060,6: (
 2060,7: sp
 2060,9: VARIABLE
 2060,10: >
 2060,12: 0
 2060,13: )
 2061,3: {
 2062,5: return
 2062,12: stack
 2062,17: VARIABLE
 2062,17: [
 2062,18: --
 2062,20: sp
 2062,22: VARIABLE
 2062,22: ]
 2062,23: ;
 2063,3: }
 2064,3: else
 2065,3: {
 2066,5: printf
 2066,11: VARIABLE
 2066,11: (
 2066,12: "
 2066,35: )
 2066,36: ;
 2067,3: }
 
404 ( expression ) scoped_statement else scoped_statement 
 2060,6: (
 2060,7: sp
 2060,9: VARIABLE
 2060,10: >
 2060,12: 0
 2060,13: )
 2061,3: {
 2062,5: return
 2062,12: stack
 2062,17: VARIABLE
 2062,17: [
 2062,18: --
 2062,20: sp
 2062,22: VARIABLE
 2062,22: ]
 2062,23: ;
 2063,3: }
 2064,3: else
 2065,3: {
 2066,5: printf
 2066,11: VARIABLE
 2066,11: (
 2066,12: "
 2066,35: )
 2066,36: ;
 2067,3: }
 
455 NAME VARIABLE 
 2060,7: sp
 2060,9: VARIABLE
 
179 VARIABLE 
 2060,9: VARIABLE
 
154 > 
 2060,10: >
 
252 CONSTANT 
 2060,12: 0
 
483 ) scoped_statement else scoped_statement 
 2060,13: )
 2061,3: {
 2062,5: return
 2062,12: stack
 2062,17: VARIABLE
 2062,17: [
 2062,18: --
 2062,20: sp
 2062,22: VARIABLE
 2062,22: ]
 2062,23: ;
 2063,3: }
 2064,3: else
 2065,3: {
 2066,5: printf
 2066,11: VARIABLE
 2066,11: (
 2066,12: "
 2066,35: )
 2066,36: ;
 2067,3: }
 
320 { option_block_item_list } 
 2061,3: {
 2062,5: return
 2062,12: stack
 2062,17: VARIABLE
 2062,17: [
 2062,18: --
 2062,20: sp
 2062,22: VARIABLE
 2062,22: ]
 2062,23: ;
 2063,3: }
 
201 return option_expression ; 
 2062,5: return
 2062,12: stack
 2062,17: VARIABLE
 2062,17: [
 2062,18: --
 2062,20: sp
 2062,22: VARIABLE
 2062,22: ]
 2062,23: ;
 
338 NAME VARIABLE 
 2062,12: stack
 2062,17: VARIABLE
 
179 VARIABLE 
 2062,17: VARIABLE
 
147 [ expression ] 
 2062,17: [
 2062,18: --
 2062,20: sp
 2062,22: VARIABLE
 2062,22: ]
 
236 -- unary_expression 
 2062,18: --
 2062,20: sp
 2062,22: VARIABLE
 
169 NAME VARIABLE 
 2062,20: sp
 2062,22: VARIABLE
 
179 VARIABLE 
 2062,22: VARIABLE
 
353 ] 
 2062,22: ]
 
415 ; 
 2062,23: ;
 
201 } 
 2063,3: }
 
512 else scoped_statement 
 2064,3: else
 2065,3: {
 2066,5: printf
 2066,11: VARIABLE
 2066,11: (
 2066,12: "
 2066,35: )
 2066,36: ;
 2067,3: }
 
320 { option_block_item_list } 
 2065,3: {
 2066,5: printf
 2066,11: VARIABLE
 2066,11: (
 2066,12: "
 2066,35: )
 2066,36: ;
 2067,3: }
 
201 NAME VARIABLE 
 2066,5: printf
 2066,11: VARIABLE
 
65 VARIABLE 
 2066,11: VARIABLE
 
147 ( option_argument_expression_list ) 
 2066,11: (
 2066,12: "
 2066,35: )
 
235 STRING_LITERAL 
 2066,12: "
 
351 ) 
 2066,35: )
 
331 ; 
 2066,36: ;
 
201 } 
 2067,3: }
 
201 return option_expression ; 
 2069,3: return
 2069,10: 0.0
 2069,13: ;
 
338 CONSTANT 
 2069,10: 0.0
 
415 ; 
 2069,13: ;
 
201 } 
 2070,1: }
 
23 void 
 2072,1: void
 
5 NAME VARIABLE 
 2072,6: view_head
 2072,15: VARIABLE
 
65 VARIABLE 
 2072,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2072,15: (
 2072,16: void
 2072,20: )
 
186 void 
 2072,16: void
 
187 ) 
 2072,20: )
 
94 { option_block_item_list } 
 2073,1: {
 2074,3: if
 2074,6: (
 2074,7: sp
 2074,9: VARIABLE
 2074,9: )
 2075,3: {
 2076,5: printf
 2076,11: VARIABLE
 2076,11: (
 2076,12: "
 2076,30: ,
 2076,32: stack
 2076,37: VARIABLE
 2076,37: [
 2076,38: sp
 2076,40: VARIABLE
 2076,41: -
 2076,43: 1
 2076,44: ]
 2076,45: )
 2076,46: ;
 2077,3: }
 2078,3: else
 2079,3: {
 2080,5: printf
 2080,11: VARIABLE
 2080,11: (
 2080,12: "
 2080,35: )
 2080,36: ;
 2081,3: }
 2082,1: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 2074,3: if
 2074,6: (
 2074,7: sp
 2074,9: VARIABLE
 2074,9: )
 2075,3: {
 2076,5: printf
 2076,11: VARIABLE
 2076,11: (
 2076,12: "
 2076,30: ,
 2076,32: stack
 2076,37: VARIABLE
 2076,37: [
 2076,38: sp
 2076,40: VARIABLE
 2076,41: -
 2076,43: 1
 2076,44: ]
 2076,45: )
 2076,46: ;
 2077,3: }
 2078,3: else
 2079,3: {
 2080,5: printf
 2080,11: VARIABLE
 2080,11: (
 2080,12: "
 2080,35: )
 2080,36: ;
 2081,3: }
 
404 ( expression ) scoped_statement else scoped_statement 
 2074,6: (
 2074,7: sp
 2074,9: VARIABLE
 2074,9: )
 2075,3: {
 2076,5: printf
 2076,11: VARIABLE
 2076,11: (
 2076,12: "
 2076,30: ,
 2076,32: stack
 2076,37: VARIABLE
 2076,37: [
 2076,38: sp
 2076,40: VARIABLE
 2076,41: -
 2076,43: 1
 2076,44: ]
 2076,45: )
 2076,46: ;
 2077,3: }
 2078,3: else
 2079,3: {
 2080,5: printf
 2080,11: VARIABLE
 2080,11: (
 2080,12: "
 2080,35: )
 2080,36: ;
 2081,3: }
 
455 NAME VARIABLE 
 2074,7: sp
 2074,9: VARIABLE
 
179 VARIABLE 
 2074,9: VARIABLE
 
483 ) scoped_statement else scoped_statement 
 2074,9: )
 2075,3: {
 2076,5: printf
 2076,11: VARIABLE
 2076,11: (
 2076,12: "
 2076,30: ,
 2076,32: stack
 2076,37: VARIABLE
 2076,37: [
 2076,38: sp
 2076,40: VARIABLE
 2076,41: -
 2076,43: 1
 2076,44: ]
 2076,45: )
 2076,46: ;
 2077,3: }
 2078,3: else
 2079,3: {
 2080,5: printf
 2080,11: VARIABLE
 2080,11: (
 2080,12: "
 2080,35: )
 2080,36: ;
 2081,3: }
 
320 { option_block_item_list } 
 2075,3: {
 2076,5: printf
 2076,11: VARIABLE
 2076,11: (
 2076,12: "
 2076,30: ,
 2076,32: stack
 2076,37: VARIABLE
 2076,37: [
 2076,38: sp
 2076,40: VARIABLE
 2076,41: -
 2076,43: 1
 2076,44: ]
 2076,45: )
 2076,46: ;
 2077,3: }
 
201 NAME VARIABLE 
 2076,5: printf
 2076,11: VARIABLE
 
65 VARIABLE 
 2076,11: VARIABLE
 
147 ( option_argument_expression_list ) 
 2076,11: (
 2076,12: "
 2076,30: ,
 2076,32: stack
 2076,37: VARIABLE
 2076,37: [
 2076,38: sp
 2076,40: VARIABLE
 2076,41: -
 2076,43: 1
 2076,44: ]
 2076,45: )
 
235 STRING_LITERAL 
 2076,12: "
 
352 , assignment_expression 
 2076,30: ,
 2076,32: stack
 2076,37: VARIABLE
 2076,37: [
 2076,38: sp
 2076,40: VARIABLE
 2076,41: -
 2076,43: 1
 2076,44: ]
 
429 NAME VARIABLE 
 2076,32: stack
 2076,37: VARIABLE
 
179 VARIABLE 
 2076,37: VARIABLE
 
147 [ expression ] 
 2076,37: [
 2076,38: sp
 2076,40: VARIABLE
 2076,41: -
 2076,43: 1
 2076,44: ]
 
236 NAME VARIABLE 
 2076,38: sp
 2076,40: VARIABLE
 
179 VARIABLE 
 2076,40: VARIABLE
 
152 - 
 2076,41: -
 
246 CONSTANT 
 2076,43: 1
 
353 ] 
 2076,44: ]
 
351 ) 
 2076,45: )
 
331 ; 
 2076,46: ;
 
201 } 
 2077,3: }
 
512 else scoped_statement 
 2078,3: else
 2079,3: {
 2080,5: printf
 2080,11: VARIABLE
 2080,11: (
 2080,12: "
 2080,35: )
 2080,36: ;
 2081,3: }
 
320 { option_block_item_list } 
 2079,3: {
 2080,5: printf
 2080,11: VARIABLE
 2080,11: (
 2080,12: "
 2080,35: )
 2080,36: ;
 2081,3: }
 
201 NAME VARIABLE 
 2080,5: printf
 2080,11: VARIABLE
 
65 VARIABLE 
 2080,11: VARIABLE
 
147 ( option_argument_expression_list ) 
 2080,11: (
 2080,12: "
 2080,35: )
 
235 STRING_LITERAL 
 2080,12: "
 
351 ) 
 2080,35: )
 
331 ; 
 2080,36: ;
 
201 } 
 2081,3: }
 
201 } 
 2082,1: }
 
23 void 
 2084,1: void
 
5 NAME VARIABLE 
 2084,6: duplicate
 2084,15: VARIABLE
 
65 VARIABLE 
 2084,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2084,15: (
 2084,16: void
 2084,20: )
 
186 void 
 2084,16: void
 
187 ) 
 2084,20: )
 
94 { option_block_item_list } 
 2085,1: {
 2086,3: double
 2086,10: temp
 2086,14: VARIABLE
 2086,15: =
 2086,17: pop
 2086,20: VARIABLE
 2086,20: (
 2086,21: )
 2086,22: ;
 2087,3: push
 2087,7: VARIABLE
 2087,7: (
 2087,8: temp
 2087,12: VARIABLE
 2087,12: )
 2087,13: ;
 2088,3: push
 2088,7: VARIABLE
 2088,7: (
 2088,8: temp
 2088,12: VARIABLE
 2088,12: )
 2088,13: ;
 2089,1: }
 
201 double 
 2086,3: double
 
93 NAME VARIABLE 
 2086,10: temp
 2086,14: VARIABLE
 
65 VARIABLE 
 2086,14: VARIABLE
 
59 = c_initializer 
 2086,15: =
 2086,17: pop
 2086,20: VARIABLE
 2086,20: (
 2086,21: )
 
108 NAME VARIABLE 
 2086,17: pop
 2086,20: VARIABLE
 
179 VARIABLE 
 2086,20: VARIABLE
 
147 ( option_argument_expression_list ) 
 2086,20: (
 2086,21: )
 
351 ) 
 2086,21: )
 
60 ; 
 2086,22: ;
 
201 NAME VARIABLE 
 2087,3: push
 2087,7: VARIABLE
 
65 VARIABLE 
 2087,7: VARIABLE
 
147 ( option_argument_expression_list ) 
 2087,7: (
 2087,8: temp
 2087,12: VARIABLE
 2087,12: )
 
235 NAME VARIABLE 
 2087,8: temp
 2087,12: VARIABLE
 
179 VARIABLE 
 2087,12: VARIABLE
 
351 ) 
 2087,12: )
 
331 ; 
 2087,13: ;
 
201 NAME VARIABLE 
 2088,3: push
 2088,7: VARIABLE
 
65 VARIABLE 
 2088,7: VARIABLE
 
147 ( option_argument_expression_list ) 
 2088,7: (
 2088,8: temp
 2088,12: VARIABLE
 2088,12: )
 
235 NAME VARIABLE 
 2088,8: temp
 2088,12: VARIABLE
 
179 VARIABLE 
 2088,12: VARIABLE
 
351 ) 
 2088,12: )
 
331 ; 
 2088,13: ;
 
201 } 
 2089,1: }
 
23 void 
 2091,1: void
 
5 NAME VARIABLE 
 2091,6: swap
 2091,10: VARIABLE
 
65 VARIABLE 
 2091,10: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2091,10: (
 2091,11: void
 2091,15: )
 
186 void 
 2091,11: void
 
187 ) 
 2091,15: )
 
94 { option_block_item_list } 
 2092,1: {
 2093,3: double
 2093,10: temp1
 2093,15: VARIABLE
 2093,16: =
 2093,18: pop
 2093,21: VARIABLE
 2093,21: (
 2093,22: )
 2093,23: ;
 2094,3: double
 2094,10: temp2
 2094,15: VARIABLE
 2094,16: =
 2094,18: pop
 2094,21: VARIABLE
 2094,21: (
 2094,22: )
 2094,23: ;
 2096,3: push
 2096,7: VARIABLE
 2096,7: (
 2096,8: temp1
 2096,13: VARIABLE
 2096,13: )
 2096,14: ;
 2097,3: push
 2097,7: VARIABLE
 2097,7: (
 2097,8: temp2
 2097,13: VARIABLE
 2097,13: )
 2097,14: ;
 2098,1: }
 
201 double 
 2093,3: double
 
93 NAME VARIABLE 
 2093,10: temp1
 2093,15: VARIABLE
 
65 VARIABLE 
 2093,15: VARIABLE
 
59 = c_initializer 
 2093,16: =
 2093,18: pop
 2093,21: VARIABLE
 2093,21: (
 2093,22: )
 
108 NAME VARIABLE 
 2093,18: pop
 2093,21: VARIABLE
 
179 VARIABLE 
 2093,21: VARIABLE
 
147 ( option_argument_expression_list ) 
 2093,21: (
 2093,22: )
 
351 ) 
 2093,22: )
 
60 ; 
 2093,23: ;
 
201 double 
 2094,3: double
 
93 NAME VARIABLE 
 2094,10: temp2
 2094,15: VARIABLE
 
65 VARIABLE 
 2094,15: VARIABLE
 
59 = c_initializer 
 2094,16: =
 2094,18: pop
 2094,21: VARIABLE
 2094,21: (
 2094,22: )
 
108 NAME VARIABLE 
 2094,18: pop
 2094,21: VARIABLE
 
179 VARIABLE 
 2094,21: VARIABLE
 
147 ( option_argument_expression_list ) 
 2094,21: (
 2094,22: )
 
351 ) 
 2094,22: )
 
60 ; 
 2094,23: ;
 
201 NAME VARIABLE 
 2096,3: push
 2096,7: VARIABLE
 
65 VARIABLE 
 2096,7: VARIABLE
 
147 ( option_argument_expression_list ) 
 2096,7: (
 2096,8: temp1
 2096,13: VARIABLE
 2096,13: )
 
235 NAME VARIABLE 
 2096,8: temp1
 2096,13: VARIABLE
 
179 VARIABLE 
 2096,13: VARIABLE
 
351 ) 
 2096,13: )
 
331 ; 
 2096,14: ;
 
201 NAME VARIABLE 
 2097,3: push
 2097,7: VARIABLE
 
65 VARIABLE 
 2097,7: VARIABLE
 
147 ( option_argument_expression_list ) 
 2097,7: (
 2097,8: temp2
 2097,13: VARIABLE
 2097,13: )
 
235 NAME VARIABLE 
 2097,8: temp2
 2097,13: VARIABLE
 
179 VARIABLE 
 2097,13: VARIABLE
 
351 ) 
 2097,13: )
 
331 ; 
 2097,14: ;
 
201 } 
 2098,1: }
 
23 void 
 2100,1: void
 
5 NAME VARIABLE 
 2100,6: clear
 2100,11: VARIABLE
 
65 VARIABLE 
 2100,11: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2100,11: (
 2100,12: void
 2100,16: )
 
186 void 
 2100,12: void
 
187 ) 
 2100,16: )
 
94 { option_block_item_list } 
 2101,1: {
 2102,3: do
 2103,3: {
 2104,5: stack
 2104,10: VARIABLE
 2104,10: [
 2104,11: sp
 2104,13: VARIABLE
 2104,13: ]
 2104,15: =
 2104,17: 0.0
 2104,20: ;
 2105,3: }
 2105,5: while
 2105,11: (
 2105,12: sp
 2105,14: VARIABLE
 2105,14: --
 2105,16: )
 2105,17: ;
 2106,1: }
 
320 do scoped_statement while ( expression ) ; 
 2102,3: do
 2103,3: {
 2104,5: stack
 2104,10: VARIABLE
 2104,10: [
 2104,11: sp
 2104,13: VARIABLE
 2104,13: ]
 2104,15: =
 2104,17: 0.0
 2104,20: ;
 2105,3: }
 2105,5: while
 2105,11: (
 2105,12: sp
 2105,14: VARIABLE
 2105,14: --
 2105,16: )
 2105,17: ;
 
320 { option_block_item_list } 
 2103,3: {
 2104,5: stack
 2104,10: VARIABLE
 2104,10: [
 2104,11: sp
 2104,13: VARIABLE
 2104,13: ]
 2104,15: =
 2104,17: 0.0
 2104,20: ;
 2105,3: }
 
201 NAME VARIABLE 
 2104,5: stack
 2104,10: VARIABLE
 
65 VARIABLE 
 2104,10: VARIABLE
 
147 [ expression ] 
 2104,10: [
 2104,11: sp
 2104,13: VARIABLE
 2104,13: ]
 
236 NAME VARIABLE 
 2104,11: sp
 2104,13: VARIABLE
 
179 VARIABLE 
 2104,13: VARIABLE
 
353 ] 
 2104,13: ]
 
181 = 
 2104,15: =
 
279 CONSTANT 
 2104,17: 0.0
 
331 ; 
 2104,20: ;
 
201 } 
 2105,3: }
 
459 while ( expression ) ; 
 2105,5: while
 2105,11: (
 2105,12: sp
 2105,14: VARIABLE
 2105,14: --
 2105,16: )
 2105,17: ;
 
487 ( expression ) ; 
 2105,11: (
 2105,12: sp
 2105,14: VARIABLE
 2105,14: --
 2105,16: )
 2105,17: ;
 
503 NAME VARIABLE 
 2105,12: sp
 2105,14: VARIABLE
 
179 VARIABLE 
 2105,14: VARIABLE
 
147 -- 
 2105,14: --
 
515 ) ; 
 2105,16: )
 2105,17: ;
 
519 ; 
 2105,17: ;
 
201 } 
 2106,1: }
 
23 int 
 2108,1: int
 
5 NAME VARIABLE 
 2108,5: bufp
 2108,9: VARIABLE
 
65 VARIABLE 
 2108,9: VARIABLE
 
59 = c_initializer 
 2108,10: =
 2108,12: 0
 
108 CONSTANT 
 2108,12: 0
 
60 ; 
 2108,13: ;
 
23 char 
 2109,1: char
 
5 NAME VARIABLE 
 2109,6: buf
 2109,9: VARIABLE
 
65 VARIABLE 
 2109,9: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 2109,9: [
 2109,10: 100
 2109,13: ]
 
188 CONSTANT 
 2109,10: 100
 
305 ] 
 2109,13: ]
 
60 ; 
 2109,14: ;
 
23 int 
 2111,1: int
 
5 NAME VARIABLE 
 2111,5: getch
 2111,10: VARIABLE
 
65 VARIABLE 
 2111,10: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2111,10: (
 2111,11: void
 2111,15: )
 
186 void 
 2111,11: void
 
187 ) 
 2111,15: )
 
94 { option_block_item_list } 
 2112,1: {
 2113,3: return
 2113,10: (
 2113,11: bufp
 2113,15: VARIABLE
 2113,16: >
 2113,18: 0
 2113,19: )
 2113,21: ?
 2113,23: buf
 2113,26: VARIABLE
 2113,26: [
 2113,27: --
 2113,29: bufp
 2113,33: VARIABLE
 2113,33: ]
 2113,35: :
 2113,37: getchar
 2113,44: VARIABLE
 2113,44: (
 2113,45: )
 2113,46: ;
 2114,1: }
 
201 return option_expression ; 
 2113,3: return
 2113,10: (
 2113,11: bufp
 2113,15: VARIABLE
 2113,16: >
 2113,18: 0
 2113,19: )
 2113,21: ?
 2113,23: buf
 2113,26: VARIABLE
 2113,26: [
 2113,27: --
 2113,29: bufp
 2113,33: VARIABLE
 2113,33: ]
 2113,35: :
 2113,37: getchar
 2113,44: VARIABLE
 2113,44: (
 2113,45: )
 2113,46: ;
 
338 ( expression ) 
 2113,10: (
 2113,11: bufp
 2113,15: VARIABLE
 2113,16: >
 2113,18: 0
 2113,19: )
 
165 NAME VARIABLE 
 2113,11: bufp
 2113,15: VARIABLE
 
65 VARIABLE 
 2113,15: VARIABLE
 
154 > 
 2113,16: >
 
252 CONSTANT 
 2113,18: 0
 
267 ) 
 2113,19: )
 
160 ? expression : conditional_expression 
 2113,21: ?
 2113,23: buf
 2113,26: VARIABLE
 2113,26: [
 2113,27: --
 2113,29: bufp
 2113,33: VARIABLE
 2113,33: ]
 2113,35: :
 2113,37: getchar
 2113,44: VARIABLE
 2113,44: (
 2113,45: )
 
265 NAME VARIABLE 
 2113,23: buf
 2113,26: VARIABLE
 
179 VARIABLE 
 2113,26: VARIABLE
 
147 [ expression ] 
 2113,26: [
 2113,27: --
 2113,29: bufp
 2113,33: VARIABLE
 2113,33: ]
 
236 -- unary_expression 
 2113,27: --
 2113,29: bufp
 2113,33: VARIABLE
 
169 NAME VARIABLE 
 2113,29: bufp
 2113,33: VARIABLE
 
179 VARIABLE 
 2113,33: VARIABLE
 
353 ] 
 2113,33: ]
 
366 : conditional_expression 
 2113,35: :
 2113,37: getchar
 2113,44: VARIABLE
 2113,44: (
 2113,45: )
 
431 NAME VARIABLE 
 2113,37: getchar
 2113,44: VARIABLE
 
179 VARIABLE 
 2113,44: VARIABLE
 
147 ( option_argument_expression_list ) 
 2113,44: (
 2113,45: )
 
351 ) 
 2113,45: )
 
415 ; 
 2113,46: ;
 
201 } 
 2114,1: }
 
23 void 
 2116,1: void
 
5 NAME VARIABLE 
 2116,6: ungetch
 2116,13: VARIABLE
 
65 VARIABLE 
 2116,13: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2116,13: (
 2116,14: int
 2116,18: c
 2116,19: VARIABLE
 2116,19: )
 
186 int 
 2116,14: int
 
298 NAME VARIABLE 
 2116,18: c
 2116,19: VARIABLE
 
65 VARIABLE 
 2116,19: VARIABLE
 
187 ) 
 2116,19: )
 
94 { option_block_item_list } 
 2117,1: {
 2118,3: if
 2118,6: (
 2118,7: bufp
 2118,11: VARIABLE
 2118,12: >=
 2118,15: 100
 2118,18: )
 2119,3: {
 2120,5: printf
 2120,11: VARIABLE
 2120,11: (
 2120,12: "
 2120,44: )
 2120,45: ;
 2121,3: }
 2122,3: else
 2123,3: {
 2124,5: buf
 2124,8: VARIABLE
 2124,8: [
 2124,9: bufp
 2124,13: VARIABLE
 2124,13: ++
 2124,15: ]
 2124,17: =
 2124,19: c
 2124,20: VARIABLE
 2124,20: ;
 2125,3: }
 2126,1: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 2118,3: if
 2118,6: (
 2118,7: bufp
 2118,11: VARIABLE
 2118,12: >=
 2118,15: 100
 2118,18: )
 2119,3: {
 2120,5: printf
 2120,11: VARIABLE
 2120,11: (
 2120,12: "
 2120,44: )
 2120,45: ;
 2121,3: }
 2122,3: else
 2123,3: {
 2124,5: buf
 2124,8: VARIABLE
 2124,8: [
 2124,9: bufp
 2124,13: VARIABLE
 2124,13: ++
 2124,15: ]
 2124,17: =
 2124,19: c
 2124,20: VARIABLE
 2124,20: ;
 2125,3: }
 
404 ( expression ) scoped_statement else scoped_statement 
 2118,6: (
 2118,7: bufp
 2118,11: VARIABLE
 2118,12: >=
 2118,15: 100
 2118,18: )
 2119,3: {
 2120,5: printf
 2120,11: VARIABLE
 2120,11: (
 2120,12: "
 2120,44: )
 2120,45: ;
 2121,3: }
 2122,3: else
 2123,3: {
 2124,5: buf
 2124,8: VARIABLE
 2124,8: [
 2124,9: bufp
 2124,13: VARIABLE
 2124,13: ++
 2124,15: ]
 2124,17: =
 2124,19: c
 2124,20: VARIABLE
 2124,20: ;
 2125,3: }
 
455 NAME VARIABLE 
 2118,7: bufp
 2118,11: VARIABLE
 
179 VARIABLE 
 2118,11: VARIABLE
 
154 >= 
 2118,12: >=
 
252 CONSTANT 
 2118,15: 100
 
483 ) scoped_statement else scoped_statement 
 2118,18: )
 2119,3: {
 2120,5: printf
 2120,11: VARIABLE
 2120,11: (
 2120,12: "
 2120,44: )
 2120,45: ;
 2121,3: }
 2122,3: else
 2123,3: {
 2124,5: buf
 2124,8: VARIABLE
 2124,8: [
 2124,9: bufp
 2124,13: VARIABLE
 2124,13: ++
 2124,15: ]
 2124,17: =
 2124,19: c
 2124,20: VARIABLE
 2124,20: ;
 2125,3: }
 
320 { option_block_item_list } 
 2119,3: {
 2120,5: printf
 2120,11: VARIABLE
 2120,11: (
 2120,12: "
 2120,44: )
 2120,45: ;
 2121,3: }
 
201 NAME VARIABLE 
 2120,5: printf
 2120,11: VARIABLE
 
65 VARIABLE 
 2120,11: VARIABLE
 
147 ( option_argument_expression_list ) 
 2120,11: (
 2120,12: "
 2120,44: )
 
235 STRING_LITERAL 
 2120,12: "
 
351 ) 
 2120,44: )
 
331 ; 
 2120,45: ;
 
201 } 
 2121,3: }
 
512 else scoped_statement 
 2122,3: else
 2123,3: {
 2124,5: buf
 2124,8: VARIABLE
 2124,8: [
 2124,9: bufp
 2124,13: VARIABLE
 2124,13: ++
 2124,15: ]
 2124,17: =
 2124,19: c
 2124,20: VARIABLE
 2124,20: ;
 2125,3: }
 
320 { option_block_item_list } 
 2123,3: {
 2124,5: buf
 2124,8: VARIABLE
 2124,8: [
 2124,9: bufp
 2124,13: VARIABLE
 2124,13: ++
 2124,15: ]
 2124,17: =
 2124,19: c
 2124,20: VARIABLE
 2124,20: ;
 2125,3: }
 
201 NAME VARIABLE 
 2124,5: buf
 2124,8: VARIABLE
 
65 VARIABLE 
 2124,8: VARIABLE
 
147 [ expression ] 
 2124,8: [
 2124,9: bufp
 2124,13: VARIABLE
 2124,13: ++
 2124,15: ]
 
236 NAME VARIABLE 
 2124,9: bufp
 2124,13: VARIABLE
 
179 VARIABLE 
 2124,13: VARIABLE
 
147 ++ 
 2124,13: ++
 
353 ] 
 2124,15: ]
 
181 = 
 2124,17: =
 
279 NAME VARIABLE 
 2124,19: c
 2124,20: VARIABLE
 
179 VARIABLE 
 2124,20: VARIABLE
 
331 ; 
 2124,20: ;
 
201 } 
 2125,3: }
 
201 } 
 2126,1: }
 
23 int 
 2128,1: int
 
5 NAME VARIABLE 
 2128,5: getop
 2128,10: VARIABLE
 
65 VARIABLE 
 2128,10: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2128,10: (
 2128,11: char
 2128,16: s
 2128,17: VARIABLE
 2128,17: [
 2128,18: ]
 2128,19: )
 
186 char 
 2128,11: char
 
298 NAME VARIABLE 
 2128,16: s
 2128,17: VARIABLE
 
65 VARIABLE 
 2128,17: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 2128,17: [
 2128,18: ]
 
305 ] 
 2128,18: ]
 
187 ) 
 2128,19: )
 
94 { option_block_item_list } 
 2129,1: {
 2130,3: int
 2130,7: i
 2130,8: VARIABLE
 2130,9: =
 2130,11: 0
 2130,12: ,
 2130,14: c
 2130,15: VARIABLE
 2130,15: ;
 2132,3: while
 2132,9: (
 2132,10: (
 2132,11: s
 2132,12: VARIABLE
 2132,12: [
 2132,13: 0
 2132,14: ]
 2132,16: =
 2132,18: c
 2132,19: VARIABLE
 2132,20: =
 2132,22: getch
 2132,27: VARIABLE
 2132,27: (
 2132,28: )
 2132,29: )
 2132,31: ==
 2132,34: ' '
 2132,38: ||
 2132,41: c
 2132,42: VARIABLE
 2132,43: ==
 2132,46: '\t'
 2132,50: )
 2133,5: ;
 2135,3: s
 2135,4: VARIABLE
 2135,4: [
 2135,5: 1
 2135,6: ]
 2135,8: =
 2135,10: '\0'
 2135,14: ;
 2137,3: if
 2137,6: (
 2137,7: !
 2139,7: (
 2139,8: (
 2139,9: *
 2139,10: __ctype_b_loc
 2139,23: VARIABLE
 2139,24: (
 2139,25: )
 2139,26: )
 2139,27: [
 2139,28: (
 2139,29: int
 2139,32: )
 2139,34: (
 2139,35: (
 2141,7: c
 2141,8: VARIABLE
 2143,7: )
 2143,8: )
 2143,9: ]
 2143,11: &
 2143,13: (
 2143,14: unsigned
 2143,23: short
 2143,29: int
 2143,32: )
 2143,34: _ISdigit
 2143,42: VARIABLE
 2143,42: )
 2145,18: &&
 2145,21: c
 2145,22: VARIABLE
 2145,23: !=
 2145,26: '.'
 2145,30: &&
 2145,33: c
 2145,34: VARIABLE
 2145,35: !=
 2145,38: '-'
 2145,41: )
 2146,3: {
 2147,5: return
 2147,12: c
 2147,13: VARIABLE
 2147,13: ;
 2148,3: }
 2150,3: if
 2150,6: (
 2150,7: c
 2150,8: VARIABLE
 2150,9: ==
 2150,12: '-'
 2150,15: )
 2151,3: {
 2152,5: int
 2152,9: next
 2152,13: VARIABLE
 2152,14: =
 2152,16: getch
 2152,21: VARIABLE
 2152,21: (
 2152,22: )
 2152,23: ;
 2153,5: if
 2153,8: (
 2153,9: !
 2155,9: (
 2155,10: (
 2155,11: *
 2155,12: __ctype_b_loc
 2155,25: VARIABLE
 2155,26: (
 2155,27: )
 2155,28: )
 2155,29: [
 2155,30: (
 2155,31: int
 2155,34: )
 2155,36: (
 2155,37: (
 2157,9: next
 2157,13: VARIABLE
 2159,9: )
 2159,10: )
 2159,11: ]
 2159,13: &
 2159,15: (
 2159,16: unsigned
 2159,25: short
 2159,31: int
 2159,34: )
 2159,36: _ISdigit
 2159,44: VARIABLE
 2159,44: )
 2161,23: &&
 2161,26: next
 2161,30: VARIABLE
 2161,31: !=
 2161,34: '.'
 2161,37: )
 2162,5: {
 2163,7: return
 2163,14: next
 2163,18: VARIABLE
 2163,18: ;
 2164,5: }
 2166,5: s
 2166,6: VARIABLE
 2166,6: [
 2166,7: i
 2166,8: VARIABLE
 2166,8: ]
 2166,10: =
 2166,12: c
 2166,13: VARIABLE
 2166,13: ;
 2167,5: ungetch
 2167,12: VARIABLE
 2167,12: (
 2167,13: c
 2167,14: VARIABLE
 2167,15: =
 2167,17: next
 2167,21: VARIABLE
 2167,21: )
 2167,22: ;
 2168,3: }
 2169,3: else
 2170,3: {
 2171,5: c
 2171,6: VARIABLE
 2171,7: =
 2171,9: getch
 2171,14: VARIABLE
 2171,14: (
 2171,15: )
 2171,16: ;
 2172,3: }
 2174,3: if
 2174,6: (
 2176,6: (
 2176,7: (
 2176,8: *
 2176,9: __ctype_b_loc
 2176,22: VARIABLE
 2176,23: (
 2176,24: )
 2176,25: )
 2176,26: [
 2176,27: (
 2176,28: int
 2176,31: )
 2176,33: (
 2176,34: (
 2178,6: c
 2178,7: VARIABLE
 2180,6: )
 2180,7: )
 2180,8: ]
 2180,10: &
 2180,12: (
 2180,13: unsigned
 2180,22: short
 2180,28: int
 2180,31: )
 2180,33: _ISdigit
 2180,41: VARIABLE
 2180,41: )
 2182,16: )
 2183,3: {
 2184,5: while
 2184,11: (
 2186,11: (
 2186,12: (
 2186,13: *
 2186,14: __ctype_b_loc
 2186,27: VARIABLE
 2186,28: (
 2186,29: )
 2186,30: )
 2186,31: [
 2186,32: (
 2186,33: int
 2186,36: )
 2186,38: (
 2186,39: (
 2188,11: s
 2188,12: VARIABLE
 2188,12: [
 2188,13: ++
 2188,15: i
 2188,16: VARIABLE
 2188,16: ]
 2188,18: =
 2188,20: c
 2188,21: VARIABLE
 2188,22: =
 2188,24: getch
 2188,29: VARIABLE
 2188,29: (
 2188,30: )
 2190,11: )
 2190,12: )
 2190,13: ]
 2190,15: &
 2190,17: (
 2190,18: unsigned
 2190,27: short
 2190,33: int
 2190,36: )
 2190,38: _ISdigit
 2190,46: VARIABLE
 2190,46: )
 2192,40: )
 2193,7: ;
 2194,3: }
 2196,3: if
 2196,6: (
 2196,7: c
 2196,8: VARIABLE
 2196,9: ==
 2196,12: '.'
 2196,15: )
 2197,3: {
 2198,5: while
 2198,11: (
 2200,11: (
 2200,12: (
 2200,13: *
 2200,14: __ctype_b_loc
 2200,27: VARIABLE
 2200,28: (
 2200,29: )
 2200,30: )
 2200,31: [
 2200,32: (
 2200,33: int
 2200,36: )
 2200,38: (
 2200,39: (
 2202,11: s
 2202,12: VARIABLE
 2202,12: [
 2202,13: ++
 2202,15: i
 2202,16: VARIABLE
 2202,16: ]
 2202,18: =
 2202,20: c
 2202,21: VARIABLE
 2202,22: =
 2202,24: getch
 2202,29: VARIABLE
 2202,29: (
 2202,30: )
 2204,11: )
 2204,12: )
 2204,13: ]
 2204,15: &
 2204,17: (
 2204,18: unsigned
 2204,27: short
 2204,33: int
 2204,36: )
 2204,38: _ISdigit
 2204,46: VARIABLE
 2204,46: )
 2206,40: )
 2207,7: ;
 2208,3: }
 2210,3: if
 2210,6: (
 2210,7: c
 2210,8: VARIABLE
 2210,9: !=
 2212,11: (
 2212,12: -
 2212,13: 1
 2212,14: )
 2214,14: )
 2215,3: {
 2216,5: ungetch
 2216,12: VARIABLE
 2216,12: (
 2216,13: c
 2216,14: VARIABLE
 2216,14: )
 2216,15: ;
 2217,3: }
 2219,3: return
 2219,10: '0'
 2219,13: ;
 2220,1: }
 
201 int 
 2130,3: int
 
93 NAME VARIABLE 
 2130,7: i
 2130,8: VARIABLE
 
65 VARIABLE 
 2130,8: VARIABLE
 
59 = c_initializer 
 2130,9: =
 2130,11: 0
 
108 CONSTANT 
 2130,11: 0
 
61 , init_declarator_declarator_varname 
 2130,12: ,
 2130,14: c
 2130,15: VARIABLE
 
110 NAME VARIABLE 
 2130,14: c
 2130,15: VARIABLE
 
65 VARIABLE 
 2130,15: VARIABLE
 
60 ; 
 2130,15: ;
 
320 while ( expression ) scoped_statement 
 2132,3: while
 2132,9: (
 2132,10: (
 2132,11: s
 2132,12: VARIABLE
 2132,12: [
 2132,13: 0
 2132,14: ]
 2132,16: =
 2132,18: c
 2132,19: VARIABLE
 2132,20: =
 2132,22: getch
 2132,27: VARIABLE
 2132,27: (
 2132,28: )
 2132,29: )
 2132,31: ==
 2132,34: ' '
 2132,38: ||
 2132,41: c
 2132,42: VARIABLE
 2132,43: ==
 2132,46: '\t'
 2132,50: )
 2133,5: ;
 
406 ( expression ) scoped_statement 
 2132,9: (
 2132,10: (
 2132,11: s
 2132,12: VARIABLE
 2132,12: [
 2132,13: 0
 2132,14: ]
 2132,16: =
 2132,18: c
 2132,19: VARIABLE
 2132,20: =
 2132,22: getch
 2132,27: VARIABLE
 2132,27: (
 2132,28: )
 2132,29: )
 2132,31: ==
 2132,34: ' '
 2132,38: ||
 2132,41: c
 2132,42: VARIABLE
 2132,43: ==
 2132,46: '\t'
 2132,50: )
 2133,5: ;
 
457 ( expression ) 
 2132,10: (
 2132,11: s
 2132,12: VARIABLE
 2132,12: [
 2132,13: 0
 2132,14: ]
 2132,16: =
 2132,18: c
 2132,19: VARIABLE
 2132,20: =
 2132,22: getch
 2132,27: VARIABLE
 2132,27: (
 2132,28: )
 2132,29: )
 
165 NAME VARIABLE 
 2132,11: s
 2132,12: VARIABLE
 
65 VARIABLE 
 2132,12: VARIABLE
 
147 [ expression ] 
 2132,12: [
 2132,13: 0
 2132,14: ]
 
236 CONSTANT 
 2132,13: 0
 
353 ] 
 2132,14: ]
 
181 = 
 2132,16: =
 
279 NAME VARIABLE 
 2132,18: c
 2132,19: VARIABLE
 
179 VARIABLE 
 2132,19: VARIABLE
 
181 = 
 2132,20: =
 
279 NAME VARIABLE 
 2132,22: getch
 2132,27: VARIABLE
 
179 VARIABLE 
 2132,27: VARIABLE
 
147 ( option_argument_expression_list ) 
 2132,27: (
 2132,28: )
 
351 ) 
 2132,28: )
 
267 ) 
 2132,29: )
 
155 == 
 2132,31: ==
 
257 CONSTANT 
 2132,34: ' '
 
160 || logical_and_expression 
 2132,38: ||
 2132,41: c
 2132,42: VARIABLE
 2132,43: ==
 2132,46: '\t'
 
264 NAME VARIABLE 
 2132,41: c
 2132,42: VARIABLE
 
179 VARIABLE 
 2132,42: VARIABLE
 
155 == 
 2132,43: ==
 
257 CONSTANT 
 2132,46: '\t'
 
485 ) scoped_statement 
 2132,50: )
 2133,5: ;
 
331 ; 
 2133,5: ;
 
201 NAME VARIABLE 
 2135,3: s
 2135,4: VARIABLE
 
65 VARIABLE 
 2135,4: VARIABLE
 
147 [ expression ] 
 2135,4: [
 2135,5: 1
 2135,6: ]
 
236 CONSTANT 
 2135,5: 1
 
353 ] 
 2135,6: ]
 
181 = 
 2135,8: =
 
279 CONSTANT 
 2135,10: '\0'
 
331 ; 
 2135,14: ;
 
320 if ( expression ) scoped_statement 
 2137,3: if
 2137,6: (
 2137,7: !
 2139,7: (
 2139,8: (
 2139,9: *
 2139,10: __ctype_b_loc
 2139,23: VARIABLE
 2139,24: (
 2139,25: )
 2139,26: )
 2139,27: [
 2139,28: (
 2139,29: int
 2139,32: )
 2139,34: (
 2139,35: (
 2141,7: c
 2141,8: VARIABLE
 2143,7: )
 2143,8: )
 2143,9: ]
 2143,11: &
 2143,13: (
 2143,14: unsigned
 2143,23: short
 2143,29: int
 2143,32: )
 2143,34: _ISdigit
 2143,42: VARIABLE
 2143,42: )
 2145,18: &&
 2145,21: c
 2145,22: VARIABLE
 2145,23: !=
 2145,26: '.'
 2145,30: &&
 2145,33: c
 2145,34: VARIABLE
 2145,35: !=
 2145,38: '-'
 2145,41: )
 2146,3: {
 2147,5: return
 2147,12: c
 2147,13: VARIABLE
 2147,13: ;
 2148,3: }
 
404 ( expression ) scoped_statement 
 2137,6: (
 2137,7: !
 2139,7: (
 2139,8: (
 2139,9: *
 2139,10: __ctype_b_loc
 2139,23: VARIABLE
 2139,24: (
 2139,25: )
 2139,26: )
 2139,27: [
 2139,28: (
 2139,29: int
 2139,32: )
 2139,34: (
 2139,35: (
 2141,7: c
 2141,8: VARIABLE
 2143,7: )
 2143,8: )
 2143,9: ]
 2143,11: &
 2143,13: (
 2143,14: unsigned
 2143,23: short
 2143,29: int
 2143,32: )
 2143,34: _ISdigit
 2143,42: VARIABLE
 2143,42: )
 2145,18: &&
 2145,21: c
 2145,22: VARIABLE
 2145,23: !=
 2145,26: '.'
 2145,30: &&
 2145,33: c
 2145,34: VARIABLE
 2145,35: !=
 2145,38: '-'
 2145,41: )
 2146,3: {
 2147,5: return
 2147,12: c
 2147,13: VARIABLE
 2147,13: ;
 2148,3: }
 
455 ! 
 2137,7: !
 
149 ( expression ) 
 2139,7: (
 2139,8: (
 2139,9: *
 2139,10: __ctype_b_loc
 2139,23: VARIABLE
 2139,24: (
 2139,25: )
 2139,26: )
 2139,27: [
 2139,28: (
 2139,29: int
 2139,32: )
 2139,34: (
 2139,35: (
 2141,7: c
 2141,8: VARIABLE
 2143,7: )
 2143,8: )
 2143,9: ]
 2143,11: &
 2143,13: (
 2143,14: unsigned
 2143,23: short
 2143,29: int
 2143,32: )
 2143,34: _ISdigit
 2143,42: VARIABLE
 2143,42: )
 
165 ( expression ) 
 2139,8: (
 2139,9: *
 2139,10: __ctype_b_loc
 2139,23: VARIABLE
 2139,24: (
 2139,25: )
 2139,26: )
 
165 * 
 2139,9: *
 
149 NAME VARIABLE 
 2139,10: __ctype_b_loc
 2139,23: VARIABLE
 
179 VARIABLE 
 2139,23: VARIABLE
 
147 ( option_argument_expression_list ) 
 2139,24: (
 2139,25: )
 
351 ) 
 2139,25: )
 
267 ) 
 2139,26: )
 
147 [ expression ] 
 2139,27: [
 2139,28: (
 2139,29: int
 2139,32: )
 2139,34: (
 2139,35: (
 2141,7: c
 2141,8: VARIABLE
 2143,7: )
 2143,8: )
 2143,9: ]
 
236 ( type_name ) cast_expression 
 2139,28: (
 2139,29: int
 2139,32: )
 2139,34: (
 2139,35: (
 2141,7: c
 2141,8: VARIABLE
 2143,7: )
 2143,8: )
 
165 int 
 2139,29: int
 
269 ) cast_expression 
 2139,32: )
 2139,34: (
 2139,35: (
 2141,7: c
 2141,8: VARIABLE
 2143,7: )
 2143,8: )
 
369 ( expression ) 
 2139,34: (
 2139,35: (
 2141,7: c
 2141,8: VARIABLE
 2143,7: )
 2143,8: )
 
165 ( expression ) 
 2139,35: (
 2141,7: c
 2141,8: VARIABLE
 2143,7: )
 
165 NAME VARIABLE 
 2141,7: c
 2141,8: VARIABLE
 
65 VARIABLE 
 2141,8: VARIABLE
 
267 ) 
 2143,7: )
 
267 ) 
 2143,8: )
 
353 ] 
 2143,9: ]
 
156 & equality_expression 
 2143,11: &
 2143,13: (
 2143,14: unsigned
 2143,23: short
 2143,29: int
 2143,32: )
 2143,34: _ISdigit
 2143,42: VARIABLE
 
260 ( type_name ) cast_expression 
 2143,13: (
 2143,14: unsigned
 2143,23: short
 2143,29: int
 2143,32: )
 2143,34: _ISdigit
 2143,42: VARIABLE
 
165 unsigned 
 2143,14: unsigned
 
135 short 
 2143,23: short
 
135 int 
 2143,29: int
 
269 ) cast_expression 
 2143,32: )
 2143,34: _ISdigit
 2143,42: VARIABLE
 
369 NAME VARIABLE 
 2143,34: _ISdigit
 2143,42: VARIABLE
 
179 VARIABLE 
 2143,42: VARIABLE
 
267 ) 
 2143,42: )
 
159 && inclusive_or_expression 
 2145,18: &&
 2145,21: c
 2145,22: VARIABLE
 2145,23: !=
 2145,26: '.'
 
263 NAME VARIABLE 
 2145,21: c
 2145,22: VARIABLE
 
179 VARIABLE 
 2145,22: VARIABLE
 
155 != 
 2145,23: !=
 
257 CONSTANT 
 2145,26: '.'
 
159 && inclusive_or_expression 
 2145,30: &&
 2145,33: c
 2145,34: VARIABLE
 2145,35: !=
 2145,38: '-'
 
263 NAME VARIABLE 
 2145,33: c
 2145,34: VARIABLE
 
179 VARIABLE 
 2145,34: VARIABLE
 
155 != 
 2145,35: !=
 
257 CONSTANT 
 2145,38: '-'
 
483 ) scoped_statement 
 2145,41: )
 2146,3: {
 2147,5: return
 2147,12: c
 2147,13: VARIABLE
 2147,13: ;
 2148,3: }
 
320 { option_block_item_list } 
 2146,3: {
 2147,5: return
 2147,12: c
 2147,13: VARIABLE
 2147,13: ;
 2148,3: }
 
201 return option_expression ; 
 2147,5: return
 2147,12: c
 2147,13: VARIABLE
 2147,13: ;
 
338 NAME VARIABLE 
 2147,12: c
 2147,13: VARIABLE
 
179 VARIABLE 
 2147,13: VARIABLE
 
415 ; 
 2147,13: ;
 
201 } 
 2148,3: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 2150,3: if
 2150,6: (
 2150,7: c
 2150,8: VARIABLE
 2150,9: ==
 2150,12: '-'
 2150,15: )
 2151,3: {
 2152,5: int
 2152,9: next
 2152,13: VARIABLE
 2152,14: =
 2152,16: getch
 2152,21: VARIABLE
 2152,21: (
 2152,22: )
 2152,23: ;
 2153,5: if
 2153,8: (
 2153,9: !
 2155,9: (
 2155,10: (
 2155,11: *
 2155,12: __ctype_b_loc
 2155,25: VARIABLE
 2155,26: (
 2155,27: )
 2155,28: )
 2155,29: [
 2155,30: (
 2155,31: int
 2155,34: )
 2155,36: (
 2155,37: (
 2157,9: next
 2157,13: VARIABLE
 2159,9: )
 2159,10: )
 2159,11: ]
 2159,13: &
 2159,15: (
 2159,16: unsigned
 2159,25: short
 2159,31: int
 2159,34: )
 2159,36: _ISdigit
 2159,44: VARIABLE
 2159,44: )
 2161,23: &&
 2161,26: next
 2161,30: VARIABLE
 2161,31: !=
 2161,34: '.'
 2161,37: )
 2162,5: {
 2163,7: return
 2163,14: next
 2163,18: VARIABLE
 2163,18: ;
 2164,5: }
 2166,5: s
 2166,6: VARIABLE
 2166,6: [
 2166,7: i
 2166,8: VARIABLE
 2166,8: ]
 2166,10: =
 2166,12: c
 2166,13: VARIABLE
 2166,13: ;
 2167,5: ungetch
 2167,12: VARIABLE
 2167,12: (
 2167,13: c
 2167,14: VARIABLE
 2167,15: =
 2167,17: next
 2167,21: VARIABLE
 2167,21: )
 2167,22: ;
 2168,3: }
 2169,3: else
 2170,3: {
 2171,5: c
 2171,6: VARIABLE
 2171,7: =
 2171,9: getch
 2171,14: VARIABLE
 2171,14: (
 2171,15: )
 2171,16: ;
 2172,3: }
 
404 ( expression ) scoped_statement else scoped_statement 
 2150,6: (
 2150,7: c
 2150,8: VARIABLE
 2150,9: ==
 2150,12: '-'
 2150,15: )
 2151,3: {
 2152,5: int
 2152,9: next
 2152,13: VARIABLE
 2152,14: =
 2152,16: getch
 2152,21: VARIABLE
 2152,21: (
 2152,22: )
 2152,23: ;
 2153,5: if
 2153,8: (
 2153,9: !
 2155,9: (
 2155,10: (
 2155,11: *
 2155,12: __ctype_b_loc
 2155,25: VARIABLE
 2155,26: (
 2155,27: )
 2155,28: )
 2155,29: [
 2155,30: (
 2155,31: int
 2155,34: )
 2155,36: (
 2155,37: (
 2157,9: next
 2157,13: VARIABLE
 2159,9: )
 2159,10: )
 2159,11: ]
 2159,13: &
 2159,15: (
 2159,16: unsigned
 2159,25: short
 2159,31: int
 2159,34: )
 2159,36: _ISdigit
 2159,44: VARIABLE
 2159,44: )
 2161,23: &&
 2161,26: next
 2161,30: VARIABLE
 2161,31: !=
 2161,34: '.'
 2161,37: )
 2162,5: {
 2163,7: return
 2163,14: next
 2163,18: VARIABLE
 2163,18: ;
 2164,5: }
 2166,5: s
 2166,6: VARIABLE
 2166,6: [
 2166,7: i
 2166,8: VARIABLE
 2166,8: ]
 2166,10: =
 2166,12: c
 2166,13: VARIABLE
 2166,13: ;
 2167,5: ungetch
 2167,12: VARIABLE
 2167,12: (
 2167,13: c
 2167,14: VARIABLE
 2167,15: =
 2167,17: next
 2167,21: VARIABLE
 2167,21: )
 2167,22: ;
 2168,3: }
 2169,3: else
 2170,3: {
 2171,5: c
 2171,6: VARIABLE
 2171,7: =
 2171,9: getch
 2171,14: VARIABLE
 2171,14: (
 2171,15: )
 2171,16: ;
 2172,3: }
 
455 NAME VARIABLE 
 2150,7: c
 2150,8: VARIABLE
 
179 VARIABLE 
 2150,8: VARIABLE
 
155 == 
 2150,9: ==
 
257 CONSTANT 
 2150,12: '-'
 
483 ) scoped_statement else scoped_statement 
 2150,15: )
 2151,3: {
 2152,5: int
 2152,9: next
 2152,13: VARIABLE
 2152,14: =
 2152,16: getch
 2152,21: VARIABLE
 2152,21: (
 2152,22: )
 2152,23: ;
 2153,5: if
 2153,8: (
 2153,9: !
 2155,9: (
 2155,10: (
 2155,11: *
 2155,12: __ctype_b_loc
 2155,25: VARIABLE
 2155,26: (
 2155,27: )
 2155,28: )
 2155,29: [
 2155,30: (
 2155,31: int
 2155,34: )
 2155,36: (
 2155,37: (
 2157,9: next
 2157,13: VARIABLE
 2159,9: )
 2159,10: )
 2159,11: ]
 2159,13: &
 2159,15: (
 2159,16: unsigned
 2159,25: short
 2159,31: int
 2159,34: )
 2159,36: _ISdigit
 2159,44: VARIABLE
 2159,44: )
 2161,23: &&
 2161,26: next
 2161,30: VARIABLE
 2161,31: !=
 2161,34: '.'
 2161,37: )
 2162,5: {
 2163,7: return
 2163,14: next
 2163,18: VARIABLE
 2163,18: ;
 2164,5: }
 2166,5: s
 2166,6: VARIABLE
 2166,6: [
 2166,7: i
 2166,8: VARIABLE
 2166,8: ]
 2166,10: =
 2166,12: c
 2166,13: VARIABLE
 2166,13: ;
 2167,5: ungetch
 2167,12: VARIABLE
 2167,12: (
 2167,13: c
 2167,14: VARIABLE
 2167,15: =
 2167,17: next
 2167,21: VARIABLE
 2167,21: )
 2167,22: ;
 2168,3: }
 2169,3: else
 2170,3: {
 2171,5: c
 2171,6: VARIABLE
 2171,7: =
 2171,9: getch
 2171,14: VARIABLE
 2171,14: (
 2171,15: )
 2171,16: ;
 2172,3: }
 
320 { option_block_item_list } 
 2151,3: {
 2152,5: int
 2152,9: next
 2152,13: VARIABLE
 2152,14: =
 2152,16: getch
 2152,21: VARIABLE
 2152,21: (
 2152,22: )
 2152,23: ;
 2153,5: if
 2153,8: (
 2153,9: !
 2155,9: (
 2155,10: (
 2155,11: *
 2155,12: __ctype_b_loc
 2155,25: VARIABLE
 2155,26: (
 2155,27: )
 2155,28: )
 2155,29: [
 2155,30: (
 2155,31: int
 2155,34: )
 2155,36: (
 2155,37: (
 2157,9: next
 2157,13: VARIABLE
 2159,9: )
 2159,10: )
 2159,11: ]
 2159,13: &
 2159,15: (
 2159,16: unsigned
 2159,25: short
 2159,31: int
 2159,34: )
 2159,36: _ISdigit
 2159,44: VARIABLE
 2159,44: )
 2161,23: &&
 2161,26: next
 2161,30: VARIABLE
 2161,31: !=
 2161,34: '.'
 2161,37: )
 2162,5: {
 2163,7: return
 2163,14: next
 2163,18: VARIABLE
 2163,18: ;
 2164,5: }
 2166,5: s
 2166,6: VARIABLE
 2166,6: [
 2166,7: i
 2166,8: VARIABLE
 2166,8: ]
 2166,10: =
 2166,12: c
 2166,13: VARIABLE
 2166,13: ;
 2167,5: ungetch
 2167,12: VARIABLE
 2167,12: (
 2167,13: c
 2167,14: VARIABLE
 2167,15: =
 2167,17: next
 2167,21: VARIABLE
 2167,21: )
 2167,22: ;
 2168,3: }
 
201 int 
 2152,5: int
 
93 NAME VARIABLE 
 2152,9: next
 2152,13: VARIABLE
 
65 VARIABLE 
 2152,13: VARIABLE
 
59 = c_initializer 
 2152,14: =
 2152,16: getch
 2152,21: VARIABLE
 2152,21: (
 2152,22: )
 
108 NAME VARIABLE 
 2152,16: getch
 2152,21: VARIABLE
 
179 VARIABLE 
 2152,21: VARIABLE
 
147 ( option_argument_expression_list ) 
 2152,21: (
 2152,22: )
 
351 ) 
 2152,22: )
 
60 ; 
 2152,23: ;
 
320 if ( expression ) scoped_statement 
 2153,5: if
 2153,8: (
 2153,9: !
 2155,9: (
 2155,10: (
 2155,11: *
 2155,12: __ctype_b_loc
 2155,25: VARIABLE
 2155,26: (
 2155,27: )
 2155,28: )
 2155,29: [
 2155,30: (
 2155,31: int
 2155,34: )
 2155,36: (
 2155,37: (
 2157,9: next
 2157,13: VARIABLE
 2159,9: )
 2159,10: )
 2159,11: ]
 2159,13: &
 2159,15: (
 2159,16: unsigned
 2159,25: short
 2159,31: int
 2159,34: )
 2159,36: _ISdigit
 2159,44: VARIABLE
 2159,44: )
 2161,23: &&
 2161,26: next
 2161,30: VARIABLE
 2161,31: !=
 2161,34: '.'
 2161,37: )
 2162,5: {
 2163,7: return
 2163,14: next
 2163,18: VARIABLE
 2163,18: ;
 2164,5: }
 
404 ( expression ) scoped_statement 
 2153,8: (
 2153,9: !
 2155,9: (
 2155,10: (
 2155,11: *
 2155,12: __ctype_b_loc
 2155,25: VARIABLE
 2155,26: (
 2155,27: )
 2155,28: )
 2155,29: [
 2155,30: (
 2155,31: int
 2155,34: )
 2155,36: (
 2155,37: (
 2157,9: next
 2157,13: VARIABLE
 2159,9: )
 2159,10: )
 2159,11: ]
 2159,13: &
 2159,15: (
 2159,16: unsigned
 2159,25: short
 2159,31: int
 2159,34: )
 2159,36: _ISdigit
 2159,44: VARIABLE
 2159,44: )
 2161,23: &&
 2161,26: next
 2161,30: VARIABLE
 2161,31: !=
 2161,34: '.'
 2161,37: )
 2162,5: {
 2163,7: return
 2163,14: next
 2163,18: VARIABLE
 2163,18: ;
 2164,5: }
 
455 ! 
 2153,9: !
 
149 ( expression ) 
 2155,9: (
 2155,10: (
 2155,11: *
 2155,12: __ctype_b_loc
 2155,25: VARIABLE
 2155,26: (
 2155,27: )
 2155,28: )
 2155,29: [
 2155,30: (
 2155,31: int
 2155,34: )
 2155,36: (
 2155,37: (
 2157,9: next
 2157,13: VARIABLE
 2159,9: )
 2159,10: )
 2159,11: ]
 2159,13: &
 2159,15: (
 2159,16: unsigned
 2159,25: short
 2159,31: int
 2159,34: )
 2159,36: _ISdigit
 2159,44: VARIABLE
 2159,44: )
 
165 ( expression ) 
 2155,10: (
 2155,11: *
 2155,12: __ctype_b_loc
 2155,25: VARIABLE
 2155,26: (
 2155,27: )
 2155,28: )
 
165 * 
 2155,11: *
 
149 NAME VARIABLE 
 2155,12: __ctype_b_loc
 2155,25: VARIABLE
 
179 VARIABLE 
 2155,25: VARIABLE
 
147 ( option_argument_expression_list ) 
 2155,26: (
 2155,27: )
 
351 ) 
 2155,27: )
 
267 ) 
 2155,28: )
 
147 [ expression ] 
 2155,29: [
 2155,30: (
 2155,31: int
 2155,34: )
 2155,36: (
 2155,37: (
 2157,9: next
 2157,13: VARIABLE
 2159,9: )
 2159,10: )
 2159,11: ]
 
236 ( type_name ) cast_expression 
 2155,30: (
 2155,31: int
 2155,34: )
 2155,36: (
 2155,37: (
 2157,9: next
 2157,13: VARIABLE
 2159,9: )
 2159,10: )
 
165 int 
 2155,31: int
 
269 ) cast_expression 
 2155,34: )
 2155,36: (
 2155,37: (
 2157,9: next
 2157,13: VARIABLE
 2159,9: )
 2159,10: )
 
369 ( expression ) 
 2155,36: (
 2155,37: (
 2157,9: next
 2157,13: VARIABLE
 2159,9: )
 2159,10: )
 
165 ( expression ) 
 2155,37: (
 2157,9: next
 2157,13: VARIABLE
 2159,9: )
 
165 NAME VARIABLE 
 2157,9: next
 2157,13: VARIABLE
 
65 VARIABLE 
 2157,13: VARIABLE
 
267 ) 
 2159,9: )
 
267 ) 
 2159,10: )
 
353 ] 
 2159,11: ]
 
156 & equality_expression 
 2159,13: &
 2159,15: (
 2159,16: unsigned
 2159,25: short
 2159,31: int
 2159,34: )
 2159,36: _ISdigit
 2159,44: VARIABLE
 
260 ( type_name ) cast_expression 
 2159,15: (
 2159,16: unsigned
 2159,25: short
 2159,31: int
 2159,34: )
 2159,36: _ISdigit
 2159,44: VARIABLE
 
165 unsigned 
 2159,16: unsigned
 
135 short 
 2159,25: short
 
135 int 
 2159,31: int
 
269 ) cast_expression 
 2159,34: )
 2159,36: _ISdigit
 2159,44: VARIABLE
 
369 NAME VARIABLE 
 2159,36: _ISdigit
 2159,44: VARIABLE
 
179 VARIABLE 
 2159,44: VARIABLE
 
267 ) 
 2159,44: )
 
159 && inclusive_or_expression 
 2161,23: &&
 2161,26: next
 2161,30: VARIABLE
 2161,31: !=
 2161,34: '.'
 
263 NAME VARIABLE 
 2161,26: next
 2161,30: VARIABLE
 
179 VARIABLE 
 2161,30: VARIABLE
 
155 != 
 2161,31: !=
 
257 CONSTANT 
 2161,34: '.'
 
483 ) scoped_statement 
 2161,37: )
 2162,5: {
 2163,7: return
 2163,14: next
 2163,18: VARIABLE
 2163,18: ;
 2164,5: }
 
320 { option_block_item_list } 
 2162,5: {
 2163,7: return
 2163,14: next
 2163,18: VARIABLE
 2163,18: ;
 2164,5: }
 
201 return option_expression ; 
 2163,7: return
 2163,14: next
 2163,18: VARIABLE
 2163,18: ;
 
338 NAME VARIABLE 
 2163,14: next
 2163,18: VARIABLE
 
179 VARIABLE 
 2163,18: VARIABLE
 
415 ; 
 2163,18: ;
 
201 } 
 2164,5: }
 
201 NAME VARIABLE 
 2166,5: s
 2166,6: VARIABLE
 
65 VARIABLE 
 2166,6: VARIABLE
 
147 [ expression ] 
 2166,6: [
 2166,7: i
 2166,8: VARIABLE
 2166,8: ]
 
236 NAME VARIABLE 
 2166,7: i
 2166,8: VARIABLE
 
179 VARIABLE 
 2166,8: VARIABLE
 
353 ] 
 2166,8: ]
 
181 = 
 2166,10: =
 
279 NAME VARIABLE 
 2166,12: c
 2166,13: VARIABLE
 
179 VARIABLE 
 2166,13: VARIABLE
 
331 ; 
 2166,13: ;
 
201 NAME VARIABLE 
 2167,5: ungetch
 2167,12: VARIABLE
 
65 VARIABLE 
 2167,12: VARIABLE
 
147 ( option_argument_expression_list ) 
 2167,12: (
 2167,13: c
 2167,14: VARIABLE
 2167,15: =
 2167,17: next
 2167,21: VARIABLE
 2167,21: )
 
235 NAME VARIABLE 
 2167,13: c
 2167,14: VARIABLE
 
179 VARIABLE 
 2167,14: VARIABLE
 
181 = 
 2167,15: =
 
279 NAME VARIABLE 
 2167,17: next
 2167,21: VARIABLE
 
179 VARIABLE 
 2167,21: VARIABLE
 
351 ) 
 2167,21: )
 
331 ; 
 2167,22: ;
 
201 } 
 2168,3: }
 
512 else scoped_statement 
 2169,3: else
 2170,3: {
 2171,5: c
 2171,6: VARIABLE
 2171,7: =
 2171,9: getch
 2171,14: VARIABLE
 2171,14: (
 2171,15: )
 2171,16: ;
 2172,3: }
 
320 { option_block_item_list } 
 2170,3: {
 2171,5: c
 2171,6: VARIABLE
 2171,7: =
 2171,9: getch
 2171,14: VARIABLE
 2171,14: (
 2171,15: )
 2171,16: ;
 2172,3: }
 
201 NAME VARIABLE 
 2171,5: c
 2171,6: VARIABLE
 
65 VARIABLE 
 2171,6: VARIABLE
 
181 = 
 2171,7: =
 
279 NAME VARIABLE 
 2171,9: getch
 2171,14: VARIABLE
 
179 VARIABLE 
 2171,14: VARIABLE
 
147 ( option_argument_expression_list ) 
 2171,14: (
 2171,15: )
 
351 ) 
 2171,15: )
 
331 ; 
 2171,16: ;
 
201 } 
 2172,3: }
 
320 if ( expression ) scoped_statement 
 2174,3: if
 2174,6: (
 2176,6: (
 2176,7: (
 2176,8: *
 2176,9: __ctype_b_loc
 2176,22: VARIABLE
 2176,23: (
 2176,24: )
 2176,25: )
 2176,26: [
 2176,27: (
 2176,28: int
 2176,31: )
 2176,33: (
 2176,34: (
 2178,6: c
 2178,7: VARIABLE
 2180,6: )
 2180,7: )
 2180,8: ]
 2180,10: &
 2180,12: (
 2180,13: unsigned
 2180,22: short
 2180,28: int
 2180,31: )
 2180,33: _ISdigit
 2180,41: VARIABLE
 2180,41: )
 2182,16: )
 2183,3: {
 2184,5: while
 2184,11: (
 2186,11: (
 2186,12: (
 2186,13: *
 2186,14: __ctype_b_loc
 2186,27: VARIABLE
 2186,28: (
 2186,29: )
 2186,30: )
 2186,31: [
 2186,32: (
 2186,33: int
 2186,36: )
 2186,38: (
 2186,39: (
 2188,11: s
 2188,12: VARIABLE
 2188,12: [
 2188,13: ++
 2188,15: i
 2188,16: VARIABLE
 2188,16: ]
 2188,18: =
 2188,20: c
 2188,21: VARIABLE
 2188,22: =
 2188,24: getch
 2188,29: VARIABLE
 2188,29: (
 2188,30: )
 2190,11: )
 2190,12: )
 2190,13: ]
 2190,15: &
 2190,17: (
 2190,18: unsigned
 2190,27: short
 2190,33: int
 2190,36: )
 2190,38: _ISdigit
 2190,46: VARIABLE
 2190,46: )
 2192,40: )
 2193,7: ;
 2194,3: }
 
404 ( expression ) scoped_statement 
 2174,6: (
 2176,6: (
 2176,7: (
 2176,8: *
 2176,9: __ctype_b_loc
 2176,22: VARIABLE
 2176,23: (
 2176,24: )
 2176,25: )
 2176,26: [
 2176,27: (
 2176,28: int
 2176,31: )
 2176,33: (
 2176,34: (
 2178,6: c
 2178,7: VARIABLE
 2180,6: )
 2180,7: )
 2180,8: ]
 2180,10: &
 2180,12: (
 2180,13: unsigned
 2180,22: short
 2180,28: int
 2180,31: )
 2180,33: _ISdigit
 2180,41: VARIABLE
 2180,41: )
 2182,16: )
 2183,3: {
 2184,5: while
 2184,11: (
 2186,11: (
 2186,12: (
 2186,13: *
 2186,14: __ctype_b_loc
 2186,27: VARIABLE
 2186,28: (
 2186,29: )
 2186,30: )
 2186,31: [
 2186,32: (
 2186,33: int
 2186,36: )
 2186,38: (
 2186,39: (
 2188,11: s
 2188,12: VARIABLE
 2188,12: [
 2188,13: ++
 2188,15: i
 2188,16: VARIABLE
 2188,16: ]
 2188,18: =
 2188,20: c
 2188,21: VARIABLE
 2188,22: =
 2188,24: getch
 2188,29: VARIABLE
 2188,29: (
 2188,30: )
 2190,11: )
 2190,12: )
 2190,13: ]
 2190,15: &
 2190,17: (
 2190,18: unsigned
 2190,27: short
 2190,33: int
 2190,36: )
 2190,38: _ISdigit
 2190,46: VARIABLE
 2190,46: )
 2192,40: )
 2193,7: ;
 2194,3: }
 
455 ( expression ) 
 2176,6: (
 2176,7: (
 2176,8: *
 2176,9: __ctype_b_loc
 2176,22: VARIABLE
 2176,23: (
 2176,24: )
 2176,25: )
 2176,26: [
 2176,27: (
 2176,28: int
 2176,31: )
 2176,33: (
 2176,34: (
 2178,6: c
 2178,7: VARIABLE
 2180,6: )
 2180,7: )
 2180,8: ]
 2180,10: &
 2180,12: (
 2180,13: unsigned
 2180,22: short
 2180,28: int
 2180,31: )
 2180,33: _ISdigit
 2180,41: VARIABLE
 2180,41: )
 
165 ( expression ) 
 2176,7: (
 2176,8: *
 2176,9: __ctype_b_loc
 2176,22: VARIABLE
 2176,23: (
 2176,24: )
 2176,25: )
 
165 * 
 2176,8: *
 
149 NAME VARIABLE 
 2176,9: __ctype_b_loc
 2176,22: VARIABLE
 
179 VARIABLE 
 2176,22: VARIABLE
 
147 ( option_argument_expression_list ) 
 2176,23: (
 2176,24: )
 
351 ) 
 2176,24: )
 
267 ) 
 2176,25: )
 
147 [ expression ] 
 2176,26: [
 2176,27: (
 2176,28: int
 2176,31: )
 2176,33: (
 2176,34: (
 2178,6: c
 2178,7: VARIABLE
 2180,6: )
 2180,7: )
 2180,8: ]
 
236 ( type_name ) cast_expression 
 2176,27: (
 2176,28: int
 2176,31: )
 2176,33: (
 2176,34: (
 2178,6: c
 2178,7: VARIABLE
 2180,6: )
 2180,7: )
 
165 int 
 2176,28: int
 
269 ) cast_expression 
 2176,31: )
 2176,33: (
 2176,34: (
 2178,6: c
 2178,7: VARIABLE
 2180,6: )
 2180,7: )
 
369 ( expression ) 
 2176,33: (
 2176,34: (
 2178,6: c
 2178,7: VARIABLE
 2180,6: )
 2180,7: )
 
165 ( expression ) 
 2176,34: (
 2178,6: c
 2178,7: VARIABLE
 2180,6: )
 
165 NAME VARIABLE 
 2178,6: c
 2178,7: VARIABLE
 
65 VARIABLE 
 2178,7: VARIABLE
 
267 ) 
 2180,6: )
 
267 ) 
 2180,7: )
 
353 ] 
 2180,8: ]
 
156 & equality_expression 
 2180,10: &
 2180,12: (
 2180,13: unsigned
 2180,22: short
 2180,28: int
 2180,31: )
 2180,33: _ISdigit
 2180,41: VARIABLE
 
260 ( type_name ) cast_expression 
 2180,12: (
 2180,13: unsigned
 2180,22: short
 2180,28: int
 2180,31: )
 2180,33: _ISdigit
 2180,41: VARIABLE
 
165 unsigned 
 2180,13: unsigned
 
135 short 
 2180,22: short
 
135 int 
 2180,28: int
 
269 ) cast_expression 
 2180,31: )
 2180,33: _ISdigit
 2180,41: VARIABLE
 
369 NAME VARIABLE 
 2180,33: _ISdigit
 2180,41: VARIABLE
 
179 VARIABLE 
 2180,41: VARIABLE
 
267 ) 
 2180,41: )
 
483 ) scoped_statement 
 2182,16: )
 2183,3: {
 2184,5: while
 2184,11: (
 2186,11: (
 2186,12: (
 2186,13: *
 2186,14: __ctype_b_loc
 2186,27: VARIABLE
 2186,28: (
 2186,29: )
 2186,30: )
 2186,31: [
 2186,32: (
 2186,33: int
 2186,36: )
 2186,38: (
 2186,39: (
 2188,11: s
 2188,12: VARIABLE
 2188,12: [
 2188,13: ++
 2188,15: i
 2188,16: VARIABLE
 2188,16: ]
 2188,18: =
 2188,20: c
 2188,21: VARIABLE
 2188,22: =
 2188,24: getch
 2188,29: VARIABLE
 2188,29: (
 2188,30: )
 2190,11: )
 2190,12: )
 2190,13: ]
 2190,15: &
 2190,17: (
 2190,18: unsigned
 2190,27: short
 2190,33: int
 2190,36: )
 2190,38: _ISdigit
 2190,46: VARIABLE
 2190,46: )
 2192,40: )
 2193,7: ;
 2194,3: }
 
320 { option_block_item_list } 
 2183,3: {
 2184,5: while
 2184,11: (
 2186,11: (
 2186,12: (
 2186,13: *
 2186,14: __ctype_b_loc
 2186,27: VARIABLE
 2186,28: (
 2186,29: )
 2186,30: )
 2186,31: [
 2186,32: (
 2186,33: int
 2186,36: )
 2186,38: (
 2186,39: (
 2188,11: s
 2188,12: VARIABLE
 2188,12: [
 2188,13: ++
 2188,15: i
 2188,16: VARIABLE
 2188,16: ]
 2188,18: =
 2188,20: c
 2188,21: VARIABLE
 2188,22: =
 2188,24: getch
 2188,29: VARIABLE
 2188,29: (
 2188,30: )
 2190,11: )
 2190,12: )
 2190,13: ]
 2190,15: &
 2190,17: (
 2190,18: unsigned
 2190,27: short
 2190,33: int
 2190,36: )
 2190,38: _ISdigit
 2190,46: VARIABLE
 2190,46: )
 2192,40: )
 2193,7: ;
 2194,3: }
 
320 while ( expression ) scoped_statement 
 2184,5: while
 2184,11: (
 2186,11: (
 2186,12: (
 2186,13: *
 2186,14: __ctype_b_loc
 2186,27: VARIABLE
 2186,28: (
 2186,29: )
 2186,30: )
 2186,31: [
 2186,32: (
 2186,33: int
 2186,36: )
 2186,38: (
 2186,39: (
 2188,11: s
 2188,12: VARIABLE
 2188,12: [
 2188,13: ++
 2188,15: i
 2188,16: VARIABLE
 2188,16: ]
 2188,18: =
 2188,20: c
 2188,21: VARIABLE
 2188,22: =
 2188,24: getch
 2188,29: VARIABLE
 2188,29: (
 2188,30: )
 2190,11: )
 2190,12: )
 2190,13: ]
 2190,15: &
 2190,17: (
 2190,18: unsigned
 2190,27: short
 2190,33: int
 2190,36: )
 2190,38: _ISdigit
 2190,46: VARIABLE
 2190,46: )
 2192,40: )
 2193,7: ;
 
406 ( expression ) scoped_statement 
 2184,11: (
 2186,11: (
 2186,12: (
 2186,13: *
 2186,14: __ctype_b_loc
 2186,27: VARIABLE
 2186,28: (
 2186,29: )
 2186,30: )
 2186,31: [
 2186,32: (
 2186,33: int
 2186,36: )
 2186,38: (
 2186,39: (
 2188,11: s
 2188,12: VARIABLE
 2188,12: [
 2188,13: ++
 2188,15: i
 2188,16: VARIABLE
 2188,16: ]
 2188,18: =
 2188,20: c
 2188,21: VARIABLE
 2188,22: =
 2188,24: getch
 2188,29: VARIABLE
 2188,29: (
 2188,30: )
 2190,11: )
 2190,12: )
 2190,13: ]
 2190,15: &
 2190,17: (
 2190,18: unsigned
 2190,27: short
 2190,33: int
 2190,36: )
 2190,38: _ISdigit
 2190,46: VARIABLE
 2190,46: )
 2192,40: )
 2193,7: ;
 
457 ( expression ) 
 2186,11: (
 2186,12: (
 2186,13: *
 2186,14: __ctype_b_loc
 2186,27: VARIABLE
 2186,28: (
 2186,29: )
 2186,30: )
 2186,31: [
 2186,32: (
 2186,33: int
 2186,36: )
 2186,38: (
 2186,39: (
 2188,11: s
 2188,12: VARIABLE
 2188,12: [
 2188,13: ++
 2188,15: i
 2188,16: VARIABLE
 2188,16: ]
 2188,18: =
 2188,20: c
 2188,21: VARIABLE
 2188,22: =
 2188,24: getch
 2188,29: VARIABLE
 2188,29: (
 2188,30: )
 2190,11: )
 2190,12: )
 2190,13: ]
 2190,15: &
 2190,17: (
 2190,18: unsigned
 2190,27: short
 2190,33: int
 2190,36: )
 2190,38: _ISdigit
 2190,46: VARIABLE
 2190,46: )
 
165 ( expression ) 
 2186,12: (
 2186,13: *
 2186,14: __ctype_b_loc
 2186,27: VARIABLE
 2186,28: (
 2186,29: )
 2186,30: )
 
165 * 
 2186,13: *
 
149 NAME VARIABLE 
 2186,14: __ctype_b_loc
 2186,27: VARIABLE
 
179 VARIABLE 
 2186,27: VARIABLE
 
147 ( option_argument_expression_list ) 
 2186,28: (
 2186,29: )
 
351 ) 
 2186,29: )
 
267 ) 
 2186,30: )
 
147 [ expression ] 
 2186,31: [
 2186,32: (
 2186,33: int
 2186,36: )
 2186,38: (
 2186,39: (
 2188,11: s
 2188,12: VARIABLE
 2188,12: [
 2188,13: ++
 2188,15: i
 2188,16: VARIABLE
 2188,16: ]
 2188,18: =
 2188,20: c
 2188,21: VARIABLE
 2188,22: =
 2188,24: getch
 2188,29: VARIABLE
 2188,29: (
 2188,30: )
 2190,11: )
 2190,12: )
 2190,13: ]
 
236 ( type_name ) cast_expression 
 2186,32: (
 2186,33: int
 2186,36: )
 2186,38: (
 2186,39: (
 2188,11: s
 2188,12: VARIABLE
 2188,12: [
 2188,13: ++
 2188,15: i
 2188,16: VARIABLE
 2188,16: ]
 2188,18: =
 2188,20: c
 2188,21: VARIABLE
 2188,22: =
 2188,24: getch
 2188,29: VARIABLE
 2188,29: (
 2188,30: )
 2190,11: )
 2190,12: )
 
165 int 
 2186,33: int
 
269 ) cast_expression 
 2186,36: )
 2186,38: (
 2186,39: (
 2188,11: s
 2188,12: VARIABLE
 2188,12: [
 2188,13: ++
 2188,15: i
 2188,16: VARIABLE
 2188,16: ]
 2188,18: =
 2188,20: c
 2188,21: VARIABLE
 2188,22: =
 2188,24: getch
 2188,29: VARIABLE
 2188,29: (
 2188,30: )
 2190,11: )
 2190,12: )
 
369 ( expression ) 
 2186,38: (
 2186,39: (
 2188,11: s
 2188,12: VARIABLE
 2188,12: [
 2188,13: ++
 2188,15: i
 2188,16: VARIABLE
 2188,16: ]
 2188,18: =
 2188,20: c
 2188,21: VARIABLE
 2188,22: =
 2188,24: getch
 2188,29: VARIABLE
 2188,29: (
 2188,30: )
 2190,11: )
 2190,12: )
 
165 ( expression ) 
 2186,39: (
 2188,11: s
 2188,12: VARIABLE
 2188,12: [
 2188,13: ++
 2188,15: i
 2188,16: VARIABLE
 2188,16: ]
 2188,18: =
 2188,20: c
 2188,21: VARIABLE
 2188,22: =
 2188,24: getch
 2188,29: VARIABLE
 2188,29: (
 2188,30: )
 2190,11: )
 
165 NAME VARIABLE 
 2188,11: s
 2188,12: VARIABLE
 
65 VARIABLE 
 2188,12: VARIABLE
 
147 [ expression ] 
 2188,12: [
 2188,13: ++
 2188,15: i
 2188,16: VARIABLE
 2188,16: ]
 
236 ++ unary_expression 
 2188,13: ++
 2188,15: i
 2188,16: VARIABLE
 
168 NAME VARIABLE 
 2188,15: i
 2188,16: VARIABLE
 
179 VARIABLE 
 2188,16: VARIABLE
 
353 ] 
 2188,16: ]
 
181 = 
 2188,18: =
 
279 NAME VARIABLE 
 2188,20: c
 2188,21: VARIABLE
 
179 VARIABLE 
 2188,21: VARIABLE
 
181 = 
 2188,22: =
 
279 NAME VARIABLE 
 2188,24: getch
 2188,29: VARIABLE
 
179 VARIABLE 
 2188,29: VARIABLE
 
147 ( option_argument_expression_list ) 
 2188,29: (
 2188,30: )
 
351 ) 
 2188,30: )
 
267 ) 
 2190,11: )
 
267 ) 
 2190,12: )
 
353 ] 
 2190,13: ]
 
156 & equality_expression 
 2190,15: &
 2190,17: (
 2190,18: unsigned
 2190,27: short
 2190,33: int
 2190,36: )
 2190,38: _ISdigit
 2190,46: VARIABLE
 
260 ( type_name ) cast_expression 
 2190,17: (
 2190,18: unsigned
 2190,27: short
 2190,33: int
 2190,36: )
 2190,38: _ISdigit
 2190,46: VARIABLE
 
165 unsigned 
 2190,18: unsigned
 
135 short 
 2190,27: short
 
135 int 
 2190,33: int
 
269 ) cast_expression 
 2190,36: )
 2190,38: _ISdigit
 2190,46: VARIABLE
 
369 NAME VARIABLE 
 2190,38: _ISdigit
 2190,46: VARIABLE
 
179 VARIABLE 
 2190,46: VARIABLE
 
267 ) 
 2190,46: )
 
485 ) scoped_statement 
 2192,40: )
 2193,7: ;
 
331 ; 
 2193,7: ;
 
201 } 
 2194,3: }
 
320 if ( expression ) scoped_statement 
 2196,3: if
 2196,6: (
 2196,7: c
 2196,8: VARIABLE
 2196,9: ==
 2196,12: '.'
 2196,15: )
 2197,3: {
 2198,5: while
 2198,11: (
 2200,11: (
 2200,12: (
 2200,13: *
 2200,14: __ctype_b_loc
 2200,27: VARIABLE
 2200,28: (
 2200,29: )
 2200,30: )
 2200,31: [
 2200,32: (
 2200,33: int
 2200,36: )
 2200,38: (
 2200,39: (
 2202,11: s
 2202,12: VARIABLE
 2202,12: [
 2202,13: ++
 2202,15: i
 2202,16: VARIABLE
 2202,16: ]
 2202,18: =
 2202,20: c
 2202,21: VARIABLE
 2202,22: =
 2202,24: getch
 2202,29: VARIABLE
 2202,29: (
 2202,30: )
 2204,11: )
 2204,12: )
 2204,13: ]
 2204,15: &
 2204,17: (
 2204,18: unsigned
 2204,27: short
 2204,33: int
 2204,36: )
 2204,38: _ISdigit
 2204,46: VARIABLE
 2204,46: )
 2206,40: )
 2207,7: ;
 2208,3: }
 
404 ( expression ) scoped_statement 
 2196,6: (
 2196,7: c
 2196,8: VARIABLE
 2196,9: ==
 2196,12: '.'
 2196,15: )
 2197,3: {
 2198,5: while
 2198,11: (
 2200,11: (
 2200,12: (
 2200,13: *
 2200,14: __ctype_b_loc
 2200,27: VARIABLE
 2200,28: (
 2200,29: )
 2200,30: )
 2200,31: [
 2200,32: (
 2200,33: int
 2200,36: )
 2200,38: (
 2200,39: (
 2202,11: s
 2202,12: VARIABLE
 2202,12: [
 2202,13: ++
 2202,15: i
 2202,16: VARIABLE
 2202,16: ]
 2202,18: =
 2202,20: c
 2202,21: VARIABLE
 2202,22: =
 2202,24: getch
 2202,29: VARIABLE
 2202,29: (
 2202,30: )
 2204,11: )
 2204,12: )
 2204,13: ]
 2204,15: &
 2204,17: (
 2204,18: unsigned
 2204,27: short
 2204,33: int
 2204,36: )
 2204,38: _ISdigit
 2204,46: VARIABLE
 2204,46: )
 2206,40: )
 2207,7: ;
 2208,3: }
 
455 NAME VARIABLE 
 2196,7: c
 2196,8: VARIABLE
 
179 VARIABLE 
 2196,8: VARIABLE
 
155 == 
 2196,9: ==
 
257 CONSTANT 
 2196,12: '.'
 
483 ) scoped_statement 
 2196,15: )
 2197,3: {
 2198,5: while
 2198,11: (
 2200,11: (
 2200,12: (
 2200,13: *
 2200,14: __ctype_b_loc
 2200,27: VARIABLE
 2200,28: (
 2200,29: )
 2200,30: )
 2200,31: [
 2200,32: (
 2200,33: int
 2200,36: )
 2200,38: (
 2200,39: (
 2202,11: s
 2202,12: VARIABLE
 2202,12: [
 2202,13: ++
 2202,15: i
 2202,16: VARIABLE
 2202,16: ]
 2202,18: =
 2202,20: c
 2202,21: VARIABLE
 2202,22: =
 2202,24: getch
 2202,29: VARIABLE
 2202,29: (
 2202,30: )
 2204,11: )
 2204,12: )
 2204,13: ]
 2204,15: &
 2204,17: (
 2204,18: unsigned
 2204,27: short
 2204,33: int
 2204,36: )
 2204,38: _ISdigit
 2204,46: VARIABLE
 2204,46: )
 2206,40: )
 2207,7: ;
 2208,3: }
 
320 { option_block_item_list } 
 2197,3: {
 2198,5: while
 2198,11: (
 2200,11: (
 2200,12: (
 2200,13: *
 2200,14: __ctype_b_loc
 2200,27: VARIABLE
 2200,28: (
 2200,29: )
 2200,30: )
 2200,31: [
 2200,32: (
 2200,33: int
 2200,36: )
 2200,38: (
 2200,39: (
 2202,11: s
 2202,12: VARIABLE
 2202,12: [
 2202,13: ++
 2202,15: i
 2202,16: VARIABLE
 2202,16: ]
 2202,18: =
 2202,20: c
 2202,21: VARIABLE
 2202,22: =
 2202,24: getch
 2202,29: VARIABLE
 2202,29: (
 2202,30: )
 2204,11: )
 2204,12: )
 2204,13: ]
 2204,15: &
 2204,17: (
 2204,18: unsigned
 2204,27: short
 2204,33: int
 2204,36: )
 2204,38: _ISdigit
 2204,46: VARIABLE
 2204,46: )
 2206,40: )
 2207,7: ;
 2208,3: }
 
320 while ( expression ) scoped_statement 
 2198,5: while
 2198,11: (
 2200,11: (
 2200,12: (
 2200,13: *
 2200,14: __ctype_b_loc
 2200,27: VARIABLE
 2200,28: (
 2200,29: )
 2200,30: )
 2200,31: [
 2200,32: (
 2200,33: int
 2200,36: )
 2200,38: (
 2200,39: (
 2202,11: s
 2202,12: VARIABLE
 2202,12: [
 2202,13: ++
 2202,15: i
 2202,16: VARIABLE
 2202,16: ]
 2202,18: =
 2202,20: c
 2202,21: VARIABLE
 2202,22: =
 2202,24: getch
 2202,29: VARIABLE
 2202,29: (
 2202,30: )
 2204,11: )
 2204,12: )
 2204,13: ]
 2204,15: &
 2204,17: (
 2204,18: unsigned
 2204,27: short
 2204,33: int
 2204,36: )
 2204,38: _ISdigit
 2204,46: VARIABLE
 2204,46: )
 2206,40: )
 2207,7: ;
 
406 ( expression ) scoped_statement 
 2198,11: (
 2200,11: (
 2200,12: (
 2200,13: *
 2200,14: __ctype_b_loc
 2200,27: VARIABLE
 2200,28: (
 2200,29: )
 2200,30: )
 2200,31: [
 2200,32: (
 2200,33: int
 2200,36: )
 2200,38: (
 2200,39: (
 2202,11: s
 2202,12: VARIABLE
 2202,12: [
 2202,13: ++
 2202,15: i
 2202,16: VARIABLE
 2202,16: ]
 2202,18: =
 2202,20: c
 2202,21: VARIABLE
 2202,22: =
 2202,24: getch
 2202,29: VARIABLE
 2202,29: (
 2202,30: )
 2204,11: )
 2204,12: )
 2204,13: ]
 2204,15: &
 2204,17: (
 2204,18: unsigned
 2204,27: short
 2204,33: int
 2204,36: )
 2204,38: _ISdigit
 2204,46: VARIABLE
 2204,46: )
 2206,40: )
 2207,7: ;
 
457 ( expression ) 
 2200,11: (
 2200,12: (
 2200,13: *
 2200,14: __ctype_b_loc
 2200,27: VARIABLE
 2200,28: (
 2200,29: )
 2200,30: )
 2200,31: [
 2200,32: (
 2200,33: int
 2200,36: )
 2200,38: (
 2200,39: (
 2202,11: s
 2202,12: VARIABLE
 2202,12: [
 2202,13: ++
 2202,15: i
 2202,16: VARIABLE
 2202,16: ]
 2202,18: =
 2202,20: c
 2202,21: VARIABLE
 2202,22: =
 2202,24: getch
 2202,29: VARIABLE
 2202,29: (
 2202,30: )
 2204,11: )
 2204,12: )
 2204,13: ]
 2204,15: &
 2204,17: (
 2204,18: unsigned
 2204,27: short
 2204,33: int
 2204,36: )
 2204,38: _ISdigit
 2204,46: VARIABLE
 2204,46: )
 
165 ( expression ) 
 2200,12: (
 2200,13: *
 2200,14: __ctype_b_loc
 2200,27: VARIABLE
 2200,28: (
 2200,29: )
 2200,30: )
 
165 * 
 2200,13: *
 
149 NAME VARIABLE 
 2200,14: __ctype_b_loc
 2200,27: VARIABLE
 
179 VARIABLE 
 2200,27: VARIABLE
 
147 ( option_argument_expression_list ) 
 2200,28: (
 2200,29: )
 
351 ) 
 2200,29: )
 
267 ) 
 2200,30: )
 
147 [ expression ] 
 2200,31: [
 2200,32: (
 2200,33: int
 2200,36: )
 2200,38: (
 2200,39: (
 2202,11: s
 2202,12: VARIABLE
 2202,12: [
 2202,13: ++
 2202,15: i
 2202,16: VARIABLE
 2202,16: ]
 2202,18: =
 2202,20: c
 2202,21: VARIABLE
 2202,22: =
 2202,24: getch
 2202,29: VARIABLE
 2202,29: (
 2202,30: )
 2204,11: )
 2204,12: )
 2204,13: ]
 
236 ( type_name ) cast_expression 
 2200,32: (
 2200,33: int
 2200,36: )
 2200,38: (
 2200,39: (
 2202,11: s
 2202,12: VARIABLE
 2202,12: [
 2202,13: ++
 2202,15: i
 2202,16: VARIABLE
 2202,16: ]
 2202,18: =
 2202,20: c
 2202,21: VARIABLE
 2202,22: =
 2202,24: getch
 2202,29: VARIABLE
 2202,29: (
 2202,30: )
 2204,11: )
 2204,12: )
 
165 int 
 2200,33: int
 
269 ) cast_expression 
 2200,36: )
 2200,38: (
 2200,39: (
 2202,11: s
 2202,12: VARIABLE
 2202,12: [
 2202,13: ++
 2202,15: i
 2202,16: VARIABLE
 2202,16: ]
 2202,18: =
 2202,20: c
 2202,21: VARIABLE
 2202,22: =
 2202,24: getch
 2202,29: VARIABLE
 2202,29: (
 2202,30: )
 2204,11: )
 2204,12: )
 
369 ( expression ) 
 2200,38: (
 2200,39: (
 2202,11: s
 2202,12: VARIABLE
 2202,12: [
 2202,13: ++
 2202,15: i
 2202,16: VARIABLE
 2202,16: ]
 2202,18: =
 2202,20: c
 2202,21: VARIABLE
 2202,22: =
 2202,24: getch
 2202,29: VARIABLE
 2202,29: (
 2202,30: )
 2204,11: )
 2204,12: )
 
165 ( expression ) 
 2200,39: (
 2202,11: s
 2202,12: VARIABLE
 2202,12: [
 2202,13: ++
 2202,15: i
 2202,16: VARIABLE
 2202,16: ]
 2202,18: =
 2202,20: c
 2202,21: VARIABLE
 2202,22: =
 2202,24: getch
 2202,29: VARIABLE
 2202,29: (
 2202,30: )
 2204,11: )
 
165 NAME VARIABLE 
 2202,11: s
 2202,12: VARIABLE
 
65 VARIABLE 
 2202,12: VARIABLE
 
147 [ expression ] 
 2202,12: [
 2202,13: ++
 2202,15: i
 2202,16: VARIABLE
 2202,16: ]
 
236 ++ unary_expression 
 2202,13: ++
 2202,15: i
 2202,16: VARIABLE
 
168 NAME VARIABLE 
 2202,15: i
 2202,16: VARIABLE
 
179 VARIABLE 
 2202,16: VARIABLE
 
353 ] 
 2202,16: ]
 
181 = 
 2202,18: =
 
279 NAME VARIABLE 
 2202,20: c
 2202,21: VARIABLE
 
179 VARIABLE 
 2202,21: VARIABLE
 
181 = 
 2202,22: =
 
279 NAME VARIABLE 
 2202,24: getch
 2202,29: VARIABLE
 
179 VARIABLE 
 2202,29: VARIABLE
 
147 ( option_argument_expression_list ) 
 2202,29: (
 2202,30: )
 
351 ) 
 2202,30: )
 
267 ) 
 2204,11: )
 
267 ) 
 2204,12: )
 
353 ] 
 2204,13: ]
 
156 & equality_expression 
 2204,15: &
 2204,17: (
 2204,18: unsigned
 2204,27: short
 2204,33: int
 2204,36: )
 2204,38: _ISdigit
 2204,46: VARIABLE
 
260 ( type_name ) cast_expression 
 2204,17: (
 2204,18: unsigned
 2204,27: short
 2204,33: int
 2204,36: )
 2204,38: _ISdigit
 2204,46: VARIABLE
 
165 unsigned 
 2204,18: unsigned
 
135 short 
 2204,27: short
 
135 int 
 2204,33: int
 
269 ) cast_expression 
 2204,36: )
 2204,38: _ISdigit
 2204,46: VARIABLE
 
369 NAME VARIABLE 
 2204,38: _ISdigit
 2204,46: VARIABLE
 
179 VARIABLE 
 2204,46: VARIABLE
 
267 ) 
 2204,46: )
 
485 ) scoped_statement 
 2206,40: )
 2207,7: ;
 
331 ; 
 2207,7: ;
 
201 } 
 2208,3: }
 
320 if ( expression ) scoped_statement 
 2210,3: if
 2210,6: (
 2210,7: c
 2210,8: VARIABLE
 2210,9: !=
 2212,11: (
 2212,12: -
 2212,13: 1
 2212,14: )
 2214,14: )
 2215,3: {
 2216,5: ungetch
 2216,12: VARIABLE
 2216,12: (
 2216,13: c
 2216,14: VARIABLE
 2216,14: )
 2216,15: ;
 2217,3: }
 
404 ( expression ) scoped_statement 
 2210,6: (
 2210,7: c
 2210,8: VARIABLE
 2210,9: !=
 2212,11: (
 2212,12: -
 2212,13: 1
 2212,14: )
 2214,14: )
 2215,3: {
 2216,5: ungetch
 2216,12: VARIABLE
 2216,12: (
 2216,13: c
 2216,14: VARIABLE
 2216,14: )
 2216,15: ;
 2217,3: }
 
455 NAME VARIABLE 
 2210,7: c
 2210,8: VARIABLE
 
179 VARIABLE 
 2210,8: VARIABLE
 
155 != 
 2210,9: !=
 
257 ( expression ) 
 2212,11: (
 2212,12: -
 2212,13: 1
 2212,14: )
 
165 - 
 2212,12: -
 
149 CONSTANT 
 2212,13: 1
 
267 ) 
 2212,14: )
 
483 ) scoped_statement 
 2214,14: )
 2215,3: {
 2216,5: ungetch
 2216,12: VARIABLE
 2216,12: (
 2216,13: c
 2216,14: VARIABLE
 2216,14: )
 2216,15: ;
 2217,3: }
 
320 { option_block_item_list } 
 2215,3: {
 2216,5: ungetch
 2216,12: VARIABLE
 2216,12: (
 2216,13: c
 2216,14: VARIABLE
 2216,14: )
 2216,15: ;
 2217,3: }
 
201 NAME VARIABLE 
 2216,5: ungetch
 2216,12: VARIABLE
 
65 VARIABLE 
 2216,12: VARIABLE
 
147 ( option_argument_expression_list ) 
 2216,12: (
 2216,13: c
 2216,14: VARIABLE
 2216,14: )
 
235 NAME VARIABLE 
 2216,13: c
 2216,14: VARIABLE
 
179 VARIABLE 
 2216,14: VARIABLE
 
351 ) 
 2216,14: )
 
331 ; 
 2216,15: ;
 
201 } 
 2217,3: }
 
201 return option_expression ; 
 2219,3: return
 2219,10: '0'
 2219,13: ;
 
338 CONSTANT 
 2219,10: '0'
 
415 ; 
 2219,13: ;
 
201 } 
 2220,1: }
 
23 $ 
 2221,1: $
 
