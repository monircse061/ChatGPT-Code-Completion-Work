parse time: 1377.15s
0 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 48,1: typedef
 48,9: long
 48,14: unsigned
 48,23: int
 
54 long 
 48,9: long
 
106 unsigned 
 48,14: unsigned
 
106 int 
 48,23: int
 
6 NAME VARIABLE 
 48,27: size_t
 48,33: VARIABLE
 
65 VARIABLE 
 48,33: VARIABLE
 
70 ; 
 48,33: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 54,1: typedef
 54,9: __builtin_va_list
 54,26: TYPE
 
54 NAME TYPE 
 54,9: __builtin_va_list
 54,26: TYPE
 
26 TYPE 
 54,26: TYPE
 
6 NAME VARIABLE 
 54,27: __gnuc_va_list
 54,41: VARIABLE
 
65 VARIABLE 
 54,41: VARIABLE
 
70 ; 
 54,41: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 68,1: typedef
 68,9: unsigned
 68,18: char
 
54 unsigned 
 68,9: unsigned
 
106 char 
 68,18: char
 
6 NAME VARIABLE 
 68,23: __u_char
 68,31: VARIABLE
 
65 VARIABLE 
 68,31: VARIABLE
 
70 ; 
 68,31: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 69,1: typedef
 69,9: unsigned
 69,18: short
 69,24: int
 
54 unsigned 
 69,9: unsigned
 
106 short 
 69,18: short
 
106 int 
 69,24: int
 
6 NAME VARIABLE 
 69,28: __u_short
 69,37: VARIABLE
 
65 VARIABLE 
 69,37: VARIABLE
 
70 ; 
 69,37: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 70,1: typedef
 70,9: unsigned
 70,18: int
 
54 unsigned 
 70,9: unsigned
 
106 int 
 70,18: int
 
6 NAME VARIABLE 
 70,22: __u_int
 70,29: VARIABLE
 
65 VARIABLE 
 70,29: VARIABLE
 
70 ; 
 70,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 71,1: typedef
 71,9: unsigned
 71,18: long
 71,23: int
 
54 unsigned 
 71,9: unsigned
 
106 long 
 71,18: long
 
106 int 
 71,23: int
 
6 NAME VARIABLE 
 71,27: __u_long
 71,35: VARIABLE
 
65 VARIABLE 
 71,35: VARIABLE
 
70 ; 
 71,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 74,1: typedef
 74,9: signed
 74,16: char
 
54 signed 
 74,9: signed
 
106 char 
 74,16: char
 
6 NAME VARIABLE 
 74,21: __int8_t
 74,29: VARIABLE
 
65 VARIABLE 
 74,29: VARIABLE
 
70 ; 
 74,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 75,1: typedef
 75,9: unsigned
 75,18: char
 
54 unsigned 
 75,9: unsigned
 
106 char 
 75,18: char
 
6 NAME VARIABLE 
 75,23: __uint8_t
 75,32: VARIABLE
 
65 VARIABLE 
 75,32: VARIABLE
 
70 ; 
 75,32: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 76,1: typedef
 76,9: signed
 76,16: short
 76,22: int
 
54 signed 
 76,9: signed
 
106 short 
 76,16: short
 
106 int 
 76,22: int
 
6 NAME VARIABLE 
 76,26: __int16_t
 76,35: VARIABLE
 
65 VARIABLE 
 76,35: VARIABLE
 
70 ; 
 76,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 77,1: typedef
 77,9: unsigned
 77,18: short
 77,24: int
 
54 unsigned 
 77,9: unsigned
 
106 short 
 77,18: short
 
106 int 
 77,24: int
 
6 NAME VARIABLE 
 77,28: __uint16_t
 77,38: VARIABLE
 
65 VARIABLE 
 77,38: VARIABLE
 
70 ; 
 77,38: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 78,1: typedef
 78,9: signed
 78,16: int
 
54 signed 
 78,9: signed
 
106 int 
 78,16: int
 
6 NAME VARIABLE 
 78,20: __int32_t
 78,29: VARIABLE
 
65 VARIABLE 
 78,29: VARIABLE
 
70 ; 
 78,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 79,1: typedef
 79,9: unsigned
 79,18: int
 
54 unsigned 
 79,9: unsigned
 
106 int 
 79,18: int
 
6 NAME VARIABLE 
 79,22: __uint32_t
 79,32: VARIABLE
 
65 VARIABLE 
 79,32: VARIABLE
 
70 ; 
 79,32: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 81,1: typedef
 81,9: signed
 81,16: long
 81,21: int
 
54 signed 
 81,9: signed
 
106 long 
 81,16: long
 
106 int 
 81,21: int
 
6 NAME VARIABLE 
 81,25: __int64_t
 81,34: VARIABLE
 
65 VARIABLE 
 81,34: VARIABLE
 
70 ; 
 81,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 82,1: typedef
 82,9: unsigned
 82,18: long
 82,23: int
 
54 unsigned 
 82,9: unsigned
 
106 long 
 82,18: long
 
106 int 
 82,23: int
 
6 NAME VARIABLE 
 82,27: __uint64_t
 82,37: VARIABLE
 
65 VARIABLE 
 82,37: VARIABLE
 
70 ; 
 82,37: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 89,1: typedef
 89,9: __int8_t
 89,17: TYPE
 
54 NAME TYPE 
 89,9: __int8_t
 89,17: TYPE
 
26 TYPE 
 89,17: TYPE
 
6 NAME VARIABLE 
 89,18: __int_least8_t
 89,32: VARIABLE
 
65 VARIABLE 
 89,32: VARIABLE
 
70 ; 
 89,32: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 90,1: typedef
 90,9: __uint8_t
 90,18: TYPE
 
54 NAME TYPE 
 90,9: __uint8_t
 90,18: TYPE
 
26 TYPE 
 90,18: TYPE
 
6 NAME VARIABLE 
 90,19: __uint_least8_t
 90,34: VARIABLE
 
65 VARIABLE 
 90,34: VARIABLE
 
70 ; 
 90,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 91,1: typedef
 91,9: __int16_t
 91,18: TYPE
 
54 NAME TYPE 
 91,9: __int16_t
 91,18: TYPE
 
26 TYPE 
 91,18: TYPE
 
6 NAME VARIABLE 
 91,19: __int_least16_t
 91,34: VARIABLE
 
65 VARIABLE 
 91,34: VARIABLE
 
70 ; 
 91,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 92,1: typedef
 92,9: __uint16_t
 92,19: TYPE
 
54 NAME TYPE 
 92,9: __uint16_t
 92,19: TYPE
 
26 TYPE 
 92,19: TYPE
 
6 NAME VARIABLE 
 92,20: __uint_least16_t
 92,36: VARIABLE
 
65 VARIABLE 
 92,36: VARIABLE
 
70 ; 
 92,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 93,1: typedef
 93,9: __int32_t
 93,18: TYPE
 
54 NAME TYPE 
 93,9: __int32_t
 93,18: TYPE
 
26 TYPE 
 93,18: TYPE
 
6 NAME VARIABLE 
 93,19: __int_least32_t
 93,34: VARIABLE
 
65 VARIABLE 
 93,34: VARIABLE
 
70 ; 
 93,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 94,1: typedef
 94,9: __uint32_t
 94,19: TYPE
 
54 NAME TYPE 
 94,9: __uint32_t
 94,19: TYPE
 
26 TYPE 
 94,19: TYPE
 
6 NAME VARIABLE 
 94,20: __uint_least32_t
 94,36: VARIABLE
 
65 VARIABLE 
 94,36: VARIABLE
 
70 ; 
 94,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 95,1: typedef
 95,9: __int64_t
 95,18: TYPE
 
54 NAME TYPE 
 95,9: __int64_t
 95,18: TYPE
 
26 TYPE 
 95,18: TYPE
 
6 NAME VARIABLE 
 95,19: __int_least64_t
 95,34: VARIABLE
 
65 VARIABLE 
 95,34: VARIABLE
 
70 ; 
 95,34: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 96,1: typedef
 96,9: __uint64_t
 96,19: TYPE
 
54 NAME TYPE 
 96,9: __uint64_t
 96,19: TYPE
 
26 TYPE 
 96,19: TYPE
 
6 NAME VARIABLE 
 96,20: __uint_least64_t
 96,36: VARIABLE
 
65 VARIABLE 
 96,36: VARIABLE
 
70 ; 
 96,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 100,1: typedef
 100,9: long
 100,14: int
 
54 long 
 100,9: long
 
106 int 
 100,14: int
 
6 NAME VARIABLE 
 100,18: __quad_t
 100,26: VARIABLE
 
65 VARIABLE 
 100,26: VARIABLE
 
70 ; 
 100,26: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 101,1: typedef
 101,9: unsigned
 101,18: long
 101,23: int
 
54 unsigned 
 101,9: unsigned
 
106 long 
 101,18: long
 
106 int 
 101,23: int
 
6 NAME VARIABLE 
 101,27: __u_quad_t
 101,37: VARIABLE
 
65 VARIABLE 
 101,37: VARIABLE
 
70 ; 
 101,37: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 109,1: typedef
 109,9: long
 109,14: int
 
54 long 
 109,9: long
 
106 int 
 109,14: int
 
6 NAME VARIABLE 
 109,18: __intmax_t
 109,28: VARIABLE
 
65 VARIABLE 
 109,28: VARIABLE
 
70 ; 
 109,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 110,1: typedef
 110,9: unsigned
 110,18: long
 110,23: int
 
54 unsigned 
 110,9: unsigned
 
106 long 
 110,18: long
 
106 int 
 110,23: int
 
6 NAME VARIABLE 
 110,27: __uintmax_t
 110,38: VARIABLE
 
65 VARIABLE 
 110,38: VARIABLE
 
70 ; 
 110,38: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 118,1: typedef
 118,9: unsigned
 118,18: long
 118,23: int
 
54 unsigned 
 118,9: unsigned
 
106 long 
 118,18: long
 
106 int 
 118,23: int
 
6 NAME VARIABLE 
 118,27: __dev_t
 118,34: VARIABLE
 
65 VARIABLE 
 118,34: VARIABLE
 
70 ; 
 118,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 119,1: typedef
 119,9: unsigned
 119,18: int
 
54 unsigned 
 119,9: unsigned
 
106 int 
 119,18: int
 
6 NAME VARIABLE 
 119,22: __uid_t
 119,29: VARIABLE
 
65 VARIABLE 
 119,29: VARIABLE
 
70 ; 
 119,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 120,1: typedef
 120,9: unsigned
 120,18: int
 
54 unsigned 
 120,9: unsigned
 
106 int 
 120,18: int
 
6 NAME VARIABLE 
 120,22: __gid_t
 120,29: VARIABLE
 
65 VARIABLE 
 120,29: VARIABLE
 
70 ; 
 120,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 121,1: typedef
 121,9: unsigned
 121,18: long
 121,23: int
 
54 unsigned 
 121,9: unsigned
 
106 long 
 121,18: long
 
106 int 
 121,23: int
 
6 NAME VARIABLE 
 121,27: __ino_t
 121,34: VARIABLE
 
65 VARIABLE 
 121,34: VARIABLE
 
70 ; 
 121,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 122,1: typedef
 122,9: unsigned
 122,18: long
 122,23: int
 
54 unsigned 
 122,9: unsigned
 
106 long 
 122,18: long
 
106 int 
 122,23: int
 
6 NAME VARIABLE 
 122,27: __ino64_t
 122,36: VARIABLE
 
65 VARIABLE 
 122,36: VARIABLE
 
70 ; 
 122,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 123,1: typedef
 123,9: unsigned
 123,18: int
 
54 unsigned 
 123,9: unsigned
 
106 int 
 123,18: int
 
6 NAME VARIABLE 
 123,22: __mode_t
 123,30: VARIABLE
 
65 VARIABLE 
 123,30: VARIABLE
 
70 ; 
 123,30: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 124,1: typedef
 124,9: unsigned
 124,18: long
 124,23: int
 
54 unsigned 
 124,9: unsigned
 
106 long 
 124,18: long
 
106 int 
 124,23: int
 
6 NAME VARIABLE 
 124,27: __nlink_t
 124,36: VARIABLE
 
65 VARIABLE 
 124,36: VARIABLE
 
70 ; 
 124,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 125,1: typedef
 125,9: long
 125,14: int
 
54 long 
 125,9: long
 
106 int 
 125,14: int
 
6 NAME VARIABLE 
 125,18: __off_t
 125,25: VARIABLE
 
65 VARIABLE 
 125,25: VARIABLE
 
70 ; 
 125,25: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 126,1: typedef
 126,9: long
 126,14: int
 
54 long 
 126,9: long
 
106 int 
 126,14: int
 
6 NAME VARIABLE 
 126,18: __off64_t
 126,27: VARIABLE
 
65 VARIABLE 
 126,27: VARIABLE
 
70 ; 
 126,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 127,1: typedef
 127,9: int
 
54 int 
 127,9: int
 
6 NAME VARIABLE 
 127,13: __pid_t
 127,20: VARIABLE
 
65 VARIABLE 
 127,20: VARIABLE
 
70 ; 
 127,20: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 128,1: typedef
 128,9: struct
 128,16: {
 128,18: int
 128,22: __val
 128,27: VARIABLE
 128,27: [
 128,28: 2
 128,29: ]
 128,30: ;
 128,32: }
 
54 struct 
 128,9: struct
 
89 { struct_declaration_list } 
 128,16: {
 128,18: int
 128,22: __val
 128,27: VARIABLE
 128,27: [
 128,28: 2
 128,29: ]
 128,30: ;
 128,32: }
 
126 int 
 128,18: int
 
200 NAME VARIABLE 
 128,22: __val
 128,27: VARIABLE
 
65 VARIABLE 
 128,27: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 128,27: [
 128,28: 2
 128,29: ]
 
188 CONSTANT 
 128,28: 2
 
305 ] 
 128,29: ]
 
313 ; 
 128,30: ;
 
198 } 
 128,32: }
 
6 NAME VARIABLE 
 128,34: __fsid_t
 128,42: VARIABLE
 
65 VARIABLE 
 128,42: VARIABLE
 
70 ; 
 128,42: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 129,1: typedef
 129,9: long
 129,14: int
 
54 long 
 129,9: long
 
106 int 
 129,14: int
 
6 NAME VARIABLE 
 129,18: __clock_t
 129,27: VARIABLE
 
65 VARIABLE 
 129,27: VARIABLE
 
70 ; 
 129,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 130,1: typedef
 130,9: unsigned
 130,18: long
 130,23: int
 
54 unsigned 
 130,9: unsigned
 
106 long 
 130,18: long
 
106 int 
 130,23: int
 
6 NAME VARIABLE 
 130,27: __rlim_t
 130,35: VARIABLE
 
65 VARIABLE 
 130,35: VARIABLE
 
70 ; 
 130,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 131,1: typedef
 131,9: unsigned
 131,18: long
 131,23: int
 
54 unsigned 
 131,9: unsigned
 
106 long 
 131,18: long
 
106 int 
 131,23: int
 
6 NAME VARIABLE 
 131,27: __rlim64_t
 131,37: VARIABLE
 
65 VARIABLE 
 131,37: VARIABLE
 
70 ; 
 131,37: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 132,1: typedef
 132,9: unsigned
 132,18: int
 
54 unsigned 
 132,9: unsigned
 
106 int 
 132,18: int
 
6 NAME VARIABLE 
 132,22: __id_t
 132,28: VARIABLE
 
65 VARIABLE 
 132,28: VARIABLE
 
70 ; 
 132,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 133,1: typedef
 133,9: long
 133,14: int
 
54 long 
 133,9: long
 
106 int 
 133,14: int
 
6 NAME VARIABLE 
 133,18: __time_t
 133,26: VARIABLE
 
65 VARIABLE 
 133,26: VARIABLE
 
70 ; 
 133,26: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 134,1: typedef
 134,9: unsigned
 134,18: int
 
54 unsigned 
 134,9: unsigned
 
106 int 
 134,18: int
 
6 NAME VARIABLE 
 134,22: __useconds_t
 134,34: VARIABLE
 
65 VARIABLE 
 134,34: VARIABLE
 
70 ; 
 134,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 135,1: typedef
 135,9: long
 135,14: int
 
54 long 
 135,9: long
 
106 int 
 135,14: int
 
6 NAME VARIABLE 
 135,18: __suseconds_t
 135,31: VARIABLE
 
65 VARIABLE 
 135,31: VARIABLE
 
70 ; 
 135,31: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 136,1: typedef
 136,9: long
 136,14: int
 
54 long 
 136,9: long
 
106 int 
 136,14: int
 
6 NAME VARIABLE 
 136,18: __suseconds64_t
 136,33: VARIABLE
 
65 VARIABLE 
 136,33: VARIABLE
 
70 ; 
 136,33: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 138,1: typedef
 138,9: int
 
54 int 
 138,9: int
 
6 NAME VARIABLE 
 138,13: __daddr_t
 138,22: VARIABLE
 
65 VARIABLE 
 138,22: VARIABLE
 
70 ; 
 138,22: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 139,1: typedef
 139,9: int
 
54 int 
 139,9: int
 
6 NAME VARIABLE 
 139,13: __key_t
 139,20: VARIABLE
 
65 VARIABLE 
 139,20: VARIABLE
 
70 ; 
 139,20: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 142,1: typedef
 142,9: int
 
54 int 
 142,9: int
 
6 NAME VARIABLE 
 142,13: __clockid_t
 142,24: VARIABLE
 
65 VARIABLE 
 142,24: VARIABLE
 
70 ; 
 142,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 145,1: typedef
 145,9: void
 
54 void 
 145,9: void
 
6 * option_type_qualifier_list option_pointer 
 145,14: *
 
64 NAME VARIABLE 
 145,16: __timer_t
 145,25: VARIABLE
 
65 VARIABLE 
 145,25: VARIABLE
 
70 ; 
 145,25: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 148,1: typedef
 148,9: long
 148,14: int
 
54 long 
 148,9: long
 
106 int 
 148,14: int
 
6 NAME VARIABLE 
 148,18: __blksize_t
 148,29: VARIABLE
 
65 VARIABLE 
 148,29: VARIABLE
 
70 ; 
 148,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 153,1: typedef
 153,9: long
 153,14: int
 
54 long 
 153,9: long
 
106 int 
 153,14: int
 
6 NAME VARIABLE 
 153,18: __blkcnt_t
 153,28: VARIABLE
 
65 VARIABLE 
 153,28: VARIABLE
 
70 ; 
 153,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 154,1: typedef
 154,9: long
 154,14: int
 
54 long 
 154,9: long
 
106 int 
 154,14: int
 
6 NAME VARIABLE 
 154,18: __blkcnt64_t
 154,30: VARIABLE
 
65 VARIABLE 
 154,30: VARIABLE
 
70 ; 
 154,30: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 157,1: typedef
 157,9: unsigned
 157,18: long
 157,23: int
 
54 unsigned 
 157,9: unsigned
 
106 long 
 157,18: long
 
106 int 
 157,23: int
 
6 NAME VARIABLE 
 157,27: __fsblkcnt_t
 157,39: VARIABLE
 
65 VARIABLE 
 157,39: VARIABLE
 
70 ; 
 157,39: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 158,1: typedef
 158,9: unsigned
 158,18: long
 158,23: int
 
54 unsigned 
 158,9: unsigned
 
106 long 
 158,18: long
 
106 int 
 158,23: int
 
6 NAME VARIABLE 
 158,27: __fsblkcnt64_t
 158,41: VARIABLE
 
65 VARIABLE 
 158,41: VARIABLE
 
70 ; 
 158,41: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 161,1: typedef
 161,9: unsigned
 161,18: long
 161,23: int
 
54 unsigned 
 161,9: unsigned
 
106 long 
 161,18: long
 
106 int 
 161,23: int
 
6 NAME VARIABLE 
 161,27: __fsfilcnt_t
 161,39: VARIABLE
 
65 VARIABLE 
 161,39: VARIABLE
 
70 ; 
 161,39: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 162,1: typedef
 162,9: unsigned
 162,18: long
 162,23: int
 
54 unsigned 
 162,9: unsigned
 
106 long 
 162,18: long
 
106 int 
 162,23: int
 
6 NAME VARIABLE 
 162,27: __fsfilcnt64_t
 162,41: VARIABLE
 
65 VARIABLE 
 162,41: VARIABLE
 
70 ; 
 162,41: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 165,1: typedef
 165,9: long
 165,14: int
 
54 long 
 165,9: long
 
106 int 
 165,14: int
 
6 NAME VARIABLE 
 165,18: __fsword_t
 165,28: VARIABLE
 
65 VARIABLE 
 165,28: VARIABLE
 
70 ; 
 165,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 167,1: typedef
 167,9: long
 167,14: int
 
54 long 
 167,9: long
 
106 int 
 167,14: int
 
6 NAME VARIABLE 
 167,18: __ssize_t
 167,27: VARIABLE
 
65 VARIABLE 
 167,27: VARIABLE
 
70 ; 
 167,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 170,1: typedef
 170,9: long
 170,14: int
 
54 long 
 170,9: long
 
106 int 
 170,14: int
 
6 NAME VARIABLE 
 170,18: __syscall_slong_t
 170,35: VARIABLE
 
65 VARIABLE 
 170,35: VARIABLE
 
70 ; 
 170,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 172,1: typedef
 172,9: unsigned
 172,18: long
 172,23: int
 
54 unsigned 
 172,9: unsigned
 
106 long 
 172,18: long
 
106 int 
 172,23: int
 
6 NAME VARIABLE 
 172,27: __syscall_ulong_t
 172,44: VARIABLE
 
65 VARIABLE 
 172,44: VARIABLE
 
70 ; 
 172,44: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 176,1: typedef
 176,9: __off64_t
 176,18: TYPE
 
54 NAME TYPE 
 176,9: __off64_t
 176,18: TYPE
 
26 TYPE 
 176,18: TYPE
 
6 NAME VARIABLE 
 176,19: __loff_t
 176,27: VARIABLE
 
65 VARIABLE 
 176,27: VARIABLE
 
70 ; 
 176,27: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 177,1: typedef
 177,9: char
 
54 char 
 177,9: char
 
6 * option_type_qualifier_list option_pointer 
 177,14: *
 
64 NAME VARIABLE 
 177,15: __caddr_t
 177,24: VARIABLE
 
65 VARIABLE 
 177,24: VARIABLE
 
70 ; 
 177,24: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 180,1: typedef
 180,9: long
 180,14: int
 
54 long 
 180,9: long
 
106 int 
 180,14: int
 
6 NAME VARIABLE 
 180,18: __intptr_t
 180,28: VARIABLE
 
65 VARIABLE 
 180,28: VARIABLE
 
70 ; 
 180,28: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 183,1: typedef
 183,9: unsigned
 183,18: int
 
54 unsigned 
 183,9: unsigned
 
106 int 
 183,18: int
 
6 NAME VARIABLE 
 183,22: __socklen_t
 183,33: VARIABLE
 
65 VARIABLE 
 183,33: VARIABLE
 
70 ; 
 183,33: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 188,1: typedef
 188,9: int
 
54 int 
 188,9: int
 
6 NAME VARIABLE 
 188,13: __sig_atomic_t
 188,27: VARIABLE
 
65 VARIABLE 
 188,27: VARIABLE
 
70 ; 
 188,27: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 197,1: typedef
 197,9: struct
 198,1: {
 199,3: int
 199,7: __count
 199,14: VARIABLE
 199,14: ;
 200,3: union
 201,3: {
 202,5: unsigned
 202,14: int
 202,18: __wch
 202,23: VARIABLE
 202,23: ;
 203,5: char
 203,10: __wchb
 203,16: VARIABLE
 203,16: [
 203,17: 4
 203,18: ]
 203,19: ;
 204,3: }
 204,5: __value
 204,12: VARIABLE
 204,12: ;
 205,1: }
 
54 struct 
 197,9: struct
 
89 { struct_declaration_list } 
 198,1: {
 199,3: int
 199,7: __count
 199,14: VARIABLE
 199,14: ;
 200,3: union
 201,3: {
 202,5: unsigned
 202,14: int
 202,18: __wch
 202,23: VARIABLE
 202,23: ;
 203,5: char
 203,10: __wchb
 203,16: VARIABLE
 203,16: [
 203,17: 4
 203,18: ]
 203,19: ;
 204,3: }
 204,5: __value
 204,12: VARIABLE
 204,12: ;
 205,1: }
 
126 int 
 199,3: int
 
200 NAME VARIABLE 
 199,7: __count
 199,14: VARIABLE
 
65 VARIABLE 
 199,14: VARIABLE
 
313 ; 
 199,14: ;
 
198 union 
 200,3: union
 
89 { struct_declaration_list } 
 201,3: {
 202,5: unsigned
 202,14: int
 202,18: __wch
 202,23: VARIABLE
 202,23: ;
 203,5: char
 203,10: __wchb
 203,16: VARIABLE
 203,16: [
 203,17: 4
 203,18: ]
 203,19: ;
 204,3: }
 
126 unsigned 
 202,5: unsigned
 
135 int 
 202,14: int
 
200 NAME VARIABLE 
 202,18: __wch
 202,23: VARIABLE
 
65 VARIABLE 
 202,23: VARIABLE
 
313 ; 
 202,23: ;
 
198 char 
 203,5: char
 
200 NAME VARIABLE 
 203,10: __wchb
 203,16: VARIABLE
 
65 VARIABLE 
 203,16: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 203,16: [
 203,17: 4
 203,18: ]
 
188 CONSTANT 
 203,17: 4
 
305 ] 
 203,18: ]
 
313 ; 
 203,19: ;
 
198 } 
 204,3: }
 
200 NAME VARIABLE 
 204,5: __value
 204,12: VARIABLE
 
65 VARIABLE 
 204,12: VARIABLE
 
313 ; 
 204,12: ;
 
198 } 
 205,1: }
 
6 NAME VARIABLE 
 205,3: __mbstate_t
 205,14: VARIABLE
 
65 VARIABLE 
 205,14: VARIABLE
 
70 ; 
 205,14: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 211,1: typedef
 211,9: struct
 211,16: _G_fpos_t
 211,25: VARIABLE
 212,1: {
 213,3: __off_t
 213,10: TYPE
 213,11: __pos
 213,16: VARIABLE
 213,16: ;
 214,3: __mbstate_t
 214,14: TYPE
 214,15: __state
 214,22: VARIABLE
 214,22: ;
 215,1: }
 
54 struct 
 211,9: struct
 
22 NAME VARIABLE 
 211,16: _G_fpos_t
 211,25: VARIABLE
 
65 VARIABLE 
 211,25: VARIABLE
 
89 { struct_declaration_list } 
 212,1: {
 213,3: __off_t
 213,10: TYPE
 213,11: __pos
 213,16: VARIABLE
 213,16: ;
 214,3: __mbstate_t
 214,14: TYPE
 214,15: __state
 214,22: VARIABLE
 214,22: ;
 215,1: }
 
126 NAME TYPE 
 213,3: __off_t
 213,10: TYPE
 
26 TYPE 
 213,10: TYPE
 
200 NAME VARIABLE 
 213,11: __pos
 213,16: VARIABLE
 
65 VARIABLE 
 213,16: VARIABLE
 
313 ; 
 213,16: ;
 
198 NAME TYPE 
 214,3: __mbstate_t
 214,14: TYPE
 
26 TYPE 
 214,14: TYPE
 
200 NAME VARIABLE 
 214,15: __state
 214,22: VARIABLE
 
65 VARIABLE 
 214,22: VARIABLE
 
313 ; 
 214,22: ;
 
198 } 
 215,1: }
 
6 NAME VARIABLE 
 215,3: __fpos_t
 215,11: VARIABLE
 
65 VARIABLE 
 215,11: VARIABLE
 
70 ; 
 215,11: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 219,1: typedef
 219,9: struct
 219,16: _G_fpos64_t
 219,27: VARIABLE
 220,1: {
 221,3: __off64_t
 221,12: TYPE
 221,13: __pos
 221,18: VARIABLE
 221,18: ;
 222,3: __mbstate_t
 222,14: TYPE
 222,15: __state
 222,22: VARIABLE
 222,22: ;
 223,1: }
 
54 struct 
 219,9: struct
 
22 NAME VARIABLE 
 219,16: _G_fpos64_t
 219,27: VARIABLE
 
65 VARIABLE 
 219,27: VARIABLE
 
89 { struct_declaration_list } 
 220,1: {
 221,3: __off64_t
 221,12: TYPE
 221,13: __pos
 221,18: VARIABLE
 221,18: ;
 222,3: __mbstate_t
 222,14: TYPE
 222,15: __state
 222,22: VARIABLE
 222,22: ;
 223,1: }
 
126 NAME TYPE 
 221,3: __off64_t
 221,12: TYPE
 
26 TYPE 
 221,12: TYPE
 
200 NAME VARIABLE 
 221,13: __pos
 221,18: VARIABLE
 
65 VARIABLE 
 221,18: VARIABLE
 
313 ; 
 221,18: ;
 
198 NAME TYPE 
 222,3: __mbstate_t
 222,14: TYPE
 
26 TYPE 
 222,14: TYPE
 
200 NAME VARIABLE 
 222,15: __state
 222,22: VARIABLE
 
65 VARIABLE 
 222,22: VARIABLE
 
313 ; 
 222,22: ;
 
198 } 
 223,1: }
 
6 NAME VARIABLE 
 223,3: __fpos64_t
 223,13: VARIABLE
 
65 VARIABLE 
 223,13: VARIABLE
 
70 ; 
 223,13: ;
 
23 struct 
 229,1: struct
 
22 NAME VARIABLE 
 229,8: _IO_FILE
 229,16: VARIABLE
 
65 VARIABLE 
 229,16: VARIABLE
 
60 ; 
 229,16: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 230,1: typedef
 230,9: struct
 230,16: _IO_FILE
 230,24: VARIABLE
 
54 struct 
 230,9: struct
 
22 NAME VARIABLE 
 230,16: _IO_FILE
 230,24: VARIABLE
 
65 VARIABLE 
 230,24: VARIABLE
 
6 NAME VARIABLE 
 230,25: __FILE
 230,31: VARIABLE
 
65 VARIABLE 
 230,31: VARIABLE
 
70 ; 
 230,31: ;
 
23 struct 
 236,1: struct
 
22 NAME VARIABLE 
 236,8: _IO_FILE
 236,16: VARIABLE
 
65 VARIABLE 
 236,16: VARIABLE
 
60 ; 
 236,16: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 239,1: typedef
 239,9: struct
 239,16: _IO_FILE
 239,24: VARIABLE
 
54 struct 
 239,9: struct
 
22 NAME VARIABLE 
 239,16: _IO_FILE
 239,24: VARIABLE
 
65 VARIABLE 
 239,24: VARIABLE
 
6 NAME VARIABLE 
 239,25: FILE
 239,29: VARIABLE
 
65 VARIABLE 
 239,29: VARIABLE
 
70 ; 
 239,29: ;
 
23 struct 
 243,1: struct
 
22 NAME VARIABLE 
 243,8: _IO_FILE
 243,16: VARIABLE
 
65 VARIABLE 
 243,16: VARIABLE
 
60 ; 
 243,16: ;
 
23 struct 
 244,1: struct
 
22 NAME VARIABLE 
 244,8: _IO_marker
 244,18: VARIABLE
 
65 VARIABLE 
 244,18: VARIABLE
 
60 ; 
 244,18: ;
 
23 struct 
 245,1: struct
 
22 NAME VARIABLE 
 245,8: _IO_codecvt
 245,19: VARIABLE
 
65 VARIABLE 
 245,19: VARIABLE
 
60 ; 
 245,19: ;
 
23 struct 
 246,1: struct
 
22 NAME VARIABLE 
 246,8: _IO_wide_data
 246,21: VARIABLE
 
65 VARIABLE 
 246,21: VARIABLE
 
60 ; 
 246,21: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 251,1: typedef
 251,9: void
 
54 void 
 251,9: void
 
6 NAME VARIABLE 
 251,14: _IO_lock_t
 251,24: VARIABLE
 
65 VARIABLE 
 251,24: VARIABLE
 
70 ; 
 251,24: ;
 
23 struct 
 257,1: struct
 
22 NAME VARIABLE 
 257,8: _IO_FILE
 257,16: VARIABLE
 
65 VARIABLE 
 257,16: VARIABLE
 
89 { struct_declaration_list } 
 258,1: {
 259,3: int
 259,7: _flags
 259,13: VARIABLE
 259,13: ;
 262,3: char
 262,8: *
 262,9: _IO_read_ptr
 262,21: VARIABLE
 262,21: ;
 263,3: char
 263,8: *
 263,9: _IO_read_end
 263,21: VARIABLE
 263,21: ;
 264,3: char
 264,8: *
 264,9: _IO_read_base
 264,22: VARIABLE
 264,22: ;
 265,3: char
 265,8: *
 265,9: _IO_write_base
 265,23: VARIABLE
 265,23: ;
 266,3: char
 266,8: *
 266,9: _IO_write_ptr
 266,22: VARIABLE
 266,22: ;
 267,3: char
 267,8: *
 267,9: _IO_write_end
 267,22: VARIABLE
 267,22: ;
 268,3: char
 268,8: *
 268,9: _IO_buf_base
 268,21: VARIABLE
 268,21: ;
 269,3: char
 269,8: *
 269,9: _IO_buf_end
 269,20: VARIABLE
 269,20: ;
 272,3: char
 272,8: *
 272,9: _IO_save_base
 272,22: VARIABLE
 272,22: ;
 273,3: char
 273,8: *
 273,9: _IO_backup_base
 273,24: VARIABLE
 273,24: ;
 274,3: char
 274,8: *
 274,9: _IO_save_end
 274,21: VARIABLE
 274,21: ;
 276,3: struct
 276,10: _IO_marker
 276,20: VARIABLE
 276,21: *
 276,22: _markers
 276,30: VARIABLE
 276,30: ;
 278,3: struct
 278,10: _IO_FILE
 278,18: VARIABLE
 278,19: *
 278,20: _chain
 278,26: VARIABLE
 278,26: ;
 280,3: int
 280,7: _fileno
 280,14: VARIABLE
 280,14: ;
 281,3: int
 281,7: _flags2
 281,14: VARIABLE
 281,14: ;
 282,3: __off_t
 282,10: TYPE
 282,11: _old_offset
 282,22: VARIABLE
 282,22: ;
 285,3: unsigned
 285,12: short
 285,18: _cur_column
 285,29: VARIABLE
 285,29: ;
 286,3: signed
 286,10: char
 286,15: _vtable_offset
 286,29: VARIABLE
 286,29: ;
 287,3: char
 287,8: _shortbuf
 287,17: VARIABLE
 287,17: [
 287,18: 1
 287,19: ]
 287,20: ;
 289,3: _IO_lock_t
 289,13: TYPE
 289,14: *
 289,15: _lock
 289,20: VARIABLE
 289,20: ;
 297,3: __off64_t
 297,12: TYPE
 297,13: _offset
 297,20: VARIABLE
 297,20: ;
 299,3: struct
 299,10: _IO_codecvt
 299,21: VARIABLE
 299,22: *
 299,23: _codecvt
 299,31: VARIABLE
 299,31: ;
 300,3: struct
 300,10: _IO_wide_data
 300,23: VARIABLE
 300,24: *
 300,25: _wide_data
 300,35: VARIABLE
 300,35: ;
 301,3: struct
 301,10: _IO_FILE
 301,18: VARIABLE
 301,19: *
 301,20: _freeres_list
 301,33: VARIABLE
 301,33: ;
 302,3: void
 302,8: *
 302,9: _freeres_buf
 302,21: VARIABLE
 302,21: ;
 303,3: size_t
 303,9: TYPE
 303,10: __pad5
 303,16: VARIABLE
 303,16: ;
 304,3: int
 304,7: _mode
 304,12: VARIABLE
 304,12: ;
 306,3: char
 306,8: _unused2
 306,16: VARIABLE
 306,16: [
 306,17: 15
 306,20: *
 306,22: sizeof
 306,29: (
 306,30: int
 306,33: )
 306,35: -
 306,37: 4
 306,39: *
 306,41: sizeof
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 306,57: -
 306,59: sizeof
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 306,74: ]
 306,75: ;
 307,1: }
 
126 int 
 259,3: int
 
200 NAME VARIABLE 
 259,7: _flags
 259,13: VARIABLE
 
65 VARIABLE 
 259,13: VARIABLE
 
313 ; 
 259,13: ;
 
198 char 
 262,3: char
 
200 * option_type_qualifier_list option_pointer 
 262,8: *
 
64 NAME VARIABLE 
 262,9: _IO_read_ptr
 262,21: VARIABLE
 
65 VARIABLE 
 262,21: VARIABLE
 
313 ; 
 262,21: ;
 
198 char 
 263,3: char
 
200 * option_type_qualifier_list option_pointer 
 263,8: *
 
64 NAME VARIABLE 
 263,9: _IO_read_end
 263,21: VARIABLE
 
65 VARIABLE 
 263,21: VARIABLE
 
313 ; 
 263,21: ;
 
198 char 
 264,3: char
 
200 * option_type_qualifier_list option_pointer 
 264,8: *
 
64 NAME VARIABLE 
 264,9: _IO_read_base
 264,22: VARIABLE
 
65 VARIABLE 
 264,22: VARIABLE
 
313 ; 
 264,22: ;
 
198 char 
 265,3: char
 
200 * option_type_qualifier_list option_pointer 
 265,8: *
 
64 NAME VARIABLE 
 265,9: _IO_write_base
 265,23: VARIABLE
 
65 VARIABLE 
 265,23: VARIABLE
 
313 ; 
 265,23: ;
 
198 char 
 266,3: char
 
200 * option_type_qualifier_list option_pointer 
 266,8: *
 
64 NAME VARIABLE 
 266,9: _IO_write_ptr
 266,22: VARIABLE
 
65 VARIABLE 
 266,22: VARIABLE
 
313 ; 
 266,22: ;
 
198 char 
 267,3: char
 
200 * option_type_qualifier_list option_pointer 
 267,8: *
 
64 NAME VARIABLE 
 267,9: _IO_write_end
 267,22: VARIABLE
 
65 VARIABLE 
 267,22: VARIABLE
 
313 ; 
 267,22: ;
 
198 char 
 268,3: char
 
200 * option_type_qualifier_list option_pointer 
 268,8: *
 
64 NAME VARIABLE 
 268,9: _IO_buf_base
 268,21: VARIABLE
 
65 VARIABLE 
 268,21: VARIABLE
 
313 ; 
 268,21: ;
 
198 char 
 269,3: char
 
200 * option_type_qualifier_list option_pointer 
 269,8: *
 
64 NAME VARIABLE 
 269,9: _IO_buf_end
 269,20: VARIABLE
 
65 VARIABLE 
 269,20: VARIABLE
 
313 ; 
 269,20: ;
 
198 char 
 272,3: char
 
200 * option_type_qualifier_list option_pointer 
 272,8: *
 
64 NAME VARIABLE 
 272,9: _IO_save_base
 272,22: VARIABLE
 
65 VARIABLE 
 272,22: VARIABLE
 
313 ; 
 272,22: ;
 
198 char 
 273,3: char
 
200 * option_type_qualifier_list option_pointer 
 273,8: *
 
64 NAME VARIABLE 
 273,9: _IO_backup_base
 273,24: VARIABLE
 
65 VARIABLE 
 273,24: VARIABLE
 
313 ; 
 273,24: ;
 
198 char 
 274,3: char
 
200 * option_type_qualifier_list option_pointer 
 274,8: *
 
64 NAME VARIABLE 
 274,9: _IO_save_end
 274,21: VARIABLE
 
65 VARIABLE 
 274,21: VARIABLE
 
313 ; 
 274,21: ;
 
198 struct 
 276,3: struct
 
22 NAME VARIABLE 
 276,10: _IO_marker
 276,20: VARIABLE
 
65 VARIABLE 
 276,20: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 276,21: *
 
64 NAME VARIABLE 
 276,22: _markers
 276,30: VARIABLE
 
65 VARIABLE 
 276,30: VARIABLE
 
313 ; 
 276,30: ;
 
198 struct 
 278,3: struct
 
22 NAME VARIABLE 
 278,10: _IO_FILE
 278,18: VARIABLE
 
65 VARIABLE 
 278,18: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 278,19: *
 
64 NAME VARIABLE 
 278,20: _chain
 278,26: VARIABLE
 
65 VARIABLE 
 278,26: VARIABLE
 
313 ; 
 278,26: ;
 
198 int 
 280,3: int
 
200 NAME VARIABLE 
 280,7: _fileno
 280,14: VARIABLE
 
65 VARIABLE 
 280,14: VARIABLE
 
313 ; 
 280,14: ;
 
198 int 
 281,3: int
 
200 NAME VARIABLE 
 281,7: _flags2
 281,14: VARIABLE
 
65 VARIABLE 
 281,14: VARIABLE
 
313 ; 
 281,14: ;
 
198 NAME TYPE 
 282,3: __off_t
 282,10: TYPE
 
26 TYPE 
 282,10: TYPE
 
200 NAME VARIABLE 
 282,11: _old_offset
 282,22: VARIABLE
 
65 VARIABLE 
 282,22: VARIABLE
 
313 ; 
 282,22: ;
 
198 unsigned 
 285,3: unsigned
 
135 short 
 285,12: short
 
200 NAME VARIABLE 
 285,18: _cur_column
 285,29: VARIABLE
 
65 VARIABLE 
 285,29: VARIABLE
 
313 ; 
 285,29: ;
 
198 signed 
 286,3: signed
 
135 char 
 286,10: char
 
200 NAME VARIABLE 
 286,15: _vtable_offset
 286,29: VARIABLE
 
65 VARIABLE 
 286,29: VARIABLE
 
313 ; 
 286,29: ;
 
198 char 
 287,3: char
 
200 NAME VARIABLE 
 287,8: _shortbuf
 287,17: VARIABLE
 
65 VARIABLE 
 287,17: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 287,17: [
 287,18: 1
 287,19: ]
 
188 CONSTANT 
 287,18: 1
 
305 ] 
 287,19: ]
 
313 ; 
 287,20: ;
 
198 NAME TYPE 
 289,3: _IO_lock_t
 289,13: TYPE
 
26 TYPE 
 289,13: TYPE
 
200 * option_type_qualifier_list option_pointer 
 289,14: *
 
64 NAME VARIABLE 
 289,15: _lock
 289,20: VARIABLE
 
65 VARIABLE 
 289,20: VARIABLE
 
313 ; 
 289,20: ;
 
198 NAME TYPE 
 297,3: __off64_t
 297,12: TYPE
 
26 TYPE 
 297,12: TYPE
 
200 NAME VARIABLE 
 297,13: _offset
 297,20: VARIABLE
 
65 VARIABLE 
 297,20: VARIABLE
 
313 ; 
 297,20: ;
 
198 struct 
 299,3: struct
 
22 NAME VARIABLE 
 299,10: _IO_codecvt
 299,21: VARIABLE
 
65 VARIABLE 
 299,21: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 299,22: *
 
64 NAME VARIABLE 
 299,23: _codecvt
 299,31: VARIABLE
 
65 VARIABLE 
 299,31: VARIABLE
 
313 ; 
 299,31: ;
 
198 struct 
 300,3: struct
 
22 NAME VARIABLE 
 300,10: _IO_wide_data
 300,23: VARIABLE
 
65 VARIABLE 
 300,23: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 300,24: *
 
64 NAME VARIABLE 
 300,25: _wide_data
 300,35: VARIABLE
 
65 VARIABLE 
 300,35: VARIABLE
 
313 ; 
 300,35: ;
 
198 struct 
 301,3: struct
 
22 NAME VARIABLE 
 301,10: _IO_FILE
 301,18: VARIABLE
 
65 VARIABLE 
 301,18: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 301,19: *
 
64 NAME VARIABLE 
 301,20: _freeres_list
 301,33: VARIABLE
 
65 VARIABLE 
 301,33: VARIABLE
 
313 ; 
 301,33: ;
 
198 void 
 302,3: void
 
200 * option_type_qualifier_list option_pointer 
 302,8: *
 
64 NAME VARIABLE 
 302,9: _freeres_buf
 302,21: VARIABLE
 
65 VARIABLE 
 302,21: VARIABLE
 
313 ; 
 302,21: ;
 
198 NAME TYPE 
 303,3: size_t
 303,9: TYPE
 
26 TYPE 
 303,9: TYPE
 
200 NAME VARIABLE 
 303,10: __pad5
 303,16: VARIABLE
 
65 VARIABLE 
 303,16: VARIABLE
 
313 ; 
 303,16: ;
 
198 int 
 304,3: int
 
200 NAME VARIABLE 
 304,7: _mode
 304,12: VARIABLE
 
65 VARIABLE 
 304,12: VARIABLE
 
313 ; 
 304,12: ;
 
198 char 
 306,3: char
 
200 NAME VARIABLE 
 306,8: _unused2
 306,16: VARIABLE
 
65 VARIABLE 
 306,16: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 306,16: [
 306,17: 15
 306,20: *
 306,22: sizeof
 306,29: (
 306,30: int
 306,33: )
 306,35: -
 306,37: 4
 306,39: *
 306,41: sizeof
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 306,57: -
 306,59: sizeof
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 306,74: ]
 
188 CONSTANT 
 306,17: 15
 
151 * 
 306,20: *
 
242 sizeof ( type_name ) 
 306,22: sizeof
 306,29: (
 306,30: int
 306,33: )
 
170 ( type_name ) 
 306,29: (
 306,30: int
 306,33: )
 
276 int 
 306,30: int
 
373 ) 
 306,33: )
 
152 - 
 306,35: -
 
246 CONSTANT 
 306,37: 4
 
357 * 
 306,39: *
 
242 sizeof ( type_name ) 
 306,41: sizeof
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 
170 ( type_name ) 
 306,48: (
 306,49: void
 306,54: *
 306,55: )
 
276 void 
 306,49: void
 
137 * option_type_qualifier_list option_pointer 
 306,54: *
 
373 ) 
 306,55: )
 
152 - 
 306,57: -
 
246 sizeof ( type_name ) 
 306,59: sizeof
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 
170 ( type_name ) 
 306,66: (
 306,67: size_t
 306,73: TYPE
 306,73: )
 
276 NAME TYPE 
 306,67: size_t
 306,73: TYPE
 
65 TYPE 
 306,73: TYPE
 
373 ) 
 306,73: )
 
305 ] 
 306,74: ]
 
313 ; 
 306,75: ;
 
198 } 
 307,1: }
 
60 ; 
 307,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 310,1: typedef
 310,9: __gnuc_va_list
 310,23: TYPE
 
54 NAME TYPE 
 310,9: __gnuc_va_list
 310,23: TYPE
 
26 TYPE 
 310,23: TYPE
 
6 NAME VARIABLE 
 310,24: va_list
 310,31: VARIABLE
 
65 VARIABLE 
 310,31: VARIABLE
 
70 ; 
 310,31: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 312,1: typedef
 312,9: __off_t
 312,16: TYPE
 
54 NAME TYPE 
 312,9: __off_t
 312,16: TYPE
 
26 TYPE 
 312,16: TYPE
 
6 NAME VARIABLE 
 312,17: off_t
 312,22: VARIABLE
 
65 VARIABLE 
 312,22: VARIABLE
 
70 ; 
 312,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 314,1: typedef
 314,9: __ssize_t
 314,18: TYPE
 
54 NAME TYPE 
 314,9: __ssize_t
 314,18: TYPE
 
26 TYPE 
 314,18: TYPE
 
6 NAME VARIABLE 
 314,19: ssize_t
 314,26: VARIABLE
 
65 VARIABLE 
 314,26: VARIABLE
 
70 ; 
 314,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 321,1: typedef
 321,9: __fpos_t
 321,17: TYPE
 
54 NAME TYPE 
 321,9: __fpos_t
 321,17: TYPE
 
26 TYPE 
 321,17: TYPE
 
6 NAME VARIABLE 
 321,18: fpos_t
 321,24: VARIABLE
 
65 VARIABLE 
 321,24: VARIABLE
 
70 ; 
 321,24: ;
 
23 extern 
 326,1: extern
 
8 NAME TYPE 
 326,8: FILE
 326,12: TYPE
 
26 TYPE 
 326,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 326,13: *
 
64 NAME VARIABLE 
 326,14: stdin
 326,19: VARIABLE
 
65 VARIABLE 
 326,19: VARIABLE
 
60 ; 
 326,19: ;
 
23 extern 
 327,1: extern
 
8 NAME TYPE 
 327,8: FILE
 327,12: TYPE
 
26 TYPE 
 327,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 327,13: *
 
64 NAME VARIABLE 
 327,14: stdout
 327,20: VARIABLE
 
65 VARIABLE 
 327,20: VARIABLE
 
60 ; 
 327,20: ;
 
23 extern 
 328,1: extern
 
8 NAME TYPE 
 328,8: FILE
 328,12: TYPE
 
26 TYPE 
 328,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 328,13: *
 
64 NAME VARIABLE 
 328,14: stderr
 328,20: VARIABLE
 
65 VARIABLE 
 328,20: VARIABLE
 
60 ; 
 328,20: ;
 
23 extern 
 335,1: extern
 
8 int 
 335,8: int
 
5 NAME VARIABLE 
 335,12: remove
 335,18: VARIABLE
 
65 VARIABLE 
 335,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 335,19: (
 335,20: const
 335,26: char
 335,31: *
 335,32: __filename
 335,42: VARIABLE
 335,42: )
 
186 const 
 335,20: const
 
103 char 
 335,26: char
 
298 * option_type_qualifier_list option_pointer 
 335,31: *
 
386 NAME VARIABLE 
 335,32: __filename
 335,42: VARIABLE
 
65 VARIABLE 
 335,42: VARIABLE
 
187 ) 
 335,42: )
 
60 ; 
 335,44: ;
 
23 extern 
 337,1: extern
 
8 int 
 337,8: int
 
5 NAME VARIABLE 
 337,12: rename
 337,18: VARIABLE
 
65 VARIABLE 
 337,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 337,19: (
 337,20: const
 337,26: char
 337,31: *
 337,32: __old
 337,37: VARIABLE
 337,37: ,
 337,39: const
 337,45: char
 337,50: *
 337,51: __new
 337,56: VARIABLE
 337,56: )
 
186 const 
 337,20: const
 
103 char 
 337,26: char
 
298 * option_type_qualifier_list option_pointer 
 337,31: *
 
386 NAME VARIABLE 
 337,32: __old
 337,37: VARIABLE
 
65 VARIABLE 
 337,37: VARIABLE
 
300 , parameter_declaration 
 337,37: ,
 337,39: const
 337,45: char
 337,50: *
 337,51: __new
 337,56: VARIABLE
 
391 const 
 337,39: const
 
103 char 
 337,45: char
 
298 * option_type_qualifier_list option_pointer 
 337,50: *
 
386 NAME VARIABLE 
 337,51: __new
 337,56: VARIABLE
 
65 VARIABLE 
 337,56: VARIABLE
 
187 ) 
 337,56: )
 
60 ; 
 337,58: ;
 
23 extern 
 341,1: extern
 
8 int 
 341,8: int
 
5 NAME VARIABLE 
 341,12: renameat
 341,20: VARIABLE
 
65 VARIABLE 
 341,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 341,21: (
 341,22: int
 341,26: __oldfd
 341,33: VARIABLE
 341,33: ,
 341,35: const
 341,41: char
 341,46: *
 341,47: __old
 341,52: VARIABLE
 341,52: ,
 341,54: int
 341,58: __newfd
 341,65: VARIABLE
 341,65: ,
 342,8: const
 342,14: char
 342,19: *
 342,20: __new
 342,25: VARIABLE
 342,25: )
 
186 int 
 341,22: int
 
298 NAME VARIABLE 
 341,26: __oldfd
 341,33: VARIABLE
 
65 VARIABLE 
 341,33: VARIABLE
 
300 , parameter_declaration 
 341,33: ,
 341,35: const
 341,41: char
 341,46: *
 341,47: __old
 341,52: VARIABLE
 
391 const 
 341,35: const
 
103 char 
 341,41: char
 
298 * option_type_qualifier_list option_pointer 
 341,46: *
 
386 NAME VARIABLE 
 341,47: __old
 341,52: VARIABLE
 
65 VARIABLE 
 341,52: VARIABLE
 
300 , parameter_declaration 
 341,52: ,
 341,54: int
 341,58: __newfd
 341,65: VARIABLE
 
391 int 
 341,54: int
 
298 NAME VARIABLE 
 341,58: __newfd
 341,65: VARIABLE
 
65 VARIABLE 
 341,65: VARIABLE
 
300 , parameter_declaration 
 341,65: ,
 342,8: const
 342,14: char
 342,19: *
 342,20: __new
 342,25: VARIABLE
 
391 const 
 342,8: const
 
103 char 
 342,14: char
 
298 * option_type_qualifier_list option_pointer 
 342,19: *
 
386 NAME VARIABLE 
 342,20: __new
 342,25: VARIABLE
 
65 VARIABLE 
 342,25: VARIABLE
 
187 ) 
 342,25: )
 
60 ; 
 342,27: ;
 
23 extern 
 344,1: extern
 
8 int 
 344,8: int
 
5 NAME VARIABLE 
 344,12: fclose
 344,18: VARIABLE
 
65 VARIABLE 
 344,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 344,19: (
 344,20: FILE
 344,24: TYPE
 344,25: *
 344,26: __stream
 344,34: VARIABLE
 344,34: )
 
186 NAME TYPE 
 344,20: FILE
 344,24: TYPE
 
65 TYPE 
 344,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 344,25: *
 
386 NAME VARIABLE 
 344,26: __stream
 344,34: VARIABLE
 
65 VARIABLE 
 344,34: VARIABLE
 
187 ) 
 344,34: )
 
60 ; 
 344,35: ;
 
23 extern 
 346,1: extern
 
8 NAME TYPE 
 346,8: FILE
 346,12: TYPE
 
26 TYPE 
 346,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 346,13: *
 
64 NAME VARIABLE 
 346,14: tmpfile
 346,21: VARIABLE
 
65 VARIABLE 
 346,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 346,22: (
 346,23: void
 346,27: )
 
186 void 
 346,23: void
 
187 ) 
 346,27: )
 
60 ; 
 347,5: ;
 
23 extern 
 349,1: extern
 
8 char 
 349,8: char
 
5 * option_type_qualifier_list option_pointer 
 349,13: *
 
64 NAME VARIABLE 
 349,14: tmpnam
 349,20: VARIABLE
 
65 VARIABLE 
 349,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 349,21: (
 349,22: char
 349,26: [
 349,27: 20
 349,29: ]
 349,30: )
 
186 char 
 349,22: char
 
231 [ option_assignment_expression ] 
 349,26: [
 349,27: 20
 349,29: ]
 
346 CONSTANT 
 349,27: 20
 
422 ] 
 349,29: ]
 
187 ) 
 349,30: )
 
60 ; 
 349,33: ;
 
23 extern 
 354,1: extern
 
8 char 
 354,8: char
 
5 * option_type_qualifier_list option_pointer 
 354,13: *
 
64 NAME VARIABLE 
 354,14: tmpnam_r
 354,22: VARIABLE
 
65 VARIABLE 
 354,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 354,23: (
 354,24: char
 354,29: __s
 354,32: VARIABLE
 354,32: [
 354,33: 20
 354,35: ]
 354,36: )
 
186 char 
 354,24: char
 
298 NAME VARIABLE 
 354,29: __s
 354,32: VARIABLE
 
65 VARIABLE 
 354,32: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 354,32: [
 354,33: 20
 354,35: ]
 
188 CONSTANT 
 354,33: 20
 
305 ] 
 354,35: ]
 
187 ) 
 354,36: )
 
60 ; 
 354,39: ;
 
23 extern 
 356,1: extern
 
8 char 
 356,8: char
 
5 * option_type_qualifier_list option_pointer 
 356,13: *
 
64 NAME VARIABLE 
 356,14: tempnam
 356,21: VARIABLE
 
65 VARIABLE 
 356,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 356,22: (
 356,23: const
 356,29: char
 356,34: *
 356,35: __dir
 356,40: VARIABLE
 356,40: ,
 356,42: const
 356,48: char
 356,53: *
 356,54: __pfx
 356,59: VARIABLE
 356,59: )
 
186 const 
 356,23: const
 
103 char 
 356,29: char
 
298 * option_type_qualifier_list option_pointer 
 356,34: *
 
386 NAME VARIABLE 
 356,35: __dir
 356,40: VARIABLE
 
65 VARIABLE 
 356,40: VARIABLE
 
300 , parameter_declaration 
 356,40: ,
 356,42: const
 356,48: char
 356,53: *
 356,54: __pfx
 356,59: VARIABLE
 
391 const 
 356,42: const
 
103 char 
 356,48: char
 
298 * option_type_qualifier_list option_pointer 
 356,53: *
 
386 NAME VARIABLE 
 356,54: __pfx
 356,59: VARIABLE
 
65 VARIABLE 
 356,59: VARIABLE
 
187 ) 
 356,59: )
 
60 ; 
 357,6: ;
 
23 extern 
 364,1: extern
 
8 int 
 364,8: int
 
5 NAME VARIABLE 
 364,12: fflush
 364,18: VARIABLE
 
65 VARIABLE 
 364,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 364,19: (
 364,20: FILE
 364,24: TYPE
 364,25: *
 364,26: __stream
 364,34: VARIABLE
 364,34: )
 
186 NAME TYPE 
 364,20: FILE
 364,24: TYPE
 
65 TYPE 
 364,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 364,25: *
 
386 NAME VARIABLE 
 364,26: __stream
 364,34: VARIABLE
 
65 VARIABLE 
 364,34: VARIABLE
 
187 ) 
 364,34: )
 
60 ; 
 364,35: ;
 
23 extern 
 366,1: extern
 
8 int 
 366,8: int
 
5 NAME VARIABLE 
 366,12: fflush_unlocked
 366,27: VARIABLE
 
65 VARIABLE 
 366,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 366,28: (
 366,29: FILE
 366,33: TYPE
 366,34: *
 366,35: __stream
 366,43: VARIABLE
 366,43: )
 
186 NAME TYPE 
 366,29: FILE
 366,33: TYPE
 
65 TYPE 
 366,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 366,34: *
 
386 NAME VARIABLE 
 366,35: __stream
 366,43: VARIABLE
 
65 VARIABLE 
 366,43: VARIABLE
 
187 ) 
 366,43: )
 
60 ; 
 366,44: ;
 
23 extern 
 368,1: extern
 
8 NAME TYPE 
 368,8: FILE
 368,12: TYPE
 
26 TYPE 
 368,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 368,13: *
 
64 NAME VARIABLE 
 368,14: fopen
 368,19: VARIABLE
 
65 VARIABLE 
 368,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 368,20: (
 368,21: const
 368,27: char
 368,32: *
 368,34: __filename
 368,44: VARIABLE
 368,44: ,
 369,7: const
 369,13: char
 369,18: *
 369,20: __modes
 369,27: VARIABLE
 369,27: )
 
186 const 
 368,21: const
 
103 char 
 368,27: char
 
298 * option_type_qualifier_list option_pointer 
 368,32: *
 
386 NAME VARIABLE 
 368,34: __filename
 368,44: VARIABLE
 
65 VARIABLE 
 368,44: VARIABLE
 
300 , parameter_declaration 
 368,44: ,
 369,7: const
 369,13: char
 369,18: *
 369,20: __modes
 369,27: VARIABLE
 
391 const 
 369,7: const
 
103 char 
 369,13: char
 
298 * option_type_qualifier_list option_pointer 
 369,18: *
 
386 NAME VARIABLE 
 369,20: __modes
 369,27: VARIABLE
 
65 VARIABLE 
 369,27: VARIABLE
 
187 ) 
 369,27: )
 
60 ; 
 370,5: ;
 
23 extern 
 375,1: extern
 
8 NAME TYPE 
 375,8: FILE
 375,12: TYPE
 
26 TYPE 
 375,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 375,13: *
 
64 NAME VARIABLE 
 375,14: freopen
 375,21: VARIABLE
 
65 VARIABLE 
 375,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 375,22: (
 375,23: const
 375,29: char
 375,34: *
 375,36: __filename
 375,46: VARIABLE
 375,46: ,
 376,9: const
 376,15: char
 376,20: *
 376,22: __modes
 376,29: VARIABLE
 376,29: ,
 377,9: FILE
 377,13: TYPE
 377,14: *
 377,16: __stream
 377,24: VARIABLE
 377,24: )
 
186 const 
 375,23: const
 
103 char 
 375,29: char
 
298 * option_type_qualifier_list option_pointer 
 375,34: *
 
386 NAME VARIABLE 
 375,36: __filename
 375,46: VARIABLE
 
65 VARIABLE 
 375,46: VARIABLE
 
300 , parameter_declaration 
 375,46: ,
 376,9: const
 376,15: char
 376,20: *
 376,22: __modes
 376,29: VARIABLE
 
391 const 
 376,9: const
 
103 char 
 376,15: char
 
298 * option_type_qualifier_list option_pointer 
 376,20: *
 
386 NAME VARIABLE 
 376,22: __modes
 376,29: VARIABLE
 
65 VARIABLE 
 376,29: VARIABLE
 
300 , parameter_declaration 
 376,29: ,
 377,9: FILE
 377,13: TYPE
 377,14: *
 377,16: __stream
 377,24: VARIABLE
 
391 NAME TYPE 
 377,9: FILE
 377,13: TYPE
 
26 TYPE 
 377,13: TYPE
 
298 * option_type_qualifier_list option_pointer 
 377,14: *
 
386 NAME VARIABLE 
 377,16: __stream
 377,24: VARIABLE
 
65 VARIABLE 
 377,24: VARIABLE
 
187 ) 
 377,24: )
 
60 ; 
 377,26: ;
 
23 extern 
 379,1: extern
 
8 NAME TYPE 
 379,8: FILE
 379,12: TYPE
 
26 TYPE 
 379,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 379,13: *
 
64 NAME VARIABLE 
 379,14: fdopen
 379,20: VARIABLE
 
65 VARIABLE 
 379,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 379,21: (
 379,22: int
 379,26: __fd
 379,30: VARIABLE
 379,30: ,
 379,32: const
 379,38: char
 379,43: *
 379,44: __modes
 379,51: VARIABLE
 379,51: )
 
186 int 
 379,22: int
 
298 NAME VARIABLE 
 379,26: __fd
 379,30: VARIABLE
 
65 VARIABLE 
 379,30: VARIABLE
 
300 , parameter_declaration 
 379,30: ,
 379,32: const
 379,38: char
 379,43: *
 379,44: __modes
 379,51: VARIABLE
 
391 const 
 379,32: const
 
103 char 
 379,38: char
 
298 * option_type_qualifier_list option_pointer 
 379,43: *
 
386 NAME VARIABLE 
 379,44: __modes
 379,51: VARIABLE
 
65 VARIABLE 
 379,51: VARIABLE
 
187 ) 
 379,51: )
 
60 ; 
 380,5: ;
 
23 extern 
 382,1: extern
 
8 NAME TYPE 
 382,8: FILE
 382,12: TYPE
 
26 TYPE 
 382,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 382,13: *
 
64 NAME VARIABLE 
 382,14: fmemopen
 382,22: VARIABLE
 
65 VARIABLE 
 382,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 382,23: (
 382,24: void
 382,29: *
 382,30: __s
 382,33: VARIABLE
 382,33: ,
 382,35: size_t
 382,41: TYPE
 382,42: __len
 382,47: VARIABLE
 382,47: ,
 382,49: const
 382,55: char
 382,60: *
 382,61: __modes
 382,68: VARIABLE
 382,68: )
 
186 void 
 382,24: void
 
298 * option_type_qualifier_list option_pointer 
 382,29: *
 
386 NAME VARIABLE 
 382,30: __s
 382,33: VARIABLE
 
65 VARIABLE 
 382,33: VARIABLE
 
300 , parameter_declaration 
 382,33: ,
 382,35: size_t
 382,41: TYPE
 382,42: __len
 382,47: VARIABLE
 
391 NAME TYPE 
 382,35: size_t
 382,41: TYPE
 
26 TYPE 
 382,41: TYPE
 
298 NAME VARIABLE 
 382,42: __len
 382,47: VARIABLE
 
65 VARIABLE 
 382,47: VARIABLE
 
300 , parameter_declaration 
 382,47: ,
 382,49: const
 382,55: char
 382,60: *
 382,61: __modes
 382,68: VARIABLE
 
391 const 
 382,49: const
 
103 char 
 382,55: char
 
298 * option_type_qualifier_list option_pointer 
 382,60: *
 
386 NAME VARIABLE 
 382,61: __modes
 382,68: VARIABLE
 
65 VARIABLE 
 382,68: VARIABLE
 
187 ) 
 382,68: )
 
60 ; 
 383,6: ;
 
23 extern 
 388,1: extern
 
8 NAME TYPE 
 388,8: FILE
 388,12: TYPE
 
26 TYPE 
 388,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 388,13: *
 
64 NAME VARIABLE 
 388,14: open_memstream
 388,28: VARIABLE
 
65 VARIABLE 
 388,28: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 388,29: (
 388,30: char
 388,35: *
 388,36: *
 388,37: __bufloc
 388,45: VARIABLE
 388,45: ,
 388,47: size_t
 388,53: TYPE
 388,54: *
 388,55: __sizeloc
 388,64: VARIABLE
 388,64: )
 
186 char 
 388,30: char
 
298 * option_type_qualifier_list option_pointer 
 388,35: *
 388,36: *
 
116 * option_type_qualifier_list option_pointer 
 388,36: *
 
386 NAME VARIABLE 
 388,37: __bufloc
 388,45: VARIABLE
 
65 VARIABLE 
 388,45: VARIABLE
 
300 , parameter_declaration 
 388,45: ,
 388,47: size_t
 388,53: TYPE
 388,54: *
 388,55: __sizeloc
 388,64: VARIABLE
 
391 NAME TYPE 
 388,47: size_t
 388,53: TYPE
 
26 TYPE 
 388,53: TYPE
 
298 * option_type_qualifier_list option_pointer 
 388,54: *
 
386 NAME VARIABLE 
 388,55: __sizeloc
 388,64: VARIABLE
 
65 VARIABLE 
 388,64: VARIABLE
 
187 ) 
 388,64: )
 
60 ; 
 389,5: ;
 
23 extern 
 391,1: extern
 
8 void 
 391,8: void
 
5 NAME VARIABLE 
 391,13: setbuf
 391,19: VARIABLE
 
65 VARIABLE 
 391,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 391,20: (
 391,21: FILE
 391,25: TYPE
 391,26: *
 391,28: __stream
 391,36: VARIABLE
 391,36: ,
 391,38: char
 391,43: *
 391,45: __buf
 391,50: VARIABLE
 391,50: )
 
186 NAME TYPE 
 391,21: FILE
 391,25: TYPE
 
65 TYPE 
 391,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 391,26: *
 
386 NAME VARIABLE 
 391,28: __stream
 391,36: VARIABLE
 
65 VARIABLE 
 391,36: VARIABLE
 
300 , parameter_declaration 
 391,36: ,
 391,38: char
 391,43: *
 391,45: __buf
 391,50: VARIABLE
 
391 char 
 391,38: char
 
298 * option_type_qualifier_list option_pointer 
 391,43: *
 
386 NAME VARIABLE 
 391,45: __buf
 391,50: VARIABLE
 
65 VARIABLE 
 391,50: VARIABLE
 
187 ) 
 391,50: )
 
60 ; 
 391,52: ;
 
23 extern 
 395,1: extern
 
8 int 
 395,8: int
 
5 NAME VARIABLE 
 395,12: setvbuf
 395,19: VARIABLE
 
65 VARIABLE 
 395,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 395,20: (
 395,21: FILE
 395,25: TYPE
 395,26: *
 395,28: __stream
 395,36: VARIABLE
 395,36: ,
 395,38: char
 395,43: *
 395,45: __buf
 395,50: VARIABLE
 395,50: ,
 396,7: int
 396,11: __modes
 396,18: VARIABLE
 396,18: ,
 396,20: size_t
 396,26: TYPE
 396,27: __n
 396,30: VARIABLE
 396,30: )
 
186 NAME TYPE 
 395,21: FILE
 395,25: TYPE
 
65 TYPE 
 395,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 395,26: *
 
386 NAME VARIABLE 
 395,28: __stream
 395,36: VARIABLE
 
65 VARIABLE 
 395,36: VARIABLE
 
300 , parameter_declaration 
 395,36: ,
 395,38: char
 395,43: *
 395,45: __buf
 395,50: VARIABLE
 
391 char 
 395,38: char
 
298 * option_type_qualifier_list option_pointer 
 395,43: *
 
386 NAME VARIABLE 
 395,45: __buf
 395,50: VARIABLE
 
65 VARIABLE 
 395,50: VARIABLE
 
300 , parameter_declaration 
 395,50: ,
 396,7: int
 396,11: __modes
 396,18: VARIABLE
 
391 int 
 396,7: int
 
298 NAME VARIABLE 
 396,11: __modes
 396,18: VARIABLE
 
65 VARIABLE 
 396,18: VARIABLE
 
300 , parameter_declaration 
 396,18: ,
 396,20: size_t
 396,26: TYPE
 396,27: __n
 396,30: VARIABLE
 
391 NAME TYPE 
 396,20: size_t
 396,26: TYPE
 
26 TYPE 
 396,26: TYPE
 
298 NAME VARIABLE 
 396,27: __n
 396,30: VARIABLE
 
65 VARIABLE 
 396,30: VARIABLE
 
187 ) 
 396,30: )
 
60 ; 
 396,32: ;
 
23 extern 
 401,1: extern
 
8 void 
 401,8: void
 
5 NAME VARIABLE 
 401,13: setbuffer
 401,22: VARIABLE
 
65 VARIABLE 
 401,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 401,23: (
 401,24: FILE
 401,28: TYPE
 401,29: *
 401,31: __stream
 401,39: VARIABLE
 401,39: ,
 401,41: char
 401,46: *
 401,48: __buf
 401,53: VARIABLE
 401,53: ,
 402,10: size_t
 402,16: TYPE
 402,17: __size
 402,23: VARIABLE
 402,23: )
 
186 NAME TYPE 
 401,24: FILE
 401,28: TYPE
 
65 TYPE 
 401,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 401,29: *
 
386 NAME VARIABLE 
 401,31: __stream
 401,39: VARIABLE
 
65 VARIABLE 
 401,39: VARIABLE
 
300 , parameter_declaration 
 401,39: ,
 401,41: char
 401,46: *
 401,48: __buf
 401,53: VARIABLE
 
391 char 
 401,41: char
 
298 * option_type_qualifier_list option_pointer 
 401,46: *
 
386 NAME VARIABLE 
 401,48: __buf
 401,53: VARIABLE
 
65 VARIABLE 
 401,53: VARIABLE
 
300 , parameter_declaration 
 401,53: ,
 402,10: size_t
 402,16: TYPE
 402,17: __size
 402,23: VARIABLE
 
391 NAME TYPE 
 402,10: size_t
 402,16: TYPE
 
26 TYPE 
 402,16: TYPE
 
298 NAME VARIABLE 
 402,17: __size
 402,23: VARIABLE
 
65 VARIABLE 
 402,23: VARIABLE
 
187 ) 
 402,23: )
 
60 ; 
 402,25: ;
 
23 extern 
 405,1: extern
 
8 void 
 405,8: void
 
5 NAME VARIABLE 
 405,13: setlinebuf
 405,23: VARIABLE
 
65 VARIABLE 
 405,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 405,24: (
 405,25: FILE
 405,29: TYPE
 405,30: *
 405,31: __stream
 405,39: VARIABLE
 405,39: )
 
186 NAME TYPE 
 405,25: FILE
 405,29: TYPE
 
65 TYPE 
 405,29: TYPE
 
298 * option_type_qualifier_list option_pointer 
 405,30: *
 
386 NAME VARIABLE 
 405,31: __stream
 405,39: VARIABLE
 
65 VARIABLE 
 405,39: VARIABLE
 
187 ) 
 405,39: )
 
60 ; 
 405,41: ;
 
23 extern 
 413,1: extern
 
8 int 
 413,8: int
 
5 NAME VARIABLE 
 413,12: fprintf
 413,19: VARIABLE
 
65 VARIABLE 
 413,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 413,20: (
 413,21: FILE
 413,25: TYPE
 413,26: *
 413,28: __stream
 413,36: VARIABLE
 413,36: ,
 414,7: const
 414,13: char
 414,18: *
 414,20: __format
 414,28: VARIABLE
 414,28: ,
 414,30: ...
 414,33: )
 
186 NAME TYPE 
 413,21: FILE
 413,25: TYPE
 
65 TYPE 
 413,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 413,26: *
 
386 NAME VARIABLE 
 413,28: __stream
 413,36: VARIABLE
 
65 VARIABLE 
 413,36: VARIABLE
 
300 , parameter_declaration 
 413,36: ,
 414,7: const
 414,13: char
 414,18: *
 414,20: __format
 414,28: VARIABLE
 
391 const 
 414,7: const
 
103 char 
 414,13: char
 
298 * option_type_qualifier_list option_pointer 
 414,18: *
 
386 NAME VARIABLE 
 414,20: __format
 414,28: VARIABLE
 
65 VARIABLE 
 414,28: VARIABLE
 
300 , ... 
 414,28: ,
 414,30: ...
 
391 ... 
 414,30: ...
 
187 ) 
 414,33: )
 
60 ; 
 414,34: ;
 
23 extern 
 419,1: extern
 
8 int 
 419,8: int
 
5 NAME VARIABLE 
 419,12: printf
 419,18: VARIABLE
 
65 VARIABLE 
 419,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 419,19: (
 419,20: const
 419,26: char
 419,31: *
 419,33: __format
 419,41: VARIABLE
 419,41: ,
 419,43: ...
 419,46: )
 
186 const 
 419,20: const
 
103 char 
 419,26: char
 
298 * option_type_qualifier_list option_pointer 
 419,31: *
 
386 NAME VARIABLE 
 419,33: __format
 419,41: VARIABLE
 
65 VARIABLE 
 419,41: VARIABLE
 
300 , ... 
 419,41: ,
 419,43: ...
 
391 ... 
 419,43: ...
 
187 ) 
 419,46: )
 
60 ; 
 419,47: ;
 
23 extern 
 421,1: extern
 
8 int 
 421,8: int
 
5 NAME VARIABLE 
 421,12: sprintf
 421,19: VARIABLE
 
65 VARIABLE 
 421,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 421,20: (
 421,21: char
 421,26: *
 421,28: __s
 421,31: VARIABLE
 421,31: ,
 422,7: const
 422,13: char
 422,18: *
 422,20: __format
 422,28: VARIABLE
 422,28: ,
 422,30: ...
 422,33: )
 
186 char 
 421,21: char
 
298 * option_type_qualifier_list option_pointer 
 421,26: *
 
386 NAME VARIABLE 
 421,28: __s
 421,31: VARIABLE
 
65 VARIABLE 
 421,31: VARIABLE
 
300 , parameter_declaration 
 421,31: ,
 422,7: const
 422,13: char
 422,18: *
 422,20: __format
 422,28: VARIABLE
 
391 const 
 422,7: const
 
103 char 
 422,13: char
 
298 * option_type_qualifier_list option_pointer 
 422,18: *
 
386 NAME VARIABLE 
 422,20: __format
 422,28: VARIABLE
 
65 VARIABLE 
 422,28: VARIABLE
 
300 , ... 
 422,28: ,
 422,30: ...
 
391 ... 
 422,30: ...
 
187 ) 
 422,33: )
 
60 ; 
 422,35: ;
 
23 extern 
 428,1: extern
 
8 int 
 428,8: int
 
5 NAME VARIABLE 
 428,12: vfprintf
 428,20: VARIABLE
 
65 VARIABLE 
 428,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 428,21: (
 428,22: FILE
 428,26: TYPE
 428,27: *
 428,29: __s
 428,32: VARIABLE
 428,32: ,
 428,34: const
 428,40: char
 428,45: *
 428,47: __format
 428,55: VARIABLE
 428,55: ,
 429,8: __gnuc_va_list
 429,22: TYPE
 429,23: __arg
 429,28: VARIABLE
 429,28: )
 
186 NAME TYPE 
 428,22: FILE
 428,26: TYPE
 
65 TYPE 
 428,26: TYPE
 
298 * option_type_qualifier_list option_pointer 
 428,27: *
 
386 NAME VARIABLE 
 428,29: __s
 428,32: VARIABLE
 
65 VARIABLE 
 428,32: VARIABLE
 
300 , parameter_declaration 
 428,32: ,
 428,34: const
 428,40: char
 428,45: *
 428,47: __format
 428,55: VARIABLE
 
391 const 
 428,34: const
 
103 char 
 428,40: char
 
298 * option_type_qualifier_list option_pointer 
 428,45: *
 
386 NAME VARIABLE 
 428,47: __format
 428,55: VARIABLE
 
65 VARIABLE 
 428,55: VARIABLE
 
300 , parameter_declaration 
 428,55: ,
 429,8: __gnuc_va_list
 429,22: TYPE
 429,23: __arg
 429,28: VARIABLE
 
391 NAME TYPE 
 429,8: __gnuc_va_list
 429,22: TYPE
 
26 TYPE 
 429,22: TYPE
 
298 NAME VARIABLE 
 429,23: __arg
 429,28: VARIABLE
 
65 VARIABLE 
 429,28: VARIABLE
 
187 ) 
 429,28: )
 
60 ; 
 429,29: ;
 
23 extern 
 434,1: extern
 
8 int 
 434,8: int
 
5 NAME VARIABLE 
 434,12: vprintf
 434,19: VARIABLE
 
65 VARIABLE 
 434,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 434,20: (
 434,21: const
 434,27: char
 434,32: *
 434,34: __format
 434,42: VARIABLE
 434,42: ,
 434,44: __gnuc_va_list
 434,58: TYPE
 434,59: __arg
 434,64: VARIABLE
 434,64: )
 
186 const 
 434,21: const
 
103 char 
 434,27: char
 
298 * option_type_qualifier_list option_pointer 
 434,32: *
 
386 NAME VARIABLE 
 434,34: __format
 434,42: VARIABLE
 
65 VARIABLE 
 434,42: VARIABLE
 
300 , parameter_declaration 
 434,42: ,
 434,44: __gnuc_va_list
 434,58: TYPE
 434,59: __arg
 434,64: VARIABLE
 
391 NAME TYPE 
 434,44: __gnuc_va_list
 434,58: TYPE
 
26 TYPE 
 434,58: TYPE
 
298 NAME VARIABLE 
 434,59: __arg
 434,64: VARIABLE
 
65 VARIABLE 
 434,64: VARIABLE
 
187 ) 
 434,64: )
 
60 ; 
 434,65: ;
 
23 extern 
 436,1: extern
 
8 int 
 436,8: int
 
5 NAME VARIABLE 
 436,12: vsprintf
 436,20: VARIABLE
 
65 VARIABLE 
 436,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 436,21: (
 436,22: char
 436,27: *
 436,29: __s
 436,32: VARIABLE
 436,32: ,
 436,34: const
 436,40: char
 436,45: *
 436,47: __format
 436,55: VARIABLE
 436,55: ,
 437,8: __gnuc_va_list
 437,22: TYPE
 437,23: __arg
 437,28: VARIABLE
 437,28: )
 
186 char 
 436,22: char
 
298 * option_type_qualifier_list option_pointer 
 436,27: *
 
386 NAME VARIABLE 
 436,29: __s
 436,32: VARIABLE
 
65 VARIABLE 
 436,32: VARIABLE
 
300 , parameter_declaration 
 436,32: ,
 436,34: const
 436,40: char
 436,45: *
 436,47: __format
 436,55: VARIABLE
 
391 const 
 436,34: const
 
103 char 
 436,40: char
 
298 * option_type_qualifier_list option_pointer 
 436,45: *
 
386 NAME VARIABLE 
 436,47: __format
 436,55: VARIABLE
 
65 VARIABLE 
 436,55: VARIABLE
 
300 , parameter_declaration 
 436,55: ,
 437,8: __gnuc_va_list
 437,22: TYPE
 437,23: __arg
 437,28: VARIABLE
 
391 NAME TYPE 
 437,8: __gnuc_va_list
 437,22: TYPE
 
26 TYPE 
 437,22: TYPE
 
298 NAME VARIABLE 
 437,23: __arg
 437,28: VARIABLE
 
65 VARIABLE 
 437,28: VARIABLE
 
187 ) 
 437,28: )
 
60 ; 
 437,30: ;
 
23 extern 
 441,1: extern
 
8 int 
 441,8: int
 
5 NAME VARIABLE 
 441,12: snprintf
 441,20: VARIABLE
 
65 VARIABLE 
 441,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 441,21: (
 441,22: char
 441,27: *
 441,29: __s
 441,32: VARIABLE
 441,32: ,
 441,34: size_t
 441,40: TYPE
 441,41: __maxlen
 441,49: VARIABLE
 441,49: ,
 442,8: const
 442,14: char
 442,19: *
 442,21: __format
 442,29: VARIABLE
 442,29: ,
 442,31: ...
 442,34: )
 
186 char 
 441,22: char
 
298 * option_type_qualifier_list option_pointer 
 441,27: *
 
386 NAME VARIABLE 
 441,29: __s
 441,32: VARIABLE
 
65 VARIABLE 
 441,32: VARIABLE
 
300 , parameter_declaration 
 441,32: ,
 441,34: size_t
 441,40: TYPE
 441,41: __maxlen
 441,49: VARIABLE
 
391 NAME TYPE 
 441,34: size_t
 441,40: TYPE
 
26 TYPE 
 441,40: TYPE
 
298 NAME VARIABLE 
 441,41: __maxlen
 441,49: VARIABLE
 
65 VARIABLE 
 441,49: VARIABLE
 
300 , parameter_declaration 
 441,49: ,
 442,8: const
 442,14: char
 442,19: *
 442,21: __format
 442,29: VARIABLE
 
391 const 
 442,8: const
 
103 char 
 442,14: char
 
298 * option_type_qualifier_list option_pointer 
 442,19: *
 
386 NAME VARIABLE 
 442,21: __format
 442,29: VARIABLE
 
65 VARIABLE 
 442,29: VARIABLE
 
300 , ... 
 442,29: ,
 442,31: ...
 
391 ... 
 442,31: ...
 
187 ) 
 442,34: )
 
60 ; 
 443,7: ;
 
23 extern 
 445,1: extern
 
8 int 
 445,8: int
 
5 NAME VARIABLE 
 445,12: vsnprintf
 445,21: VARIABLE
 
65 VARIABLE 
 445,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 445,22: (
 445,23: char
 445,28: *
 445,30: __s
 445,33: VARIABLE
 445,33: ,
 445,35: size_t
 445,41: TYPE
 445,42: __maxlen
 445,50: VARIABLE
 445,50: ,
 446,9: const
 446,15: char
 446,20: *
 446,22: __format
 446,30: VARIABLE
 446,30: ,
 446,32: __gnuc_va_list
 446,46: TYPE
 446,47: __arg
 446,52: VARIABLE
 446,52: )
 
186 char 
 445,23: char
 
298 * option_type_qualifier_list option_pointer 
 445,28: *
 
386 NAME VARIABLE 
 445,30: __s
 445,33: VARIABLE
 
65 VARIABLE 
 445,33: VARIABLE
 
300 , parameter_declaration 
 445,33: ,
 445,35: size_t
 445,41: TYPE
 445,42: __maxlen
 445,50: VARIABLE
 
391 NAME TYPE 
 445,35: size_t
 445,41: TYPE
 
26 TYPE 
 445,41: TYPE
 
298 NAME VARIABLE 
 445,42: __maxlen
 445,50: VARIABLE
 
65 VARIABLE 
 445,50: VARIABLE
 
300 , parameter_declaration 
 445,50: ,
 446,9: const
 446,15: char
 446,20: *
 446,22: __format
 446,30: VARIABLE
 
391 const 
 446,9: const
 
103 char 
 446,15: char
 
298 * option_type_qualifier_list option_pointer 
 446,20: *
 
386 NAME VARIABLE 
 446,22: __format
 446,30: VARIABLE
 
65 VARIABLE 
 446,30: VARIABLE
 
300 , parameter_declaration 
 446,30: ,
 446,32: __gnuc_va_list
 446,46: TYPE
 446,47: __arg
 446,52: VARIABLE
 
391 NAME TYPE 
 446,32: __gnuc_va_list
 446,46: TYPE
 
26 TYPE 
 446,46: TYPE
 
298 NAME VARIABLE 
 446,47: __arg
 446,52: VARIABLE
 
65 VARIABLE 
 446,52: VARIABLE
 
187 ) 
 446,52: )
 
60 ; 
 447,7: ;
 
23 extern 
 449,1: extern
 
8 int 
 449,8: int
 
5 NAME VARIABLE 
 449,12: vdprintf
 449,20: VARIABLE
 
65 VARIABLE 
 449,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 449,21: (
 449,22: int
 449,26: __fd
 449,30: VARIABLE
 449,30: ,
 449,32: const
 449,38: char
 449,43: *
 449,45: __fmt
 449,50: VARIABLE
 449,50: ,
 450,8: __gnuc_va_list
 450,22: TYPE
 450,23: __arg
 450,28: VARIABLE
 450,28: )
 
186 int 
 449,22: int
 
298 NAME VARIABLE 
 449,26: __fd
 449,30: VARIABLE
 
65 VARIABLE 
 449,30: VARIABLE
 
300 , parameter_declaration 
 449,30: ,
 449,32: const
 449,38: char
 449,43: *
 449,45: __fmt
 449,50: VARIABLE
 
391 const 
 449,32: const
 
103 char 
 449,38: char
 
298 * option_type_qualifier_list option_pointer 
 449,43: *
 
386 NAME VARIABLE 
 449,45: __fmt
 449,50: VARIABLE
 
65 VARIABLE 
 449,50: VARIABLE
 
300 , parameter_declaration 
 449,50: ,
 450,8: __gnuc_va_list
 450,22: TYPE
 450,23: __arg
 450,28: VARIABLE
 
391 NAME TYPE 
 450,8: __gnuc_va_list
 450,22: TYPE
 
26 TYPE 
 450,22: TYPE
 
298 NAME VARIABLE 
 450,23: __arg
 450,28: VARIABLE
 
65 VARIABLE 
 450,28: VARIABLE
 
187 ) 
 450,28: )
 
60 ; 
 451,6: ;
 
23 extern 
 452,1: extern
 
8 int 
 452,8: int
 
5 NAME VARIABLE 
 452,12: dprintf
 452,19: VARIABLE
 
65 VARIABLE 
 452,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 452,20: (
 452,21: int
 452,25: __fd
 452,29: VARIABLE
 452,29: ,
 452,31: const
 452,37: char
 452,42: *
 452,44: __fmt
 452,49: VARIABLE
 452,49: ,
 452,51: ...
 452,54: )
 
186 int 
 452,21: int
 
298 NAME VARIABLE 
 452,25: __fd
 452,29: VARIABLE
 
65 VARIABLE 
 452,29: VARIABLE
 
300 , parameter_declaration 
 452,29: ,
 452,31: const
 452,37: char
 452,42: *
 452,44: __fmt
 452,49: VARIABLE
 
391 const 
 452,31: const
 
103 char 
 452,37: char
 
298 * option_type_qualifier_list option_pointer 
 452,42: *
 
386 NAME VARIABLE 
 452,44: __fmt
 452,49: VARIABLE
 
65 VARIABLE 
 452,49: VARIABLE
 
300 , ... 
 452,49: ,
 452,51: ...
 
391 ... 
 452,51: ...
 
187 ) 
 452,54: )
 
60 ; 
 453,6: ;
 
23 extern 
 461,1: extern
 
8 int 
 461,8: int
 
5 NAME VARIABLE 
 461,12: fscanf
 461,18: VARIABLE
 
65 VARIABLE 
 461,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 461,19: (
 461,20: FILE
 461,24: TYPE
 461,25: *
 461,27: __stream
 461,35: VARIABLE
 461,35: ,
 462,6: const
 462,12: char
 462,17: *
 462,19: __format
 462,27: VARIABLE
 462,27: ,
 462,29: ...
 462,32: )
 
186 NAME TYPE 
 461,20: FILE
 461,24: TYPE
 
65 TYPE 
 461,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 461,25: *
 
386 NAME VARIABLE 
 461,27: __stream
 461,35: VARIABLE
 
65 VARIABLE 
 461,35: VARIABLE
 
300 , parameter_declaration 
 461,35: ,
 462,6: const
 462,12: char
 462,17: *
 462,19: __format
 462,27: VARIABLE
 
391 const 
 462,6: const
 
103 char 
 462,12: char
 
298 * option_type_qualifier_list option_pointer 
 462,17: *
 
386 NAME VARIABLE 
 462,19: __format
 462,27: VARIABLE
 
65 VARIABLE 
 462,27: VARIABLE
 
300 , ... 
 462,27: ,
 462,29: ...
 
391 ... 
 462,29: ...
 
187 ) 
 462,32: )
 
60 ; 
 462,34: ;
 
23 extern 
 467,1: extern
 
8 int 
 467,8: int
 
5 NAME VARIABLE 
 467,12: scanf
 467,17: VARIABLE
 
65 VARIABLE 
 467,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 467,18: (
 467,19: const
 467,25: char
 467,30: *
 467,32: __format
 467,40: VARIABLE
 467,40: ,
 467,42: ...
 467,45: )
 
186 const 
 467,19: const
 
103 char 
 467,25: char
 
298 * option_type_qualifier_list option_pointer 
 467,30: *
 
386 NAME VARIABLE 
 467,32: __format
 467,40: VARIABLE
 
65 VARIABLE 
 467,40: VARIABLE
 
300 , ... 
 467,40: ,
 467,42: ...
 
391 ... 
 467,42: ...
 
187 ) 
 467,45: )
 
60 ; 
 467,47: ;
 
23 extern 
 469,1: extern
 
8 int 
 469,8: int
 
5 NAME VARIABLE 
 469,12: sscanf
 469,18: VARIABLE
 
65 VARIABLE 
 469,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 469,19: (
 469,20: const
 469,26: char
 469,31: *
 469,33: __s
 469,36: VARIABLE
 469,36: ,
 470,6: const
 470,12: char
 470,17: *
 470,19: __format
 470,27: VARIABLE
 470,27: ,
 470,29: ...
 470,32: )
 
186 const 
 469,20: const
 
103 char 
 469,26: char
 
298 * option_type_qualifier_list option_pointer 
 469,31: *
 
386 NAME VARIABLE 
 469,33: __s
 469,36: VARIABLE
 
65 VARIABLE 
 469,36: VARIABLE
 
300 , parameter_declaration 
 469,36: ,
 470,6: const
 470,12: char
 470,17: *
 470,19: __format
 470,27: VARIABLE
 
391 const 
 470,6: const
 
103 char 
 470,12: char
 
298 * option_type_qualifier_list option_pointer 
 470,17: *
 
386 NAME VARIABLE 
 470,19: __format
 470,27: VARIABLE
 
65 VARIABLE 
 470,27: VARIABLE
 
300 , ... 
 470,27: ,
 470,29: ...
 
391 ... 
 470,29: ...
 
187 ) 
 470,32: )
 
60 ; 
 470,34: ;
 
23 extern 
 487,1: extern
 
8 int 
 487,8: int
 
5 NAME VARIABLE 
 487,12: fscanf
 487,18: VARIABLE
 
65 VARIABLE 
 487,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 487,19: (
 487,20: FILE
 487,24: TYPE
 487,25: *
 487,27: __stream
 487,35: VARIABLE
 487,35: ,
 487,37: const
 487,43: char
 487,48: *
 487,50: __format
 487,58: VARIABLE
 487,58: ,
 487,60: ...
 487,63: )
 
186 NAME TYPE 
 487,20: FILE
 487,24: TYPE
 
65 TYPE 
 487,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 487,25: *
 
386 NAME VARIABLE 
 487,27: __stream
 487,35: VARIABLE
 
65 VARIABLE 
 487,35: VARIABLE
 
300 , parameter_declaration 
 487,35: ,
 487,37: const
 487,43: char
 487,48: *
 487,50: __format
 487,58: VARIABLE
 
391 const 
 487,37: const
 
103 char 
 487,43: char
 
298 * option_type_qualifier_list option_pointer 
 487,48: *
 
386 NAME VARIABLE 
 487,50: __format
 487,58: VARIABLE
 
65 VARIABLE 
 487,58: VARIABLE
 
300 , ... 
 487,58: ,
 487,60: ...
 
391 ... 
 487,60: ...
 
187 ) 
 487,63: )
 
60 ; 
 489,32: ;
 
23 extern 
 490,1: extern
 
8 int 
 490,8: int
 
5 NAME VARIABLE 
 490,12: scanf
 490,17: VARIABLE
 
65 VARIABLE 
 490,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 490,18: (
 490,19: const
 490,25: char
 490,30: *
 490,32: __format
 490,40: VARIABLE
 490,40: ,
 490,42: ...
 490,45: )
 
186 const 
 490,19: const
 
103 char 
 490,25: char
 
298 * option_type_qualifier_list option_pointer 
 490,30: *
 
386 NAME VARIABLE 
 490,32: __format
 490,40: VARIABLE
 
65 VARIABLE 
 490,40: VARIABLE
 
300 , ... 
 490,40: ,
 490,42: ...
 
391 ... 
 490,42: ...
 
187 ) 
 490,45: )
 
60 ; 
 491,31: ;
 
23 extern 
 492,1: extern
 
8 int 
 492,8: int
 
5 NAME VARIABLE 
 492,12: sscanf
 492,18: VARIABLE
 
65 VARIABLE 
 492,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 492,19: (
 492,20: const
 492,26: char
 492,31: *
 492,33: __s
 492,36: VARIABLE
 492,36: ,
 492,38: const
 492,44: char
 492,49: *
 492,51: __format
 492,59: VARIABLE
 492,59: ,
 492,61: ...
 492,64: )
 
186 const 
 492,20: const
 
103 char 
 492,26: char
 
298 * option_type_qualifier_list option_pointer 
 492,31: *
 
386 NAME VARIABLE 
 492,33: __s
 492,36: VARIABLE
 
65 VARIABLE 
 492,36: VARIABLE
 
300 , parameter_declaration 
 492,36: ,
 492,38: const
 492,44: char
 492,49: *
 492,51: __format
 492,59: VARIABLE
 
391 const 
 492,38: const
 
103 char 
 492,44: char
 
298 * option_type_qualifier_list option_pointer 
 492,49: *
 
386 NAME VARIABLE 
 492,51: __format
 492,59: VARIABLE
 
65 VARIABLE 
 492,59: VARIABLE
 
300 , ... 
 492,59: ,
 492,61: ...
 
391 ... 
 492,61: ...
 
187 ) 
 492,64: )
 
60 ; 
 494,23: ;
 
23 extern 
 496,1: extern
 
8 int 
 496,8: int
 
5 NAME VARIABLE 
 496,12: vfscanf
 496,19: VARIABLE
 
65 VARIABLE 
 496,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 496,20: (
 496,21: FILE
 496,25: TYPE
 496,26: *
 496,28: __s
 496,31: VARIABLE
 496,31: ,
 496,33: const
 496,39: char
 496,44: *
 496,46: __format
 496,54: VARIABLE
 496,54: ,
 497,7: __gnuc_va_list
 497,21: TYPE
 497,22: __arg
 497,27: VARIABLE
 497,27: )
 
186 NAME TYPE 
 496,21: FILE
 496,25: TYPE
 
65 TYPE 
 496,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 496,26: *
 
386 NAME VARIABLE 
 496,28: __s
 496,31: VARIABLE
 
65 VARIABLE 
 496,31: VARIABLE
 
300 , parameter_declaration 
 496,31: ,
 496,33: const
 496,39: char
 496,44: *
 496,46: __format
 496,54: VARIABLE
 
391 const 
 496,33: const
 
103 char 
 496,39: char
 
298 * option_type_qualifier_list option_pointer 
 496,44: *
 
386 NAME VARIABLE 
 496,46: __format
 496,54: VARIABLE
 
65 VARIABLE 
 496,54: VARIABLE
 
300 , parameter_declaration 
 496,54: ,
 497,7: __gnuc_va_list
 497,21: TYPE
 497,22: __arg
 497,27: VARIABLE
 
391 NAME TYPE 
 497,7: __gnuc_va_list
 497,21: TYPE
 
26 TYPE 
 497,21: TYPE
 
298 NAME VARIABLE 
 497,22: __arg
 497,27: VARIABLE
 
65 VARIABLE 
 497,27: VARIABLE
 
187 ) 
 497,27: )
 
60 ; 
 498,7: ;
 
23 extern 
 504,1: extern
 
8 int 
 504,8: int
 
5 NAME VARIABLE 
 504,12: vscanf
 504,18: VARIABLE
 
65 VARIABLE 
 504,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 504,19: (
 504,20: const
 504,26: char
 504,31: *
 504,33: __format
 504,41: VARIABLE
 504,41: ,
 504,43: __gnuc_va_list
 504,57: TYPE
 504,58: __arg
 504,63: VARIABLE
 504,63: )
 
186 const 
 504,20: const
 
103 char 
 504,26: char
 
298 * option_type_qualifier_list option_pointer 
 504,31: *
 
386 NAME VARIABLE 
 504,33: __format
 504,41: VARIABLE
 
65 VARIABLE 
 504,41: VARIABLE
 
300 , parameter_declaration 
 504,41: ,
 504,43: __gnuc_va_list
 504,57: TYPE
 504,58: __arg
 504,63: VARIABLE
 
391 NAME TYPE 
 504,43: __gnuc_va_list
 504,57: TYPE
 
26 TYPE 
 504,57: TYPE
 
298 NAME VARIABLE 
 504,58: __arg
 504,63: VARIABLE
 
65 VARIABLE 
 504,63: VARIABLE
 
187 ) 
 504,63: )
 
60 ; 
 505,7: ;
 
23 extern 
 508,1: extern
 
8 int 
 508,8: int
 
5 NAME VARIABLE 
 508,12: vsscanf
 508,19: VARIABLE
 
65 VARIABLE 
 508,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 508,20: (
 508,21: const
 508,27: char
 508,32: *
 508,34: __s
 508,37: VARIABLE
 508,37: ,
 509,7: const
 509,13: char
 509,18: *
 509,20: __format
 509,28: VARIABLE
 509,28: ,
 509,30: __gnuc_va_list
 509,44: TYPE
 509,45: __arg
 509,50: VARIABLE
 509,50: )
 
186 const 
 508,21: const
 
103 char 
 508,27: char
 
298 * option_type_qualifier_list option_pointer 
 508,32: *
 
386 NAME VARIABLE 
 508,34: __s
 508,37: VARIABLE
 
65 VARIABLE 
 508,37: VARIABLE
 
300 , parameter_declaration 
 508,37: ,
 509,7: const
 509,13: char
 509,18: *
 509,20: __format
 509,28: VARIABLE
 
391 const 
 509,7: const
 
103 char 
 509,13: char
 
298 * option_type_qualifier_list option_pointer 
 509,18: *
 
386 NAME VARIABLE 
 509,20: __format
 509,28: VARIABLE
 
65 VARIABLE 
 509,28: VARIABLE
 
300 , parameter_declaration 
 509,28: ,
 509,30: __gnuc_va_list
 509,44: TYPE
 509,45: __arg
 509,50: VARIABLE
 
391 NAME TYPE 
 509,30: __gnuc_va_list
 509,44: TYPE
 
26 TYPE 
 509,44: TYPE
 
298 NAME VARIABLE 
 509,45: __arg
 509,50: VARIABLE
 
65 VARIABLE 
 509,50: VARIABLE
 
187 ) 
 509,50: )
 
60 ; 
 510,7: ;
 
23 extern 
 516,1: extern
 
8 int 
 516,8: int
 
5 NAME VARIABLE 
 516,12: vfscanf
 516,19: VARIABLE
 
65 VARIABLE 
 516,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 516,20: (
 516,21: FILE
 516,25: TYPE
 516,26: *
 516,28: __s
 516,31: VARIABLE
 516,31: ,
 516,33: const
 516,39: char
 516,44: *
 516,46: __format
 516,54: VARIABLE
 516,54: ,
 516,56: __gnuc_va_list
 516,70: TYPE
 516,71: __arg
 516,76: VARIABLE
 516,76: )
 
186 NAME TYPE 
 516,21: FILE
 516,25: TYPE
 
65 TYPE 
 516,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 516,26: *
 
386 NAME VARIABLE 
 516,28: __s
 516,31: VARIABLE
 
65 VARIABLE 
 516,31: VARIABLE
 
300 , parameter_declaration 
 516,31: ,
 516,33: const
 516,39: char
 516,44: *
 516,46: __format
 516,54: VARIABLE
 
391 const 
 516,33: const
 
103 char 
 516,39: char
 
298 * option_type_qualifier_list option_pointer 
 516,44: *
 
386 NAME VARIABLE 
 516,46: __format
 516,54: VARIABLE
 
65 VARIABLE 
 516,54: VARIABLE
 
300 , parameter_declaration 
 516,54: ,
 516,56: __gnuc_va_list
 516,70: TYPE
 516,71: __arg
 516,76: VARIABLE
 
391 NAME TYPE 
 516,56: __gnuc_va_list
 516,70: TYPE
 
26 TYPE 
 516,70: TYPE
 
298 NAME VARIABLE 
 516,71: __arg
 516,76: VARIABLE
 
65 VARIABLE 
 516,76: VARIABLE
 
187 ) 
 516,76: )
 
60 ; 
 520,7: ;
 
23 extern 
 521,1: extern
 
8 int 
 521,8: int
 
5 NAME VARIABLE 
 521,12: vscanf
 521,18: VARIABLE
 
65 VARIABLE 
 521,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 521,19: (
 521,20: const
 521,26: char
 521,31: *
 521,33: __format
 521,41: VARIABLE
 521,41: ,
 521,43: __gnuc_va_list
 521,57: TYPE
 521,58: __arg
 521,63: VARIABLE
 521,63: )
 
186 const 
 521,20: const
 
103 char 
 521,26: char
 
298 * option_type_qualifier_list option_pointer 
 521,31: *
 
386 NAME VARIABLE 
 521,33: __format
 521,41: VARIABLE
 
65 VARIABLE 
 521,41: VARIABLE
 
300 , parameter_declaration 
 521,41: ,
 521,43: __gnuc_va_list
 521,57: TYPE
 521,58: __arg
 521,63: VARIABLE
 
391 NAME TYPE 
 521,43: __gnuc_va_list
 521,57: TYPE
 
26 TYPE 
 521,57: TYPE
 
298 NAME VARIABLE 
 521,58: __arg
 521,63: VARIABLE
 
65 VARIABLE 
 521,63: VARIABLE
 
187 ) 
 521,63: )
 
60 ; 
 523,7: ;
 
23 extern 
 524,1: extern
 
8 int 
 524,8: int
 
5 NAME VARIABLE 
 524,12: vsscanf
 524,19: VARIABLE
 
65 VARIABLE 
 524,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 524,20: (
 524,21: const
 524,27: char
 524,32: *
 524,34: __s
 524,37: VARIABLE
 524,37: ,
 524,39: const
 524,45: char
 524,50: *
 524,52: __format
 524,60: VARIABLE
 524,60: ,
 524,62: __gnuc_va_list
 524,76: TYPE
 524,77: __arg
 524,82: VARIABLE
 524,82: )
 
186 const 
 524,21: const
 
103 char 
 524,27: char
 
298 * option_type_qualifier_list option_pointer 
 524,32: *
 
386 NAME VARIABLE 
 524,34: __s
 524,37: VARIABLE
 
65 VARIABLE 
 524,37: VARIABLE
 
300 , parameter_declaration 
 524,37: ,
 524,39: const
 524,45: char
 524,50: *
 524,52: __format
 524,60: VARIABLE
 
391 const 
 524,39: const
 
103 char 
 524,45: char
 
298 * option_type_qualifier_list option_pointer 
 524,50: *
 
386 NAME VARIABLE 
 524,52: __format
 524,60: VARIABLE
 
65 VARIABLE 
 524,60: VARIABLE
 
300 , parameter_declaration 
 524,60: ,
 524,62: __gnuc_va_list
 524,76: TYPE
 524,77: __arg
 524,82: VARIABLE
 
391 NAME TYPE 
 524,62: __gnuc_va_list
 524,76: TYPE
 
26 TYPE 
 524,76: TYPE
 
298 NAME VARIABLE 
 524,77: __arg
 524,82: VARIABLE
 
65 VARIABLE 
 524,82: VARIABLE
 
187 ) 
 524,82: )
 
60 ; 
 528,6: ;
 
23 extern 
 530,1: extern
 
8 int 
 530,8: int
 
5 NAME VARIABLE 
 530,12: fgetc
 530,17: VARIABLE
 
65 VARIABLE 
 530,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 530,18: (
 530,19: FILE
 530,23: TYPE
 530,24: *
 530,25: __stream
 530,33: VARIABLE
 530,33: )
 
186 NAME TYPE 
 530,19: FILE
 530,23: TYPE
 
65 TYPE 
 530,23: TYPE
 
298 * option_type_qualifier_list option_pointer 
 530,24: *
 
386 NAME VARIABLE 
 530,25: __stream
 530,33: VARIABLE
 
65 VARIABLE 
 530,33: VARIABLE
 
187 ) 
 530,33: )
 
60 ; 
 530,34: ;
 
23 extern 
 531,1: extern
 
8 int 
 531,8: int
 
5 NAME VARIABLE 
 531,12: getc
 531,16: VARIABLE
 
65 VARIABLE 
 531,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 531,17: (
 531,18: FILE
 531,22: TYPE
 531,23: *
 531,24: __stream
 531,32: VARIABLE
 531,32: )
 
186 NAME TYPE 
 531,18: FILE
 531,22: TYPE
 
65 TYPE 
 531,22: TYPE
 
298 * option_type_qualifier_list option_pointer 
 531,23: *
 
386 NAME VARIABLE 
 531,24: __stream
 531,32: VARIABLE
 
65 VARIABLE 
 531,32: VARIABLE
 
187 ) 
 531,32: )
 
60 ; 
 531,33: ;
 
23 extern 
 537,1: extern
 
8 int 
 537,8: int
 
5 NAME VARIABLE 
 537,12: getchar
 537,19: VARIABLE
 
65 VARIABLE 
 537,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 537,20: (
 537,21: void
 537,25: )
 
186 void 
 537,21: void
 
187 ) 
 537,25: )
 
60 ; 
 537,26: ;
 
23 extern 
 544,1: extern
 
8 int 
 544,8: int
 
5 NAME VARIABLE 
 544,12: getc_unlocked
 544,25: VARIABLE
 
65 VARIABLE 
 544,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 544,26: (
 544,27: FILE
 544,31: TYPE
 544,32: *
 544,33: __stream
 544,41: VARIABLE
 544,41: )
 
186 NAME TYPE 
 544,27: FILE
 544,31: TYPE
 
65 TYPE 
 544,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 544,32: *
 
386 NAME VARIABLE 
 544,33: __stream
 544,41: VARIABLE
 
65 VARIABLE 
 544,41: VARIABLE
 
187 ) 
 544,41: )
 
60 ; 
 544,42: ;
 
23 extern 
 545,1: extern
 
8 int 
 545,8: int
 
5 NAME VARIABLE 
 545,12: getchar_unlocked
 545,28: VARIABLE
 
65 VARIABLE 
 545,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 545,29: (
 545,30: void
 545,34: )
 
186 void 
 545,30: void
 
187 ) 
 545,34: )
 
60 ; 
 545,35: ;
 
23 extern 
 547,1: extern
 
8 int 
 547,8: int
 
5 NAME VARIABLE 
 547,12: fgetc_unlocked
 547,26: VARIABLE
 
65 VARIABLE 
 547,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 547,27: (
 547,28: FILE
 547,32: TYPE
 547,33: *
 547,34: __stream
 547,42: VARIABLE
 547,42: )
 
186 NAME TYPE 
 547,28: FILE
 547,32: TYPE
 
65 TYPE 
 547,32: TYPE
 
298 * option_type_qualifier_list option_pointer 
 547,33: *
 
386 NAME VARIABLE 
 547,34: __stream
 547,42: VARIABLE
 
65 VARIABLE 
 547,42: VARIABLE
 
187 ) 
 547,42: )
 
60 ; 
 547,43: ;
 
23 extern 
 549,1: extern
 
8 int 
 549,8: int
 
5 NAME VARIABLE 
 549,12: fputc
 549,17: VARIABLE
 
65 VARIABLE 
 549,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 549,18: (
 549,19: int
 549,23: __c
 549,26: VARIABLE
 549,26: ,
 549,28: FILE
 549,32: TYPE
 549,33: *
 549,34: __stream
 549,42: VARIABLE
 549,42: )
 
186 int 
 549,19: int
 
298 NAME VARIABLE 
 549,23: __c
 549,26: VARIABLE
 
65 VARIABLE 
 549,26: VARIABLE
 
300 , parameter_declaration 
 549,26: ,
 549,28: FILE
 549,32: TYPE
 549,33: *
 549,34: __stream
 549,42: VARIABLE
 
391 NAME TYPE 
 549,28: FILE
 549,32: TYPE
 
26 TYPE 
 549,32: TYPE
 
298 * option_type_qualifier_list option_pointer 
 549,33: *
 
386 NAME VARIABLE 
 549,34: __stream
 549,42: VARIABLE
 
65 VARIABLE 
 549,42: VARIABLE
 
187 ) 
 549,42: )
 
60 ; 
 549,43: ;
 
23 extern 
 550,1: extern
 
8 int 
 550,8: int
 
5 NAME VARIABLE 
 550,12: putc
 550,16: VARIABLE
 
65 VARIABLE 
 550,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 550,17: (
 550,18: int
 550,22: __c
 550,25: VARIABLE
 550,25: ,
 550,27: FILE
 550,31: TYPE
 550,32: *
 550,33: __stream
 550,41: VARIABLE
 550,41: )
 
186 int 
 550,18: int
 
298 NAME VARIABLE 
 550,22: __c
 550,25: VARIABLE
 
65 VARIABLE 
 550,25: VARIABLE
 
300 , parameter_declaration 
 550,25: ,
 550,27: FILE
 550,31: TYPE
 550,32: *
 550,33: __stream
 550,41: VARIABLE
 
391 NAME TYPE 
 550,27: FILE
 550,31: TYPE
 
26 TYPE 
 550,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 550,32: *
 
386 NAME VARIABLE 
 550,33: __stream
 550,41: VARIABLE
 
65 VARIABLE 
 550,41: VARIABLE
 
187 ) 
 550,41: )
 
60 ; 
 550,42: ;
 
23 extern 
 556,1: extern
 
8 int 
 556,8: int
 
5 NAME VARIABLE 
 556,12: putchar
 556,19: VARIABLE
 
65 VARIABLE 
 556,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 556,20: (
 556,21: int
 556,25: __c
 556,28: VARIABLE
 556,28: )
 
186 int 
 556,21: int
 
298 NAME VARIABLE 
 556,25: __c
 556,28: VARIABLE
 
65 VARIABLE 
 556,28: VARIABLE
 
187 ) 
 556,28: )
 
60 ; 
 556,29: ;
 
23 extern 
 558,1: extern
 
8 int 
 558,8: int
 
5 NAME VARIABLE 
 558,12: fputc_unlocked
 558,26: VARIABLE
 
65 VARIABLE 
 558,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 558,27: (
 558,28: int
 558,32: __c
 558,35: VARIABLE
 558,35: ,
 558,37: FILE
 558,41: TYPE
 558,42: *
 558,43: __stream
 558,51: VARIABLE
 558,51: )
 
186 int 
 558,28: int
 
298 NAME VARIABLE 
 558,32: __c
 558,35: VARIABLE
 
65 VARIABLE 
 558,35: VARIABLE
 
300 , parameter_declaration 
 558,35: ,
 558,37: FILE
 558,41: TYPE
 558,42: *
 558,43: __stream
 558,51: VARIABLE
 
391 NAME TYPE 
 558,37: FILE
 558,41: TYPE
 
26 TYPE 
 558,41: TYPE
 
298 * option_type_qualifier_list option_pointer 
 558,42: *
 
386 NAME VARIABLE 
 558,43: __stream
 558,51: VARIABLE
 
65 VARIABLE 
 558,51: VARIABLE
 
187 ) 
 558,51: )
 
60 ; 
 558,52: ;
 
23 extern 
 566,1: extern
 
8 int 
 566,8: int
 
5 NAME VARIABLE 
 566,12: putc_unlocked
 566,25: VARIABLE
 
65 VARIABLE 
 566,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 566,26: (
 566,27: int
 566,31: __c
 566,34: VARIABLE
 566,34: ,
 566,36: FILE
 566,40: TYPE
 566,41: *
 566,42: __stream
 566,50: VARIABLE
 566,50: )
 
186 int 
 566,27: int
 
298 NAME VARIABLE 
 566,31: __c
 566,34: VARIABLE
 
65 VARIABLE 
 566,34: VARIABLE
 
300 , parameter_declaration 
 566,34: ,
 566,36: FILE
 566,40: TYPE
 566,41: *
 566,42: __stream
 566,50: VARIABLE
 
391 NAME TYPE 
 566,36: FILE
 566,40: TYPE
 
26 TYPE 
 566,40: TYPE
 
298 * option_type_qualifier_list option_pointer 
 566,41: *
 
386 NAME VARIABLE 
 566,42: __stream
 566,50: VARIABLE
 
65 VARIABLE 
 566,50: VARIABLE
 
187 ) 
 566,50: )
 
60 ; 
 566,51: ;
 
23 extern 
 567,1: extern
 
8 int 
 567,8: int
 
5 NAME VARIABLE 
 567,12: putchar_unlocked
 567,28: VARIABLE
 
65 VARIABLE 
 567,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 567,29: (
 567,30: int
 567,34: __c
 567,37: VARIABLE
 567,37: )
 
186 int 
 567,30: int
 
298 NAME VARIABLE 
 567,34: __c
 567,37: VARIABLE
 
65 VARIABLE 
 567,37: VARIABLE
 
187 ) 
 567,37: )
 
60 ; 
 567,38: ;
 
23 extern 
 574,1: extern
 
8 int 
 574,8: int
 
5 NAME VARIABLE 
 574,12: getw
 574,16: VARIABLE
 
65 VARIABLE 
 574,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 574,17: (
 574,18: FILE
 574,22: TYPE
 574,23: *
 574,24: __stream
 574,32: VARIABLE
 574,32: )
 
186 NAME TYPE 
 574,18: FILE
 574,22: TYPE
 
65 TYPE 
 574,22: TYPE
 
298 * option_type_qualifier_list option_pointer 
 574,23: *
 
386 NAME VARIABLE 
 574,24: __stream
 574,32: VARIABLE
 
65 VARIABLE 
 574,32: VARIABLE
 
187 ) 
 574,32: )
 
60 ; 
 574,33: ;
 
23 extern 
 577,1: extern
 
8 int 
 577,8: int
 
5 NAME VARIABLE 
 577,12: putw
 577,16: VARIABLE
 
65 VARIABLE 
 577,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 577,17: (
 577,18: int
 577,22: __w
 577,25: VARIABLE
 577,25: ,
 577,27: FILE
 577,31: TYPE
 577,32: *
 577,33: __stream
 577,41: VARIABLE
 577,41: )
 
186 int 
 577,18: int
 
298 NAME VARIABLE 
 577,22: __w
 577,25: VARIABLE
 
65 VARIABLE 
 577,25: VARIABLE
 
300 , parameter_declaration 
 577,25: ,
 577,27: FILE
 577,31: TYPE
 577,32: *
 577,33: __stream
 577,41: VARIABLE
 
391 NAME TYPE 
 577,27: FILE
 577,31: TYPE
 
26 TYPE 
 577,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 577,32: *
 
386 NAME VARIABLE 
 577,33: __stream
 577,41: VARIABLE
 
65 VARIABLE 
 577,41: VARIABLE
 
187 ) 
 577,41: )
 
60 ; 
 577,42: ;
 
23 extern 
 585,1: extern
 
8 char 
 585,8: char
 
5 * option_type_qualifier_list option_pointer 
 585,13: *
 
64 NAME VARIABLE 
 585,14: fgets
 585,19: VARIABLE
 
65 VARIABLE 
 585,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 585,20: (
 585,21: char
 585,26: *
 585,28: __s
 585,31: VARIABLE
 585,31: ,
 585,33: int
 585,37: __n
 585,40: VARIABLE
 585,40: ,
 585,42: FILE
 585,46: TYPE
 585,47: *
 585,49: __stream
 585,57: VARIABLE
 585,57: )
 
186 char 
 585,21: char
 
298 * option_type_qualifier_list option_pointer 
 585,26: *
 
386 NAME VARIABLE 
 585,28: __s
 585,31: VARIABLE
 
65 VARIABLE 
 585,31: VARIABLE
 
300 , parameter_declaration 
 585,31: ,
 585,33: int
 585,37: __n
 585,40: VARIABLE
 
391 int 
 585,33: int
 
298 NAME VARIABLE 
 585,37: __n
 585,40: VARIABLE
 
65 VARIABLE 
 585,40: VARIABLE
 
300 , parameter_declaration 
 585,40: ,
 585,42: FILE
 585,46: TYPE
 585,47: *
 585,49: __stream
 585,57: VARIABLE
 
391 NAME TYPE 
 585,42: FILE
 585,46: TYPE
 
26 TYPE 
 585,46: TYPE
 
298 * option_type_qualifier_list option_pointer 
 585,47: *
 
386 NAME VARIABLE 
 585,49: __stream
 585,57: VARIABLE
 
65 VARIABLE 
 585,57: VARIABLE
 
187 ) 
 585,57: )
 
60 ; 
 586,6: ;
 
23 extern 
 588,1: extern
 
8 NAME TYPE 
 588,8: __ssize_t
 588,17: TYPE
 
26 TYPE 
 588,17: TYPE
 
5 NAME VARIABLE 
 588,18: __getdelim
 588,28: VARIABLE
 
65 VARIABLE 
 588,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 588,29: (
 588,30: char
 588,35: *
 588,36: *
 588,38: __lineptr
 588,47: VARIABLE
 588,47: ,
 589,30: size_t
 589,36: TYPE
 589,37: *
 589,39: __n
 589,42: VARIABLE
 589,42: ,
 589,44: int
 589,48: __delimiter
 589,59: VARIABLE
 589,59: ,
 590,30: FILE
 590,34: TYPE
 590,35: *
 590,37: __stream
 590,45: VARIABLE
 590,45: )
 
186 char 
 588,30: char
 
298 * option_type_qualifier_list option_pointer 
 588,35: *
 588,36: *
 
116 * option_type_qualifier_list option_pointer 
 588,36: *
 
386 NAME VARIABLE 
 588,38: __lineptr
 588,47: VARIABLE
 
65 VARIABLE 
 588,47: VARIABLE
 
300 , parameter_declaration 
 588,47: ,
 589,30: size_t
 589,36: TYPE
 589,37: *
 589,39: __n
 589,42: VARIABLE
 
391 NAME TYPE 
 589,30: size_t
 589,36: TYPE
 
26 TYPE 
 589,36: TYPE
 
298 * option_type_qualifier_list option_pointer 
 589,37: *
 
386 NAME VARIABLE 
 589,39: __n
 589,42: VARIABLE
 
65 VARIABLE 
 589,42: VARIABLE
 
300 , parameter_declaration 
 589,42: ,
 589,44: int
 589,48: __delimiter
 589,59: VARIABLE
 
391 int 
 589,44: int
 
298 NAME VARIABLE 
 589,48: __delimiter
 589,59: VARIABLE
 
65 VARIABLE 
 589,59: VARIABLE
 
300 , parameter_declaration 
 589,59: ,
 590,30: FILE
 590,34: TYPE
 590,35: *
 590,37: __stream
 590,45: VARIABLE
 
391 NAME TYPE 
 590,30: FILE
 590,34: TYPE
 
26 TYPE 
 590,34: TYPE
 
298 * option_type_qualifier_list option_pointer 
 590,35: *
 
386 NAME VARIABLE 
 590,37: __stream
 590,45: VARIABLE
 
65 VARIABLE 
 590,45: VARIABLE
 
187 ) 
 590,45: )
 
60 ; 
 590,47: ;
 
23 extern 
 591,1: extern
 
8 NAME TYPE 
 591,8: __ssize_t
 591,17: TYPE
 
26 TYPE 
 591,17: TYPE
 
5 NAME VARIABLE 
 591,18: getdelim
 591,26: VARIABLE
 
65 VARIABLE 
 591,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 591,27: (
 591,28: char
 591,33: *
 591,34: *
 591,36: __lineptr
 591,45: VARIABLE
 591,45: ,
 592,28: size_t
 592,34: TYPE
 592,35: *
 592,37: __n
 592,40: VARIABLE
 592,40: ,
 592,42: int
 592,46: __delimiter
 592,57: VARIABLE
 592,57: ,
 593,28: FILE
 593,32: TYPE
 593,33: *
 593,35: __stream
 593,43: VARIABLE
 593,43: )
 
186 char 
 591,28: char
 
298 * option_type_qualifier_list option_pointer 
 591,33: *
 591,34: *
 
116 * option_type_qualifier_list option_pointer 
 591,34: *
 
386 NAME VARIABLE 
 591,36: __lineptr
 591,45: VARIABLE
 
65 VARIABLE 
 591,45: VARIABLE
 
300 , parameter_declaration 
 591,45: ,
 592,28: size_t
 592,34: TYPE
 592,35: *
 592,37: __n
 592,40: VARIABLE
 
391 NAME TYPE 
 592,28: size_t
 592,34: TYPE
 
26 TYPE 
 592,34: TYPE
 
298 * option_type_qualifier_list option_pointer 
 592,35: *
 
386 NAME VARIABLE 
 592,37: __n
 592,40: VARIABLE
 
65 VARIABLE 
 592,40: VARIABLE
 
300 , parameter_declaration 
 592,40: ,
 592,42: int
 592,46: __delimiter
 592,57: VARIABLE
 
391 int 
 592,42: int
 
298 NAME VARIABLE 
 592,46: __delimiter
 592,57: VARIABLE
 
65 VARIABLE 
 592,57: VARIABLE
 
300 , parameter_declaration 
 592,57: ,
 593,28: FILE
 593,32: TYPE
 593,33: *
 593,35: __stream
 593,43: VARIABLE
 
391 NAME TYPE 
 593,28: FILE
 593,32: TYPE
 
26 TYPE 
 593,32: TYPE
 
298 * option_type_qualifier_list option_pointer 
 593,33: *
 
386 NAME VARIABLE 
 593,35: __stream
 593,43: VARIABLE
 
65 VARIABLE 
 593,43: VARIABLE
 
187 ) 
 593,43: )
 
60 ; 
 593,45: ;
 
23 extern 
 601,1: extern
 
8 NAME TYPE 
 601,8: __ssize_t
 601,17: TYPE
 
26 TYPE 
 601,17: TYPE
 
5 NAME VARIABLE 
 601,18: getline
 601,25: VARIABLE
 
65 VARIABLE 
 601,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 601,26: (
 601,27: char
 601,32: *
 601,33: *
 601,35: __lineptr
 601,44: VARIABLE
 601,44: ,
 602,27: size_t
 602,33: TYPE
 602,34: *
 602,36: __n
 602,39: VARIABLE
 602,39: ,
 603,27: FILE
 603,31: TYPE
 603,32: *
 603,34: __stream
 603,42: VARIABLE
 603,42: )
 
186 char 
 601,27: char
 
298 * option_type_qualifier_list option_pointer 
 601,32: *
 601,33: *
 
116 * option_type_qualifier_list option_pointer 
 601,33: *
 
386 NAME VARIABLE 
 601,35: __lineptr
 601,44: VARIABLE
 
65 VARIABLE 
 601,44: VARIABLE
 
300 , parameter_declaration 
 601,44: ,
 602,27: size_t
 602,33: TYPE
 602,34: *
 602,36: __n
 602,39: VARIABLE
 
391 NAME TYPE 
 602,27: size_t
 602,33: TYPE
 
26 TYPE 
 602,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 602,34: *
 
386 NAME VARIABLE 
 602,36: __n
 602,39: VARIABLE
 
65 VARIABLE 
 602,39: VARIABLE
 
300 , parameter_declaration 
 602,39: ,
 603,27: FILE
 603,31: TYPE
 603,32: *
 603,34: __stream
 603,42: VARIABLE
 
391 NAME TYPE 
 603,27: FILE
 603,31: TYPE
 
26 TYPE 
 603,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 603,32: *
 
386 NAME VARIABLE 
 603,34: __stream
 603,42: VARIABLE
 
65 VARIABLE 
 603,42: VARIABLE
 
187 ) 
 603,42: )
 
60 ; 
 603,44: ;
 
23 extern 
 611,1: extern
 
8 int 
 611,8: int
 
5 NAME VARIABLE 
 611,12: fputs
 611,17: VARIABLE
 
65 VARIABLE 
 611,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 611,18: (
 611,19: const
 611,25: char
 611,30: *
 611,32: __s
 611,35: VARIABLE
 611,35: ,
 611,37: FILE
 611,41: TYPE
 611,42: *
 611,44: __stream
 611,52: VARIABLE
 611,52: )
 
186 const 
 611,19: const
 
103 char 
 611,25: char
 
298 * option_type_qualifier_list option_pointer 
 611,30: *
 
386 NAME VARIABLE 
 611,32: __s
 611,35: VARIABLE
 
65 VARIABLE 
 611,35: VARIABLE
 
300 , parameter_declaration 
 611,35: ,
 611,37: FILE
 611,41: TYPE
 611,42: *
 611,44: __stream
 611,52: VARIABLE
 
391 NAME TYPE 
 611,37: FILE
 611,41: TYPE
 
26 TYPE 
 611,41: TYPE
 
298 * option_type_qualifier_list option_pointer 
 611,42: *
 
386 NAME VARIABLE 
 611,44: __stream
 611,52: VARIABLE
 
65 VARIABLE 
 611,52: VARIABLE
 
187 ) 
 611,52: )
 
60 ; 
 611,53: ;
 
23 extern 
 617,1: extern
 
8 int 
 617,8: int
 
5 NAME VARIABLE 
 617,12: puts
 617,16: VARIABLE
 
65 VARIABLE 
 617,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 617,17: (
 617,18: const
 617,24: char
 617,29: *
 617,30: __s
 617,33: VARIABLE
 617,33: )
 
186 const 
 617,18: const
 
103 char 
 617,24: char
 
298 * option_type_qualifier_list option_pointer 
 617,29: *
 
386 NAME VARIABLE 
 617,30: __s
 617,33: VARIABLE
 
65 VARIABLE 
 617,33: VARIABLE
 
187 ) 
 617,33: )
 
60 ; 
 617,34: ;
 
23 extern 
 624,1: extern
 
8 int 
 624,8: int
 
5 NAME VARIABLE 
 624,12: ungetc
 624,18: VARIABLE
 
65 VARIABLE 
 624,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 624,19: (
 624,20: int
 624,24: __c
 624,27: VARIABLE
 624,27: ,
 624,29: FILE
 624,33: TYPE
 624,34: *
 624,35: __stream
 624,43: VARIABLE
 624,43: )
 
186 int 
 624,20: int
 
298 NAME VARIABLE 
 624,24: __c
 624,27: VARIABLE
 
65 VARIABLE 
 624,27: VARIABLE
 
300 , parameter_declaration 
 624,27: ,
 624,29: FILE
 624,33: TYPE
 624,34: *
 624,35: __stream
 624,43: VARIABLE
 
391 NAME TYPE 
 624,29: FILE
 624,33: TYPE
 
26 TYPE 
 624,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 624,34: *
 
386 NAME VARIABLE 
 624,35: __stream
 624,43: VARIABLE
 
65 VARIABLE 
 624,43: VARIABLE
 
187 ) 
 624,43: )
 
60 ; 
 624,44: ;
 
23 extern 
 631,1: extern
 
8 NAME TYPE 
 631,8: size_t
 631,14: TYPE
 
26 TYPE 
 631,14: TYPE
 
5 NAME VARIABLE 
 631,15: fread
 631,20: VARIABLE
 
65 VARIABLE 
 631,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 631,21: (
 631,22: void
 631,27: *
 631,29: __ptr
 631,34: VARIABLE
 631,34: ,
 631,36: size_t
 631,42: TYPE
 631,43: __size
 631,49: VARIABLE
 631,49: ,
 632,8: size_t
 632,14: TYPE
 632,15: __n
 632,18: VARIABLE
 632,18: ,
 632,20: FILE
 632,24: TYPE
 632,25: *
 632,27: __stream
 632,35: VARIABLE
 632,35: )
 
186 void 
 631,22: void
 
298 * option_type_qualifier_list option_pointer 
 631,27: *
 
386 NAME VARIABLE 
 631,29: __ptr
 631,34: VARIABLE
 
65 VARIABLE 
 631,34: VARIABLE
 
300 , parameter_declaration 
 631,34: ,
 631,36: size_t
 631,42: TYPE
 631,43: __size
 631,49: VARIABLE
 
391 NAME TYPE 
 631,36: size_t
 631,42: TYPE
 
26 TYPE 
 631,42: TYPE
 
298 NAME VARIABLE 
 631,43: __size
 631,49: VARIABLE
 
65 VARIABLE 
 631,49: VARIABLE
 
300 , parameter_declaration 
 631,49: ,
 632,8: size_t
 632,14: TYPE
 632,15: __n
 632,18: VARIABLE
 
391 NAME TYPE 
 632,8: size_t
 632,14: TYPE
 
26 TYPE 
 632,14: TYPE
 
298 NAME VARIABLE 
 632,15: __n
 632,18: VARIABLE
 
65 VARIABLE 
 632,18: VARIABLE
 
300 , parameter_declaration 
 632,18: ,
 632,20: FILE
 632,24: TYPE
 632,25: *
 632,27: __stream
 632,35: VARIABLE
 
391 NAME TYPE 
 632,20: FILE
 632,24: TYPE
 
26 TYPE 
 632,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 632,25: *
 
386 NAME VARIABLE 
 632,27: __stream
 632,35: VARIABLE
 
65 VARIABLE 
 632,35: VARIABLE
 
187 ) 
 632,35: )
 
60 ; 
 632,37: ;
 
23 extern 
 637,1: extern
 
8 NAME TYPE 
 637,8: size_t
 637,14: TYPE
 
26 TYPE 
 637,14: TYPE
 
5 NAME VARIABLE 
 637,15: fwrite
 637,21: VARIABLE
 
65 VARIABLE 
 637,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 637,22: (
 637,23: const
 637,29: void
 637,34: *
 637,36: __ptr
 637,41: VARIABLE
 637,41: ,
 637,43: size_t
 637,49: TYPE
 637,50: __size
 637,56: VARIABLE
 637,56: ,
 638,9: size_t
 638,15: TYPE
 638,16: __n
 638,19: VARIABLE
 638,19: ,
 638,21: FILE
 638,25: TYPE
 638,26: *
 638,28: __s
 638,31: VARIABLE
 638,31: )
 
186 const 
 637,23: const
 
103 void 
 637,29: void
 
298 * option_type_qualifier_list option_pointer 
 637,34: *
 
386 NAME VARIABLE 
 637,36: __ptr
 637,41: VARIABLE
 
65 VARIABLE 
 637,41: VARIABLE
 
300 , parameter_declaration 
 637,41: ,
 637,43: size_t
 637,49: TYPE
 637,50: __size
 637,56: VARIABLE
 
391 NAME TYPE 
 637,43: size_t
 637,49: TYPE
 
26 TYPE 
 637,49: TYPE
 
298 NAME VARIABLE 
 637,50: __size
 637,56: VARIABLE
 
65 VARIABLE 
 637,56: VARIABLE
 
300 , parameter_declaration 
 637,56: ,
 638,9: size_t
 638,15: TYPE
 638,16: __n
 638,19: VARIABLE
 
391 NAME TYPE 
 638,9: size_t
 638,15: TYPE
 
26 TYPE 
 638,15: TYPE
 
298 NAME VARIABLE 
 638,16: __n
 638,19: VARIABLE
 
65 VARIABLE 
 638,19: VARIABLE
 
300 , parameter_declaration 
 638,19: ,
 638,21: FILE
 638,25: TYPE
 638,26: *
 638,28: __s
 638,31: VARIABLE
 
391 NAME TYPE 
 638,21: FILE
 638,25: TYPE
 
26 TYPE 
 638,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 638,26: *
 
386 NAME VARIABLE 
 638,28: __s
 638,31: VARIABLE
 
65 VARIABLE 
 638,31: VARIABLE
 
187 ) 
 638,31: )
 
60 ; 
 638,32: ;
 
23 extern 
 640,1: extern
 
8 NAME TYPE 
 640,8: size_t
 640,14: TYPE
 
26 TYPE 
 640,14: TYPE
 
5 NAME VARIABLE 
 640,15: fread_unlocked
 640,29: VARIABLE
 
65 VARIABLE 
 640,29: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 640,30: (
 640,31: void
 640,36: *
 640,38: __ptr
 640,43: VARIABLE
 640,43: ,
 640,45: size_t
 640,51: TYPE
 640,52: __size
 640,58: VARIABLE
 640,58: ,
 641,10: size_t
 641,16: TYPE
 641,17: __n
 641,20: VARIABLE
 641,20: ,
 641,22: FILE
 641,26: TYPE
 641,27: *
 641,29: __stream
 641,37: VARIABLE
 641,37: )
 
186 void 
 640,31: void
 
298 * option_type_qualifier_list option_pointer 
 640,36: *
 
386 NAME VARIABLE 
 640,38: __ptr
 640,43: VARIABLE
 
65 VARIABLE 
 640,43: VARIABLE
 
300 , parameter_declaration 
 640,43: ,
 640,45: size_t
 640,51: TYPE
 640,52: __size
 640,58: VARIABLE
 
391 NAME TYPE 
 640,45: size_t
 640,51: TYPE
 
26 TYPE 
 640,51: TYPE
 
298 NAME VARIABLE 
 640,52: __size
 640,58: VARIABLE
 
65 VARIABLE 
 640,58: VARIABLE
 
300 , parameter_declaration 
 640,58: ,
 641,10: size_t
 641,16: TYPE
 641,17: __n
 641,20: VARIABLE
 
391 NAME TYPE 
 641,10: size_t
 641,16: TYPE
 
26 TYPE 
 641,16: TYPE
 
298 NAME VARIABLE 
 641,17: __n
 641,20: VARIABLE
 
65 VARIABLE 
 641,20: VARIABLE
 
300 , parameter_declaration 
 641,20: ,
 641,22: FILE
 641,26: TYPE
 641,27: *
 641,29: __stream
 641,37: VARIABLE
 
391 NAME TYPE 
 641,22: FILE
 641,26: TYPE
 
26 TYPE 
 641,26: TYPE
 
298 * option_type_qualifier_list option_pointer 
 641,27: *
 
386 NAME VARIABLE 
 641,29: __stream
 641,37: VARIABLE
 
65 VARIABLE 
 641,37: VARIABLE
 
187 ) 
 641,37: )
 
60 ; 
 641,39: ;
 
23 extern 
 642,1: extern
 
8 NAME TYPE 
 642,8: size_t
 642,14: TYPE
 
26 TYPE 
 642,14: TYPE
 
5 NAME VARIABLE 
 642,15: fwrite_unlocked
 642,30: VARIABLE
 
65 VARIABLE 
 642,30: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 642,31: (
 642,32: const
 642,38: void
 642,43: *
 642,45: __ptr
 642,50: VARIABLE
 642,50: ,
 642,52: size_t
 642,58: TYPE
 642,59: __size
 642,65: VARIABLE
 642,65: ,
 643,11: size_t
 643,17: TYPE
 643,18: __n
 643,21: VARIABLE
 643,21: ,
 643,23: FILE
 643,27: TYPE
 643,28: *
 643,30: __stream
 643,38: VARIABLE
 643,38: )
 
186 const 
 642,32: const
 
103 void 
 642,38: void
 
298 * option_type_qualifier_list option_pointer 
 642,43: *
 
386 NAME VARIABLE 
 642,45: __ptr
 642,50: VARIABLE
 
65 VARIABLE 
 642,50: VARIABLE
 
300 , parameter_declaration 
 642,50: ,
 642,52: size_t
 642,58: TYPE
 642,59: __size
 642,65: VARIABLE
 
391 NAME TYPE 
 642,52: size_t
 642,58: TYPE
 
26 TYPE 
 642,58: TYPE
 
298 NAME VARIABLE 
 642,59: __size
 642,65: VARIABLE
 
65 VARIABLE 
 642,65: VARIABLE
 
300 , parameter_declaration 
 642,65: ,
 643,11: size_t
 643,17: TYPE
 643,18: __n
 643,21: VARIABLE
 
391 NAME TYPE 
 643,11: size_t
 643,17: TYPE
 
26 TYPE 
 643,17: TYPE
 
298 NAME VARIABLE 
 643,18: __n
 643,21: VARIABLE
 
65 VARIABLE 
 643,21: VARIABLE
 
300 , parameter_declaration 
 643,21: ,
 643,23: FILE
 643,27: TYPE
 643,28: *
 643,30: __stream
 643,38: VARIABLE
 
391 NAME TYPE 
 643,23: FILE
 643,27: TYPE
 
26 TYPE 
 643,27: TYPE
 
298 * option_type_qualifier_list option_pointer 
 643,28: *
 
386 NAME VARIABLE 
 643,30: __stream
 643,38: VARIABLE
 
65 VARIABLE 
 643,38: VARIABLE
 
187 ) 
 643,38: )
 
60 ; 
 643,39: ;
 
23 extern 
 651,1: extern
 
8 int 
 651,8: int
 
5 NAME VARIABLE 
 651,12: fseek
 651,17: VARIABLE
 
65 VARIABLE 
 651,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 651,18: (
 651,19: FILE
 651,23: TYPE
 651,24: *
 651,25: __stream
 651,33: VARIABLE
 651,33: ,
 651,35: long
 651,40: int
 651,44: __off
 651,49: VARIABLE
 651,49: ,
 651,51: int
 651,55: __whence
 651,63: VARIABLE
 651,63: )
 
186 NAME TYPE 
 651,19: FILE
 651,23: TYPE
 
65 TYPE 
 651,23: TYPE
 
298 * option_type_qualifier_list option_pointer 
 651,24: *
 
386 NAME VARIABLE 
 651,25: __stream
 651,33: VARIABLE
 
65 VARIABLE 
 651,33: VARIABLE
 
300 , parameter_declaration 
 651,33: ,
 651,35: long
 651,40: int
 651,44: __off
 651,49: VARIABLE
 
391 long 
 651,35: long
 
106 int 
 651,40: int
 
298 NAME VARIABLE 
 651,44: __off
 651,49: VARIABLE
 
65 VARIABLE 
 651,49: VARIABLE
 
300 , parameter_declaration 
 651,49: ,
 651,51: int
 651,55: __whence
 651,63: VARIABLE
 
391 int 
 651,51: int
 
298 NAME VARIABLE 
 651,55: __whence
 651,63: VARIABLE
 
65 VARIABLE 
 651,63: VARIABLE
 
187 ) 
 651,63: )
 
60 ; 
 651,64: ;
 
23 extern 
 656,1: extern
 
8 long 
 656,8: long
 
17 int 
 656,13: int
 
5 NAME VARIABLE 
 656,17: ftell
 656,22: VARIABLE
 
65 VARIABLE 
 656,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 656,23: (
 656,24: FILE
 656,28: TYPE
 656,29: *
 656,30: __stream
 656,38: VARIABLE
 656,38: )
 
186 NAME TYPE 
 656,24: FILE
 656,28: TYPE
 
65 TYPE 
 656,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 656,29: *
 
386 NAME VARIABLE 
 656,30: __stream
 656,38: VARIABLE
 
65 VARIABLE 
 656,38: VARIABLE
 
187 ) 
 656,38: )
 
60 ; 
 656,40: ;
 
23 extern 
 661,1: extern
 
8 void 
 661,8: void
 
5 NAME VARIABLE 
 661,13: rewind
 661,19: VARIABLE
 
65 VARIABLE 
 661,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 661,20: (
 661,21: FILE
 661,25: TYPE
 661,26: *
 661,27: __stream
 661,35: VARIABLE
 661,35: )
 
186 NAME TYPE 
 661,21: FILE
 661,25: TYPE
 
65 TYPE 
 661,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 661,26: *
 
386 NAME VARIABLE 
 661,27: __stream
 661,35: VARIABLE
 
65 VARIABLE 
 661,35: VARIABLE
 
187 ) 
 661,35: )
 
60 ; 
 661,36: ;
 
23 extern 
 663,1: extern
 
8 int 
 663,8: int
 
5 NAME VARIABLE 
 663,12: fseeko
 663,18: VARIABLE
 
65 VARIABLE 
 663,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 663,19: (
 663,20: FILE
 663,24: TYPE
 663,25: *
 663,26: __stream
 663,34: VARIABLE
 663,34: ,
 663,36: __off_t
 663,43: TYPE
 663,44: __off
 663,49: VARIABLE
 663,49: ,
 663,51: int
 663,55: __whence
 663,63: VARIABLE
 663,63: )
 
186 NAME TYPE 
 663,20: FILE
 663,24: TYPE
 
65 TYPE 
 663,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 663,25: *
 
386 NAME VARIABLE 
 663,26: __stream
 663,34: VARIABLE
 
65 VARIABLE 
 663,34: VARIABLE
 
300 , parameter_declaration 
 663,34: ,
 663,36: __off_t
 663,43: TYPE
 663,44: __off
 663,49: VARIABLE
 
391 NAME TYPE 
 663,36: __off_t
 663,43: TYPE
 
26 TYPE 
 663,43: TYPE
 
298 NAME VARIABLE 
 663,44: __off
 663,49: VARIABLE
 
65 VARIABLE 
 663,49: VARIABLE
 
300 , parameter_declaration 
 663,49: ,
 663,51: int
 663,55: __whence
 663,63: VARIABLE
 
391 int 
 663,51: int
 
298 NAME VARIABLE 
 663,55: __whence
 663,63: VARIABLE
 
65 VARIABLE 
 663,63: VARIABLE
 
187 ) 
 663,63: )
 
60 ; 
 663,64: ;
 
23 extern 
 668,1: extern
 
8 NAME TYPE 
 668,8: __off_t
 668,15: TYPE
 
26 TYPE 
 668,15: TYPE
 
5 NAME VARIABLE 
 668,16: ftello
 668,22: VARIABLE
 
65 VARIABLE 
 668,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 668,23: (
 668,24: FILE
 668,28: TYPE
 668,29: *
 668,30: __stream
 668,38: VARIABLE
 668,38: )
 
186 NAME TYPE 
 668,24: FILE
 668,28: TYPE
 
65 TYPE 
 668,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 668,29: *
 
386 NAME VARIABLE 
 668,30: __stream
 668,38: VARIABLE
 
65 VARIABLE 
 668,38: VARIABLE
 
187 ) 
 668,38: )
 
60 ; 
 668,40: ;
 
23 extern 
 670,1: extern
 
8 int 
 670,8: int
 
5 NAME VARIABLE 
 670,12: fgetpos
 670,19: VARIABLE
 
65 VARIABLE 
 670,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 670,20: (
 670,21: FILE
 670,25: TYPE
 670,26: *
 670,28: __stream
 670,36: VARIABLE
 670,36: ,
 670,38: fpos_t
 670,44: TYPE
 670,45: *
 670,47: __pos
 670,52: VARIABLE
 670,52: )
 
186 NAME TYPE 
 670,21: FILE
 670,25: TYPE
 
65 TYPE 
 670,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 670,26: *
 
386 NAME VARIABLE 
 670,28: __stream
 670,36: VARIABLE
 
65 VARIABLE 
 670,36: VARIABLE
 
300 , parameter_declaration 
 670,36: ,
 670,38: fpos_t
 670,44: TYPE
 670,45: *
 670,47: __pos
 670,52: VARIABLE
 
391 NAME TYPE 
 670,38: fpos_t
 670,44: TYPE
 
26 TYPE 
 670,44: TYPE
 
298 * option_type_qualifier_list option_pointer 
 670,45: *
 
386 NAME VARIABLE 
 670,47: __pos
 670,52: VARIABLE
 
65 VARIABLE 
 670,52: VARIABLE
 
187 ) 
 670,52: )
 
60 ; 
 670,53: ;
 
23 extern 
 675,1: extern
 
8 int 
 675,8: int
 
5 NAME VARIABLE 
 675,12: fsetpos
 675,19: VARIABLE
 
65 VARIABLE 
 675,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 675,20: (
 675,21: FILE
 675,25: TYPE
 675,26: *
 675,27: __stream
 675,35: VARIABLE
 675,35: ,
 675,37: const
 675,43: fpos_t
 675,49: TYPE
 675,50: *
 675,51: __pos
 675,56: VARIABLE
 675,56: )
 
186 NAME TYPE 
 675,21: FILE
 675,25: TYPE
 
65 TYPE 
 675,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 675,26: *
 
386 NAME VARIABLE 
 675,27: __stream
 675,35: VARIABLE
 
65 VARIABLE 
 675,35: VARIABLE
 
300 , parameter_declaration 
 675,35: ,
 675,37: const
 675,43: fpos_t
 675,49: TYPE
 675,50: *
 675,51: __pos
 675,56: VARIABLE
 
391 const 
 675,37: const
 
103 NAME TYPE 
 675,43: fpos_t
 675,49: TYPE
 
26 TYPE 
 675,49: TYPE
 
298 * option_type_qualifier_list option_pointer 
 675,50: *
 
386 NAME VARIABLE 
 675,51: __pos
 675,56: VARIABLE
 
65 VARIABLE 
 675,56: VARIABLE
 
187 ) 
 675,56: )
 
60 ; 
 675,57: ;
 
23 extern 
 677,1: extern
 
8 void 
 677,8: void
 
5 NAME VARIABLE 
 677,13: clearerr
 677,21: VARIABLE
 
65 VARIABLE 
 677,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 677,22: (
 677,23: FILE
 677,27: TYPE
 677,28: *
 677,29: __stream
 677,37: VARIABLE
 677,37: )
 
186 NAME TYPE 
 677,23: FILE
 677,27: TYPE
 
65 TYPE 
 677,27: TYPE
 
298 * option_type_qualifier_list option_pointer 
 677,28: *
 
386 NAME VARIABLE 
 677,29: __stream
 677,37: VARIABLE
 
65 VARIABLE 
 677,37: VARIABLE
 
187 ) 
 677,37: )
 
60 ; 
 677,39: ;
 
23 extern 
 679,1: extern
 
8 int 
 679,8: int
 
5 NAME VARIABLE 
 679,12: feof
 679,16: VARIABLE
 
65 VARIABLE 
 679,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 679,17: (
 679,18: FILE
 679,22: TYPE
 679,23: *
 679,24: __stream
 679,32: VARIABLE
 679,32: )
 
186 NAME TYPE 
 679,18: FILE
 679,22: TYPE
 
65 TYPE 
 679,22: TYPE
 
298 * option_type_qualifier_list option_pointer 
 679,23: *
 
386 NAME VARIABLE 
 679,24: __stream
 679,32: VARIABLE
 
65 VARIABLE 
 679,32: VARIABLE
 
187 ) 
 679,32: )
 
60 ; 
 679,35: ;
 
23 extern 
 681,1: extern
 
8 int 
 681,8: int
 
5 NAME VARIABLE 
 681,12: ferror
 681,18: VARIABLE
 
65 VARIABLE 
 681,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 681,19: (
 681,20: FILE
 681,24: TYPE
 681,25: *
 681,26: __stream
 681,34: VARIABLE
 681,34: )
 
186 NAME TYPE 
 681,20: FILE
 681,24: TYPE
 
65 TYPE 
 681,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 681,25: *
 
386 NAME VARIABLE 
 681,26: __stream
 681,34: VARIABLE
 
65 VARIABLE 
 681,34: VARIABLE
 
187 ) 
 681,34: )
 
60 ; 
 681,37: ;
 
23 extern 
 685,1: extern
 
8 void 
 685,8: void
 
5 NAME VARIABLE 
 685,13: clearerr_unlocked
 685,30: VARIABLE
 
65 VARIABLE 
 685,30: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 685,31: (
 685,32: FILE
 685,36: TYPE
 685,37: *
 685,38: __stream
 685,46: VARIABLE
 685,46: )
 
186 NAME TYPE 
 685,32: FILE
 685,36: TYPE
 
65 TYPE 
 685,36: TYPE
 
298 * option_type_qualifier_list option_pointer 
 685,37: *
 
386 NAME VARIABLE 
 685,38: __stream
 685,46: VARIABLE
 
65 VARIABLE 
 685,46: VARIABLE
 
187 ) 
 685,46: )
 
60 ; 
 685,48: ;
 
23 extern 
 686,1: extern
 
8 int 
 686,8: int
 
5 NAME VARIABLE 
 686,12: feof_unlocked
 686,25: VARIABLE
 
65 VARIABLE 
 686,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 686,26: (
 686,27: FILE
 686,31: TYPE
 686,32: *
 686,33: __stream
 686,41: VARIABLE
 686,41: )
 
186 NAME TYPE 
 686,27: FILE
 686,31: TYPE
 
65 TYPE 
 686,31: TYPE
 
298 * option_type_qualifier_list option_pointer 
 686,32: *
 
386 NAME VARIABLE 
 686,33: __stream
 686,41: VARIABLE
 
65 VARIABLE 
 686,41: VARIABLE
 
187 ) 
 686,41: )
 
60 ; 
 686,44: ;
 
23 extern 
 687,1: extern
 
8 int 
 687,8: int
 
5 NAME VARIABLE 
 687,12: ferror_unlocked
 687,27: VARIABLE
 
65 VARIABLE 
 687,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 687,28: (
 687,29: FILE
 687,33: TYPE
 687,34: *
 687,35: __stream
 687,43: VARIABLE
 687,43: )
 
186 NAME TYPE 
 687,29: FILE
 687,33: TYPE
 
65 TYPE 
 687,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 687,34: *
 
386 NAME VARIABLE 
 687,35: __stream
 687,43: VARIABLE
 
65 VARIABLE 
 687,43: VARIABLE
 
187 ) 
 687,43: )
 
60 ; 
 687,46: ;
 
23 extern 
 695,1: extern
 
8 void 
 695,8: void
 
5 NAME VARIABLE 
 695,13: perror
 695,19: VARIABLE
 
65 VARIABLE 
 695,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 695,20: (
 695,21: const
 695,27: char
 695,32: *
 695,33: __s
 695,36: VARIABLE
 695,36: )
 
186 const 
 695,21: const
 
103 char 
 695,27: char
 
298 * option_type_qualifier_list option_pointer 
 695,32: *
 
386 NAME VARIABLE 
 695,33: __s
 695,36: VARIABLE
 
65 VARIABLE 
 695,36: VARIABLE
 
187 ) 
 695,36: )
 
60 ; 
 695,37: ;
 
23 extern 
 700,1: extern
 
8 int 
 700,8: int
 
5 NAME VARIABLE 
 700,12: fileno
 700,18: VARIABLE
 
65 VARIABLE 
 700,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 700,19: (
 700,20: FILE
 700,24: TYPE
 700,25: *
 700,26: __stream
 700,34: VARIABLE
 700,34: )
 
186 NAME TYPE 
 700,20: FILE
 700,24: TYPE
 
65 TYPE 
 700,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 700,25: *
 
386 NAME VARIABLE 
 700,26: __stream
 700,34: VARIABLE
 
65 VARIABLE 
 700,34: VARIABLE
 
187 ) 
 700,34: )
 
60 ; 
 700,37: ;
 
23 extern 
 705,1: extern
 
8 int 
 705,8: int
 
5 NAME VARIABLE 
 705,12: fileno_unlocked
 705,27: VARIABLE
 
65 VARIABLE 
 705,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 705,28: (
 705,29: FILE
 705,33: TYPE
 705,34: *
 705,35: __stream
 705,43: VARIABLE
 705,43: )
 
186 NAME TYPE 
 705,29: FILE
 705,33: TYPE
 
65 TYPE 
 705,33: TYPE
 
298 * option_type_qualifier_list option_pointer 
 705,34: *
 
386 NAME VARIABLE 
 705,35: __stream
 705,43: VARIABLE
 
65 VARIABLE 
 705,43: VARIABLE
 
187 ) 
 705,43: )
 
60 ; 
 705,46: ;
 
23 extern 
 707,1: extern
 
8 int 
 707,8: int
 
5 NAME VARIABLE 
 707,12: pclose
 707,18: VARIABLE
 
65 VARIABLE 
 707,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 707,19: (
 707,20: FILE
 707,24: TYPE
 707,25: *
 707,26: __stream
 707,34: VARIABLE
 707,34: )
 
186 NAME TYPE 
 707,20: FILE
 707,24: TYPE
 
65 TYPE 
 707,24: TYPE
 
298 * option_type_qualifier_list option_pointer 
 707,25: *
 
386 NAME VARIABLE 
 707,26: __stream
 707,34: VARIABLE
 
65 VARIABLE 
 707,34: VARIABLE
 
187 ) 
 707,34: )
 
60 ; 
 707,35: ;
 
23 extern 
 713,1: extern
 
8 NAME TYPE 
 713,8: FILE
 713,12: TYPE
 
26 TYPE 
 713,12: TYPE
 
5 * option_type_qualifier_list option_pointer 
 713,13: *
 
64 NAME VARIABLE 
 713,14: popen
 713,19: VARIABLE
 
65 VARIABLE 
 713,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 713,20: (
 713,21: const
 713,27: char
 713,32: *
 713,33: __command
 713,42: VARIABLE
 713,42: ,
 713,44: const
 713,50: char
 713,55: *
 713,56: __modes
 713,63: VARIABLE
 713,63: )
 
186 const 
 713,21: const
 
103 char 
 713,27: char
 
298 * option_type_qualifier_list option_pointer 
 713,32: *
 
386 NAME VARIABLE 
 713,33: __command
 713,42: VARIABLE
 
65 VARIABLE 
 713,42: VARIABLE
 
300 , parameter_declaration 
 713,42: ,
 713,44: const
 713,50: char
 713,55: *
 713,56: __modes
 713,63: VARIABLE
 
391 const 
 713,44: const
 
103 char 
 713,50: char
 
298 * option_type_qualifier_list option_pointer 
 713,55: *
 
386 NAME VARIABLE 
 713,56: __modes
 713,63: VARIABLE
 
65 VARIABLE 
 713,63: VARIABLE
 
187 ) 
 713,63: )
 
60 ; 
 714,5: ;
 
23 extern 
 721,1: extern
 
8 char 
 721,8: char
 
5 * option_type_qualifier_list option_pointer 
 721,13: *
 
64 NAME VARIABLE 
 721,14: ctermid
 721,21: VARIABLE
 
65 VARIABLE 
 721,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 721,22: (
 721,23: char
 721,28: *
 721,29: __s
 721,32: VARIABLE
 721,32: )
 
186 char 
 721,23: char
 
298 * option_type_qualifier_list option_pointer 
 721,28: *
 
386 NAME VARIABLE 
 721,29: __s
 721,32: VARIABLE
 
65 VARIABLE 
 721,32: VARIABLE
 
187 ) 
 721,32: )
 
60 ; 
 722,3: ;
 
23 extern 
 724,1: extern
 
8 void 
 724,8: void
 
5 NAME VARIABLE 
 724,13: flockfile
 724,22: VARIABLE
 
65 VARIABLE 
 724,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 724,23: (
 724,24: FILE
 724,28: TYPE
 724,29: *
 724,30: __stream
 724,38: VARIABLE
 724,38: )
 
186 NAME TYPE 
 724,24: FILE
 724,28: TYPE
 
65 TYPE 
 724,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 724,29: *
 
386 NAME VARIABLE 
 724,30: __stream
 724,38: VARIABLE
 
65 VARIABLE 
 724,38: VARIABLE
 
187 ) 
 724,38: )
 
60 ; 
 724,40: ;
 
23 extern 
 728,1: extern
 
8 int 
 728,8: int
 
5 NAME VARIABLE 
 728,12: ftrylockfile
 728,24: VARIABLE
 
65 VARIABLE 
 728,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 728,25: (
 728,26: FILE
 728,30: TYPE
 728,31: *
 728,32: __stream
 728,40: VARIABLE
 728,40: )
 
186 NAME TYPE 
 728,26: FILE
 728,30: TYPE
 
65 TYPE 
 728,30: TYPE
 
298 * option_type_qualifier_list option_pointer 
 728,31: *
 
386 NAME VARIABLE 
 728,32: __stream
 728,40: VARIABLE
 
65 VARIABLE 
 728,40: VARIABLE
 
187 ) 
 728,40: )
 
60 ; 
 728,43: ;
 
23 extern 
 731,1: extern
 
8 void 
 731,8: void
 
5 NAME VARIABLE 
 731,13: funlockfile
 731,24: VARIABLE
 
65 VARIABLE 
 731,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 731,25: (
 731,26: FILE
 731,30: TYPE
 731,31: *
 731,32: __stream
 731,40: VARIABLE
 731,40: )
 
186 NAME TYPE 
 731,26: FILE
 731,30: TYPE
 
65 TYPE 
 731,30: TYPE
 
298 * option_type_qualifier_list option_pointer 
 731,31: *
 
386 NAME VARIABLE 
 731,32: __stream
 731,40: VARIABLE
 
65 VARIABLE 
 731,40: VARIABLE
 
187 ) 
 731,40: )
 
60 ; 
 731,42: ;
 
23 extern 
 733,1: extern
 
8 int 
 733,8: int
 
5 NAME VARIABLE 
 733,12: __uflow
 733,19: VARIABLE
 
65 VARIABLE 
 733,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 733,20: (
 733,21: FILE
 733,25: TYPE
 733,26: *
 733,27: )
 
186 NAME TYPE 
 733,21: FILE
 733,25: TYPE
 
65 TYPE 
 733,25: TYPE
 
298 * option_type_qualifier_list option_pointer 
 733,26: *
 
187 ) 
 733,27: )
 
60 ; 
 733,28: ;
 
23 extern 
 734,1: extern
 
8 int 
 734,8: int
 
5 NAME VARIABLE 
 734,12: __overflow
 734,22: VARIABLE
 
65 VARIABLE 
 734,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 734,23: (
 734,24: FILE
 734,28: TYPE
 734,29: *
 734,30: ,
 734,32: int
 734,35: )
 
186 NAME TYPE 
 734,24: FILE
 734,28: TYPE
 
65 TYPE 
 734,28: TYPE
 
298 * option_type_qualifier_list option_pointer 
 734,29: *
 
300 , parameter_declaration 
 734,30: ,
 734,32: int
 
391 int 
 734,32: int
 
187 ) 
 734,35: )
 
60 ; 
 734,36: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 749,1: typedef
 749,9: int
 
54 int 
 749,9: int
 
6 NAME VARIABLE 
 749,13: wchar_t
 749,20: VARIABLE
 
65 VARIABLE 
 749,20: VARIABLE
 
70 ; 
 749,20: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 763,1: typedef
 763,9: struct
 764,3: {
 765,5: int
 765,9: quot
 765,13: VARIABLE
 765,13: ;
 766,5: int
 766,9: rem
 766,12: VARIABLE
 766,12: ;
 767,3: }
 
54 struct 
 763,9: struct
 
89 { struct_declaration_list } 
 764,3: {
 765,5: int
 765,9: quot
 765,13: VARIABLE
 765,13: ;
 766,5: int
 766,9: rem
 766,12: VARIABLE
 766,12: ;
 767,3: }
 
126 int 
 765,5: int
 
200 NAME VARIABLE 
 765,9: quot
 765,13: VARIABLE
 
65 VARIABLE 
 765,13: VARIABLE
 
313 ; 
 765,13: ;
 
198 int 
 766,5: int
 
200 NAME VARIABLE 
 766,9: rem
 766,12: VARIABLE
 
65 VARIABLE 
 766,12: VARIABLE
 
313 ; 
 766,12: ;
 
198 } 
 767,3: }
 
6 NAME VARIABLE 
 767,5: div_t
 767,10: VARIABLE
 
65 VARIABLE 
 767,10: VARIABLE
 
70 ; 
 767,10: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 771,1: typedef
 771,9: struct
 772,3: {
 773,5: long
 773,10: int
 773,14: quot
 773,18: VARIABLE
 773,18: ;
 774,5: long
 774,10: int
 774,14: rem
 774,17: VARIABLE
 774,17: ;
 775,3: }
 
54 struct 
 771,9: struct
 
89 { struct_declaration_list } 
 772,3: {
 773,5: long
 773,10: int
 773,14: quot
 773,18: VARIABLE
 773,18: ;
 774,5: long
 774,10: int
 774,14: rem
 774,17: VARIABLE
 774,17: ;
 775,3: }
 
126 long 
 773,5: long
 
135 int 
 773,10: int
 
200 NAME VARIABLE 
 773,14: quot
 773,18: VARIABLE
 
65 VARIABLE 
 773,18: VARIABLE
 
313 ; 
 773,18: ;
 
198 long 
 774,5: long
 
135 int 
 774,10: int
 
200 NAME VARIABLE 
 774,14: rem
 774,17: VARIABLE
 
65 VARIABLE 
 774,17: VARIABLE
 
313 ; 
 774,17: ;
 
198 } 
 775,3: }
 
6 NAME VARIABLE 
 775,5: ldiv_t
 775,11: VARIABLE
 
65 VARIABLE 
 775,11: VARIABLE
 
70 ; 
 775,11: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 781,2: typedef
 781,10: struct
 782,3: {
 783,5: long
 783,10: long
 783,15: int
 783,19: quot
 783,23: VARIABLE
 783,23: ;
 784,5: long
 784,10: long
 784,15: int
 784,19: rem
 784,22: VARIABLE
 784,22: ;
 785,3: }
 
54 struct 
 781,10: struct
 
89 { struct_declaration_list } 
 782,3: {
 783,5: long
 783,10: long
 783,15: int
 783,19: quot
 783,23: VARIABLE
 783,23: ;
 784,5: long
 784,10: long
 784,15: int
 784,19: rem
 784,22: VARIABLE
 784,22: ;
 785,3: }
 
126 long 
 783,5: long
 
135 long 
 783,10: long
 
135 int 
 783,15: int
 
200 NAME VARIABLE 
 783,19: quot
 783,23: VARIABLE
 
65 VARIABLE 
 783,23: VARIABLE
 
313 ; 
 783,23: ;
 
198 long 
 784,5: long
 
135 long 
 784,10: long
 
135 int 
 784,15: int
 
200 NAME VARIABLE 
 784,19: rem
 784,22: VARIABLE
 
65 VARIABLE 
 784,22: VARIABLE
 
313 ; 
 784,22: ;
 
198 } 
 785,3: }
 
6 NAME VARIABLE 
 785,5: lldiv_t
 785,12: VARIABLE
 
65 VARIABLE 
 785,12: VARIABLE
 
70 ; 
 785,12: ;
 
23 extern 
 787,1: extern
 
8 NAME TYPE 
 787,8: size_t
 787,14: TYPE
 
26 TYPE 
 787,14: TYPE
 
5 NAME VARIABLE 
 787,15: __ctype_get_mb_cur_max
 787,37: VARIABLE
 
65 VARIABLE 
 787,37: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 787,38: (
 787,39: void
 787,43: )
 
186 void 
 787,39: void
 
187 ) 
 787,43: )
 
60 ; 
 787,46: ;
 
23 extern 
 791,1: extern
 
8 double 
 791,8: double
 
5 NAME VARIABLE 
 791,15: atof
 791,19: VARIABLE
 
65 VARIABLE 
 791,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 791,20: (
 791,21: const
 791,27: char
 791,32: *
 791,33: __nptr
 791,39: VARIABLE
 791,39: )
 
186 const 
 791,21: const
 
103 char 
 791,27: char
 
298 * option_type_qualifier_list option_pointer 
 791,32: *
 
386 NAME VARIABLE 
 791,33: __nptr
 791,39: VARIABLE
 
65 VARIABLE 
 791,39: VARIABLE
 
187 ) 
 791,39: )
 
60 ; 
 792,9: ;
 
23 extern 
 794,1: extern
 
8 int 
 794,8: int
 
5 NAME VARIABLE 
 794,12: atoi
 794,16: VARIABLE
 
65 VARIABLE 
 794,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 794,17: (
 794,18: const
 794,24: char
 794,29: *
 794,30: __nptr
 794,36: VARIABLE
 794,36: )
 
186 const 
 794,18: const
 
103 char 
 794,24: char
 
298 * option_type_qualifier_list option_pointer 
 794,29: *
 
386 NAME VARIABLE 
 794,30: __nptr
 794,36: VARIABLE
 
65 VARIABLE 
 794,36: VARIABLE
 
187 ) 
 794,36: )
 
60 ; 
 795,9: ;
 
23 extern 
 797,1: extern
 
8 long 
 797,8: long
 
17 int 
 797,13: int
 
5 NAME VARIABLE 
 797,17: atol
 797,21: VARIABLE
 
65 VARIABLE 
 797,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 797,22: (
 797,23: const
 797,29: char
 797,34: *
 797,35: __nptr
 797,41: VARIABLE
 797,41: )
 
186 const 
 797,23: const
 
103 char 
 797,29: char
 
298 * option_type_qualifier_list option_pointer 
 797,34: *
 
386 NAME VARIABLE 
 797,35: __nptr
 797,41: VARIABLE
 
65 VARIABLE 
 797,41: VARIABLE
 
187 ) 
 797,41: )
 
60 ; 
 798,9: ;
 
23 extern 
 802,2: extern
 
8 long 
 802,9: long
 
17 long 
 802,14: long
 
17 int 
 802,19: int
 
5 NAME VARIABLE 
 802,23: atoll
 802,28: VARIABLE
 
65 VARIABLE 
 802,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 802,29: (
 802,30: const
 802,36: char
 802,41: *
 802,42: __nptr
 802,48: VARIABLE
 802,48: )
 
186 const 
 802,30: const
 
103 char 
 802,36: char
 
298 * option_type_qualifier_list option_pointer 
 802,41: *
 
386 NAME VARIABLE 
 802,42: __nptr
 802,48: VARIABLE
 
65 VARIABLE 
 802,48: VARIABLE
 
187 ) 
 802,48: )
 
60 ; 
 803,9: ;
 
23 extern 
 807,1: extern
 
8 double 
 807,8: double
 
5 NAME VARIABLE 
 807,15: strtod
 807,21: VARIABLE
 
65 VARIABLE 
 807,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 807,22: (
 807,23: const
 807,29: char
 807,34: *
 807,36: __nptr
 807,42: VARIABLE
 807,42: ,
 808,9: char
 808,14: *
 808,15: *
 808,17: __endptr
 808,25: VARIABLE
 808,25: )
 
186 const 
 807,23: const
 
103 char 
 807,29: char
 
298 * option_type_qualifier_list option_pointer 
 807,34: *
 
386 NAME VARIABLE 
 807,36: __nptr
 807,42: VARIABLE
 
65 VARIABLE 
 807,42: VARIABLE
 
300 , parameter_declaration 
 807,42: ,
 808,9: char
 808,14: *
 808,15: *
 808,17: __endptr
 808,25: VARIABLE
 
391 char 
 808,9: char
 
298 * option_type_qualifier_list option_pointer 
 808,14: *
 808,15: *
 
116 * option_type_qualifier_list option_pointer 
 808,15: *
 
386 NAME VARIABLE 
 808,17: __endptr
 808,25: VARIABLE
 
65 VARIABLE 
 808,25: VARIABLE
 
187 ) 
 808,25: )
 
60 ; 
 809,7: ;
 
23 extern 
 813,1: extern
 
8 float 
 813,8: float
 
5 NAME VARIABLE 
 813,14: strtof
 813,20: VARIABLE
 
65 VARIABLE 
 813,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 813,21: (
 813,22: const
 813,28: char
 813,33: *
 813,35: __nptr
 813,41: VARIABLE
 813,41: ,
 814,8: char
 814,13: *
 814,14: *
 814,16: __endptr
 814,24: VARIABLE
 814,24: )
 
186 const 
 813,22: const
 
103 char 
 813,28: char
 
298 * option_type_qualifier_list option_pointer 
 813,33: *
 
386 NAME VARIABLE 
 813,35: __nptr
 813,41: VARIABLE
 
65 VARIABLE 
 813,41: VARIABLE
 
300 , parameter_declaration 
 813,41: ,
 814,8: char
 814,13: *
 814,14: *
 814,16: __endptr
 814,24: VARIABLE
 
391 char 
 814,8: char
 
298 * option_type_qualifier_list option_pointer 
 814,13: *
 814,14: *
 
116 * option_type_qualifier_list option_pointer 
 814,14: *
 
386 NAME VARIABLE 
 814,16: __endptr
 814,24: VARIABLE
 
65 VARIABLE 
 814,24: VARIABLE
 
187 ) 
 814,24: )
 
60 ; 
 814,27: ;
 
23 extern 
 816,1: extern
 
8 long 
 816,8: long
 
17 double 
 816,13: double
 
5 NAME VARIABLE 
 816,20: strtold
 816,27: VARIABLE
 
65 VARIABLE 
 816,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 816,28: (
 816,29: const
 816,35: char
 816,40: *
 816,42: __nptr
 816,48: VARIABLE
 816,48: ,
 817,8: char
 817,13: *
 817,14: *
 817,16: __endptr
 817,24: VARIABLE
 817,24: )
 
186 const 
 816,29: const
 
103 char 
 816,35: char
 
298 * option_type_qualifier_list option_pointer 
 816,40: *
 
386 NAME VARIABLE 
 816,42: __nptr
 816,48: VARIABLE
 
65 VARIABLE 
 816,48: VARIABLE
 
300 , parameter_declaration 
 816,48: ,
 817,8: char
 817,13: *
 817,14: *
 817,16: __endptr
 817,24: VARIABLE
 
391 char 
 817,8: char
 
298 * option_type_qualifier_list option_pointer 
 817,13: *
 817,14: *
 
116 * option_type_qualifier_list option_pointer 
 817,14: *
 
386 NAME VARIABLE 
 817,16: __endptr
 817,24: VARIABLE
 
65 VARIABLE 
 817,24: VARIABLE
 
187 ) 
 817,24: )
 
60 ; 
 818,7: ;
 
23 extern 
 820,1: extern
 
8 long 
 820,8: long
 
17 int 
 820,13: int
 
5 NAME VARIABLE 
 820,17: strtol
 820,23: VARIABLE
 
65 VARIABLE 
 820,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 820,24: (
 820,25: const
 820,31: char
 820,36: *
 820,38: __nptr
 820,44: VARIABLE
 820,44: ,
 821,4: char
 821,9: *
 821,10: *
 821,12: __endptr
 821,20: VARIABLE
 821,20: ,
 821,22: int
 821,26: __base
 821,32: VARIABLE
 821,32: )
 
186 const 
 820,25: const
 
103 char 
 820,31: char
 
298 * option_type_qualifier_list option_pointer 
 820,36: *
 
386 NAME VARIABLE 
 820,38: __nptr
 820,44: VARIABLE
 
65 VARIABLE 
 820,44: VARIABLE
 
300 , parameter_declaration 
 820,44: ,
 821,4: char
 821,9: *
 821,10: *
 821,12: __endptr
 821,20: VARIABLE
 
391 char 
 821,4: char
 
298 * option_type_qualifier_list option_pointer 
 821,9: *
 821,10: *
 
116 * option_type_qualifier_list option_pointer 
 821,10: *
 
386 NAME VARIABLE 
 821,12: __endptr
 821,20: VARIABLE
 
65 VARIABLE 
 821,20: VARIABLE
 
300 , parameter_declaration 
 821,20: ,
 821,22: int
 821,26: __base
 821,32: VARIABLE
 
391 int 
 821,22: int
 
298 NAME VARIABLE 
 821,26: __base
 821,32: VARIABLE
 
65 VARIABLE 
 821,32: VARIABLE
 
187 ) 
 821,32: )
 
60 ; 
 822,7: ;
 
23 extern 
 824,1: extern
 
8 unsigned 
 824,8: unsigned
 
17 long 
 824,17: long
 
17 int 
 824,22: int
 
5 NAME VARIABLE 
 824,26: strtoul
 824,33: VARIABLE
 
65 VARIABLE 
 824,33: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 824,34: (
 824,35: const
 824,41: char
 824,46: *
 824,48: __nptr
 824,54: VARIABLE
 824,54: ,
 825,7: char
 825,12: *
 825,13: *
 825,15: __endptr
 825,23: VARIABLE
 825,23: ,
 825,25: int
 825,29: __base
 825,35: VARIABLE
 825,35: )
 
186 const 
 824,35: const
 
103 char 
 824,41: char
 
298 * option_type_qualifier_list option_pointer 
 824,46: *
 
386 NAME VARIABLE 
 824,48: __nptr
 824,54: VARIABLE
 
65 VARIABLE 
 824,54: VARIABLE
 
300 , parameter_declaration 
 824,54: ,
 825,7: char
 825,12: *
 825,13: *
 825,15: __endptr
 825,23: VARIABLE
 
391 char 
 825,7: char
 
298 * option_type_qualifier_list option_pointer 
 825,12: *
 825,13: *
 
116 * option_type_qualifier_list option_pointer 
 825,13: *
 
386 NAME VARIABLE 
 825,15: __endptr
 825,23: VARIABLE
 
65 VARIABLE 
 825,23: VARIABLE
 
300 , parameter_declaration 
 825,23: ,
 825,25: int
 825,29: __base
 825,35: VARIABLE
 
391 int 
 825,25: int
 
298 NAME VARIABLE 
 825,29: __base
 825,35: VARIABLE
 
65 VARIABLE 
 825,35: VARIABLE
 
187 ) 
 825,35: )
 
60 ; 
 826,7: ;
 
23 extern 
 831,1: extern
 
8 long 
 831,8: long
 
17 long 
 831,13: long
 
17 int 
 831,18: int
 
5 NAME VARIABLE 
 831,22: strtoq
 831,28: VARIABLE
 
65 VARIABLE 
 831,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 831,29: (
 831,30: const
 831,36: char
 831,41: *
 831,43: __nptr
 831,49: VARIABLE
 831,49: ,
 832,9: char
 832,14: *
 832,15: *
 832,17: __endptr
 832,25: VARIABLE
 832,25: ,
 832,27: int
 832,31: __base
 832,37: VARIABLE
 832,37: )
 
186 const 
 831,30: const
 
103 char 
 831,36: char
 
298 * option_type_qualifier_list option_pointer 
 831,41: *
 
386 NAME VARIABLE 
 831,43: __nptr
 831,49: VARIABLE
 
65 VARIABLE 
 831,49: VARIABLE
 
300 , parameter_declaration 
 831,49: ,
 832,9: char
 832,14: *
 832,15: *
 832,17: __endptr
 832,25: VARIABLE
 
391 char 
 832,9: char
 
298 * option_type_qualifier_list option_pointer 
 832,14: *
 832,15: *
 
116 * option_type_qualifier_list option_pointer 
 832,15: *
 
386 NAME VARIABLE 
 832,17: __endptr
 832,25: VARIABLE
 
65 VARIABLE 
 832,25: VARIABLE
 
300 , parameter_declaration 
 832,25: ,
 832,27: int
 832,31: __base
 832,37: VARIABLE
 
391 int 
 832,27: int
 
298 NAME VARIABLE 
 832,31: __base
 832,37: VARIABLE
 
65 VARIABLE 
 832,37: VARIABLE
 
187 ) 
 832,37: )
 
60 ; 
 833,7: ;
 
23 extern 
 836,1: extern
 
8 unsigned 
 836,8: unsigned
 
17 long 
 836,17: long
 
17 long 
 836,22: long
 
17 int 
 836,27: int
 
5 NAME VARIABLE 
 836,31: strtouq
 836,38: VARIABLE
 
65 VARIABLE 
 836,38: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 836,39: (
 836,40: const
 836,46: char
 836,51: *
 836,53: __nptr
 836,59: VARIABLE
 836,59: ,
 837,12: char
 837,17: *
 837,18: *
 837,20: __endptr
 837,28: VARIABLE
 837,28: ,
 837,30: int
 837,34: __base
 837,40: VARIABLE
 837,40: )
 
186 const 
 836,40: const
 
103 char 
 836,46: char
 
298 * option_type_qualifier_list option_pointer 
 836,51: *
 
386 NAME VARIABLE 
 836,53: __nptr
 836,59: VARIABLE
 
65 VARIABLE 
 836,59: VARIABLE
 
300 , parameter_declaration 
 836,59: ,
 837,12: char
 837,17: *
 837,18: *
 837,20: __endptr
 837,28: VARIABLE
 
391 char 
 837,12: char
 
298 * option_type_qualifier_list option_pointer 
 837,17: *
 837,18: *
 
116 * option_type_qualifier_list option_pointer 
 837,18: *
 
386 NAME VARIABLE 
 837,20: __endptr
 837,28: VARIABLE
 
65 VARIABLE 
 837,28: VARIABLE
 
300 , parameter_declaration 
 837,28: ,
 837,30: int
 837,34: __base
 837,40: VARIABLE
 
391 int 
 837,30: int
 
298 NAME VARIABLE 
 837,34: __base
 837,40: VARIABLE
 
65 VARIABLE 
 837,40: VARIABLE
 
187 ) 
 837,40: )
 
60 ; 
 838,7: ;
 
23 extern 
 844,1: extern
 
8 long 
 844,8: long
 
17 long 
 844,13: long
 
17 int 
 844,18: int
 
5 NAME VARIABLE 
 844,22: strtoll
 844,29: VARIABLE
 
65 VARIABLE 
 844,29: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 844,30: (
 844,31: const
 844,37: char
 844,42: *
 844,44: __nptr
 844,50: VARIABLE
 844,50: ,
 845,10: char
 845,15: *
 845,16: *
 845,18: __endptr
 845,26: VARIABLE
 845,26: ,
 845,28: int
 845,32: __base
 845,38: VARIABLE
 845,38: )
 
186 const 
 844,31: const
 
103 char 
 844,37: char
 
298 * option_type_qualifier_list option_pointer 
 844,42: *
 
386 NAME VARIABLE 
 844,44: __nptr
 844,50: VARIABLE
 
65 VARIABLE 
 844,50: VARIABLE
 
300 , parameter_declaration 
 844,50: ,
 845,10: char
 845,15: *
 845,16: *
 845,18: __endptr
 845,26: VARIABLE
 
391 char 
 845,10: char
 
298 * option_type_qualifier_list option_pointer 
 845,15: *
 845,16: *
 
116 * option_type_qualifier_list option_pointer 
 845,16: *
 
386 NAME VARIABLE 
 845,18: __endptr
 845,26: VARIABLE
 
65 VARIABLE 
 845,26: VARIABLE
 
300 , parameter_declaration 
 845,26: ,
 845,28: int
 845,32: __base
 845,38: VARIABLE
 
391 int 
 845,28: int
 
298 NAME VARIABLE 
 845,32: __base
 845,38: VARIABLE
 
65 VARIABLE 
 845,38: VARIABLE
 
187 ) 
 845,38: )
 
60 ; 
 846,7: ;
 
23 extern 
 849,1: extern
 
8 unsigned 
 849,8: unsigned
 
17 long 
 849,17: long
 
17 long 
 849,22: long
 
17 int 
 849,27: int
 
5 NAME VARIABLE 
 849,31: strtoull
 849,39: VARIABLE
 
65 VARIABLE 
 849,39: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 849,40: (
 849,41: const
 849,47: char
 849,52: *
 849,54: __nptr
 849,60: VARIABLE
 849,60: ,
 850,6: char
 850,11: *
 850,12: *
 850,14: __endptr
 850,22: VARIABLE
 850,22: ,
 850,24: int
 850,28: __base
 850,34: VARIABLE
 850,34: )
 
186 const 
 849,41: const
 
103 char 
 849,47: char
 
298 * option_type_qualifier_list option_pointer 
 849,52: *
 
386 NAME VARIABLE 
 849,54: __nptr
 849,60: VARIABLE
 
65 VARIABLE 
 849,60: VARIABLE
 
300 , parameter_declaration 
 849,60: ,
 850,6: char
 850,11: *
 850,12: *
 850,14: __endptr
 850,22: VARIABLE
 
391 char 
 850,6: char
 
298 * option_type_qualifier_list option_pointer 
 850,11: *
 850,12: *
 
116 * option_type_qualifier_list option_pointer 
 850,12: *
 
386 NAME VARIABLE 
 850,14: __endptr
 850,22: VARIABLE
 
65 VARIABLE 
 850,22: VARIABLE
 
300 , parameter_declaration 
 850,22: ,
 850,24: int
 850,28: __base
 850,34: VARIABLE
 
391 int 
 850,24: int
 
298 NAME VARIABLE 
 850,28: __base
 850,34: VARIABLE
 
65 VARIABLE 
 850,34: VARIABLE
 
187 ) 
 850,34: )
 
60 ; 
 851,7: ;
 
23 extern 
 853,1: extern
 
8 char 
 853,8: char
 
5 * option_type_qualifier_list option_pointer 
 853,13: *
 
64 NAME VARIABLE 
 853,14: l64a
 853,18: VARIABLE
 
65 VARIABLE 
 853,18: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 853,19: (
 853,20: long
 853,25: int
 853,29: __n
 853,32: VARIABLE
 853,32: )
 
186 long 
 853,20: long
 
106 int 
 853,25: int
 
298 NAME VARIABLE 
 853,29: __n
 853,32: VARIABLE
 
65 VARIABLE 
 853,32: VARIABLE
 
187 ) 
 853,32: )
 
60 ; 
 853,35: ;
 
23 extern 
 856,1: extern
 
8 long 
 856,8: long
 
17 int 
 856,13: int
 
5 NAME VARIABLE 
 856,17: a64l
 856,21: VARIABLE
 
65 VARIABLE 
 856,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 856,22: (
 856,23: const
 856,29: char
 856,34: *
 856,35: __s
 856,38: VARIABLE
 856,38: )
 
186 const 
 856,23: const
 
103 char 
 856,29: char
 
298 * option_type_qualifier_list option_pointer 
 856,34: *
 
386 NAME VARIABLE 
 856,35: __s
 856,38: VARIABLE
 
65 VARIABLE 
 856,38: VARIABLE
 
187 ) 
 856,38: )
 
60 ; 
 857,9: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 870,1: typedef
 870,9: __u_char
 870,17: TYPE
 
54 NAME TYPE 
 870,9: __u_char
 870,17: TYPE
 
26 TYPE 
 870,17: TYPE
 
6 NAME VARIABLE 
 870,18: u_char
 870,24: VARIABLE
 
65 VARIABLE 
 870,24: VARIABLE
 
70 ; 
 870,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 871,1: typedef
 871,9: __u_short
 871,18: TYPE
 
54 NAME TYPE 
 871,9: __u_short
 871,18: TYPE
 
26 TYPE 
 871,18: TYPE
 
6 NAME VARIABLE 
 871,19: u_short
 871,26: VARIABLE
 
65 VARIABLE 
 871,26: VARIABLE
 
70 ; 
 871,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 872,1: typedef
 872,9: __u_int
 872,16: TYPE
 
54 NAME TYPE 
 872,9: __u_int
 872,16: TYPE
 
26 TYPE 
 872,16: TYPE
 
6 NAME VARIABLE 
 872,17: u_int
 872,22: VARIABLE
 
65 VARIABLE 
 872,22: VARIABLE
 
70 ; 
 872,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 873,1: typedef
 873,9: __u_long
 873,17: TYPE
 
54 NAME TYPE 
 873,9: __u_long
 873,17: TYPE
 
26 TYPE 
 873,17: TYPE
 
6 NAME VARIABLE 
 873,18: u_long
 873,24: VARIABLE
 
65 VARIABLE 
 873,24: VARIABLE
 
70 ; 
 873,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 874,1: typedef
 874,9: __quad_t
 874,17: TYPE
 
54 NAME TYPE 
 874,9: __quad_t
 874,17: TYPE
 
26 TYPE 
 874,17: TYPE
 
6 NAME VARIABLE 
 874,18: quad_t
 874,24: VARIABLE
 
65 VARIABLE 
 874,24: VARIABLE
 
70 ; 
 874,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 875,1: typedef
 875,9: __u_quad_t
 875,19: TYPE
 
54 NAME TYPE 
 875,9: __u_quad_t
 875,19: TYPE
 
26 TYPE 
 875,19: TYPE
 
6 NAME VARIABLE 
 875,20: u_quad_t
 875,28: VARIABLE
 
65 VARIABLE 
 875,28: VARIABLE
 
70 ; 
 875,28: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 876,1: typedef
 876,9: __fsid_t
 876,17: TYPE
 
54 NAME TYPE 
 876,9: __fsid_t
 876,17: TYPE
 
26 TYPE 
 876,17: TYPE
 
6 NAME VARIABLE 
 876,18: fsid_t
 876,24: VARIABLE
 
65 VARIABLE 
 876,24: VARIABLE
 
70 ; 
 876,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 879,1: typedef
 879,9: __loff_t
 879,17: TYPE
 
54 NAME TYPE 
 879,9: __loff_t
 879,17: TYPE
 
26 TYPE 
 879,17: TYPE
 
6 NAME VARIABLE 
 879,18: loff_t
 879,24: VARIABLE
 
65 VARIABLE 
 879,24: VARIABLE
 
70 ; 
 879,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 884,1: typedef
 884,9: __ino_t
 884,16: TYPE
 
54 NAME TYPE 
 884,9: __ino_t
 884,16: TYPE
 
26 TYPE 
 884,16: TYPE
 
6 NAME VARIABLE 
 884,17: ino_t
 884,22: VARIABLE
 
65 VARIABLE 
 884,22: VARIABLE
 
70 ; 
 884,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 886,1: typedef
 886,9: __dev_t
 886,16: TYPE
 
54 NAME TYPE 
 886,9: __dev_t
 886,16: TYPE
 
26 TYPE 
 886,16: TYPE
 
6 NAME VARIABLE 
 886,17: dev_t
 886,22: VARIABLE
 
65 VARIABLE 
 886,22: VARIABLE
 
70 ; 
 886,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 891,1: typedef
 891,9: __gid_t
 891,16: TYPE
 
54 NAME TYPE 
 891,9: __gid_t
 891,16: TYPE
 
26 TYPE 
 891,16: TYPE
 
6 NAME VARIABLE 
 891,17: gid_t
 891,22: VARIABLE
 
65 VARIABLE 
 891,22: VARIABLE
 
70 ; 
 891,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 896,1: typedef
 896,9: __mode_t
 896,17: TYPE
 
54 NAME TYPE 
 896,9: __mode_t
 896,17: TYPE
 
26 TYPE 
 896,17: TYPE
 
6 NAME VARIABLE 
 896,18: mode_t
 896,24: VARIABLE
 
65 VARIABLE 
 896,24: VARIABLE
 
70 ; 
 896,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 901,1: typedef
 901,9: __nlink_t
 901,18: TYPE
 
54 NAME TYPE 
 901,9: __nlink_t
 901,18: TYPE
 
26 TYPE 
 901,18: TYPE
 
6 NAME VARIABLE 
 901,19: nlink_t
 901,26: VARIABLE
 
65 VARIABLE 
 901,26: VARIABLE
 
70 ; 
 901,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 906,1: typedef
 906,9: __uid_t
 906,16: TYPE
 
54 NAME TYPE 
 906,9: __uid_t
 906,16: TYPE
 
26 TYPE 
 906,16: TYPE
 
6 NAME VARIABLE 
 906,17: uid_t
 906,22: VARIABLE
 
65 VARIABLE 
 906,22: VARIABLE
 
70 ; 
 906,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 908,1: typedef
 908,9: __pid_t
 908,16: TYPE
 
54 NAME TYPE 
 908,9: __pid_t
 908,16: TYPE
 
26 TYPE 
 908,16: TYPE
 
6 NAME VARIABLE 
 908,17: pid_t
 908,22: VARIABLE
 
65 VARIABLE 
 908,22: VARIABLE
 
70 ; 
 908,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 914,1: typedef
 914,9: __id_t
 914,15: TYPE
 
54 NAME TYPE 
 914,9: __id_t
 914,15: TYPE
 
26 TYPE 
 914,15: TYPE
 
6 NAME VARIABLE 
 914,16: id_t
 914,20: VARIABLE
 
65 VARIABLE 
 914,20: VARIABLE
 
70 ; 
 914,20: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 916,1: typedef
 916,9: __daddr_t
 916,18: TYPE
 
54 NAME TYPE 
 916,9: __daddr_t
 916,18: TYPE
 
26 TYPE 
 916,18: TYPE
 
6 NAME VARIABLE 
 916,19: daddr_t
 916,26: VARIABLE
 
65 VARIABLE 
 916,26: VARIABLE
 
70 ; 
 916,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 917,1: typedef
 917,9: __caddr_t
 917,18: TYPE
 
54 NAME TYPE 
 917,9: __caddr_t
 917,18: TYPE
 
26 TYPE 
 917,18: TYPE
 
6 NAME VARIABLE 
 917,19: caddr_t
 917,26: VARIABLE
 
65 VARIABLE 
 917,26: VARIABLE
 
70 ; 
 917,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 923,1: typedef
 923,9: __key_t
 923,16: TYPE
 
54 NAME TYPE 
 923,9: __key_t
 923,16: TYPE
 
26 TYPE 
 923,16: TYPE
 
6 NAME VARIABLE 
 923,17: key_t
 923,22: VARIABLE
 
65 VARIABLE 
 923,22: VARIABLE
 
70 ; 
 923,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 935,1: typedef
 935,9: __clock_t
 935,18: TYPE
 
54 NAME TYPE 
 935,9: __clock_t
 935,18: TYPE
 
26 TYPE 
 935,18: TYPE
 
6 NAME VARIABLE 
 935,19: clock_t
 935,26: VARIABLE
 
65 VARIABLE 
 935,26: VARIABLE
 
70 ; 
 935,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 945,1: typedef
 945,9: __clockid_t
 945,20: TYPE
 
54 NAME TYPE 
 945,9: __clockid_t
 945,20: TYPE
 
26 TYPE 
 945,20: TYPE
 
6 NAME VARIABLE 
 945,21: clockid_t
 945,30: VARIABLE
 
65 VARIABLE 
 945,30: VARIABLE
 
70 ; 
 945,30: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 949,1: typedef
 949,9: __time_t
 949,17: TYPE
 
54 NAME TYPE 
 949,9: __time_t
 949,17: TYPE
 
26 TYPE 
 949,17: TYPE
 
6 NAME VARIABLE 
 949,18: time_t
 949,24: VARIABLE
 
65 VARIABLE 
 949,24: VARIABLE
 
70 ; 
 949,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 958,1: typedef
 958,9: __timer_t
 958,18: TYPE
 
54 NAME TYPE 
 958,9: __timer_t
 958,18: TYPE
 
26 TYPE 
 958,18: TYPE
 
6 NAME VARIABLE 
 958,19: timer_t
 958,26: VARIABLE
 
65 VARIABLE 
 958,26: VARIABLE
 
70 ; 
 958,26: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 966,1: typedef
 966,9: unsigned
 966,18: long
 966,23: int
 
54 unsigned 
 966,9: unsigned
 
106 long 
 966,18: long
 
106 int 
 966,23: int
 
6 NAME VARIABLE 
 966,27: ulong
 966,32: VARIABLE
 
65 VARIABLE 
 966,32: VARIABLE
 
70 ; 
 966,32: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 967,1: typedef
 967,9: unsigned
 967,18: short
 967,24: int
 
54 unsigned 
 967,9: unsigned
 
106 short 
 967,18: short
 
106 int 
 967,24: int
 
6 NAME VARIABLE 
 967,28: ushort
 967,34: VARIABLE
 
65 VARIABLE 
 967,34: VARIABLE
 
70 ; 
 967,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 968,1: typedef
 968,9: unsigned
 968,18: int
 
54 unsigned 
 968,9: unsigned
 
106 int 
 968,18: int
 
6 NAME VARIABLE 
 968,22: uint
 968,26: VARIABLE
 
65 VARIABLE 
 968,26: VARIABLE
 
70 ; 
 968,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 975,1: typedef
 975,9: __int8_t
 975,17: TYPE
 
54 NAME TYPE 
 975,9: __int8_t
 975,17: TYPE
 
26 TYPE 
 975,17: TYPE
 
6 NAME VARIABLE 
 975,18: int8_t
 975,24: VARIABLE
 
65 VARIABLE 
 975,24: VARIABLE
 
70 ; 
 975,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 976,1: typedef
 976,9: __int16_t
 976,18: TYPE
 
54 NAME TYPE 
 976,9: __int16_t
 976,18: TYPE
 
26 TYPE 
 976,18: TYPE
 
6 NAME VARIABLE 
 976,19: int16_t
 976,26: VARIABLE
 
65 VARIABLE 
 976,26: VARIABLE
 
70 ; 
 976,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 977,1: typedef
 977,9: __int32_t
 977,18: TYPE
 
54 NAME TYPE 
 977,9: __int32_t
 977,18: TYPE
 
26 TYPE 
 977,18: TYPE
 
6 NAME VARIABLE 
 977,19: int32_t
 977,26: VARIABLE
 
65 VARIABLE 
 977,26: VARIABLE
 
70 ; 
 977,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 978,1: typedef
 978,9: __int64_t
 978,18: TYPE
 
54 NAME TYPE 
 978,9: __int64_t
 978,18: TYPE
 
26 TYPE 
 978,18: TYPE
 
6 NAME VARIABLE 
 978,19: int64_t
 978,26: VARIABLE
 
65 VARIABLE 
 978,26: VARIABLE
 
70 ; 
 978,26: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 982,1: typedef
 982,9: __uint8_t
 982,18: TYPE
 
54 NAME TYPE 
 982,9: __uint8_t
 982,18: TYPE
 
26 TYPE 
 982,18: TYPE
 
6 NAME VARIABLE 
 982,19: u_int8_t
 982,27: VARIABLE
 
65 VARIABLE 
 982,27: VARIABLE
 
70 ; 
 982,27: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 983,1: typedef
 983,9: __uint16_t
 983,19: TYPE
 
54 NAME TYPE 
 983,9: __uint16_t
 983,19: TYPE
 
26 TYPE 
 983,19: TYPE
 
6 NAME VARIABLE 
 983,20: u_int16_t
 983,29: VARIABLE
 
65 VARIABLE 
 983,29: VARIABLE
 
70 ; 
 983,29: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 984,1: typedef
 984,9: __uint32_t
 984,19: TYPE
 
54 NAME TYPE 
 984,9: __uint32_t
 984,19: TYPE
 
26 TYPE 
 984,19: TYPE
 
6 NAME VARIABLE 
 984,20: u_int32_t
 984,29: VARIABLE
 
65 VARIABLE 
 984,29: VARIABLE
 
70 ; 
 984,29: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 985,1: typedef
 985,9: __uint64_t
 985,19: TYPE
 
54 NAME TYPE 
 985,9: __uint64_t
 985,19: TYPE
 
26 TYPE 
 985,19: TYPE
 
6 NAME VARIABLE 
 985,20: u_int64_t
 985,29: VARIABLE
 
65 VARIABLE 
 985,29: VARIABLE
 
70 ; 
 985,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 988,1: typedef
 988,9: int
 
54 int 
 988,9: int
 
6 NAME VARIABLE 
 988,13: register_t
 988,23: VARIABLE
 
65 VARIABLE 
 988,23: VARIABLE
 
70 ; 
 988,24: ;
 
23 static 
 1000,1: static
 
8 NAME TYPE 
 1000,9: __uint16_t
 1000,19: TYPE
 
26 TYPE 
 1000,19: TYPE
 
5 NAME VARIABLE 
 1001,1: __bswap_16
 1001,11: VARIABLE
 
65 VARIABLE 
 1001,11: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1001,12: (
 1001,13: __uint16_t
 1001,23: TYPE
 1001,24: __bsx
 1001,29: VARIABLE
 1001,29: )
 
186 NAME TYPE 
 1001,13: __uint16_t
 1001,23: TYPE
 
65 TYPE 
 1001,23: TYPE
 
298 NAME VARIABLE 
 1001,24: __bsx
 1001,29: VARIABLE
 
65 VARIABLE 
 1001,29: VARIABLE
 
187 ) 
 1001,29: )
 
94 { option_block_item_list } 
 1002,1: {
 1004,3: return
 1004,10: __builtin_bswap16
 1004,27: VARIABLE
 1004,28: (
 1004,29: __bsx
 1004,34: VARIABLE
 1004,34: )
 1004,35: ;
 1008,1: }
 
201 return option_expression ; 
 1004,3: return
 1004,10: __builtin_bswap16
 1004,27: VARIABLE
 1004,28: (
 1004,29: __bsx
 1004,34: VARIABLE
 1004,34: )
 1004,35: ;
 
338 NAME VARIABLE 
 1004,10: __builtin_bswap16
 1004,27: VARIABLE
 
179 VARIABLE 
 1004,27: VARIABLE
 
147 ( option_argument_expression_list ) 
 1004,28: (
 1004,29: __bsx
 1004,34: VARIABLE
 1004,34: )
 
235 NAME VARIABLE 
 1004,29: __bsx
 1004,34: VARIABLE
 
179 VARIABLE 
 1004,34: VARIABLE
 
351 ) 
 1004,34: )
 
415 ; 
 1004,35: ;
 
201 } 
 1008,1: }
 
23 static 
 1015,1: static
 
8 NAME TYPE 
 1015,9: __uint32_t
 1015,19: TYPE
 
26 TYPE 
 1015,19: TYPE
 
5 NAME VARIABLE 
 1016,1: __bswap_32
 1016,11: VARIABLE
 
65 VARIABLE 
 1016,11: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1016,12: (
 1016,13: __uint32_t
 1016,23: TYPE
 1016,24: __bsx
 1016,29: VARIABLE
 1016,29: )
 
186 NAME TYPE 
 1016,13: __uint32_t
 1016,23: TYPE
 
65 TYPE 
 1016,23: TYPE
 
298 NAME VARIABLE 
 1016,24: __bsx
 1016,29: VARIABLE
 
65 VARIABLE 
 1016,29: VARIABLE
 
187 ) 
 1016,29: )
 
94 { option_block_item_list } 
 1017,1: {
 1019,3: return
 1019,10: __builtin_bswap32
 1019,27: VARIABLE
 1019,28: (
 1019,29: __bsx
 1019,34: VARIABLE
 1019,34: )
 1019,35: ;
 1023,1: }
 
201 return option_expression ; 
 1019,3: return
 1019,10: __builtin_bswap32
 1019,27: VARIABLE
 1019,28: (
 1019,29: __bsx
 1019,34: VARIABLE
 1019,34: )
 1019,35: ;
 
338 NAME VARIABLE 
 1019,10: __builtin_bswap32
 1019,27: VARIABLE
 
179 VARIABLE 
 1019,27: VARIABLE
 
147 ( option_argument_expression_list ) 
 1019,28: (
 1019,29: __bsx
 1019,34: VARIABLE
 1019,34: )
 
235 NAME VARIABLE 
 1019,29: __bsx
 1019,34: VARIABLE
 
179 VARIABLE 
 1019,34: VARIABLE
 
351 ) 
 1019,34: )
 
415 ; 
 1019,35: ;
 
201 } 
 1023,1: }
 
23 static 
 1025,2: static
 
8 NAME TYPE 
 1025,10: __uint64_t
 1025,20: TYPE
 
26 TYPE 
 1025,20: TYPE
 
5 NAME VARIABLE 
 1026,1: __bswap_64
 1026,11: VARIABLE
 
65 VARIABLE 
 1026,11: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1026,12: (
 1026,13: __uint64_t
 1026,23: TYPE
 1026,24: __bsx
 1026,29: VARIABLE
 1026,29: )
 
186 NAME TYPE 
 1026,13: __uint64_t
 1026,23: TYPE
 
65 TYPE 
 1026,23: TYPE
 
298 NAME VARIABLE 
 1026,24: __bsx
 1026,29: VARIABLE
 
65 VARIABLE 
 1026,29: VARIABLE
 
187 ) 
 1026,29: )
 
94 { option_block_item_list } 
 1027,1: {
 1029,3: return
 1029,10: __builtin_bswap64
 1029,27: VARIABLE
 1029,28: (
 1029,29: __bsx
 1029,34: VARIABLE
 1029,34: )
 1029,35: ;
 1033,1: }
 
201 return option_expression ; 
 1029,3: return
 1029,10: __builtin_bswap64
 1029,27: VARIABLE
 1029,28: (
 1029,29: __bsx
 1029,34: VARIABLE
 1029,34: )
 1029,35: ;
 
338 NAME VARIABLE 
 1029,10: __builtin_bswap64
 1029,27: VARIABLE
 
179 VARIABLE 
 1029,27: VARIABLE
 
147 ( option_argument_expression_list ) 
 1029,28: (
 1029,29: __bsx
 1029,34: VARIABLE
 1029,34: )
 
235 NAME VARIABLE 
 1029,29: __bsx
 1029,34: VARIABLE
 
179 VARIABLE 
 1029,34: VARIABLE
 
351 ) 
 1029,34: )
 
415 ; 
 1029,35: ;
 
201 } 
 1033,1: }
 
23 static 
 1037,1: static
 
8 NAME TYPE 
 1037,9: __uint16_t
 1037,19: TYPE
 
26 TYPE 
 1037,19: TYPE
 
5 NAME VARIABLE 
 1038,1: __uint16_identity
 1038,18: VARIABLE
 
65 VARIABLE 
 1038,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1038,19: (
 1038,20: __uint16_t
 1038,30: TYPE
 1038,31: __x
 1038,34: VARIABLE
 1038,34: )
 
186 NAME TYPE 
 1038,20: __uint16_t
 1038,30: TYPE
 
65 TYPE 
 1038,30: TYPE
 
298 NAME VARIABLE 
 1038,31: __x
 1038,34: VARIABLE
 
65 VARIABLE 
 1038,34: VARIABLE
 
187 ) 
 1038,34: )
 
94 { option_block_item_list } 
 1039,1: {
 1040,3: return
 1040,10: __x
 1040,13: VARIABLE
 1040,13: ;
 1041,1: }
 
201 return option_expression ; 
 1040,3: return
 1040,10: __x
 1040,13: VARIABLE
 1040,13: ;
 
338 NAME VARIABLE 
 1040,10: __x
 1040,13: VARIABLE
 
179 VARIABLE 
 1040,13: VARIABLE
 
415 ; 
 1040,13: ;
 
201 } 
 1041,1: }
 
23 static 
 1043,1: static
 
8 NAME TYPE 
 1043,9: __uint32_t
 1043,19: TYPE
 
26 TYPE 
 1043,19: TYPE
 
5 NAME VARIABLE 
 1044,1: __uint32_identity
 1044,18: VARIABLE
 
65 VARIABLE 
 1044,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1044,19: (
 1044,20: __uint32_t
 1044,30: TYPE
 1044,31: __x
 1044,34: VARIABLE
 1044,34: )
 
186 NAME TYPE 
 1044,20: __uint32_t
 1044,30: TYPE
 
65 TYPE 
 1044,30: TYPE
 
298 NAME VARIABLE 
 1044,31: __x
 1044,34: VARIABLE
 
65 VARIABLE 
 1044,34: VARIABLE
 
187 ) 
 1044,34: )
 
94 { option_block_item_list } 
 1045,1: {
 1046,3: return
 1046,10: __x
 1046,13: VARIABLE
 1046,13: ;
 1047,1: }
 
201 return option_expression ; 
 1046,3: return
 1046,10: __x
 1046,13: VARIABLE
 1046,13: ;
 
338 NAME VARIABLE 
 1046,10: __x
 1046,13: VARIABLE
 
179 VARIABLE 
 1046,13: VARIABLE
 
415 ; 
 1046,13: ;
 
201 } 
 1047,1: }
 
23 static 
 1049,1: static
 
8 NAME TYPE 
 1049,9: __uint64_t
 1049,19: TYPE
 
26 TYPE 
 1049,19: TYPE
 
5 NAME VARIABLE 
 1050,1: __uint64_identity
 1050,18: VARIABLE
 
65 VARIABLE 
 1050,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1050,19: (
 1050,20: __uint64_t
 1050,30: TYPE
 1050,31: __x
 1050,34: VARIABLE
 1050,34: )
 
186 NAME TYPE 
 1050,20: __uint64_t
 1050,30: TYPE
 
65 TYPE 
 1050,30: TYPE
 
298 NAME VARIABLE 
 1050,31: __x
 1050,34: VARIABLE
 
65 VARIABLE 
 1050,34: VARIABLE
 
187 ) 
 1050,34: )
 
94 { option_block_item_list } 
 1051,1: {
 1052,3: return
 1052,10: __x
 1052,13: VARIABLE
 1052,13: ;
 1053,1: }
 
201 return option_expression ; 
 1052,3: return
 1052,10: __x
 1052,13: VARIABLE
 1052,13: ;
 
338 NAME VARIABLE 
 1052,10: __x
 1052,13: VARIABLE
 
179 VARIABLE 
 1052,13: VARIABLE
 
415 ; 
 1052,13: ;
 
201 } 
 1053,1: }
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1073,1: typedef
 1073,9: struct
 1074,1: {
 1075,3: unsigned
 1075,12: long
 1075,17: int
 1075,21: __val
 1075,26: VARIABLE
 1075,26: [
 1075,27: (
 1075,28: 1024
 1075,33: /
 1075,35: (
 1075,36: 8
 1075,38: *
 1075,40: sizeof
 1075,47: (
 1075,48: unsigned
 1075,57: long
 1075,62: int
 1075,65: )
 1075,66: )
 1075,67: )
 1075,68: ]
 1075,69: ;
 1076,1: }
 
54 struct 
 1073,9: struct
 
89 { struct_declaration_list } 
 1074,1: {
 1075,3: unsigned
 1075,12: long
 1075,17: int
 1075,21: __val
 1075,26: VARIABLE
 1075,26: [
 1075,27: (
 1075,28: 1024
 1075,33: /
 1075,35: (
 1075,36: 8
 1075,38: *
 1075,40: sizeof
 1075,47: (
 1075,48: unsigned
 1075,57: long
 1075,62: int
 1075,65: )
 1075,66: )
 1075,67: )
 1075,68: ]
 1075,69: ;
 1076,1: }
 
126 unsigned 
 1075,3: unsigned
 
135 long 
 1075,12: long
 
135 int 
 1075,17: int
 
200 NAME VARIABLE 
 1075,21: __val
 1075,26: VARIABLE
 
65 VARIABLE 
 1075,26: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1075,26: [
 1075,27: (
 1075,28: 1024
 1075,33: /
 1075,35: (
 1075,36: 8
 1075,38: *
 1075,40: sizeof
 1075,47: (
 1075,48: unsigned
 1075,57: long
 1075,62: int
 1075,65: )
 1075,66: )
 1075,67: )
 1075,68: ]
 
188 ( expression ) 
 1075,27: (
 1075,28: 1024
 1075,33: /
 1075,35: (
 1075,36: 8
 1075,38: *
 1075,40: sizeof
 1075,47: (
 1075,48: unsigned
 1075,57: long
 1075,62: int
 1075,65: )
 1075,66: )
 1075,67: )
 
165 CONSTANT 
 1075,28: 1024
 
151 / 
 1075,33: /
 
242 ( expression ) 
 1075,35: (
 1075,36: 8
 1075,38: *
 1075,40: sizeof
 1075,47: (
 1075,48: unsigned
 1075,57: long
 1075,62: int
 1075,65: )
 1075,66: )
 
165 CONSTANT 
 1075,36: 8
 
151 * 
 1075,38: *
 
242 sizeof ( type_name ) 
 1075,40: sizeof
 1075,47: (
 1075,48: unsigned
 1075,57: long
 1075,62: int
 1075,65: )
 
170 ( type_name ) 
 1075,47: (
 1075,48: unsigned
 1075,57: long
 1075,62: int
 1075,65: )
 
276 unsigned 
 1075,48: unsigned
 
135 long 
 1075,57: long
 
135 int 
 1075,62: int
 
373 ) 
 1075,65: )
 
267 ) 
 1075,66: )
 
267 ) 
 1075,67: )
 
305 ] 
 1075,68: ]
 
313 ; 
 1075,69: ;
 
198 } 
 1076,1: }
 
6 NAME VARIABLE 
 1076,3: __sigset_t
 1076,13: VARIABLE
 
65 VARIABLE 
 1076,13: VARIABLE
 
70 ; 
 1076,13: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1080,1: typedef
 1080,9: __sigset_t
 1080,19: TYPE
 
54 NAME TYPE 
 1080,9: __sigset_t
 1080,19: TYPE
 
26 TYPE 
 1080,19: TYPE
 
6 NAME VARIABLE 
 1080,20: sigset_t
 1080,28: VARIABLE
 
65 VARIABLE 
 1080,28: VARIABLE
 
70 ; 
 1080,28: ;
 
23 struct 
 1093,1: struct
 
22 NAME VARIABLE 
 1093,8: timeval
 1093,15: VARIABLE
 
65 VARIABLE 
 1093,15: VARIABLE
 
89 { struct_declaration_list } 
 1094,1: {
 1099,3: __time_t
 1099,11: TYPE
 1099,12: tv_sec
 1099,18: VARIABLE
 1099,18: ;
 1100,3: __suseconds_t
 1100,16: TYPE
 1100,17: tv_usec
 1100,24: VARIABLE
 1100,24: ;
 1102,1: }
 
126 NAME TYPE 
 1099,3: __time_t
 1099,11: TYPE
 
26 TYPE 
 1099,11: TYPE
 
200 NAME VARIABLE 
 1099,12: tv_sec
 1099,18: VARIABLE
 
65 VARIABLE 
 1099,18: VARIABLE
 
313 ; 
 1099,18: ;
 
198 NAME TYPE 
 1100,3: __suseconds_t
 1100,16: TYPE
 
26 TYPE 
 1100,16: TYPE
 
200 NAME VARIABLE 
 1100,17: tv_usec
 1100,24: VARIABLE
 
65 VARIABLE 
 1100,24: VARIABLE
 
313 ; 
 1100,24: ;
 
198 } 
 1102,1: }
 
60 ; 
 1102,2: ;
 
23 struct 
 1107,1: struct
 
22 NAME VARIABLE 
 1107,8: timespec
 1107,16: VARIABLE
 
65 VARIABLE 
 1107,16: VARIABLE
 
89 { struct_declaration_list } 
 1108,1: {
 1112,3: __time_t
 1112,11: TYPE
 1112,12: tv_sec
 1112,18: VARIABLE
 1112,18: ;
 1117,3: __syscall_slong_t
 1117,20: TYPE
 1117,21: tv_nsec
 1117,28: VARIABLE
 1117,28: ;
 1119,1: }
 
126 NAME TYPE 
 1112,3: __time_t
 1112,11: TYPE
 
26 TYPE 
 1112,11: TYPE
 
200 NAME VARIABLE 
 1112,12: tv_sec
 1112,18: VARIABLE
 
65 VARIABLE 
 1112,18: VARIABLE
 
313 ; 
 1112,18: ;
 
198 NAME TYPE 
 1117,3: __syscall_slong_t
 1117,20: TYPE
 
26 TYPE 
 1117,20: TYPE
 
200 NAME VARIABLE 
 1117,21: tv_nsec
 1117,28: VARIABLE
 
65 VARIABLE 
 1117,28: VARIABLE
 
313 ; 
 1117,28: ;
 
198 } 
 1119,1: }
 
60 ; 
 1119,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1124,1: typedef
 1124,9: __suseconds_t
 1124,22: TYPE
 
54 NAME TYPE 
 1124,9: __suseconds_t
 1124,22: TYPE
 
26 TYPE 
 1124,22: TYPE
 
6 NAME VARIABLE 
 1124,23: suseconds_t
 1124,34: VARIABLE
 
65 VARIABLE 
 1124,34: VARIABLE
 
70 ; 
 1124,34: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1130,1: typedef
 1130,9: long
 1130,14: int
 
54 long 
 1130,9: long
 
106 int 
 1130,14: int
 
6 NAME VARIABLE 
 1130,18: __fd_mask
 1130,27: VARIABLE
 
65 VARIABLE 
 1130,27: VARIABLE
 
70 ; 
 1130,27: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1132,1: typedef
 1132,9: struct
 1133,3: {
 1140,5: __fd_mask
 1140,14: TYPE
 1140,15: __fds_bits
 1140,25: VARIABLE
 1140,25: [
 1140,26: 1024
 1140,31: /
 1140,33: (
 1140,34: 8
 1140,36: *
 1140,38: (
 1140,39: int
 1140,42: )
 1140,44: sizeof
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 1140,62: )
 1140,63: ]
 1140,64: ;
 1143,3: }
 
54 struct 
 1132,9: struct
 
89 { struct_declaration_list } 
 1133,3: {
 1140,5: __fd_mask
 1140,14: TYPE
 1140,15: __fds_bits
 1140,25: VARIABLE
 1140,25: [
 1140,26: 1024
 1140,31: /
 1140,33: (
 1140,34: 8
 1140,36: *
 1140,38: (
 1140,39: int
 1140,42: )
 1140,44: sizeof
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 1140,62: )
 1140,63: ]
 1140,64: ;
 1143,3: }
 
126 NAME TYPE 
 1140,5: __fd_mask
 1140,14: TYPE
 
26 TYPE 
 1140,14: TYPE
 
200 NAME VARIABLE 
 1140,15: __fds_bits
 1140,25: VARIABLE
 
65 VARIABLE 
 1140,25: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1140,25: [
 1140,26: 1024
 1140,31: /
 1140,33: (
 1140,34: 8
 1140,36: *
 1140,38: (
 1140,39: int
 1140,42: )
 1140,44: sizeof
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 1140,62: )
 1140,63: ]
 
188 CONSTANT 
 1140,26: 1024
 
151 / 
 1140,31: /
 
242 ( expression ) 
 1140,33: (
 1140,34: 8
 1140,36: *
 1140,38: (
 1140,39: int
 1140,42: )
 1140,44: sizeof
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 1140,62: )
 
165 CONSTANT 
 1140,34: 8
 
151 * 
 1140,36: *
 
242 ( type_name ) cast_expression 
 1140,38: (
 1140,39: int
 1140,42: )
 1140,44: sizeof
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 
165 int 
 1140,39: int
 
269 ) cast_expression 
 1140,42: )
 1140,44: sizeof
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 
369 sizeof ( type_name ) 
 1140,44: sizeof
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 
170 ( type_name ) 
 1140,51: (
 1140,52: __fd_mask
 1140,61: TYPE
 1140,61: )
 
276 NAME TYPE 
 1140,52: __fd_mask
 1140,61: TYPE
 
65 TYPE 
 1140,61: TYPE
 
373 ) 
 1140,61: )
 
267 ) 
 1140,62: )
 
305 ] 
 1140,63: ]
 
313 ; 
 1140,64: ;
 
198 } 
 1143,3: }
 
6 NAME VARIABLE 
 1143,5: fd_set
 1143,11: VARIABLE
 
65 VARIABLE 
 1143,11: VARIABLE
 
70 ; 
 1143,11: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1150,1: typedef
 1150,9: __fd_mask
 1150,18: TYPE
 
54 NAME TYPE 
 1150,9: __fd_mask
 1150,18: TYPE
 
26 TYPE 
 1150,18: TYPE
 
6 NAME VARIABLE 
 1150,19: fd_mask
 1150,26: VARIABLE
 
65 VARIABLE 
 1150,26: VARIABLE
 
70 ; 
 1150,26: ;
 
23 extern 
 1154,1: extern
 
8 int 
 1154,8: int
 
5 NAME VARIABLE 
 1154,12: select
 1154,18: VARIABLE
 
65 VARIABLE 
 1154,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1154,19: (
 1154,20: int
 1154,24: __nfds
 1154,30: VARIABLE
 1154,30: ,
 1154,32: fd_set
 1154,38: TYPE
 1154,39: *
 1154,41: __readfds
 1154,50: VARIABLE
 1154,50: ,
 1155,6: fd_set
 1155,12: TYPE
 1155,13: *
 1155,15: __writefds
 1155,25: VARIABLE
 1155,25: ,
 1156,6: fd_set
 1156,12: TYPE
 1156,13: *
 1156,15: __exceptfds
 1156,26: VARIABLE
 1156,26: ,
 1157,6: struct
 1157,13: timeval
 1157,20: VARIABLE
 1157,21: *
 1157,23: __timeout
 1157,32: VARIABLE
 1157,32: )
 
186 int 
 1154,20: int
 
298 NAME VARIABLE 
 1154,24: __nfds
 1154,30: VARIABLE
 
65 VARIABLE 
 1154,30: VARIABLE
 
300 , parameter_declaration 
 1154,30: ,
 1154,32: fd_set
 1154,38: TYPE
 1154,39: *
 1154,41: __readfds
 1154,50: VARIABLE
 
391 NAME TYPE 
 1154,32: fd_set
 1154,38: TYPE
 
26 TYPE 
 1154,38: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1154,39: *
 
386 NAME VARIABLE 
 1154,41: __readfds
 1154,50: VARIABLE
 
65 VARIABLE 
 1154,50: VARIABLE
 
300 , parameter_declaration 
 1154,50: ,
 1155,6: fd_set
 1155,12: TYPE
 1155,13: *
 1155,15: __writefds
 1155,25: VARIABLE
 
391 NAME TYPE 
 1155,6: fd_set
 1155,12: TYPE
 
26 TYPE 
 1155,12: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1155,13: *
 
386 NAME VARIABLE 
 1155,15: __writefds
 1155,25: VARIABLE
 
65 VARIABLE 
 1155,25: VARIABLE
 
300 , parameter_declaration 
 1155,25: ,
 1156,6: fd_set
 1156,12: TYPE
 1156,13: *
 1156,15: __exceptfds
 1156,26: VARIABLE
 
391 NAME TYPE 
 1156,6: fd_set
 1156,12: TYPE
 
26 TYPE 
 1156,12: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1156,13: *
 
386 NAME VARIABLE 
 1156,15: __exceptfds
 1156,26: VARIABLE
 
65 VARIABLE 
 1156,26: VARIABLE
 
300 , parameter_declaration 
 1156,26: ,
 1157,6: struct
 1157,13: timeval
 1157,20: VARIABLE
 1157,21: *
 1157,23: __timeout
 1157,32: VARIABLE
 
391 struct 
 1157,6: struct
 
22 NAME VARIABLE 
 1157,13: timeval
 1157,20: VARIABLE
 
65 VARIABLE 
 1157,20: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1157,21: *
 
386 NAME VARIABLE 
 1157,23: __timeout
 1157,32: VARIABLE
 
65 VARIABLE 
 1157,32: VARIABLE
 
187 ) 
 1157,32: )
 
60 ; 
 1157,33: ;
 
23 extern 
 1159,1: extern
 
8 int 
 1159,8: int
 
5 NAME VARIABLE 
 1159,12: pselect
 1159,19: VARIABLE
 
65 VARIABLE 
 1159,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1159,20: (
 1159,21: int
 1159,25: __nfds
 1159,31: VARIABLE
 1159,31: ,
 1159,33: fd_set
 1159,39: TYPE
 1159,40: *
 1159,42: __readfds
 1159,51: VARIABLE
 1159,51: ,
 1160,7: fd_set
 1160,13: TYPE
 1160,14: *
 1160,16: __writefds
 1160,26: VARIABLE
 1160,26: ,
 1161,7: fd_set
 1161,13: TYPE
 1161,14: *
 1161,16: __exceptfds
 1161,27: VARIABLE
 1161,27: ,
 1162,7: const
 1162,13: struct
 1162,20: timespec
 1162,28: VARIABLE
 1162,29: *
 1162,31: __timeout
 1162,40: VARIABLE
 1162,40: ,
 1163,7: const
 1163,13: __sigset_t
 1163,23: TYPE
 1163,24: *
 1163,26: __sigmask
 1163,35: VARIABLE
 1163,35: )
 
186 int 
 1159,21: int
 
298 NAME VARIABLE 
 1159,25: __nfds
 1159,31: VARIABLE
 
65 VARIABLE 
 1159,31: VARIABLE
 
300 , parameter_declaration 
 1159,31: ,
 1159,33: fd_set
 1159,39: TYPE
 1159,40: *
 1159,42: __readfds
 1159,51: VARIABLE
 
391 NAME TYPE 
 1159,33: fd_set
 1159,39: TYPE
 
26 TYPE 
 1159,39: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1159,40: *
 
386 NAME VARIABLE 
 1159,42: __readfds
 1159,51: VARIABLE
 
65 VARIABLE 
 1159,51: VARIABLE
 
300 , parameter_declaration 
 1159,51: ,
 1160,7: fd_set
 1160,13: TYPE
 1160,14: *
 1160,16: __writefds
 1160,26: VARIABLE
 
391 NAME TYPE 
 1160,7: fd_set
 1160,13: TYPE
 
26 TYPE 
 1160,13: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1160,14: *
 
386 NAME VARIABLE 
 1160,16: __writefds
 1160,26: VARIABLE
 
65 VARIABLE 
 1160,26: VARIABLE
 
300 , parameter_declaration 
 1160,26: ,
 1161,7: fd_set
 1161,13: TYPE
 1161,14: *
 1161,16: __exceptfds
 1161,27: VARIABLE
 
391 NAME TYPE 
 1161,7: fd_set
 1161,13: TYPE
 
26 TYPE 
 1161,13: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1161,14: *
 
386 NAME VARIABLE 
 1161,16: __exceptfds
 1161,27: VARIABLE
 
65 VARIABLE 
 1161,27: VARIABLE
 
300 , parameter_declaration 
 1161,27: ,
 1162,7: const
 1162,13: struct
 1162,20: timespec
 1162,28: VARIABLE
 1162,29: *
 1162,31: __timeout
 1162,40: VARIABLE
 
391 const 
 1162,7: const
 
103 struct 
 1162,13: struct
 
22 NAME VARIABLE 
 1162,20: timespec
 1162,28: VARIABLE
 
65 VARIABLE 
 1162,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1162,29: *
 
386 NAME VARIABLE 
 1162,31: __timeout
 1162,40: VARIABLE
 
65 VARIABLE 
 1162,40: VARIABLE
 
300 , parameter_declaration 
 1162,40: ,
 1163,7: const
 1163,13: __sigset_t
 1163,23: TYPE
 1163,24: *
 1163,26: __sigmask
 1163,35: VARIABLE
 
391 const 
 1163,7: const
 
103 NAME TYPE 
 1163,13: __sigset_t
 1163,23: TYPE
 
26 TYPE 
 1163,23: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1163,24: *
 
386 NAME VARIABLE 
 1163,26: __sigmask
 1163,35: VARIABLE
 
65 VARIABLE 
 1163,35: VARIABLE
 
187 ) 
 1163,35: )
 
60 ; 
 1163,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1172,1: typedef
 1172,9: __blksize_t
 1172,20: TYPE
 
54 NAME TYPE 
 1172,9: __blksize_t
 1172,20: TYPE
 
26 TYPE 
 1172,20: TYPE
 
6 NAME VARIABLE 
 1172,21: blksize_t
 1172,30: VARIABLE
 
65 VARIABLE 
 1172,30: VARIABLE
 
70 ; 
 1172,30: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1179,1: typedef
 1179,9: __blkcnt_t
 1179,19: TYPE
 
54 NAME TYPE 
 1179,9: __blkcnt_t
 1179,19: TYPE
 
26 TYPE 
 1179,19: TYPE
 
6 NAME VARIABLE 
 1179,20: blkcnt_t
 1179,28: VARIABLE
 
65 VARIABLE 
 1179,28: VARIABLE
 
70 ; 
 1179,28: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1183,1: typedef
 1183,9: __fsblkcnt_t
 1183,21: TYPE
 
54 NAME TYPE 
 1183,9: __fsblkcnt_t
 1183,21: TYPE
 
26 TYPE 
 1183,21: TYPE
 
6 NAME VARIABLE 
 1183,22: fsblkcnt_t
 1183,32: VARIABLE
 
65 VARIABLE 
 1183,32: VARIABLE
 
70 ; 
 1183,32: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1187,1: typedef
 1187,9: __fsfilcnt_t
 1187,21: TYPE
 
54 NAME TYPE 
 1187,9: __fsfilcnt_t
 1187,21: TYPE
 
26 TYPE 
 1187,21: TYPE
 
6 NAME VARIABLE 
 1187,22: fsfilcnt_t
 1187,32: VARIABLE
 
65 VARIABLE 
 1187,32: VARIABLE
 
70 ; 
 1187,32: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1201,1: typedef
 1201,9: union
 1202,1: {
 1203,4: unsigned
 1203,13: long
 1203,18: long
 1203,23: int
 1203,27: __value64
 1203,36: VARIABLE
 1203,36: ;
 1204,3: struct
 1205,3: {
 1206,5: unsigned
 1206,14: int
 1206,18: __low
 1206,23: VARIABLE
 1206,23: ;
 1207,5: unsigned
 1207,14: int
 1207,18: __high
 1207,24: VARIABLE
 1207,24: ;
 1208,3: }
 1208,5: __value32
 1208,14: VARIABLE
 1208,14: ;
 1209,1: }
 
54 union 
 1201,9: union
 
89 { struct_declaration_list } 
 1202,1: {
 1203,4: unsigned
 1203,13: long
 1203,18: long
 1203,23: int
 1203,27: __value64
 1203,36: VARIABLE
 1203,36: ;
 1204,3: struct
 1205,3: {
 1206,5: unsigned
 1206,14: int
 1206,18: __low
 1206,23: VARIABLE
 1206,23: ;
 1207,5: unsigned
 1207,14: int
 1207,18: __high
 1207,24: VARIABLE
 1207,24: ;
 1208,3: }
 1208,5: __value32
 1208,14: VARIABLE
 1208,14: ;
 1209,1: }
 
126 unsigned 
 1203,4: unsigned
 
135 long 
 1203,13: long
 
135 long 
 1203,18: long
 
135 int 
 1203,23: int
 
200 NAME VARIABLE 
 1203,27: __value64
 1203,36: VARIABLE
 
65 VARIABLE 
 1203,36: VARIABLE
 
313 ; 
 1203,36: ;
 
198 struct 
 1204,3: struct
 
89 { struct_declaration_list } 
 1205,3: {
 1206,5: unsigned
 1206,14: int
 1206,18: __low
 1206,23: VARIABLE
 1206,23: ;
 1207,5: unsigned
 1207,14: int
 1207,18: __high
 1207,24: VARIABLE
 1207,24: ;
 1208,3: }
 
126 unsigned 
 1206,5: unsigned
 
135 int 
 1206,14: int
 
200 NAME VARIABLE 
 1206,18: __low
 1206,23: VARIABLE
 
65 VARIABLE 
 1206,23: VARIABLE
 
313 ; 
 1206,23: ;
 
198 unsigned 
 1207,5: unsigned
 
135 int 
 1207,14: int
 
200 NAME VARIABLE 
 1207,18: __high
 1207,24: VARIABLE
 
65 VARIABLE 
 1207,24: VARIABLE
 
313 ; 
 1207,24: ;
 
198 } 
 1208,3: }
 
200 NAME VARIABLE 
 1208,5: __value32
 1208,14: VARIABLE
 
65 VARIABLE 
 1208,14: VARIABLE
 
313 ; 
 1208,14: ;
 
198 } 
 1209,1: }
 
6 NAME VARIABLE 
 1209,3: __atomic_wide_counter
 1209,24: VARIABLE
 
65 VARIABLE 
 1209,24: VARIABLE
 
70 ; 
 1209,24: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1215,1: typedef
 1215,9: struct
 1215,16: __pthread_internal_list
 1215,39: VARIABLE
 1216,1: {
 1217,3: struct
 1217,10: __pthread_internal_list
 1217,33: VARIABLE
 1217,34: *
 1217,35: __prev
 1217,41: VARIABLE
 1217,41: ;
 1218,3: struct
 1218,10: __pthread_internal_list
 1218,33: VARIABLE
 1218,34: *
 1218,35: __next
 1218,41: VARIABLE
 1218,41: ;
 1219,1: }
 
54 struct 
 1215,9: struct
 
22 NAME VARIABLE 
 1215,16: __pthread_internal_list
 1215,39: VARIABLE
 
65 VARIABLE 
 1215,39: VARIABLE
 
89 { struct_declaration_list } 
 1216,1: {
 1217,3: struct
 1217,10: __pthread_internal_list
 1217,33: VARIABLE
 1217,34: *
 1217,35: __prev
 1217,41: VARIABLE
 1217,41: ;
 1218,3: struct
 1218,10: __pthread_internal_list
 1218,33: VARIABLE
 1218,34: *
 1218,35: __next
 1218,41: VARIABLE
 1218,41: ;
 1219,1: }
 
126 struct 
 1217,3: struct
 
22 NAME VARIABLE 
 1217,10: __pthread_internal_list
 1217,33: VARIABLE
 
65 VARIABLE 
 1217,33: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 1217,34: *
 
64 NAME VARIABLE 
 1217,35: __prev
 1217,41: VARIABLE
 
65 VARIABLE 
 1217,41: VARIABLE
 
313 ; 
 1217,41: ;
 
198 struct 
 1218,3: struct
 
22 NAME VARIABLE 
 1218,10: __pthread_internal_list
 1218,33: VARIABLE
 
65 VARIABLE 
 1218,33: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 1218,34: *
 
64 NAME VARIABLE 
 1218,35: __next
 1218,41: VARIABLE
 
65 VARIABLE 
 1218,41: VARIABLE
 
313 ; 
 1218,41: ;
 
198 } 
 1219,1: }
 
6 NAME VARIABLE 
 1219,3: __pthread_list_t
 1219,19: VARIABLE
 
65 VARIABLE 
 1219,19: VARIABLE
 
70 ; 
 1219,19: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1221,1: typedef
 1221,9: struct
 1221,16: __pthread_internal_slist
 1221,40: VARIABLE
 1222,1: {
 1223,3: struct
 1223,10: __pthread_internal_slist
 1223,34: VARIABLE
 1223,35: *
 1223,36: __next
 1223,42: VARIABLE
 1223,42: ;
 1224,1: }
 
54 struct 
 1221,9: struct
 
22 NAME VARIABLE 
 1221,16: __pthread_internal_slist
 1221,40: VARIABLE
 
65 VARIABLE 
 1221,40: VARIABLE
 
89 { struct_declaration_list } 
 1222,1: {
 1223,3: struct
 1223,10: __pthread_internal_slist
 1223,34: VARIABLE
 1223,35: *
 1223,36: __next
 1223,42: VARIABLE
 1223,42: ;
 1224,1: }
 
126 struct 
 1223,3: struct
 
22 NAME VARIABLE 
 1223,10: __pthread_internal_slist
 1223,34: VARIABLE
 
65 VARIABLE 
 1223,34: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 1223,35: *
 
64 NAME VARIABLE 
 1223,36: __next
 1223,42: VARIABLE
 
65 VARIABLE 
 1223,42: VARIABLE
 
313 ; 
 1223,42: ;
 
198 } 
 1224,1: }
 
6 NAME VARIABLE 
 1224,3: __pthread_slist_t
 1224,20: VARIABLE
 
65 VARIABLE 
 1224,20: VARIABLE
 
70 ; 
 1224,20: ;
 
23 struct 
 1228,1: struct
 
22 NAME VARIABLE 
 1228,8: __pthread_mutex_s
 1228,25: VARIABLE
 
65 VARIABLE 
 1228,25: VARIABLE
 
89 { struct_declaration_list } 
 1229,1: {
 1230,3: int
 1230,7: __lock
 1230,13: VARIABLE
 1230,13: ;
 1231,3: unsigned
 1231,12: int
 1231,16: __count
 1231,23: VARIABLE
 1231,23: ;
 1232,3: int
 1232,7: __owner
 1232,14: VARIABLE
 1232,14: ;
 1234,3: unsigned
 1234,12: int
 1234,16: __nusers
 1234,24: VARIABLE
 1234,24: ;
 1238,3: int
 1238,7: __kind
 1238,13: VARIABLE
 1238,13: ;
 1240,3: short
 1240,9: __spins
 1240,16: VARIABLE
 1240,16: ;
 1241,3: short
 1241,9: __elision
 1241,18: VARIABLE
 1241,18: ;
 1242,3: __pthread_list_t
 1242,19: TYPE
 1242,20: __list
 1242,26: VARIABLE
 1242,26: ;
 1244,1: }
 
126 int 
 1230,3: int
 
200 NAME VARIABLE 
 1230,7: __lock
 1230,13: VARIABLE
 
65 VARIABLE 
 1230,13: VARIABLE
 
313 ; 
 1230,13: ;
 
198 unsigned 
 1231,3: unsigned
 
135 int 
 1231,12: int
 
200 NAME VARIABLE 
 1231,16: __count
 1231,23: VARIABLE
 
65 VARIABLE 
 1231,23: VARIABLE
 
313 ; 
 1231,23: ;
 
198 int 
 1232,3: int
 
200 NAME VARIABLE 
 1232,7: __owner
 1232,14: VARIABLE
 
65 VARIABLE 
 1232,14: VARIABLE
 
313 ; 
 1232,14: ;
 
198 unsigned 
 1234,3: unsigned
 
135 int 
 1234,12: int
 
200 NAME VARIABLE 
 1234,16: __nusers
 1234,24: VARIABLE
 
65 VARIABLE 
 1234,24: VARIABLE
 
313 ; 
 1234,24: ;
 
198 int 
 1238,3: int
 
200 NAME VARIABLE 
 1238,7: __kind
 1238,13: VARIABLE
 
65 VARIABLE 
 1238,13: VARIABLE
 
313 ; 
 1238,13: ;
 
198 short 
 1240,3: short
 
200 NAME VARIABLE 
 1240,9: __spins
 1240,16: VARIABLE
 
65 VARIABLE 
 1240,16: VARIABLE
 
313 ; 
 1240,16: ;
 
198 short 
 1241,3: short
 
200 NAME VARIABLE 
 1241,9: __elision
 1241,18: VARIABLE
 
65 VARIABLE 
 1241,18: VARIABLE
 
313 ; 
 1241,18: ;
 
198 NAME TYPE 
 1242,3: __pthread_list_t
 1242,19: TYPE
 
26 TYPE 
 1242,19: TYPE
 
200 NAME VARIABLE 
 1242,20: __list
 1242,26: VARIABLE
 
65 VARIABLE 
 1242,26: VARIABLE
 
313 ; 
 1242,26: ;
 
198 } 
 1244,1: }
 
60 ; 
 1244,2: ;
 
23 struct 
 1249,1: struct
 
22 NAME VARIABLE 
 1249,8: __pthread_rwlock_arch_t
 1249,31: VARIABLE
 
65 VARIABLE 
 1249,31: VARIABLE
 
89 { struct_declaration_list } 
 1250,1: {
 1251,3: unsigned
 1251,12: int
 1251,16: __readers
 1251,25: VARIABLE
 1251,25: ;
 1252,3: unsigned
 1252,12: int
 1252,16: __writers
 1252,25: VARIABLE
 1252,25: ;
 1253,3: unsigned
 1253,12: int
 1253,16: __wrphase_futex
 1253,31: VARIABLE
 1253,31: ;
 1254,3: unsigned
 1254,12: int
 1254,16: __writers_futex
 1254,31: VARIABLE
 1254,31: ;
 1255,3: unsigned
 1255,12: int
 1255,16: __pad3
 1255,22: VARIABLE
 1255,22: ;
 1256,3: unsigned
 1256,12: int
 1256,16: __pad4
 1256,22: VARIABLE
 1256,22: ;
 1258,3: int
 1258,7: __cur_writer
 1258,19: VARIABLE
 1258,19: ;
 1259,3: int
 1259,7: __shared
 1259,15: VARIABLE
 1259,15: ;
 1260,3: signed
 1260,10: char
 1260,15: __rwelision
 1260,26: VARIABLE
 1260,26: ;
 1265,3: unsigned
 1265,12: char
 1265,17: __pad1
 1265,23: VARIABLE
 1265,23: [
 1265,24: 7
 1265,25: ]
 1265,26: ;
 1268,3: unsigned
 1268,12: long
 1268,17: int
 1268,21: __pad2
 1268,27: VARIABLE
 1268,27: ;
 1271,3: unsigned
 1271,12: int
 1271,16: __flags
 1271,23: VARIABLE
 1271,23: ;
 1273,1: }
 
126 unsigned 
 1251,3: unsigned
 
135 int 
 1251,12: int
 
200 NAME VARIABLE 
 1251,16: __readers
 1251,25: VARIABLE
 
65 VARIABLE 
 1251,25: VARIABLE
 
313 ; 
 1251,25: ;
 
198 unsigned 
 1252,3: unsigned
 
135 int 
 1252,12: int
 
200 NAME VARIABLE 
 1252,16: __writers
 1252,25: VARIABLE
 
65 VARIABLE 
 1252,25: VARIABLE
 
313 ; 
 1252,25: ;
 
198 unsigned 
 1253,3: unsigned
 
135 int 
 1253,12: int
 
200 NAME VARIABLE 
 1253,16: __wrphase_futex
 1253,31: VARIABLE
 
65 VARIABLE 
 1253,31: VARIABLE
 
313 ; 
 1253,31: ;
 
198 unsigned 
 1254,3: unsigned
 
135 int 
 1254,12: int
 
200 NAME VARIABLE 
 1254,16: __writers_futex
 1254,31: VARIABLE
 
65 VARIABLE 
 1254,31: VARIABLE
 
313 ; 
 1254,31: ;
 
198 unsigned 
 1255,3: unsigned
 
135 int 
 1255,12: int
 
200 NAME VARIABLE 
 1255,16: __pad3
 1255,22: VARIABLE
 
65 VARIABLE 
 1255,22: VARIABLE
 
313 ; 
 1255,22: ;
 
198 unsigned 
 1256,3: unsigned
 
135 int 
 1256,12: int
 
200 NAME VARIABLE 
 1256,16: __pad4
 1256,22: VARIABLE
 
65 VARIABLE 
 1256,22: VARIABLE
 
313 ; 
 1256,22: ;
 
198 int 
 1258,3: int
 
200 NAME VARIABLE 
 1258,7: __cur_writer
 1258,19: VARIABLE
 
65 VARIABLE 
 1258,19: VARIABLE
 
313 ; 
 1258,19: ;
 
198 int 
 1259,3: int
 
200 NAME VARIABLE 
 1259,7: __shared
 1259,15: VARIABLE
 
65 VARIABLE 
 1259,15: VARIABLE
 
313 ; 
 1259,15: ;
 
198 signed 
 1260,3: signed
 
135 char 
 1260,10: char
 
200 NAME VARIABLE 
 1260,15: __rwelision
 1260,26: VARIABLE
 
65 VARIABLE 
 1260,26: VARIABLE
 
313 ; 
 1260,26: ;
 
198 unsigned 
 1265,3: unsigned
 
135 char 
 1265,12: char
 
200 NAME VARIABLE 
 1265,17: __pad1
 1265,23: VARIABLE
 
65 VARIABLE 
 1265,23: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1265,23: [
 1265,24: 7
 1265,25: ]
 
188 CONSTANT 
 1265,24: 7
 
305 ] 
 1265,25: ]
 
313 ; 
 1265,26: ;
 
198 unsigned 
 1268,3: unsigned
 
135 long 
 1268,12: long
 
135 int 
 1268,17: int
 
200 NAME VARIABLE 
 1268,21: __pad2
 1268,27: VARIABLE
 
65 VARIABLE 
 1268,27: VARIABLE
 
313 ; 
 1268,27: ;
 
198 unsigned 
 1271,3: unsigned
 
135 int 
 1271,12: int
 
200 NAME VARIABLE 
 1271,16: __flags
 1271,23: VARIABLE
 
65 VARIABLE 
 1271,23: VARIABLE
 
313 ; 
 1271,23: ;
 
198 } 
 1273,1: }
 
60 ; 
 1273,2: ;
 
23 struct 
 1279,1: struct
 
22 NAME VARIABLE 
 1279,8: __pthread_cond_s
 1279,24: VARIABLE
 
65 VARIABLE 
 1279,24: VARIABLE
 
89 { struct_declaration_list } 
 1280,1: {
 1281,3: __atomic_wide_counter
 1281,24: TYPE
 1281,25: __wseq
 1281,31: VARIABLE
 1281,31: ;
 1282,3: __atomic_wide_counter
 1282,24: TYPE
 1282,25: __g1_start
 1282,35: VARIABLE
 1282,35: ;
 1283,3: unsigned
 1283,12: int
 1283,16: __g_refs
 1283,24: VARIABLE
 1283,24: [
 1283,25: 2
 1283,26: ]
 1283,28: ;
 1284,3: unsigned
 1284,12: int
 1284,16: __g_size
 1284,24: VARIABLE
 1284,24: [
 1284,25: 2
 1284,26: ]
 1284,27: ;
 1285,3: unsigned
 1285,12: int
 1285,16: __g1_orig_size
 1285,30: VARIABLE
 1285,30: ;
 1286,3: unsigned
 1286,12: int
 1286,16: __wrefs
 1286,23: VARIABLE
 1286,23: ;
 1287,3: unsigned
 1287,12: int
 1287,16: __g_signals
 1287,27: VARIABLE
 1287,27: [
 1287,28: 2
 1287,29: ]
 1287,30: ;
 1288,1: }
 
126 NAME TYPE 
 1281,3: __atomic_wide_counter
 1281,24: TYPE
 
26 TYPE 
 1281,24: TYPE
 
200 NAME VARIABLE 
 1281,25: __wseq
 1281,31: VARIABLE
 
65 VARIABLE 
 1281,31: VARIABLE
 
313 ; 
 1281,31: ;
 
198 NAME TYPE 
 1282,3: __atomic_wide_counter
 1282,24: TYPE
 
26 TYPE 
 1282,24: TYPE
 
200 NAME VARIABLE 
 1282,25: __g1_start
 1282,35: VARIABLE
 
65 VARIABLE 
 1282,35: VARIABLE
 
313 ; 
 1282,35: ;
 
198 unsigned 
 1283,3: unsigned
 
135 int 
 1283,12: int
 
200 NAME VARIABLE 
 1283,16: __g_refs
 1283,24: VARIABLE
 
65 VARIABLE 
 1283,24: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1283,24: [
 1283,25: 2
 1283,26: ]
 
188 CONSTANT 
 1283,25: 2
 
305 ] 
 1283,26: ]
 
313 ; 
 1283,28: ;
 
198 unsigned 
 1284,3: unsigned
 
135 int 
 1284,12: int
 
200 NAME VARIABLE 
 1284,16: __g_size
 1284,24: VARIABLE
 
65 VARIABLE 
 1284,24: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1284,24: [
 1284,25: 2
 1284,26: ]
 
188 CONSTANT 
 1284,25: 2
 
305 ] 
 1284,26: ]
 
313 ; 
 1284,27: ;
 
198 unsigned 
 1285,3: unsigned
 
135 int 
 1285,12: int
 
200 NAME VARIABLE 
 1285,16: __g1_orig_size
 1285,30: VARIABLE
 
65 VARIABLE 
 1285,30: VARIABLE
 
313 ; 
 1285,30: ;
 
198 unsigned 
 1286,3: unsigned
 
135 int 
 1286,12: int
 
200 NAME VARIABLE 
 1286,16: __wrefs
 1286,23: VARIABLE
 
65 VARIABLE 
 1286,23: VARIABLE
 
313 ; 
 1286,23: ;
 
198 unsigned 
 1287,3: unsigned
 
135 int 
 1287,12: int
 
200 NAME VARIABLE 
 1287,16: __g_signals
 1287,27: VARIABLE
 
65 VARIABLE 
 1287,27: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1287,27: [
 1287,28: 2
 1287,29: ]
 
188 CONSTANT 
 1287,28: 2
 
305 ] 
 1287,29: ]
 
313 ; 
 1287,30: ;
 
198 } 
 1288,1: }
 
60 ; 
 1288,2: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1290,1: typedef
 1290,9: unsigned
 1290,18: int
 
54 unsigned 
 1290,9: unsigned
 
106 int 
 1290,18: int
 
6 NAME VARIABLE 
 1290,22: __tss_t
 1290,29: VARIABLE
 
65 VARIABLE 
 1290,29: VARIABLE
 
70 ; 
 1290,29: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1291,1: typedef
 1291,9: unsigned
 1291,18: long
 1291,23: int
 
54 unsigned 
 1291,9: unsigned
 
106 long 
 1291,18: long
 
106 int 
 1291,23: int
 
6 NAME VARIABLE 
 1291,27: __thrd_t
 1291,35: VARIABLE
 
65 VARIABLE 
 1291,35: VARIABLE
 
70 ; 
 1291,35: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1293,1: typedef
 1293,9: struct
 1294,1: {
 1295,3: int
 1295,7: __data
 1295,13: VARIABLE
 1295,14: ;
 1296,1: }
 
54 struct 
 1293,9: struct
 
89 { struct_declaration_list } 
 1294,1: {
 1295,3: int
 1295,7: __data
 1295,13: VARIABLE
 1295,14: ;
 1296,1: }
 
126 int 
 1295,3: int
 
200 NAME VARIABLE 
 1295,7: __data
 1295,13: VARIABLE
 
65 VARIABLE 
 1295,13: VARIABLE
 
313 ; 
 1295,14: ;
 
198 } 
 1296,1: }
 
6 NAME VARIABLE 
 1296,3: __once_flag
 1296,14: VARIABLE
 
65 VARIABLE 
 1296,14: VARIABLE
 
70 ; 
 1296,14: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1301,1: typedef
 1301,9: unsigned
 1301,18: long
 1301,23: int
 
54 unsigned 
 1301,9: unsigned
 
106 long 
 1301,18: long
 
106 int 
 1301,23: int
 
6 NAME VARIABLE 
 1301,27: pthread_t
 1301,36: VARIABLE
 
65 VARIABLE 
 1301,36: VARIABLE
 
70 ; 
 1301,36: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1306,1: typedef
 1306,9: union
 1307,1: {
 1308,3: char
 1308,8: __size
 1308,14: VARIABLE
 1308,14: [
 1308,15: 4
 1308,16: ]
 1308,17: ;
 1309,3: int
 1309,7: __align
 1309,14: VARIABLE
 1309,14: ;
 1310,1: }
 
54 union 
 1306,9: union
 
89 { struct_declaration_list } 
 1307,1: {
 1308,3: char
 1308,8: __size
 1308,14: VARIABLE
 1308,14: [
 1308,15: 4
 1308,16: ]
 1308,17: ;
 1309,3: int
 1309,7: __align
 1309,14: VARIABLE
 1309,14: ;
 1310,1: }
 
126 char 
 1308,3: char
 
200 NAME VARIABLE 
 1308,8: __size
 1308,14: VARIABLE
 
65 VARIABLE 
 1308,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1308,14: [
 1308,15: 4
 1308,16: ]
 
188 CONSTANT 
 1308,15: 4
 
305 ] 
 1308,16: ]
 
313 ; 
 1308,17: ;
 
198 int 
 1309,3: int
 
200 NAME VARIABLE 
 1309,7: __align
 1309,14: VARIABLE
 
65 VARIABLE 
 1309,14: VARIABLE
 
313 ; 
 1309,14: ;
 
198 } 
 1310,1: }
 
6 NAME VARIABLE 
 1310,3: pthread_mutexattr_t
 1310,22: VARIABLE
 
65 VARIABLE 
 1310,22: VARIABLE
 
70 ; 
 1310,22: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1315,1: typedef
 1315,9: union
 1316,1: {
 1317,3: char
 1317,8: __size
 1317,14: VARIABLE
 1317,14: [
 1317,15: 4
 1317,16: ]
 1317,17: ;
 1318,3: int
 1318,7: __align
 1318,14: VARIABLE
 1318,14: ;
 1319,1: }
 
54 union 
 1315,9: union
 
89 { struct_declaration_list } 
 1316,1: {
 1317,3: char
 1317,8: __size
 1317,14: VARIABLE
 1317,14: [
 1317,15: 4
 1317,16: ]
 1317,17: ;
 1318,3: int
 1318,7: __align
 1318,14: VARIABLE
 1318,14: ;
 1319,1: }
 
126 char 
 1317,3: char
 
200 NAME VARIABLE 
 1317,8: __size
 1317,14: VARIABLE
 
65 VARIABLE 
 1317,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1317,14: [
 1317,15: 4
 1317,16: ]
 
188 CONSTANT 
 1317,15: 4
 
305 ] 
 1317,16: ]
 
313 ; 
 1317,17: ;
 
198 int 
 1318,3: int
 
200 NAME VARIABLE 
 1318,7: __align
 1318,14: VARIABLE
 
65 VARIABLE 
 1318,14: VARIABLE
 
313 ; 
 1318,14: ;
 
198 } 
 1319,1: }
 
6 NAME VARIABLE 
 1319,3: pthread_condattr_t
 1319,21: VARIABLE
 
65 VARIABLE 
 1319,21: VARIABLE
 
70 ; 
 1319,21: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1323,1: typedef
 1323,9: unsigned
 1323,18: int
 
54 unsigned 
 1323,9: unsigned
 
106 int 
 1323,18: int
 
6 NAME VARIABLE 
 1323,22: pthread_key_t
 1323,35: VARIABLE
 
65 VARIABLE 
 1323,35: VARIABLE
 
70 ; 
 1323,35: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1327,1: typedef
 1327,9: int
 
54 int 
 1327,9: int
 
6 NAME VARIABLE 
 1327,13: pthread_once_t
 1327,27: VARIABLE
 
65 VARIABLE 
 1327,27: VARIABLE
 
70 ; 
 1327,27: ;
 
23 union 
 1330,1: union
 
22 NAME VARIABLE 
 1330,7: pthread_attr_t
 1330,21: VARIABLE
 
65 VARIABLE 
 1330,21: VARIABLE
 
89 { struct_declaration_list } 
 1331,1: {
 1332,3: char
 1332,8: __size
 1332,14: VARIABLE
 1332,14: [
 1332,15: 56
 1332,17: ]
 1332,18: ;
 1333,3: long
 1333,8: int
 1333,12: __align
 1333,19: VARIABLE
 1333,19: ;
 1334,1: }
 
126 char 
 1332,3: char
 
200 NAME VARIABLE 
 1332,8: __size
 1332,14: VARIABLE
 
65 VARIABLE 
 1332,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1332,14: [
 1332,15: 56
 1332,17: ]
 
188 CONSTANT 
 1332,15: 56
 
305 ] 
 1332,17: ]
 
313 ; 
 1332,18: ;
 
198 long 
 1333,3: long
 
135 int 
 1333,8: int
 
200 NAME VARIABLE 
 1333,12: __align
 1333,19: VARIABLE
 
65 VARIABLE 
 1333,19: VARIABLE
 
313 ; 
 1333,19: ;
 
198 } 
 1334,1: }
 
60 ; 
 1334,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1336,1: typedef
 1336,9: union
 1336,15: pthread_attr_t
 1336,29: VARIABLE
 
54 union 
 1336,9: union
 
22 NAME VARIABLE 
 1336,15: pthread_attr_t
 1336,29: VARIABLE
 
65 VARIABLE 
 1336,29: VARIABLE
 
6 NAME VARIABLE 
 1336,30: pthread_attr_t
 1336,44: VARIABLE
 
65 VARIABLE 
 1336,44: VARIABLE
 
70 ; 
 1336,44: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1341,1: typedef
 1341,9: union
 1342,1: {
 1343,3: struct
 1343,10: __pthread_mutex_s
 1343,27: VARIABLE
 1343,28: __data
 1343,34: VARIABLE
 1343,34: ;
 1344,3: char
 1344,8: __size
 1344,14: VARIABLE
 1344,14: [
 1344,15: 40
 1344,17: ]
 1344,18: ;
 1345,3: long
 1345,8: int
 1345,12: __align
 1345,19: VARIABLE
 1345,19: ;
 1346,1: }
 
54 union 
 1341,9: union
 
89 { struct_declaration_list } 
 1342,1: {
 1343,3: struct
 1343,10: __pthread_mutex_s
 1343,27: VARIABLE
 1343,28: __data
 1343,34: VARIABLE
 1343,34: ;
 1344,3: char
 1344,8: __size
 1344,14: VARIABLE
 1344,14: [
 1344,15: 40
 1344,17: ]
 1344,18: ;
 1345,3: long
 1345,8: int
 1345,12: __align
 1345,19: VARIABLE
 1345,19: ;
 1346,1: }
 
126 struct 
 1343,3: struct
 
22 NAME VARIABLE 
 1343,10: __pthread_mutex_s
 1343,27: VARIABLE
 
65 VARIABLE 
 1343,27: VARIABLE
 
200 NAME VARIABLE 
 1343,28: __data
 1343,34: VARIABLE
 
65 VARIABLE 
 1343,34: VARIABLE
 
313 ; 
 1343,34: ;
 
198 char 
 1344,3: char
 
200 NAME VARIABLE 
 1344,8: __size
 1344,14: VARIABLE
 
65 VARIABLE 
 1344,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1344,14: [
 1344,15: 40
 1344,17: ]
 
188 CONSTANT 
 1344,15: 40
 
305 ] 
 1344,17: ]
 
313 ; 
 1344,18: ;
 
198 long 
 1345,3: long
 
135 int 
 1345,8: int
 
200 NAME VARIABLE 
 1345,12: __align
 1345,19: VARIABLE
 
65 VARIABLE 
 1345,19: VARIABLE
 
313 ; 
 1345,19: ;
 
198 } 
 1346,1: }
 
6 NAME VARIABLE 
 1346,3: pthread_mutex_t
 1346,18: VARIABLE
 
65 VARIABLE 
 1346,18: VARIABLE
 
70 ; 
 1346,18: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1349,1: typedef
 1349,9: union
 1350,1: {
 1351,3: struct
 1351,10: __pthread_cond_s
 1351,26: VARIABLE
 1351,27: __data
 1351,33: VARIABLE
 1351,33: ;
 1352,3: char
 1352,8: __size
 1352,14: VARIABLE
 1352,14: [
 1352,15: 48
 1352,17: ]
 1352,18: ;
 1353,4: long
 1353,9: long
 1353,14: int
 1353,18: __align
 1353,25: VARIABLE
 1353,25: ;
 1354,1: }
 
54 union 
 1349,9: union
 
89 { struct_declaration_list } 
 1350,1: {
 1351,3: struct
 1351,10: __pthread_cond_s
 1351,26: VARIABLE
 1351,27: __data
 1351,33: VARIABLE
 1351,33: ;
 1352,3: char
 1352,8: __size
 1352,14: VARIABLE
 1352,14: [
 1352,15: 48
 1352,17: ]
 1352,18: ;
 1353,4: long
 1353,9: long
 1353,14: int
 1353,18: __align
 1353,25: VARIABLE
 1353,25: ;
 1354,1: }
 
126 struct 
 1351,3: struct
 
22 NAME VARIABLE 
 1351,10: __pthread_cond_s
 1351,26: VARIABLE
 
65 VARIABLE 
 1351,26: VARIABLE
 
200 NAME VARIABLE 
 1351,27: __data
 1351,33: VARIABLE
 
65 VARIABLE 
 1351,33: VARIABLE
 
313 ; 
 1351,33: ;
 
198 char 
 1352,3: char
 
200 NAME VARIABLE 
 1352,8: __size
 1352,14: VARIABLE
 
65 VARIABLE 
 1352,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1352,14: [
 1352,15: 48
 1352,17: ]
 
188 CONSTANT 
 1352,15: 48
 
305 ] 
 1352,17: ]
 
313 ; 
 1352,18: ;
 
198 long 
 1353,4: long
 
135 long 
 1353,9: long
 
135 int 
 1353,14: int
 
200 NAME VARIABLE 
 1353,18: __align
 1353,25: VARIABLE
 
65 VARIABLE 
 1353,25: VARIABLE
 
313 ; 
 1353,25: ;
 
198 } 
 1354,1: }
 
6 NAME VARIABLE 
 1354,3: pthread_cond_t
 1354,17: VARIABLE
 
65 VARIABLE 
 1354,17: VARIABLE
 
70 ; 
 1354,17: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1360,1: typedef
 1360,9: union
 1361,1: {
 1362,3: struct
 1362,10: __pthread_rwlock_arch_t
 1362,33: VARIABLE
 1362,34: __data
 1362,40: VARIABLE
 1362,40: ;
 1363,3: char
 1363,8: __size
 1363,14: VARIABLE
 1363,14: [
 1363,15: 56
 1363,17: ]
 1363,18: ;
 1364,3: long
 1364,8: int
 1364,12: __align
 1364,19: VARIABLE
 1364,19: ;
 1365,1: }
 
54 union 
 1360,9: union
 
89 { struct_declaration_list } 
 1361,1: {
 1362,3: struct
 1362,10: __pthread_rwlock_arch_t
 1362,33: VARIABLE
 1362,34: __data
 1362,40: VARIABLE
 1362,40: ;
 1363,3: char
 1363,8: __size
 1363,14: VARIABLE
 1363,14: [
 1363,15: 56
 1363,17: ]
 1363,18: ;
 1364,3: long
 1364,8: int
 1364,12: __align
 1364,19: VARIABLE
 1364,19: ;
 1365,1: }
 
126 struct 
 1362,3: struct
 
22 NAME VARIABLE 
 1362,10: __pthread_rwlock_arch_t
 1362,33: VARIABLE
 
65 VARIABLE 
 1362,33: VARIABLE
 
200 NAME VARIABLE 
 1362,34: __data
 1362,40: VARIABLE
 
65 VARIABLE 
 1362,40: VARIABLE
 
313 ; 
 1362,40: ;
 
198 char 
 1363,3: char
 
200 NAME VARIABLE 
 1363,8: __size
 1363,14: VARIABLE
 
65 VARIABLE 
 1363,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1363,14: [
 1363,15: 56
 1363,17: ]
 
188 CONSTANT 
 1363,15: 56
 
305 ] 
 1363,17: ]
 
313 ; 
 1363,18: ;
 
198 long 
 1364,3: long
 
135 int 
 1364,8: int
 
200 NAME VARIABLE 
 1364,12: __align
 1364,19: VARIABLE
 
65 VARIABLE 
 1364,19: VARIABLE
 
313 ; 
 1364,19: ;
 
198 } 
 1365,1: }
 
6 NAME VARIABLE 
 1365,3: pthread_rwlock_t
 1365,19: VARIABLE
 
65 VARIABLE 
 1365,19: VARIABLE
 
70 ; 
 1365,19: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1367,1: typedef
 1367,9: union
 1368,1: {
 1369,3: char
 1369,8: __size
 1369,14: VARIABLE
 1369,14: [
 1369,15: 8
 1369,16: ]
 1369,17: ;
 1370,3: long
 1370,8: int
 1370,12: __align
 1370,19: VARIABLE
 1370,19: ;
 1371,1: }
 
54 union 
 1367,9: union
 
89 { struct_declaration_list } 
 1368,1: {
 1369,3: char
 1369,8: __size
 1369,14: VARIABLE
 1369,14: [
 1369,15: 8
 1369,16: ]
 1369,17: ;
 1370,3: long
 1370,8: int
 1370,12: __align
 1370,19: VARIABLE
 1370,19: ;
 1371,1: }
 
126 char 
 1369,3: char
 
200 NAME VARIABLE 
 1369,8: __size
 1369,14: VARIABLE
 
65 VARIABLE 
 1369,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1369,14: [
 1369,15: 8
 1369,16: ]
 
188 CONSTANT 
 1369,15: 8
 
305 ] 
 1369,16: ]
 
313 ; 
 1369,17: ;
 
198 long 
 1370,3: long
 
135 int 
 1370,8: int
 
200 NAME VARIABLE 
 1370,12: __align
 1370,19: VARIABLE
 
65 VARIABLE 
 1370,19: VARIABLE
 
313 ; 
 1370,19: ;
 
198 } 
 1371,1: }
 
6 NAME VARIABLE 
 1371,3: pthread_rwlockattr_t
 1371,23: VARIABLE
 
65 VARIABLE 
 1371,23: VARIABLE
 
70 ; 
 1371,23: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1377,1: typedef
 1377,9: volatile
 1377,18: int
 
54 volatile 
 1377,9: volatile
 
103 int 
 1377,18: int
 
6 NAME VARIABLE 
 1377,22: pthread_spinlock_t
 1377,40: VARIABLE
 
65 VARIABLE 
 1377,40: VARIABLE
 
70 ; 
 1377,40: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1382,1: typedef
 1382,9: union
 1383,1: {
 1384,3: char
 1384,8: __size
 1384,14: VARIABLE
 1384,14: [
 1384,15: 32
 1384,17: ]
 1384,18: ;
 1385,3: long
 1385,8: int
 1385,12: __align
 1385,19: VARIABLE
 1385,19: ;
 1386,1: }
 
54 union 
 1382,9: union
 
89 { struct_declaration_list } 
 1383,1: {
 1384,3: char
 1384,8: __size
 1384,14: VARIABLE
 1384,14: [
 1384,15: 32
 1384,17: ]
 1384,18: ;
 1385,3: long
 1385,8: int
 1385,12: __align
 1385,19: VARIABLE
 1385,19: ;
 1386,1: }
 
126 char 
 1384,3: char
 
200 NAME VARIABLE 
 1384,8: __size
 1384,14: VARIABLE
 
65 VARIABLE 
 1384,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1384,14: [
 1384,15: 32
 1384,17: ]
 
188 CONSTANT 
 1384,15: 32
 
305 ] 
 1384,17: ]
 
313 ; 
 1384,18: ;
 
198 long 
 1385,3: long
 
135 int 
 1385,8: int
 
200 NAME VARIABLE 
 1385,12: __align
 1385,19: VARIABLE
 
65 VARIABLE 
 1385,19: VARIABLE
 
313 ; 
 1385,19: ;
 
198 } 
 1386,1: }
 
6 NAME VARIABLE 
 1386,3: pthread_barrier_t
 1386,20: VARIABLE
 
65 VARIABLE 
 1386,20: VARIABLE
 
70 ; 
 1386,20: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1388,1: typedef
 1388,9: union
 1389,1: {
 1390,3: char
 1390,8: __size
 1390,14: VARIABLE
 1390,14: [
 1390,15: 4
 1390,16: ]
 1390,17: ;
 1391,3: int
 1391,7: __align
 1391,14: VARIABLE
 1391,14: ;
 1392,1: }
 
54 union 
 1388,9: union
 
89 { struct_declaration_list } 
 1389,1: {
 1390,3: char
 1390,8: __size
 1390,14: VARIABLE
 1390,14: [
 1390,15: 4
 1390,16: ]
 1390,17: ;
 1391,3: int
 1391,7: __align
 1391,14: VARIABLE
 1391,14: ;
 1392,1: }
 
126 char 
 1390,3: char
 
200 NAME VARIABLE 
 1390,8: __size
 1390,14: VARIABLE
 
65 VARIABLE 
 1390,14: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1390,14: [
 1390,15: 4
 1390,16: ]
 
188 CONSTANT 
 1390,15: 4
 
305 ] 
 1390,16: ]
 
313 ; 
 1390,17: ;
 
198 int 
 1391,3: int
 
200 NAME VARIABLE 
 1391,7: __align
 1391,14: VARIABLE
 
65 VARIABLE 
 1391,14: VARIABLE
 
313 ; 
 1391,14: ;
 
198 } 
 1392,1: }
 
6 NAME VARIABLE 
 1392,3: pthread_barrierattr_t
 1392,24: VARIABLE
 
65 VARIABLE 
 1392,24: VARIABLE
 
70 ; 
 1392,24: ;
 
23 extern 
 1404,1: extern
 
8 long 
 1404,8: long
 
17 int 
 1404,13: int
 
5 NAME VARIABLE 
 1404,17: random
 1404,23: VARIABLE
 
65 VARIABLE 
 1404,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1404,24: (
 1404,25: void
 1404,29: )
 
186 void 
 1404,25: void
 
187 ) 
 1404,29: )
 
60 ; 
 1404,31: ;
 
23 extern 
 1407,1: extern
 
8 void 
 1407,8: void
 
5 NAME VARIABLE 
 1407,13: srandom
 1407,20: VARIABLE
 
65 VARIABLE 
 1407,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1407,21: (
 1407,22: unsigned
 1407,31: int
 1407,35: __seed
 1407,41: VARIABLE
 1407,41: )
 
186 unsigned 
 1407,22: unsigned
 
106 int 
 1407,31: int
 
298 NAME VARIABLE 
 1407,35: __seed
 1407,41: VARIABLE
 
65 VARIABLE 
 1407,41: VARIABLE
 
187 ) 
 1407,41: )
 
60 ; 
 1407,43: ;
 
23 extern 
 1413,1: extern
 
8 char 
 1413,8: char
 
5 * option_type_qualifier_list option_pointer 
 1413,13: *
 
64 NAME VARIABLE 
 1413,14: initstate
 1413,23: VARIABLE
 
65 VARIABLE 
 1413,23: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1413,24: (
 1413,25: unsigned
 1413,34: int
 1413,38: __seed
 1413,44: VARIABLE
 1413,44: ,
 1413,46: char
 1413,51: *
 1413,52: __statebuf
 1413,62: VARIABLE
 1413,62: ,
 1414,4: size_t
 1414,10: TYPE
 1414,11: __statelen
 1414,21: VARIABLE
 1414,21: )
 
186 unsigned 
 1413,25: unsigned
 
106 int 
 1413,34: int
 
298 NAME VARIABLE 
 1413,38: __seed
 1413,44: VARIABLE
 
65 VARIABLE 
 1413,44: VARIABLE
 
300 , parameter_declaration 
 1413,44: ,
 1413,46: char
 1413,51: *
 1413,52: __statebuf
 1413,62: VARIABLE
 
391 char 
 1413,46: char
 
298 * option_type_qualifier_list option_pointer 
 1413,51: *
 
386 NAME VARIABLE 
 1413,52: __statebuf
 1413,62: VARIABLE
 
65 VARIABLE 
 1413,62: VARIABLE
 
300 , parameter_declaration 
 1413,62: ,
 1414,4: size_t
 1414,10: TYPE
 1414,11: __statelen
 1414,21: VARIABLE
 
391 NAME TYPE 
 1414,4: size_t
 1414,10: TYPE
 
26 TYPE 
 1414,10: TYPE
 
298 NAME VARIABLE 
 1414,11: __statelen
 1414,21: VARIABLE
 
65 VARIABLE 
 1414,21: VARIABLE
 
187 ) 
 1414,21: )
 
60 ; 
 1414,24: ;
 
23 extern 
 1418,1: extern
 
8 char 
 1418,8: char
 
5 * option_type_qualifier_list option_pointer 
 1418,13: *
 
64 NAME VARIABLE 
 1418,14: setstate
 1418,22: VARIABLE
 
65 VARIABLE 
 1418,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1418,23: (
 1418,24: char
 1418,29: *
 1418,30: __statebuf
 1418,40: VARIABLE
 1418,40: )
 
186 char 
 1418,24: char
 
298 * option_type_qualifier_list option_pointer 
 1418,29: *
 
386 NAME VARIABLE 
 1418,30: __statebuf
 1418,40: VARIABLE
 
65 VARIABLE 
 1418,40: VARIABLE
 
187 ) 
 1418,40: )
 
60 ; 
 1418,43: ;
 
23 struct 
 1426,1: struct
 
22 NAME VARIABLE 
 1426,8: random_data
 1426,19: VARIABLE
 
65 VARIABLE 
 1426,19: VARIABLE
 
89 { struct_declaration_list } 
 1427,3: {
 1428,5: int32_t
 1428,12: TYPE
 1428,13: *
 1428,14: fptr
 1428,18: VARIABLE
 1428,18: ;
 1429,5: int32_t
 1429,12: TYPE
 1429,13: *
 1429,14: rptr
 1429,18: VARIABLE
 1429,18: ;
 1430,5: int32_t
 1430,12: TYPE
 1430,13: *
 1430,14: state
 1430,19: VARIABLE
 1430,19: ;
 1431,5: int
 1431,9: rand_type
 1431,18: VARIABLE
 1431,18: ;
 1432,5: int
 1432,9: rand_deg
 1432,17: VARIABLE
 1432,17: ;
 1433,5: int
 1433,9: rand_sep
 1433,17: VARIABLE
 1433,17: ;
 1434,5: int32_t
 1434,12: TYPE
 1434,13: *
 1434,14: end_ptr
 1434,21: VARIABLE
 1434,21: ;
 1435,3: }
 
126 NAME TYPE 
 1428,5: int32_t
 1428,12: TYPE
 
26 TYPE 
 1428,12: TYPE
 
200 * option_type_qualifier_list option_pointer 
 1428,13: *
 
64 NAME VARIABLE 
 1428,14: fptr
 1428,18: VARIABLE
 
65 VARIABLE 
 1428,18: VARIABLE
 
313 ; 
 1428,18: ;
 
198 NAME TYPE 
 1429,5: int32_t
 1429,12: TYPE
 
26 TYPE 
 1429,12: TYPE
 
200 * option_type_qualifier_list option_pointer 
 1429,13: *
 
64 NAME VARIABLE 
 1429,14: rptr
 1429,18: VARIABLE
 
65 VARIABLE 
 1429,18: VARIABLE
 
313 ; 
 1429,18: ;
 
198 NAME TYPE 
 1430,5: int32_t
 1430,12: TYPE
 
26 TYPE 
 1430,12: TYPE
 
200 * option_type_qualifier_list option_pointer 
 1430,13: *
 
64 NAME VARIABLE 
 1430,14: state
 1430,19: VARIABLE
 
65 VARIABLE 
 1430,19: VARIABLE
 
313 ; 
 1430,19: ;
 
198 int 
 1431,5: int
 
200 NAME VARIABLE 
 1431,9: rand_type
 1431,18: VARIABLE
 
65 VARIABLE 
 1431,18: VARIABLE
 
313 ; 
 1431,18: ;
 
198 int 
 1432,5: int
 
200 NAME VARIABLE 
 1432,9: rand_deg
 1432,17: VARIABLE
 
65 VARIABLE 
 1432,17: VARIABLE
 
313 ; 
 1432,17: ;
 
198 int 
 1433,5: int
 
200 NAME VARIABLE 
 1433,9: rand_sep
 1433,17: VARIABLE
 
65 VARIABLE 
 1433,17: VARIABLE
 
313 ; 
 1433,17: ;
 
198 NAME TYPE 
 1434,5: int32_t
 1434,12: TYPE
 
26 TYPE 
 1434,12: TYPE
 
200 * option_type_qualifier_list option_pointer 
 1434,13: *
 
64 NAME VARIABLE 
 1434,14: end_ptr
 1434,21: VARIABLE
 
65 VARIABLE 
 1434,21: VARIABLE
 
313 ; 
 1434,21: ;
 
198 } 
 1435,3: }
 
60 ; 
 1435,4: ;
 
23 extern 
 1437,1: extern
 
8 int 
 1437,8: int
 
5 NAME VARIABLE 
 1437,12: random_r
 1437,20: VARIABLE
 
65 VARIABLE 
 1437,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1437,21: (
 1437,22: struct
 1437,29: random_data
 1437,40: VARIABLE
 1437,41: *
 1437,43: __buf
 1437,48: VARIABLE
 1437,48: ,
 1438,8: int32_t
 1438,15: TYPE
 1438,16: *
 1438,18: __result
 1438,26: VARIABLE
 1438,26: )
 
186 struct 
 1437,22: struct
 
22 NAME VARIABLE 
 1437,29: random_data
 1437,40: VARIABLE
 
65 VARIABLE 
 1437,40: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1437,41: *
 
386 NAME VARIABLE 
 1437,43: __buf
 1437,48: VARIABLE
 
65 VARIABLE 
 1437,48: VARIABLE
 
300 , parameter_declaration 
 1437,48: ,
 1438,8: int32_t
 1438,15: TYPE
 1438,16: *
 1438,18: __result
 1438,26: VARIABLE
 
391 NAME TYPE 
 1438,8: int32_t
 1438,15: TYPE
 
26 TYPE 
 1438,15: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1438,16: *
 
386 NAME VARIABLE 
 1438,18: __result
 1438,26: VARIABLE
 
65 VARIABLE 
 1438,26: VARIABLE
 
187 ) 
 1438,26: )
 
60 ; 
 1438,29: ;
 
23 extern 
 1440,1: extern
 
8 int 
 1440,8: int
 
5 NAME VARIABLE 
 1440,12: srandom_r
 1440,21: VARIABLE
 
65 VARIABLE 
 1440,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1440,22: (
 1440,23: unsigned
 1440,32: int
 1440,36: __seed
 1440,42: VARIABLE
 1440,42: ,
 1440,44: struct
 1440,51: random_data
 1440,62: VARIABLE
 1440,63: *
 1440,64: __buf
 1440,69: VARIABLE
 1440,69: )
 
186 unsigned 
 1440,23: unsigned
 
106 int 
 1440,32: int
 
298 NAME VARIABLE 
 1440,36: __seed
 1440,42: VARIABLE
 
65 VARIABLE 
 1440,42: VARIABLE
 
300 , parameter_declaration 
 1440,42: ,
 1440,44: struct
 1440,51: random_data
 1440,62: VARIABLE
 1440,63: *
 1440,64: __buf
 1440,69: VARIABLE
 
391 struct 
 1440,44: struct
 
22 NAME VARIABLE 
 1440,51: random_data
 1440,62: VARIABLE
 
65 VARIABLE 
 1440,62: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1440,63: *
 
386 NAME VARIABLE 
 1440,64: __buf
 1440,69: VARIABLE
 
65 VARIABLE 
 1440,69: VARIABLE
 
187 ) 
 1440,69: )
 
60 ; 
 1441,7: ;
 
23 extern 
 1443,1: extern
 
8 int 
 1443,8: int
 
5 NAME VARIABLE 
 1443,12: initstate_r
 1443,23: VARIABLE
 
65 VARIABLE 
 1443,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1443,24: (
 1443,25: unsigned
 1443,34: int
 1443,38: __seed
 1443,44: VARIABLE
 1443,44: ,
 1443,46: char
 1443,51: *
 1443,53: __statebuf
 1443,63: VARIABLE
 1443,63: ,
 1444,4: size_t
 1444,10: TYPE
 1444,11: __statelen
 1444,21: VARIABLE
 1444,21: ,
 1445,4: struct
 1445,11: random_data
 1445,22: VARIABLE
 1445,23: *
 1445,25: __buf
 1445,30: VARIABLE
 1445,30: )
 
186 unsigned 
 1443,25: unsigned
 
106 int 
 1443,34: int
 
298 NAME VARIABLE 
 1443,38: __seed
 1443,44: VARIABLE
 
65 VARIABLE 
 1443,44: VARIABLE
 
300 , parameter_declaration 
 1443,44: ,
 1443,46: char
 1443,51: *
 1443,53: __statebuf
 1443,63: VARIABLE
 
391 char 
 1443,46: char
 
298 * option_type_qualifier_list option_pointer 
 1443,51: *
 
386 NAME VARIABLE 
 1443,53: __statebuf
 1443,63: VARIABLE
 
65 VARIABLE 
 1443,63: VARIABLE
 
300 , parameter_declaration 
 1443,63: ,
 1444,4: size_t
 1444,10: TYPE
 1444,11: __statelen
 1444,21: VARIABLE
 
391 NAME TYPE 
 1444,4: size_t
 1444,10: TYPE
 
26 TYPE 
 1444,10: TYPE
 
298 NAME VARIABLE 
 1444,11: __statelen
 1444,21: VARIABLE
 
65 VARIABLE 
 1444,21: VARIABLE
 
300 , parameter_declaration 
 1444,21: ,
 1445,4: struct
 1445,11: random_data
 1445,22: VARIABLE
 1445,23: *
 1445,25: __buf
 1445,30: VARIABLE
 
391 struct 
 1445,4: struct
 
22 NAME VARIABLE 
 1445,11: random_data
 1445,22: VARIABLE
 
65 VARIABLE 
 1445,22: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1445,23: *
 
386 NAME VARIABLE 
 1445,25: __buf
 1445,30: VARIABLE
 
65 VARIABLE 
 1445,30: VARIABLE
 
187 ) 
 1445,30: )
 
60 ; 
 1446,7: ;
 
23 extern 
 1448,1: extern
 
8 int 
 1448,8: int
 
5 NAME VARIABLE 
 1448,12: setstate_r
 1448,22: VARIABLE
 
65 VARIABLE 
 1448,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1448,23: (
 1448,24: char
 1448,29: *
 1448,31: __statebuf
 1448,41: VARIABLE
 1448,41: ,
 1449,10: struct
 1449,17: random_data
 1449,28: VARIABLE
 1449,29: *
 1449,31: __buf
 1449,36: VARIABLE
 1449,36: )
 
186 char 
 1448,24: char
 
298 * option_type_qualifier_list option_pointer 
 1448,29: *
 
386 NAME VARIABLE 
 1448,31: __statebuf
 1448,41: VARIABLE
 
65 VARIABLE 
 1448,41: VARIABLE
 
300 , parameter_declaration 
 1448,41: ,
 1449,10: struct
 1449,17: random_data
 1449,28: VARIABLE
 1449,29: *
 1449,31: __buf
 1449,36: VARIABLE
 
391 struct 
 1449,10: struct
 
22 NAME VARIABLE 
 1449,17: random_data
 1449,28: VARIABLE
 
65 VARIABLE 
 1449,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1449,29: *
 
386 NAME VARIABLE 
 1449,31: __buf
 1449,36: VARIABLE
 
65 VARIABLE 
 1449,36: VARIABLE
 
187 ) 
 1449,36: )
 
60 ; 
 1450,7: ;
 
23 extern 
 1456,1: extern
 
8 int 
 1456,8: int
 
5 NAME VARIABLE 
 1456,12: rand
 1456,16: VARIABLE
 
65 VARIABLE 
 1456,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1456,17: (
 1456,18: void
 1456,22: )
 
186 void 
 1456,18: void
 
187 ) 
 1456,22: )
 
60 ; 
 1456,24: ;
 
23 extern 
 1458,1: extern
 
8 void 
 1458,8: void
 
5 NAME VARIABLE 
 1458,13: srand
 1458,18: VARIABLE
 
65 VARIABLE 
 1458,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1458,19: (
 1458,20: unsigned
 1458,29: int
 1458,33: __seed
 1458,39: VARIABLE
 1458,39: )
 
186 unsigned 
 1458,20: unsigned
 
106 int 
 1458,29: int
 
298 NAME VARIABLE 
 1458,33: __seed
 1458,39: VARIABLE
 
65 VARIABLE 
 1458,39: VARIABLE
 
187 ) 
 1458,39: )
 
60 ; 
 1458,41: ;
 
23 extern 
 1462,1: extern
 
8 int 
 1462,8: int
 
5 NAME VARIABLE 
 1462,12: rand_r
 1462,18: VARIABLE
 
65 VARIABLE 
 1462,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1462,19: (
 1462,20: unsigned
 1462,29: int
 1462,33: *
 1462,34: __seed
 1462,40: VARIABLE
 1462,40: )
 
186 unsigned 
 1462,20: unsigned
 
106 int 
 1462,29: int
 
298 * option_type_qualifier_list option_pointer 
 1462,33: *
 
386 NAME VARIABLE 
 1462,34: __seed
 1462,40: VARIABLE
 
65 VARIABLE 
 1462,40: VARIABLE
 
187 ) 
 1462,40: )
 
60 ; 
 1462,42: ;
 
23 extern 
 1470,1: extern
 
8 double 
 1470,8: double
 
5 NAME VARIABLE 
 1470,15: drand48
 1470,22: VARIABLE
 
65 VARIABLE 
 1470,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1470,23: (
 1470,24: void
 1470,28: )
 
186 void 
 1470,24: void
 
187 ) 
 1470,28: )
 
60 ; 
 1470,30: ;
 
23 extern 
 1471,1: extern
 
8 double 
 1471,8: double
 
5 NAME VARIABLE 
 1471,15: erand48
 1471,22: VARIABLE
 
65 VARIABLE 
 1471,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1471,23: (
 1471,24: unsigned
 1471,33: short
 1471,39: int
 1471,43: __xsubi
 1471,50: VARIABLE
 1471,50: [
 1471,51: 3
 1471,52: ]
 1471,53: )
 
186 unsigned 
 1471,24: unsigned
 
106 short 
 1471,33: short
 
106 int 
 1471,39: int
 
298 NAME VARIABLE 
 1471,43: __xsubi
 1471,50: VARIABLE
 
65 VARIABLE 
 1471,50: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1471,50: [
 1471,51: 3
 1471,52: ]
 
188 CONSTANT 
 1471,51: 3
 
305 ] 
 1471,52: ]
 
187 ) 
 1471,53: )
 
60 ; 
 1471,56: ;
 
23 extern 
 1474,1: extern
 
8 long 
 1474,8: long
 
17 int 
 1474,13: int
 
5 NAME VARIABLE 
 1474,17: lrand48
 1474,24: VARIABLE
 
65 VARIABLE 
 1474,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1474,25: (
 1474,26: void
 1474,30: )
 
186 void 
 1474,26: void
 
187 ) 
 1474,30: )
 
60 ; 
 1474,32: ;
 
23 extern 
 1475,1: extern
 
8 long 
 1475,8: long
 
17 int 
 1475,13: int
 
5 NAME VARIABLE 
 1475,17: nrand48
 1475,24: VARIABLE
 
65 VARIABLE 
 1475,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1475,25: (
 1475,26: unsigned
 1475,35: short
 1475,41: int
 1475,45: __xsubi
 1475,52: VARIABLE
 1475,52: [
 1475,53: 3
 1475,54: ]
 1475,55: )
 
186 unsigned 
 1475,26: unsigned
 
106 short 
 1475,35: short
 
106 int 
 1475,41: int
 
298 NAME VARIABLE 
 1475,45: __xsubi
 1475,52: VARIABLE
 
65 VARIABLE 
 1475,52: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1475,52: [
 1475,53: 3
 1475,54: ]
 
188 CONSTANT 
 1475,53: 3
 
305 ] 
 1475,54: ]
 
187 ) 
 1475,55: )
 
60 ; 
 1476,7: ;
 
23 extern 
 1479,1: extern
 
8 long 
 1479,8: long
 
17 int 
 1479,13: int
 
5 NAME VARIABLE 
 1479,17: mrand48
 1479,24: VARIABLE
 
65 VARIABLE 
 1479,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1479,25: (
 1479,26: void
 1479,30: )
 
186 void 
 1479,26: void
 
187 ) 
 1479,30: )
 
60 ; 
 1479,32: ;
 
23 extern 
 1480,1: extern
 
8 long 
 1480,8: long
 
17 int 
 1480,13: int
 
5 NAME VARIABLE 
 1480,17: jrand48
 1480,24: VARIABLE
 
65 VARIABLE 
 1480,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1480,25: (
 1480,26: unsigned
 1480,35: short
 1480,41: int
 1480,45: __xsubi
 1480,52: VARIABLE
 1480,52: [
 1480,53: 3
 1480,54: ]
 1480,55: )
 
186 unsigned 
 1480,26: unsigned
 
106 short 
 1480,35: short
 
106 int 
 1480,41: int
 
298 NAME VARIABLE 
 1480,45: __xsubi
 1480,52: VARIABLE
 
65 VARIABLE 
 1480,52: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1480,52: [
 1480,53: 3
 1480,54: ]
 
188 CONSTANT 
 1480,53: 3
 
305 ] 
 1480,54: ]
 
187 ) 
 1480,55: )
 
60 ; 
 1481,7: ;
 
23 extern 
 1484,1: extern
 
8 void 
 1484,8: void
 
5 NAME VARIABLE 
 1484,13: srand48
 1484,20: VARIABLE
 
65 VARIABLE 
 1484,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1484,21: (
 1484,22: long
 1484,27: int
 1484,31: __seedval
 1484,40: VARIABLE
 1484,40: )
 
186 long 
 1484,22: long
 
106 int 
 1484,27: int
 
298 NAME VARIABLE 
 1484,31: __seedval
 1484,40: VARIABLE
 
65 VARIABLE 
 1484,40: VARIABLE
 
187 ) 
 1484,40: )
 
60 ; 
 1484,42: ;
 
23 extern 
 1485,1: extern
 
8 unsigned 
 1485,8: unsigned
 
17 short 
 1485,17: short
 
17 int 
 1485,23: int
 
5 * option_type_qualifier_list option_pointer 
 1485,27: *
 
64 NAME VARIABLE 
 1485,28: seed48
 1485,34: VARIABLE
 
65 VARIABLE 
 1485,34: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1485,35: (
 1485,36: unsigned
 1485,45: short
 1485,51: int
 1485,55: __seed16v
 1485,64: VARIABLE
 1485,64: [
 1485,65: 3
 1485,66: ]
 1485,67: )
 
186 unsigned 
 1485,36: unsigned
 
106 short 
 1485,45: short
 
106 int 
 1485,51: int
 
298 NAME VARIABLE 
 1485,55: __seed16v
 1485,64: VARIABLE
 
65 VARIABLE 
 1485,64: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1485,64: [
 1485,65: 3
 1485,66: ]
 
188 CONSTANT 
 1485,65: 3
 
305 ] 
 1485,66: ]
 
187 ) 
 1485,67: )
 
60 ; 
 1486,7: ;
 
23 extern 
 1487,1: extern
 
8 void 
 1487,8: void
 
5 NAME VARIABLE 
 1487,13: lcong48
 1487,20: VARIABLE
 
65 VARIABLE 
 1487,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1487,21: (
 1487,22: unsigned
 1487,31: short
 1487,37: int
 1487,41: __param
 1487,48: VARIABLE
 1487,48: [
 1487,49: 7
 1487,50: ]
 1487,51: )
 
186 unsigned 
 1487,22: unsigned
 
106 short 
 1487,31: short
 
106 int 
 1487,37: int
 
298 NAME VARIABLE 
 1487,41: __param
 1487,48: VARIABLE
 
65 VARIABLE 
 1487,48: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1487,48: [
 1487,49: 7
 1487,50: ]
 
188 CONSTANT 
 1487,49: 7
 
305 ] 
 1487,50: ]
 
187 ) 
 1487,51: )
 
60 ; 
 1487,54: ;
 
23 struct 
 1493,1: struct
 
22 NAME VARIABLE 
 1493,8: drand48_data
 1493,20: VARIABLE
 
65 VARIABLE 
 1493,20: VARIABLE
 
89 { struct_declaration_list } 
 1494,3: {
 1495,5: unsigned
 1495,14: short
 1495,20: int
 1495,24: __x
 1495,27: VARIABLE
 1495,27: [
 1495,28: 3
 1495,29: ]
 1495,30: ;
 1496,5: unsigned
 1496,14: short
 1496,20: int
 1496,24: __old_x
 1496,31: VARIABLE
 1496,31: [
 1496,32: 3
 1496,33: ]
 1496,34: ;
 1497,5: unsigned
 1497,14: short
 1497,20: int
 1497,24: __c
 1497,27: VARIABLE
 1497,27: ;
 1498,5: unsigned
 1498,14: short
 1498,20: int
 1498,24: __init
 1498,30: VARIABLE
 1498,30: ;
 1499,6: unsigned
 1499,15: long
 1499,20: long
 1499,25: int
 1499,29: __a
 1499,32: VARIABLE
 1499,32: ;
 1501,3: }
 
126 unsigned 
 1495,5: unsigned
 
135 short 
 1495,14: short
 
135 int 
 1495,20: int
 
200 NAME VARIABLE 
 1495,24: __x
 1495,27: VARIABLE
 
65 VARIABLE 
 1495,27: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1495,27: [
 1495,28: 3
 1495,29: ]
 
188 CONSTANT 
 1495,28: 3
 
305 ] 
 1495,29: ]
 
313 ; 
 1495,30: ;
 
198 unsigned 
 1496,5: unsigned
 
135 short 
 1496,14: short
 
135 int 
 1496,20: int
 
200 NAME VARIABLE 
 1496,24: __old_x
 1496,31: VARIABLE
 
65 VARIABLE 
 1496,31: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1496,31: [
 1496,32: 3
 1496,33: ]
 
188 CONSTANT 
 1496,32: 3
 
305 ] 
 1496,33: ]
 
313 ; 
 1496,34: ;
 
198 unsigned 
 1497,5: unsigned
 
135 short 
 1497,14: short
 
135 int 
 1497,20: int
 
200 NAME VARIABLE 
 1497,24: __c
 1497,27: VARIABLE
 
65 VARIABLE 
 1497,27: VARIABLE
 
313 ; 
 1497,27: ;
 
198 unsigned 
 1498,5: unsigned
 
135 short 
 1498,14: short
 
135 int 
 1498,20: int
 
200 NAME VARIABLE 
 1498,24: __init
 1498,30: VARIABLE
 
65 VARIABLE 
 1498,30: VARIABLE
 
313 ; 
 1498,30: ;
 
198 unsigned 
 1499,6: unsigned
 
135 long 
 1499,15: long
 
135 long 
 1499,20: long
 
135 int 
 1499,25: int
 
200 NAME VARIABLE 
 1499,29: __a
 1499,32: VARIABLE
 
65 VARIABLE 
 1499,32: VARIABLE
 
313 ; 
 1499,32: ;
 
198 } 
 1501,3: }
 
60 ; 
 1501,4: ;
 
23 extern 
 1504,1: extern
 
8 int 
 1504,8: int
 
5 NAME VARIABLE 
 1504,12: drand48_r
 1504,21: VARIABLE
 
65 VARIABLE 
 1504,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1504,22: (
 1504,23: struct
 1504,30: drand48_data
 1504,42: VARIABLE
 1504,43: *
 1504,45: __buffer
 1504,53: VARIABLE
 1504,53: ,
 1505,9: double
 1505,16: *
 1505,18: __result
 1505,26: VARIABLE
 1505,26: )
 
186 struct 
 1504,23: struct
 
22 NAME VARIABLE 
 1504,30: drand48_data
 1504,42: VARIABLE
 
65 VARIABLE 
 1504,42: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1504,43: *
 
386 NAME VARIABLE 
 1504,45: __buffer
 1504,53: VARIABLE
 
65 VARIABLE 
 1504,53: VARIABLE
 
300 , parameter_declaration 
 1504,53: ,
 1505,9: double
 1505,16: *
 1505,18: __result
 1505,26: VARIABLE
 
391 double 
 1505,9: double
 
298 * option_type_qualifier_list option_pointer 
 1505,16: *
 
386 NAME VARIABLE 
 1505,18: __result
 1505,26: VARIABLE
 
65 VARIABLE 
 1505,26: VARIABLE
 
187 ) 
 1505,26: )
 
60 ; 
 1505,29: ;
 
23 extern 
 1506,1: extern
 
8 int 
 1506,8: int
 
5 NAME VARIABLE 
 1506,12: erand48_r
 1506,21: VARIABLE
 
65 VARIABLE 
 1506,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1506,22: (
 1506,23: unsigned
 1506,32: short
 1506,38: int
 1506,42: __xsubi
 1506,49: VARIABLE
 1506,49: [
 1506,50: 3
 1506,51: ]
 1506,52: ,
 1507,9: struct
 1507,16: drand48_data
 1507,28: VARIABLE
 1507,29: *
 1507,31: __buffer
 1507,39: VARIABLE
 1507,39: ,
 1508,9: double
 1508,16: *
 1508,18: __result
 1508,26: VARIABLE
 1508,26: )
 
186 unsigned 
 1506,23: unsigned
 
106 short 
 1506,32: short
 
106 int 
 1506,38: int
 
298 NAME VARIABLE 
 1506,42: __xsubi
 1506,49: VARIABLE
 
65 VARIABLE 
 1506,49: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1506,49: [
 1506,50: 3
 1506,51: ]
 
188 CONSTANT 
 1506,50: 3
 
305 ] 
 1506,51: ]
 
300 , parameter_declaration 
 1506,52: ,
 1507,9: struct
 1507,16: drand48_data
 1507,28: VARIABLE
 1507,29: *
 1507,31: __buffer
 1507,39: VARIABLE
 
391 struct 
 1507,9: struct
 
22 NAME VARIABLE 
 1507,16: drand48_data
 1507,28: VARIABLE
 
65 VARIABLE 
 1507,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1507,29: *
 
386 NAME VARIABLE 
 1507,31: __buffer
 1507,39: VARIABLE
 
65 VARIABLE 
 1507,39: VARIABLE
 
300 , parameter_declaration 
 1507,39: ,
 1508,9: double
 1508,16: *
 1508,18: __result
 1508,26: VARIABLE
 
391 double 
 1508,9: double
 
298 * option_type_qualifier_list option_pointer 
 1508,16: *
 
386 NAME VARIABLE 
 1508,18: __result
 1508,26: VARIABLE
 
65 VARIABLE 
 1508,26: VARIABLE
 
187 ) 
 1508,26: )
 
60 ; 
 1508,29: ;
 
23 extern 
 1511,1: extern
 
8 int 
 1511,8: int
 
5 NAME VARIABLE 
 1511,12: lrand48_r
 1511,21: VARIABLE
 
65 VARIABLE 
 1511,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1511,22: (
 1511,23: struct
 1511,30: drand48_data
 1511,42: VARIABLE
 1511,43: *
 1511,45: __buffer
 1511,53: VARIABLE
 1511,53: ,
 1512,9: long
 1512,14: int
 1512,18: *
 1512,20: __result
 1512,28: VARIABLE
 1512,28: )
 
186 struct 
 1511,23: struct
 
22 NAME VARIABLE 
 1511,30: drand48_data
 1511,42: VARIABLE
 
65 VARIABLE 
 1511,42: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1511,43: *
 
386 NAME VARIABLE 
 1511,45: __buffer
 1511,53: VARIABLE
 
65 VARIABLE 
 1511,53: VARIABLE
 
300 , parameter_declaration 
 1511,53: ,
 1512,9: long
 1512,14: int
 1512,18: *
 1512,20: __result
 1512,28: VARIABLE
 
391 long 
 1512,9: long
 
106 int 
 1512,14: int
 
298 * option_type_qualifier_list option_pointer 
 1512,18: *
 
386 NAME VARIABLE 
 1512,20: __result
 1512,28: VARIABLE
 
65 VARIABLE 
 1512,28: VARIABLE
 
187 ) 
 1512,28: )
 
60 ; 
 1513,7: ;
 
23 extern 
 1514,1: extern
 
8 int 
 1514,8: int
 
5 NAME VARIABLE 
 1514,12: nrand48_r
 1514,21: VARIABLE
 
65 VARIABLE 
 1514,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1514,22: (
 1514,23: unsigned
 1514,32: short
 1514,38: int
 1514,42: __xsubi
 1514,49: VARIABLE
 1514,49: [
 1514,50: 3
 1514,51: ]
 1514,52: ,
 1515,9: struct
 1515,16: drand48_data
 1515,28: VARIABLE
 1515,29: *
 1515,31: __buffer
 1515,39: VARIABLE
 1515,39: ,
 1516,9: long
 1516,14: int
 1516,18: *
 1516,20: __result
 1516,28: VARIABLE
 1516,28: )
 
186 unsigned 
 1514,23: unsigned
 
106 short 
 1514,32: short
 
106 int 
 1514,38: int
 
298 NAME VARIABLE 
 1514,42: __xsubi
 1514,49: VARIABLE
 
65 VARIABLE 
 1514,49: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1514,49: [
 1514,50: 3
 1514,51: ]
 
188 CONSTANT 
 1514,50: 3
 
305 ] 
 1514,51: ]
 
300 , parameter_declaration 
 1514,52: ,
 1515,9: struct
 1515,16: drand48_data
 1515,28: VARIABLE
 1515,29: *
 1515,31: __buffer
 1515,39: VARIABLE
 
391 struct 
 1515,9: struct
 
22 NAME VARIABLE 
 1515,16: drand48_data
 1515,28: VARIABLE
 
65 VARIABLE 
 1515,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1515,29: *
 
386 NAME VARIABLE 
 1515,31: __buffer
 1515,39: VARIABLE
 
65 VARIABLE 
 1515,39: VARIABLE
 
300 , parameter_declaration 
 1515,39: ,
 1516,9: long
 1516,14: int
 1516,18: *
 1516,20: __result
 1516,28: VARIABLE
 
391 long 
 1516,9: long
 
106 int 
 1516,14: int
 
298 * option_type_qualifier_list option_pointer 
 1516,18: *
 
386 NAME VARIABLE 
 1516,20: __result
 1516,28: VARIABLE
 
65 VARIABLE 
 1516,28: VARIABLE
 
187 ) 
 1516,28: )
 
60 ; 
 1517,7: ;
 
23 extern 
 1520,1: extern
 
8 int 
 1520,8: int
 
5 NAME VARIABLE 
 1520,12: mrand48_r
 1520,21: VARIABLE
 
65 VARIABLE 
 1520,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1520,22: (
 1520,23: struct
 1520,30: drand48_data
 1520,42: VARIABLE
 1520,43: *
 1520,45: __buffer
 1520,53: VARIABLE
 1520,53: ,
 1521,9: long
 1521,14: int
 1521,18: *
 1521,20: __result
 1521,28: VARIABLE
 1521,28: )
 
186 struct 
 1520,23: struct
 
22 NAME VARIABLE 
 1520,30: drand48_data
 1520,42: VARIABLE
 
65 VARIABLE 
 1520,42: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1520,43: *
 
386 NAME VARIABLE 
 1520,45: __buffer
 1520,53: VARIABLE
 
65 VARIABLE 
 1520,53: VARIABLE
 
300 , parameter_declaration 
 1520,53: ,
 1521,9: long
 1521,14: int
 1521,18: *
 1521,20: __result
 1521,28: VARIABLE
 
391 long 
 1521,9: long
 
106 int 
 1521,14: int
 
298 * option_type_qualifier_list option_pointer 
 1521,18: *
 
386 NAME VARIABLE 
 1521,20: __result
 1521,28: VARIABLE
 
65 VARIABLE 
 1521,28: VARIABLE
 
187 ) 
 1521,28: )
 
60 ; 
 1522,7: ;
 
23 extern 
 1523,1: extern
 
8 int 
 1523,8: int
 
5 NAME VARIABLE 
 1523,12: jrand48_r
 1523,21: VARIABLE
 
65 VARIABLE 
 1523,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1523,22: (
 1523,23: unsigned
 1523,32: short
 1523,38: int
 1523,42: __xsubi
 1523,49: VARIABLE
 1523,49: [
 1523,50: 3
 1523,51: ]
 1523,52: ,
 1524,9: struct
 1524,16: drand48_data
 1524,28: VARIABLE
 1524,29: *
 1524,31: __buffer
 1524,39: VARIABLE
 1524,39: ,
 1525,9: long
 1525,14: int
 1525,18: *
 1525,20: __result
 1525,28: VARIABLE
 1525,28: )
 
186 unsigned 
 1523,23: unsigned
 
106 short 
 1523,32: short
 
106 int 
 1523,38: int
 
298 NAME VARIABLE 
 1523,42: __xsubi
 1523,49: VARIABLE
 
65 VARIABLE 
 1523,49: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1523,49: [
 1523,50: 3
 1523,51: ]
 
188 CONSTANT 
 1523,50: 3
 
305 ] 
 1523,51: ]
 
300 , parameter_declaration 
 1523,52: ,
 1524,9: struct
 1524,16: drand48_data
 1524,28: VARIABLE
 1524,29: *
 1524,31: __buffer
 1524,39: VARIABLE
 
391 struct 
 1524,9: struct
 
22 NAME VARIABLE 
 1524,16: drand48_data
 1524,28: VARIABLE
 
65 VARIABLE 
 1524,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1524,29: *
 
386 NAME VARIABLE 
 1524,31: __buffer
 1524,39: VARIABLE
 
65 VARIABLE 
 1524,39: VARIABLE
 
300 , parameter_declaration 
 1524,39: ,
 1525,9: long
 1525,14: int
 1525,18: *
 1525,20: __result
 1525,28: VARIABLE
 
391 long 
 1525,9: long
 
106 int 
 1525,14: int
 
298 * option_type_qualifier_list option_pointer 
 1525,18: *
 
386 NAME VARIABLE 
 1525,20: __result
 1525,28: VARIABLE
 
65 VARIABLE 
 1525,28: VARIABLE
 
187 ) 
 1525,28: )
 
60 ; 
 1526,7: ;
 
23 extern 
 1529,1: extern
 
8 int 
 1529,8: int
 
5 NAME VARIABLE 
 1529,12: srand48_r
 1529,21: VARIABLE
 
65 VARIABLE 
 1529,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1529,22: (
 1529,23: long
 1529,28: int
 1529,32: __seedval
 1529,41: VARIABLE
 1529,41: ,
 1529,43: struct
 1529,50: drand48_data
 1529,62: VARIABLE
 1529,63: *
 1529,64: __buffer
 1529,72: VARIABLE
 1529,72: )
 
186 long 
 1529,23: long
 
106 int 
 1529,28: int
 
298 NAME VARIABLE 
 1529,32: __seedval
 1529,41: VARIABLE
 
65 VARIABLE 
 1529,41: VARIABLE
 
300 , parameter_declaration 
 1529,41: ,
 1529,43: struct
 1529,50: drand48_data
 1529,62: VARIABLE
 1529,63: *
 1529,64: __buffer
 1529,72: VARIABLE
 
391 struct 
 1529,43: struct
 
22 NAME VARIABLE 
 1529,50: drand48_data
 1529,62: VARIABLE
 
65 VARIABLE 
 1529,62: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1529,63: *
 
386 NAME VARIABLE 
 1529,64: __buffer
 1529,72: VARIABLE
 
65 VARIABLE 
 1529,72: VARIABLE
 
187 ) 
 1529,72: )
 
60 ; 
 1530,7: ;
 
23 extern 
 1532,1: extern
 
8 int 
 1532,8: int
 
5 NAME VARIABLE 
 1532,12: seed48_r
 1532,20: VARIABLE
 
65 VARIABLE 
 1532,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1532,21: (
 1532,22: unsigned
 1532,31: short
 1532,37: int
 1532,41: __seed16v
 1532,50: VARIABLE
 1532,50: [
 1532,51: 3
 1532,52: ]
 1532,53: ,
 1533,8: struct
 1533,15: drand48_data
 1533,27: VARIABLE
 1533,28: *
 1533,29: __buffer
 1533,37: VARIABLE
 1533,37: )
 
186 unsigned 
 1532,22: unsigned
 
106 short 
 1532,31: short
 
106 int 
 1532,37: int
 
298 NAME VARIABLE 
 1532,41: __seed16v
 1532,50: VARIABLE
 
65 VARIABLE 
 1532,50: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1532,50: [
 1532,51: 3
 1532,52: ]
 
188 CONSTANT 
 1532,51: 3
 
305 ] 
 1532,52: ]
 
300 , parameter_declaration 
 1532,53: ,
 1533,8: struct
 1533,15: drand48_data
 1533,27: VARIABLE
 1533,28: *
 1533,29: __buffer
 1533,37: VARIABLE
 
391 struct 
 1533,8: struct
 
22 NAME VARIABLE 
 1533,15: drand48_data
 1533,27: VARIABLE
 
65 VARIABLE 
 1533,27: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1533,28: *
 
386 NAME VARIABLE 
 1533,29: __buffer
 1533,37: VARIABLE
 
65 VARIABLE 
 1533,37: VARIABLE
 
187 ) 
 1533,37: )
 
60 ; 
 1533,40: ;
 
23 extern 
 1535,1: extern
 
8 int 
 1535,8: int
 
5 NAME VARIABLE 
 1535,12: lcong48_r
 1535,21: VARIABLE
 
65 VARIABLE 
 1535,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1535,22: (
 1535,23: unsigned
 1535,32: short
 1535,38: int
 1535,42: __param
 1535,49: VARIABLE
 1535,49: [
 1535,50: 7
 1535,51: ]
 1535,52: ,
 1536,9: struct
 1536,16: drand48_data
 1536,28: VARIABLE
 1536,29: *
 1536,30: __buffer
 1536,38: VARIABLE
 1536,38: )
 
186 unsigned 
 1535,23: unsigned
 
106 short 
 1535,32: short
 
106 int 
 1535,38: int
 
298 NAME VARIABLE 
 1535,42: __param
 1535,49: VARIABLE
 
65 VARIABLE 
 1535,49: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1535,49: [
 1535,50: 7
 1535,51: ]
 
188 CONSTANT 
 1535,50: 7
 
305 ] 
 1535,51: ]
 
300 , parameter_declaration 
 1535,52: ,
 1536,9: struct
 1536,16: drand48_data
 1536,28: VARIABLE
 1536,29: *
 1536,30: __buffer
 1536,38: VARIABLE
 
391 struct 
 1536,9: struct
 
22 NAME VARIABLE 
 1536,16: drand48_data
 1536,28: VARIABLE
 
65 VARIABLE 
 1536,28: VARIABLE
 
298 * option_type_qualifier_list option_pointer 
 1536,29: *
 
386 NAME VARIABLE 
 1536,30: __buffer
 1536,38: VARIABLE
 
65 VARIABLE 
 1536,38: VARIABLE
 
187 ) 
 1536,38: )
 
60 ; 
 1537,7: ;
 
23 extern 
 1542,1: extern
 
8 void 
 1542,8: void
 
5 * option_type_qualifier_list option_pointer 
 1542,13: *
 
64 NAME VARIABLE 
 1542,14: malloc
 1542,20: VARIABLE
 
65 VARIABLE 
 1542,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1542,21: (
 1542,22: size_t
 1542,28: TYPE
 1542,29: __size
 1542,35: VARIABLE
 1542,35: )
 
186 NAME TYPE 
 1542,22: size_t
 1542,28: TYPE
 
65 TYPE 
 1542,28: TYPE
 
298 NAME VARIABLE 
 1542,29: __size
 1542,35: VARIABLE
 
65 VARIABLE 
 1542,35: VARIABLE
 
187 ) 
 1542,35: )
 
60 ; 
 1543,7: ;
 
23 extern 
 1545,1: extern
 
8 void 
 1545,8: void
 
5 * option_type_qualifier_list option_pointer 
 1545,13: *
 
64 NAME VARIABLE 
 1545,14: calloc
 1545,20: VARIABLE
 
65 VARIABLE 
 1545,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1545,21: (
 1545,22: size_t
 1545,28: TYPE
 1545,29: __nmemb
 1545,36: VARIABLE
 1545,36: ,
 1545,38: size_t
 1545,44: TYPE
 1545,45: __size
 1545,51: VARIABLE
 1545,51: )
 
186 NAME TYPE 
 1545,22: size_t
 1545,28: TYPE
 
65 TYPE 
 1545,28: TYPE
 
298 NAME VARIABLE 
 1545,29: __nmemb
 1545,36: VARIABLE
 
65 VARIABLE 
 1545,36: VARIABLE
 
300 , parameter_declaration 
 1545,36: ,
 1545,38: size_t
 1545,44: TYPE
 1545,45: __size
 1545,51: VARIABLE
 
391 NAME TYPE 
 1545,38: size_t
 1545,44: TYPE
 
26 TYPE 
 1545,44: TYPE
 
298 NAME VARIABLE 
 1545,45: __size
 1545,51: VARIABLE
 
65 VARIABLE 
 1545,51: VARIABLE
 
187 ) 
 1545,51: )
 
60 ; 
 1546,9: ;
 
23 extern 
 1553,1: extern
 
8 void 
 1553,8: void
 
5 * option_type_qualifier_list option_pointer 
 1553,13: *
 
64 NAME VARIABLE 
 1553,14: realloc
 1553,21: VARIABLE
 
65 VARIABLE 
 1553,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1553,22: (
 1553,23: void
 1553,28: *
 1553,29: __ptr
 1553,34: VARIABLE
 1553,34: ,
 1553,36: size_t
 1553,42: TYPE
 1553,43: __size
 1553,49: VARIABLE
 1553,49: )
 
186 void 
 1553,23: void
 
298 * option_type_qualifier_list option_pointer 
 1553,28: *
 
386 NAME VARIABLE 
 1553,29: __ptr
 1553,34: VARIABLE
 
65 VARIABLE 
 1553,34: VARIABLE
 
300 , parameter_declaration 
 1553,34: ,
 1553,36: size_t
 1553,42: TYPE
 1553,43: __size
 1553,49: VARIABLE
 
391 NAME TYPE 
 1553,36: size_t
 1553,42: TYPE
 
26 TYPE 
 1553,42: TYPE
 
298 NAME VARIABLE 
 1553,43: __size
 1553,49: VARIABLE
 
65 VARIABLE 
 1553,49: VARIABLE
 
187 ) 
 1553,49: )
 
60 ; 
 1554,8: ;
 
23 extern 
 1557,1: extern
 
8 void 
 1557,8: void
 
5 NAME VARIABLE 
 1557,13: free
 1557,17: VARIABLE
 
65 VARIABLE 
 1557,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1557,18: (
 1557,19: void
 1557,24: *
 1557,25: __ptr
 1557,30: VARIABLE
 1557,30: )
 
186 void 
 1557,19: void
 
298 * option_type_qualifier_list option_pointer 
 1557,24: *
 
386 NAME VARIABLE 
 1557,25: __ptr
 1557,30: VARIABLE
 
65 VARIABLE 
 1557,30: VARIABLE
 
187 ) 
 1557,30: )
 
60 ; 
 1557,32: ;
 
23 extern 
 1565,1: extern
 
8 void 
 1565,8: void
 
5 * option_type_qualifier_list option_pointer 
 1565,13: *
 
64 NAME VARIABLE 
 1565,14: reallocarray
 1565,26: VARIABLE
 
65 VARIABLE 
 1565,26: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1565,27: (
 1565,28: void
 1565,33: *
 1565,34: __ptr
 1565,39: VARIABLE
 1565,39: ,
 1565,41: size_t
 1565,47: TYPE
 1565,48: __nmemb
 1565,55: VARIABLE
 1565,55: ,
 1565,57: size_t
 1565,63: TYPE
 1565,64: __size
 1565,70: VARIABLE
 1565,70: )
 
186 void 
 1565,28: void
 
298 * option_type_qualifier_list option_pointer 
 1565,33: *
 
386 NAME VARIABLE 
 1565,34: __ptr
 1565,39: VARIABLE
 
65 VARIABLE 
 1565,39: VARIABLE
 
300 , parameter_declaration 
 1565,39: ,
 1565,41: size_t
 1565,47: TYPE
 1565,48: __nmemb
 1565,55: VARIABLE
 
391 NAME TYPE 
 1565,41: size_t
 1565,47: TYPE
 
26 TYPE 
 1565,47: TYPE
 
298 NAME VARIABLE 
 1565,48: __nmemb
 1565,55: VARIABLE
 
65 VARIABLE 
 1565,55: VARIABLE
 
300 , parameter_declaration 
 1565,55: ,
 1565,57: size_t
 1565,63: TYPE
 1565,64: __size
 1565,70: VARIABLE
 
391 NAME TYPE 
 1565,57: size_t
 1565,63: TYPE
 
26 TYPE 
 1565,63: TYPE
 
298 NAME VARIABLE 
 1565,64: __size
 1565,70: VARIABLE
 
65 VARIABLE 
 1565,70: VARIABLE
 
187 ) 
 1565,70: )
 
60 ; 
 1568,5: ;
 
23 extern 
 1571,1: extern
 
8 void 
 1571,8: void
 
5 * option_type_qualifier_list option_pointer 
 1571,13: *
 
64 NAME VARIABLE 
 1571,14: reallocarray
 1571,26: VARIABLE
 
65 VARIABLE 
 1571,26: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1571,27: (
 1571,28: void
 1571,33: *
 1571,34: __ptr
 1571,39: VARIABLE
 1571,39: ,
 1571,41: size_t
 1571,47: TYPE
 1571,48: __nmemb
 1571,55: VARIABLE
 1571,55: ,
 1571,57: size_t
 1571,63: TYPE
 1571,64: __size
 1571,70: VARIABLE
 1571,70: )
 
186 void 
 1571,28: void
 
298 * option_type_qualifier_list option_pointer 
 1571,33: *
 
386 NAME VARIABLE 
 1571,34: __ptr
 1571,39: VARIABLE
 
65 VARIABLE 
 1571,39: VARIABLE
 
300 , parameter_declaration 
 1571,39: ,
 1571,41: size_t
 1571,47: TYPE
 1571,48: __nmemb
 1571,55: VARIABLE
 
391 NAME TYPE 
 1571,41: size_t
 1571,47: TYPE
 
26 TYPE 
 1571,47: TYPE
 
298 NAME VARIABLE 
 1571,48: __nmemb
 1571,55: VARIABLE
 
65 VARIABLE 
 1571,55: VARIABLE
 
300 , parameter_declaration 
 1571,55: ,
 1571,57: size_t
 1571,63: TYPE
 1571,64: __size
 1571,70: VARIABLE
 
391 NAME TYPE 
 1571,57: size_t
 1571,63: TYPE
 
26 TYPE 
 1571,63: TYPE
 
298 NAME VARIABLE 
 1571,64: __size
 1571,70: VARIABLE
 
65 VARIABLE 
 1571,70: VARIABLE
 
187 ) 
 1571,70: )
 
60 ; 
 1572,7: ;
 
23 extern 
 1587,1: extern
 
8 void 
 1587,8: void
 
5 * option_type_qualifier_list option_pointer 
 1587,13: *
 
64 NAME VARIABLE 
 1587,14: alloca
 1587,20: VARIABLE
 
65 VARIABLE 
 1587,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1587,21: (
 1587,22: size_t
 1587,28: TYPE
 1587,29: __size
 1587,35: VARIABLE
 1587,35: )
 
186 NAME TYPE 
 1587,22: size_t
 1587,28: TYPE
 
65 TYPE 
 1587,28: TYPE
 
298 NAME VARIABLE 
 1587,29: __size
 1587,35: VARIABLE
 
65 VARIABLE 
 1587,35: VARIABLE
 
187 ) 
 1587,35: )
 
60 ; 
 1587,37: ;
 
23 extern 
 1600,1: extern
 
8 void 
 1600,8: void
 
5 * option_type_qualifier_list option_pointer 
 1600,13: *
 
64 NAME VARIABLE 
 1600,14: valloc
 1600,20: VARIABLE
 
65 VARIABLE 
 1600,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1600,21: (
 1600,22: size_t
 1600,28: TYPE
 1600,29: __size
 1600,35: VARIABLE
 1600,35: )
 
186 NAME TYPE 
 1600,22: size_t
 1600,28: TYPE
 
65 TYPE 
 1600,28: TYPE
 
298 NAME VARIABLE 
 1600,29: __size
 1600,35: VARIABLE
 
65 VARIABLE 
 1600,35: VARIABLE
 
187 ) 
 1600,35: )
 
60 ; 
 1601,7: ;
 
23 extern 
 1606,1: extern
 
8 int 
 1606,8: int
 
5 NAME VARIABLE 
 1606,12: posix_memalign
 1606,26: VARIABLE
 
65 VARIABLE 
 1606,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1606,27: (
 1606,28: void
 1606,33: *
 1606,34: *
 1606,35: __memptr
 1606,43: VARIABLE
 1606,43: ,
 1606,45: size_t
 1606,51: TYPE
 1606,52: __alignment
 1606,63: VARIABLE
 1606,63: ,
 1606,65: size_t
 1606,71: TYPE
 1606,72: __size
 1606,78: VARIABLE
 1606,78: )
 
186 void 
 1606,28: void
 
298 * option_type_qualifier_list option_pointer 
 1606,33: *
 1606,34: *
 
116 * option_type_qualifier_list option_pointer 
 1606,34: *
 
386 NAME VARIABLE 
 1606,35: __memptr
 1606,43: VARIABLE
 
65 VARIABLE 
 1606,43: VARIABLE
 
300 , parameter_declaration 
 1606,43: ,
 1606,45: size_t
 1606,51: TYPE
 1606,52: __alignment
 1606,63: VARIABLE
 
391 NAME TYPE 
 1606,45: size_t
 1606,51: TYPE
 
26 TYPE 
 1606,51: TYPE
 
298 NAME VARIABLE 
 1606,52: __alignment
 1606,63: VARIABLE
 
65 VARIABLE 
 1606,63: VARIABLE
 
300 , parameter_declaration 
 1606,63: ,
 1606,65: size_t
 1606,71: TYPE
 1606,72: __size
 1606,78: VARIABLE
 
391 NAME TYPE 
 1606,65: size_t
 1606,71: TYPE
 
26 TYPE 
 1606,71: TYPE
 
298 NAME VARIABLE 
 1606,72: __size
 1606,78: VARIABLE
 
65 VARIABLE 
 1606,78: VARIABLE
 
187 ) 
 1606,78: )
 
60 ; 
 1607,8: ;
 
23 extern 
 1612,1: extern
 
8 void 
 1612,8: void
 
5 * option_type_qualifier_list option_pointer 
 1612,13: *
 
64 NAME VARIABLE 
 1612,14: aligned_alloc
 1612,27: VARIABLE
 
65 VARIABLE 
 1612,27: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1612,28: (
 1612,29: size_t
 1612,35: TYPE
 1612,36: __alignment
 1612,47: VARIABLE
 1612,47: ,
 1612,49: size_t
 1612,55: TYPE
 1612,56: __size
 1612,62: VARIABLE
 1612,62: )
 
186 NAME TYPE 
 1612,29: size_t
 1612,35: TYPE
 
65 TYPE 
 1612,35: TYPE
 
298 NAME VARIABLE 
 1612,36: __alignment
 1612,47: VARIABLE
 
65 VARIABLE 
 1612,47: VARIABLE
 
300 , parameter_declaration 
 1612,47: ,
 1612,49: size_t
 1612,55: TYPE
 1612,56: __size
 1612,62: VARIABLE
 
391 NAME TYPE 
 1612,49: size_t
 1612,55: TYPE
 
26 TYPE 
 1612,55: TYPE
 
298 NAME VARIABLE 
 1612,56: __size
 1612,62: VARIABLE
 
65 VARIABLE 
 1612,62: VARIABLE
 
187 ) 
 1612,62: )
 
60 ; 
 1614,7: ;
 
23 extern 
 1618,1: extern
 
8 void 
 1618,8: void
 
5 NAME VARIABLE 
 1618,13: abort
 1618,18: VARIABLE
 
65 VARIABLE 
 1618,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1618,19: (
 1618,20: void
 1618,24: )
 
186 void 
 1618,20: void
 
187 ) 
 1618,24: )
 
60 ; 
 1618,27: ;
 
23 extern 
 1622,1: extern
 
8 int 
 1622,8: int
 
5 NAME VARIABLE 
 1622,12: atexit
 1622,18: VARIABLE
 
65 VARIABLE 
 1622,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1622,19: (
 1622,20: void
 1622,25: (
 1622,26: *
 1622,27: __func
 1622,33: VARIABLE
 1622,33: )
 1622,35: (
 1622,36: void
 1622,40: )
 1622,41: )
 
186 void 
 1622,20: void
 
298 ( save_context declarator ) 
 1622,25: (
 1622,26: *
 1622,27: __func
 1622,33: VARIABLE
 1622,33: )
 
445 * option_type_qualifier_list option_pointer 
 1622,26: *
 
386 NAME VARIABLE 
 1622,27: __func
 1622,33: VARIABLE
 
65 VARIABLE 
 1622,33: VARIABLE
 
191 ) 
 1622,33: )
 
63 ( scoped_parameter_type_list ) 
 1622,35: (
 1622,36: void
 1622,40: )
 
186 void 
 1622,36: void
 
187 ) 
 1622,40: )
 
187 ) 
 1622,41: )
 
60 ; 
 1622,44: ;
 
23 extern 
 1630,1: extern
 
8 int 
 1630,8: int
 
5 NAME VARIABLE 
 1630,12: at_quick_exit
 1630,25: VARIABLE
 
65 VARIABLE 
 1630,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1630,26: (
 1630,27: void
 1630,32: (
 1630,33: *
 1630,34: __func
 1630,40: VARIABLE
 1630,40: )
 1630,42: (
 1630,43: void
 1630,47: )
 1630,48: )
 
186 void 
 1630,27: void
 
298 ( save_context declarator ) 
 1630,32: (
 1630,33: *
 1630,34: __func
 1630,40: VARIABLE
 1630,40: )
 
445 * option_type_qualifier_list option_pointer 
 1630,33: *
 
386 NAME VARIABLE 
 1630,34: __func
 1630,40: VARIABLE
 
65 VARIABLE 
 1630,40: VARIABLE
 
191 ) 
 1630,40: )
 
63 ( scoped_parameter_type_list ) 
 1630,42: (
 1630,43: void
 1630,47: )
 
186 void 
 1630,43: void
 
187 ) 
 1630,47: )
 
187 ) 
 1630,48: )
 
60 ; 
 1630,51: ;
 
23 extern 
 1637,1: extern
 
8 int 
 1637,8: int
 
5 NAME VARIABLE 
 1637,12: on_exit
 1637,19: VARIABLE
 
65 VARIABLE 
 1637,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1637,20: (
 1637,21: void
 1637,26: (
 1637,27: *
 1637,28: __func
 1637,34: VARIABLE
 1637,34: )
 1637,36: (
 1637,37: int
 1637,41: __status
 1637,49: VARIABLE
 1637,49: ,
 1637,51: void
 1637,56: *
 1637,57: __arg
 1637,62: VARIABLE
 1637,62: )
 1637,63: ,
 1637,65: void
 1637,70: *
 1637,71: __arg
 1637,76: VARIABLE
 1637,76: )
 
186 void 
 1637,21: void
 
298 ( save_context declarator ) 
 1637,26: (
 1637,27: *
 1637,28: __func
 1637,34: VARIABLE
 1637,34: )
 
445 * option_type_qualifier_list option_pointer 
 1637,27: *
 
386 NAME VARIABLE 
 1637,28: __func
 1637,34: VARIABLE
 
65 VARIABLE 
 1637,34: VARIABLE
 
191 ) 
 1637,34: )
 
63 ( scoped_parameter_type_list ) 
 1637,36: (
 1637,37: int
 1637,41: __status
 1637,49: VARIABLE
 1637,49: ,
 1637,51: void
 1637,56: *
 1637,57: __arg
 1637,62: VARIABLE
 1637,62: )
 
186 int 
 1637,37: int
 
298 NAME VARIABLE 
 1637,41: __status
 1637,49: VARIABLE
 
65 VARIABLE 
 1637,49: VARIABLE
 
300 , parameter_declaration 
 1637,49: ,
 1637,51: void
 1637,56: *
 1637,57: __arg
 1637,62: VARIABLE
 
391 void 
 1637,51: void
 
298 * option_type_qualifier_list option_pointer 
 1637,56: *
 
386 NAME VARIABLE 
 1637,57: __arg
 1637,62: VARIABLE
 
65 VARIABLE 
 1637,62: VARIABLE
 
187 ) 
 1637,62: )
 
300 , parameter_declaration 
 1637,63: ,
 1637,65: void
 1637,70: *
 1637,71: __arg
 1637,76: VARIABLE
 
391 void 
 1637,65: void
 
298 * option_type_qualifier_list option_pointer 
 1637,70: *
 
386 NAME VARIABLE 
 1637,71: __arg
 1637,76: VARIABLE
 
65 VARIABLE 
 1637,76: VARIABLE
 
187 ) 
 1637,76: )
 
60 ; 
 1638,7: ;
 
23 extern 
 1644,1: extern
 
8 void 
 1644,8: void
 
5 NAME VARIABLE 
 1644,13: exit
 1644,17: VARIABLE
 
65 VARIABLE 
 1644,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1644,18: (
 1644,19: int
 1644,23: __status
 1644,31: VARIABLE
 1644,31: )
 
186 int 
 1644,19: int
 
298 NAME VARIABLE 
 1644,23: __status
 1644,31: VARIABLE
 
65 VARIABLE 
 1644,31: VARIABLE
 
187 ) 
 1644,31: )
 
60 ; 
 1644,34: ;
 
23 extern 
 1650,1: extern
 
8 void 
 1650,8: void
 
5 NAME VARIABLE 
 1650,13: quick_exit
 1650,23: VARIABLE
 
65 VARIABLE 
 1650,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1650,24: (
 1650,25: int
 1650,29: __status
 1650,37: VARIABLE
 1650,37: )
 
186 int 
 1650,25: int
 
298 NAME VARIABLE 
 1650,29: __status
 1650,37: VARIABLE
 
65 VARIABLE 
 1650,37: VARIABLE
 
187 ) 
 1650,37: )
 
60 ; 
 1650,40: ;
 
23 extern 
 1656,1: extern
 
8 void 
 1656,8: void
 
5 NAME VARIABLE 
 1656,13: _Exit
 1656,18: VARIABLE
 
65 VARIABLE 
 1656,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1656,19: (
 1656,20: int
 1656,24: __status
 1656,32: VARIABLE
 1656,32: )
 
186 int 
 1656,20: int
 
298 NAME VARIABLE 
 1656,24: __status
 1656,32: VARIABLE
 
65 VARIABLE 
 1656,32: VARIABLE
 
187 ) 
 1656,32: )
 
60 ; 
 1656,35: ;
 
23 extern 
 1661,1: extern
 
8 char 
 1661,8: char
 
5 * option_type_qualifier_list option_pointer 
 1661,13: *
 
64 NAME VARIABLE 
 1661,14: getenv
 1661,20: VARIABLE
 
65 VARIABLE 
 1661,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1661,21: (
 1661,22: const
 1661,28: char
 1661,33: *
 1661,34: __name
 1661,40: VARIABLE
 1661,40: )
 
186 const 
 1661,22: const
 
103 char 
 1661,28: char
 
298 * option_type_qualifier_list option_pointer 
 1661,33: *
 
386 NAME VARIABLE 
 1661,34: __name
 1661,40: VARIABLE
 
65 VARIABLE 
 1661,40: VARIABLE
 
187 ) 
 1661,40: )
 
60 ; 
 1661,44: ;
 
23 extern 
 1663,1: extern
 
8 int 
 1663,8: int
 
5 NAME VARIABLE 
 1663,12: putenv
 1663,18: VARIABLE
 
65 VARIABLE 
 1663,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1663,19: (
 1663,20: char
 1663,25: *
 1663,26: __string
 1663,34: VARIABLE
 1663,34: )
 
186 char 
 1663,20: char
 
298 * option_type_qualifier_list option_pointer 
 1663,25: *
 
386 NAME VARIABLE 
 1663,26: __string
 1663,34: VARIABLE
 
65 VARIABLE 
 1663,34: VARIABLE
 
187 ) 
 1663,34: )
 
60 ; 
 1663,37: ;
 
23 extern 
 1669,1: extern
 
8 int 
 1669,8: int
 
5 NAME VARIABLE 
 1669,12: setenv
 1669,18: VARIABLE
 
65 VARIABLE 
 1669,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1669,19: (
 1669,20: const
 1669,26: char
 1669,31: *
 1669,32: __name
 1669,38: VARIABLE
 1669,38: ,
 1669,40: const
 1669,46: char
 1669,51: *
 1669,52: __value
 1669,59: VARIABLE
 1669,59: ,
 1669,61: int
 1669,65: __replace
 1669,74: VARIABLE
 1669,74: )
 
186 const 
 1669,20: const
 
103 char 
 1669,26: char
 
298 * option_type_qualifier_list option_pointer 
 1669,31: *
 
386 NAME VARIABLE 
 1669,32: __name
 1669,38: VARIABLE
 
65 VARIABLE 
 1669,38: VARIABLE
 
300 , parameter_declaration 
 1669,38: ,
 1669,40: const
 1669,46: char
 1669,51: *
 1669,52: __value
 1669,59: VARIABLE
 
391 const 
 1669,40: const
 
103 char 
 1669,46: char
 
298 * option_type_qualifier_list option_pointer 
 1669,51: *
 
386 NAME VARIABLE 
 1669,52: __value
 1669,59: VARIABLE
 
65 VARIABLE 
 1669,59: VARIABLE
 
300 , parameter_declaration 
 1669,59: ,
 1669,61: int
 1669,65: __replace
 1669,74: VARIABLE
 
391 int 
 1669,61: int
 
298 NAME VARIABLE 
 1669,65: __replace
 1669,74: VARIABLE
 
65 VARIABLE 
 1669,74: VARIABLE
 
187 ) 
 1669,74: )
 
60 ; 
 1670,7: ;
 
23 extern 
 1673,1: extern
 
8 int 
 1673,8: int
 
5 NAME VARIABLE 
 1673,12: unsetenv
 1673,20: VARIABLE
 
65 VARIABLE 
 1673,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1673,21: (
 1673,22: const
 1673,28: char
 1673,33: *
 1673,34: __name
 1673,40: VARIABLE
 1673,40: )
 
186 const 
 1673,22: const
 
103 char 
 1673,28: char
 
298 * option_type_qualifier_list option_pointer 
 1673,33: *
 
386 NAME VARIABLE 
 1673,34: __name
 1673,40: VARIABLE
 
65 VARIABLE 
 1673,40: VARIABLE
 
187 ) 
 1673,40: )
 
60 ; 
 1673,43: ;
 
23 extern 
 1680,1: extern
 
8 int 
 1680,8: int
 
5 NAME VARIABLE 
 1680,12: clearenv
 1680,20: VARIABLE
 
65 VARIABLE 
 1680,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1680,21: (
 1680,22: void
 1680,26: )
 
186 void 
 1680,22: void
 
187 ) 
 1680,26: )
 
60 ; 
 1680,28: ;
 
23 extern 
 1682,1: extern
 
8 char 
 1682,8: char
 
5 * option_type_qualifier_list option_pointer 
 1682,13: *
 
64 NAME VARIABLE 
 1682,14: mktemp
 1682,20: VARIABLE
 
65 VARIABLE 
 1682,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1682,21: (
 1682,22: char
 1682,27: *
 1682,28: __template
 1682,38: VARIABLE
 1682,38: )
 
186 char 
 1682,22: char
 
298 * option_type_qualifier_list option_pointer 
 1682,27: *
 
386 NAME VARIABLE 
 1682,28: __template
 1682,38: VARIABLE
 
65 VARIABLE 
 1682,38: VARIABLE
 
187 ) 
 1682,38: )
 
60 ; 
 1682,41: ;
 
23 extern 
 1684,1: extern
 
8 int 
 1684,8: int
 
5 NAME VARIABLE 
 1684,12: mkstemp
 1684,19: VARIABLE
 
65 VARIABLE 
 1684,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1684,20: (
 1684,21: char
 1684,26: *
 1684,27: __template
 1684,37: VARIABLE
 1684,37: )
 
186 char 
 1684,21: char
 
298 * option_type_qualifier_list option_pointer 
 1684,26: *
 
386 NAME VARIABLE 
 1684,27: __template
 1684,37: VARIABLE
 
65 VARIABLE 
 1684,37: VARIABLE
 
187 ) 
 1684,37: )
 
60 ; 
 1684,40: ;
 
23 extern 
 1686,1: extern
 
8 int 
 1686,8: int
 
5 NAME VARIABLE 
 1686,12: mkstemps
 1686,20: VARIABLE
 
65 VARIABLE 
 1686,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1686,21: (
 1686,22: char
 1686,27: *
 1686,28: __template
 1686,38: VARIABLE
 1686,38: ,
 1686,40: int
 1686,44: __suffixlen
 1686,55: VARIABLE
 1686,55: )
 
186 char 
 1686,22: char
 
298 * option_type_qualifier_list option_pointer 
 1686,27: *
 
386 NAME VARIABLE 
 1686,28: __template
 1686,38: VARIABLE
 
65 VARIABLE 
 1686,38: VARIABLE
 
300 , parameter_declaration 
 1686,38: ,
 1686,40: int
 1686,44: __suffixlen
 1686,55: VARIABLE
 
391 int 
 1686,40: int
 
298 NAME VARIABLE 
 1686,44: __suffixlen
 1686,55: VARIABLE
 
65 VARIABLE 
 1686,55: VARIABLE
 
187 ) 
 1686,55: )
 
60 ; 
 1686,58: ;
 
23 extern 
 1688,1: extern
 
8 char 
 1688,8: char
 
5 * option_type_qualifier_list option_pointer 
 1688,13: *
 
64 NAME VARIABLE 
 1688,14: mkdtemp
 1688,21: VARIABLE
 
65 VARIABLE 
 1688,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1688,22: (
 1688,23: char
 1688,28: *
 1688,29: __template
 1688,39: VARIABLE
 1688,39: )
 
186 char 
 1688,23: char
 
298 * option_type_qualifier_list option_pointer 
 1688,28: *
 
386 NAME VARIABLE 
 1688,29: __template
 1688,39: VARIABLE
 
65 VARIABLE 
 1688,39: VARIABLE
 
187 ) 
 1688,39: )
 
60 ; 
 1688,43: ;
 
23 extern 
 1690,1: extern
 
8 int 
 1690,8: int
 
5 NAME VARIABLE 
 1690,12: system
 1690,18: VARIABLE
 
65 VARIABLE 
 1690,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1690,19: (
 1690,20: const
 1690,26: char
 1690,31: *
 1690,32: __command
 1690,41: VARIABLE
 1690,41: )
 
186 const 
 1690,20: const
 
103 char 
 1690,26: char
 
298 * option_type_qualifier_list option_pointer 
 1690,31: *
 
386 NAME VARIABLE 
 1690,32: __command
 1690,41: VARIABLE
 
65 VARIABLE 
 1690,41: VARIABLE
 
187 ) 
 1690,41: )
 
60 ; 
 1690,43: ;
 
23 extern 
 1692,1: extern
 
8 char 
 1692,8: char
 
5 * option_type_qualifier_list option_pointer 
 1692,13: *
 
64 NAME VARIABLE 
 1692,14: realpath
 1692,22: VARIABLE
 
65 VARIABLE 
 1692,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1692,23: (
 1692,24: const
 1692,30: char
 1692,35: *
 1692,37: __name
 1692,43: VARIABLE
 1692,43: ,
 1693,10: char
 1693,15: *
 1693,17: __resolved
 1693,27: VARIABLE
 1693,27: )
 
186 const 
 1692,24: const
 
103 char 
 1692,30: char
 
298 * option_type_qualifier_list option_pointer 
 1692,35: *
 
386 NAME VARIABLE 
 1692,37: __name
 1692,43: VARIABLE
 
65 VARIABLE 
 1692,43: VARIABLE
 
300 , parameter_declaration 
 1692,43: ,
 1693,10: char
 1693,15: *
 1693,17: __resolved
 1693,27: VARIABLE
 
391 char 
 1693,10: char
 
298 * option_type_qualifier_list option_pointer 
 1693,15: *
 
386 NAME VARIABLE 
 1693,17: __resolved
 1693,27: VARIABLE
 
65 VARIABLE 
 1693,27: VARIABLE
 
187 ) 
 1693,27: )
 
60 ; 
 1693,30: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 1700,1: typedef
 1700,9: int
 
54 int 
 1700,9: int
 
6 ( save_context declarator ) 
 1700,13: (
 1700,14: *
 1700,15: __compar_fn_t
 1700,28: VARIABLE
 1700,28: )
 
115 * option_type_qualifier_list option_pointer 
 1700,14: *
 
64 NAME VARIABLE 
 1700,15: __compar_fn_t
 1700,28: VARIABLE
 
65 VARIABLE 
 1700,28: VARIABLE
 
191 ) 
 1700,28: )
 
63 ( scoped_parameter_type_list ) 
 1700,30: (
 1700,31: const
 1700,37: void
 1700,42: *
 1700,43: ,
 1700,45: const
 1700,51: void
 1700,56: *
 1700,57: )
 
186 const 
 1700,31: const
 
103 void 
 1700,37: void
 
298 * option_type_qualifier_list option_pointer 
 1700,42: *
 
300 , parameter_declaration 
 1700,43: ,
 1700,45: const
 1700,51: void
 1700,56: *
 
391 const 
 1700,45: const
 
103 void 
 1700,51: void
 
298 * option_type_qualifier_list option_pointer 
 1700,56: *
 
187 ) 
 1700,57: )
 
70 ; 
 1700,58: ;
 
23 extern 
 1702,1: extern
 
8 void 
 1702,8: void
 
5 * option_type_qualifier_list option_pointer 
 1702,13: *
 
64 NAME VARIABLE 
 1702,14: bsearch
 1702,21: VARIABLE
 
65 VARIABLE 
 1702,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1702,22: (
 1702,23: const
 1702,29: void
 1702,34: *
 1702,35: __key
 1702,40: VARIABLE
 1702,40: ,
 1702,42: const
 1702,48: void
 1702,53: *
 1702,54: __base
 1702,60: VARIABLE
 1702,60: ,
 1703,9: size_t
 1703,15: TYPE
 1703,16: __nmemb
 1703,23: VARIABLE
 1703,23: ,
 1703,25: size_t
 1703,31: TYPE
 1703,32: __size
 1703,38: VARIABLE
 1703,38: ,
 1703,40: __compar_fn_t
 1703,53: TYPE
 1703,54: __compar
 1703,62: VARIABLE
 1703,62: )
 
186 const 
 1702,23: const
 
103 void 
 1702,29: void
 
298 * option_type_qualifier_list option_pointer 
 1702,34: *
 
386 NAME VARIABLE 
 1702,35: __key
 1702,40: VARIABLE
 
65 VARIABLE 
 1702,40: VARIABLE
 
300 , parameter_declaration 
 1702,40: ,
 1702,42: const
 1702,48: void
 1702,53: *
 1702,54: __base
 1702,60: VARIABLE
 
391 const 
 1702,42: const
 
103 void 
 1702,48: void
 
298 * option_type_qualifier_list option_pointer 
 1702,53: *
 
386 NAME VARIABLE 
 1702,54: __base
 1702,60: VARIABLE
 
65 VARIABLE 
 1702,60: VARIABLE
 
300 , parameter_declaration 
 1702,60: ,
 1703,9: size_t
 1703,15: TYPE
 1703,16: __nmemb
 1703,23: VARIABLE
 
391 NAME TYPE 
 1703,9: size_t
 1703,15: TYPE
 
26 TYPE 
 1703,15: TYPE
 
298 NAME VARIABLE 
 1703,16: __nmemb
 1703,23: VARIABLE
 
65 VARIABLE 
 1703,23: VARIABLE
 
300 , parameter_declaration 
 1703,23: ,
 1703,25: size_t
 1703,31: TYPE
 1703,32: __size
 1703,38: VARIABLE
 
391 NAME TYPE 
 1703,25: size_t
 1703,31: TYPE
 
26 TYPE 
 1703,31: TYPE
 
298 NAME VARIABLE 
 1703,32: __size
 1703,38: VARIABLE
 
65 VARIABLE 
 1703,38: VARIABLE
 
300 , parameter_declaration 
 1703,38: ,
 1703,40: __compar_fn_t
 1703,53: TYPE
 1703,54: __compar
 1703,62: VARIABLE
 
391 NAME TYPE 
 1703,40: __compar_fn_t
 1703,53: TYPE
 
26 TYPE 
 1703,53: TYPE
 
298 NAME VARIABLE 
 1703,54: __compar
 1703,62: VARIABLE
 
65 VARIABLE 
 1703,62: VARIABLE
 
187 ) 
 1703,62: )
 
60 ; 
 1704,7: ;
 
23 extern 
 1712,1: extern
 
8 void 
 1712,8: void
 
5 NAME VARIABLE 
 1712,13: qsort
 1712,18: VARIABLE
 
65 VARIABLE 
 1712,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1712,19: (
 1712,20: void
 1712,25: *
 1712,26: __base
 1712,32: VARIABLE
 1712,32: ,
 1712,34: size_t
 1712,40: TYPE
 1712,41: __nmemb
 1712,48: VARIABLE
 1712,48: ,
 1712,50: size_t
 1712,56: TYPE
 1712,57: __size
 1712,63: VARIABLE
 1712,63: ,
 1713,6: __compar_fn_t
 1713,19: TYPE
 1713,20: __compar
 1713,28: VARIABLE
 1713,28: )
 
186 void 
 1712,20: void
 
298 * option_type_qualifier_list option_pointer 
 1712,25: *
 
386 NAME VARIABLE 
 1712,26: __base
 1712,32: VARIABLE
 
65 VARIABLE 
 1712,32: VARIABLE
 
300 , parameter_declaration 
 1712,32: ,
 1712,34: size_t
 1712,40: TYPE
 1712,41: __nmemb
 1712,48: VARIABLE
 
391 NAME TYPE 
 1712,34: size_t
 1712,40: TYPE
 
26 TYPE 
 1712,40: TYPE
 
298 NAME VARIABLE 
 1712,41: __nmemb
 1712,48: VARIABLE
 
65 VARIABLE 
 1712,48: VARIABLE
 
300 , parameter_declaration 
 1712,48: ,
 1712,50: size_t
 1712,56: TYPE
 1712,57: __size
 1712,63: VARIABLE
 
391 NAME TYPE 
 1712,50: size_t
 1712,56: TYPE
 
26 TYPE 
 1712,56: TYPE
 
298 NAME VARIABLE 
 1712,57: __size
 1712,63: VARIABLE
 
65 VARIABLE 
 1712,63: VARIABLE
 
300 , parameter_declaration 
 1712,63: ,
 1713,6: __compar_fn_t
 1713,19: TYPE
 1713,20: __compar
 1713,28: VARIABLE
 
391 NAME TYPE 
 1713,6: __compar_fn_t
 1713,19: TYPE
 
26 TYPE 
 1713,19: TYPE
 
298 NAME VARIABLE 
 1713,20: __compar
 1713,28: VARIABLE
 
65 VARIABLE 
 1713,28: VARIABLE
 
187 ) 
 1713,28: )
 
60 ; 
 1713,30: ;
 
23 extern 
 1715,1: extern
 
8 int 
 1715,8: int
 
5 NAME VARIABLE 
 1715,12: abs
 1715,15: VARIABLE
 
65 VARIABLE 
 1715,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1715,16: (
 1715,17: int
 1715,21: __x
 1715,24: VARIABLE
 1715,24: )
 
186 int 
 1715,17: int
 
298 NAME VARIABLE 
 1715,21: __x
 1715,24: VARIABLE
 
65 VARIABLE 
 1715,24: VARIABLE
 
187 ) 
 1715,24: )
 
60 ; 
 1715,28: ;
 
23 extern 
 1716,1: extern
 
8 long 
 1716,8: long
 
17 int 
 1716,13: int
 
5 NAME VARIABLE 
 1716,17: labs
 1716,21: VARIABLE
 
65 VARIABLE 
 1716,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1716,22: (
 1716,23: long
 1716,28: int
 1716,32: __x
 1716,35: VARIABLE
 1716,35: )
 
186 long 
 1716,23: long
 
106 int 
 1716,28: int
 
298 NAME VARIABLE 
 1716,32: __x
 1716,35: VARIABLE
 
65 VARIABLE 
 1716,35: VARIABLE
 
187 ) 
 1716,35: )
 
60 ; 
 1716,39: ;
 
23 extern 
 1719,2: extern
 
8 long 
 1719,9: long
 
17 long 
 1719,14: long
 
17 int 
 1719,19: int
 
5 NAME VARIABLE 
 1719,23: llabs
 1719,28: VARIABLE
 
65 VARIABLE 
 1719,28: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1719,29: (
 1719,30: long
 1719,35: long
 1719,40: int
 1719,44: __x
 1719,47: VARIABLE
 1719,47: )
 
186 long 
 1719,30: long
 
106 long 
 1719,35: long
 
106 int 
 1719,40: int
 
298 NAME VARIABLE 
 1719,44: __x
 1719,47: VARIABLE
 
65 VARIABLE 
 1719,47: VARIABLE
 
187 ) 
 1719,47: )
 
60 ; 
 1720,8: ;
 
23 extern 
 1727,1: extern
 
8 NAME TYPE 
 1727,8: div_t
 1727,13: TYPE
 
26 TYPE 
 1727,13: TYPE
 
5 NAME VARIABLE 
 1727,14: div
 1727,17: VARIABLE
 
65 VARIABLE 
 1727,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1727,18: (
 1727,19: int
 1727,23: __numer
 1727,30: VARIABLE
 1727,30: ,
 1727,32: int
 1727,36: __denom
 1727,43: VARIABLE
 1727,43: )
 
186 int 
 1727,19: int
 
298 NAME VARIABLE 
 1727,23: __numer
 1727,30: VARIABLE
 
65 VARIABLE 
 1727,30: VARIABLE
 
300 , parameter_declaration 
 1727,30: ,
 1727,32: int
 1727,36: __denom
 1727,43: VARIABLE
 
391 int 
 1727,32: int
 
298 NAME VARIABLE 
 1727,36: __denom
 1727,43: VARIABLE
 
65 VARIABLE 
 1727,43: VARIABLE
 
187 ) 
 1727,43: )
 
60 ; 
 1728,8: ;
 
23 extern 
 1729,1: extern
 
8 NAME TYPE 
 1729,8: ldiv_t
 1729,14: TYPE
 
26 TYPE 
 1729,14: TYPE
 
5 NAME VARIABLE 
 1729,15: ldiv
 1729,19: VARIABLE
 
65 VARIABLE 
 1729,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1729,20: (
 1729,21: long
 1729,26: int
 1729,30: __numer
 1729,37: VARIABLE
 1729,37: ,
 1729,39: long
 1729,44: int
 1729,48: __denom
 1729,55: VARIABLE
 1729,55: )
 
186 long 
 1729,21: long
 
106 int 
 1729,26: int
 
298 NAME VARIABLE 
 1729,30: __numer
 1729,37: VARIABLE
 
65 VARIABLE 
 1729,37: VARIABLE
 
300 , parameter_declaration 
 1729,37: ,
 1729,39: long
 1729,44: int
 1729,48: __denom
 1729,55: VARIABLE
 
391 long 
 1729,39: long
 
106 int 
 1729,44: int
 
298 NAME VARIABLE 
 1729,48: __denom
 1729,55: VARIABLE
 
65 VARIABLE 
 1729,55: VARIABLE
 
187 ) 
 1729,55: )
 
60 ; 
 1730,8: ;
 
23 extern 
 1733,2: extern
 
8 NAME TYPE 
 1733,9: lldiv_t
 1733,16: TYPE
 
26 TYPE 
 1733,16: TYPE
 
5 NAME VARIABLE 
 1733,17: lldiv
 1733,22: VARIABLE
 
65 VARIABLE 
 1733,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1733,23: (
 1733,24: long
 1733,29: long
 1733,34: int
 1733,38: __numer
 1733,45: VARIABLE
 1733,45: ,
 1734,9: long
 1734,14: long
 1734,19: int
 1734,23: __denom
 1734,30: VARIABLE
 1734,30: )
 
186 long 
 1733,24: long
 
106 long 
 1733,29: long
 
106 int 
 1733,34: int
 
298 NAME VARIABLE 
 1733,38: __numer
 1733,45: VARIABLE
 
65 VARIABLE 
 1733,45: VARIABLE
 
300 , parameter_declaration 
 1733,45: ,
 1734,9: long
 1734,14: long
 1734,19: int
 1734,23: __denom
 1734,30: VARIABLE
 
391 long 
 1734,9: long
 
106 long 
 1734,14: long
 
106 int 
 1734,19: int
 
298 NAME VARIABLE 
 1734,23: __denom
 1734,30: VARIABLE
 
65 VARIABLE 
 1734,30: VARIABLE
 
187 ) 
 1734,30: )
 
60 ; 
 1735,8: ;
 
23 extern 
 1737,1: extern
 
8 char 
 1737,8: char
 
5 * option_type_qualifier_list option_pointer 
 1737,13: *
 
64 NAME VARIABLE 
 1737,14: ecvt
 1737,18: VARIABLE
 
65 VARIABLE 
 1737,18: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1737,19: (
 1737,20: double
 1737,27: __value
 1737,34: VARIABLE
 1737,34: ,
 1737,36: int
 1737,40: __ndigit
 1737,48: VARIABLE
 1737,48: ,
 1737,50: int
 1737,54: *
 1737,56: __decpt
 1737,63: VARIABLE
 1737,63: ,
 1738,6: int
 1738,10: *
 1738,12: __sign
 1738,18: VARIABLE
 1738,18: )
 
186 double 
 1737,20: double
 
298 NAME VARIABLE 
 1737,27: __value
 1737,34: VARIABLE
 
65 VARIABLE 
 1737,34: VARIABLE
 
300 , parameter_declaration 
 1737,34: ,
 1737,36: int
 1737,40: __ndigit
 1737,48: VARIABLE
 
391 int 
 1737,36: int
 
298 NAME VARIABLE 
 1737,40: __ndigit
 1737,48: VARIABLE
 
65 VARIABLE 
 1737,48: VARIABLE
 
300 , parameter_declaration 
 1737,48: ,
 1737,50: int
 1737,54: *
 1737,56: __decpt
 1737,63: VARIABLE
 
391 int 
 1737,50: int
 
298 * option_type_qualifier_list option_pointer 
 1737,54: *
 
386 NAME VARIABLE 
 1737,56: __decpt
 1737,63: VARIABLE
 
65 VARIABLE 
 1737,63: VARIABLE
 
300 , parameter_declaration 
 1737,63: ,
 1738,6: int
 1738,10: *
 1738,12: __sign
 1738,18: VARIABLE
 
391 int 
 1738,6: int
 
298 * option_type_qualifier_list option_pointer 
 1738,10: *
 
386 NAME VARIABLE 
 1738,12: __sign
 1738,18: VARIABLE
 
65 VARIABLE 
 1738,18: VARIABLE
 
187 ) 
 1738,18: )
 
60 ; 
 1738,22: ;
 
23 extern 
 1743,1: extern
 
8 char 
 1743,8: char
 
5 * option_type_qualifier_list option_pointer 
 1743,13: *
 
64 NAME VARIABLE 
 1743,14: fcvt
 1743,18: VARIABLE
 
65 VARIABLE 
 1743,18: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1743,19: (
 1743,20: double
 1743,27: __value
 1743,34: VARIABLE
 1743,34: ,
 1743,36: int
 1743,40: __ndigit
 1743,48: VARIABLE
 1743,48: ,
 1743,50: int
 1743,54: *
 1743,56: __decpt
 1743,63: VARIABLE
 1743,63: ,
 1744,6: int
 1744,10: *
 1744,12: __sign
 1744,18: VARIABLE
 1744,18: )
 
186 double 
 1743,20: double
 
298 NAME VARIABLE 
 1743,27: __value
 1743,34: VARIABLE
 
65 VARIABLE 
 1743,34: VARIABLE
 
300 , parameter_declaration 
 1743,34: ,
 1743,36: int
 1743,40: __ndigit
 1743,48: VARIABLE
 
391 int 
 1743,36: int
 
298 NAME VARIABLE 
 1743,40: __ndigit
 1743,48: VARIABLE
 
65 VARIABLE 
 1743,48: VARIABLE
 
300 , parameter_declaration 
 1743,48: ,
 1743,50: int
 1743,54: *
 1743,56: __decpt
 1743,63: VARIABLE
 
391 int 
 1743,50: int
 
298 * option_type_qualifier_list option_pointer 
 1743,54: *
 
386 NAME VARIABLE 
 1743,56: __decpt
 1743,63: VARIABLE
 
65 VARIABLE 
 1743,63: VARIABLE
 
300 , parameter_declaration 
 1743,63: ,
 1744,6: int
 1744,10: *
 1744,12: __sign
 1744,18: VARIABLE
 
391 int 
 1744,6: int
 
298 * option_type_qualifier_list option_pointer 
 1744,10: *
 
386 NAME VARIABLE 
 1744,12: __sign
 1744,18: VARIABLE
 
65 VARIABLE 
 1744,18: VARIABLE
 
187 ) 
 1744,18: )
 
60 ; 
 1744,22: ;
 
23 extern 
 1749,1: extern
 
8 char 
 1749,8: char
 
5 * option_type_qualifier_list option_pointer 
 1749,13: *
 
64 NAME VARIABLE 
 1749,14: gcvt
 1749,18: VARIABLE
 
65 VARIABLE 
 1749,18: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1749,19: (
 1749,20: double
 1749,27: __value
 1749,34: VARIABLE
 1749,34: ,
 1749,36: int
 1749,40: __ndigit
 1749,48: VARIABLE
 1749,48: ,
 1749,50: char
 1749,55: *
 1749,56: __buf
 1749,61: VARIABLE
 1749,61: )
 
186 double 
 1749,20: double
 
298 NAME VARIABLE 
 1749,27: __value
 1749,34: VARIABLE
 
65 VARIABLE 
 1749,34: VARIABLE
 
300 , parameter_declaration 
 1749,34: ,
 1749,36: int
 1749,40: __ndigit
 1749,48: VARIABLE
 
391 int 
 1749,36: int
 
298 NAME VARIABLE 
 1749,40: __ndigit
 1749,48: VARIABLE
 
65 VARIABLE 
 1749,48: VARIABLE
 
300 , parameter_declaration 
 1749,48: ,
 1749,50: char
 1749,55: *
 1749,56: __buf
 1749,61: VARIABLE
 
391 char 
 1749,50: char
 
298 * option_type_qualifier_list option_pointer 
 1749,55: *
 
386 NAME VARIABLE 
 1749,56: __buf
 1749,61: VARIABLE
 
65 VARIABLE 
 1749,61: VARIABLE
 
187 ) 
 1749,61: )
 
60 ; 
 1750,8: ;
 
23 extern 
 1755,1: extern
 
8 char 
 1755,8: char
 
5 * option_type_qualifier_list option_pointer 
 1755,13: *
 
64 NAME VARIABLE 
 1755,14: qecvt
 1755,19: VARIABLE
 
65 VARIABLE 
 1755,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1755,20: (
 1755,21: long
 1755,26: double
 1755,33: __value
 1755,40: VARIABLE
 1755,40: ,
 1755,42: int
 1755,46: __ndigit
 1755,54: VARIABLE
 1755,54: ,
 1756,7: int
 1756,11: *
 1756,13: __decpt
 1756,20: VARIABLE
 1756,20: ,
 1756,22: int
 1756,26: *
 1756,28: __sign
 1756,34: VARIABLE
 1756,34: )
 
186 long 
 1755,21: long
 
106 double 
 1755,26: double
 
298 NAME VARIABLE 
 1755,33: __value
 1755,40: VARIABLE
 
65 VARIABLE 
 1755,40: VARIABLE
 
300 , parameter_declaration 
 1755,40: ,
 1755,42: int
 1755,46: __ndigit
 1755,54: VARIABLE
 
391 int 
 1755,42: int
 
298 NAME VARIABLE 
 1755,46: __ndigit
 1755,54: VARIABLE
 
65 VARIABLE 
 1755,54: VARIABLE
 
300 , parameter_declaration 
 1755,54: ,
 1756,7: int
 1756,11: *
 1756,13: __decpt
 1756,20: VARIABLE
 
391 int 
 1756,7: int
 
298 * option_type_qualifier_list option_pointer 
 1756,11: *
 
386 NAME VARIABLE 
 1756,13: __decpt
 1756,20: VARIABLE
 
65 VARIABLE 
 1756,20: VARIABLE
 
300 , parameter_declaration 
 1756,20: ,
 1756,22: int
 1756,26: *
 1756,28: __sign
 1756,34: VARIABLE
 
391 int 
 1756,22: int
 
298 * option_type_qualifier_list option_pointer 
 1756,26: *
 
386 NAME VARIABLE 
 1756,28: __sign
 1756,34: VARIABLE
 
65 VARIABLE 
 1756,34: VARIABLE
 
187 ) 
 1756,34: )
 
60 ; 
 1757,8: ;
 
23 extern 
 1758,1: extern
 
8 char 
 1758,8: char
 
5 * option_type_qualifier_list option_pointer 
 1758,13: *
 
64 NAME VARIABLE 
 1758,14: qfcvt
 1758,19: VARIABLE
 
65 VARIABLE 
 1758,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1758,20: (
 1758,21: long
 1758,26: double
 1758,33: __value
 1758,40: VARIABLE
 1758,40: ,
 1758,42: int
 1758,46: __ndigit
 1758,54: VARIABLE
 1758,54: ,
 1759,7: int
 1759,11: *
 1759,13: __decpt
 1759,20: VARIABLE
 1759,20: ,
 1759,22: int
 1759,26: *
 1759,28: __sign
 1759,34: VARIABLE
 1759,34: )
 
186 long 
 1758,21: long
 
106 double 
 1758,26: double
 
298 NAME VARIABLE 
 1758,33: __value
 1758,40: VARIABLE
 
65 VARIABLE 
 1758,40: VARIABLE
 
300 , parameter_declaration 
 1758,40: ,
 1758,42: int
 1758,46: __ndigit
 1758,54: VARIABLE
 
391 int 
 1758,42: int
 
298 NAME VARIABLE 
 1758,46: __ndigit
 1758,54: VARIABLE
 
65 VARIABLE 
 1758,54: VARIABLE
 
300 , parameter_declaration 
 1758,54: ,
 1759,7: int
 1759,11: *
 1759,13: __decpt
 1759,20: VARIABLE
 
391 int 
 1759,7: int
 
298 * option_type_qualifier_list option_pointer 
 1759,11: *
 
386 NAME VARIABLE 
 1759,13: __decpt
 1759,20: VARIABLE
 
65 VARIABLE 
 1759,20: VARIABLE
 
300 , parameter_declaration 
 1759,20: ,
 1759,22: int
 1759,26: *
 1759,28: __sign
 1759,34: VARIABLE
 
391 int 
 1759,22: int
 
298 * option_type_qualifier_list option_pointer 
 1759,26: *
 
386 NAME VARIABLE 
 1759,28: __sign
 1759,34: VARIABLE
 
65 VARIABLE 
 1759,34: VARIABLE
 
187 ) 
 1759,34: )
 
60 ; 
 1760,8: ;
 
23 extern 
 1761,1: extern
 
8 char 
 1761,8: char
 
5 * option_type_qualifier_list option_pointer 
 1761,13: *
 
64 NAME VARIABLE 
 1761,14: qgcvt
 1761,19: VARIABLE
 
65 VARIABLE 
 1761,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1761,20: (
 1761,21: long
 1761,26: double
 1761,33: __value
 1761,40: VARIABLE
 1761,40: ,
 1761,42: int
 1761,46: __ndigit
 1761,54: VARIABLE
 1761,54: ,
 1761,56: char
 1761,61: *
 1761,62: __buf
 1761,67: VARIABLE
 1761,67: )
 
186 long 
 1761,21: long
 
106 double 
 1761,26: double
 
298 NAME VARIABLE 
 1761,33: __value
 1761,40: VARIABLE
 
65 VARIABLE 
 1761,40: VARIABLE
 
300 , parameter_declaration 
 1761,40: ,
 1761,42: int
 1761,46: __ndigit
 1761,54: VARIABLE
 
391 int 
 1761,42: int
 
298 NAME VARIABLE 
 1761,46: __ndigit
 1761,54: VARIABLE
 
65 VARIABLE 
 1761,54: VARIABLE
 
300 , parameter_declaration 
 1761,54: ,
 1761,56: char
 1761,61: *
 1761,62: __buf
 1761,67: VARIABLE
 
391 char 
 1761,56: char
 
298 * option_type_qualifier_list option_pointer 
 1761,61: *
 
386 NAME VARIABLE 
 1761,62: __buf
 1761,67: VARIABLE
 
65 VARIABLE 
 1761,67: VARIABLE
 
187 ) 
 1761,67: )
 
60 ; 
 1762,8: ;
 
23 extern 
 1767,1: extern
 
8 int 
 1767,8: int
 
5 NAME VARIABLE 
 1767,12: ecvt_r
 1767,18: VARIABLE
 
65 VARIABLE 
 1767,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1767,19: (
 1767,20: double
 1767,27: __value
 1767,34: VARIABLE
 1767,34: ,
 1767,36: int
 1767,40: __ndigit
 1767,48: VARIABLE
 1767,48: ,
 1767,50: int
 1767,54: *
 1767,56: __decpt
 1767,63: VARIABLE
 1767,63: ,
 1768,6: int
 1768,10: *
 1768,12: __sign
 1768,18: VARIABLE
 1768,18: ,
 1768,20: char
 1768,25: *
 1768,27: __buf
 1768,32: VARIABLE
 1768,32: ,
 1769,6: size_t
 1769,12: TYPE
 1769,13: __len
 1769,18: VARIABLE
 1769,18: )
 
186 double 
 1767,20: double
 
298 NAME VARIABLE 
 1767,27: __value
 1767,34: VARIABLE
 
65 VARIABLE 
 1767,34: VARIABLE
 
300 , parameter_declaration 
 1767,34: ,
 1767,36: int
 1767,40: __ndigit
 1767,48: VARIABLE
 
391 int 
 1767,36: int
 
298 NAME VARIABLE 
 1767,40: __ndigit
 1767,48: VARIABLE
 
65 VARIABLE 
 1767,48: VARIABLE
 
300 , parameter_declaration 
 1767,48: ,
 1767,50: int
 1767,54: *
 1767,56: __decpt
 1767,63: VARIABLE
 
391 int 
 1767,50: int
 
298 * option_type_qualifier_list option_pointer 
 1767,54: *
 
386 NAME VARIABLE 
 1767,56: __decpt
 1767,63: VARIABLE
 
65 VARIABLE 
 1767,63: VARIABLE
 
300 , parameter_declaration 
 1767,63: ,
 1768,6: int
 1768,10: *
 1768,12: __sign
 1768,18: VARIABLE
 
391 int 
 1768,6: int
 
298 * option_type_qualifier_list option_pointer 
 1768,10: *
 
386 NAME VARIABLE 
 1768,12: __sign
 1768,18: VARIABLE
 
65 VARIABLE 
 1768,18: VARIABLE
 
300 , parameter_declaration 
 1768,18: ,
 1768,20: char
 1768,25: *
 1768,27: __buf
 1768,32: VARIABLE
 
391 char 
 1768,20: char
 
298 * option_type_qualifier_list option_pointer 
 1768,25: *
 
386 NAME VARIABLE 
 1768,27: __buf
 1768,32: VARIABLE
 
65 VARIABLE 
 1768,32: VARIABLE
 
300 , parameter_declaration 
 1768,32: ,
 1769,6: size_t
 1769,12: TYPE
 1769,13: __len
 1769,18: VARIABLE
 
391 NAME TYPE 
 1769,6: size_t
 1769,12: TYPE
 
26 TYPE 
 1769,12: TYPE
 
298 NAME VARIABLE 
 1769,13: __len
 1769,18: VARIABLE
 
65 VARIABLE 
 1769,18: VARIABLE
 
187 ) 
 1769,18: )
 
60 ; 
 1769,21: ;
 
23 extern 
 1770,1: extern
 
8 int 
 1770,8: int
 
5 NAME VARIABLE 
 1770,12: fcvt_r
 1770,18: VARIABLE
 
65 VARIABLE 
 1770,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1770,19: (
 1770,20: double
 1770,27: __value
 1770,34: VARIABLE
 1770,34: ,
 1770,36: int
 1770,40: __ndigit
 1770,48: VARIABLE
 1770,48: ,
 1770,50: int
 1770,54: *
 1770,56: __decpt
 1770,63: VARIABLE
 1770,63: ,
 1771,6: int
 1771,10: *
 1771,12: __sign
 1771,18: VARIABLE
 1771,18: ,
 1771,20: char
 1771,25: *
 1771,27: __buf
 1771,32: VARIABLE
 1771,32: ,
 1772,6: size_t
 1772,12: TYPE
 1772,13: __len
 1772,18: VARIABLE
 1772,18: )
 
186 double 
 1770,20: double
 
298 NAME VARIABLE 
 1770,27: __value
 1770,34: VARIABLE
 
65 VARIABLE 
 1770,34: VARIABLE
 
300 , parameter_declaration 
 1770,34: ,
 1770,36: int
 1770,40: __ndigit
 1770,48: VARIABLE
 
391 int 
 1770,36: int
 
298 NAME VARIABLE 
 1770,40: __ndigit
 1770,48: VARIABLE
 
65 VARIABLE 
 1770,48: VARIABLE
 
300 , parameter_declaration 
 1770,48: ,
 1770,50: int
 1770,54: *
 1770,56: __decpt
 1770,63: VARIABLE
 
391 int 
 1770,50: int
 
298 * option_type_qualifier_list option_pointer 
 1770,54: *
 
386 NAME VARIABLE 
 1770,56: __decpt
 1770,63: VARIABLE
 
65 VARIABLE 
 1770,63: VARIABLE
 
300 , parameter_declaration 
 1770,63: ,
 1771,6: int
 1771,10: *
 1771,12: __sign
 1771,18: VARIABLE
 
391 int 
 1771,6: int
 
298 * option_type_qualifier_list option_pointer 
 1771,10: *
 
386 NAME VARIABLE 
 1771,12: __sign
 1771,18: VARIABLE
 
65 VARIABLE 
 1771,18: VARIABLE
 
300 , parameter_declaration 
 1771,18: ,
 1771,20: char
 1771,25: *
 1771,27: __buf
 1771,32: VARIABLE
 
391 char 
 1771,20: char
 
298 * option_type_qualifier_list option_pointer 
 1771,25: *
 
386 NAME VARIABLE 
 1771,27: __buf
 1771,32: VARIABLE
 
65 VARIABLE 
 1771,32: VARIABLE
 
300 , parameter_declaration 
 1771,32: ,
 1772,6: size_t
 1772,12: TYPE
 1772,13: __len
 1772,18: VARIABLE
 
391 NAME TYPE 
 1772,6: size_t
 1772,12: TYPE
 
26 TYPE 
 1772,12: TYPE
 
298 NAME VARIABLE 
 1772,13: __len
 1772,18: VARIABLE
 
65 VARIABLE 
 1772,18: VARIABLE
 
187 ) 
 1772,18: )
 
60 ; 
 1772,21: ;
 
23 extern 
 1774,1: extern
 
8 int 
 1774,8: int
 
5 NAME VARIABLE 
 1774,12: qecvt_r
 1774,19: VARIABLE
 
65 VARIABLE 
 1774,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1774,20: (
 1774,21: long
 1774,26: double
 1774,33: __value
 1774,40: VARIABLE
 1774,40: ,
 1774,42: int
 1774,46: __ndigit
 1774,54: VARIABLE
 1774,54: ,
 1775,7: int
 1775,11: *
 1775,13: __decpt
 1775,20: VARIABLE
 1775,20: ,
 1775,22: int
 1775,26: *
 1775,28: __sign
 1775,34: VARIABLE
 1775,34: ,
 1776,7: char
 1776,12: *
 1776,14: __buf
 1776,19: VARIABLE
 1776,19: ,
 1776,21: size_t
 1776,27: TYPE
 1776,28: __len
 1776,33: VARIABLE
 1776,33: )
 
186 long 
 1774,21: long
 
106 double 
 1774,26: double
 
298 NAME VARIABLE 
 1774,33: __value
 1774,40: VARIABLE
 
65 VARIABLE 
 1774,40: VARIABLE
 
300 , parameter_declaration 
 1774,40: ,
 1774,42: int
 1774,46: __ndigit
 1774,54: VARIABLE
 
391 int 
 1774,42: int
 
298 NAME VARIABLE 
 1774,46: __ndigit
 1774,54: VARIABLE
 
65 VARIABLE 
 1774,54: VARIABLE
 
300 , parameter_declaration 
 1774,54: ,
 1775,7: int
 1775,11: *
 1775,13: __decpt
 1775,20: VARIABLE
 
391 int 
 1775,7: int
 
298 * option_type_qualifier_list option_pointer 
 1775,11: *
 
386 NAME VARIABLE 
 1775,13: __decpt
 1775,20: VARIABLE
 
65 VARIABLE 
 1775,20: VARIABLE
 
300 , parameter_declaration 
 1775,20: ,
 1775,22: int
 1775,26: *
 1775,28: __sign
 1775,34: VARIABLE
 
391 int 
 1775,22: int
 
298 * option_type_qualifier_list option_pointer 
 1775,26: *
 
386 NAME VARIABLE 
 1775,28: __sign
 1775,34: VARIABLE
 
65 VARIABLE 
 1775,34: VARIABLE
 
300 , parameter_declaration 
 1775,34: ,
 1776,7: char
 1776,12: *
 1776,14: __buf
 1776,19: VARIABLE
 
391 char 
 1776,7: char
 
298 * option_type_qualifier_list option_pointer 
 1776,12: *
 
386 NAME VARIABLE 
 1776,14: __buf
 1776,19: VARIABLE
 
65 VARIABLE 
 1776,19: VARIABLE
 
300 , parameter_declaration 
 1776,19: ,
 1776,21: size_t
 1776,27: TYPE
 1776,28: __len
 1776,33: VARIABLE
 
391 NAME TYPE 
 1776,21: size_t
 1776,27: TYPE
 
26 TYPE 
 1776,27: TYPE
 
298 NAME VARIABLE 
 1776,28: __len
 1776,33: VARIABLE
 
65 VARIABLE 
 1776,33: VARIABLE
 
187 ) 
 1776,33: )
 
60 ; 
 1777,7: ;
 
23 extern 
 1778,1: extern
 
8 int 
 1778,8: int
 
5 NAME VARIABLE 
 1778,12: qfcvt_r
 1778,19: VARIABLE
 
65 VARIABLE 
 1778,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1778,20: (
 1778,21: long
 1778,26: double
 1778,33: __value
 1778,40: VARIABLE
 1778,40: ,
 1778,42: int
 1778,46: __ndigit
 1778,54: VARIABLE
 1778,54: ,
 1779,7: int
 1779,11: *
 1779,13: __decpt
 1779,20: VARIABLE
 1779,20: ,
 1779,22: int
 1779,26: *
 1779,28: __sign
 1779,34: VARIABLE
 1779,34: ,
 1780,7: char
 1780,12: *
 1780,14: __buf
 1780,19: VARIABLE
 1780,19: ,
 1780,21: size_t
 1780,27: TYPE
 1780,28: __len
 1780,33: VARIABLE
 1780,33: )
 
186 long 
 1778,21: long
 
106 double 
 1778,26: double
 
298 NAME VARIABLE 
 1778,33: __value
 1778,40: VARIABLE
 
65 VARIABLE 
 1778,40: VARIABLE
 
300 , parameter_declaration 
 1778,40: ,
 1778,42: int
 1778,46: __ndigit
 1778,54: VARIABLE
 
391 int 
 1778,42: int
 
298 NAME VARIABLE 
 1778,46: __ndigit
 1778,54: VARIABLE
 
65 VARIABLE 
 1778,54: VARIABLE
 
300 , parameter_declaration 
 1778,54: ,
 1779,7: int
 1779,11: *
 1779,13: __decpt
 1779,20: VARIABLE
 
391 int 
 1779,7: int
 
298 * option_type_qualifier_list option_pointer 
 1779,11: *
 
386 NAME VARIABLE 
 1779,13: __decpt
 1779,20: VARIABLE
 
65 VARIABLE 
 1779,20: VARIABLE
 
300 , parameter_declaration 
 1779,20: ,
 1779,22: int
 1779,26: *
 1779,28: __sign
 1779,34: VARIABLE
 
391 int 
 1779,22: int
 
298 * option_type_qualifier_list option_pointer 
 1779,26: *
 
386 NAME VARIABLE 
 1779,28: __sign
 1779,34: VARIABLE
 
65 VARIABLE 
 1779,34: VARIABLE
 
300 , parameter_declaration 
 1779,34: ,
 1780,7: char
 1780,12: *
 1780,14: __buf
 1780,19: VARIABLE
 
391 char 
 1780,7: char
 
298 * option_type_qualifier_list option_pointer 
 1780,12: *
 
386 NAME VARIABLE 
 1780,14: __buf
 1780,19: VARIABLE
 
65 VARIABLE 
 1780,19: VARIABLE
 
300 , parameter_declaration 
 1780,19: ,
 1780,21: size_t
 1780,27: TYPE
 1780,28: __len
 1780,33: VARIABLE
 
391 NAME TYPE 
 1780,21: size_t
 1780,27: TYPE
 
26 TYPE 
 1780,27: TYPE
 
298 NAME VARIABLE 
 1780,28: __len
 1780,33: VARIABLE
 
65 VARIABLE 
 1780,33: VARIABLE
 
187 ) 
 1780,33: )
 
60 ; 
 1781,7: ;
 
23 extern 
 1787,1: extern
 
8 int 
 1787,8: int
 
5 NAME VARIABLE 
 1787,12: mblen
 1787,17: VARIABLE
 
65 VARIABLE 
 1787,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1787,18: (
 1787,19: const
 1787,25: char
 1787,30: *
 1787,31: __s
 1787,34: VARIABLE
 1787,34: ,
 1787,36: size_t
 1787,42: TYPE
 1787,43: __n
 1787,46: VARIABLE
 1787,46: )
 
186 const 
 1787,19: const
 
103 char 
 1787,25: char
 
298 * option_type_qualifier_list option_pointer 
 1787,30: *
 
386 NAME VARIABLE 
 1787,31: __s
 1787,34: VARIABLE
 
65 VARIABLE 
 1787,34: VARIABLE
 
300 , parameter_declaration 
 1787,34: ,
 1787,36: size_t
 1787,42: TYPE
 1787,43: __n
 1787,46: VARIABLE
 
391 NAME TYPE 
 1787,36: size_t
 1787,42: TYPE
 
26 TYPE 
 1787,42: TYPE
 
298 NAME VARIABLE 
 1787,43: __n
 1787,46: VARIABLE
 
65 VARIABLE 
 1787,46: VARIABLE
 
187 ) 
 1787,46: )
 
60 ; 
 1787,48: ;
 
23 extern 
 1790,1: extern
 
8 int 
 1790,8: int
 
5 NAME VARIABLE 
 1790,12: mbtowc
 1790,18: VARIABLE
 
65 VARIABLE 
 1790,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1790,19: (
 1790,20: wchar_t
 1790,27: TYPE
 1790,28: *
 1790,30: __pwc
 1790,35: VARIABLE
 1790,35: ,
 1791,6: const
 1791,12: char
 1791,17: *
 1791,19: __s
 1791,22: VARIABLE
 1791,22: ,
 1791,24: size_t
 1791,30: TYPE
 1791,31: __n
 1791,34: VARIABLE
 1791,34: )
 
186 NAME TYPE 
 1790,20: wchar_t
 1790,27: TYPE
 
65 TYPE 
 1790,27: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1790,28: *
 
386 NAME VARIABLE 
 1790,30: __pwc
 1790,35: VARIABLE
 
65 VARIABLE 
 1790,35: VARIABLE
 
300 , parameter_declaration 
 1790,35: ,
 1791,6: const
 1791,12: char
 1791,17: *
 1791,19: __s
 1791,22: VARIABLE
 
391 const 
 1791,6: const
 
103 char 
 1791,12: char
 
298 * option_type_qualifier_list option_pointer 
 1791,17: *
 
386 NAME VARIABLE 
 1791,19: __s
 1791,22: VARIABLE
 
65 VARIABLE 
 1791,22: VARIABLE
 
300 , parameter_declaration 
 1791,22: ,
 1791,24: size_t
 1791,30: TYPE
 1791,31: __n
 1791,34: VARIABLE
 
391 NAME TYPE 
 1791,24: size_t
 1791,30: TYPE
 
26 TYPE 
 1791,30: TYPE
 
298 NAME VARIABLE 
 1791,31: __n
 1791,34: VARIABLE
 
65 VARIABLE 
 1791,34: VARIABLE
 
187 ) 
 1791,34: )
 
60 ; 
 1791,36: ;
 
23 extern 
 1794,1: extern
 
8 int 
 1794,8: int
 
5 NAME VARIABLE 
 1794,12: wctomb
 1794,18: VARIABLE
 
65 VARIABLE 
 1794,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1794,19: (
 1794,20: char
 1794,25: *
 1794,26: __s
 1794,29: VARIABLE
 1794,29: ,
 1794,31: wchar_t
 1794,38: TYPE
 1794,39: __wchar
 1794,46: VARIABLE
 1794,46: )
 
186 char 
 1794,20: char
 
298 * option_type_qualifier_list option_pointer 
 1794,25: *
 
386 NAME VARIABLE 
 1794,26: __s
 1794,29: VARIABLE
 
65 VARIABLE 
 1794,29: VARIABLE
 
300 , parameter_declaration 
 1794,29: ,
 1794,31: wchar_t
 1794,38: TYPE
 1794,39: __wchar
 1794,46: VARIABLE
 
391 NAME TYPE 
 1794,31: wchar_t
 1794,38: TYPE
 
26 TYPE 
 1794,38: TYPE
 
298 NAME VARIABLE 
 1794,39: __wchar
 1794,46: VARIABLE
 
65 VARIABLE 
 1794,46: VARIABLE
 
187 ) 
 1794,46: )
 
60 ; 
 1794,48: ;
 
23 extern 
 1798,1: extern
 
8 NAME TYPE 
 1798,8: size_t
 1798,14: TYPE
 
26 TYPE 
 1798,14: TYPE
 
5 NAME VARIABLE 
 1798,15: mbstowcs
 1798,23: VARIABLE
 
65 VARIABLE 
 1798,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1798,24: (
 1798,25: wchar_t
 1798,32: TYPE
 1798,33: *
 1798,35: __pwcs
 1798,41: VARIABLE
 1798,41: ,
 1799,4: const
 1799,10: char
 1799,15: *
 1799,17: __s
 1799,20: VARIABLE
 1799,20: ,
 1799,22: size_t
 1799,28: TYPE
 1799,29: __n
 1799,32: VARIABLE
 1799,32: )
 
186 NAME TYPE 
 1798,25: wchar_t
 1798,32: TYPE
 
65 TYPE 
 1798,32: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1798,33: *
 
386 NAME VARIABLE 
 1798,35: __pwcs
 1798,41: VARIABLE
 
65 VARIABLE 
 1798,41: VARIABLE
 
300 , parameter_declaration 
 1798,41: ,
 1799,4: const
 1799,10: char
 1799,15: *
 1799,17: __s
 1799,20: VARIABLE
 
391 const 
 1799,4: const
 
103 char 
 1799,10: char
 
298 * option_type_qualifier_list option_pointer 
 1799,15: *
 
386 NAME VARIABLE 
 1799,17: __s
 1799,20: VARIABLE
 
65 VARIABLE 
 1799,20: VARIABLE
 
300 , parameter_declaration 
 1799,20: ,
 1799,22: size_t
 1799,28: TYPE
 1799,29: __n
 1799,32: VARIABLE
 
391 NAME TYPE 
 1799,22: size_t
 1799,28: TYPE
 
26 TYPE 
 1799,28: TYPE
 
298 NAME VARIABLE 
 1799,29: __n
 1799,32: VARIABLE
 
65 VARIABLE 
 1799,32: VARIABLE
 
187 ) 
 1799,32: )
 
60 ; 
 1800,5: ;
 
23 extern 
 1802,1: extern
 
8 NAME TYPE 
 1802,8: size_t
 1802,14: TYPE
 
26 TYPE 
 1802,14: TYPE
 
5 NAME VARIABLE 
 1802,15: wcstombs
 1802,23: VARIABLE
 
65 VARIABLE 
 1802,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1802,24: (
 1802,25: char
 1802,30: *
 1802,32: __s
 1802,35: VARIABLE
 1802,35: ,
 1803,4: const
 1803,10: wchar_t
 1803,17: TYPE
 1803,18: *
 1803,20: __pwcs
 1803,26: VARIABLE
 1803,26: ,
 1803,28: size_t
 1803,34: TYPE
 1803,35: __n
 1803,38: VARIABLE
 1803,38: )
 
186 char 
 1802,25: char
 
298 * option_type_qualifier_list option_pointer 
 1802,30: *
 
386 NAME VARIABLE 
 1802,32: __s
 1802,35: VARIABLE
 
65 VARIABLE 
 1802,35: VARIABLE
 
300 , parameter_declaration 
 1802,35: ,
 1803,4: const
 1803,10: wchar_t
 1803,17: TYPE
 1803,18: *
 1803,20: __pwcs
 1803,26: VARIABLE
 
391 const 
 1803,4: const
 
103 NAME TYPE 
 1803,10: wchar_t
 1803,17: TYPE
 
26 TYPE 
 1803,17: TYPE
 
298 * option_type_qualifier_list option_pointer 
 1803,18: *
 
386 NAME VARIABLE 
 1803,20: __pwcs
 1803,26: VARIABLE
 
65 VARIABLE 
 1803,26: VARIABLE
 
300 , parameter_declaration 
 1803,26: ,
 1803,28: size_t
 1803,34: TYPE
 1803,35: __n
 1803,38: VARIABLE
 
391 NAME TYPE 
 1803,28: size_t
 1803,34: TYPE
 
26 TYPE 
 1803,34: TYPE
 
298 NAME VARIABLE 
 1803,35: __n
 1803,38: VARIABLE
 
65 VARIABLE 
 1803,38: VARIABLE
 
187 ) 
 1803,38: )
 
60 ; 
 1806,3: ;
 
23 extern 
 1813,1: extern
 
8 int 
 1813,8: int
 
5 NAME VARIABLE 
 1813,12: rpmatch
 1813,19: VARIABLE
 
65 VARIABLE 
 1813,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1813,20: (
 1813,21: const
 1813,27: char
 1813,32: *
 1813,33: __response
 1813,43: VARIABLE
 1813,43: )
 
186 const 
 1813,21: const
 
103 char 
 1813,27: char
 
298 * option_type_qualifier_list option_pointer 
 1813,32: *
 
386 NAME VARIABLE 
 1813,33: __response
 1813,43: VARIABLE
 
65 VARIABLE 
 1813,43: VARIABLE
 
187 ) 
 1813,43: )
 
60 ; 
 1813,47: ;
 
23 extern 
 1815,1: extern
 
8 int 
 1815,8: int
 
5 NAME VARIABLE 
 1815,12: getsubopt
 1815,21: VARIABLE
 
65 VARIABLE 
 1815,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1815,22: (
 1815,23: char
 1815,28: *
 1815,29: *
 1815,31: __optionp
 1815,40: VARIABLE
 1815,40: ,
 1816,9: char
 1816,14: *
 1816,15: const
 1816,21: *
 1816,23: __tokens
 1816,31: VARIABLE
 1816,31: ,
 1817,9: char
 1817,14: *
 1817,15: *
 1817,17: __valuep
 1817,25: VARIABLE
 1817,25: )
 
186 char 
 1815,23: char
 
298 * option_type_qualifier_list option_pointer 
 1815,28: *
 1815,29: *
 
116 * option_type_qualifier_list option_pointer 
 1815,29: *
 
386 NAME VARIABLE 
 1815,31: __optionp
 1815,40: VARIABLE
 
65 VARIABLE 
 1815,40: VARIABLE
 
300 , parameter_declaration 
 1815,40: ,
 1816,9: char
 1816,14: *
 1816,15: const
 1816,21: *
 1816,23: __tokens
 1816,31: VARIABLE
 
391 char 
 1816,9: char
 
298 * option_type_qualifier_list option_pointer 
 1816,14: *
 1816,15: const
 1816,21: *
 
116 const 
 1816,15: const
 
116 * option_type_qualifier_list option_pointer 
 1816,21: *
 
386 NAME VARIABLE 
 1816,23: __tokens
 1816,31: VARIABLE
 
65 VARIABLE 
 1816,31: VARIABLE
 
300 , parameter_declaration 
 1816,31: ,
 1817,9: char
 1817,14: *
 1817,15: *
 1817,17: __valuep
 1817,25: VARIABLE
 
391 char 
 1817,9: char
 
298 * option_type_qualifier_list option_pointer 
 1817,14: *
 1817,15: *
 
116 * option_type_qualifier_list option_pointer 
 1817,15: *
 
386 NAME VARIABLE 
 1817,17: __valuep
 1817,25: VARIABLE
 
65 VARIABLE 
 1817,25: VARIABLE
 
187 ) 
 1817,25: )
 
60 ; 
 1818,8: ;
 
23 extern 
 1820,1: extern
 
8 int 
 1820,8: int
 
5 NAME VARIABLE 
 1820,12: getloadavg
 1820,22: VARIABLE
 
65 VARIABLE 
 1820,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1820,23: (
 1820,24: double
 1820,31: __loadavg
 1820,40: VARIABLE
 1820,40: [
 1820,41: ]
 1820,42: ,
 1820,44: int
 1820,48: __nelem
 1820,55: VARIABLE
 1820,55: )
 
186 double 
 1820,24: double
 
298 NAME VARIABLE 
 1820,31: __loadavg
 1820,40: VARIABLE
 
65 VARIABLE 
 1820,40: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 1820,40: [
 1820,41: ]
 
305 ] 
 1820,41: ]
 
300 , parameter_declaration 
 1820,42: ,
 1820,44: int
 1820,48: __nelem
 1820,55: VARIABLE
 
391 int 
 1820,44: int
 
298 NAME VARIABLE 
 1820,48: __nelem
 1820,55: VARIABLE
 
65 VARIABLE 
 1820,55: VARIABLE
 
187 ) 
 1820,55: )
 
60 ; 
 1821,7: ;
 
23 extern 
 1841,1: extern
 
8 void 
 1841,8: void
 
5 * option_type_qualifier_list option_pointer 
 1841,13: *
 
64 NAME VARIABLE 
 1841,14: memcpy
 1841,20: VARIABLE
 
65 VARIABLE 
 1841,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1841,21: (
 1841,22: void
 1841,27: *
 1841,29: __dest
 1841,35: VARIABLE
 1841,35: ,
 1841,37: const
 1841,43: void
 1841,48: *
 1841,50: __src
 1841,55: VARIABLE
 1841,55: ,
 1842,8: size_t
 1842,14: TYPE
 1842,15: __n
 1842,18: VARIABLE
 1842,18: )
 
186 void 
 1841,22: void
 
298 * option_type_qualifier_list option_pointer 
 1841,27: *
 
386 NAME VARIABLE 
 1841,29: __dest
 1841,35: VARIABLE
 
65 VARIABLE 
 1841,35: VARIABLE
 
300 , parameter_declaration 
 1841,35: ,
 1841,37: const
 1841,43: void
 1841,48: *
 1841,50: __src
 1841,55: VARIABLE
 
391 const 
 1841,37: const
 
103 void 
 1841,43: void
 
298 * option_type_qualifier_list option_pointer 
 1841,48: *
 
386 NAME VARIABLE 
 1841,50: __src
 1841,55: VARIABLE
 
65 VARIABLE 
 1841,55: VARIABLE
 
300 , parameter_declaration 
 1841,55: ,
 1842,8: size_t
 1842,14: TYPE
 1842,15: __n
 1842,18: VARIABLE
 
391 NAME TYPE 
 1842,8: size_t
 1842,14: TYPE
 
26 TYPE 
 1842,14: TYPE
 
298 NAME VARIABLE 
 1842,15: __n
 1842,18: VARIABLE
 
65 VARIABLE 
 1842,18: VARIABLE
 
187 ) 
 1842,18: )
 
60 ; 
 1842,21: ;
 
23 extern 
 1845,1: extern
 
8 void 
 1845,8: void
 
5 * option_type_qualifier_list option_pointer 
 1845,13: *
 
64 NAME VARIABLE 
 1845,14: memmove
 1845,21: VARIABLE
 
65 VARIABLE 
 1845,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1845,22: (
 1845,23: void
 1845,28: *
 1845,29: __dest
 1845,35: VARIABLE
 1845,35: ,
 1845,37: const
 1845,43: void
 1845,48: *
 1845,49: __src
 1845,54: VARIABLE
 1845,54: ,
 1845,56: size_t
 1845,62: TYPE
 1845,63: __n
 1845,66: VARIABLE
 1845,66: )
 
186 void 
 1845,23: void
 
298 * option_type_qualifier_list option_pointer 
 1845,28: *
 
386 NAME VARIABLE 
 1845,29: __dest
 1845,35: VARIABLE
 
65 VARIABLE 
 1845,35: VARIABLE
 
300 , parameter_declaration 
 1845,35: ,
 1845,37: const
 1845,43: void
 1845,48: *
 1845,49: __src
 1845,54: VARIABLE
 
391 const 
 1845,37: const
 
103 void 
 1845,43: void
 
298 * option_type_qualifier_list option_pointer 
 1845,48: *
 
386 NAME VARIABLE 
 1845,49: __src
 1845,54: VARIABLE
 
65 VARIABLE 
 1845,54: VARIABLE
 
300 , parameter_declaration 
 1845,54: ,
 1845,56: size_t
 1845,62: TYPE
 1845,63: __n
 1845,66: VARIABLE
 
391 NAME TYPE 
 1845,56: size_t
 1845,62: TYPE
 
26 TYPE 
 1845,62: TYPE
 
298 NAME VARIABLE 
 1845,63: __n
 1845,66: VARIABLE
 
65 VARIABLE 
 1845,66: VARIABLE
 
187 ) 
 1845,66: )
 
60 ; 
 1846,7: ;
 
23 extern 
 1852,1: extern
 
8 void 
 1852,8: void
 
5 * option_type_qualifier_list option_pointer 
 1852,13: *
 
64 NAME VARIABLE 
 1852,14: memccpy
 1852,21: VARIABLE
 
65 VARIABLE 
 1852,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1852,22: (
 1852,23: void
 1852,28: *
 1852,30: __dest
 1852,36: VARIABLE
 1852,36: ,
 1852,38: const
 1852,44: void
 1852,49: *
 1852,51: __src
 1852,56: VARIABLE
 1852,56: ,
 1853,9: int
 1853,13: __c
 1853,16: VARIABLE
 1853,16: ,
 1853,18: size_t
 1853,24: TYPE
 1853,25: __n
 1853,28: VARIABLE
 1853,28: )
 
186 void 
 1852,23: void
 
298 * option_type_qualifier_list option_pointer 
 1852,28: *
 
386 NAME VARIABLE 
 1852,30: __dest
 1852,36: VARIABLE
 
65 VARIABLE 
 1852,36: VARIABLE
 
300 , parameter_declaration 
 1852,36: ,
 1852,38: const
 1852,44: void
 1852,49: *
 1852,51: __src
 1852,56: VARIABLE
 
391 const 
 1852,38: const
 
103 void 
 1852,44: void
 
298 * option_type_qualifier_list option_pointer 
 1852,49: *
 
386 NAME VARIABLE 
 1852,51: __src
 1852,56: VARIABLE
 
65 VARIABLE 
 1852,56: VARIABLE
 
300 , parameter_declaration 
 1852,56: ,
 1853,9: int
 1853,13: __c
 1853,16: VARIABLE
 
391 int 
 1853,9: int
 
298 NAME VARIABLE 
 1853,13: __c
 1853,16: VARIABLE
 
65 VARIABLE 
 1853,16: VARIABLE
 
300 , parameter_declaration 
 1853,16: ,
 1853,18: size_t
 1853,24: TYPE
 1853,25: __n
 1853,28: VARIABLE
 
391 NAME TYPE 
 1853,18: size_t
 1853,24: TYPE
 
26 TYPE 
 1853,24: TYPE
 
298 NAME VARIABLE 
 1853,25: __n
 1853,28: VARIABLE
 
65 VARIABLE 
 1853,28: VARIABLE
 
187 ) 
 1853,28: )
 
60 ; 
 1854,7: ;
 
23 extern 
 1859,1: extern
 
8 void 
 1859,8: void
 
5 * option_type_qualifier_list option_pointer 
 1859,13: *
 
64 NAME VARIABLE 
 1859,14: memset
 1859,20: VARIABLE
 
65 VARIABLE 
 1859,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1859,21: (
 1859,22: void
 1859,27: *
 1859,28: __s
 1859,31: VARIABLE
 1859,31: ,
 1859,33: int
 1859,37: __c
 1859,40: VARIABLE
 1859,40: ,
 1859,42: size_t
 1859,48: TYPE
 1859,49: __n
 1859,52: VARIABLE
 1859,52: )
 
186 void 
 1859,22: void
 
298 * option_type_qualifier_list option_pointer 
 1859,27: *
 
386 NAME VARIABLE 
 1859,28: __s
 1859,31: VARIABLE
 
65 VARIABLE 
 1859,31: VARIABLE
 
300 , parameter_declaration 
 1859,31: ,
 1859,33: int
 1859,37: __c
 1859,40: VARIABLE
 
391 int 
 1859,33: int
 
298 NAME VARIABLE 
 1859,37: __c
 1859,40: VARIABLE
 
65 VARIABLE 
 1859,40: VARIABLE
 
300 , parameter_declaration 
 1859,40: ,
 1859,42: size_t
 1859,48: TYPE
 1859,49: __n
 1859,52: VARIABLE
 
391 NAME TYPE 
 1859,42: size_t
 1859,48: TYPE
 
26 TYPE 
 1859,48: TYPE
 
298 NAME VARIABLE 
 1859,49: __n
 1859,52: VARIABLE
 
65 VARIABLE 
 1859,52: VARIABLE
 
187 ) 
 1859,52: )
 
60 ; 
 1859,55: ;
 
23 extern 
 1862,1: extern
 
8 int 
 1862,8: int
 
5 NAME VARIABLE 
 1862,12: memcmp
 1862,18: VARIABLE
 
65 VARIABLE 
 1862,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1862,19: (
 1862,20: const
 1862,26: void
 1862,31: *
 1862,32: __s1
 1862,36: VARIABLE
 1862,36: ,
 1862,38: const
 1862,44: void
 1862,49: *
 1862,50: __s2
 1862,54: VARIABLE
 1862,54: ,
 1862,56: size_t
 1862,62: TYPE
 1862,63: __n
 1862,66: VARIABLE
 1862,66: )
 
186 const 
 1862,20: const
 
103 void 
 1862,26: void
 
298 * option_type_qualifier_list option_pointer 
 1862,31: *
 
386 NAME VARIABLE 
 1862,32: __s1
 1862,36: VARIABLE
 
65 VARIABLE 
 1862,36: VARIABLE
 
300 , parameter_declaration 
 1862,36: ,
 1862,38: const
 1862,44: void
 1862,49: *
 1862,50: __s2
 1862,54: VARIABLE
 
391 const 
 1862,38: const
 
103 void 
 1862,44: void
 
298 * option_type_qualifier_list option_pointer 
 1862,49: *
 
386 NAME VARIABLE 
 1862,50: __s2
 1862,54: VARIABLE
 
65 VARIABLE 
 1862,54: VARIABLE
 
300 , parameter_declaration 
 1862,54: ,
 1862,56: size_t
 1862,62: TYPE
 1862,63: __n
 1862,66: VARIABLE
 
391 NAME TYPE 
 1862,56: size_t
 1862,62: TYPE
 
26 TYPE 
 1862,62: TYPE
 
298 NAME VARIABLE 
 1862,63: __n
 1862,66: VARIABLE
 
65 VARIABLE 
 1862,66: VARIABLE
 
187 ) 
 1862,66: )
 
60 ; 
 1863,8: ;
 
23 extern 
 1865,1: extern
 
8 int 
 1865,8: int
 
5 NAME VARIABLE 
 1865,12: __memcmpeq
 1865,22: VARIABLE
 
65 VARIABLE 
 1865,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1865,23: (
 1865,24: const
 1865,30: void
 1865,35: *
 1865,36: __s1
 1865,40: VARIABLE
 1865,40: ,
 1865,42: const
 1865,48: void
 1865,53: *
 1865,54: __s2
 1865,58: VARIABLE
 1865,58: ,
 1865,60: size_t
 1865,66: TYPE
 1865,67: __n
 1865,70: VARIABLE
 1865,70: )
 
186 const 
 1865,24: const
 
103 void 
 1865,30: void
 
298 * option_type_qualifier_list option_pointer 
 1865,35: *
 
386 NAME VARIABLE 
 1865,36: __s1
 1865,40: VARIABLE
 
65 VARIABLE 
 1865,40: VARIABLE
 
300 , parameter_declaration 
 1865,40: ,
 1865,42: const
 1865,48: void
 1865,53: *
 1865,54: __s2
 1865,58: VARIABLE
 
391 const 
 1865,42: const
 
103 void 
 1865,48: void
 
298 * option_type_qualifier_list option_pointer 
 1865,53: *
 
386 NAME VARIABLE 
 1865,54: __s2
 1865,58: VARIABLE
 
65 VARIABLE 
 1865,58: VARIABLE
 
300 , parameter_declaration 
 1865,58: ,
 1865,60: size_t
 1865,66: TYPE
 1865,67: __n
 1865,70: VARIABLE
 
391 NAME TYPE 
 1865,60: size_t
 1865,66: TYPE
 
26 TYPE 
 1865,66: TYPE
 
298 NAME VARIABLE 
 1865,67: __n
 1865,70: VARIABLE
 
65 VARIABLE 
 1865,70: VARIABLE
 
187 ) 
 1865,70: )
 
60 ; 
 1866,8: ;
 
23 extern 
 1868,1: extern
 
8 void 
 1868,8: void
 
5 * option_type_qualifier_list option_pointer 
 1868,13: *
 
64 NAME VARIABLE 
 1868,14: memchr
 1868,20: VARIABLE
 
65 VARIABLE 
 1868,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1868,21: (
 1868,22: const
 1868,28: void
 1868,33: *
 1868,34: __s
 1868,37: VARIABLE
 1868,37: ,
 1868,39: int
 1868,43: __c
 1868,46: VARIABLE
 1868,46: ,
 1868,48: size_t
 1868,54: TYPE
 1868,55: __n
 1868,58: VARIABLE
 1868,58: )
 
186 const 
 1868,22: const
 
103 void 
 1868,28: void
 
298 * option_type_qualifier_list option_pointer 
 1868,33: *
 
386 NAME VARIABLE 
 1868,34: __s
 1868,37: VARIABLE
 
65 VARIABLE 
 1868,37: VARIABLE
 
300 , parameter_declaration 
 1868,37: ,
 1868,39: int
 1868,43: __c
 1868,46: VARIABLE
 
391 int 
 1868,39: int
 
298 NAME VARIABLE 
 1868,43: __c
 1868,46: VARIABLE
 
65 VARIABLE 
 1868,46: VARIABLE
 
300 , parameter_declaration 
 1868,46: ,
 1868,48: size_t
 1868,54: TYPE
 1868,55: __n
 1868,58: VARIABLE
 
391 NAME TYPE 
 1868,48: size_t
 1868,54: TYPE
 
26 TYPE 
 1868,54: TYPE
 
298 NAME VARIABLE 
 1868,55: __n
 1868,58: VARIABLE
 
65 VARIABLE 
 1868,58: VARIABLE
 
187 ) 
 1868,58: )
 
60 ; 
 1869,9: ;
 
23 extern 
 1871,1: extern
 
8 char 
 1871,8: char
 
5 * option_type_qualifier_list option_pointer 
 1871,13: *
 
64 NAME VARIABLE 
 1871,14: strcpy
 1871,20: VARIABLE
 
65 VARIABLE 
 1871,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1871,21: (
 1871,22: char
 1871,27: *
 1871,29: __dest
 1871,35: VARIABLE
 1871,35: ,
 1871,37: const
 1871,43: char
 1871,48: *
 1871,50: __src
 1871,55: VARIABLE
 1871,55: )
 
186 char 
 1871,22: char
 
298 * option_type_qualifier_list option_pointer 
 1871,27: *
 
386 NAME VARIABLE 
 1871,29: __dest
 1871,35: VARIABLE
 
65 VARIABLE 
 1871,35: VARIABLE
 
300 , parameter_declaration 
 1871,35: ,
 1871,37: const
 1871,43: char
 1871,48: *
 1871,50: __src
 1871,55: VARIABLE
 
391 const 
 1871,37: const
 
103 char 
 1871,43: char
 
298 * option_type_qualifier_list option_pointer 
 1871,48: *
 
386 NAME VARIABLE 
 1871,50: __src
 1871,55: VARIABLE
 
65 VARIABLE 
 1871,55: VARIABLE
 
187 ) 
 1871,55: )
 
60 ; 
 1872,7: ;
 
23 extern 
 1874,1: extern
 
8 char 
 1874,8: char
 
5 * option_type_qualifier_list option_pointer 
 1874,13: *
 
64 NAME VARIABLE 
 1874,14: strncpy
 1874,21: VARIABLE
 
65 VARIABLE 
 1874,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1874,22: (
 1874,23: char
 1874,28: *
 1874,30: __dest
 1874,36: VARIABLE
 1874,36: ,
 1875,9: const
 1875,15: char
 1875,20: *
 1875,22: __src
 1875,27: VARIABLE
 1875,27: ,
 1875,29: size_t
 1875,35: TYPE
 1875,36: __n
 1875,39: VARIABLE
 1875,39: )
 
186 char 
 1874,23: char
 
298 * option_type_qualifier_list option_pointer 
 1874,28: *
 
386 NAME VARIABLE 
 1874,30: __dest
 1874,36: VARIABLE
 
65 VARIABLE 
 1874,36: VARIABLE
 
300 , parameter_declaration 
 1874,36: ,
 1875,9: const
 1875,15: char
 1875,20: *
 1875,22: __src
 1875,27: VARIABLE
 
391 const 
 1875,9: const
 
103 char 
 1875,15: char
 
298 * option_type_qualifier_list option_pointer 
 1875,20: *
 
386 NAME VARIABLE 
 1875,22: __src
 1875,27: VARIABLE
 
65 VARIABLE 
 1875,27: VARIABLE
 
300 , parameter_declaration 
 1875,27: ,
 1875,29: size_t
 1875,35: TYPE
 1875,36: __n
 1875,39: VARIABLE
 
391 NAME TYPE 
 1875,29: size_t
 1875,35: TYPE
 
26 TYPE 
 1875,35: TYPE
 
298 NAME VARIABLE 
 1875,36: __n
 1875,39: VARIABLE
 
65 VARIABLE 
 1875,39: VARIABLE
 
187 ) 
 1875,39: )
 
60 ; 
 1876,7: ;
 
23 extern 
 1879,1: extern
 
8 char 
 1879,8: char
 
5 * option_type_qualifier_list option_pointer 
 1879,13: *
 
64 NAME VARIABLE 
 1879,14: strcat
 1879,20: VARIABLE
 
65 VARIABLE 
 1879,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1879,21: (
 1879,22: char
 1879,27: *
 1879,29: __dest
 1879,35: VARIABLE
 1879,35: ,
 1879,37: const
 1879,43: char
 1879,48: *
 1879,50: __src
 1879,55: VARIABLE
 1879,55: )
 
186 char 
 1879,22: char
 
298 * option_type_qualifier_list option_pointer 
 1879,27: *
 
386 NAME VARIABLE 
 1879,29: __dest
 1879,35: VARIABLE
 
65 VARIABLE 
 1879,35: VARIABLE
 
300 , parameter_declaration 
 1879,35: ,
 1879,37: const
 1879,43: char
 1879,48: *
 1879,50: __src
 1879,55: VARIABLE
 
391 const 
 1879,37: const
 
103 char 
 1879,43: char
 
298 * option_type_qualifier_list option_pointer 
 1879,48: *
 
386 NAME VARIABLE 
 1879,50: __src
 1879,55: VARIABLE
 
65 VARIABLE 
 1879,55: VARIABLE
 
187 ) 
 1879,55: )
 
60 ; 
 1880,7: ;
 
23 extern 
 1882,1: extern
 
8 char 
 1882,8: char
 
5 * option_type_qualifier_list option_pointer 
 1882,13: *
 
64 NAME VARIABLE 
 1882,14: strncat
 1882,21: VARIABLE
 
65 VARIABLE 
 1882,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1882,22: (
 1882,23: char
 1882,28: *
 1882,30: __dest
 1882,36: VARIABLE
 1882,36: ,
 1882,38: const
 1882,44: char
 1882,49: *
 1882,51: __src
 1882,56: VARIABLE
 1882,56: ,
 1883,9: size_t
 1883,15: TYPE
 1883,16: __n
 1883,19: VARIABLE
 1883,19: )
 
186 char 
 1882,23: char
 
298 * option_type_qualifier_list option_pointer 
 1882,28: *
 
386 NAME VARIABLE 
 1882,30: __dest
 1882,36: VARIABLE
 
65 VARIABLE 
 1882,36: VARIABLE
 
300 , parameter_declaration 
 1882,36: ,
 1882,38: const
 1882,44: char
 1882,49: *
 1882,51: __src
 1882,56: VARIABLE
 
391 const 
 1882,38: const
 
103 char 
 1882,44: char
 
298 * option_type_qualifier_list option_pointer 
 1882,49: *
 
386 NAME VARIABLE 
 1882,51: __src
 1882,56: VARIABLE
 
65 VARIABLE 
 1882,56: VARIABLE
 
300 , parameter_declaration 
 1882,56: ,
 1883,9: size_t
 1883,15: TYPE
 1883,16: __n
 1883,19: VARIABLE
 
391 NAME TYPE 
 1883,9: size_t
 1883,15: TYPE
 
26 TYPE 
 1883,15: TYPE
 
298 NAME VARIABLE 
 1883,16: __n
 1883,19: VARIABLE
 
65 VARIABLE 
 1883,19: VARIABLE
 
187 ) 
 1883,19: )
 
60 ; 
 1883,22: ;
 
23 extern 
 1886,1: extern
 
8 int 
 1886,8: int
 
5 NAME VARIABLE 
 1886,12: strcmp
 1886,18: VARIABLE
 
65 VARIABLE 
 1886,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1886,19: (
 1886,20: const
 1886,26: char
 1886,31: *
 1886,32: __s1
 1886,36: VARIABLE
 1886,36: ,
 1886,38: const
 1886,44: char
 1886,49: *
 1886,50: __s2
 1886,54: VARIABLE
 1886,54: )
 
186 const 
 1886,20: const
 
103 char 
 1886,26: char
 
298 * option_type_qualifier_list option_pointer 
 1886,31: *
 
386 NAME VARIABLE 
 1886,32: __s1
 1886,36: VARIABLE
 
65 VARIABLE 
 1886,36: VARIABLE
 
300 , parameter_declaration 
 1886,36: ,
 1886,38: const
 1886,44: char
 1886,49: *
 1886,50: __s2
 1886,54: VARIABLE
 
391 const 
 1886,38: const
 
103 char 
 1886,44: char
 
298 * option_type_qualifier_list option_pointer 
 1886,49: *
 
386 NAME VARIABLE 
 1886,50: __s2
 1886,54: VARIABLE
 
65 VARIABLE 
 1886,54: VARIABLE
 
187 ) 
 1886,54: )
 
60 ; 
 1887,8: ;
 
23 extern 
 1889,1: extern
 
8 int 
 1889,8: int
 
5 NAME VARIABLE 
 1889,12: strncmp
 1889,19: VARIABLE
 
65 VARIABLE 
 1889,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1889,20: (
 1889,21: const
 1889,27: char
 1889,32: *
 1889,33: __s1
 1889,37: VARIABLE
 1889,37: ,
 1889,39: const
 1889,45: char
 1889,50: *
 1889,51: __s2
 1889,55: VARIABLE
 1889,55: ,
 1889,57: size_t
 1889,63: TYPE
 1889,64: __n
 1889,67: VARIABLE
 1889,67: )
 
186 const 
 1889,21: const
 
103 char 
 1889,27: char
 
298 * option_type_qualifier_list option_pointer 
 1889,32: *
 
386 NAME VARIABLE 
 1889,33: __s1
 1889,37: VARIABLE
 
65 VARIABLE 
 1889,37: VARIABLE
 
300 , parameter_declaration 
 1889,37: ,
 1889,39: const
 1889,45: char
 1889,50: *
 1889,51: __s2
 1889,55: VARIABLE
 
391 const 
 1889,39: const
 
103 char 
 1889,45: char
 
298 * option_type_qualifier_list option_pointer 
 1889,50: *
 
386 NAME VARIABLE 
 1889,51: __s2
 1889,55: VARIABLE
 
65 VARIABLE 
 1889,55: VARIABLE
 
300 , parameter_declaration 
 1889,55: ,
 1889,57: size_t
 1889,63: TYPE
 1889,64: __n
 1889,67: VARIABLE
 
391 NAME TYPE 
 1889,57: size_t
 1889,63: TYPE
 
26 TYPE 
 1889,63: TYPE
 
298 NAME VARIABLE 
 1889,64: __n
 1889,67: VARIABLE
 
65 VARIABLE 
 1889,67: VARIABLE
 
187 ) 
 1889,67: )
 
60 ; 
 1890,8: ;
 
23 extern 
 1893,1: extern
 
8 int 
 1893,8: int
 
5 NAME VARIABLE 
 1893,12: strcoll
 1893,19: VARIABLE
 
65 VARIABLE 
 1893,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1893,20: (
 1893,21: const
 1893,27: char
 1893,32: *
 1893,33: __s1
 1893,37: VARIABLE
 1893,37: ,
 1893,39: const
 1893,45: char
 1893,50: *
 1893,51: __s2
 1893,55: VARIABLE
 1893,55: )
 
186 const 
 1893,21: const
 
103 char 
 1893,27: char
 
298 * option_type_qualifier_list option_pointer 
 1893,32: *
 
386 NAME VARIABLE 
 1893,33: __s1
 1893,37: VARIABLE
 
65 VARIABLE 
 1893,37: VARIABLE
 
300 , parameter_declaration 
 1893,37: ,
 1893,39: const
 1893,45: char
 1893,50: *
 1893,51: __s2
 1893,55: VARIABLE
 
391 const 
 1893,39: const
 
103 char 
 1893,45: char
 
298 * option_type_qualifier_list option_pointer 
 1893,50: *
 
386 NAME VARIABLE 
 1893,51: __s2
 1893,55: VARIABLE
 
65 VARIABLE 
 1893,55: VARIABLE
 
187 ) 
 1893,55: )
 
60 ; 
 1894,8: ;
 
23 extern 
 1896,1: extern
 
8 NAME TYPE 
 1896,8: size_t
 1896,14: TYPE
 
26 TYPE 
 1896,14: TYPE
 
5 NAME VARIABLE 
 1896,15: strxfrm
 1896,22: VARIABLE
 
65 VARIABLE 
 1896,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1896,23: (
 1896,24: char
 1896,29: *
 1896,31: __dest
 1896,37: VARIABLE
 1896,37: ,
 1897,10: const
 1897,16: char
 1897,21: *
 1897,23: __src
 1897,28: VARIABLE
 1897,28: ,
 1897,30: size_t
 1897,36: TYPE
 1897,37: __n
 1897,40: VARIABLE
 1897,40: )
 
186 char 
 1896,24: char
 
298 * option_type_qualifier_list option_pointer 
 1896,29: *
 
386 NAME VARIABLE 
 1896,31: __dest
 1896,37: VARIABLE
 
65 VARIABLE 
 1896,37: VARIABLE
 
300 , parameter_declaration 
 1896,37: ,
 1897,10: const
 1897,16: char
 1897,21: *
 1897,23: __src
 1897,28: VARIABLE
 
391 const 
 1897,10: const
 
103 char 
 1897,16: char
 
298 * option_type_qualifier_list option_pointer 
 1897,21: *
 
386 NAME VARIABLE 
 1897,23: __src
 1897,28: VARIABLE
 
65 VARIABLE 
 1897,28: VARIABLE
 
300 , parameter_declaration 
 1897,28: ,
 1897,30: size_t
 1897,36: TYPE
 1897,37: __n
 1897,40: VARIABLE
 
391 NAME TYPE 
 1897,30: size_t
 1897,36: TYPE
 
26 TYPE 
 1897,36: TYPE
 
298 NAME VARIABLE 
 1897,37: __n
 1897,40: VARIABLE
 
65 VARIABLE 
 1897,40: VARIABLE
 
187 ) 
 1897,40: )
 
60 ; 
 1898,7: ;
 
23 struct 
 1906,1: struct
 
22 NAME VARIABLE 
 1906,8: __locale_struct
 1906,23: VARIABLE
 
65 VARIABLE 
 1906,23: VARIABLE
 
89 { struct_declaration_list } 
 1907,1: {
 1909,3: struct
 1909,10: __locale_data
 1909,23: VARIABLE
 1909,24: *
 1909,25: __locales
 1909,34: VARIABLE
 1909,34: [
 1909,35: 13
 1909,37: ]
 1909,38: ;
 1912,3: const
 1912,9: unsigned
 1912,18: short
 1912,24: int
 1912,28: *
 1912,29: __ctype_b
 1912,38: VARIABLE
 1912,38: ;
 1913,3: const
 1913,9: int
 1913,13: *
 1913,14: __ctype_tolower
 1913,29: VARIABLE
 1913,29: ;
 1914,3: const
 1914,9: int
 1914,13: *
 1914,14: __ctype_toupper
 1914,29: VARIABLE
 1914,29: ;
 1917,3: const
 1917,9: char
 1917,14: *
 1917,15: __names
 1917,22: VARIABLE
 1917,22: [
 1917,23: 13
 1917,25: ]
 1917,26: ;
 1918,1: }
 
126 struct 
 1909,3: struct
 
22 NAME VARIABLE 
 1909,10: __locale_data
 1909,23: VARIABLE
 
65 VARIABLE 
 1909,23: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 1909,24: *
 
64 NAME VARIABLE 
 1909,25: __locales
 1909,34: VARIABLE
 
65 VARIABLE 
 1909,34: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 1909,34: [
 1909,35: 13
 1909,37: ]
 
188 CONSTANT 
 1909,35: 13
 
305 ] 
 1909,37: ]
 
313 ; 
 1909,38: ;
 
198 const 
 1912,3: const
 
133 unsigned 
 1912,9: unsigned
 
208 short 
 1912,18: short
 
208 int 
 1912,24: int
 
200 * option_type_qualifier_list option_pointer 
 1912,28: *
 
64 NAME VARIABLE 
 1912,29: __ctype_b
 1912,38: VARIABLE
 
65 VARIABLE 
 1912,38: VARIABLE
 
313 ; 
 1912,38: ;
 
198 const 
 1913,3: const
 
133 int 
 1913,9: int
 
200 * option_type_qualifier_list option_pointer 
 1913,13: *
 
64 NAME VARIABLE 
 1913,14: __ctype_tolower
 1913,29: VARIABLE
 
65 VARIABLE 
 1913,29: VARIABLE
 
313 ; 
 1913,29: ;
 
198 const 
 1914,3: const
 
133 int 
 1914,9: int
 
200 * option_type_qualifier_list option_pointer 
 1914,13: *
 
64 NAME VARIABLE 
 1914,14: __ctype_toupper
 1914,29: VARIABLE
 
65 VARIABLE 
 1914,29: VARIABLE
 
313 ; 
 1914,29: ;
 
198 const 
 1917,3: const
 
133 char 
 1917,9: char
 
200 * option_type_qualifier_list option_pointer 
 1917,14: *
 
64 NAME VARIABLE 
 1917,15: __names
 1917,22: VARIABLE
 
65 VARIABLE 
 1917,22: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 1917,22: [
 1917,23: 13
 1917,25: ]
 
188 CONSTANT 
 1917,23: 13
 
305 ] 
 1917,25: ]
 
313 ; 
 1917,26: ;
 
198 } 
 1918,1: }
 
60 ; 
 1918,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1920,1: typedef
 1920,9: struct
 1920,16: __locale_struct
 1920,31: VARIABLE
 
54 struct 
 1920,9: struct
 
22 NAME VARIABLE 
 1920,16: __locale_struct
 1920,31: VARIABLE
 
65 VARIABLE 
 1920,31: VARIABLE
 
6 * option_type_qualifier_list option_pointer 
 1920,32: *
 
64 NAME VARIABLE 
 1920,33: __locale_t
 1920,43: VARIABLE
 
65 VARIABLE 
 1920,43: VARIABLE
 
70 ; 
 1920,43: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 1923,1: typedef
 1923,9: __locale_t
 1923,19: TYPE
 
54 NAME TYPE 
 1923,9: __locale_t
 1923,19: TYPE
 
26 TYPE 
 1923,19: TYPE
 
6 NAME VARIABLE 
 1923,20: locale_t
 1923,28: VARIABLE
 
65 VARIABLE 
 1923,28: VARIABLE
 
70 ; 
 1923,28: ;
 
23 extern 
 1927,1: extern
 
8 int 
 1927,8: int
 
5 NAME VARIABLE 
 1927,12: strcoll_l
 1927,21: VARIABLE
 
65 VARIABLE 
 1927,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1927,22: (
 1927,23: const
 1927,29: char
 1927,34: *
 1927,35: __s1
 1927,39: VARIABLE
 1927,39: ,
 1927,41: const
 1927,47: char
 1927,52: *
 1927,53: __s2
 1927,57: VARIABLE
 1927,57: ,
 1927,59: locale_t
 1927,67: TYPE
 1927,68: __l
 1927,71: VARIABLE
 1927,71: )
 
186 const 
 1927,23: const
 
103 char 
 1927,29: char
 
298 * option_type_qualifier_list option_pointer 
 1927,34: *
 
386 NAME VARIABLE 
 1927,35: __s1
 1927,39: VARIABLE
 
65 VARIABLE 
 1927,39: VARIABLE
 
300 , parameter_declaration 
 1927,39: ,
 1927,41: const
 1927,47: char
 1927,52: *
 1927,53: __s2
 1927,57: VARIABLE
 
391 const 
 1927,41: const
 
103 char 
 1927,47: char
 
298 * option_type_qualifier_list option_pointer 
 1927,52: *
 
386 NAME VARIABLE 
 1927,53: __s2
 1927,57: VARIABLE
 
65 VARIABLE 
 1927,57: VARIABLE
 
300 , parameter_declaration 
 1927,57: ,
 1927,59: locale_t
 1927,67: TYPE
 1927,68: __l
 1927,71: VARIABLE
 
391 NAME TYPE 
 1927,59: locale_t
 1927,67: TYPE
 
26 TYPE 
 1927,67: TYPE
 
298 NAME VARIABLE 
 1927,68: __l
 1927,71: VARIABLE
 
65 VARIABLE 
 1927,71: VARIABLE
 
187 ) 
 1927,71: )
 
60 ; 
 1928,8: ;
 
23 extern 
 1931,1: extern
 
8 NAME TYPE 
 1931,8: size_t
 1931,14: TYPE
 
26 TYPE 
 1931,14: TYPE
 
5 NAME VARIABLE 
 1931,15: strxfrm_l
 1931,24: VARIABLE
 
65 VARIABLE 
 1931,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1931,25: (
 1931,26: char
 1931,31: *
 1931,32: __dest
 1931,38: VARIABLE
 1931,38: ,
 1931,40: const
 1931,46: char
 1931,51: *
 1931,52: __src
 1931,57: VARIABLE
 1931,57: ,
 1931,59: size_t
 1931,65: TYPE
 1931,66: __n
 1931,69: VARIABLE
 1931,69: ,
 1932,5: locale_t
 1932,13: TYPE
 1932,14: __l
 1932,17: VARIABLE
 1932,17: )
 
186 char 
 1931,26: char
 
298 * option_type_qualifier_list option_pointer 
 1931,31: *
 
386 NAME VARIABLE 
 1931,32: __dest
 1931,38: VARIABLE
 
65 VARIABLE 
 1931,38: VARIABLE
 
300 , parameter_declaration 
 1931,38: ,
 1931,40: const
 1931,46: char
 1931,51: *
 1931,52: __src
 1931,57: VARIABLE
 
391 const 
 1931,40: const
 
103 char 
 1931,46: char
 
298 * option_type_qualifier_list option_pointer 
 1931,51: *
 
386 NAME VARIABLE 
 1931,52: __src
 1931,57: VARIABLE
 
65 VARIABLE 
 1931,57: VARIABLE
 
300 , parameter_declaration 
 1931,57: ,
 1931,59: size_t
 1931,65: TYPE
 1931,66: __n
 1931,69: VARIABLE
 
391 NAME TYPE 
 1931,59: size_t
 1931,65: TYPE
 
26 TYPE 
 1931,65: TYPE
 
298 NAME VARIABLE 
 1931,66: __n
 1931,69: VARIABLE
 
65 VARIABLE 
 1931,69: VARIABLE
 
300 , parameter_declaration 
 1931,69: ,
 1932,5: locale_t
 1932,13: TYPE
 1932,14: __l
 1932,17: VARIABLE
 
391 NAME TYPE 
 1932,5: locale_t
 1932,13: TYPE
 
26 TYPE 
 1932,13: TYPE
 
298 NAME VARIABLE 
 1932,14: __l
 1932,17: VARIABLE
 
65 VARIABLE 
 1932,17: VARIABLE
 
187 ) 
 1932,17: )
 
60 ; 
 1933,6: ;
 
23 extern 
 1939,1: extern
 
8 char 
 1939,8: char
 
5 * option_type_qualifier_list option_pointer 
 1939,13: *
 
64 NAME VARIABLE 
 1939,14: strdup
 1939,20: VARIABLE
 
65 VARIABLE 
 1939,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1939,21: (
 1939,22: const
 1939,28: char
 1939,33: *
 1939,34: __s
 1939,37: VARIABLE
 1939,37: )
 
186 const 
 1939,22: const
 
103 char 
 1939,28: char
 
298 * option_type_qualifier_list option_pointer 
 1939,33: *
 
386 NAME VARIABLE 
 1939,34: __s
 1939,37: VARIABLE
 
65 VARIABLE 
 1939,37: VARIABLE
 
187 ) 
 1939,37: )
 
60 ; 
 1940,8: ;
 
23 extern 
 1947,1: extern
 
8 char 
 1947,8: char
 
5 * option_type_qualifier_list option_pointer 
 1947,13: *
 
64 NAME VARIABLE 
 1947,14: strndup
 1947,21: VARIABLE
 
65 VARIABLE 
 1947,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1947,22: (
 1947,23: const
 1947,29: char
 1947,34: *
 1947,35: __string
 1947,43: VARIABLE
 1947,43: ,
 1947,45: size_t
 1947,51: TYPE
 1947,52: __n
 1947,55: VARIABLE
 1947,55: )
 
186 const 
 1947,23: const
 
103 char 
 1947,29: char
 
298 * option_type_qualifier_list option_pointer 
 1947,34: *
 
386 NAME VARIABLE 
 1947,35: __string
 1947,43: VARIABLE
 
65 VARIABLE 
 1947,43: VARIABLE
 
300 , parameter_declaration 
 1947,43: ,
 1947,45: size_t
 1947,51: TYPE
 1947,52: __n
 1947,55: VARIABLE
 
391 NAME TYPE 
 1947,45: size_t
 1947,51: TYPE
 
26 TYPE 
 1947,51: TYPE
 
298 NAME VARIABLE 
 1947,52: __n
 1947,55: VARIABLE
 
65 VARIABLE 
 1947,55: VARIABLE
 
187 ) 
 1947,55: )
 
60 ; 
 1948,8: ;
 
23 extern 
 1950,1: extern
 
8 char 
 1950,8: char
 
5 * option_type_qualifier_list option_pointer 
 1950,13: *
 
64 NAME VARIABLE 
 1950,14: strchr
 1950,20: VARIABLE
 
65 VARIABLE 
 1950,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1950,21: (
 1950,22: const
 1950,28: char
 1950,33: *
 1950,34: __s
 1950,37: VARIABLE
 1950,37: ,
 1950,39: int
 1950,43: __c
 1950,46: VARIABLE
 1950,46: )
 
186 const 
 1950,22: const
 
103 char 
 1950,28: char
 
298 * option_type_qualifier_list option_pointer 
 1950,33: *
 
386 NAME VARIABLE 
 1950,34: __s
 1950,37: VARIABLE
 
65 VARIABLE 
 1950,37: VARIABLE
 
300 , parameter_declaration 
 1950,37: ,
 1950,39: int
 1950,43: __c
 1950,46: VARIABLE
 
391 int 
 1950,39: int
 
298 NAME VARIABLE 
 1950,43: __c
 1950,46: VARIABLE
 
65 VARIABLE 
 1950,46: VARIABLE
 
187 ) 
 1950,46: )
 
60 ; 
 1951,8: ;
 
23 extern 
 1953,1: extern
 
8 char 
 1953,8: char
 
5 * option_type_qualifier_list option_pointer 
 1953,13: *
 
64 NAME VARIABLE 
 1953,14: strrchr
 1953,21: VARIABLE
 
65 VARIABLE 
 1953,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1953,22: (
 1953,23: const
 1953,29: char
 1953,34: *
 1953,35: __s
 1953,38: VARIABLE
 1953,38: ,
 1953,40: int
 1953,44: __c
 1953,47: VARIABLE
 1953,47: )
 
186 const 
 1953,23: const
 
103 char 
 1953,29: char
 
298 * option_type_qualifier_list option_pointer 
 1953,34: *
 
386 NAME VARIABLE 
 1953,35: __s
 1953,38: VARIABLE
 
65 VARIABLE 
 1953,38: VARIABLE
 
300 , parameter_declaration 
 1953,38: ,
 1953,40: int
 1953,44: __c
 1953,47: VARIABLE
 
391 int 
 1953,40: int
 
298 NAME VARIABLE 
 1953,44: __c
 1953,47: VARIABLE
 
65 VARIABLE 
 1953,47: VARIABLE
 
187 ) 
 1953,47: )
 
60 ; 
 1954,8: ;
 
23 extern 
 1956,1: extern
 
8 NAME TYPE 
 1956,8: size_t
 1956,14: TYPE
 
26 TYPE 
 1956,14: TYPE
 
5 NAME VARIABLE 
 1956,15: strcspn
 1956,22: VARIABLE
 
65 VARIABLE 
 1956,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1956,23: (
 1956,24: const
 1956,30: char
 1956,35: *
 1956,36: __s
 1956,39: VARIABLE
 1956,39: ,
 1956,41: const
 1956,47: char
 1956,52: *
 1956,53: __reject
 1956,61: VARIABLE
 1956,61: )
 
186 const 
 1956,24: const
 
103 char 
 1956,30: char
 
298 * option_type_qualifier_list option_pointer 
 1956,35: *
 
386 NAME VARIABLE 
 1956,36: __s
 1956,39: VARIABLE
 
65 VARIABLE 
 1956,39: VARIABLE
 
300 , parameter_declaration 
 1956,39: ,
 1956,41: const
 1956,47: char
 1956,52: *
 1956,53: __reject
 1956,61: VARIABLE
 
391 const 
 1956,41: const
 
103 char 
 1956,47: char
 
298 * option_type_qualifier_list option_pointer 
 1956,52: *
 
386 NAME VARIABLE 
 1956,53: __reject
 1956,61: VARIABLE
 
65 VARIABLE 
 1956,61: VARIABLE
 
187 ) 
 1956,61: )
 
60 ; 
 1957,8: ;
 
23 extern 
 1960,1: extern
 
8 NAME TYPE 
 1960,8: size_t
 1960,14: TYPE
 
26 TYPE 
 1960,14: TYPE
 
5 NAME VARIABLE 
 1960,15: strspn
 1960,21: VARIABLE
 
65 VARIABLE 
 1960,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1960,22: (
 1960,23: const
 1960,29: char
 1960,34: *
 1960,35: __s
 1960,38: VARIABLE
 1960,38: ,
 1960,40: const
 1960,46: char
 1960,51: *
 1960,52: __accept
 1960,60: VARIABLE
 1960,60: )
 
186 const 
 1960,23: const
 
103 char 
 1960,29: char
 
298 * option_type_qualifier_list option_pointer 
 1960,34: *
 
386 NAME VARIABLE 
 1960,35: __s
 1960,38: VARIABLE
 
65 VARIABLE 
 1960,38: VARIABLE
 
300 , parameter_declaration 
 1960,38: ,
 1960,40: const
 1960,46: char
 1960,51: *
 1960,52: __accept
 1960,60: VARIABLE
 
391 const 
 1960,40: const
 
103 char 
 1960,46: char
 
298 * option_type_qualifier_list option_pointer 
 1960,51: *
 
386 NAME VARIABLE 
 1960,52: __accept
 1960,60: VARIABLE
 
65 VARIABLE 
 1960,60: VARIABLE
 
187 ) 
 1960,60: )
 
60 ; 
 1961,8: ;
 
23 extern 
 1963,1: extern
 
8 char 
 1963,8: char
 
5 * option_type_qualifier_list option_pointer 
 1963,13: *
 
64 NAME VARIABLE 
 1963,14: strpbrk
 1963,21: VARIABLE
 
65 VARIABLE 
 1963,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1963,22: (
 1963,23: const
 1963,29: char
 1963,34: *
 1963,35: __s
 1963,38: VARIABLE
 1963,38: ,
 1963,40: const
 1963,46: char
 1963,51: *
 1963,52: __accept
 1963,60: VARIABLE
 1963,60: )
 
186 const 
 1963,23: const
 
103 char 
 1963,29: char
 
298 * option_type_qualifier_list option_pointer 
 1963,34: *
 
386 NAME VARIABLE 
 1963,35: __s
 1963,38: VARIABLE
 
65 VARIABLE 
 1963,38: VARIABLE
 
300 , parameter_declaration 
 1963,38: ,
 1963,40: const
 1963,46: char
 1963,51: *
 1963,52: __accept
 1963,60: VARIABLE
 
391 const 
 1963,40: const
 
103 char 
 1963,46: char
 
298 * option_type_qualifier_list option_pointer 
 1963,51: *
 
386 NAME VARIABLE 
 1963,52: __accept
 1963,60: VARIABLE
 
65 VARIABLE 
 1963,60: VARIABLE
 
187 ) 
 1963,60: )
 
60 ; 
 1964,8: ;
 
23 extern 
 1966,1: extern
 
8 char 
 1966,8: char
 
5 * option_type_qualifier_list option_pointer 
 1966,13: *
 
64 NAME VARIABLE 
 1966,14: strstr
 1966,20: VARIABLE
 
65 VARIABLE 
 1966,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1966,21: (
 1966,22: const
 1966,28: char
 1966,33: *
 1966,34: __haystack
 1966,44: VARIABLE
 1966,44: ,
 1966,46: const
 1966,52: char
 1966,57: *
 1966,58: __needle
 1966,66: VARIABLE
 1966,66: )
 
186 const 
 1966,22: const
 
103 char 
 1966,28: char
 
298 * option_type_qualifier_list option_pointer 
 1966,33: *
 
386 NAME VARIABLE 
 1966,34: __haystack
 1966,44: VARIABLE
 
65 VARIABLE 
 1966,44: VARIABLE
 
300 , parameter_declaration 
 1966,44: ,
 1966,46: const
 1966,52: char
 1966,57: *
 1966,58: __needle
 1966,66: VARIABLE
 
391 const 
 1966,46: const
 
103 char 
 1966,52: char
 
298 * option_type_qualifier_list option_pointer 
 1966,57: *
 
386 NAME VARIABLE 
 1966,58: __needle
 1966,66: VARIABLE
 
65 VARIABLE 
 1966,66: VARIABLE
 
187 ) 
 1966,66: )
 
60 ; 
 1967,8: ;
 
23 extern 
 1972,1: extern
 
8 char 
 1972,8: char
 
5 * option_type_qualifier_list option_pointer 
 1972,13: *
 
64 NAME VARIABLE 
 1972,14: strtok
 1972,20: VARIABLE
 
65 VARIABLE 
 1972,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1972,21: (
 1972,22: char
 1972,27: *
 1972,29: __s
 1972,32: VARIABLE
 1972,32: ,
 1972,34: const
 1972,40: char
 1972,45: *
 1972,47: __delim
 1972,54: VARIABLE
 1972,54: )
 
186 char 
 1972,22: char
 
298 * option_type_qualifier_list option_pointer 
 1972,27: *
 
386 NAME VARIABLE 
 1972,29: __s
 1972,32: VARIABLE
 
65 VARIABLE 
 1972,32: VARIABLE
 
300 , parameter_declaration 
 1972,32: ,
 1972,34: const
 1972,40: char
 1972,45: *
 1972,47: __delim
 1972,54: VARIABLE
 
391 const 
 1972,34: const
 
103 char 
 1972,40: char
 
298 * option_type_qualifier_list option_pointer 
 1972,45: *
 
386 NAME VARIABLE 
 1972,47: __delim
 1972,54: VARIABLE
 
65 VARIABLE 
 1972,54: VARIABLE
 
187 ) 
 1972,54: )
 
60 ; 
 1973,7: ;
 
23 extern 
 1977,1: extern
 
8 char 
 1977,8: char
 
5 * option_type_qualifier_list option_pointer 
 1977,13: *
 
64 NAME VARIABLE 
 1977,14: __strtok_r
 1977,24: VARIABLE
 
65 VARIABLE 
 1977,24: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1977,25: (
 1977,26: char
 1977,31: *
 1977,33: __s
 1977,36: VARIABLE
 1977,36: ,
 1978,5: const
 1978,11: char
 1978,16: *
 1978,18: __delim
 1978,25: VARIABLE
 1978,25: ,
 1979,5: char
 1979,10: *
 1979,11: *
 1979,13: __save_ptr
 1979,23: VARIABLE
 1979,23: )
 
186 char 
 1977,26: char
 
298 * option_type_qualifier_list option_pointer 
 1977,31: *
 
386 NAME VARIABLE 
 1977,33: __s
 1977,36: VARIABLE
 
65 VARIABLE 
 1977,36: VARIABLE
 
300 , parameter_declaration 
 1977,36: ,
 1978,5: const
 1978,11: char
 1978,16: *
 1978,18: __delim
 1978,25: VARIABLE
 
391 const 
 1978,5: const
 
103 char 
 1978,11: char
 
298 * option_type_qualifier_list option_pointer 
 1978,16: *
 
386 NAME VARIABLE 
 1978,18: __delim
 1978,25: VARIABLE
 
65 VARIABLE 
 1978,25: VARIABLE
 
300 , parameter_declaration 
 1978,25: ,
 1979,5: char
 1979,10: *
 1979,11: *
 1979,13: __save_ptr
 1979,23: VARIABLE
 
391 char 
 1979,5: char
 
298 * option_type_qualifier_list option_pointer 
 1979,10: *
 1979,11: *
 
116 * option_type_qualifier_list option_pointer 
 1979,11: *
 
386 NAME VARIABLE 
 1979,13: __save_ptr
 1979,23: VARIABLE
 
65 VARIABLE 
 1979,23: VARIABLE
 
187 ) 
 1979,23: )
 
60 ; 
 1980,7: ;
 
23 extern 
 1982,1: extern
 
8 char 
 1982,8: char
 
5 * option_type_qualifier_list option_pointer 
 1982,13: *
 
64 NAME VARIABLE 
 1982,14: strtok_r
 1982,22: VARIABLE
 
65 VARIABLE 
 1982,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1982,23: (
 1982,24: char
 1982,29: *
 1982,31: __s
 1982,34: VARIABLE
 1982,34: ,
 1982,36: const
 1982,42: char
 1982,47: *
 1982,49: __delim
 1982,56: VARIABLE
 1982,56: ,
 1983,10: char
 1983,15: *
 1983,16: *
 1983,18: __save_ptr
 1983,28: VARIABLE
 1983,28: )
 
186 char 
 1982,24: char
 
298 * option_type_qualifier_list option_pointer 
 1982,29: *
 
386 NAME VARIABLE 
 1982,31: __s
 1982,34: VARIABLE
 
65 VARIABLE 
 1982,34: VARIABLE
 
300 , parameter_declaration 
 1982,34: ,
 1982,36: const
 1982,42: char
 1982,47: *
 1982,49: __delim
 1982,56: VARIABLE
 
391 const 
 1982,36: const
 
103 char 
 1982,42: char
 
298 * option_type_qualifier_list option_pointer 
 1982,47: *
 
386 NAME VARIABLE 
 1982,49: __delim
 1982,56: VARIABLE
 
65 VARIABLE 
 1982,56: VARIABLE
 
300 , parameter_declaration 
 1982,56: ,
 1983,10: char
 1983,15: *
 1983,16: *
 1983,18: __save_ptr
 1983,28: VARIABLE
 
391 char 
 1983,10: char
 
298 * option_type_qualifier_list option_pointer 
 1983,15: *
 1983,16: *
 
116 * option_type_qualifier_list option_pointer 
 1983,16: *
 
386 NAME VARIABLE 
 1983,18: __save_ptr
 1983,28: VARIABLE
 
65 VARIABLE 
 1983,28: VARIABLE
 
187 ) 
 1983,28: )
 
60 ; 
 1984,7: ;
 
23 extern 
 1986,1: extern
 
8 NAME TYPE 
 1986,8: size_t
 1986,14: TYPE
 
26 TYPE 
 1986,14: TYPE
 
5 NAME VARIABLE 
 1986,15: strlen
 1986,21: VARIABLE
 
65 VARIABLE 
 1986,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1986,22: (
 1986,23: const
 1986,29: char
 1986,34: *
 1986,35: __s
 1986,38: VARIABLE
 1986,38: )
 
186 const 
 1986,23: const
 
103 char 
 1986,29: char
 
298 * option_type_qualifier_list option_pointer 
 1986,34: *
 
386 NAME VARIABLE 
 1986,35: __s
 1986,38: VARIABLE
 
65 VARIABLE 
 1986,38: VARIABLE
 
187 ) 
 1986,38: )
 
60 ; 
 1987,8: ;
 
23 extern 
 1992,1: extern
 
8 NAME TYPE 
 1992,8: size_t
 1992,14: TYPE
 
26 TYPE 
 1992,14: TYPE
 
5 NAME VARIABLE 
 1992,15: strnlen
 1992,22: VARIABLE
 
65 VARIABLE 
 1992,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 1992,23: (
 1992,24: const
 1992,30: char
 1992,35: *
 1992,36: __string
 1992,44: VARIABLE
 1992,44: ,
 1992,46: size_t
 1992,52: TYPE
 1992,53: __maxlen
 1992,61: VARIABLE
 1992,61: )
 
186 const 
 1992,24: const
 
103 char 
 1992,30: char
 
298 * option_type_qualifier_list option_pointer 
 1992,35: *
 
386 NAME VARIABLE 
 1992,36: __string
 1992,44: VARIABLE
 
65 VARIABLE 
 1992,44: VARIABLE
 
300 , parameter_declaration 
 1992,44: ,
 1992,46: size_t
 1992,52: TYPE
 1992,53: __maxlen
 1992,61: VARIABLE
 
391 NAME TYPE 
 1992,46: size_t
 1992,52: TYPE
 
26 TYPE 
 1992,52: TYPE
 
298 NAME VARIABLE 
 1992,53: __maxlen
 1992,61: VARIABLE
 
65 VARIABLE 
 1992,61: VARIABLE
 
187 ) 
 1992,61: )
 
60 ; 
 1993,8: ;
 
23 extern 
 1998,1: extern
 
8 char 
 1998,8: char
 
5 * option_type_qualifier_list option_pointer 
 1998,13: *
 
64 NAME VARIABLE 
 1998,14: strerror
 1998,22: VARIABLE
 
65 VARIABLE 
 1998,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 1998,23: (
 1998,24: int
 1998,28: __errnum
 1998,36: VARIABLE
 1998,36: )
 
186 int 
 1998,24: int
 
298 NAME VARIABLE 
 1998,28: __errnum
 1998,36: VARIABLE
 
65 VARIABLE 
 1998,36: VARIABLE
 
187 ) 
 1998,36: )
 
60 ; 
 1998,38: ;
 
23 extern 
 2000,1: extern
 
8 int 
 2000,8: int
 
5 NAME VARIABLE 
 2000,12: strerror_r
 2000,22: VARIABLE
 
65 VARIABLE 
 2000,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2000,23: (
 2000,24: int
 2000,28: __errnum
 2000,36: VARIABLE
 2000,36: ,
 2000,38: char
 2000,43: *
 2000,44: __buf
 2000,49: VARIABLE
 2000,49: ,
 2000,51: size_t
 2000,57: TYPE
 2000,58: __buflen
 2000,66: VARIABLE
 2000,66: )
 
186 int 
 2000,24: int
 
298 NAME VARIABLE 
 2000,28: __errnum
 2000,36: VARIABLE
 
65 VARIABLE 
 2000,36: VARIABLE
 
300 , parameter_declaration 
 2000,36: ,
 2000,38: char
 2000,43: *
 2000,44: __buf
 2000,49: VARIABLE
 
391 char 
 2000,38: char
 
298 * option_type_qualifier_list option_pointer 
 2000,43: *
 
386 NAME VARIABLE 
 2000,44: __buf
 2000,49: VARIABLE
 
65 VARIABLE 
 2000,49: VARIABLE
 
300 , parameter_declaration 
 2000,49: ,
 2000,51: size_t
 2000,57: TYPE
 2000,58: __buflen
 2000,66: VARIABLE
 
391 NAME TYPE 
 2000,51: size_t
 2000,57: TYPE
 
26 TYPE 
 2000,57: TYPE
 
298 NAME VARIABLE 
 2000,58: __buflen
 2000,66: VARIABLE
 
65 VARIABLE 
 2000,66: VARIABLE
 
187 ) 
 2000,66: )
 
60 ; 
 2003,5: ;
 
23 extern 
 2005,1: extern
 
8 char 
 2005,8: char
 
5 * option_type_qualifier_list option_pointer 
 2005,13: *
 
64 NAME VARIABLE 
 2005,14: strerror_l
 2005,24: VARIABLE
 
65 VARIABLE 
 2005,24: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2005,25: (
 2005,26: int
 2005,30: __errnum
 2005,38: VARIABLE
 2005,38: ,
 2005,40: locale_t
 2005,48: TYPE
 2005,49: __l
 2005,52: VARIABLE
 2005,52: )
 
186 int 
 2005,26: int
 
298 NAME VARIABLE 
 2005,30: __errnum
 2005,38: VARIABLE
 
65 VARIABLE 
 2005,38: VARIABLE
 
300 , parameter_declaration 
 2005,38: ,
 2005,40: locale_t
 2005,48: TYPE
 2005,49: __l
 2005,52: VARIABLE
 
391 NAME TYPE 
 2005,40: locale_t
 2005,48: TYPE
 
26 TYPE 
 2005,48: TYPE
 
298 NAME VARIABLE 
 2005,49: __l
 2005,52: VARIABLE
 
65 VARIABLE 
 2005,52: VARIABLE
 
187 ) 
 2005,52: )
 
60 ; 
 2005,54: ;
 
23 extern 
 2023,1: extern
 
8 int 
 2023,8: int
 
5 NAME VARIABLE 
 2023,12: bcmp
 2023,16: VARIABLE
 
65 VARIABLE 
 2023,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2023,17: (
 2023,18: const
 2023,24: void
 2023,29: *
 2023,30: __s1
 2023,34: VARIABLE
 2023,34: ,
 2023,36: const
 2023,42: void
 2023,47: *
 2023,48: __s2
 2023,52: VARIABLE
 2023,52: ,
 2023,54: size_t
 2023,60: TYPE
 2023,61: __n
 2023,64: VARIABLE
 2023,64: )
 
186 const 
 2023,18: const
 
103 void 
 2023,24: void
 
298 * option_type_qualifier_list option_pointer 
 2023,29: *
 
386 NAME VARIABLE 
 2023,30: __s1
 2023,34: VARIABLE
 
65 VARIABLE 
 2023,34: VARIABLE
 
300 , parameter_declaration 
 2023,34: ,
 2023,36: const
 2023,42: void
 2023,47: *
 2023,48: __s2
 2023,52: VARIABLE
 
391 const 
 2023,36: const
 
103 void 
 2023,42: void
 
298 * option_type_qualifier_list option_pointer 
 2023,47: *
 
386 NAME VARIABLE 
 2023,48: __s2
 2023,52: VARIABLE
 
65 VARIABLE 
 2023,52: VARIABLE
 
300 , parameter_declaration 
 2023,52: ,
 2023,54: size_t
 2023,60: TYPE
 2023,61: __n
 2023,64: VARIABLE
 
391 NAME TYPE 
 2023,54: size_t
 2023,60: TYPE
 
26 TYPE 
 2023,60: TYPE
 
298 NAME VARIABLE 
 2023,61: __n
 2023,64: VARIABLE
 
65 VARIABLE 
 2023,64: VARIABLE
 
187 ) 
 2023,64: )
 
60 ; 
 2024,8: ;
 
23 extern 
 2027,1: extern
 
8 void 
 2027,8: void
 
5 NAME VARIABLE 
 2027,13: bcopy
 2027,18: VARIABLE
 
65 VARIABLE 
 2027,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2027,19: (
 2027,20: const
 2027,26: void
 2027,31: *
 2027,32: __src
 2027,37: VARIABLE
 2027,37: ,
 2027,39: void
 2027,44: *
 2027,45: __dest
 2027,51: VARIABLE
 2027,51: ,
 2027,53: size_t
 2027,59: TYPE
 2027,60: __n
 2027,63: VARIABLE
 2027,63: )
 
186 const 
 2027,20: const
 
103 void 
 2027,26: void
 
298 * option_type_qualifier_list option_pointer 
 2027,31: *
 
386 NAME VARIABLE 
 2027,32: __src
 2027,37: VARIABLE
 
65 VARIABLE 
 2027,37: VARIABLE
 
300 , parameter_declaration 
 2027,37: ,
 2027,39: void
 2027,44: *
 2027,45: __dest
 2027,51: VARIABLE
 
391 void 
 2027,39: void
 
298 * option_type_qualifier_list option_pointer 
 2027,44: *
 
386 NAME VARIABLE 
 2027,45: __dest
 2027,51: VARIABLE
 
65 VARIABLE 
 2027,51: VARIABLE
 
300 , parameter_declaration 
 2027,51: ,
 2027,53: size_t
 2027,59: TYPE
 2027,60: __n
 2027,63: VARIABLE
 
391 NAME TYPE 
 2027,53: size_t
 2027,59: TYPE
 
26 TYPE 
 2027,59: TYPE
 
298 NAME VARIABLE 
 2027,60: __n
 2027,63: VARIABLE
 
65 VARIABLE 
 2027,63: VARIABLE
 
187 ) 
 2027,63: )
 
60 ; 
 2028,4: ;
 
23 extern 
 2031,1: extern
 
8 void 
 2031,8: void
 
5 NAME VARIABLE 
 2031,13: bzero
 2031,18: VARIABLE
 
65 VARIABLE 
 2031,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2031,19: (
 2031,20: void
 2031,25: *
 2031,26: __s
 2031,29: VARIABLE
 2031,29: ,
 2031,31: size_t
 2031,37: TYPE
 2031,38: __n
 2031,41: VARIABLE
 2031,41: )
 
186 void 
 2031,20: void
 
298 * option_type_qualifier_list option_pointer 
 2031,25: *
 
386 NAME VARIABLE 
 2031,26: __s
 2031,29: VARIABLE
 
65 VARIABLE 
 2031,29: VARIABLE
 
300 , parameter_declaration 
 2031,29: ,
 2031,31: size_t
 2031,37: TYPE
 2031,38: __n
 2031,41: VARIABLE
 
391 NAME TYPE 
 2031,31: size_t
 2031,37: TYPE
 
26 TYPE 
 2031,37: TYPE
 
298 NAME VARIABLE 
 2031,38: __n
 2031,41: VARIABLE
 
65 VARIABLE 
 2031,41: VARIABLE
 
187 ) 
 2031,41: )
 
60 ; 
 2031,44: ;
 
23 extern 
 2033,1: extern
 
8 char 
 2033,8: char
 
5 * option_type_qualifier_list option_pointer 
 2033,13: *
 
64 NAME VARIABLE 
 2033,14: index
 2033,19: VARIABLE
 
65 VARIABLE 
 2033,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2033,20: (
 2033,21: const
 2033,27: char
 2033,32: *
 2033,33: __s
 2033,36: VARIABLE
 2033,36: ,
 2033,38: int
 2033,42: __c
 2033,45: VARIABLE
 2033,45: )
 
186 const 
 2033,21: const
 
103 char 
 2033,27: char
 
298 * option_type_qualifier_list option_pointer 
 2033,32: *
 
386 NAME VARIABLE 
 2033,33: __s
 2033,36: VARIABLE
 
65 VARIABLE 
 2033,36: VARIABLE
 
300 , parameter_declaration 
 2033,36: ,
 2033,38: int
 2033,42: __c
 2033,45: VARIABLE
 
391 int 
 2033,38: int
 
298 NAME VARIABLE 
 2033,42: __c
 2033,45: VARIABLE
 
65 VARIABLE 
 2033,45: VARIABLE
 
187 ) 
 2033,45: )
 
60 ; 
 2034,8: ;
 
23 extern 
 2036,1: extern
 
8 char 
 2036,8: char
 
5 * option_type_qualifier_list option_pointer 
 2036,13: *
 
64 NAME VARIABLE 
 2036,14: rindex
 2036,20: VARIABLE
 
65 VARIABLE 
 2036,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2036,21: (
 2036,22: const
 2036,28: char
 2036,33: *
 2036,34: __s
 2036,37: VARIABLE
 2036,37: ,
 2036,39: int
 2036,43: __c
 2036,46: VARIABLE
 2036,46: )
 
186 const 
 2036,22: const
 
103 char 
 2036,28: char
 
298 * option_type_qualifier_list option_pointer 
 2036,33: *
 
386 NAME VARIABLE 
 2036,34: __s
 2036,37: VARIABLE
 
65 VARIABLE 
 2036,37: VARIABLE
 
300 , parameter_declaration 
 2036,37: ,
 2036,39: int
 2036,43: __c
 2036,46: VARIABLE
 
391 int 
 2036,39: int
 
298 NAME VARIABLE 
 2036,43: __c
 2036,46: VARIABLE
 
65 VARIABLE 
 2036,46: VARIABLE
 
187 ) 
 2036,46: )
 
60 ; 
 2037,8: ;
 
23 extern 
 2044,1: extern
 
8 int 
 2044,8: int
 
5 NAME VARIABLE 
 2044,12: ffs
 2044,15: VARIABLE
 
65 VARIABLE 
 2044,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2044,16: (
 2044,17: int
 2044,21: __i
 2044,24: VARIABLE
 2044,24: )
 
186 int 
 2044,17: int
 
298 NAME VARIABLE 
 2044,21: __i
 2044,24: VARIABLE
 
65 VARIABLE 
 2044,24: VARIABLE
 
187 ) 
 2044,24: )
 
60 ; 
 2044,27: ;
 
23 extern 
 2050,1: extern
 
8 int 
 2050,8: int
 
5 NAME VARIABLE 
 2050,12: ffsl
 2050,16: VARIABLE
 
65 VARIABLE 
 2050,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2050,17: (
 2050,18: long
 2050,23: int
 2050,27: __l
 2050,30: VARIABLE
 2050,30: )
 
186 long 
 2050,18: long
 
106 int 
 2050,23: int
 
298 NAME VARIABLE 
 2050,27: __l
 2050,30: VARIABLE
 
65 VARIABLE 
 2050,30: VARIABLE
 
187 ) 
 2050,30: )
 
60 ; 
 2050,33: ;
 
23 extern 
 2051,2: extern
 
8 int 
 2051,9: int
 
5 NAME VARIABLE 
 2051,13: ffsll
 2051,18: VARIABLE
 
65 VARIABLE 
 2051,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2051,19: (
 2051,20: long
 2051,25: long
 2051,30: int
 2051,34: __ll
 2051,38: VARIABLE
 2051,38: )
 
186 long 
 2051,20: long
 
106 long 
 2051,25: long
 
106 int 
 2051,30: int
 
298 NAME VARIABLE 
 2051,34: __ll
 2051,38: VARIABLE
 
65 VARIABLE 
 2051,38: VARIABLE
 
187 ) 
 2051,38: )
 
60 ; 
 2052,7: ;
 
23 extern 
 2056,1: extern
 
8 int 
 2056,8: int
 
5 NAME VARIABLE 
 2056,12: strcasecmp
 2056,22: VARIABLE
 
65 VARIABLE 
 2056,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2056,23: (
 2056,24: const
 2056,30: char
 2056,35: *
 2056,36: __s1
 2056,40: VARIABLE
 2056,40: ,
 2056,42: const
 2056,48: char
 2056,53: *
 2056,54: __s2
 2056,58: VARIABLE
 2056,58: )
 
186 const 
 2056,24: const
 
103 char 
 2056,30: char
 
298 * option_type_qualifier_list option_pointer 
 2056,35: *
 
386 NAME VARIABLE 
 2056,36: __s1
 2056,40: VARIABLE
 
65 VARIABLE 
 2056,40: VARIABLE
 
300 , parameter_declaration 
 2056,40: ,
 2056,42: const
 2056,48: char
 2056,53: *
 2056,54: __s2
 2056,58: VARIABLE
 
391 const 
 2056,42: const
 
103 char 
 2056,48: char
 
298 * option_type_qualifier_list option_pointer 
 2056,53: *
 
386 NAME VARIABLE 
 2056,54: __s2
 2056,58: VARIABLE
 
65 VARIABLE 
 2056,58: VARIABLE
 
187 ) 
 2056,58: )
 
60 ; 
 2057,8: ;
 
23 extern 
 2060,1: extern
 
8 int 
 2060,8: int
 
5 NAME VARIABLE 
 2060,12: strncasecmp
 2060,23: VARIABLE
 
65 VARIABLE 
 2060,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2060,24: (
 2060,25: const
 2060,31: char
 2060,36: *
 2060,37: __s1
 2060,41: VARIABLE
 2060,41: ,
 2060,43: const
 2060,49: char
 2060,54: *
 2060,55: __s2
 2060,59: VARIABLE
 2060,59: ,
 2060,61: size_t
 2060,67: TYPE
 2060,68: __n
 2060,71: VARIABLE
 2060,71: )
 
186 const 
 2060,25: const
 
103 char 
 2060,31: char
 
298 * option_type_qualifier_list option_pointer 
 2060,36: *
 
386 NAME VARIABLE 
 2060,37: __s1
 2060,41: VARIABLE
 
65 VARIABLE 
 2060,41: VARIABLE
 
300 , parameter_declaration 
 2060,41: ,
 2060,43: const
 2060,49: char
 2060,54: *
 2060,55: __s2
 2060,59: VARIABLE
 
391 const 
 2060,43: const
 
103 char 
 2060,49: char
 
298 * option_type_qualifier_list option_pointer 
 2060,54: *
 
386 NAME VARIABLE 
 2060,55: __s2
 2060,59: VARIABLE
 
65 VARIABLE 
 2060,59: VARIABLE
 
300 , parameter_declaration 
 2060,59: ,
 2060,61: size_t
 2060,67: TYPE
 2060,68: __n
 2060,71: VARIABLE
 
391 NAME TYPE 
 2060,61: size_t
 2060,67: TYPE
 
26 TYPE 
 2060,67: TYPE
 
298 NAME VARIABLE 
 2060,68: __n
 2060,71: VARIABLE
 
65 VARIABLE 
 2060,71: VARIABLE
 
187 ) 
 2060,71: )
 
60 ; 
 2061,8: ;
 
23 extern 
 2068,1: extern
 
8 int 
 2068,8: int
 
5 NAME VARIABLE 
 2068,12: strcasecmp_l
 2068,24: VARIABLE
 
65 VARIABLE 
 2068,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2068,25: (
 2068,26: const
 2068,32: char
 2068,37: *
 2068,38: __s1
 2068,42: VARIABLE
 2068,42: ,
 2068,44: const
 2068,50: char
 2068,55: *
 2068,56: __s2
 2068,60: VARIABLE
 2068,60: ,
 2068,62: locale_t
 2068,70: TYPE
 2068,71: __loc
 2068,76: VARIABLE
 2068,76: )
 
186 const 
 2068,26: const
 
103 char 
 2068,32: char
 
298 * option_type_qualifier_list option_pointer 
 2068,37: *
 
386 NAME VARIABLE 
 2068,38: __s1
 2068,42: VARIABLE
 
65 VARIABLE 
 2068,42: VARIABLE
 
300 , parameter_declaration 
 2068,42: ,
 2068,44: const
 2068,50: char
 2068,55: *
 2068,56: __s2
 2068,60: VARIABLE
 
391 const 
 2068,44: const
 
103 char 
 2068,50: char
 
298 * option_type_qualifier_list option_pointer 
 2068,55: *
 
386 NAME VARIABLE 
 2068,56: __s2
 2068,60: VARIABLE
 
65 VARIABLE 
 2068,60: VARIABLE
 
300 , parameter_declaration 
 2068,60: ,
 2068,62: locale_t
 2068,70: TYPE
 2068,71: __loc
 2068,76: VARIABLE
 
391 NAME TYPE 
 2068,62: locale_t
 2068,70: TYPE
 
26 TYPE 
 2068,70: TYPE
 
298 NAME VARIABLE 
 2068,71: __loc
 2068,76: VARIABLE
 
65 VARIABLE 
 2068,76: VARIABLE
 
187 ) 
 2068,76: )
 
60 ; 
 2069,8: ;
 
23 extern 
 2073,1: extern
 
8 int 
 2073,8: int
 
5 NAME VARIABLE 
 2073,12: strncasecmp_l
 2073,25: VARIABLE
 
65 VARIABLE 
 2073,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2073,26: (
 2073,27: const
 2073,33: char
 2073,38: *
 2073,39: __s1
 2073,43: VARIABLE
 2073,43: ,
 2073,45: const
 2073,51: char
 2073,56: *
 2073,57: __s2
 2073,61: VARIABLE
 2073,61: ,
 2074,6: size_t
 2074,12: TYPE
 2074,13: __n
 2074,16: VARIABLE
 2074,16: ,
 2074,18: locale_t
 2074,26: TYPE
 2074,27: __loc
 2074,32: VARIABLE
 2074,32: )
 
186 const 
 2073,27: const
 
103 char 
 2073,33: char
 
298 * option_type_qualifier_list option_pointer 
 2073,38: *
 
386 NAME VARIABLE 
 2073,39: __s1
 2073,43: VARIABLE
 
65 VARIABLE 
 2073,43: VARIABLE
 
300 , parameter_declaration 
 2073,43: ,
 2073,45: const
 2073,51: char
 2073,56: *
 2073,57: __s2
 2073,61: VARIABLE
 
391 const 
 2073,45: const
 
103 char 
 2073,51: char
 
298 * option_type_qualifier_list option_pointer 
 2073,56: *
 
386 NAME VARIABLE 
 2073,57: __s2
 2073,61: VARIABLE
 
65 VARIABLE 
 2073,61: VARIABLE
 
300 , parameter_declaration 
 2073,61: ,
 2074,6: size_t
 2074,12: TYPE
 2074,13: __n
 2074,16: VARIABLE
 
391 NAME TYPE 
 2074,6: size_t
 2074,12: TYPE
 
26 TYPE 
 2074,12: TYPE
 
298 NAME VARIABLE 
 2074,13: __n
 2074,16: VARIABLE
 
65 VARIABLE 
 2074,16: VARIABLE
 
300 , parameter_declaration 
 2074,16: ,
 2074,18: locale_t
 2074,26: TYPE
 2074,27: __loc
 2074,32: VARIABLE
 
391 NAME TYPE 
 2074,18: locale_t
 2074,26: TYPE
 
26 TYPE 
 2074,26: TYPE
 
298 NAME VARIABLE 
 2074,27: __loc
 2074,32: VARIABLE
 
65 VARIABLE 
 2074,32: VARIABLE
 
187 ) 
 2074,32: )
 
60 ; 
 2075,8: ;
 
23 extern 
 2083,1: extern
 
8 void 
 2083,8: void
 
5 NAME VARIABLE 
 2083,13: explicit_bzero
 2083,27: VARIABLE
 
65 VARIABLE 
 2083,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2083,28: (
 2083,29: void
 2083,34: *
 2083,35: __s
 2083,38: VARIABLE
 2083,38: ,
 2083,40: size_t
 2083,46: TYPE
 2083,47: __n
 2083,50: VARIABLE
 2083,50: )
 
186 void 
 2083,29: void
 
298 * option_type_qualifier_list option_pointer 
 2083,34: *
 
386 NAME VARIABLE 
 2083,35: __s
 2083,38: VARIABLE
 
65 VARIABLE 
 2083,38: VARIABLE
 
300 , parameter_declaration 
 2083,38: ,
 2083,40: size_t
 2083,46: TYPE
 2083,47: __n
 2083,50: VARIABLE
 
391 NAME TYPE 
 2083,40: size_t
 2083,46: TYPE
 
26 TYPE 
 2083,46: TYPE
 
298 NAME VARIABLE 
 2083,47: __n
 2083,50: VARIABLE
 
65 VARIABLE 
 2083,50: VARIABLE
 
187 ) 
 2083,50: )
 
60 ; 
 2084,5: ;
 
23 extern 
 2088,1: extern
 
8 char 
 2088,8: char
 
5 * option_type_qualifier_list option_pointer 
 2088,13: *
 
64 NAME VARIABLE 
 2088,14: strsep
 2088,20: VARIABLE
 
65 VARIABLE 
 2088,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2088,21: (
 2088,22: char
 2088,27: *
 2088,28: *
 2088,30: __stringp
 2088,39: VARIABLE
 2088,39: ,
 2089,8: const
 2089,14: char
 2089,19: *
 2089,21: __delim
 2089,28: VARIABLE
 2089,28: )
 
186 char 
 2088,22: char
 
298 * option_type_qualifier_list option_pointer 
 2088,27: *
 2088,28: *
 
116 * option_type_qualifier_list option_pointer 
 2088,28: *
 
386 NAME VARIABLE 
 2088,30: __stringp
 2088,39: VARIABLE
 
65 VARIABLE 
 2088,39: VARIABLE
 
300 , parameter_declaration 
 2088,39: ,
 2089,8: const
 2089,14: char
 2089,19: *
 2089,21: __delim
 2089,28: VARIABLE
 
391 const 
 2089,8: const
 
103 char 
 2089,14: char
 
298 * option_type_qualifier_list option_pointer 
 2089,19: *
 
386 NAME VARIABLE 
 2089,21: __delim
 2089,28: VARIABLE
 
65 VARIABLE 
 2089,28: VARIABLE
 
187 ) 
 2089,28: )
 
60 ; 
 2090,7: ;
 
23 extern 
 2095,1: extern
 
8 char 
 2095,8: char
 
5 * option_type_qualifier_list option_pointer 
 2095,13: *
 
64 NAME VARIABLE 
 2095,14: strsignal
 2095,23: VARIABLE
 
65 VARIABLE 
 2095,23: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2095,24: (
 2095,25: int
 2095,29: __sig
 2095,34: VARIABLE
 2095,34: )
 
186 int 
 2095,25: int
 
298 NAME VARIABLE 
 2095,29: __sig
 2095,34: VARIABLE
 
65 VARIABLE 
 2095,34: VARIABLE
 
187 ) 
 2095,34: )
 
60 ; 
 2095,36: ;
 
23 extern 
 2097,1: extern
 
8 char 
 2097,8: char
 
5 * option_type_qualifier_list option_pointer 
 2097,13: *
 
64 NAME VARIABLE 
 2097,14: __stpcpy
 2097,22: VARIABLE
 
65 VARIABLE 
 2097,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2097,23: (
 2097,24: char
 2097,29: *
 2097,31: __dest
 2097,37: VARIABLE
 2097,37: ,
 2097,39: const
 2097,45: char
 2097,50: *
 2097,52: __src
 2097,57: VARIABLE
 2097,57: )
 
186 char 
 2097,24: char
 
298 * option_type_qualifier_list option_pointer 
 2097,29: *
 
386 NAME VARIABLE 
 2097,31: __dest
 2097,37: VARIABLE
 
65 VARIABLE 
 2097,37: VARIABLE
 
300 , parameter_declaration 
 2097,37: ,
 2097,39: const
 2097,45: char
 2097,50: *
 2097,52: __src
 2097,57: VARIABLE
 
391 const 
 2097,39: const
 
103 char 
 2097,45: char
 
298 * option_type_qualifier_list option_pointer 
 2097,50: *
 
386 NAME VARIABLE 
 2097,52: __src
 2097,57: VARIABLE
 
65 VARIABLE 
 2097,57: VARIABLE
 
187 ) 
 2097,57: )
 
60 ; 
 2098,7: ;
 
23 extern 
 2099,1: extern
 
8 char 
 2099,8: char
 
5 * option_type_qualifier_list option_pointer 
 2099,13: *
 
64 NAME VARIABLE 
 2099,14: stpcpy
 2099,20: VARIABLE
 
65 VARIABLE 
 2099,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2099,21: (
 2099,22: char
 2099,27: *
 2099,29: __dest
 2099,35: VARIABLE
 2099,35: ,
 2099,37: const
 2099,43: char
 2099,48: *
 2099,50: __src
 2099,55: VARIABLE
 2099,55: )
 
186 char 
 2099,22: char
 
298 * option_type_qualifier_list option_pointer 
 2099,27: *
 
386 NAME VARIABLE 
 2099,29: __dest
 2099,35: VARIABLE
 
65 VARIABLE 
 2099,35: VARIABLE
 
300 , parameter_declaration 
 2099,35: ,
 2099,37: const
 2099,43: char
 2099,48: *
 2099,50: __src
 2099,55: VARIABLE
 
391 const 
 2099,37: const
 
103 char 
 2099,43: char
 
298 * option_type_qualifier_list option_pointer 
 2099,48: *
 
386 NAME VARIABLE 
 2099,50: __src
 2099,55: VARIABLE
 
65 VARIABLE 
 2099,55: VARIABLE
 
187 ) 
 2099,55: )
 
60 ; 
 2100,7: ;
 
23 extern 
 2104,1: extern
 
8 char 
 2104,8: char
 
5 * option_type_qualifier_list option_pointer 
 2104,13: *
 
64 NAME VARIABLE 
 2104,14: __stpncpy
 2104,23: VARIABLE
 
65 VARIABLE 
 2104,23: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2104,24: (
 2104,25: char
 2104,30: *
 2104,32: __dest
 2104,38: VARIABLE
 2104,38: ,
 2105,4: const
 2105,10: char
 2105,15: *
 2105,17: __src
 2105,22: VARIABLE
 2105,22: ,
 2105,24: size_t
 2105,30: TYPE
 2105,31: __n
 2105,34: VARIABLE
 2105,34: )
 
186 char 
 2104,25: char
 
298 * option_type_qualifier_list option_pointer 
 2104,30: *
 
386 NAME VARIABLE 
 2104,32: __dest
 2104,38: VARIABLE
 
65 VARIABLE 
 2104,38: VARIABLE
 
300 , parameter_declaration 
 2104,38: ,
 2105,4: const
 2105,10: char
 2105,15: *
 2105,17: __src
 2105,22: VARIABLE
 
391 const 
 2105,4: const
 
103 char 
 2105,10: char
 
298 * option_type_qualifier_list option_pointer 
 2105,15: *
 
386 NAME VARIABLE 
 2105,17: __src
 2105,22: VARIABLE
 
65 VARIABLE 
 2105,22: VARIABLE
 
300 , parameter_declaration 
 2105,22: ,
 2105,24: size_t
 2105,30: TYPE
 2105,31: __n
 2105,34: VARIABLE
 
391 NAME TYPE 
 2105,24: size_t
 2105,30: TYPE
 
26 TYPE 
 2105,30: TYPE
 
298 NAME VARIABLE 
 2105,31: __n
 2105,34: VARIABLE
 
65 VARIABLE 
 2105,34: VARIABLE
 
187 ) 
 2105,34: )
 
60 ; 
 2106,7: ;
 
23 extern 
 2107,1: extern
 
8 char 
 2107,8: char
 
5 * option_type_qualifier_list option_pointer 
 2107,13: *
 
64 NAME VARIABLE 
 2107,14: stpncpy
 2107,21: VARIABLE
 
65 VARIABLE 
 2107,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2107,22: (
 2107,23: char
 2107,28: *
 2107,30: __dest
 2107,36: VARIABLE
 2107,36: ,
 2108,9: const
 2108,15: char
 2108,20: *
 2108,22: __src
 2108,27: VARIABLE
 2108,27: ,
 2108,29: size_t
 2108,35: TYPE
 2108,36: __n
 2108,39: VARIABLE
 2108,39: )
 
186 char 
 2107,23: char
 
298 * option_type_qualifier_list option_pointer 
 2107,28: *
 
386 NAME VARIABLE 
 2107,30: __dest
 2107,36: VARIABLE
 
65 VARIABLE 
 2107,36: VARIABLE
 
300 , parameter_declaration 
 2107,36: ,
 2108,9: const
 2108,15: char
 2108,20: *
 2108,22: __src
 2108,27: VARIABLE
 
391 const 
 2108,9: const
 
103 char 
 2108,15: char
 
298 * option_type_qualifier_list option_pointer 
 2108,20: *
 
386 NAME VARIABLE 
 2108,22: __src
 2108,27: VARIABLE
 
65 VARIABLE 
 2108,27: VARIABLE
 
300 , parameter_declaration 
 2108,27: ,
 2108,29: size_t
 2108,35: TYPE
 2108,36: __n
 2108,39: VARIABLE
 
391 NAME TYPE 
 2108,29: size_t
 2108,35: TYPE
 
26 TYPE 
 2108,35: TYPE
 
298 NAME VARIABLE 
 2108,36: __n
 2108,39: VARIABLE
 
65 VARIABLE 
 2108,39: VARIABLE
 
187 ) 
 2108,39: )
 
60 ; 
 2109,7: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 2173,1: typedef
 2173,9: __useconds_t
 2173,21: TYPE
 
54 NAME TYPE 
 2173,9: __useconds_t
 2173,21: TYPE
 
26 TYPE 
 2173,21: TYPE
 
6 NAME VARIABLE 
 2173,22: useconds_t
 2173,32: VARIABLE
 
65 VARIABLE 
 2173,32: VARIABLE
 
70 ; 
 2173,32: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 2175,1: typedef
 2175,9: __intptr_t
 2175,19: TYPE
 
54 NAME TYPE 
 2175,9: __intptr_t
 2175,19: TYPE
 
26 TYPE 
 2175,19: TYPE
 
6 NAME VARIABLE 
 2175,20: intptr_t
 2175,28: VARIABLE
 
65 VARIABLE 
 2175,28: VARIABLE
 
70 ; 
 2175,28: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 2182,1: typedef
 2182,9: __socklen_t
 2182,20: TYPE
 
54 NAME TYPE 
 2182,9: __socklen_t
 2182,20: TYPE
 
26 TYPE 
 2182,20: TYPE
 
6 NAME VARIABLE 
 2182,21: socklen_t
 2182,30: VARIABLE
 
65 VARIABLE 
 2182,30: VARIABLE
 
70 ; 
 2182,30: ;
 
23 extern 
 2184,1: extern
 
8 int 
 2184,8: int
 
5 NAME VARIABLE 
 2184,12: access
 2184,18: VARIABLE
 
65 VARIABLE 
 2184,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2184,19: (
 2184,20: const
 2184,26: char
 2184,31: *
 2184,32: __name
 2184,38: VARIABLE
 2184,38: ,
 2184,40: int
 2184,44: __type
 2184,50: VARIABLE
 2184,50: )
 
186 const 
 2184,20: const
 
103 char 
 2184,26: char
 
298 * option_type_qualifier_list option_pointer 
 2184,31: *
 
386 NAME VARIABLE 
 2184,32: __name
 2184,38: VARIABLE
 
65 VARIABLE 
 2184,38: VARIABLE
 
300 , parameter_declaration 
 2184,38: ,
 2184,40: int
 2184,44: __type
 2184,50: VARIABLE
 
391 int 
 2184,40: int
 
298 NAME VARIABLE 
 2184,44: __type
 2184,50: VARIABLE
 
65 VARIABLE 
 2184,50: VARIABLE
 
187 ) 
 2184,50: )
 
60 ; 
 2184,53: ;
 
23 extern 
 2186,1: extern
 
8 int 
 2186,8: int
 
5 NAME VARIABLE 
 2186,12: faccessat
 2186,21: VARIABLE
 
65 VARIABLE 
 2186,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2186,22: (
 2186,23: int
 2186,27: __fd
 2186,31: VARIABLE
 2186,31: ,
 2186,33: const
 2186,39: char
 2186,44: *
 2186,45: __file
 2186,51: VARIABLE
 2186,51: ,
 2186,53: int
 2186,57: __type
 2186,63: VARIABLE
 2186,63: ,
 2186,65: int
 2186,69: __flag
 2186,75: VARIABLE
 2186,75: )
 
186 int 
 2186,23: int
 
298 NAME VARIABLE 
 2186,27: __fd
 2186,31: VARIABLE
 
65 VARIABLE 
 2186,31: VARIABLE
 
300 , parameter_declaration 
 2186,31: ,
 2186,33: const
 2186,39: char
 2186,44: *
 2186,45: __file
 2186,51: VARIABLE
 
391 const 
 2186,33: const
 
103 char 
 2186,39: char
 
298 * option_type_qualifier_list option_pointer 
 2186,44: *
 
386 NAME VARIABLE 
 2186,45: __file
 2186,51: VARIABLE
 
65 VARIABLE 
 2186,51: VARIABLE
 
300 , parameter_declaration 
 2186,51: ,
 2186,53: int
 2186,57: __type
 2186,63: VARIABLE
 
391 int 
 2186,53: int
 
298 NAME VARIABLE 
 2186,57: __type
 2186,63: VARIABLE
 
65 VARIABLE 
 2186,63: VARIABLE
 
300 , parameter_declaration 
 2186,63: ,
 2186,65: int
 2186,69: __flag
 2186,75: VARIABLE
 
391 int 
 2186,65: int
 
298 NAME VARIABLE 
 2186,69: __flag
 2186,75: VARIABLE
 
65 VARIABLE 
 2186,75: VARIABLE
 
187 ) 
 2186,75: )
 
60 ; 
 2187,8: ;
 
23 extern 
 2189,1: extern
 
8 NAME TYPE 
 2189,8: __off_t
 2189,15: TYPE
 
26 TYPE 
 2189,15: TYPE
 
5 NAME VARIABLE 
 2189,16: lseek
 2189,21: VARIABLE
 
65 VARIABLE 
 2189,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2189,22: (
 2189,23: int
 2189,27: __fd
 2189,31: VARIABLE
 2189,31: ,
 2189,33: __off_t
 2189,40: TYPE
 2189,41: __offset
 2189,49: VARIABLE
 2189,49: ,
 2189,51: int
 2189,55: __whence
 2189,63: VARIABLE
 2189,63: )
 
186 int 
 2189,23: int
 
298 NAME VARIABLE 
 2189,27: __fd
 2189,31: VARIABLE
 
65 VARIABLE 
 2189,31: VARIABLE
 
300 , parameter_declaration 
 2189,31: ,
 2189,33: __off_t
 2189,40: TYPE
 2189,41: __offset
 2189,49: VARIABLE
 
391 NAME TYPE 
 2189,33: __off_t
 2189,40: TYPE
 
26 TYPE 
 2189,40: TYPE
 
298 NAME VARIABLE 
 2189,41: __offset
 2189,49: VARIABLE
 
65 VARIABLE 
 2189,49: VARIABLE
 
300 , parameter_declaration 
 2189,49: ,
 2189,51: int
 2189,55: __whence
 2189,63: VARIABLE
 
391 int 
 2189,51: int
 
298 NAME VARIABLE 
 2189,55: __whence
 2189,63: VARIABLE
 
65 VARIABLE 
 2189,63: VARIABLE
 
187 ) 
 2189,63: )
 
60 ; 
 2189,65: ;
 
23 extern 
 2191,1: extern
 
8 int 
 2191,8: int
 
5 NAME VARIABLE 
 2191,12: close
 2191,17: VARIABLE
 
65 VARIABLE 
 2191,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2191,18: (
 2191,19: int
 2191,23: __fd
 2191,27: VARIABLE
 2191,27: )
 
186 int 
 2191,19: int
 
298 NAME VARIABLE 
 2191,23: __fd
 2191,27: VARIABLE
 
65 VARIABLE 
 2191,27: VARIABLE
 
187 ) 
 2191,27: )
 
60 ; 
 2191,28: ;
 
23 extern 
 2196,1: extern
 
8 void 
 2196,8: void
 
5 NAME VARIABLE 
 2196,13: closefrom
 2196,22: VARIABLE
 
65 VARIABLE 
 2196,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2196,23: (
 2196,24: int
 2196,28: __lowfd
 2196,35: VARIABLE
 2196,35: )
 
186 int 
 2196,24: int
 
298 NAME VARIABLE 
 2196,28: __lowfd
 2196,35: VARIABLE
 
65 VARIABLE 
 2196,35: VARIABLE
 
187 ) 
 2196,35: )
 
60 ; 
 2196,37: ;
 
23 extern 
 2204,1: extern
 
8 NAME TYPE 
 2204,8: ssize_t
 2204,15: TYPE
 
26 TYPE 
 2204,15: TYPE
 
5 NAME VARIABLE 
 2204,16: read
 2204,20: VARIABLE
 
65 VARIABLE 
 2204,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2204,21: (
 2204,22: int
 2204,26: __fd
 2204,30: VARIABLE
 2204,30: ,
 2204,32: void
 2204,37: *
 2204,38: __buf
 2204,43: VARIABLE
 2204,43: ,
 2204,45: size_t
 2204,51: TYPE
 2204,52: __nbytes
 2204,60: VARIABLE
 2204,60: )
 
186 int 
 2204,22: int
 
298 NAME VARIABLE 
 2204,26: __fd
 2204,30: VARIABLE
 
65 VARIABLE 
 2204,30: VARIABLE
 
300 , parameter_declaration 
 2204,30: ,
 2204,32: void
 2204,37: *
 2204,38: __buf
 2204,43: VARIABLE
 
391 void 
 2204,32: void
 
298 * option_type_qualifier_list option_pointer 
 2204,37: *
 
386 NAME VARIABLE 
 2204,38: __buf
 2204,43: VARIABLE
 
65 VARIABLE 
 2204,43: VARIABLE
 
300 , parameter_declaration 
 2204,43: ,
 2204,45: size_t
 2204,51: TYPE
 2204,52: __nbytes
 2204,60: VARIABLE
 
391 NAME TYPE 
 2204,45: size_t
 2204,51: TYPE
 
26 TYPE 
 2204,51: TYPE
 
298 NAME VARIABLE 
 2204,52: __nbytes
 2204,60: VARIABLE
 
65 VARIABLE 
 2204,60: VARIABLE
 
187 ) 
 2204,60: )
 
60 ; 
 2205,5: ;
 
23 extern 
 2211,1: extern
 
8 NAME TYPE 
 2211,8: ssize_t
 2211,15: TYPE
 
26 TYPE 
 2211,15: TYPE
 
5 NAME VARIABLE 
 2211,16: write
 2211,21: VARIABLE
 
65 VARIABLE 
 2211,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2211,22: (
 2211,23: int
 2211,27: __fd
 2211,31: VARIABLE
 2211,31: ,
 2211,33: const
 2211,39: void
 2211,44: *
 2211,45: __buf
 2211,50: VARIABLE
 2211,50: ,
 2211,52: size_t
 2211,58: TYPE
 2211,59: __n
 2211,62: VARIABLE
 2211,62: )
 
186 int 
 2211,23: int
 
298 NAME VARIABLE 
 2211,27: __fd
 2211,31: VARIABLE
 
65 VARIABLE 
 2211,31: VARIABLE
 
300 , parameter_declaration 
 2211,31: ,
 2211,33: const
 2211,39: void
 2211,44: *
 2211,45: __buf
 2211,50: VARIABLE
 
391 const 
 2211,33: const
 
103 void 
 2211,39: void
 
298 * option_type_qualifier_list option_pointer 
 2211,44: *
 
386 NAME VARIABLE 
 2211,45: __buf
 2211,50: VARIABLE
 
65 VARIABLE 
 2211,50: VARIABLE
 
300 , parameter_declaration 
 2211,50: ,
 2211,52: size_t
 2211,58: TYPE
 2211,59: __n
 2211,62: VARIABLE
 
391 NAME TYPE 
 2211,52: size_t
 2211,58: TYPE
 
26 TYPE 
 2211,58: TYPE
 
298 NAME VARIABLE 
 2211,59: __n
 2211,62: VARIABLE
 
65 VARIABLE 
 2211,62: VARIABLE
 
187 ) 
 2211,62: )
 
60 ; 
 2212,5: ;
 
23 extern 
 2214,1: extern
 
8 NAME TYPE 
 2214,8: ssize_t
 2214,15: TYPE
 
26 TYPE 
 2214,15: TYPE
 
5 NAME VARIABLE 
 2214,16: pread
 2214,21: VARIABLE
 
65 VARIABLE 
 2214,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2214,22: (
 2214,23: int
 2214,27: __fd
 2214,31: VARIABLE
 2214,31: ,
 2214,33: void
 2214,38: *
 2214,39: __buf
 2214,44: VARIABLE
 2214,44: ,
 2214,46: size_t
 2214,52: TYPE
 2214,53: __nbytes
 2214,61: VARIABLE
 2214,61: ,
 2215,9: __off_t
 2215,16: TYPE
 2215,17: __offset
 2215,25: VARIABLE
 2215,25: )
 
186 int 
 2214,23: int
 
298 NAME VARIABLE 
 2214,27: __fd
 2214,31: VARIABLE
 
65 VARIABLE 
 2214,31: VARIABLE
 
300 , parameter_declaration 
 2214,31: ,
 2214,33: void
 2214,38: *
 2214,39: __buf
 2214,44: VARIABLE
 
391 void 
 2214,33: void
 
298 * option_type_qualifier_list option_pointer 
 2214,38: *
 
386 NAME VARIABLE 
 2214,39: __buf
 2214,44: VARIABLE
 
65 VARIABLE 
 2214,44: VARIABLE
 
300 , parameter_declaration 
 2214,44: ,
 2214,46: size_t
 2214,52: TYPE
 2214,53: __nbytes
 2214,61: VARIABLE
 
391 NAME TYPE 
 2214,46: size_t
 2214,52: TYPE
 
26 TYPE 
 2214,52: TYPE
 
298 NAME VARIABLE 
 2214,53: __nbytes
 2214,61: VARIABLE
 
65 VARIABLE 
 2214,61: VARIABLE
 
300 , parameter_declaration 
 2214,61: ,
 2215,9: __off_t
 2215,16: TYPE
 2215,17: __offset
 2215,25: VARIABLE
 
391 NAME TYPE 
 2215,9: __off_t
 2215,16: TYPE
 
26 TYPE 
 2215,16: TYPE
 
298 NAME VARIABLE 
 2215,17: __offset
 2215,25: VARIABLE
 
65 VARIABLE 
 2215,25: VARIABLE
 
187 ) 
 2215,25: )
 
60 ; 
 2216,5: ;
 
23 extern 
 2223,1: extern
 
8 NAME TYPE 
 2223,8: ssize_t
 2223,15: TYPE
 
26 TYPE 
 2223,15: TYPE
 
5 NAME VARIABLE 
 2223,16: pwrite
 2223,22: VARIABLE
 
65 VARIABLE 
 2223,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2223,23: (
 2223,24: int
 2223,28: __fd
 2223,32: VARIABLE
 2223,32: ,
 2223,34: const
 2223,40: void
 2223,45: *
 2223,46: __buf
 2223,51: VARIABLE
 2223,51: ,
 2223,53: size_t
 2223,59: TYPE
 2223,60: __n
 2223,63: VARIABLE
 2223,63: ,
 2224,10: __off_t
 2224,17: TYPE
 2224,18: __offset
 2224,26: VARIABLE
 2224,26: )
 
186 int 
 2223,24: int
 
298 NAME VARIABLE 
 2223,28: __fd
 2223,32: VARIABLE
 
65 VARIABLE 
 2223,32: VARIABLE
 
300 , parameter_declaration 
 2223,32: ,
 2223,34: const
 2223,40: void
 2223,45: *
 2223,46: __buf
 2223,51: VARIABLE
 
391 const 
 2223,34: const
 
103 void 
 2223,40: void
 
298 * option_type_qualifier_list option_pointer 
 2223,45: *
 
386 NAME VARIABLE 
 2223,46: __buf
 2223,51: VARIABLE
 
65 VARIABLE 
 2223,51: VARIABLE
 
300 , parameter_declaration 
 2223,51: ,
 2223,53: size_t
 2223,59: TYPE
 2223,60: __n
 2223,63: VARIABLE
 
391 NAME TYPE 
 2223,53: size_t
 2223,59: TYPE
 
26 TYPE 
 2223,59: TYPE
 
298 NAME VARIABLE 
 2223,60: __n
 2223,63: VARIABLE
 
65 VARIABLE 
 2223,63: VARIABLE
 
300 , parameter_declaration 
 2223,63: ,
 2224,10: __off_t
 2224,17: TYPE
 2224,18: __offset
 2224,26: VARIABLE
 
391 NAME TYPE 
 2224,10: __off_t
 2224,17: TYPE
 
26 TYPE 
 2224,17: TYPE
 
298 NAME VARIABLE 
 2224,18: __offset
 2224,26: VARIABLE
 
65 VARIABLE 
 2224,26: VARIABLE
 
187 ) 
 2224,26: )
 
60 ; 
 2225,5: ;
 
23 extern 
 2227,1: extern
 
8 int 
 2227,8: int
 
5 NAME VARIABLE 
 2227,12: pipe
 2227,16: VARIABLE
 
65 VARIABLE 
 2227,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2227,17: (
 2227,18: int
 2227,22: __pipedes
 2227,31: VARIABLE
 2227,31: [
 2227,32: 2
 2227,33: ]
 2227,34: )
 
186 int 
 2227,18: int
 
298 NAME VARIABLE 
 2227,22: __pipedes
 2227,31: VARIABLE
 
65 VARIABLE 
 2227,31: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 2227,31: [
 2227,32: 2
 2227,33: ]
 
188 CONSTANT 
 2227,32: 2
 
305 ] 
 2227,33: ]
 
187 ) 
 2227,34: )
 
60 ; 
 2227,37: ;
 
23 extern 
 2229,1: extern
 
8 unsigned 
 2229,8: unsigned
 
17 int 
 2229,17: int
 
5 NAME VARIABLE 
 2229,21: alarm
 2229,26: VARIABLE
 
65 VARIABLE 
 2229,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2229,27: (
 2229,28: unsigned
 2229,37: int
 2229,41: __seconds
 2229,50: VARIABLE
 2229,50: )
 
186 unsigned 
 2229,28: unsigned
 
106 int 
 2229,37: int
 
298 NAME VARIABLE 
 2229,41: __seconds
 2229,50: VARIABLE
 
65 VARIABLE 
 2229,50: VARIABLE
 
187 ) 
 2229,50: )
 
60 ; 
 2229,52: ;
 
23 extern 
 2231,1: extern
 
8 unsigned 
 2231,8: unsigned
 
17 int 
 2231,17: int
 
5 NAME VARIABLE 
 2231,21: sleep
 2231,26: VARIABLE
 
65 VARIABLE 
 2231,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2231,27: (
 2231,28: unsigned
 2231,37: int
 2231,41: __seconds
 2231,50: VARIABLE
 2231,50: )
 
186 unsigned 
 2231,28: unsigned
 
106 int 
 2231,37: int
 
298 NAME VARIABLE 
 2231,41: __seconds
 2231,50: VARIABLE
 
65 VARIABLE 
 2231,50: VARIABLE
 
187 ) 
 2231,50: )
 
60 ; 
 2231,51: ;
 
23 extern 
 2239,1: extern
 
8 NAME TYPE 
 2239,8: __useconds_t
 2239,20: TYPE
 
26 TYPE 
 2239,20: TYPE
 
5 NAME VARIABLE 
 2239,21: ualarm
 2239,27: VARIABLE
 
65 VARIABLE 
 2239,27: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2239,28: (
 2239,29: __useconds_t
 2239,41: TYPE
 2239,42: __value
 2239,49: VARIABLE
 2239,49: ,
 2239,51: __useconds_t
 2239,63: TYPE
 2239,64: __interval
 2239,74: VARIABLE
 2239,74: )
 
186 NAME TYPE 
 2239,29: __useconds_t
 2239,41: TYPE
 
65 TYPE 
 2239,41: TYPE
 
298 NAME VARIABLE 
 2239,42: __value
 2239,49: VARIABLE
 
65 VARIABLE 
 2239,49: VARIABLE
 
300 , parameter_declaration 
 2239,49: ,
 2239,51: __useconds_t
 2239,63: TYPE
 2239,64: __interval
 2239,74: VARIABLE
 
391 NAME TYPE 
 2239,51: __useconds_t
 2239,63: TYPE
 
26 TYPE 
 2239,63: TYPE
 
298 NAME VARIABLE 
 2239,64: __interval
 2239,74: VARIABLE
 
65 VARIABLE 
 2239,74: VARIABLE
 
187 ) 
 2239,74: )
 
60 ; 
 2240,6: ;
 
23 extern 
 2247,1: extern
 
8 int 
 2247,8: int
 
5 NAME VARIABLE 
 2247,12: usleep
 2247,18: VARIABLE
 
65 VARIABLE 
 2247,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2247,19: (
 2247,20: __useconds_t
 2247,32: TYPE
 2247,33: __useconds
 2247,43: VARIABLE
 2247,43: )
 
186 NAME TYPE 
 2247,20: __useconds_t
 2247,32: TYPE
 
65 TYPE 
 2247,32: TYPE
 
298 NAME VARIABLE 
 2247,33: __useconds
 2247,43: VARIABLE
 
65 VARIABLE 
 2247,43: VARIABLE
 
187 ) 
 2247,43: )
 
60 ; 
 2247,44: ;
 
23 extern 
 2249,1: extern
 
8 int 
 2249,8: int
 
5 NAME VARIABLE 
 2249,12: pause
 2249,17: VARIABLE
 
65 VARIABLE 
 2249,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2249,18: (
 2249,19: void
 2249,23: )
 
186 void 
 2249,19: void
 
187 ) 
 2249,23: )
 
60 ; 
 2249,24: ;
 
23 extern 
 2253,1: extern
 
8 int 
 2253,8: int
 
5 NAME VARIABLE 
 2253,12: chown
 2253,17: VARIABLE
 
65 VARIABLE 
 2253,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2253,18: (
 2253,19: const
 2253,25: char
 2253,30: *
 2253,31: __file
 2253,37: VARIABLE
 2253,37: ,
 2253,39: __uid_t
 2253,46: TYPE
 2253,47: __owner
 2253,54: VARIABLE
 2253,54: ,
 2253,56: __gid_t
 2253,63: TYPE
 2253,64: __group
 2253,71: VARIABLE
 2253,71: )
 
186 const 
 2253,19: const
 
103 char 
 2253,25: char
 
298 * option_type_qualifier_list option_pointer 
 2253,30: *
 
386 NAME VARIABLE 
 2253,31: __file
 2253,37: VARIABLE
 
65 VARIABLE 
 2253,37: VARIABLE
 
300 , parameter_declaration 
 2253,37: ,
 2253,39: __uid_t
 2253,46: TYPE
 2253,47: __owner
 2253,54: VARIABLE
 
391 NAME TYPE 
 2253,39: __uid_t
 2253,46: TYPE
 
26 TYPE 
 2253,46: TYPE
 
298 NAME VARIABLE 
 2253,47: __owner
 2253,54: VARIABLE
 
65 VARIABLE 
 2253,54: VARIABLE
 
300 , parameter_declaration 
 2253,54: ,
 2253,56: __gid_t
 2253,63: TYPE
 2253,64: __group
 2253,71: VARIABLE
 
391 NAME TYPE 
 2253,56: __gid_t
 2253,63: TYPE
 
26 TYPE 
 2253,63: TYPE
 
298 NAME VARIABLE 
 2253,64: __group
 2253,71: VARIABLE
 
65 VARIABLE 
 2253,71: VARIABLE
 
187 ) 
 2253,71: )
 
60 ; 
 2254,8: ;
 
23 extern 
 2258,1: extern
 
8 int 
 2258,8: int
 
5 NAME VARIABLE 
 2258,12: fchown
 2258,18: VARIABLE
 
65 VARIABLE 
 2258,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2258,19: (
 2258,20: int
 2258,24: __fd
 2258,28: VARIABLE
 2258,28: ,
 2258,30: __uid_t
 2258,37: TYPE
 2258,38: __owner
 2258,45: VARIABLE
 2258,45: ,
 2258,47: __gid_t
 2258,54: TYPE
 2258,55: __group
 2258,62: VARIABLE
 2258,62: )
 
186 int 
 2258,20: int
 
298 NAME VARIABLE 
 2258,24: __fd
 2258,28: VARIABLE
 
65 VARIABLE 
 2258,28: VARIABLE
 
300 , parameter_declaration 
 2258,28: ,
 2258,30: __uid_t
 2258,37: TYPE
 2258,38: __owner
 2258,45: VARIABLE
 
391 NAME TYPE 
 2258,30: __uid_t
 2258,37: TYPE
 
26 TYPE 
 2258,37: TYPE
 
298 NAME VARIABLE 
 2258,38: __owner
 2258,45: VARIABLE
 
65 VARIABLE 
 2258,45: VARIABLE
 
300 , parameter_declaration 
 2258,45: ,
 2258,47: __gid_t
 2258,54: TYPE
 2258,55: __group
 2258,62: VARIABLE
 
391 NAME TYPE 
 2258,47: __gid_t
 2258,54: TYPE
 
26 TYPE 
 2258,54: TYPE
 
298 NAME VARIABLE 
 2258,55: __group
 2258,62: VARIABLE
 
65 VARIABLE 
 2258,62: VARIABLE
 
187 ) 
 2258,62: )
 
60 ; 
 2258,65: ;
 
23 extern 
 2263,1: extern
 
8 int 
 2263,8: int
 
5 NAME VARIABLE 
 2263,12: lchown
 2263,18: VARIABLE
 
65 VARIABLE 
 2263,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2263,19: (
 2263,20: const
 2263,26: char
 2263,31: *
 2263,32: __file
 2263,38: VARIABLE
 2263,38: ,
 2263,40: __uid_t
 2263,47: TYPE
 2263,48: __owner
 2263,55: VARIABLE
 2263,55: ,
 2263,57: __gid_t
 2263,64: TYPE
 2263,65: __group
 2263,72: VARIABLE
 2263,72: )
 
186 const 
 2263,20: const
 
103 char 
 2263,26: char
 
298 * option_type_qualifier_list option_pointer 
 2263,31: *
 
386 NAME VARIABLE 
 2263,32: __file
 2263,38: VARIABLE
 
65 VARIABLE 
 2263,38: VARIABLE
 
300 , parameter_declaration 
 2263,38: ,
 2263,40: __uid_t
 2263,47: TYPE
 2263,48: __owner
 2263,55: VARIABLE
 
391 NAME TYPE 
 2263,40: __uid_t
 2263,47: TYPE
 
26 TYPE 
 2263,47: TYPE
 
298 NAME VARIABLE 
 2263,48: __owner
 2263,55: VARIABLE
 
65 VARIABLE 
 2263,55: VARIABLE
 
300 , parameter_declaration 
 2263,55: ,
 2263,57: __gid_t
 2263,64: TYPE
 2263,65: __group
 2263,72: VARIABLE
 
391 NAME TYPE 
 2263,57: __gid_t
 2263,64: TYPE
 
26 TYPE 
 2263,64: TYPE
 
298 NAME VARIABLE 
 2263,65: __group
 2263,72: VARIABLE
 
65 VARIABLE 
 2263,72: VARIABLE
 
187 ) 
 2263,72: )
 
60 ; 
 2264,8: ;
 
23 extern 
 2271,1: extern
 
8 int 
 2271,8: int
 
5 NAME VARIABLE 
 2271,12: fchownat
 2271,20: VARIABLE
 
65 VARIABLE 
 2271,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2271,21: (
 2271,22: int
 2271,26: __fd
 2271,30: VARIABLE
 2271,30: ,
 2271,32: const
 2271,38: char
 2271,43: *
 2271,44: __file
 2271,50: VARIABLE
 2271,50: ,
 2271,52: __uid_t
 2271,59: TYPE
 2271,60: __owner
 2271,67: VARIABLE
 2271,67: ,
 2272,8: __gid_t
 2272,15: TYPE
 2272,16: __group
 2272,23: VARIABLE
 2272,23: ,
 2272,25: int
 2272,29: __flag
 2272,35: VARIABLE
 2272,35: )
 
186 int 
 2271,22: int
 
298 NAME VARIABLE 
 2271,26: __fd
 2271,30: VARIABLE
 
65 VARIABLE 
 2271,30: VARIABLE
 
300 , parameter_declaration 
 2271,30: ,
 2271,32: const
 2271,38: char
 2271,43: *
 2271,44: __file
 2271,50: VARIABLE
 
391 const 
 2271,32: const
 
103 char 
 2271,38: char
 
298 * option_type_qualifier_list option_pointer 
 2271,43: *
 
386 NAME VARIABLE 
 2271,44: __file
 2271,50: VARIABLE
 
65 VARIABLE 
 2271,50: VARIABLE
 
300 , parameter_declaration 
 2271,50: ,
 2271,52: __uid_t
 2271,59: TYPE
 2271,60: __owner
 2271,67: VARIABLE
 
391 NAME TYPE 
 2271,52: __uid_t
 2271,59: TYPE
 
26 TYPE 
 2271,59: TYPE
 
298 NAME VARIABLE 
 2271,60: __owner
 2271,67: VARIABLE
 
65 VARIABLE 
 2271,67: VARIABLE
 
300 , parameter_declaration 
 2271,67: ,
 2272,8: __gid_t
 2272,15: TYPE
 2272,16: __group
 2272,23: VARIABLE
 
391 NAME TYPE 
 2272,8: __gid_t
 2272,15: TYPE
 
26 TYPE 
 2272,15: TYPE
 
298 NAME VARIABLE 
 2272,16: __group
 2272,23: VARIABLE
 
65 VARIABLE 
 2272,23: VARIABLE
 
300 , parameter_declaration 
 2272,23: ,
 2272,25: int
 2272,29: __flag
 2272,35: VARIABLE
 
391 int 
 2272,25: int
 
298 NAME VARIABLE 
 2272,29: __flag
 2272,35: VARIABLE
 
65 VARIABLE 
 2272,35: VARIABLE
 
187 ) 
 2272,35: )
 
60 ; 
 2273,8: ;
 
23 extern 
 2277,1: extern
 
8 int 
 2277,8: int
 
5 NAME VARIABLE 
 2277,12: chdir
 2277,17: VARIABLE
 
65 VARIABLE 
 2277,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2277,18: (
 2277,19: const
 2277,25: char
 2277,30: *
 2277,31: __path
 2277,37: VARIABLE
 2277,37: )
 
186 const 
 2277,19: const
 
103 char 
 2277,25: char
 
298 * option_type_qualifier_list option_pointer 
 2277,30: *
 
386 NAME VARIABLE 
 2277,31: __path
 2277,37: VARIABLE
 
65 VARIABLE 
 2277,37: VARIABLE
 
187 ) 
 2277,37: )
 
60 ; 
 2277,41: ;
 
23 extern 
 2281,1: extern
 
8 int 
 2281,8: int
 
5 NAME VARIABLE 
 2281,12: fchdir
 2281,18: VARIABLE
 
65 VARIABLE 
 2281,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2281,19: (
 2281,20: int
 2281,24: __fd
 2281,28: VARIABLE
 2281,28: )
 
186 int 
 2281,20: int
 
298 NAME VARIABLE 
 2281,24: __fd
 2281,28: VARIABLE
 
65 VARIABLE 
 2281,28: VARIABLE
 
187 ) 
 2281,28: )
 
60 ; 
 2281,31: ;
 
23 extern 
 2283,1: extern
 
8 char 
 2283,8: char
 
5 * option_type_qualifier_list option_pointer 
 2283,13: *
 
64 NAME VARIABLE 
 2283,14: getcwd
 2283,20: VARIABLE
 
65 VARIABLE 
 2283,20: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2283,21: (
 2283,22: char
 2283,27: *
 2283,28: __buf
 2283,33: VARIABLE
 2283,33: ,
 2283,35: size_t
 2283,41: TYPE
 2283,42: __size
 2283,48: VARIABLE
 2283,48: )
 
186 char 
 2283,22: char
 
298 * option_type_qualifier_list option_pointer 
 2283,27: *
 
386 NAME VARIABLE 
 2283,28: __buf
 2283,33: VARIABLE
 
65 VARIABLE 
 2283,33: VARIABLE
 
300 , parameter_declaration 
 2283,33: ,
 2283,35: size_t
 2283,41: TYPE
 2283,42: __size
 2283,48: VARIABLE
 
391 NAME TYPE 
 2283,35: size_t
 2283,41: TYPE
 
26 TYPE 
 2283,41: TYPE
 
298 NAME VARIABLE 
 2283,42: __size
 2283,48: VARIABLE
 
65 VARIABLE 
 2283,48: VARIABLE
 
187 ) 
 2283,48: )
 
60 ; 
 2283,51: ;
 
23 extern 
 2285,1: extern
 
8 char 
 2285,8: char
 
5 * option_type_qualifier_list option_pointer 
 2285,13: *
 
64 NAME VARIABLE 
 2285,14: getwd
 2285,19: VARIABLE
 
65 VARIABLE 
 2285,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 2285,20: (
 2285,21: char
 2285,26: *
 2285,27: __buf
 2285,32: VARIABLE
 2285,32: )
 
186 char 
 2285,21: char
 
298 * option_type_qualifier_list option_pointer 
 2285,26: *
 
386 NAME VARIABLE 
 2285,27: __buf
 2285,32: VARIABLE
 
65 VARIABLE 
 2285,32: VARIABLE
 
187 ) 
 2285,32: )
 
60 ; 
 2287,5: ;
 
23 extern 
 2292,1: extern
 
8 int 
 2292,8: int
 
5 NAME VARIABLE 
 2292,12: dup
 2292,15: VARIABLE
 
65 VARIABLE 
 2292,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2292,16: (
 2292,17: int
 2292,21: __fd
 2292,25: VARIABLE
 2292,25: )
 
186 int 
 2292,17: int
 
298 NAME VARIABLE 
 2292,21: __fd
 2292,25: VARIABLE
 
65 VARIABLE 
 2292,25: VARIABLE
 
187 ) 
 2292,25: )
 
60 ; 
 2292,28: ;
 
23 extern 
 2295,1: extern
 
8 int 
 2295,8: int
 
5 NAME VARIABLE 
 2295,12: dup2
 2295,16: VARIABLE
 
65 VARIABLE 
 2295,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2295,17: (
 2295,18: int
 2295,22: __fd
 2295,26: VARIABLE
 2295,26: ,
 2295,28: int
 2295,32: __fd2
 2295,37: VARIABLE
 2295,37: )
 
186 int 
 2295,18: int
 
298 NAME VARIABLE 
 2295,22: __fd
 2295,26: VARIABLE
 
65 VARIABLE 
 2295,26: VARIABLE
 
300 , parameter_declaration 
 2295,26: ,
 2295,28: int
 2295,32: __fd2
 2295,37: VARIABLE
 
391 int 
 2295,28: int
 
298 NAME VARIABLE 
 2295,32: __fd2
 2295,37: VARIABLE
 
65 VARIABLE 
 2295,37: VARIABLE
 
187 ) 
 2295,37: )
 
60 ; 
 2295,39: ;
 
23 extern 
 2297,1: extern
 
8 char 
 2297,8: char
 
5 * option_type_qualifier_list option_pointer 
 2297,13: *
 2297,14: *
 
116 * option_type_qualifier_list option_pointer 
 2297,14: *
 
64 NAME VARIABLE 
 2297,15: __environ
 2297,24: VARIABLE
 
65 VARIABLE 
 2297,24: VARIABLE
 
60 ; 
 2297,24: ;
 
23 extern 
 2305,1: extern
 
8 int 
 2305,8: int
 
5 NAME VARIABLE 
 2305,12: execve
 2305,18: VARIABLE
 
65 VARIABLE 
 2305,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2305,19: (
 2305,20: const
 2305,26: char
 2305,31: *
 2305,32: __path
 2305,38: VARIABLE
 2305,38: ,
 2305,40: char
 2305,45: *
 2305,46: const
 2305,52: __argv
 2305,58: VARIABLE
 2305,58: [
 2305,59: ]
 2305,60: ,
 2306,6: char
 2306,11: *
 2306,12: const
 2306,18: __envp
 2306,24: VARIABLE
 2306,24: [
 2306,25: ]
 2306,26: )
 
186 const 
 2305,20: const
 
103 char 
 2305,26: char
 
298 * option_type_qualifier_list option_pointer 
 2305,31: *
 
386 NAME VARIABLE 
 2305,32: __path
 2305,38: VARIABLE
 
65 VARIABLE 
 2305,38: VARIABLE
 
300 , parameter_declaration 
 2305,38: ,
 2305,40: char
 2305,45: *
 2305,46: const
 2305,52: __argv
 2305,58: VARIABLE
 2305,58: [
 2305,59: ]
 
391 char 
 2305,40: char
 
298 * option_type_qualifier_list option_pointer 
 2305,45: *
 2305,46: const
 
116 const 
 2305,46: const
 
386 NAME VARIABLE 
 2305,52: __argv
 2305,58: VARIABLE
 
65 VARIABLE 
 2305,58: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 2305,58: [
 2305,59: ]
 
305 ] 
 2305,59: ]
 
300 , parameter_declaration 
 2305,60: ,
 2306,6: char
 2306,11: *
 2306,12: const
 2306,18: __envp
 2306,24: VARIABLE
 2306,24: [
 2306,25: ]
 
391 char 
 2306,6: char
 
298 * option_type_qualifier_list option_pointer 
 2306,11: *
 2306,12: const
 
116 const 
 2306,12: const
 
386 NAME VARIABLE 
 2306,18: __envp
 2306,24: VARIABLE
 
65 VARIABLE 
 2306,24: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 2306,24: [
 2306,25: ]
 
305 ] 
 2306,25: ]
 
187 ) 
 2306,26: )
 
60 ; 
 2306,29: ;
 
23 extern 
 2311,1: extern
 
8 int 
 2311,8: int
 
5 NAME VARIABLE 
 2311,12: fexecve
 2311,19: VARIABLE
 
65 VARIABLE 
 2311,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2311,20: (
 2311,21: int
 2311,25: __fd
 2311,29: VARIABLE
 2311,29: ,
 2311,31: char
 2311,36: *
 2311,37: const
 2311,43: __argv
 2311,49: VARIABLE
 2311,49: [
 2311,50: ]
 2311,51: ,
 2311,53: char
 2311,58: *
 2311,59: const
 2311,65: __envp
 2311,71: VARIABLE
 2311,71: [
 2311,72: ]
 2311,73: )
 
186 int 
 2311,21: int
 
298 NAME VARIABLE 
 2311,25: __fd
 2311,29: VARIABLE
 
65 VARIABLE 
 2311,29: VARIABLE
 
300 , parameter_declaration 
 2311,29: ,
 2311,31: char
 2311,36: *
 2311,37: const
 2311,43: __argv
 2311,49: VARIABLE
 2311,49: [
 2311,50: ]
 
391 char 
 2311,31: char
 
298 * option_type_qualifier_list option_pointer 
 2311,36: *
 2311,37: const
 
116 const 
 2311,37: const
 
386 NAME VARIABLE 
 2311,43: __argv
 2311,49: VARIABLE
 
65 VARIABLE 
 2311,49: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 2311,49: [
 2311,50: ]
 
305 ] 
 2311,50: ]
 
300 , parameter_declaration 
 2311,51: ,
 2311,53: char
 2311,58: *
 2311,59: const
 2311,65: __envp
 2311,71: VARIABLE
 2311,71: [
 2311,72: ]
 
391 char 
 2311,53: char
 
298 * option_type_qualifier_list option_pointer 
 2311,58: *
 2311,59: const
 
116 const 
 2311,59: const
 
386 NAME VARIABLE 
 2311,65: __envp
 2311,71: VARIABLE
 
65 VARIABLE 
 2311,71: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 2311,71: [
 2311,72: ]
 
305 ] 
 2311,72: ]
 
187 ) 
 2311,73: )
 
60 ; 
 2312,7: ;
 
23 extern 
 2317,1: extern
 
8 int 
 2317,8: int
 
5 NAME VARIABLE 
 2317,12: execv
 2317,17: VARIABLE
 
65 VARIABLE 
 2317,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2317,18: (
 2317,19: const
 2317,25: char
 2317,30: *
 2317,31: __path
 2317,37: VARIABLE
 2317,37: ,
 2317,39: char
 2317,44: *
 2317,45: const
 2317,51: __argv
 2317,57: VARIABLE
 2317,57: [
 2317,58: ]
 2317,59: )
 
186 const 
 2317,19: const
 
103 char 
 2317,25: char
 
298 * option_type_qualifier_list option_pointer 
 2317,30: *
 
386 NAME VARIABLE 
 2317,31: __path
 2317,37: VARIABLE
 
65 VARIABLE 
 2317,37: VARIABLE
 
300 , parameter_declaration 
 2317,37: ,
 2317,39: char
 2317,44: *
 2317,45: const
 2317,51: __argv
 2317,57: VARIABLE
 2317,57: [
 2317,58: ]
 
391 char 
 2317,39: char
 
298 * option_type_qualifier_list option_pointer 
 2317,44: *
 2317,45: const
 
116 const 
 2317,45: const
 
386 NAME VARIABLE 
 2317,51: __argv
 2317,57: VARIABLE
 
65 VARIABLE 
 2317,57: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 2317,57: [
 2317,58: ]
 
305 ] 
 2317,58: ]
 
187 ) 
 2317,59: )
 
60 ; 
 2318,7: ;
 
23 extern 
 2322,1: extern
 
8 int 
 2322,8: int
 
5 NAME VARIABLE 
 2322,12: execle
 2322,18: VARIABLE
 
65 VARIABLE 
 2322,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2322,19: (
 2322,20: const
 2322,26: char
 2322,31: *
 2322,32: __path
 2322,38: VARIABLE
 2322,38: ,
 2322,40: const
 2322,46: char
 2322,51: *
 2322,52: __arg
 2322,57: VARIABLE
 2322,57: ,
 2322,59: ...
 2322,62: )
 
186 const 
 2322,20: const
 
103 char 
 2322,26: char
 
298 * option_type_qualifier_list option_pointer 
 2322,31: *
 
386 NAME VARIABLE 
 2322,32: __path
 2322,38: VARIABLE
 
65 VARIABLE 
 2322,38: VARIABLE
 
300 , parameter_declaration 
 2322,38: ,
 2322,40: const
 2322,46: char
 2322,51: *
 2322,52: __arg
 2322,57: VARIABLE
 
391 const 
 2322,40: const
 
103 char 
 2322,46: char
 
298 * option_type_qualifier_list option_pointer 
 2322,51: *
 
386 NAME VARIABLE 
 2322,52: __arg
 2322,57: VARIABLE
 
65 VARIABLE 
 2322,57: VARIABLE
 
300 , ... 
 2322,57: ,
 2322,59: ...
 
391 ... 
 2322,59: ...
 
187 ) 
 2322,62: )
 
60 ; 
 2323,7: ;
 
23 extern 
 2327,1: extern
 
8 int 
 2327,8: int
 
5 NAME VARIABLE 
 2327,12: execl
 2327,17: VARIABLE
 
65 VARIABLE 
 2327,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2327,18: (
 2327,19: const
 2327,25: char
 2327,30: *
 2327,31: __path
 2327,37: VARIABLE
 2327,37: ,
 2327,39: const
 2327,45: char
 2327,50: *
 2327,51: __arg
 2327,56: VARIABLE
 2327,56: ,
 2327,58: ...
 2327,61: )
 
186 const 
 2327,19: const
 
103 char 
 2327,25: char
 
298 * option_type_qualifier_list option_pointer 
 2327,30: *
 
386 NAME VARIABLE 
 2327,31: __path
 2327,37: VARIABLE
 
65 VARIABLE 
 2327,37: VARIABLE
 
300 , parameter_declaration 
 2327,37: ,
 2327,39: const
 2327,45: char
 2327,50: *
 2327,51: __arg
 2327,56: VARIABLE
 
391 const 
 2327,39: const
 
103 char 
 2327,45: char
 
298 * option_type_qualifier_list option_pointer 
 2327,50: *
 
386 NAME VARIABLE 
 2327,51: __arg
 2327,56: VARIABLE
 
65 VARIABLE 
 2327,56: VARIABLE
 
300 , ... 
 2327,56: ,
 2327,58: ...
 
391 ... 
 2327,58: ...
 
187 ) 
 2327,61: )
 
60 ; 
 2328,7: ;
 
23 extern 
 2332,1: extern
 
8 int 
 2332,8: int
 
5 NAME VARIABLE 
 2332,12: execvp
 2332,18: VARIABLE
 
65 VARIABLE 
 2332,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2332,19: (
 2332,20: const
 2332,26: char
 2332,31: *
 2332,32: __file
 2332,38: VARIABLE
 2332,38: ,
 2332,40: char
 2332,45: *
 2332,46: const
 2332,52: __argv
 2332,58: VARIABLE
 2332,58: [
 2332,59: ]
 2332,60: )
 
186 const 
 2332,20: const
 
103 char 
 2332,26: char
 
298 * option_type_qualifier_list option_pointer 
 2332,31: *
 
386 NAME VARIABLE 
 2332,32: __file
 2332,38: VARIABLE
 
65 VARIABLE 
 2332,38: VARIABLE
 
300 , parameter_declaration 
 2332,38: ,
 2332,40: char
 2332,45: *
 2332,46: const
 2332,52: __argv
 2332,58: VARIABLE
 2332,58: [
 2332,59: ]
 
391 char 
 2332,40: char
 
298 * option_type_qualifier_list option_pointer 
 2332,45: *
 2332,46: const
 
116 const 
 2332,46: const
 
386 NAME VARIABLE 
 2332,52: __argv
 2332,58: VARIABLE
 
65 VARIABLE 
 2332,58: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 2332,58: [
 2332,59: ]
 
305 ] 
 2332,59: ]
 
187 ) 
 2332,60: )
 
60 ; 
 2333,7: ;
 
23 extern 
 2338,1: extern
 
8 int 
 2338,8: int
 
5 NAME VARIABLE 
 2338,12: execlp
 2338,18: VARIABLE
 
65 VARIABLE 
 2338,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2338,19: (
 2338,20: const
 2338,26: char
 2338,31: *
 2338,32: __file
 2338,38: VARIABLE
 2338,38: ,
 2338,40: const
 2338,46: char
 2338,51: *
 2338,52: __arg
 2338,57: VARIABLE
 2338,57: ,
 2338,59: ...
 2338,62: )
 
186 const 
 2338,20: const
 
103 char 
 2338,26: char
 
298 * option_type_qualifier_list option_pointer 
 2338,31: *
 
386 NAME VARIABLE 
 2338,32: __file
 2338,38: VARIABLE
 
65 VARIABLE 
 2338,38: VARIABLE
 
300 , parameter_declaration 
 2338,38: ,
 2338,40: const
 2338,46: char
 2338,51: *
 2338,52: __arg
 2338,57: VARIABLE
 
391 const 
 2338,40: const
 
103 char 
 2338,46: char
 
298 * option_type_qualifier_list option_pointer 
 2338,51: *
 
386 NAME VARIABLE 
 2338,52: __arg
 2338,57: VARIABLE
 
65 VARIABLE 
 2338,57: VARIABLE
 
300 , ... 
 2338,57: ,
 2338,59: ...
 
391 ... 
 2338,59: ...
 
187 ) 
 2338,62: )
 
60 ; 
 2339,7: ;
 
23 extern 
 2341,1: extern
 
8 int 
 2341,8: int
 
5 NAME VARIABLE 
 2341,12: nice
 2341,16: VARIABLE
 
65 VARIABLE 
 2341,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2341,17: (
 2341,18: int
 2341,22: __inc
 2341,27: VARIABLE
 2341,27: )
 
186 int 
 2341,18: int
 
298 NAME VARIABLE 
 2341,22: __inc
 2341,27: VARIABLE
 
65 VARIABLE 
 2341,27: VARIABLE
 
187 ) 
 2341,27: )
 
60 ; 
 2341,30: ;
 
23 extern 
 2346,1: extern
 
8 void 
 2346,8: void
 
5 NAME VARIABLE 
 2346,13: _exit
 2346,18: VARIABLE
 
65 VARIABLE 
 2346,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 2346,19: (
 2346,20: int
 2346,24: __status
 2346,32: VARIABLE
 2346,32: )
 
186 int 
 2346,20: int
 
298 NAME VARIABLE 
 2346,24: __status
 2346,32: VARIABLE
 
65 VARIABLE 
 2346,32: VARIABLE
 
187 ) 
 2346,32: )
 
60 ; 
 2346,34: ;
 
23 enum option_general_identifier { enumerator_list option_comma } 
 2354,1: enum
 2355,3: {
 2356,5: _PC_LINK_MAX
 2356,17: VARIABLE
 2356,17: ,
 2358,5: _PC_MAX_CANON
 2358,18: VARIABLE
 2358,18: ,
 2360,5: _PC_MAX_INPUT
 2360,18: VARIABLE
 2360,18: ,
 2362,5: _PC_NAME_MAX
 2362,17: VARIABLE
 2362,17: ,
 2364,5: _PC_PATH_MAX
 2364,17: VARIABLE
 2364,17: ,
 2366,5: _PC_PIPE_BUF
 2366,17: VARIABLE
 2366,17: ,
 2368,5: _PC_CHOWN_RESTRICTED
 2368,25: VARIABLE
 2368,25: ,
 2370,5: _PC_NO_TRUNC
 2370,17: VARIABLE
 2370,17: ,
 2372,5: _PC_VDISABLE
 2372,17: VARIABLE
 2372,17: ,
 2374,5: _PC_SYNC_IO
 2374,16: VARIABLE
 2374,16: ,
 2376,5: _PC_ASYNC_IO
 2376,17: VARIABLE
 2376,17: ,
 2378,5: _PC_PRIO_IO
 2378,16: VARIABLE
 2378,16: ,
 2380,5: _PC_SOCK_MAXBUF
 2380,20: VARIABLE
 2380,20: ,
 2382,5: _PC_FILESIZEBITS
 2382,21: VARIABLE
 2382,21: ,
 2384,5: _PC_REC_INCR_XFER_SIZE
 2384,27: VARIABLE
 2384,27: ,
 2386,5: _PC_REC_MAX_XFER_SIZE
 2386,26: VARIABLE
 2386,26: ,
 2388,5: _PC_REC_MIN_XFER_SIZE
 2388,26: VARIABLE
 2388,26: ,
 2390,5: _PC_REC_XFER_ALIGN
 2390,23: VARIABLE
 2390,23: ,
 2392,5: _PC_ALLOC_SIZE_MIN
 2392,23: VARIABLE
 2392,23: ,
 2394,5: _PC_SYMLINK_MAX
 2394,20: VARIABLE
 2394,20: ,
 2396,5: _PC_2_SYMLINKS
 2396,19: VARIABLE
 2398,3: }
 
98 { enumerator_list option_comma } 
 2355,3: {
 2356,5: _PC_LINK_MAX
 2356,17: VARIABLE
 2356,17: ,
 2358,5: _PC_MAX_CANON
 2358,18: VARIABLE
 2358,18: ,
 2360,5: _PC_MAX_INPUT
 2360,18: VARIABLE
 2360,18: ,
 2362,5: _PC_NAME_MAX
 2362,17: VARIABLE
 2362,17: ,
 2364,5: _PC_PATH_MAX
 2364,17: VARIABLE
 2364,17: ,
 2366,5: _PC_PIPE_BUF
 2366,17: VARIABLE
 2366,17: ,
 2368,5: _PC_CHOWN_RESTRICTED
 2368,25: VARIABLE
 2368,25: ,
 2370,5: _PC_NO_TRUNC
 2370,17: VARIABLE
 2370,17: ,
 2372,5: _PC_VDISABLE
 2372,17: VARIABLE
 2372,17: ,
 2374,5: _PC_SYNC_IO
 2374,16: VARIABLE
 2374,16: ,
 2376,5: _PC_ASYNC_IO
 2376,17: VARIABLE
 2376,17: ,
 2378,5: _PC_PRIO_IO
 2378,16: VARIABLE
 2378,16: ,
 2380,5: _PC_SOCK_MAXBUF
 2380,20: VARIABLE
 2380,20: ,
 2382,5: _PC_FILESIZEBITS
 2382,21: VARIABLE
 2382,21: ,
 2384,5: _PC_REC_INCR_XFER_SIZE
 2384,27: VARIABLE
 2384,27: ,
 2386,5: _PC_REC_MAX_XFER_SIZE
 2386,26: VARIABLE
 2386,26: ,
 2388,5: _PC_REC_MIN_XFER_SIZE
 2388,26: VARIABLE
 2388,26: ,
 2390,5: _PC_REC_XFER_ALIGN
 2390,23: VARIABLE
 2390,23: ,
 2392,5: _PC_ALLOC_SIZE_MIN
 2392,23: VARIABLE
 2392,23: ,
 2394,5: _PC_SYMLINK_MAX
 2394,20: VARIABLE
 2394,20: ,
 2396,5: _PC_2_SYMLINKS
 2396,19: VARIABLE
 2398,3: }
 
131 NAME VARIABLE 
 2356,5: _PC_LINK_MAX
 2356,17: VARIABLE
 
65 VARIABLE 
 2356,17: VARIABLE
 
204 , enumerator 
 2356,17: ,
 2358,5: _PC_MAX_CANON
 2358,18: VARIABLE
 
340 NAME VARIABLE 
 2358,5: _PC_MAX_CANON
 2358,18: VARIABLE
 
65 VARIABLE 
 2358,18: VARIABLE
 
204 , enumerator 
 2358,18: ,
 2360,5: _PC_MAX_INPUT
 2360,18: VARIABLE
 
340 NAME VARIABLE 
 2360,5: _PC_MAX_INPUT
 2360,18: VARIABLE
 
65 VARIABLE 
 2360,18: VARIABLE
 
204 , enumerator 
 2360,18: ,
 2362,5: _PC_NAME_MAX
 2362,17: VARIABLE
 
340 NAME VARIABLE 
 2362,5: _PC_NAME_MAX
 2362,17: VARIABLE
 
65 VARIABLE 
 2362,17: VARIABLE
 
204 , enumerator 
 2362,17: ,
 2364,5: _PC_PATH_MAX
 2364,17: VARIABLE
 
340 NAME VARIABLE 
 2364,5: _PC_PATH_MAX
 2364,17: VARIABLE
 
65 VARIABLE 
 2364,17: VARIABLE
 
204 , enumerator 
 2364,17: ,
 2366,5: _PC_PIPE_BUF
 2366,17: VARIABLE
 
340 NAME VARIABLE 
 2366,5: _PC_PIPE_BUF
 2366,17: VARIABLE
 
65 VARIABLE 
 2366,17: VARIABLE
 
204 , enumerator 
 2366,17: ,
 2368,5: _PC_CHOWN_RESTRICTED
 2368,25: VARIABLE
 
340 NAME VARIABLE 
 2368,5: _PC_CHOWN_RESTRICTED
 2368,25: VARIABLE
 
65 VARIABLE 
 2368,25: VARIABLE
 
204 , enumerator 
 2368,25: ,
 2370,5: _PC_NO_TRUNC
 2370,17: VARIABLE
 
340 NAME VARIABLE 
 2370,5: _PC_NO_TRUNC
 2370,17: VARIABLE
 
65 VARIABLE 
 2370,17: VARIABLE
 
204 , enumerator 
 2370,17: ,
 2372,5: _PC_VDISABLE
 2372,17: VARIABLE
 
340 NAME VARIABLE 
 2372,5: _PC_VDISABLE
 2372,17: VARIABLE
 
65 VARIABLE 
 2372,17: VARIABLE
 
204 , enumerator 
 2372,17: ,
 2374,5: _PC_SYNC_IO
 2374,16: VARIABLE
 
340 NAME VARIABLE 
 2374,5: _PC_SYNC_IO
 2374,16: VARIABLE
 
65 VARIABLE 
 2374,16: VARIABLE
 
204 , enumerator 
 2374,16: ,
 2376,5: _PC_ASYNC_IO
 2376,17: VARIABLE
 
340 NAME VARIABLE 
 2376,5: _PC_ASYNC_IO
 2376,17: VARIABLE
 
65 VARIABLE 
 2376,17: VARIABLE
 
204 , enumerator 
 2376,17: ,
 2378,5: _PC_PRIO_IO
 2378,16: VARIABLE
 
340 NAME VARIABLE 
 2378,5: _PC_PRIO_IO
 2378,16: VARIABLE
 
65 VARIABLE 
 2378,16: VARIABLE
 
204 , enumerator 
 2378,16: ,
 2380,5: _PC_SOCK_MAXBUF
 2380,20: VARIABLE
 
340 NAME VARIABLE 
 2380,5: _PC_SOCK_MAXBUF
 2380,20: VARIABLE
 
65 VARIABLE 
 2380,20: VARIABLE
 
204 , enumerator 
 2380,20: ,
 2382,5: _PC_FILESIZEBITS
 2382,21: VARIABLE
 
340 NAME VARIABLE 
 2382,5: _PC_FILESIZEBITS
 2382,21: VARIABLE
 
65 VARIABLE 
 2382,21: VARIABLE
 
204 , enumerator 
 2382,21: ,
 2384,5: _PC_REC_INCR_XFER_SIZE
 2384,27: VARIABLE
 
340 NAME VARIABLE 
 2384,5: _PC_REC_INCR_XFER_SIZE
 2384,27: VARIABLE
 
65 VARIABLE 
 2384,27: VARIABLE
 
204 , enumerator 
 2384,27: ,
 2386,5: _PC_REC_MAX_XFER_SIZE
 2386,26: VARIABLE
 
340 NAME VARIABLE 
 2386,5: _PC_REC_MAX_XFER_SIZE
 2386,26: VARIABLE
 
65 VARIABLE 
 2386,26: VARIABLE
 
204 , enumerator 
 2386,26: ,
 2388,5: _PC_REC_MIN_XFER_SIZE
 2388,26: VARIABLE
 
340 NAME VARIABLE 
 2388,5: _PC_REC_MIN_XFER_SIZE
 2388,26: VARIABLE
 
65 VARIABLE 
 2388,26: VARIABLE
 
204 , enumerator 
 2388,26: ,
 2390,5: _PC_REC_XFER_ALIGN
 2390,23: VARIABLE
 
340 NAME VARIABLE 
 2390,5: _PC_REC_XFER_ALIGN
 2390,23: VARIABLE
 
65 VARIABLE 
 2390,23: VARIABLE
 
204 , enumerator 
 2390,23: ,
 2392,5: _PC_ALLOC_SIZE_MIN
 2392,23: VARIABLE
 
340 NAME VARIABLE 
 2392,5: _PC_ALLOC_SIZE_MIN
 2392,23: VARIABLE
 
65 VARIABLE 
 2392,23: VARIABLE
 
204 , enumerator 
 2392,23: ,
 2394,5: _PC_SYMLINK_MAX
 2394,20: VARIABLE
 
340 NAME VARIABLE 
 2394,5: _PC_SYMLINK_MAX
 2394,20: VARIABLE
 
65 VARIABLE 
 2394,20: VARIABLE
 
204 , enumerator 
 2394,20: ,
 2396,5: _PC_2_SYMLINKS
 2396,19: VARIABLE
 
340 NAME VARIABLE 
 2396,5: _PC_2_SYMLINKS
 2396,19: VARIABLE
 
65 VARIABLE 
 2396,19: VARIABLE
 
339 } 
 2398,3: }
 
60 ; 
 2398,4: ;
 
23 enum option_general_identifier { enumerator_list option_comma } 
 2401,1: enum
 2402,3: {
 2403,5: _SC_ARG_MAX
 2403,16: VARIABLE
 2403,16: ,
 2405,5: _SC_CHILD_MAX
 2405,18: VARIABLE
 2405,18: ,
 2407,5: _SC_CLK_TCK
 2407,16: VARIABLE
 2407,16: ,
 2409,5: _SC_NGROUPS_MAX
 2409,20: VARIABLE
 2409,20: ,
 2411,5: _SC_OPEN_MAX
 2411,17: VARIABLE
 2411,17: ,
 2413,5: _SC_STREAM_MAX
 2413,19: VARIABLE
 2413,19: ,
 2415,5: _SC_TZNAME_MAX
 2415,19: VARIABLE
 2415,19: ,
 2417,5: _SC_JOB_CONTROL
 2417,20: VARIABLE
 2417,20: ,
 2419,5: _SC_SAVED_IDS
 2419,18: VARIABLE
 2419,18: ,
 2421,5: _SC_REALTIME_SIGNALS
 2421,25: VARIABLE
 2421,25: ,
 2423,5: _SC_PRIORITY_SCHEDULING
 2423,28: VARIABLE
 2423,28: ,
 2425,5: _SC_TIMERS
 2425,15: VARIABLE
 2425,15: ,
 2427,5: _SC_ASYNCHRONOUS_IO
 2427,24: VARIABLE
 2427,24: ,
 2429,5: _SC_PRIORITIZED_IO
 2429,23: VARIABLE
 2429,23: ,
 2431,5: _SC_SYNCHRONIZED_IO
 2431,24: VARIABLE
 2431,24: ,
 2433,5: _SC_FSYNC
 2433,14: VARIABLE
 2433,14: ,
 2435,5: _SC_MAPPED_FILES
 2435,21: VARIABLE
 2435,21: ,
 2437,5: _SC_MEMLOCK
 2437,16: VARIABLE
 2437,16: ,
 2439,5: _SC_MEMLOCK_RANGE
 2439,22: VARIABLE
 2439,22: ,
 2441,5: _SC_MEMORY_PROTECTION
 2441,26: VARIABLE
 2441,26: ,
 2443,5: _SC_MESSAGE_PASSING
 2443,24: VARIABLE
 2443,24: ,
 2445,5: _SC_SEMAPHORES
 2445,19: VARIABLE
 2445,19: ,
 2447,5: _SC_SHARED_MEMORY_OBJECTS
 2447,30: VARIABLE
 2447,30: ,
 2449,5: _SC_AIO_LISTIO_MAX
 2449,23: VARIABLE
 2449,23: ,
 2451,5: _SC_AIO_MAX
 2451,16: VARIABLE
 2451,16: ,
 2453,5: _SC_AIO_PRIO_DELTA_MAX
 2453,27: VARIABLE
 2453,27: ,
 2455,5: _SC_DELAYTIMER_MAX
 2455,23: VARIABLE
 2455,23: ,
 2457,5: _SC_MQ_OPEN_MAX
 2457,20: VARIABLE
 2457,20: ,
 2459,5: _SC_MQ_PRIO_MAX
 2459,20: VARIABLE
 2459,20: ,
 2461,5: _SC_VERSION
 2461,16: VARIABLE
 2461,16: ,
 2463,5: _SC_PAGESIZE
 2463,17: VARIABLE
 2463,17: ,
 2466,5: _SC_RTSIG_MAX
 2466,18: VARIABLE
 2466,18: ,
 2468,5: _SC_SEM_NSEMS_MAX
 2468,22: VARIABLE
 2468,22: ,
 2470,5: _SC_SEM_VALUE_MAX
 2470,22: VARIABLE
 2470,22: ,
 2472,5: _SC_SIGQUEUE_MAX
 2472,21: VARIABLE
 2472,21: ,
 2474,5: _SC_TIMER_MAX
 2474,18: VARIABLE
 2474,18: ,
 2479,5: _SC_BC_BASE_MAX
 2479,20: VARIABLE
 2479,20: ,
 2481,5: _SC_BC_DIM_MAX
 2481,19: VARIABLE
 2481,19: ,
 2483,5: _SC_BC_SCALE_MAX
 2483,21: VARIABLE
 2483,21: ,
 2485,5: _SC_BC_STRING_MAX
 2485,22: VARIABLE
 2485,22: ,
 2487,5: _SC_COLL_WEIGHTS_MAX
 2487,25: VARIABLE
 2487,25: ,
 2489,5: _SC_EQUIV_CLASS_MAX
 2489,24: VARIABLE
 2489,24: ,
 2491,5: _SC_EXPR_NEST_MAX
 2491,22: VARIABLE
 2491,22: ,
 2493,5: _SC_LINE_MAX
 2493,17: VARIABLE
 2493,17: ,
 2495,5: _SC_RE_DUP_MAX
 2495,19: VARIABLE
 2495,19: ,
 2497,5: _SC_CHARCLASS_NAME_MAX
 2497,27: VARIABLE
 2497,27: ,
 2500,5: _SC_2_VERSION
 2500,18: VARIABLE
 2500,18: ,
 2502,5: _SC_2_C_BIND
 2502,17: VARIABLE
 2502,17: ,
 2504,5: _SC_2_C_DEV
 2504,16: VARIABLE
 2504,16: ,
 2506,5: _SC_2_FORT_DEV
 2506,19: VARIABLE
 2506,19: ,
 2508,5: _SC_2_FORT_RUN
 2508,19: VARIABLE
 2508,19: ,
 2510,5: _SC_2_SW_DEV
 2510,17: VARIABLE
 2510,17: ,
 2512,5: _SC_2_LOCALEDEF
 2512,20: VARIABLE
 2512,20: ,
 2515,5: _SC_PII
 2515,12: VARIABLE
 2515,12: ,
 2517,5: _SC_PII_XTI
 2517,16: VARIABLE
 2517,16: ,
 2519,5: _SC_PII_SOCKET
 2519,19: VARIABLE
 2519,19: ,
 2521,5: _SC_PII_INTERNET
 2521,21: VARIABLE
 2521,21: ,
 2523,5: _SC_PII_OSI
 2523,16: VARIABLE
 2523,16: ,
 2525,5: _SC_POLL
 2525,13: VARIABLE
 2525,13: ,
 2527,5: _SC_SELECT
 2527,15: VARIABLE
 2527,15: ,
 2529,5: _SC_UIO_MAXIOV
 2529,19: VARIABLE
 2529,19: ,
 2531,5: _SC_IOV_MAX
 2531,16: VARIABLE
 2531,17: =
 2531,19: _SC_UIO_MAXIOV
 2531,33: VARIABLE
 2531,33: ,
 2533,5: _SC_PII_INTERNET_STREAM
 2533,28: VARIABLE
 2533,28: ,
 2535,5: _SC_PII_INTERNET_DGRAM
 2535,27: VARIABLE
 2535,27: ,
 2537,5: _SC_PII_OSI_COTS
 2537,21: VARIABLE
 2537,21: ,
 2539,5: _SC_PII_OSI_CLTS
 2539,21: VARIABLE
 2539,21: ,
 2541,5: _SC_PII_OSI_M
 2541,18: VARIABLE
 2541,18: ,
 2543,5: _SC_T_IOV_MAX
 2543,18: VARIABLE
 2543,18: ,
 2547,5: _SC_THREADS
 2547,16: VARIABLE
 2547,16: ,
 2549,5: _SC_THREAD_SAFE_FUNCTIONS
 2549,30: VARIABLE
 2549,30: ,
 2551,5: _SC_GETGR_R_SIZE_MAX
 2551,25: VARIABLE
 2551,25: ,
 2553,5: _SC_GETPW_R_SIZE_MAX
 2553,25: VARIABLE
 2553,25: ,
 2555,5: _SC_LOGIN_NAME_MAX
 2555,23: VARIABLE
 2555,23: ,
 2557,5: _SC_TTY_NAME_MAX
 2557,21: VARIABLE
 2557,21: ,
 2559,5: _SC_THREAD_DESTRUCTOR_ITERATIONS
 2559,37: VARIABLE
 2559,37: ,
 2561,5: _SC_THREAD_KEYS_MAX
 2561,24: VARIABLE
 2561,24: ,
 2563,5: _SC_THREAD_STACK_MIN
 2563,25: VARIABLE
 2563,25: ,
 2565,5: _SC_THREAD_THREADS_MAX
 2565,27: VARIABLE
 2565,27: ,
 2567,5: _SC_THREAD_ATTR_STACKADDR
 2567,30: VARIABLE
 2567,30: ,
 2569,5: _SC_THREAD_ATTR_STACKSIZE
 2569,30: VARIABLE
 2569,30: ,
 2571,5: _SC_THREAD_PRIORITY_SCHEDULING
 2571,35: VARIABLE
 2571,35: ,
 2573,5: _SC_THREAD_PRIO_INHERIT
 2573,28: VARIABLE
 2573,28: ,
 2575,5: _SC_THREAD_PRIO_PROTECT
 2575,28: VARIABLE
 2575,28: ,
 2577,5: _SC_THREAD_PROCESS_SHARED
 2577,30: VARIABLE
 2577,30: ,
 2580,5: _SC_NPROCESSORS_CONF
 2580,25: VARIABLE
 2580,25: ,
 2582,5: _SC_NPROCESSORS_ONLN
 2582,25: VARIABLE
 2582,25: ,
 2584,5: _SC_PHYS_PAGES
 2584,19: VARIABLE
 2584,19: ,
 2586,5: _SC_AVPHYS_PAGES
 2586,21: VARIABLE
 2586,21: ,
 2588,5: _SC_ATEXIT_MAX
 2588,19: VARIABLE
 2588,19: ,
 2590,5: _SC_PASS_MAX
 2590,17: VARIABLE
 2590,17: ,
 2593,5: _SC_XOPEN_VERSION
 2593,22: VARIABLE
 2593,22: ,
 2595,5: _SC_XOPEN_XCU_VERSION
 2595,26: VARIABLE
 2595,26: ,
 2597,5: _SC_XOPEN_UNIX
 2597,19: VARIABLE
 2597,19: ,
 2599,5: _SC_XOPEN_CRYPT
 2599,20: VARIABLE
 2599,20: ,
 2601,5: _SC_XOPEN_ENH_I18N
 2601,23: VARIABLE
 2601,23: ,
 2603,5: _SC_XOPEN_SHM
 2603,18: VARIABLE
 2603,18: ,
 2606,5: _SC_2_CHAR_TERM
 2606,20: VARIABLE
 2606,20: ,
 2608,5: _SC_2_C_VERSION
 2608,20: VARIABLE
 2608,20: ,
 2610,5: _SC_2_UPE
 2610,14: VARIABLE
 2610,14: ,
 2613,5: _SC_XOPEN_XPG2
 2613,19: VARIABLE
 2613,19: ,
 2615,5: _SC_XOPEN_XPG3
 2615,19: VARIABLE
 2615,19: ,
 2617,5: _SC_XOPEN_XPG4
 2617,19: VARIABLE
 2617,19: ,
 2620,5: _SC_CHAR_BIT
 2620,17: VARIABLE
 2620,17: ,
 2622,5: _SC_CHAR_MAX
 2622,17: VARIABLE
 2622,17: ,
 2624,5: _SC_CHAR_MIN
 2624,17: VARIABLE
 2624,17: ,
 2626,5: _SC_INT_MAX
 2626,16: VARIABLE
 2626,16: ,
 2628,5: _SC_INT_MIN
 2628,16: VARIABLE
 2628,16: ,
 2630,5: _SC_LONG_BIT
 2630,17: VARIABLE
 2630,17: ,
 2632,5: _SC_WORD_BIT
 2632,17: VARIABLE
 2632,17: ,
 2634,5: _SC_MB_LEN_MAX
 2634,19: VARIABLE
 2634,19: ,
 2636,5: _SC_NZERO
 2636,14: VARIABLE
 2636,14: ,
 2638,5: _SC_SSIZE_MAX
 2638,18: VARIABLE
 2638,18: ,
 2640,5: _SC_SCHAR_MAX
 2640,18: VARIABLE
 2640,18: ,
 2642,5: _SC_SCHAR_MIN
 2642,18: VARIABLE
 2642,18: ,
 2644,5: _SC_SHRT_MAX
 2644,17: VARIABLE
 2644,17: ,
 2646,5: _SC_SHRT_MIN
 2646,17: VARIABLE
 2646,17: ,
 2648,5: _SC_UCHAR_MAX
 2648,18: VARIABLE
 2648,18: ,
 2650,5: _SC_UINT_MAX
 2650,17: VARIABLE
 2650,17: ,
 2652,5: _SC_ULONG_MAX
 2652,18: VARIABLE
 2652,18: ,
 2654,5: _SC_USHRT_MAX
 2654,18: VARIABLE
 2654,18: ,
 2657,5: _SC_NL_ARGMAX
 2657,18: VARIABLE
 2657,18: ,
 2659,5: _SC_NL_LANGMAX
 2659,19: VARIABLE
 2659,19: ,
 2661,5: _SC_NL_MSGMAX
 2661,18: VARIABLE
 2661,18: ,
 2663,5: _SC_NL_NMAX
 2663,16: VARIABLE
 2663,16: ,
 2665,5: _SC_NL_SETMAX
 2665,18: VARIABLE
 2665,18: ,
 2667,5: _SC_NL_TEXTMAX
 2667,19: VARIABLE
 2667,19: ,
 2670,5: _SC_XBS5_ILP32_OFF32
 2670,25: VARIABLE
 2670,25: ,
 2672,5: _SC_XBS5_ILP32_OFFBIG
 2672,26: VARIABLE
 2672,26: ,
 2674,5: _SC_XBS5_LP64_OFF64
 2674,24: VARIABLE
 2674,24: ,
 2676,5: _SC_XBS5_LPBIG_OFFBIG
 2676,26: VARIABLE
 2676,26: ,
 2679,5: _SC_XOPEN_LEGACY
 2679,21: VARIABLE
 2679,21: ,
 2681,5: _SC_XOPEN_REALTIME
 2681,23: VARIABLE
 2681,23: ,
 2683,5: _SC_XOPEN_REALTIME_THREADS
 2683,31: VARIABLE
 2683,31: ,
 2686,5: _SC_ADVISORY_INFO
 2686,22: VARIABLE
 2686,22: ,
 2688,5: _SC_BARRIERS
 2688,17: VARIABLE
 2688,17: ,
 2690,5: _SC_BASE
 2690,13: VARIABLE
 2690,13: ,
 2692,5: _SC_C_LANG_SUPPORT
 2692,23: VARIABLE
 2692,23: ,
 2694,5: _SC_C_LANG_SUPPORT_R
 2694,25: VARIABLE
 2694,25: ,
 2696,5: _SC_CLOCK_SELECTION
 2696,24: VARIABLE
 2696,24: ,
 2698,5: _SC_CPUTIME
 2698,16: VARIABLE
 2698,16: ,
 2700,5: _SC_THREAD_CPUTIME
 2700,23: VARIABLE
 2700,23: ,
 2702,5: _SC_DEVICE_IO
 2702,18: VARIABLE
 2702,18: ,
 2704,5: _SC_DEVICE_SPECIFIC
 2704,24: VARIABLE
 2704,24: ,
 2706,5: _SC_DEVICE_SPECIFIC_R
 2706,26: VARIABLE
 2706,26: ,
 2708,5: _SC_FD_MGMT
 2708,16: VARIABLE
 2708,16: ,
 2710,5: _SC_FIFO
 2710,13: VARIABLE
 2710,13: ,
 2712,5: _SC_PIPE
 2712,13: VARIABLE
 2712,13: ,
 2714,5: _SC_FILE_ATTRIBUTES
 2714,24: VARIABLE
 2714,24: ,
 2716,5: _SC_FILE_LOCKING
 2716,21: VARIABLE
 2716,21: ,
 2718,5: _SC_FILE_SYSTEM
 2718,20: VARIABLE
 2718,20: ,
 2720,5: _SC_MONOTONIC_CLOCK
 2720,24: VARIABLE
 2720,24: ,
 2722,5: _SC_MULTI_PROCESS
 2722,22: VARIABLE
 2722,22: ,
 2724,5: _SC_SINGLE_PROCESS
 2724,23: VARIABLE
 2724,23: ,
 2726,5: _SC_NETWORKING
 2726,19: VARIABLE
 2726,19: ,
 2728,5: _SC_READER_WRITER_LOCKS
 2728,28: VARIABLE
 2728,28: ,
 2730,5: _SC_SPIN_LOCKS
 2730,19: VARIABLE
 2730,19: ,
 2732,5: _SC_REGEXP
 2732,15: VARIABLE
 2732,15: ,
 2734,5: _SC_REGEX_VERSION
 2734,22: VARIABLE
 2734,22: ,
 2736,5: _SC_SHELL
 2736,14: VARIABLE
 2736,14: ,
 2738,5: _SC_SIGNALS
 2738,16: VARIABLE
 2738,16: ,
 2740,5: _SC_SPAWN
 2740,14: VARIABLE
 2740,14: ,
 2742,5: _SC_SPORADIC_SERVER
 2742,24: VARIABLE
 2742,24: ,
 2744,5: _SC_THREAD_SPORADIC_SERVER
 2744,31: VARIABLE
 2744,31: ,
 2746,5: _SC_SYSTEM_DATABASE
 2746,24: VARIABLE
 2746,24: ,
 2748,5: _SC_SYSTEM_DATABASE_R
 2748,26: VARIABLE
 2748,26: ,
 2750,5: _SC_TIMEOUTS
 2750,17: VARIABLE
 2750,17: ,
 2752,5: _SC_TYPED_MEMORY_OBJECTS
 2752,29: VARIABLE
 2752,29: ,
 2754,5: _SC_USER_GROUPS
 2754,20: VARIABLE
 2754,20: ,
 2756,5: _SC_USER_GROUPS_R
 2756,22: VARIABLE
 2756,22: ,
 2758,5: _SC_2_PBS
 2758,14: VARIABLE
 2758,14: ,
 2760,5: _SC_2_PBS_ACCOUNTING
 2760,25: VARIABLE
 2760,25: ,
 2762,5: _SC_2_PBS_LOCATE
 2762,21: VARIABLE
 2762,21: ,
 2764,5: _SC_2_PBS_MESSAGE
 2764,22: VARIABLE
 2764,22: ,
 2766,5: _SC_2_PBS_TRACK
 2766,20: VARIABLE
 2766,20: ,
 2768,5: _SC_SYMLOOP_MAX
 2768,20: VARIABLE
 2768,20: ,
 2770,5: _SC_STREAMS
 2770,16: VARIABLE
 2770,16: ,
 2772,5: _SC_2_PBS_CHECKPOINT
 2772,25: VARIABLE
 2772,25: ,
 2775,5: _SC_V6_ILP32_OFF32
 2775,23: VARIABLE
 2775,23: ,
 2777,5: _SC_V6_ILP32_OFFBIG
 2777,24: VARIABLE
 2777,24: ,
 2779,5: _SC_V6_LP64_OFF64
 2779,22: VARIABLE
 2779,22: ,
 2781,5: _SC_V6_LPBIG_OFFBIG
 2781,24: VARIABLE
 2781,24: ,
 2784,5: _SC_HOST_NAME_MAX
 2784,22: VARIABLE
 2784,22: ,
 2786,5: _SC_TRACE
 2786,14: VARIABLE
 2786,14: ,
 2788,5: _SC_TRACE_EVENT_FILTER
 2788,27: VARIABLE
 2788,27: ,
 2790,5: _SC_TRACE_INHERIT
 2790,22: VARIABLE
 2790,22: ,
 2792,5: _SC_TRACE_LOG
 2792,18: VARIABLE
 2792,18: ,
 2795,5: _SC_LEVEL1_ICACHE_SIZE
 2795,27: VARIABLE
 2795,27: ,
 2797,5: _SC_LEVEL1_ICACHE_ASSOC
 2797,28: VARIABLE
 2797,28: ,
 2799,5: _SC_LEVEL1_ICACHE_LINESIZE
 2799,31: VARIABLE
 2799,31: ,
 2801,5: _SC_LEVEL1_DCACHE_SIZE
 2801,27: VARIABLE
 2801,27: ,
 2803,5: _SC_LEVEL1_DCACHE_ASSOC
 2803,28: VARIABLE
 2803,28: ,
 2805,5: _SC_LEVEL1_DCACHE_LINESIZE
 2805,31: VARIABLE
 2805,31: ,
 2807,5: _SC_LEVEL2_CACHE_SIZE
 2807,26: VARIABLE
 2807,26: ,
 2809,5: _SC_LEVEL2_CACHE_ASSOC
 2809,27: VARIABLE
 2809,27: ,
 2811,5: _SC_LEVEL2_CACHE_LINESIZE
 2811,30: VARIABLE
 2811,30: ,
 2813,5: _SC_LEVEL3_CACHE_SIZE
 2813,26: VARIABLE
 2813,26: ,
 2815,5: _SC_LEVEL3_CACHE_ASSOC
 2815,27: VARIABLE
 2815,27: ,
 2817,5: _SC_LEVEL3_CACHE_LINESIZE
 2817,30: VARIABLE
 2817,30: ,
 2819,5: _SC_LEVEL4_CACHE_SIZE
 2819,26: VARIABLE
 2819,26: ,
 2821,5: _SC_LEVEL4_CACHE_ASSOC
 2821,27: VARIABLE
 2821,27: ,
 2823,5: _SC_LEVEL4_CACHE_LINESIZE
 2823,30: VARIABLE
 2823,30: ,
 2827,5: _SC_IPV6
 2827,13: VARIABLE
 2827,14: =
 2827,16: _SC_LEVEL1_ICACHE_SIZE
 2827,38: VARIABLE
 2827,39: +
 2827,41: 50
 2827,43: ,
 2829,5: _SC_RAW_SOCKETS
 2829,20: VARIABLE
 2829,20: ,
 2832,5: _SC_V7_ILP32_OFF32
 2832,23: VARIABLE
 2832,23: ,
 2834,5: _SC_V7_ILP32_OFFBIG
 2834,24: VARIABLE
 2834,24: ,
 2836,5: _SC_V7_LP64_OFF64
 2836,22: VARIABLE
 2836,22: ,
 2838,5: _SC_V7_LPBIG_OFFBIG
 2838,24: VARIABLE
 2838,24: ,
 2841,5: _SC_SS_REPL_MAX
 2841,20: VARIABLE
 2841,20: ,
 2844,5: _SC_TRACE_EVENT_NAME_MAX
 2844,29: VARIABLE
 2844,29: ,
 2846,5: _SC_TRACE_NAME_MAX
 2846,23: VARIABLE
 2846,23: ,
 2848,5: _SC_TRACE_SYS_MAX
 2848,22: VARIABLE
 2848,22: ,
 2850,5: _SC_TRACE_USER_EVENT_MAX
 2850,29: VARIABLE
 2850,29: ,
 2853,5: _SC_XOPEN_STREAMS
 2853,22: VARIABLE
 2853,22: ,
 2856,5: _SC_THREAD_ROBUST_PRIO_INHERIT
 2856,35: VARIABLE
 2856,35: ,
 2858,5: _SC_THREAD_ROBUST_PRIO_PROTECT
 2858,35: VARIABLE
 2858,35: ,
 2861,5: _SC_MINSIGSTKSZ
 2861,20: VARIABLE
 2861,20: ,
 2864,5: _SC_SIGSTKSZ
 2864,17: VARIABLE
 2866,3: }
 
98 { enumerator_list option_comma } 
 2402,3: {
 2403,5: _SC_ARG_MAX
 2403,16: VARIABLE
 2403,16: ,
 2405,5: _SC_CHILD_MAX
 2405,18: VARIABLE
 2405,18: ,
 2407,5: _SC_CLK_TCK
 2407,16: VARIABLE
 2407,16: ,
 2409,5: _SC_NGROUPS_MAX
 2409,20: VARIABLE
 2409,20: ,
 2411,5: _SC_OPEN_MAX
 2411,17: VARIABLE
 2411,17: ,
 2413,5: _SC_STREAM_MAX
 2413,19: VARIABLE
 2413,19: ,
 2415,5: _SC_TZNAME_MAX
 2415,19: VARIABLE
 2415,19: ,
 2417,5: _SC_JOB_CONTROL
 2417,20: VARIABLE
 2417,20: ,
 2419,5: _SC_SAVED_IDS
 2419,18: VARIABLE
 2419,18: ,
 2421,5: _SC_REALTIME_SIGNALS
 2421,25: VARIABLE
 2421,25: ,
 2423,5: _SC_PRIORITY_SCHEDULING
 2423,28: VARIABLE
 2423,28: ,
 2425,5: _SC_TIMERS
 2425,15: VARIABLE
 2425,15: ,
 2427,5: _SC_ASYNCHRONOUS_IO
 2427,24: VARIABLE
 2427,24: ,
 2429,5: _SC_PRIORITIZED_IO
 2429,23: VARIABLE
 2429,23: ,
 2431,5: _SC_SYNCHRONIZED_IO
 2431,24: VARIABLE
 2431,24: ,
 2433,5: _SC_FSYNC
 2433,14: VARIABLE
 2433,14: ,
 2435,5: _SC_MAPPED_FILES
 2435,21: VARIABLE
 2435,21: ,
 2437,5: _SC_MEMLOCK
 2437,16: VARIABLE
 2437,16: ,
 2439,5: _SC_MEMLOCK_RANGE
 2439,22: VARIABLE
 2439,22: ,
 2441,5: _SC_MEMORY_PROTECTION
 2441,26: VARIABLE
 2441,26: ,
 2443,5: _SC_MESSAGE_PASSING
 2443,24: VARIABLE
 2443,24: ,
 2445,5: _SC_SEMAPHORES
 2445,19: VARIABLE
 2445,19: ,
 2447,5: _SC_SHARED_MEMORY_OBJECTS
 2447,30: VARIABLE
 2447,30: ,
 2449,5: _SC_AIO_LISTIO_MAX
 2449,23: VARIABLE
 2449,23: ,
 2451,5: _SC_AIO_MAX
 2451,16: VARIABLE
 2451,16: ,
 2453,5: _SC_AIO_PRIO_DELTA_MAX
 2453,27: VARIABLE
 2453,27: ,
 2455,5: _SC_DELAYTIMER_MAX
 2455,23: VARIABLE
 2455,23: ,
 2457,5: _SC_MQ_OPEN_MAX
 2457,20: VARIABLE
 2457,20: ,
 2459,5: _SC_MQ_PRIO_MAX
 2459,20: VARIABLE
 2459,20: ,
 2461,5: _SC_VERSION
 2461,16: VARIABLE
 2461,16: ,
 2463,5: _SC_PAGESIZE
 2463,17: VARIABLE
 2463,17: ,
 2466,5: _SC_RTSIG_MAX
 2466,18: VARIABLE
 2466,18: ,
 2468,5: _SC_SEM_NSEMS_MAX
 2468,22: VARIABLE
 2468,22: ,
 2470,5: _SC_SEM_VALUE_MAX
 2470,22: VARIABLE
 2470,22: ,
 2472,5: _SC_SIGQUEUE_MAX
 2472,21: VARIABLE
 2472,21: ,
 2474,5: _SC_TIMER_MAX
 2474,18: VARIABLE
 2474,18: ,
 2479,5: _SC_BC_BASE_MAX
 2479,20: VARIABLE
 2479,20: ,
 2481,5: _SC_BC_DIM_MAX
 2481,19: VARIABLE
 2481,19: ,
 2483,5: _SC_BC_SCALE_MAX
 2483,21: VARIABLE
 2483,21: ,
 2485,5: _SC_BC_STRING_MAX
 2485,22: VARIABLE
 2485,22: ,
 2487,5: _SC_COLL_WEIGHTS_MAX
 2487,25: VARIABLE
 2487,25: ,
 2489,5: _SC_EQUIV_CLASS_MAX
 2489,24: VARIABLE
 2489,24: ,
 2491,5: _SC_EXPR_NEST_MAX
 2491,22: VARIABLE
 2491,22: ,
 2493,5: _SC_LINE_MAX
 2493,17: VARIABLE
 2493,17: ,
 2495,5: _SC_RE_DUP_MAX
 2495,19: VARIABLE
 2495,19: ,
 2497,5: _SC_CHARCLASS_NAME_MAX
 2497,27: VARIABLE
 2497,27: ,
 2500,5: _SC_2_VERSION
 2500,18: VARIABLE
 2500,18: ,
 2502,5: _SC_2_C_BIND
 2502,17: VARIABLE
 2502,17: ,
 2504,5: _SC_2_C_DEV
 2504,16: VARIABLE
 2504,16: ,
 2506,5: _SC_2_FORT_DEV
 2506,19: VARIABLE
 2506,19: ,
 2508,5: _SC_2_FORT_RUN
 2508,19: VARIABLE
 2508,19: ,
 2510,5: _SC_2_SW_DEV
 2510,17: VARIABLE
 2510,17: ,
 2512,5: _SC_2_LOCALEDEF
 2512,20: VARIABLE
 2512,20: ,
 2515,5: _SC_PII
 2515,12: VARIABLE
 2515,12: ,
 2517,5: _SC_PII_XTI
 2517,16: VARIABLE
 2517,16: ,
 2519,5: _SC_PII_SOCKET
 2519,19: VARIABLE
 2519,19: ,
 2521,5: _SC_PII_INTERNET
 2521,21: VARIABLE
 2521,21: ,
 2523,5: _SC_PII_OSI
 2523,16: VARIABLE
 2523,16: ,
 2525,5: _SC_POLL
 2525,13: VARIABLE
 2525,13: ,
 2527,5: _SC_SELECT
 2527,15: VARIABLE
 2527,15: ,
 2529,5: _SC_UIO_MAXIOV
 2529,19: VARIABLE
 2529,19: ,
 2531,5: _SC_IOV_MAX
 2531,16: VARIABLE
 2531,17: =
 2531,19: _SC_UIO_MAXIOV
 2531,33: VARIABLE
 2531,33: ,
 2533,5: _SC_PII_INTERNET_STREAM
 2533,28: VARIABLE
 2533,28: ,
 2535,5: _SC_PII_INTERNET_DGRAM
 2535,27: VARIABLE
 2535,27: ,
 2537,5: _SC_PII_OSI_COTS
 2537,21: VARIABLE
 2537,21: ,
 2539,5: _SC_PII_OSI_CLTS
 2539,21: VARIABLE
 2539,21: ,
 2541,5: _SC_PII_OSI_M
 2541,18: VARIABLE
 2541,18: ,
 2543,5: _SC_T_IOV_MAX
 2543,18: VARIABLE
 2543,18: ,
 2547,5: _SC_THREADS
 2547,16: VARIABLE
 2547,16: ,
 2549,5: _SC_THREAD_SAFE_FUNCTIONS
 2549,30: VARIABLE
 2549,30: ,
 2551,5: _SC_GETGR_R_SIZE_MAX
 2551,25: VARIABLE
 2551,25: ,
 2553,5: _SC_GETPW_R_SIZE_MAX
 2553,25: VARIABLE
 2553,25: ,
 2555,5: _SC_LOGIN_NAME_MAX
 2555,23: VARIABLE
 2555,23: ,
 2557,5: _SC_TTY_NAME_MAX
 2557,21: VARIABLE
 2557,21: ,
 2559,5: _SC_THREAD_DESTRUCTOR_ITERATIONS
 2559,37: VARIABLE
 2559,37: ,
 2561,5: _SC_THREAD_KEYS_MAX
 2561,24: VARIABLE
 2561,24: ,
 2563,5: _SC_THREAD_STACK_MIN
 2563,25: VARIABLE
 2563,25: ,
 2565,5: _SC_THREAD_THREADS_MAX
 2565,27: VARIABLE
 2565,27: ,
 2567,5: _SC_THREAD_ATTR_STACKADDR
 2567,30: VARIABLE
 2567,30: ,
 2569,5: _SC_THREAD_ATTR_STACKSIZE
 2569,30: VARIABLE
 2569,30: ,
 2571,5: _SC_THREAD_PRIORITY_SCHEDULING
 2571,35: VARIABLE
 2571,35: ,
 2573,5: _SC_THREAD_PRIO_INHERIT
 2573,28: VARIABLE
 2573,28: ,
 2575,5: _SC_THREAD_PRIO_PROTECT
 2575,28: VARIABLE
 2575,28: ,
 2577,5: _SC_THREAD_PROCESS_SHARED
 2577,30: VARIABLE
 2577,30: ,
 2580,5: _SC_NPROCESSORS_CONF
 2580,25: VARIABLE
 2580,25: ,
 2582,5: _SC_NPROCESSORS_ONLN
 2582,25: VARIABLE
 2582,25: ,
 2584,5: _SC_PHYS_PAGES
 2584,19: VARIABLE
 2584,19: ,
 2586,5: _SC_AVPHYS_PAGES
 2586,21: VARIABLE
 2586,21: ,
 2588,5: _SC_ATEXIT_MAX
 2588,19: VARIABLE
 2588,19: ,
 2590,5: _SC_PASS_MAX
 2590,17: VARIABLE
 2590,17: ,
 2593,5: _SC_XOPEN_VERSION
 2593,22: VARIABLE
 2593,22: ,
 2595,5: _SC_XOPEN_XCU_VERSION
 2595,26: VARIABLE
 2595,26: ,
 2597,5: _SC_XOPEN_UNIX
 2597,19: VARIABLE
 2597,19: ,
 2599,5: _SC_XOPEN_CRYPT
 2599,20: VARIABLE
 2599,20: ,
 2601,5: _SC_XOPEN_ENH_I18N
 2601,23: VARIABLE
 2601,23: ,
 2603,5: _SC_XOPEN_SHM
 2603,18: VARIABLE
 2603,18: ,
 2606,5: _SC_2_CHAR_TERM
 2606,20: VARIABLE
 2606,20: ,
 2608,5: _SC_2_C_VERSION
 2608,20: VARIABLE
 2608,20: ,
 2610,5: _SC_2_UPE
 2610,14: VARIABLE
 2610,14: ,
 2613,5: _SC_XOPEN_XPG2
 2613,19: VARIABLE
 2613,19: ,
 2615,5: _SC_XOPEN_XPG3
 2615,19: VARIABLE
 2615,19: ,
 2617,5: _SC_XOPEN_XPG4
 2617,19: VARIABLE
 2617,19: ,
 2620,5: _SC_CHAR_BIT
 2620,17: VARIABLE
 2620,17: ,
 2622,5: _SC_CHAR_MAX
 2622,17: VARIABLE
 2622,17: ,
 2624,5: _SC_CHAR_MIN
 2624,17: VARIABLE
 2624,17: ,
 2626,5: _SC_INT_MAX
 2626,16: VARIABLE
 2626,16: ,
 2628,5: _SC_INT_MIN
 2628,16: VARIABLE
 2628,16: ,
 2630,5: _SC_LONG_BIT
 2630,17: VARIABLE
 2630,17: ,
 2632,5: _SC_WORD_BIT
 2632,17: VARIABLE
 2632,17: ,
 2634,5: _SC_MB_LEN_MAX
 2634,19: VARIABLE
 2634,19: ,
 2636,5: _SC_NZERO
 2636,14: VARIABLE
 2636,14: ,
 2638,5: _SC_SSIZE_MAX
 2638,18: VARIABLE
 2638,18: ,
 2640,5: _SC_SCHAR_MAX
 2640,18: VARIABLE
 2640,18: ,
 2642,5: _SC_SCHAR_MIN
 2642,18: VARIABLE
 2642,18: ,
 2644,5: _SC_SHRT_MAX
 2644,17: VARIABLE
 2644,17: ,
 2646,5: _SC_SHRT_MIN
 2646,17: VARIABLE
 2646,17: ,
 2648,5: _SC_UCHAR_MAX
 2648,18: VARIABLE
 2648,18: ,
 2650,5: _SC_UINT_MAX
 2650,17: VARIABLE
 2650,17: ,
 2652,5: _SC_ULONG_MAX
 2652,18: VARIABLE
 2652,18: ,
 2654,5: _SC_USHRT_MAX
 2654,18: VARIABLE
 2654,18: ,
 2657,5: _SC_NL_ARGMAX
 2657,18: VARIABLE
 2657,18: ,
 2659,5: _SC_NL_LANGMAX
 2659,19: VARIABLE
 2659,19: ,
 2661,5: _SC_NL_MSGMAX
 2661,18: VARIABLE
 2661,18: ,
 2663,5: _SC_NL_NMAX
 2663,16: VARIABLE
 2663,16: ,
 2665,5: _SC_NL_SETMAX
 2665,18: VARIABLE
 2665,18: ,
 2667,5: _SC_NL_TEXTMAX
 2667,19: VARIABLE
 2667,19: ,
 2670,5: _SC_XBS5_ILP32_OFF32
 2670,25: VARIABLE
 2670,25: ,
 2672,5: _SC_XBS5_ILP32_OFFBIG
 2672,26: VARIABLE
 2672,26: ,
 2674,5: _SC_XBS5_LP64_OFF64
 2674,24: VARIABLE
 2674,24: ,
 2676,5: _SC_XBS5_LPBIG_OFFBIG
 2676,26: VARIABLE
 2676,26: ,
 2679,5: _SC_XOPEN_LEGACY
 2679,21: VARIABLE
 2679,21: ,
 2681,5: _SC_XOPEN_REALTIME
 2681,23: VARIABLE
 2681,23: ,
 2683,5: _SC_XOPEN_REALTIME_THREADS
 2683,31: VARIABLE
 2683,31: ,
 2686,5: _SC_ADVISORY_INFO
 2686,22: VARIABLE
 2686,22: ,
 2688,5: _SC_BARRIERS
 2688,17: VARIABLE
 2688,17: ,
 2690,5: _SC_BASE
 2690,13: VARIABLE
 2690,13: ,
 2692,5: _SC_C_LANG_SUPPORT
 2692,23: VARIABLE
 2692,23: ,
 2694,5: _SC_C_LANG_SUPPORT_R
 2694,25: VARIABLE
 2694,25: ,
 2696,5: _SC_CLOCK_SELECTION
 2696,24: VARIABLE
 2696,24: ,
 2698,5: _SC_CPUTIME
 2698,16: VARIABLE
 2698,16: ,
 2700,5: _SC_THREAD_CPUTIME
 2700,23: VARIABLE
 2700,23: ,
 2702,5: _SC_DEVICE_IO
 2702,18: VARIABLE
 2702,18: ,
 2704,5: _SC_DEVICE_SPECIFIC
 2704,24: VARIABLE
 2704,24: ,
 2706,5: _SC_DEVICE_SPECIFIC_R
 2706,26: VARIABLE
 2706,26: ,
 2708,5: _SC_FD_MGMT
 2708,16: VARIABLE
 2708,16: ,
 2710,5: _SC_FIFO
 2710,13: VARIABLE
 2710,13: ,
 2712,5: _SC_PIPE
 2712,13: VARIABLE
 2712,13: ,
 2714,5: _SC_FILE_ATTRIBUTES
 2714,24: VARIABLE
 2714,24: ,
 2716,5: _SC_FILE_LOCKING
 2716,21: VARIABLE
 2716,21: ,
 2718,5: _SC_FILE_SYSTEM
 2718,20: VARIABLE
 2718,20: ,
 2720,5: _SC_MONOTONIC_CLOCK
 2720,24: VARIABLE
 2720,24: ,
 2722,5: _SC_MULTI_PROCESS
 2722,22: VARIABLE
 2722,22: ,
 2724,5: _SC_SINGLE_PROCESS
 2724,23: VARIABLE
 2724,23: ,
 2726,5: _SC_NETWORKING
 2726,19: VARIABLE
 2726,19: ,
 2728,5: _SC_READER_WRITER_LOCKS
 2728,28: VARIABLE
 2728,28: ,
 2730,5: _SC_SPIN_LOCKS
 2730,19: VARIABLE
 2730,19: ,
 2732,5: _SC_REGEXP
 2732,15: VARIABLE
 2732,15: ,
 2734,5: _SC_REGEX_VERSION
 2734,22: VARIABLE
 2734,22: ,
 2736,5: _SC_SHELL
 2736,14: VARIABLE
 2736,14: ,
 2738,5: _SC_SIGNALS
 2738,16: VARIABLE
 2738,16: ,
 2740,5: _SC_SPAWN
 2740,14: VARIABLE
 2740,14: ,
 2742,5: _SC_SPORADIC_SERVER
 2742,24: VARIABLE
 2742,24: ,
 2744,5: _SC_THREAD_SPORADIC_SERVER
 2744,31: VARIABLE
 2744,31: ,
 2746,5: _SC_SYSTEM_DATABASE
 2746,24: VARIABLE
 2746,24: ,
 2748,5: _SC_SYSTEM_DATABASE_R
 2748,26: VARIABLE
 2748,26: ,
 2750,5: _SC_TIMEOUTS
 2750,17: VARIABLE
 2750,17: ,
 2752,5: _SC_TYPED_MEMORY_OBJECTS
 2752,29: VARIABLE
 2752,29: ,
 2754,5: _SC_USER_GROUPS
 2754,20: VARIABLE
 2754,20: ,
 2756,5: _SC_USER_GROUPS_R
 2756,22: VARIABLE
 2756,22: ,
 2758,5: _SC_2_PBS
 2758,14: VARIABLE
 2758,14: ,
 2760,5: _SC_2_PBS_ACCOUNTING
 2760,25: VARIABLE
 2760,25: ,
 2762,5: _SC_2_PBS_LOCATE
 2762,21: VARIABLE
 2762,21: ,
 2764,5: _SC_2_PBS_MESSAGE
 2764,22: VARIABLE
 2764,22: ,
 2766,5: _SC_2_PBS_TRACK
 2766,20: VARIABLE
 2766,20: ,
 2768,5: _SC_SYMLOOP_MAX
 2768,20: VARIABLE
 2768,20: ,
 2770,5: _SC_STREAMS
 2770,16: VARIABLE
 2770,16: ,
 2772,5: _SC_2_PBS_CHECKPOINT
 2772,25: VARIABLE
 2772,25: ,
 2775,5: _SC_V6_ILP32_OFF32
 2775,23: VARIABLE
 2775,23: ,
 2777,5: _SC_V6_ILP32_OFFBIG
 2777,24: VARIABLE
 2777,24: ,
 2779,5: _SC_V6_LP64_OFF64
 2779,22: VARIABLE
 2779,22: ,
 2781,5: _SC_V6_LPBIG_OFFBIG
 2781,24: VARIABLE
 2781,24: ,
 2784,5: _SC_HOST_NAME_MAX
 2784,22: VARIABLE
 2784,22: ,
 2786,5: _SC_TRACE
 2786,14: VARIABLE
 2786,14: ,
 2788,5: _SC_TRACE_EVENT_FILTER
 2788,27: VARIABLE
 2788,27: ,
 2790,5: _SC_TRACE_INHERIT
 2790,22: VARIABLE
 2790,22: ,
 2792,5: _SC_TRACE_LOG
 2792,18: VARIABLE
 2792,18: ,
 2795,5: _SC_LEVEL1_ICACHE_SIZE
 2795,27: VARIABLE
 2795,27: ,
 2797,5: _SC_LEVEL1_ICACHE_ASSOC
 2797,28: VARIABLE
 2797,28: ,
 2799,5: _SC_LEVEL1_ICACHE_LINESIZE
 2799,31: VARIABLE
 2799,31: ,
 2801,5: _SC_LEVEL1_DCACHE_SIZE
 2801,27: VARIABLE
 2801,27: ,
 2803,5: _SC_LEVEL1_DCACHE_ASSOC
 2803,28: VARIABLE
 2803,28: ,
 2805,5: _SC_LEVEL1_DCACHE_LINESIZE
 2805,31: VARIABLE
 2805,31: ,
 2807,5: _SC_LEVEL2_CACHE_SIZE
 2807,26: VARIABLE
 2807,26: ,
 2809,5: _SC_LEVEL2_CACHE_ASSOC
 2809,27: VARIABLE
 2809,27: ,
 2811,5: _SC_LEVEL2_CACHE_LINESIZE
 2811,30: VARIABLE
 2811,30: ,
 2813,5: _SC_LEVEL3_CACHE_SIZE
 2813,26: VARIABLE
 2813,26: ,
 2815,5: _SC_LEVEL3_CACHE_ASSOC
 2815,27: VARIABLE
 2815,27: ,
 2817,5: _SC_LEVEL3_CACHE_LINESIZE
 2817,30: VARIABLE
 2817,30: ,
 2819,5: _SC_LEVEL4_CACHE_SIZE
 2819,26: VARIABLE
 2819,26: ,
 2821,5: _SC_LEVEL4_CACHE_ASSOC
 2821,27: VARIABLE
 2821,27: ,
 2823,5: _SC_LEVEL4_CACHE_LINESIZE
 2823,30: VARIABLE
 2823,30: ,
 2827,5: _SC_IPV6
 2827,13: VARIABLE
 2827,14: =
 2827,16: _SC_LEVEL1_ICACHE_SIZE
 2827,38: VARIABLE
 2827,39: +
 2827,41: 50
 2827,43: ,
 2829,5: _SC_RAW_SOCKETS
 2829,20: VARIABLE
 2829,20: ,
 2832,5: _SC_V7_ILP32_OFF32
 2832,23: VARIABLE
 2832,23: ,
 2834,5: _SC_V7_ILP32_OFFBIG
 2834,24: VARIABLE
 2834,24: ,
 2836,5: _SC_V7_LP64_OFF64
 2836,22: VARIABLE
 2836,22: ,
 2838,5: _SC_V7_LPBIG_OFFBIG
 2838,24: VARIABLE
 2838,24: ,
 2841,5: _SC_SS_REPL_MAX
 2841,20: VARIABLE
 2841,20: ,
 2844,5: _SC_TRACE_EVENT_NAME_MAX
 2844,29: VARIABLE
 2844,29: ,
 2846,5: _SC_TRACE_NAME_MAX
 2846,23: VARIABLE
 2846,23: ,
 2848,5: _SC_TRACE_SYS_MAX
 2848,22: VARIABLE
 2848,22: ,
 2850,5: _SC_TRACE_USER_EVENT_MAX
 2850,29: VARIABLE
 2850,29: ,
 2853,5: _SC_XOPEN_STREAMS
 2853,22: VARIABLE
 2853,22: ,
 2856,5: _SC_THREAD_ROBUST_PRIO_INHERIT
 2856,35: VARIABLE
 2856,35: ,
 2858,5: _SC_THREAD_ROBUST_PRIO_PROTECT
 2858,35: VARIABLE
 2858,35: ,
 2861,5: _SC_MINSIGSTKSZ
 2861,20: VARIABLE
 2861,20: ,
 2864,5: _SC_SIGSTKSZ
 2864,17: VARIABLE
 2866,3: }
 
131 NAME VARIABLE 
 2403,5: _SC_ARG_MAX
 2403,16: VARIABLE
 
65 VARIABLE 
 2403,16: VARIABLE
 
204 , enumerator 
 2403,16: ,
 2405,5: _SC_CHILD_MAX
 2405,18: VARIABLE
 
340 NAME VARIABLE 
 2405,5: _SC_CHILD_MAX
 2405,18: VARIABLE
 
65 VARIABLE 
 2405,18: VARIABLE
 
204 , enumerator 
 2405,18: ,
 2407,5: _SC_CLK_TCK
 2407,16: VARIABLE
 
340 NAME VARIABLE 
 2407,5: _SC_CLK_TCK
 2407,16: VARIABLE
 
65 VARIABLE 
 2407,16: VARIABLE
 
204 , enumerator 
 2407,16: ,
 2409,5: _SC_NGROUPS_MAX
 2409,20: VARIABLE
 
340 NAME VARIABLE 
 2409,5: _SC_NGROUPS_MAX
 2409,20: VARIABLE
 
65 VARIABLE 
 2409,20: VARIABLE
 
204 , enumerator 
 2409,20: ,
 2411,5: _SC_OPEN_MAX
 2411,17: VARIABLE
 
340 NAME VARIABLE 
 2411,5: _SC_OPEN_MAX
 2411,17: VARIABLE
 
65 VARIABLE 
 2411,17: VARIABLE
 
204 , enumerator 
 2411,17: ,
 2413,5: _SC_STREAM_MAX
 2413,19: VARIABLE
 
340 NAME VARIABLE 
 2413,5: _SC_STREAM_MAX
 2413,19: VARIABLE
 
65 VARIABLE 
 2413,19: VARIABLE
 
204 , enumerator 
 2413,19: ,
 2415,5: _SC_TZNAME_MAX
 2415,19: VARIABLE
 
340 NAME VARIABLE 
 2415,5: _SC_TZNAME_MAX
 2415,19: VARIABLE
 
65 VARIABLE 
 2415,19: VARIABLE
 
204 , enumerator 
 2415,19: ,
 2417,5: _SC_JOB_CONTROL
 2417,20: VARIABLE
 
340 NAME VARIABLE 
 2417,5: _SC_JOB_CONTROL
 2417,20: VARIABLE
 
65 VARIABLE 
 2417,20: VARIABLE
 
204 , enumerator 
 2417,20: ,
 2419,5: _SC_SAVED_IDS
 2419,18: VARIABLE
 
340 NAME VARIABLE 
 2419,5: _SC_SAVED_IDS
 2419,18: VARIABLE
 
65 VARIABLE 
 2419,18: VARIABLE
 
204 , enumerator 
 2419,18: ,
 2421,5: _SC_REALTIME_SIGNALS
 2421,25: VARIABLE
 
340 NAME VARIABLE 
 2421,5: _SC_REALTIME_SIGNALS
 2421,25: VARIABLE
 
65 VARIABLE 
 2421,25: VARIABLE
 
204 , enumerator 
 2421,25: ,
 2423,5: _SC_PRIORITY_SCHEDULING
 2423,28: VARIABLE
 
340 NAME VARIABLE 
 2423,5: _SC_PRIORITY_SCHEDULING
 2423,28: VARIABLE
 
65 VARIABLE 
 2423,28: VARIABLE
 
204 , enumerator 
 2423,28: ,
 2425,5: _SC_TIMERS
 2425,15: VARIABLE
 
340 NAME VARIABLE 
 2425,5: _SC_TIMERS
 2425,15: VARIABLE
 
65 VARIABLE 
 2425,15: VARIABLE
 
204 , enumerator 
 2425,15: ,
 2427,5: _SC_ASYNCHRONOUS_IO
 2427,24: VARIABLE
 
340 NAME VARIABLE 
 2427,5: _SC_ASYNCHRONOUS_IO
 2427,24: VARIABLE
 
65 VARIABLE 
 2427,24: VARIABLE
 
204 , enumerator 
 2427,24: ,
 2429,5: _SC_PRIORITIZED_IO
 2429,23: VARIABLE
 
340 NAME VARIABLE 
 2429,5: _SC_PRIORITIZED_IO
 2429,23: VARIABLE
 
65 VARIABLE 
 2429,23: VARIABLE
 
204 , enumerator 
 2429,23: ,
 2431,5: _SC_SYNCHRONIZED_IO
 2431,24: VARIABLE
 
340 NAME VARIABLE 
 2431,5: _SC_SYNCHRONIZED_IO
 2431,24: VARIABLE
 
65 VARIABLE 
 2431,24: VARIABLE
 
204 , enumerator 
 2431,24: ,
 2433,5: _SC_FSYNC
 2433,14: VARIABLE
 
340 NAME VARIABLE 
 2433,5: _SC_FSYNC
 2433,14: VARIABLE
 
65 VARIABLE 
 2433,14: VARIABLE
 
204 , enumerator 
 2433,14: ,
 2435,5: _SC_MAPPED_FILES
 2435,21: VARIABLE
 
340 NAME VARIABLE 
 2435,5: _SC_MAPPED_FILES
 2435,21: VARIABLE
 
65 VARIABLE 
 2435,21: VARIABLE
 
204 , enumerator 
 2435,21: ,
 2437,5: _SC_MEMLOCK
 2437,16: VARIABLE
 
340 NAME VARIABLE 
 2437,5: _SC_MEMLOCK
 2437,16: VARIABLE
 
65 VARIABLE 
 2437,16: VARIABLE
 
204 , enumerator 
 2437,16: ,
 2439,5: _SC_MEMLOCK_RANGE
 2439,22: VARIABLE
 
340 NAME VARIABLE 
 2439,5: _SC_MEMLOCK_RANGE
 2439,22: VARIABLE
 
65 VARIABLE 
 2439,22: VARIABLE
 
204 , enumerator 
 2439,22: ,
 2441,5: _SC_MEMORY_PROTECTION
 2441,26: VARIABLE
 
340 NAME VARIABLE 
 2441,5: _SC_MEMORY_PROTECTION
 2441,26: VARIABLE
 
65 VARIABLE 
 2441,26: VARIABLE
 
204 , enumerator 
 2441,26: ,
 2443,5: _SC_MESSAGE_PASSING
 2443,24: VARIABLE
 
340 NAME VARIABLE 
 2443,5: _SC_MESSAGE_PASSING
 2443,24: VARIABLE
 
65 VARIABLE 
 2443,24: VARIABLE
 
204 , enumerator 
 2443,24: ,
 2445,5: _SC_SEMAPHORES
 2445,19: VARIABLE
 
340 NAME VARIABLE 
 2445,5: _SC_SEMAPHORES
 2445,19: VARIABLE
 
65 VARIABLE 
 2445,19: VARIABLE
 
204 , enumerator 
 2445,19: ,
 2447,5: _SC_SHARED_MEMORY_OBJECTS
 2447,30: VARIABLE
 
340 NAME VARIABLE 
 2447,5: _SC_SHARED_MEMORY_OBJECTS
 2447,30: VARIABLE
 
65 VARIABLE 
 2447,30: VARIABLE
 
204 , enumerator 
 2447,30: ,
 2449,5: _SC_AIO_LISTIO_MAX
 2449,23: VARIABLE
 
340 NAME VARIABLE 
 2449,5: _SC_AIO_LISTIO_MAX
 2449,23: VARIABLE
 
65 VARIABLE 
 2449,23: VARIABLE
 
204 , enumerator 
 2449,23: ,
 2451,5: _SC_AIO_MAX
 2451,16: VARIABLE
 
340 NAME VARIABLE 
 2451,5: _SC_AIO_MAX
 2451,16: VARIABLE
 
65 VARIABLE 
 2451,16: VARIABLE
 
204 , enumerator 
 2451,16: ,
 2453,5: _SC_AIO_PRIO_DELTA_MAX
 2453,27: VARIABLE
 
340 NAME VARIABLE 
 2453,5: _SC_AIO_PRIO_DELTA_MAX
 2453,27: VARIABLE
 
65 VARIABLE 
 2453,27: VARIABLE
 
204 , enumerator 
 2453,27: ,
 2455,5: _SC_DELAYTIMER_MAX
 2455,23: VARIABLE
 
340 NAME VARIABLE 
 2455,5: _SC_DELAYTIMER_MAX
 2455,23: VARIABLE
 
65 VARIABLE 
 2455,23: VARIABLE
 
204 , enumerator 
 2455,23: ,
 2457,5: _SC_MQ_OPEN_MAX
 2457,20: VARIABLE
 
340 NAME VARIABLE 
 2457,5: _SC_MQ_OPEN_MAX
 2457,20: VARIABLE
 
65 VARIABLE 
 2457,20: VARIABLE
 
204 , enumerator 
 2457,20: ,
 2459,5: _SC_MQ_PRIO_MAX
 2459,20: VARIABLE
 
340 NAME VARIABLE 
 2459,5: _SC_MQ_PRIO_MAX
 2459,20: VARIABLE
 
65 VARIABLE 
 2459,20: VARIABLE
 
204 , enumerator 
 2459,20: ,
 2461,5: _SC_VERSION
 2461,16: VARIABLE
 
340 NAME VARIABLE 
 2461,5: _SC_VERSION
 2461,16: VARIABLE
 
65 VARIABLE 
 2461,16: VARIABLE
 
204 , enumerator 
 2461,16: ,
 2463,5: _SC_PAGESIZE
 2463,17: VARIABLE
 
340 NAME VARIABLE 
 2463,5: _SC_PAGESIZE
 2463,17: VARIABLE
 
65 VARIABLE 
 2463,17: VARIABLE
 
204 , enumerator 
 2463,17: ,
 2466,5: _SC_RTSIG_MAX
 2466,18: VARIABLE
 
340 NAME VARIABLE 
 2466,5: _SC_RTSIG_MAX
 2466,18: VARIABLE
 
65 VARIABLE 
 2466,18: VARIABLE
 
204 , enumerator 
 2466,18: ,
 2468,5: _SC_SEM_NSEMS_MAX
 2468,22: VARIABLE
 
340 NAME VARIABLE 
 2468,5: _SC_SEM_NSEMS_MAX
 2468,22: VARIABLE
 
65 VARIABLE 
 2468,22: VARIABLE
 
204 , enumerator 
 2468,22: ,
 2470,5: _SC_SEM_VALUE_MAX
 2470,22: VARIABLE
 
340 NAME VARIABLE 
 2470,5: _SC_SEM_VALUE_MAX
 2470,22: VARIABLE
 
65 VARIABLE 
 2470,22: VARIABLE
 
204 , enumerator 
 2470,22: ,
 2472,5: _SC_SIGQUEUE_MAX
 2472,21: VARIABLE
 
340 NAME VARIABLE 
 2472,5: _SC_SIGQUEUE_MAX
 2472,21: VARIABLE
 
65 VARIABLE 
 2472,21: VARIABLE
 
204 , enumerator 
 2472,21: ,
 2474,5: _SC_TIMER_MAX
 2474,18: VARIABLE
 
340 NAME VARIABLE 
 2474,5: _SC_TIMER_MAX
 2474,18: VARIABLE
 
65 VARIABLE 
 2474,18: VARIABLE
 
204 , enumerator 
 2474,18: ,
 2479,5: _SC_BC_BASE_MAX
 2479,20: VARIABLE
 
340 NAME VARIABLE 
 2479,5: _SC_BC_BASE_MAX
 2479,20: VARIABLE
 
65 VARIABLE 
 2479,20: VARIABLE
 
204 , enumerator 
 2479,20: ,
 2481,5: _SC_BC_DIM_MAX
 2481,19: VARIABLE
 
340 NAME VARIABLE 
 2481,5: _SC_BC_DIM_MAX
 2481,19: VARIABLE
 
65 VARIABLE 
 2481,19: VARIABLE
 
204 , enumerator 
 2481,19: ,
 2483,5: _SC_BC_SCALE_MAX
 2483,21: VARIABLE
 
340 NAME VARIABLE 
 2483,5: _SC_BC_SCALE_MAX
 2483,21: VARIABLE
 
65 VARIABLE 
 2483,21: VARIABLE
 
204 , enumerator 
 2483,21: ,
 2485,5: _SC_BC_STRING_MAX
 2485,22: VARIABLE
 
340 NAME VARIABLE 
 2485,5: _SC_BC_STRING_MAX
 2485,22: VARIABLE
 
65 VARIABLE 
 2485,22: VARIABLE
 
204 , enumerator 
 2485,22: ,
 2487,5: _SC_COLL_WEIGHTS_MAX
 2487,25: VARIABLE
 
340 NAME VARIABLE 
 2487,5: _SC_COLL_WEIGHTS_MAX
 2487,25: VARIABLE
 
65 VARIABLE 
 2487,25: VARIABLE
 
204 , enumerator 
 2487,25: ,
 2489,5: _SC_EQUIV_CLASS_MAX
 2489,24: VARIABLE
 
340 NAME VARIABLE 
 2489,5: _SC_EQUIV_CLASS_MAX
 2489,24: VARIABLE
 
65 VARIABLE 
 2489,24: VARIABLE
 
204 , enumerator 
 2489,24: ,
 2491,5: _SC_EXPR_NEST_MAX
 2491,22: VARIABLE
 
340 NAME VARIABLE 
 2491,5: _SC_EXPR_NEST_MAX
 2491,22: VARIABLE
 
65 VARIABLE 
 2491,22: VARIABLE
 
204 , enumerator 
 2491,22: ,
 2493,5: _SC_LINE_MAX
 2493,17: VARIABLE
 
340 NAME VARIABLE 
 2493,5: _SC_LINE_MAX
 2493,17: VARIABLE
 
65 VARIABLE 
 2493,17: VARIABLE
 
204 , enumerator 
 2493,17: ,
 2495,5: _SC_RE_DUP_MAX
 2495,19: VARIABLE
 
340 NAME VARIABLE 
 2495,5: _SC_RE_DUP_MAX
 2495,19: VARIABLE
 
65 VARIABLE 
 2495,19: VARIABLE
 
204 , enumerator 
 2495,19: ,
 2497,5: _SC_CHARCLASS_NAME_MAX
 2497,27: VARIABLE
 
340 NAME VARIABLE 
 2497,5: _SC_CHARCLASS_NAME_MAX
 2497,27: VARIABLE
 
65 VARIABLE 
 2497,27: VARIABLE
 
204 , enumerator 
 2497,27: ,
 2500,5: _SC_2_VERSION
 2500,18: VARIABLE
 
340 NAME VARIABLE 
 2500,5: _SC_2_VERSION
 2500,18: VARIABLE
 
65 VARIABLE 
 2500,18: VARIABLE
 
204 , enumerator 
 2500,18: ,
 2502,5: _SC_2_C_BIND
 2502,17: VARIABLE
 
340 NAME VARIABLE 
 2502,5: _SC_2_C_BIND
 2502,17: VARIABLE
 
65 VARIABLE 
 2502,17: VARIABLE
 
204 , enumerator 
 2502,17: ,
 2504,5: _SC_2_C_DEV
 2504,16: VARIABLE
 
340 NAME VARIABLE 
 2504,5: _SC_2_C_DEV
 2504,16: VARIABLE
 
65 VARIABLE 
 2504,16: VARIABLE
 
204 , enumerator 
 2504,16: ,
 2506,5: _SC_2_FORT_DEV
 2506,19: VARIABLE
 
340 NAME VARIABLE 
 2506,5: _SC_2_FORT_DEV
 2506,19: VARIABLE
 
65 VARIABLE 
 2506,19: VARIABLE
 
204 , enumerator 
 2506,19: ,
 2508,5: _SC_2_FORT_RUN
 2508,19: VARIABLE
 
340 NAME VARIABLE 
 2508,5: _SC_2_FORT_RUN
 2508,19: VARIABLE
 
65 VARIABLE 
 2508,19: VARIABLE
 
204 , enumerator 
 2508,19: ,
 2510,5: _SC_2_SW_DEV
 2510,17: VARIABLE
 
340 NAME VARIABLE 
 2510,5: _SC_2_SW_DEV
 2510,17: VARIABLE
 
65 VARIABLE 
 2510,17: VARIABLE
 
204 , enumerator 
 2510,17: ,
 2512,5: _SC_2_LOCALEDEF
 2512,20: VARIABLE
 
340 NAME VARIABLE 
 2512,5: _SC_2_LOCALEDEF
 2512,20: VARIABLE
 
65 VARIABLE 
 2512,20: VARIABLE
 
204 , enumerator 
 2512,20: ,
 2515,5: _SC_PII
 2515,12: VARIABLE
 
340 NAME VARIABLE 
 2515,5: _SC_PII
 2515,12: VARIABLE
 
65 VARIABLE 
 2515,12: VARIABLE
 
204 , enumerator 
 2515,12: ,
 2517,5: _SC_PII_XTI
 2517,16: VARIABLE
 
340 NAME VARIABLE 
 2517,5: _SC_PII_XTI
 2517,16: VARIABLE
 
65 VARIABLE 
 2517,16: VARIABLE
 
204 , enumerator 
 2517,16: ,
 2519,5: _SC_PII_SOCKET
 2519,19: VARIABLE
 
340 NAME VARIABLE 
 2519,5: _SC_PII_SOCKET
 2519,19: VARIABLE
 
65 VARIABLE 
 2519,19: VARIABLE
 
204 , enumerator 
 2519,19: ,
 2521,5: _SC_PII_INTERNET
 2521,21: VARIABLE
 
340 NAME VARIABLE 
 2521,5: _SC_PII_INTERNET
 2521,21: VARIABLE
 
65 VARIABLE 
 2521,21: VARIABLE
 
204 , enumerator 
 2521,21: ,
 2523,5: _SC_PII_OSI
 2523,16: VARIABLE
 
340 NAME VARIABLE 
 2523,5: _SC_PII_OSI
 2523,16: VARIABLE
 
65 VARIABLE 
 2523,16: VARIABLE
 
204 , enumerator 
 2523,16: ,
 2525,5: _SC_POLL
 2525,13: VARIABLE
 
340 NAME VARIABLE 
 2525,5: _SC_POLL
 2525,13: VARIABLE
 
65 VARIABLE 
 2525,13: VARIABLE
 
204 , enumerator 
 2525,13: ,
 2527,5: _SC_SELECT
 2527,15: VARIABLE
 
340 NAME VARIABLE 
 2527,5: _SC_SELECT
 2527,15: VARIABLE
 
65 VARIABLE 
 2527,15: VARIABLE
 
204 , enumerator 
 2527,15: ,
 2529,5: _SC_UIO_MAXIOV
 2529,19: VARIABLE
 
340 NAME VARIABLE 
 2529,5: _SC_UIO_MAXIOV
 2529,19: VARIABLE
 
65 VARIABLE 
 2529,19: VARIABLE
 
204 , enumerator 
 2529,19: ,
 2531,5: _SC_IOV_MAX
 2531,16: VARIABLE
 2531,17: =
 2531,19: _SC_UIO_MAXIOV
 2531,33: VARIABLE
 
340 NAME VARIABLE 
 2531,5: _SC_IOV_MAX
 2531,16: VARIABLE
 
65 VARIABLE 
 2531,16: VARIABLE
 
206 = constant_expression 
 2531,17: =
 2531,19: _SC_UIO_MAXIOV
 2531,33: VARIABLE
 
341 NAME VARIABLE 
 2531,19: _SC_UIO_MAXIOV
 2531,33: VARIABLE
 
179 VARIABLE 
 2531,33: VARIABLE
 
204 , enumerator 
 2531,33: ,
 2533,5: _SC_PII_INTERNET_STREAM
 2533,28: VARIABLE
 
340 NAME VARIABLE 
 2533,5: _SC_PII_INTERNET_STREAM
 2533,28: VARIABLE
 
65 VARIABLE 
 2533,28: VARIABLE
 
204 , enumerator 
 2533,28: ,
 2535,5: _SC_PII_INTERNET_DGRAM
 2535,27: VARIABLE
 
340 NAME VARIABLE 
 2535,5: _SC_PII_INTERNET_DGRAM
 2535,27: VARIABLE
 
65 VARIABLE 
 2535,27: VARIABLE
 
204 , enumerator 
 2535,27: ,
 2537,5: _SC_PII_OSI_COTS
 2537,21: VARIABLE
 
340 NAME VARIABLE 
 2537,5: _SC_PII_OSI_COTS
 2537,21: VARIABLE
 
65 VARIABLE 
 2537,21: VARIABLE
 
204 , enumerator 
 2537,21: ,
 2539,5: _SC_PII_OSI_CLTS
 2539,21: VARIABLE
 
340 NAME VARIABLE 
 2539,5: _SC_PII_OSI_CLTS
 2539,21: VARIABLE
 
65 VARIABLE 
 2539,21: VARIABLE
 
204 , enumerator 
 2539,21: ,
 2541,5: _SC_PII_OSI_M
 2541,18: VARIABLE
 
340 NAME VARIABLE 
 2541,5: _SC_PII_OSI_M
 2541,18: VARIABLE
 
65 VARIABLE 
 2541,18: VARIABLE
 
204 , enumerator 
 2541,18: ,
 2543,5: _SC_T_IOV_MAX
 2543,18: VARIABLE
 
340 NAME VARIABLE 
 2543,5: _SC_T_IOV_MAX
 2543,18: VARIABLE
 
65 VARIABLE 
 2543,18: VARIABLE
 
204 , enumerator 
 2543,18: ,
 2547,5: _SC_THREADS
 2547,16: VARIABLE
 
340 NAME VARIABLE 
 2547,5: _SC_THREADS
 2547,16: VARIABLE
 
65 VARIABLE 
 2547,16: VARIABLE
 
204 , enumerator 
 2547,16: ,
 2549,5: _SC_THREAD_SAFE_FUNCTIONS
 2549,30: VARIABLE
 
340 NAME VARIABLE 
 2549,5: _SC_THREAD_SAFE_FUNCTIONS
 2549,30: VARIABLE
 
65 VARIABLE 
 2549,30: VARIABLE
 
204 , enumerator 
 2549,30: ,
 2551,5: _SC_GETGR_R_SIZE_MAX
 2551,25: VARIABLE
 
340 NAME VARIABLE 
 2551,5: _SC_GETGR_R_SIZE_MAX
 2551,25: VARIABLE
 
65 VARIABLE 
 2551,25: VARIABLE
 
204 , enumerator 
 2551,25: ,
 2553,5: _SC_GETPW_R_SIZE_MAX
 2553,25: VARIABLE
 
340 NAME VARIABLE 
 2553,5: _SC_GETPW_R_SIZE_MAX
 2553,25: VARIABLE
 
65 VARIABLE 
 2553,25: VARIABLE
 
204 , enumerator 
 2553,25: ,
 2555,5: _SC_LOGIN_NAME_MAX
 2555,23: VARIABLE
 
340 NAME VARIABLE 
 2555,5: _SC_LOGIN_NAME_MAX
 2555,23: VARIABLE
 
65 VARIABLE 
 2555,23: VARIABLE
 
204 , enumerator 
 2555,23: ,
 2557,5: _SC_TTY_NAME_MAX
 2557,21: VARIABLE
 
340 NAME VARIABLE 
 2557,5: _SC_TTY_NAME_MAX
 2557,21: VARIABLE
 
65 VARIABLE 
 2557,21: VARIABLE
 
204 , enumerator 
 2557,21: ,
 2559,5: _SC_THREAD_DESTRUCTOR_ITERATIONS
 2559,37: VARIABLE
 
340 NAME VARIABLE 
 2559,5: _SC_THREAD_DESTRUCTOR_ITERATIONS
 2559,37: VARIABLE
 
65 VARIABLE 
 2559,37: VARIABLE
 
204 , enumerator 
 2559,37: ,
 2561,5: _SC_THREAD_KEYS_MAX
 2561,24: VARIABLE
 
340 NAME VARIABLE 
 2561,5: _SC_THREAD_KEYS_MAX
 2561,24: VARIABLE
 
65 VARIABLE 
 2561,24: VARIABLE
 
204 , enumerator 
 2561,24: ,
 2563,5: _SC_THREAD_STACK_MIN
 2563,25: VARIABLE
 
340 NAME VARIABLE 
 2563,5: _SC_THREAD_STACK_MIN
 2563,25: VARIABLE
 
65 VARIABLE 
 2563,25: VARIABLE
 
204 , enumerator 
 2563,25: ,
 2565,5: _SC_THREAD_THREADS_MAX
 2565,27: VARIABLE
 
340 NAME VARIABLE 
 2565,5: _SC_THREAD_THREADS_MAX
 2565,27: VARIABLE
 
65 VARIABLE 
 2565,27: VARIABLE
 
204 , enumerator 
 2565,27: ,
 2567,5: _SC_THREAD_ATTR_STACKADDR
 2567,30: VARIABLE
 
340 NAME VARIABLE 
 2567,5: _SC_THREAD_ATTR_STACKADDR
 2567,30: VARIABLE
 
65 VARIABLE 
 2567,30: VARIABLE
 
204 , enumerator 
 2567,30: ,
 2569,5: _SC_THREAD_ATTR_STACKSIZE
 2569,30: VARIABLE
 
340 NAME VARIABLE 
 2569,5: _SC_THREAD_ATTR_STACKSIZE
 2569,30: VARIABLE
 
65 VARIABLE 
 2569,30: VARIABLE
 
204 , enumerator 
 2569,30: ,
 2571,5: _SC_THREAD_PRIORITY_SCHEDULING
 2571,35: VARIABLE
 
340 NAME VARIABLE 
 2571,5: _SC_THREAD_PRIORITY_SCHEDULING
 2571,35: VARIABLE
 
65 VARIABLE 
 2571,35: VARIABLE
 
204 , enumerator 
 2571,35: ,
 2573,5: _SC_THREAD_PRIO_INHERIT
 2573,28: VARIABLE
 
340 NAME VARIABLE 
 2573,5: _SC_THREAD_PRIO_INHERIT
 2573,28: VARIABLE
 
65 VARIABLE 
 2573,28: VARIABLE
 
204 , enumerator 
 2573,28: ,
 2575,5: _SC_THREAD_PRIO_PROTECT
 2575,28: VARIABLE
 
340 NAME VARIABLE 
 2575,5: _SC_THREAD_PRIO_PROTECT
 2575,28: VARIABLE
 
65 VARIABLE 
 2575,28: VARIABLE
 
204 , enumerator 
 2575,28: ,
 2577,5: _SC_THREAD_PROCESS_SHARED
 2577,30: VARIABLE
 
340 NAME VARIABLE 
 2577,5: _SC_THREAD_PROCESS_SHARED
 2577,30: VARIABLE
 
65 VARIABLE 
 2577,30: VARIABLE
 
204 , enumerator 
 2577,30: ,
 2580,5: _SC_NPROCESSORS_CONF
 2580,25: VARIABLE
 
340 NAME VARIABLE 
 2580,5: _SC_NPROCESSORS_CONF
 2580,25: VARIABLE
 
65 VARIABLE 
 2580,25: VARIABLE
 
204 , enumerator 
 2580,25: ,
 2582,5: _SC_NPROCESSORS_ONLN
 2582,25: VARIABLE
 
340 NAME VARIABLE 
 2582,5: _SC_NPROCESSORS_ONLN
 2582,25: VARIABLE
 
65 VARIABLE 
 2582,25: VARIABLE
 
204 , enumerator 
 2582,25: ,
 2584,5: _SC_PHYS_PAGES
 2584,19: VARIABLE
 
340 NAME VARIABLE 
 2584,5: _SC_PHYS_PAGES
 2584,19: VARIABLE
 
65 VARIABLE 
 2584,19: VARIABLE
 
204 , enumerator 
 2584,19: ,
 2586,5: _SC_AVPHYS_PAGES
 2586,21: VARIABLE
 
340 NAME VARIABLE 
 2586,5: _SC_AVPHYS_PAGES
 2586,21: VARIABLE
 
65 VARIABLE 
 2586,21: VARIABLE
 
204 , enumerator 
 2586,21: ,
 2588,5: _SC_ATEXIT_MAX
 2588,19: VARIABLE
 
340 NAME VARIABLE 
 2588,5: _SC_ATEXIT_MAX
 2588,19: VARIABLE
 
65 VARIABLE 
 2588,19: VARIABLE
 
204 , enumerator 
 2588,19: ,
 2590,5: _SC_PASS_MAX
 2590,17: VARIABLE
 
340 NAME VARIABLE 
 2590,5: _SC_PASS_MAX
 2590,17: VARIABLE
 
65 VARIABLE 
 2590,17: VARIABLE
 
204 , enumerator 
 2590,17: ,
 2593,5: _SC_XOPEN_VERSION
 2593,22: VARIABLE
 
340 NAME VARIABLE 
 2593,5: _SC_XOPEN_VERSION
 2593,22: VARIABLE
 
65 VARIABLE 
 2593,22: VARIABLE
 
204 , enumerator 
 2593,22: ,
 2595,5: _SC_XOPEN_XCU_VERSION
 2595,26: VARIABLE
 
340 NAME VARIABLE 
 2595,5: _SC_XOPEN_XCU_VERSION
 2595,26: VARIABLE
 
65 VARIABLE 
 2595,26: VARIABLE
 
204 , enumerator 
 2595,26: ,
 2597,5: _SC_XOPEN_UNIX
 2597,19: VARIABLE
 
340 NAME VARIABLE 
 2597,5: _SC_XOPEN_UNIX
 2597,19: VARIABLE
 
65 VARIABLE 
 2597,19: VARIABLE
 
204 , enumerator 
 2597,19: ,
 2599,5: _SC_XOPEN_CRYPT
 2599,20: VARIABLE
 
340 NAME VARIABLE 
 2599,5: _SC_XOPEN_CRYPT
 2599,20: VARIABLE
 
65 VARIABLE 
 2599,20: VARIABLE
 
204 , enumerator 
 2599,20: ,
 2601,5: _SC_XOPEN_ENH_I18N
 2601,23: VARIABLE
 
340 NAME VARIABLE 
 2601,5: _SC_XOPEN_ENH_I18N
 2601,23: VARIABLE
 
65 VARIABLE 
 2601,23: VARIABLE
 
204 , enumerator 
 2601,23: ,
 2603,5: _SC_XOPEN_SHM
 2603,18: VARIABLE
 
340 NAME VARIABLE 
 2603,5: _SC_XOPEN_SHM
 2603,18: VARIABLE
 
65 VARIABLE 
 2603,18: VARIABLE
 
204 , enumerator 
 2603,18: ,
 2606,5: _SC_2_CHAR_TERM
 2606,20: VARIABLE
 
340 NAME VARIABLE 
 2606,5: _SC_2_CHAR_TERM
 2606,20: VARIABLE
 
65 VARIABLE 
 2606,20: VARIABLE
 
204 , enumerator 
 2606,20: ,
 2608,5: _SC_2_C_VERSION
 2608,20: VARIABLE
 
340 NAME VARIABLE 
 2608,5: _SC_2_C_VERSION
 2608,20: VARIABLE
 
65 VARIABLE 
 2608,20: VARIABLE
 
204 , enumerator 
 2608,20: ,
 2610,5: _SC_2_UPE
 2610,14: VARIABLE
 
340 NAME VARIABLE 
 2610,5: _SC_2_UPE
 2610,14: VARIABLE
 
65 VARIABLE 
 2610,14: VARIABLE
 
204 , enumerator 
 2610,14: ,
 2613,5: _SC_XOPEN_XPG2
 2613,19: VARIABLE
 
340 NAME VARIABLE 
 2613,5: _SC_XOPEN_XPG2
 2613,19: VARIABLE
 
65 VARIABLE 
 2613,19: VARIABLE
 
204 , enumerator 
 2613,19: ,
 2615,5: _SC_XOPEN_XPG3
 2615,19: VARIABLE
 
340 NAME VARIABLE 
 2615,5: _SC_XOPEN_XPG3
 2615,19: VARIABLE
 
65 VARIABLE 
 2615,19: VARIABLE
 
204 , enumerator 
 2615,19: ,
 2617,5: _SC_XOPEN_XPG4
 2617,19: VARIABLE
 
340 NAME VARIABLE 
 2617,5: _SC_XOPEN_XPG4
 2617,19: VARIABLE
 
65 VARIABLE 
 2617,19: VARIABLE
 
204 , enumerator 
 2617,19: ,
 2620,5: _SC_CHAR_BIT
 2620,17: VARIABLE
 
340 NAME VARIABLE 
 2620,5: _SC_CHAR_BIT
 2620,17: VARIABLE
 
65 VARIABLE 
 2620,17: VARIABLE
 
204 , enumerator 
 2620,17: ,
 2622,5: _SC_CHAR_MAX
 2622,17: VARIABLE
 
340 NAME VARIABLE 
 2622,5: _SC_CHAR_MAX
 2622,17: VARIABLE
 
65 VARIABLE 
 2622,17: VARIABLE
 
204 , enumerator 
 2622,17: ,
 2624,5: _SC_CHAR_MIN
 2624,17: VARIABLE
 
340 NAME VARIABLE 
 2624,5: _SC_CHAR_MIN
 2624,17: VARIABLE
 
65 VARIABLE 
 2624,17: VARIABLE
 
204 , enumerator 
 2624,17: ,
 2626,5: _SC_INT_MAX
 2626,16: VARIABLE
 
340 NAME VARIABLE 
 2626,5: _SC_INT_MAX
 2626,16: VARIABLE
 
65 VARIABLE 
 2626,16: VARIABLE
 
204 , enumerator 
 2626,16: ,
 2628,5: _SC_INT_MIN
 2628,16: VARIABLE
 
340 NAME VARIABLE 
 2628,5: _SC_INT_MIN
 2628,16: VARIABLE
 
65 VARIABLE 
 2628,16: VARIABLE
 
204 , enumerator 
 2628,16: ,
 2630,5: _SC_LONG_BIT
 2630,17: VARIABLE
 
340 NAME VARIABLE 
 2630,5: _SC_LONG_BIT
 2630,17: VARIABLE
 
65 VARIABLE 
 2630,17: VARIABLE
 
204 , enumerator 
 2630,17: ,
 2632,5: _SC_WORD_BIT
 2632,17: VARIABLE
 
340 NAME VARIABLE 
 2632,5: _SC_WORD_BIT
 2632,17: VARIABLE
 
65 VARIABLE 
 2632,17: VARIABLE
 
204 , enumerator 
 2632,17: ,
 2634,5: _SC_MB_LEN_MAX
 2634,19: VARIABLE
 
340 NAME VARIABLE 
 2634,5: _SC_MB_LEN_MAX
 2634,19: VARIABLE
 
65 VARIABLE 
 2634,19: VARIABLE
 
204 , enumerator 
 2634,19: ,
 2636,5: _SC_NZERO
 2636,14: VARIABLE
 
340 NAME VARIABLE 
 2636,5: _SC_NZERO
 2636,14: VARIABLE
 
65 VARIABLE 
 2636,14: VARIABLE
 
204 , enumerator 
 2636,14: ,
 2638,5: _SC_SSIZE_MAX
 2638,18: VARIABLE
 
340 NAME VARIABLE 
 2638,5: _SC_SSIZE_MAX
 2638,18: VARIABLE
 
65 VARIABLE 
 2638,18: VARIABLE
 
204 , enumerator 
 2638,18: ,
 2640,5: _SC_SCHAR_MAX
 2640,18: VARIABLE
 
340 NAME VARIABLE 
 2640,5: _SC_SCHAR_MAX
 2640,18: VARIABLE
 
65 VARIABLE 
 2640,18: VARIABLE
 
204 , enumerator 
 2640,18: ,
 2642,5: _SC_SCHAR_MIN
 2642,18: VARIABLE
 
340 NAME VARIABLE 
 2642,5: _SC_SCHAR_MIN
 2642,18: VARIABLE
 
65 VARIABLE 
 2642,18: VARIABLE
 
204 , enumerator 
 2642,18: ,
 2644,5: _SC_SHRT_MAX
 2644,17: VARIABLE
 
340 NAME VARIABLE 
 2644,5: _SC_SHRT_MAX
 2644,17: VARIABLE
 
65 VARIABLE 
 2644,17: VARIABLE
 
204 , enumerator 
 2644,17: ,
 2646,5: _SC_SHRT_MIN
 2646,17: VARIABLE
 
340 NAME VARIABLE 
 2646,5: _SC_SHRT_MIN
 2646,17: VARIABLE
 
65 VARIABLE 
 2646,17: VARIABLE
 
204 , enumerator 
 2646,17: ,
 2648,5: _SC_UCHAR_MAX
 2648,18: VARIABLE
 
340 NAME VARIABLE 
 2648,5: _SC_UCHAR_MAX
 2648,18: VARIABLE
 
65 VARIABLE 
 2648,18: VARIABLE
 
204 , enumerator 
 2648,18: ,
 2650,5: _SC_UINT_MAX
 2650,17: VARIABLE
 
340 NAME VARIABLE 
 2650,5: _SC_UINT_MAX
 2650,17: VARIABLE
 
65 VARIABLE 
 2650,17: VARIABLE
 
204 , enumerator 
 2650,17: ,
 2652,5: _SC_ULONG_MAX
 2652,18: VARIABLE
 
340 NAME VARIABLE 
 2652,5: _SC_ULONG_MAX
 2652,18: VARIABLE
 
65 VARIABLE 
 2652,18: VARIABLE
 
204 , enumerator 
 2652,18: ,
 2654,5: _SC_USHRT_MAX
 2654,18: VARIABLE
 
340 NAME VARIABLE 
 2654,5: _SC_USHRT_MAX
 2654,18: VARIABLE
 
65 VARIABLE 
 2654,18: VARIABLE
 
204 , enumerator 
 2654,18: ,
 2657,5: _SC_NL_ARGMAX
 2657,18: VARIABLE
 
340 NAME VARIABLE 
 2657,5: _SC_NL_ARGMAX
 2657,18: VARIABLE
 
65 VARIABLE 
 2657,18: VARIABLE
 
204 , enumerator 
 2657,18: ,
 2659,5: _SC_NL_LANGMAX
 2659,19: VARIABLE
 
340 NAME VARIABLE 
 2659,5: _SC_NL_LANGMAX
 2659,19: VARIABLE
 
65 VARIABLE 
 2659,19: VARIABLE
 
204 , enumerator 
 2659,19: ,
 2661,5: _SC_NL_MSGMAX
 2661,18: VARIABLE
 
340 NAME VARIABLE 
 2661,5: _SC_NL_MSGMAX
 2661,18: VARIABLE
 
65 VARIABLE 
 2661,18: VARIABLE
 
204 , enumerator 
 2661,18: ,
 2663,5: _SC_NL_NMAX
 2663,16: VARIABLE
 
340 NAME VARIABLE 
 2663,5: _SC_NL_NMAX
 2663,16: VARIABLE
 
65 VARIABLE 
 2663,16: VARIABLE
 
204 , enumerator 
 2663,16: ,
 2665,5: _SC_NL_SETMAX
 2665,18: VARIABLE
 
340 NAME VARIABLE 
 2665,5: _SC_NL_SETMAX
 2665,18: VARIABLE
 
65 VARIABLE 
 2665,18: VARIABLE
 
204 , enumerator 
 2665,18: ,
 2667,5: _SC_NL_TEXTMAX
 2667,19: VARIABLE
 
340 NAME VARIABLE 
 2667,5: _SC_NL_TEXTMAX
 2667,19: VARIABLE
 
65 VARIABLE 
 2667,19: VARIABLE
 
204 , enumerator 
 2667,19: ,
 2670,5: _SC_XBS5_ILP32_OFF32
 2670,25: VARIABLE
 
340 NAME VARIABLE 
 2670,5: _SC_XBS5_ILP32_OFF32
 2670,25: VARIABLE
 
65 VARIABLE 
 2670,25: VARIABLE
 
204 , enumerator 
 2670,25: ,
 2672,5: _SC_XBS5_ILP32_OFFBIG
 2672,26: VARIABLE
 
340 NAME VARIABLE 
 2672,5: _SC_XBS5_ILP32_OFFBIG
 2672,26: VARIABLE
 
65 VARIABLE 
 2672,26: VARIABLE
 
204 , enumerator 
 2672,26: ,
 2674,5: _SC_XBS5_LP64_OFF64
 2674,24: VARIABLE
 
340 NAME VARIABLE 
 2674,5: _SC_XBS5_LP64_OFF64
 2674,24: VARIABLE
 
65 VARIABLE 
 2674,24: VARIABLE
 
204 , enumerator 
 2674,24: ,
 2676,5: _SC_XBS5_LPBIG_OFFBIG
 2676,26: VARIABLE
 
340 NAME VARIABLE 
 2676,5: _SC_XBS5_LPBIG_OFFBIG
 2676,26: VARIABLE
 
65 VARIABLE 
 2676,26: VARIABLE
 
204 , enumerator 
 2676,26: ,
 2679,5: _SC_XOPEN_LEGACY
 2679,21: VARIABLE
 
340 NAME VARIABLE 
 2679,5: _SC_XOPEN_LEGACY
 2679,21: VARIABLE
 
65 VARIABLE 
 2679,21: VARIABLE
 
204 , enumerator 
 2679,21: ,
 2681,5: _SC_XOPEN_REALTIME
 2681,23: VARIABLE
 
340 NAME VARIABLE 
 2681,5: _SC_XOPEN_REALTIME
 2681,23: VARIABLE
 
65 VARIABLE 
 2681,23: VARIABLE
 
204 , enumerator 
 2681,23: ,
 2683,5: _SC_XOPEN_REALTIME_THREADS
 2683,31: VARIABLE
 
340 NAME VARIABLE 
 2683,5: _SC_XOPEN_REALTIME_THREADS
 2683,31: VARIABLE
 
65 VARIABLE 
 2683,31: VARIABLE
 
204 , enumerator 
 2683,31: ,
 2686,5: _SC_ADVISORY_INFO
 2686,22: VARIABLE
 
340 NAME VARIABLE 
 2686,5: _SC_ADVISORY_INFO
 2686,22: VARIABLE
 
65 VARIABLE 
 2686,22: VARIABLE
 
204 , enumerator 
 2686,22: ,
 2688,5: _SC_BARRIERS
 2688,17: VARIABLE
 
340 NAME VARIABLE 
 2688,5: _SC_BARRIERS
 2688,17: VARIABLE
 
65 VARIABLE 
 2688,17: VARIABLE
 
204 , enumerator 
 2688,17: ,
 2690,5: _SC_BASE
 2690,13: VARIABLE
 
340 NAME VARIABLE 
 2690,5: _SC_BASE
 2690,13: VARIABLE
 
65 VARIABLE 
 2690,13: VARIABLE
 
204 , enumerator 
 2690,13: ,
 2692,5: _SC_C_LANG_SUPPORT
 2692,23: VARIABLE
 
340 NAME VARIABLE 
 2692,5: _SC_C_LANG_SUPPORT
 2692,23: VARIABLE
 
65 VARIABLE 
 2692,23: VARIABLE
 
204 , enumerator 
 2692,23: ,
 2694,5: _SC_C_LANG_SUPPORT_R
 2694,25: VARIABLE
 
340 NAME VARIABLE 
 2694,5: _SC_C_LANG_SUPPORT_R
 2694,25: VARIABLE
 
65 VARIABLE 
 2694,25: VARIABLE
 
204 , enumerator 
 2694,25: ,
 2696,5: _SC_CLOCK_SELECTION
 2696,24: VARIABLE
 
340 NAME VARIABLE 
 2696,5: _SC_CLOCK_SELECTION
 2696,24: VARIABLE
 
65 VARIABLE 
 2696,24: VARIABLE
 
204 , enumerator 
 2696,24: ,
 2698,5: _SC_CPUTIME
 2698,16: VARIABLE
 
340 NAME VARIABLE 
 2698,5: _SC_CPUTIME
 2698,16: VARIABLE
 
65 VARIABLE 
 2698,16: VARIABLE
 
204 , enumerator 
 2698,16: ,
 2700,5: _SC_THREAD_CPUTIME
 2700,23: VARIABLE
 
340 NAME VARIABLE 
 2700,5: _SC_THREAD_CPUTIME
 2700,23: VARIABLE
 
65 VARIABLE 
 2700,23: VARIABLE
 
204 , enumerator 
 2700,23: ,
 2702,5: _SC_DEVICE_IO
 2702,18: VARIABLE
 
340 NAME VARIABLE 
 2702,5: _SC_DEVICE_IO
 2702,18: VARIABLE
 
65 VARIABLE 
 2702,18: VARIABLE
 
204 , enumerator 
 2702,18: ,
 2704,5: _SC_DEVICE_SPECIFIC
 2704,24: VARIABLE
 
340 NAME VARIABLE 
 2704,5: _SC_DEVICE_SPECIFIC
 2704,24: VARIABLE
 
65 VARIABLE 
 2704,24: VARIABLE
 
204 , enumerator 
 2704,24: ,
 2706,5: _SC_DEVICE_SPECIFIC_R
 2706,26: VARIABLE
 
340 NAME VARIABLE 
 2706,5: _SC_DEVICE_SPECIFIC_R
 2706,26: VARIABLE
 
65 VARIABLE 
 2706,26: VARIABLE
 
204 , enumerator 
 2706,26: ,
 2708,5: _SC_FD_MGMT
 2708,16: VARIABLE
 
340 NAME VARIABLE 
 2708,5: _SC_FD_MGMT
 2708,16: VARIABLE
 
65 VARIABLE 
 2708,16: VARIABLE
 
204 , enumerator 
 2708,16: ,
 2710,5: _SC_FIFO
 2710,13: VARIABLE
 
340 NAME VARIABLE 
 2710,5: _SC_FIFO
 2710,13: VARIABLE
 
65 VARIABLE 
 2710,13: VARIABLE
 
204 , enumerator 
 2710,13: ,
 2712,5: _SC_PIPE
 2712,13: VARIABLE
 
340 NAME VARIABLE 
 2712,5: _SC_PIPE
 2712,13: VARIABLE
 
65 VARIABLE 
 2712,13: VARIABLE
 
204 , enumerator 
 2712,13: ,
 2714,5: _SC_FILE_ATTRIBUTES
 2714,24: VARIABLE
 
340 NAME VARIABLE 
 2714,5: _SC_FILE_ATTRIBUTES
 2714,24: VARIABLE
 
65 VARIABLE 
 2714,24: VARIABLE
 
204 , enumerator 
 2714,24: ,
 2716,5: _SC_FILE_LOCKING
 2716,21: VARIABLE
 
340 NAME VARIABLE 
 2716,5: _SC_FILE_LOCKING
 2716,21: VARIABLE
 
65 VARIABLE 
 2716,21: VARIABLE
 
204 , enumerator 
 2716,21: ,
 2718,5: _SC_FILE_SYSTEM
 2718,20: VARIABLE
 
340 NAME VARIABLE 
 2718,5: _SC_FILE_SYSTEM
 2718,20: VARIABLE
 
65 VARIABLE 
 2718,20: VARIABLE
 
204 , enumerator 
 2718,20: ,
 2720,5: _SC_MONOTONIC_CLOCK
 2720,24: VARIABLE
 
340 NAME VARIABLE 
 2720,5: _SC_MONOTONIC_CLOCK
 2720,24: VARIABLE
 
65 VARIABLE 
 2720,24: VARIABLE
 
204 , enumerator 
 2720,24: ,
 2722,5: _SC_MULTI_PROCESS
 2722,22: VARIABLE
 
340 NAME VARIABLE 
 2722,5: _SC_MULTI_PROCESS
 2722,22: VARIABLE
 
65 VARIABLE 
 2722,22: VARIABLE
 
204 , enumerator 
 2722,22: ,
 2724,5: _SC_SINGLE_PROCESS
 2724,23: VARIABLE
 
340 NAME VARIABLE 
 2724,5: _SC_SINGLE_PROCESS
 2724,23: VARIABLE
 
65 VARIABLE 
 2724,23: VARIABLE
 
204 , enumerator 
 2724,23: ,
 2726,5: _SC_NETWORKING
 2726,19: VARIABLE
 
340 NAME VARIABLE 
 2726,5: _SC_NETWORKING
 2726,19: VARIABLE
 
65 VARIABLE 
 2726,19: VARIABLE
 
204 , enumerator 
 2726,19: ,
 2728,5: _SC_READER_WRITER_LOCKS
 2728,28: VARIABLE
 
340 NAME VARIABLE 
 2728,5: _SC_READER_WRITER_LOCKS
 2728,28: VARIABLE
 
65 VARIABLE 
 2728,28: VARIABLE
 
204 , enumerator 
 2728,28: ,
 2730,5: _SC_SPIN_LOCKS
 2730,19: VARIABLE
 
340 NAME VARIABLE 
 2730,5: _SC_SPIN_LOCKS
 2730,19: VARIABLE
 
65 VARIABLE 
 2730,19: VARIABLE
 
204 , enumerator 
 2730,19: ,
 2732,5: _SC_REGEXP
 2732,15: VARIABLE
 
340 NAME VARIABLE 
 2732,5: _SC_REGEXP
 2732,15: VARIABLE
 
65 VARIABLE 
 2732,15: VARIABLE
 
204 , enumerator 
 2732,15: ,
 2734,5: _SC_REGEX_VERSION
 2734,22: VARIABLE
 
340 NAME VARIABLE 
 2734,5: _SC_REGEX_VERSION
 2734,22: VARIABLE
 
65 VARIABLE 
 2734,22: VARIABLE
 
204 , enumerator 
 2734,22: ,
 2736,5: _SC_SHELL
 2736,14: VARIABLE
 
340 NAME VARIABLE 
 2736,5: _SC_SHELL
 2736,14: VARIABLE
 
65 VARIABLE 
 2736,14: VARIABLE
 
204 , enumerator 
 2736,14: ,
 2738,5: _SC_SIGNALS
 2738,16: VARIABLE
 
340 NAME VARIABLE 
 2738,5: _SC_SIGNALS
 2738,16: VARIABLE
 
65 VARIABLE 
 2738,16: VARIABLE
 
204 , enumerator 
 2738,16: ,
 2740,5: _SC_SPAWN
 2740,14: VARIABLE
 
340 NAME VARIABLE 
 2740,5: _SC_SPAWN
 2740,14: VARIABLE
 
65 VARIABLE 
 2740,14: VARIABLE
 
204 , enumerator 
 2740,14: ,
 2742,5: _SC_SPORADIC_SERVER
 2742,24: VARIABLE
 
340 NAME VARIABLE 
 2742,5: _SC_SPORADIC_SERVER
 2742,24: VARIABLE
 
65 VARIABLE 
 2742,24: VARIABLE
 
204 , enumerator 
 2742,24: ,
 2744,5: _SC_THREAD_SPORADIC_SERVER
 2744,31: VARIABLE
 
340 NAME VARIABLE 
 2744,5: _SC_THREAD_SPORADIC_SERVER
 2744,31: VARIABLE
 
65 VARIABLE 
 2744,31: VARIABLE
 
204 , enumerator 
 2744,31: ,
 2746,5: _SC_SYSTEM_DATABASE
 2746,24: VARIABLE
 
340 NAME VARIABLE 
 2746,5: _SC_SYSTEM_DATABASE
 2746,24: VARIABLE
 
65 VARIABLE 
 2746,24: VARIABLE
 
204 , enumerator 
 2746,24: ,
 2748,5: _SC_SYSTEM_DATABASE_R
 2748,26: VARIABLE
 
340 NAME VARIABLE 
 2748,5: _SC_SYSTEM_DATABASE_R
 2748,26: VARIABLE
 
65 VARIABLE 
 2748,26: VARIABLE
 
204 , enumerator 
 2748,26: ,
 2750,5: _SC_TIMEOUTS
 2750,17: VARIABLE
 
340 NAME VARIABLE 
 2750,5: _SC_TIMEOUTS
 2750,17: VARIABLE
 
65 VARIABLE 
 2750,17: VARIABLE
 
204 , enumerator 
 2750,17: ,
 2752,5: _SC_TYPED_MEMORY_OBJECTS
 2752,29: VARIABLE
 
340 NAME VARIABLE 
 2752,5: _SC_TYPED_MEMORY_OBJECTS
 2752,29: VARIABLE
 
65 VARIABLE 
 2752,29: VARIABLE
 
204 , enumerator 
 2752,29: ,
 2754,5: _SC_USER_GROUPS
 2754,20: VARIABLE
 
340 NAME VARIABLE 
 2754,5: _SC_USER_GROUPS
 2754,20: VARIABLE
 
65 VARIABLE 
 2754,20: VARIABLE
 
204 , enumerator 
 2754,20: ,
 2756,5: _SC_USER_GROUPS_R
 2756,22: VARIABLE
 
340 NAME VARIABLE 
 2756,5: _SC_USER_GROUPS_R
 2756,22: VARIABLE
 
65 VARIABLE 
 2756,22: VARIABLE
 
204 , enumerator 
 2756,22: ,
 2758,5: _SC_2_PBS
 2758,14: VARIABLE
 
340 NAME VARIABLE 
 2758,5: _SC_2_PBS
 2758,14: VARIABLE
 
65 VARIABLE 
 2758,14: VARIABLE
 
204 , enumerator 
 2758,14: ,
 2760,5: _SC_2_PBS_ACCOUNTING
 2760,25: VARIABLE
 
340 NAME VARIABLE 
 2760,5: _SC_2_PBS_ACCOUNTING
 2760,25: VARIABLE
 
65 VARIABLE 
 2760,25: VARIABLE
 
204 , enumerator 
 2760,25: ,
 2762,5: _SC_2_PBS_LOCATE
 2762,21: VARIABLE
 
340 NAME VARIABLE 
 2762,5: _SC_2_PBS_LOCATE
 2762,21: VARIABLE
 
65 VARIABLE 
 2762,21: VARIABLE
 
204 , enumerator 
 2762,21: ,
 2764,5: _SC_2_PBS_MESSAGE
 2764,22: VARIABLE
 
340 NAME VARIABLE 
 2764,5: _SC_2_PBS_MESSAGE
 2764,22: VARIABLE
 
65 VARIABLE 
 2764,22: VARIABLE
 
204 , enumerator 
 2764,22: ,
 2766,5: _SC_2_PBS_TRACK
 2766,20: VARIABLE
 
340 NAME VARIABLE 
 2766,5: _SC_2_PBS_TRACK
 2766,20: VARIABLE
 
65 VARIABLE 
 2766,20: VARIABLE
 
204 , enumerator 
 2766,20: ,
 2768,5: _SC_SYMLOOP_MAX
 2768,20: VARIABLE
 
340 NAME VARIABLE 
 2768,5: _SC_SYMLOOP_MAX
 2768,20: VARIABLE
 
65 VARIABLE 
 2768,20: VARIABLE
 
204 , enumerator 
 2768,20: ,
 2770,5: _SC_STREAMS
 2770,16: VARIABLE
 
340 NAME VARIABLE 
 2770,5: _SC_STREAMS
 2770,16: VARIABLE
 
65 VARIABLE 
 2770,16: VARIABLE
 
204 , enumerator 
 2770,16: ,
 2772,5: _SC_2_PBS_CHECKPOINT
 2772,25: VARIABLE
 
340 NAME VARIABLE 
 2772,5: _SC_2_PBS_CHECKPOINT
 2772,25: VARIABLE
 
65 VARIABLE 
 2772,25: VARIABLE
 
204 , enumerator 
 2772,25: ,
 2775,5: _SC_V6_ILP32_OFF32
 2775,23: VARIABLE
 
340 NAME VARIABLE 
 2775,5: _SC_V6_ILP32_OFF32
 2775,23: VARIABLE
 
65 VARIABLE 
 2775,23: VARIABLE
 
204 , enumerator 
 2775,23: ,
 2777,5: _SC_V6_ILP32_OFFBIG
 2777,24: VARIABLE
 
340 NAME VARIABLE 
 2777,5: _SC_V6_ILP32_OFFBIG
 2777,24: VARIABLE
 
65 VARIABLE 
 2777,24: VARIABLE
 
204 , enumerator 
 2777,24: ,
 2779,5: _SC_V6_LP64_OFF64
 2779,22: VARIABLE
 
340 NAME VARIABLE 
 2779,5: _SC_V6_LP64_OFF64
 2779,22: VARIABLE
 
65 VARIABLE 
 2779,22: VARIABLE
 
204 , enumerator 
 2779,22: ,
 2781,5: _SC_V6_LPBIG_OFFBIG
 2781,24: VARIABLE
 
340 NAME VARIABLE 
 2781,5: _SC_V6_LPBIG_OFFBIG
 2781,24: VARIABLE
 
65 VARIABLE 
 2781,24: VARIABLE
 
204 , enumerator 
 2781,24: ,
 2784,5: _SC_HOST_NAME_MAX
 2784,22: VARIABLE
 
340 NAME VARIABLE 
 2784,5: _SC_HOST_NAME_MAX
 2784,22: VARIABLE
 
65 VARIABLE 
 2784,22: VARIABLE
 
204 , enumerator 
 2784,22: ,
 2786,5: _SC_TRACE
 2786,14: VARIABLE
 
340 NAME VARIABLE 
 2786,5: _SC_TRACE
 2786,14: VARIABLE
 
65 VARIABLE 
 2786,14: VARIABLE
 
204 , enumerator 
 2786,14: ,
 2788,5: _SC_TRACE_EVENT_FILTER
 2788,27: VARIABLE
 
340 NAME VARIABLE 
 2788,5: _SC_TRACE_EVENT_FILTER
 2788,27: VARIABLE
 
65 VARIABLE 
 2788,27: VARIABLE
 
204 , enumerator 
 2788,27: ,
 2790,5: _SC_TRACE_INHERIT
 2790,22: VARIABLE
 
340 NAME VARIABLE 
 2790,5: _SC_TRACE_INHERIT
 2790,22: VARIABLE
 
65 VARIABLE 
 2790,22: VARIABLE
 
204 , enumerator 
 2790,22: ,
 2792,5: _SC_TRACE_LOG
 2792,18: VARIABLE
 
340 NAME VARIABLE 
 2792,5: _SC_TRACE_LOG
 2792,18: VARIABLE
 
65 VARIABLE 
 2792,18: VARIABLE
 
204 , enumerator 
 2792,18: ,
 2795,5: _SC_LEVEL1_ICACHE_SIZE
 2795,27: VARIABLE
 
340 NAME VARIABLE 
 2795,5: _SC_LEVEL1_ICACHE_SIZE
 2795,27: VARIABLE
 
65 VARIABLE 
 2795,27: VARIABLE
 
204 , enumerator 
 2795,27: ,
 2797,5: _SC_LEVEL1_ICACHE_ASSOC
 2797,28: VARIABLE
 
340 NAME VARIABLE 
 2797,5: _SC_LEVEL1_ICACHE_ASSOC
 2797,28: VARIABLE
 
65 VARIABLE 
 2797,28: VARIABLE
 
204 , enumerator 
 2797,28: ,
 2799,5: _SC_LEVEL1_ICACHE_LINESIZE
 2799,31: VARIABLE
 
340 NAME VARIABLE 
 2799,5: _SC_LEVEL1_ICACHE_LINESIZE
 2799,31: VARIABLE
 
65 VARIABLE 
 2799,31: VARIABLE
 
204 , enumerator 
 2799,31: ,
 2801,5: _SC_LEVEL1_DCACHE_SIZE
 2801,27: VARIABLE
 
340 NAME VARIABLE 
 2801,5: _SC_LEVEL1_DCACHE_SIZE
 2801,27: VARIABLE
 
65 VARIABLE 
 2801,27: VARIABLE
 
204 , enumerator 
 2801,27: ,
 2803,5: _SC_LEVEL1_DCACHE_ASSOC
 2803,28: VARIABLE
 
340 NAME VARIABLE 
 2803,5: _SC_LEVEL1_DCACHE_ASSOC
 2803,28: VARIABLE
 
65 VARIABLE 
 2803,28: VARIABLE
 
204 , enumerator 
 2803,28: ,
 2805,5: _SC_LEVEL1_DCACHE_LINESIZE
 2805,31: VARIABLE
 
340 NAME VARIABLE 
 2805,5: _SC_LEVEL1_DCACHE_LINESIZE
 2805,31: VARIABLE
 
65 VARIABLE 
 2805,31: VARIABLE
 
204 , enumerator 
 2805,31: ,
 2807,5: _SC_LEVEL2_CACHE_SIZE
 2807,26: VARIABLE
 
340 NAME VARIABLE 
 2807,5: _SC_LEVEL2_CACHE_SIZE
 2807,26: VARIABLE
 
65 VARIABLE 
 2807,26: VARIABLE
 
204 , enumerator 
 2807,26: ,
 2809,5: _SC_LEVEL2_CACHE_ASSOC
 2809,27: VARIABLE
 
340 NAME VARIABLE 
 2809,5: _SC_LEVEL2_CACHE_ASSOC
 2809,27: VARIABLE
 
65 VARIABLE 
 2809,27: VARIABLE
 
204 , enumerator 
 2809,27: ,
 2811,5: _SC_LEVEL2_CACHE_LINESIZE
 2811,30: VARIABLE
 
340 NAME VARIABLE 
 2811,5: _SC_LEVEL2_CACHE_LINESIZE
 2811,30: VARIABLE
 
65 VARIABLE 
 2811,30: VARIABLE
 
204 , enumerator 
 2811,30: ,
 2813,5: _SC_LEVEL3_CACHE_SIZE
 2813,26: VARIABLE
 
340 NAME VARIABLE 
 2813,5: _SC_LEVEL3_CACHE_SIZE
 2813,26: VARIABLE
 
65 VARIABLE 
 2813,26: VARIABLE
 
204 , enumerator 
 2813,26: ,
 2815,5: _SC_LEVEL3_CACHE_ASSOC
 2815,27: VARIABLE
 
340 NAME VARIABLE 
 2815,5: _SC_LEVEL3_CACHE_ASSOC
 2815,27: VARIABLE
 
65 VARIABLE 
 2815,27: VARIABLE
 
204 , enumerator 
 2815,27: ,
 2817,5: _SC_LEVEL3_CACHE_LINESIZE
 2817,30: VARIABLE
 
340 NAME VARIABLE 
 2817,5: _SC_LEVEL3_CACHE_LINESIZE
 2817,30: VARIABLE
 
65 VARIABLE 
 2817,30: VARIABLE
 
204 , enumerator 
 2817,30: ,
 2819,5: _SC_LEVEL4_CACHE_SIZE
 2819,26: VARIABLE
 
340 NAME VARIABLE 
 2819,5: _SC_LEVEL4_CACHE_SIZE
 2819,26: VARIABLE
 
65 VARIABLE 
 2819,26: VARIABLE
 
204 , enumerator 
 2819,26: ,
 2821,5: _SC_LEVEL4_CACHE_ASSOC
 2821,27: VARIABLE
 
340 NAME VARIABLE 
 2821,5: _SC_LEVEL4_CACHE_ASSOC
 2821,27: VARIABLE
 
65 VARIABLE 
 2821,27: VARIABLE
 
204 , enumerator 
 2821,27: ,
 2823,5: _SC_LEVEL4_CACHE_LINESIZE
 2823,30: VARIABLE
 
340 NAME VARIABLE 
 2823,5: _SC_LEVEL4_CACHE_LINESIZE
 2823,30: VARIABLE
 
65 VARIABLE 
 2823,30: VARIABLE
 
204 , enumerator 
 2823,30: ,
 2827,5: _SC_IPV6
 2827,13: VARIABLE
 2827,14: =
 2827,16: _SC_LEVEL1_ICACHE_SIZE
 2827,38: VARIABLE
 2827,39: +
 2827,41: 50
 
340 NAME VARIABLE 
 2827,5: _SC_IPV6
 2827,13: VARIABLE
 
65 VARIABLE 
 2827,13: VARIABLE
 
206 = constant_expression 
 2827,14: =
 2827,16: _SC_LEVEL1_ICACHE_SIZE
 2827,38: VARIABLE
 2827,39: +
 2827,41: 50
 
341 NAME VARIABLE 
 2827,16: _SC_LEVEL1_ICACHE_SIZE
 2827,38: VARIABLE
 
179 VARIABLE 
 2827,38: VARIABLE
 
152 + 
 2827,39: +
 
246 CONSTANT 
 2827,41: 50
 
204 , enumerator 
 2827,43: ,
 2829,5: _SC_RAW_SOCKETS
 2829,20: VARIABLE
 
340 NAME VARIABLE 
 2829,5: _SC_RAW_SOCKETS
 2829,20: VARIABLE
 
65 VARIABLE 
 2829,20: VARIABLE
 
204 , enumerator 
 2829,20: ,
 2832,5: _SC_V7_ILP32_OFF32
 2832,23: VARIABLE
 
340 NAME VARIABLE 
 2832,5: _SC_V7_ILP32_OFF32
 2832,23: VARIABLE
 
65 VARIABLE 
 2832,23: VARIABLE
 
204 , enumerator 
 2832,23: ,
 2834,5: _SC_V7_ILP32_OFFBIG
 2834,24: VARIABLE
 
340 NAME VARIABLE 
 2834,5: _SC_V7_ILP32_OFFBIG
 2834,24: VARIABLE
 
65 VARIABLE 
 2834,24: VARIABLE
 
204 , enumerator 
 2834,24: ,
 2836,5: _SC_V7_LP64_OFF64
 2836,22: VARIABLE
 
340 NAME VARIABLE 
 2836,5: _SC_V7_LP64_OFF64
 2836,22: VARIABLE
 
65 VARIABLE 
 2836,22: VARIABLE
 
204 , enumerator 
 2836,22: ,
 2838,5: _SC_V7_LPBIG_OFFBIG
 2838,24: VARIABLE
 
340 NAME VARIABLE 
 2838,5: _SC_V7_LPBIG_OFFBIG
 2838,24: VARIABLE
 
65 VARIABLE 
 2838,24: VARIABLE
 
204 , enumerator 
 2838,24: ,
 2841,5: _SC_SS_REPL_MAX
 2841,20: VARIABLE
 
340 NAME VARIABLE 
 2841,5: _SC_SS_REPL_MAX
 2841,20: VARIABLE
 
65 VARIABLE 
 2841,20: VARIABLE
 
204 , enumerator 
 2841,20: ,
 2844,5: _SC_TRACE_EVENT_NAME_MAX
 2844,29: VARIABLE
 
340 NAME VARIABLE 
 2844,5: _SC_TRACE_EVENT_NAME_MAX
 2844,29: VARIABLE
 
65 VARIABLE 
 2844,29: VARIABLE
 
204 , enumerator 
 2844,29: ,
 2846,5: _SC_TRACE_NAME_MAX
 2846,23: VARIABLE
 
340 NAME VARIABLE 
 2846,5: _SC_TRACE_NAME_MAX
 2846,23: VARIABLE
 
65 VARIABLE 
 2846,23: VARIABLE
 
204 , enumerator 
 2846,23: ,
 2848,5: _SC_TRACE_SYS_MAX
 2848,22: VARIABLE
 
340 NAME VARIABLE 
 2848,5: _SC_TRACE_SYS_MAX
 2848,22: VARIABLE
 
65 VARIABLE 
 2848,22: VARIABLE
 
204 , enumerator 
 2848,22: ,
 2850,5: _SC_TRACE_USER_EVENT_MAX
 2850,29: VARIABLE
 
340 NAME VARIABLE 
 2850,5: _SC_TRACE_USER_EVENT_MAX
 2850,29: VARIABLE
 
65 VARIABLE 
 2850,29: VARIABLE
 
204 , enumerator 
 2850,29: ,
 2853,5: _SC_XOPEN_STREAMS
 2853,22: VARIABLE
 
340 NAME VARIABLE 
 2853,5: _SC_XOPEN_STREAMS
 2853,22: VARIABLE
 
65 VARIABLE 
 2853,22: VARIABLE
 
204 , enumerator 
 2853,22: ,
 2856,5: _SC_THREAD_ROBUST_PRIO_INHERIT
 2856,35: VARIABLE
 
340 NAME VARIABLE 
 2856,5: _SC_THREAD_ROBUST_PRIO_INHERIT
 2856,35: VARIABLE
 
65 VARIABLE 
 2856,35: VARIABLE
 
204 , enumerator 
 2856,35: ,
 2858,5: _SC_THREAD_ROBUST_PRIO_PROTECT
 2858,35: VARIABLE
 
340 NAME VARIABLE 
 2858,5: _SC_THREAD_ROBUST_PRIO_PROTECT
 2858,35: VARIABLE
 
65 VARIABLE 
 2858,35: VARIABLE
 
204 , enumerator 
 2858,35: ,
 2861,5: _SC_MINSIGSTKSZ
 2861,20: VARIABLE
 
340 NAME VARIABLE 
 2861,5: _SC_MINSIGSTKSZ
 2861,20: VARIABLE
 
65 VARIABLE 
 2861,20: VARIABLE
 
204 , enumerator 
 2861,20: ,
 2864,5: _SC_SIGSTKSZ
 2864,17: VARIABLE
 
340 NAME VARIABLE 
 2864,5: _SC_SIGSTKSZ
 2864,17: VARIABLE
 
65 VARIABLE 
 2864,17: VARIABLE
 
339 } 
 2866,3: }
 
60 ; 
 2866,4: ;
 
23 enum option_general_identifier { enumerator_list option_comma } 
 2869,1: enum
 2870,3: {
 2871,5: _CS_PATH
 2871,13: VARIABLE
 2871,13: ,
 2874,5: _CS_V6_WIDTH_RESTRICTED_ENVS
 2874,33: VARIABLE
 2874,33: ,
 2878,5: _CS_GNU_LIBC_VERSION
 2878,25: VARIABLE
 2878,25: ,
 2880,5: _CS_GNU_LIBPTHREAD_VERSION
 2880,31: VARIABLE
 2880,31: ,
 2883,5: _CS_V5_WIDTH_RESTRICTED_ENVS
 2883,33: VARIABLE
 2883,33: ,
 2887,5: _CS_V7_WIDTH_RESTRICTED_ENVS
 2887,33: VARIABLE
 2887,33: ,
 2891,5: _CS_LFS_CFLAGS
 2891,19: VARIABLE
 2891,20: =
 2891,22: 1000
 2891,26: ,
 2893,5: _CS_LFS_LDFLAGS
 2893,20: VARIABLE
 2893,20: ,
 2895,5: _CS_LFS_LIBS
 2895,17: VARIABLE
 2895,17: ,
 2897,5: _CS_LFS_LINTFLAGS
 2897,22: VARIABLE
 2897,22: ,
 2899,5: _CS_LFS64_CFLAGS
 2899,21: VARIABLE
 2899,21: ,
 2901,5: _CS_LFS64_LDFLAGS
 2901,22: VARIABLE
 2901,22: ,
 2903,5: _CS_LFS64_LIBS
 2903,19: VARIABLE
 2903,19: ,
 2905,5: _CS_LFS64_LINTFLAGS
 2905,24: VARIABLE
 2905,24: ,
 2908,5: _CS_XBS5_ILP32_OFF32_CFLAGS
 2908,32: VARIABLE
 2908,33: =
 2908,35: 1100
 2908,39: ,
 2910,5: _CS_XBS5_ILP32_OFF32_LDFLAGS
 2910,33: VARIABLE
 2910,33: ,
 2912,5: _CS_XBS5_ILP32_OFF32_LIBS
 2912,30: VARIABLE
 2912,30: ,
 2914,5: _CS_XBS5_ILP32_OFF32_LINTFLAGS
 2914,35: VARIABLE
 2914,35: ,
 2916,5: _CS_XBS5_ILP32_OFFBIG_CFLAGS
 2916,33: VARIABLE
 2916,33: ,
 2918,5: _CS_XBS5_ILP32_OFFBIG_LDFLAGS
 2918,34: VARIABLE
 2918,34: ,
 2920,5: _CS_XBS5_ILP32_OFFBIG_LIBS
 2920,31: VARIABLE
 2920,31: ,
 2922,5: _CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 2922,36: VARIABLE
 2922,36: ,
 2924,5: _CS_XBS5_LP64_OFF64_CFLAGS
 2924,31: VARIABLE
 2924,31: ,
 2926,5: _CS_XBS5_LP64_OFF64_LDFLAGS
 2926,32: VARIABLE
 2926,32: ,
 2928,5: _CS_XBS5_LP64_OFF64_LIBS
 2928,29: VARIABLE
 2928,29: ,
 2930,5: _CS_XBS5_LP64_OFF64_LINTFLAGS
 2930,34: VARIABLE
 2930,34: ,
 2932,5: _CS_XBS5_LPBIG_OFFBIG_CFLAGS
 2932,33: VARIABLE
 2932,33: ,
 2934,5: _CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 2934,34: VARIABLE
 2934,34: ,
 2936,5: _CS_XBS5_LPBIG_OFFBIG_LIBS
 2936,31: VARIABLE
 2936,31: ,
 2938,5: _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 2938,36: VARIABLE
 2938,36: ,
 2941,5: _CS_POSIX_V6_ILP32_OFF32_CFLAGS
 2941,36: VARIABLE
 2941,36: ,
 2943,5: _CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 2943,37: VARIABLE
 2943,37: ,
 2945,5: _CS_POSIX_V6_ILP32_OFF32_LIBS
 2945,34: VARIABLE
 2945,34: ,
 2947,5: _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 2947,39: VARIABLE
 2947,39: ,
 2949,5: _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 2949,37: VARIABLE
 2949,37: ,
 2951,5: _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 2951,38: VARIABLE
 2951,38: ,
 2953,5: _CS_POSIX_V6_ILP32_OFFBIG_LIBS
 2953,35: VARIABLE
 2953,35: ,
 2955,5: _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 2955,40: VARIABLE
 2955,40: ,
 2957,5: _CS_POSIX_V6_LP64_OFF64_CFLAGS
 2957,35: VARIABLE
 2957,35: ,
 2959,5: _CS_POSIX_V6_LP64_OFF64_LDFLAGS
 2959,36: VARIABLE
 2959,36: ,
 2961,5: _CS_POSIX_V6_LP64_OFF64_LIBS
 2961,33: VARIABLE
 2961,33: ,
 2963,5: _CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 2963,38: VARIABLE
 2963,38: ,
 2965,5: _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 2965,37: VARIABLE
 2965,37: ,
 2967,5: _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 2967,38: VARIABLE
 2967,38: ,
 2969,5: _CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 2969,35: VARIABLE
 2969,35: ,
 2971,5: _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 2971,40: VARIABLE
 2971,40: ,
 2974,5: _CS_POSIX_V7_ILP32_OFF32_CFLAGS
 2974,36: VARIABLE
 2974,36: ,
 2976,5: _CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 2976,37: VARIABLE
 2976,37: ,
 2978,5: _CS_POSIX_V7_ILP32_OFF32_LIBS
 2978,34: VARIABLE
 2978,34: ,
 2980,5: _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 2980,39: VARIABLE
 2980,39: ,
 2982,5: _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 2982,37: VARIABLE
 2982,37: ,
 2984,5: _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 2984,38: VARIABLE
 2984,38: ,
 2986,5: _CS_POSIX_V7_ILP32_OFFBIG_LIBS
 2986,35: VARIABLE
 2986,35: ,
 2988,5: _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 2988,40: VARIABLE
 2988,40: ,
 2990,5: _CS_POSIX_V7_LP64_OFF64_CFLAGS
 2990,35: VARIABLE
 2990,35: ,
 2992,5: _CS_POSIX_V7_LP64_OFF64_LDFLAGS
 2992,36: VARIABLE
 2992,36: ,
 2994,5: _CS_POSIX_V7_LP64_OFF64_LIBS
 2994,33: VARIABLE
 2994,33: ,
 2996,5: _CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 2996,38: VARIABLE
 2996,38: ,
 2998,5: _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 2998,37: VARIABLE
 2998,37: ,
 3000,5: _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 3000,38: VARIABLE
 3000,38: ,
 3002,5: _CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 3002,35: VARIABLE
 3002,35: ,
 3004,5: _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 3004,40: VARIABLE
 3004,40: ,
 3007,5: _CS_V6_ENV
 3007,15: VARIABLE
 3007,15: ,
 3009,5: _CS_V7_ENV
 3009,15: VARIABLE
 3011,3: }
 
98 { enumerator_list option_comma } 
 2870,3: {
 2871,5: _CS_PATH
 2871,13: VARIABLE
 2871,13: ,
 2874,5: _CS_V6_WIDTH_RESTRICTED_ENVS
 2874,33: VARIABLE
 2874,33: ,
 2878,5: _CS_GNU_LIBC_VERSION
 2878,25: VARIABLE
 2878,25: ,
 2880,5: _CS_GNU_LIBPTHREAD_VERSION
 2880,31: VARIABLE
 2880,31: ,
 2883,5: _CS_V5_WIDTH_RESTRICTED_ENVS
 2883,33: VARIABLE
 2883,33: ,
 2887,5: _CS_V7_WIDTH_RESTRICTED_ENVS
 2887,33: VARIABLE
 2887,33: ,
 2891,5: _CS_LFS_CFLAGS
 2891,19: VARIABLE
 2891,20: =
 2891,22: 1000
 2891,26: ,
 2893,5: _CS_LFS_LDFLAGS
 2893,20: VARIABLE
 2893,20: ,
 2895,5: _CS_LFS_LIBS
 2895,17: VARIABLE
 2895,17: ,
 2897,5: _CS_LFS_LINTFLAGS
 2897,22: VARIABLE
 2897,22: ,
 2899,5: _CS_LFS64_CFLAGS
 2899,21: VARIABLE
 2899,21: ,
 2901,5: _CS_LFS64_LDFLAGS
 2901,22: VARIABLE
 2901,22: ,
 2903,5: _CS_LFS64_LIBS
 2903,19: VARIABLE
 2903,19: ,
 2905,5: _CS_LFS64_LINTFLAGS
 2905,24: VARIABLE
 2905,24: ,
 2908,5: _CS_XBS5_ILP32_OFF32_CFLAGS
 2908,32: VARIABLE
 2908,33: =
 2908,35: 1100
 2908,39: ,
 2910,5: _CS_XBS5_ILP32_OFF32_LDFLAGS
 2910,33: VARIABLE
 2910,33: ,
 2912,5: _CS_XBS5_ILP32_OFF32_LIBS
 2912,30: VARIABLE
 2912,30: ,
 2914,5: _CS_XBS5_ILP32_OFF32_LINTFLAGS
 2914,35: VARIABLE
 2914,35: ,
 2916,5: _CS_XBS5_ILP32_OFFBIG_CFLAGS
 2916,33: VARIABLE
 2916,33: ,
 2918,5: _CS_XBS5_ILP32_OFFBIG_LDFLAGS
 2918,34: VARIABLE
 2918,34: ,
 2920,5: _CS_XBS5_ILP32_OFFBIG_LIBS
 2920,31: VARIABLE
 2920,31: ,
 2922,5: _CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 2922,36: VARIABLE
 2922,36: ,
 2924,5: _CS_XBS5_LP64_OFF64_CFLAGS
 2924,31: VARIABLE
 2924,31: ,
 2926,5: _CS_XBS5_LP64_OFF64_LDFLAGS
 2926,32: VARIABLE
 2926,32: ,
 2928,5: _CS_XBS5_LP64_OFF64_LIBS
 2928,29: VARIABLE
 2928,29: ,
 2930,5: _CS_XBS5_LP64_OFF64_LINTFLAGS
 2930,34: VARIABLE
 2930,34: ,
 2932,5: _CS_XBS5_LPBIG_OFFBIG_CFLAGS
 2932,33: VARIABLE
 2932,33: ,
 2934,5: _CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 2934,34: VARIABLE
 2934,34: ,
 2936,5: _CS_XBS5_LPBIG_OFFBIG_LIBS
 2936,31: VARIABLE
 2936,31: ,
 2938,5: _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 2938,36: VARIABLE
 2938,36: ,
 2941,5: _CS_POSIX_V6_ILP32_OFF32_CFLAGS
 2941,36: VARIABLE
 2941,36: ,
 2943,5: _CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 2943,37: VARIABLE
 2943,37: ,
 2945,5: _CS_POSIX_V6_ILP32_OFF32_LIBS
 2945,34: VARIABLE
 2945,34: ,
 2947,5: _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 2947,39: VARIABLE
 2947,39: ,
 2949,5: _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 2949,37: VARIABLE
 2949,37: ,
 2951,5: _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 2951,38: VARIABLE
 2951,38: ,
 2953,5: _CS_POSIX_V6_ILP32_OFFBIG_LIBS
 2953,35: VARIABLE
 2953,35: ,
 2955,5: _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 2955,40: VARIABLE
 2955,40: ,
 2957,5: _CS_POSIX_V6_LP64_OFF64_CFLAGS
 2957,35: VARIABLE
 2957,35: ,
 2959,5: _CS_POSIX_V6_LP64_OFF64_LDFLAGS
 2959,36: VARIABLE
 2959,36: ,
 2961,5: _CS_POSIX_V6_LP64_OFF64_LIBS
 2961,33: VARIABLE
 2961,33: ,
 2963,5: _CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 2963,38: VARIABLE
 2963,38: ,
 2965,5: _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 2965,37: VARIABLE
 2965,37: ,
 2967,5: _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 2967,38: VARIABLE
 2967,38: ,
 2969,5: _CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 2969,35: VARIABLE
 2969,35: ,
 2971,5: _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 2971,40: VARIABLE
 2971,40: ,
 2974,5: _CS_POSIX_V7_ILP32_OFF32_CFLAGS
 2974,36: VARIABLE
 2974,36: ,
 2976,5: _CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 2976,37: VARIABLE
 2976,37: ,
 2978,5: _CS_POSIX_V7_ILP32_OFF32_LIBS
 2978,34: VARIABLE
 2978,34: ,
 2980,5: _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 2980,39: VARIABLE
 2980,39: ,
 2982,5: _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 2982,37: VARIABLE
 2982,37: ,
 2984,5: _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 2984,38: VARIABLE
 2984,38: ,
 2986,5: _CS_POSIX_V7_ILP32_OFFBIG_LIBS
 2986,35: VARIABLE
 2986,35: ,
 2988,5: _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 2988,40: VARIABLE
 2988,40: ,
 2990,5: _CS_POSIX_V7_LP64_OFF64_CFLAGS
 2990,35: VARIABLE
 2990,35: ,
 2992,5: _CS_POSIX_V7_LP64_OFF64_LDFLAGS
 2992,36: VARIABLE
 2992,36: ,
 2994,5: _CS_POSIX_V7_LP64_OFF64_LIBS
 2994,33: VARIABLE
 2994,33: ,
 2996,5: _CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 2996,38: VARIABLE
 2996,38: ,
 2998,5: _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 2998,37: VARIABLE
 2998,37: ,
 3000,5: _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 3000,38: VARIABLE
 3000,38: ,
 3002,5: _CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 3002,35: VARIABLE
 3002,35: ,
 3004,5: _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 3004,40: VARIABLE
 3004,40: ,
 3007,5: _CS_V6_ENV
 3007,15: VARIABLE
 3007,15: ,
 3009,5: _CS_V7_ENV
 3009,15: VARIABLE
 3011,3: }
 
131 NAME VARIABLE 
 2871,5: _CS_PATH
 2871,13: VARIABLE
 
65 VARIABLE 
 2871,13: VARIABLE
 
204 , enumerator 
 2871,13: ,
 2874,5: _CS_V6_WIDTH_RESTRICTED_ENVS
 2874,33: VARIABLE
 
340 NAME VARIABLE 
 2874,5: _CS_V6_WIDTH_RESTRICTED_ENVS
 2874,33: VARIABLE
 
65 VARIABLE 
 2874,33: VARIABLE
 
204 , enumerator 
 2874,33: ,
 2878,5: _CS_GNU_LIBC_VERSION
 2878,25: VARIABLE
 
340 NAME VARIABLE 
 2878,5: _CS_GNU_LIBC_VERSION
 2878,25: VARIABLE
 
65 VARIABLE 
 2878,25: VARIABLE
 
204 , enumerator 
 2878,25: ,
 2880,5: _CS_GNU_LIBPTHREAD_VERSION
 2880,31: VARIABLE
 
340 NAME VARIABLE 
 2880,5: _CS_GNU_LIBPTHREAD_VERSION
 2880,31: VARIABLE
 
65 VARIABLE 
 2880,31: VARIABLE
 
204 , enumerator 
 2880,31: ,
 2883,5: _CS_V5_WIDTH_RESTRICTED_ENVS
 2883,33: VARIABLE
 
340 NAME VARIABLE 
 2883,5: _CS_V5_WIDTH_RESTRICTED_ENVS
 2883,33: VARIABLE
 
65 VARIABLE 
 2883,33: VARIABLE
 
204 , enumerator 
 2883,33: ,
 2887,5: _CS_V7_WIDTH_RESTRICTED_ENVS
 2887,33: VARIABLE
 
340 NAME VARIABLE 
 2887,5: _CS_V7_WIDTH_RESTRICTED_ENVS
 2887,33: VARIABLE
 
65 VARIABLE 
 2887,33: VARIABLE
 
204 , enumerator 
 2887,33: ,
 2891,5: _CS_LFS_CFLAGS
 2891,19: VARIABLE
 2891,20: =
 2891,22: 1000
 
340 NAME VARIABLE 
 2891,5: _CS_LFS_CFLAGS
 2891,19: VARIABLE
 
65 VARIABLE 
 2891,19: VARIABLE
 
206 = constant_expression 
 2891,20: =
 2891,22: 1000
 
341 CONSTANT 
 2891,22: 1000
 
204 , enumerator 
 2891,26: ,
 2893,5: _CS_LFS_LDFLAGS
 2893,20: VARIABLE
 
340 NAME VARIABLE 
 2893,5: _CS_LFS_LDFLAGS
 2893,20: VARIABLE
 
65 VARIABLE 
 2893,20: VARIABLE
 
204 , enumerator 
 2893,20: ,
 2895,5: _CS_LFS_LIBS
 2895,17: VARIABLE
 
340 NAME VARIABLE 
 2895,5: _CS_LFS_LIBS
 2895,17: VARIABLE
 
65 VARIABLE 
 2895,17: VARIABLE
 
204 , enumerator 
 2895,17: ,
 2897,5: _CS_LFS_LINTFLAGS
 2897,22: VARIABLE
 
340 NAME VARIABLE 
 2897,5: _CS_LFS_LINTFLAGS
 2897,22: VARIABLE
 
65 VARIABLE 
 2897,22: VARIABLE
 
204 , enumerator 
 2897,22: ,
 2899,5: _CS_LFS64_CFLAGS
 2899,21: VARIABLE
 
340 NAME VARIABLE 
 2899,5: _CS_LFS64_CFLAGS
 2899,21: VARIABLE
 
65 VARIABLE 
 2899,21: VARIABLE
 
204 , enumerator 
 2899,21: ,
 2901,5: _CS_LFS64_LDFLAGS
 2901,22: VARIABLE
 
340 NAME VARIABLE 
 2901,5: _CS_LFS64_LDFLAGS
 2901,22: VARIABLE
 
65 VARIABLE 
 2901,22: VARIABLE
 
204 , enumerator 
 2901,22: ,
 2903,5: _CS_LFS64_LIBS
 2903,19: VARIABLE
 
340 NAME VARIABLE 
 2903,5: _CS_LFS64_LIBS
 2903,19: VARIABLE
 
65 VARIABLE 
 2903,19: VARIABLE
 
204 , enumerator 
 2903,19: ,
 2905,5: _CS_LFS64_LINTFLAGS
 2905,24: VARIABLE
 
340 NAME VARIABLE 
 2905,5: _CS_LFS64_LINTFLAGS
 2905,24: VARIABLE
 
65 VARIABLE 
 2905,24: VARIABLE
 
204 , enumerator 
 2905,24: ,
 2908,5: _CS_XBS5_ILP32_OFF32_CFLAGS
 2908,32: VARIABLE
 2908,33: =
 2908,35: 1100
 
340 NAME VARIABLE 
 2908,5: _CS_XBS5_ILP32_OFF32_CFLAGS
 2908,32: VARIABLE
 
65 VARIABLE 
 2908,32: VARIABLE
 
206 = constant_expression 
 2908,33: =
 2908,35: 1100
 
341 CONSTANT 
 2908,35: 1100
 
204 , enumerator 
 2908,39: ,
 2910,5: _CS_XBS5_ILP32_OFF32_LDFLAGS
 2910,33: VARIABLE
 
340 NAME VARIABLE 
 2910,5: _CS_XBS5_ILP32_OFF32_LDFLAGS
 2910,33: VARIABLE
 
65 VARIABLE 
 2910,33: VARIABLE
 
204 , enumerator 
 2910,33: ,
 2912,5: _CS_XBS5_ILP32_OFF32_LIBS
 2912,30: VARIABLE
 
340 NAME VARIABLE 
 2912,5: _CS_XBS5_ILP32_OFF32_LIBS
 2912,30: VARIABLE
 
65 VARIABLE 
 2912,30: VARIABLE
 
204 , enumerator 
 2912,30: ,
 2914,5: _CS_XBS5_ILP32_OFF32_LINTFLAGS
 2914,35: VARIABLE
 
340 NAME VARIABLE 
 2914,5: _CS_XBS5_ILP32_OFF32_LINTFLAGS
 2914,35: VARIABLE
 
65 VARIABLE 
 2914,35: VARIABLE
 
204 , enumerator 
 2914,35: ,
 2916,5: _CS_XBS5_ILP32_OFFBIG_CFLAGS
 2916,33: VARIABLE
 
340 NAME VARIABLE 
 2916,5: _CS_XBS5_ILP32_OFFBIG_CFLAGS
 2916,33: VARIABLE
 
65 VARIABLE 
 2916,33: VARIABLE
 
204 , enumerator 
 2916,33: ,
 2918,5: _CS_XBS5_ILP32_OFFBIG_LDFLAGS
 2918,34: VARIABLE
 
340 NAME VARIABLE 
 2918,5: _CS_XBS5_ILP32_OFFBIG_LDFLAGS
 2918,34: VARIABLE
 
65 VARIABLE 
 2918,34: VARIABLE
 
204 , enumerator 
 2918,34: ,
 2920,5: _CS_XBS5_ILP32_OFFBIG_LIBS
 2920,31: VARIABLE
 
340 NAME VARIABLE 
 2920,5: _CS_XBS5_ILP32_OFFBIG_LIBS
 2920,31: VARIABLE
 
65 VARIABLE 
 2920,31: VARIABLE
 
204 , enumerator 
 2920,31: ,
 2922,5: _CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 2922,36: VARIABLE
 
340 NAME VARIABLE 
 2922,5: _CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 2922,36: VARIABLE
 
65 VARIABLE 
 2922,36: VARIABLE
 
204 , enumerator 
 2922,36: ,
 2924,5: _CS_XBS5_LP64_OFF64_CFLAGS
 2924,31: VARIABLE
 
340 NAME VARIABLE 
 2924,5: _CS_XBS5_LP64_OFF64_CFLAGS
 2924,31: VARIABLE
 
65 VARIABLE 
 2924,31: VARIABLE
 
204 , enumerator 
 2924,31: ,
 2926,5: _CS_XBS5_LP64_OFF64_LDFLAGS
 2926,32: VARIABLE
 
340 NAME VARIABLE 
 2926,5: _CS_XBS5_LP64_OFF64_LDFLAGS
 2926,32: VARIABLE
 
65 VARIABLE 
 2926,32: VARIABLE
 
204 , enumerator 
 2926,32: ,
 2928,5: _CS_XBS5_LP64_OFF64_LIBS
 2928,29: VARIABLE
 
340 NAME VARIABLE 
 2928,5: _CS_XBS5_LP64_OFF64_LIBS
 2928,29: VARIABLE
 
65 VARIABLE 
 2928,29: VARIABLE
 
204 , enumerator 
 2928,29: ,
 2930,5: _CS_XBS5_LP64_OFF64_LINTFLAGS
 2930,34: VARIABLE
 
340 NAME VARIABLE 
 2930,5: _CS_XBS5_LP64_OFF64_LINTFLAGS
 2930,34: VARIABLE
 
65 VARIABLE 
 2930,34: VARIABLE
 
204 , enumerator 
 2930,34: ,
 2932,5: _CS_XBS5_LPBIG_OFFBIG_CFLAGS
 2932,33: VARIABLE
 
340 NAME VARIABLE 
 2932,5: _CS_XBS5_LPBIG_OFFBIG_CFLAGS
 2932,33: VARIABLE
 
65 VARIABLE 
 2932,33: VARIABLE
 
204 , enumerator 
 2932,33: ,
 2934,5: _CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 2934,34: VARIABLE
 
340 NAME VARIABLE 
 2934,5: _CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 2934,34: VARIABLE
 
65 VARIABLE 
 2934,34: VARIABLE
 
204 , enumerator 
 2934,34: ,
 2936,5: _CS_XBS5_LPBIG_OFFBIG_LIBS
 2936,31: VARIABLE
 
340 NAME VARIABLE 
 2936,5: _CS_XBS5_LPBIG_OFFBIG_LIBS
 2936,31: VARIABLE
 
65 VARIABLE 
 2936,31: VARIABLE
 
204 , enumerator 
 2936,31: ,
 2938,5: _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 2938,36: VARIABLE
 
340 NAME VARIABLE 
 2938,5: _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 2938,36: VARIABLE
 
65 VARIABLE 
 2938,36: VARIABLE
 
204 , enumerator 
 2938,36: ,
 2941,5: _CS_POSIX_V6_ILP32_OFF32_CFLAGS
 2941,36: VARIABLE
 
340 NAME VARIABLE 
 2941,5: _CS_POSIX_V6_ILP32_OFF32_CFLAGS
 2941,36: VARIABLE
 
65 VARIABLE 
 2941,36: VARIABLE
 
204 , enumerator 
 2941,36: ,
 2943,5: _CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 2943,37: VARIABLE
 
340 NAME VARIABLE 
 2943,5: _CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 2943,37: VARIABLE
 
65 VARIABLE 
 2943,37: VARIABLE
 
204 , enumerator 
 2943,37: ,
 2945,5: _CS_POSIX_V6_ILP32_OFF32_LIBS
 2945,34: VARIABLE
 
340 NAME VARIABLE 
 2945,5: _CS_POSIX_V6_ILP32_OFF32_LIBS
 2945,34: VARIABLE
 
65 VARIABLE 
 2945,34: VARIABLE
 
204 , enumerator 
 2945,34: ,
 2947,5: _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 2947,39: VARIABLE
 
340 NAME VARIABLE 
 2947,5: _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 2947,39: VARIABLE
 
65 VARIABLE 
 2947,39: VARIABLE
 
204 , enumerator 
 2947,39: ,
 2949,5: _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 2949,37: VARIABLE
 
340 NAME VARIABLE 
 2949,5: _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 2949,37: VARIABLE
 
65 VARIABLE 
 2949,37: VARIABLE
 
204 , enumerator 
 2949,37: ,
 2951,5: _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 2951,38: VARIABLE
 
340 NAME VARIABLE 
 2951,5: _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 2951,38: VARIABLE
 
65 VARIABLE 
 2951,38: VARIABLE
 
204 , enumerator 
 2951,38: ,
 2953,5: _CS_POSIX_V6_ILP32_OFFBIG_LIBS
 2953,35: VARIABLE
 
340 NAME VARIABLE 
 2953,5: _CS_POSIX_V6_ILP32_OFFBIG_LIBS
 2953,35: VARIABLE
 
65 VARIABLE 
 2953,35: VARIABLE
 
204 , enumerator 
 2953,35: ,
 2955,5: _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 2955,40: VARIABLE
 
340 NAME VARIABLE 
 2955,5: _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 2955,40: VARIABLE
 
65 VARIABLE 
 2955,40: VARIABLE
 
204 , enumerator 
 2955,40: ,
 2957,5: _CS_POSIX_V6_LP64_OFF64_CFLAGS
 2957,35: VARIABLE
 
340 NAME VARIABLE 
 2957,5: _CS_POSIX_V6_LP64_OFF64_CFLAGS
 2957,35: VARIABLE
 
65 VARIABLE 
 2957,35: VARIABLE
 
204 , enumerator 
 2957,35: ,
 2959,5: _CS_POSIX_V6_LP64_OFF64_LDFLAGS
 2959,36: VARIABLE
 
340 NAME VARIABLE 
 2959,5: _CS_POSIX_V6_LP64_OFF64_LDFLAGS
 2959,36: VARIABLE
 
65 VARIABLE 
 2959,36: VARIABLE
 
204 , enumerator 
 2959,36: ,
 2961,5: _CS_POSIX_V6_LP64_OFF64_LIBS
 2961,33: VARIABLE
 
340 NAME VARIABLE 
 2961,5: _CS_POSIX_V6_LP64_OFF64_LIBS
 2961,33: VARIABLE
 
65 VARIABLE 
 2961,33: VARIABLE
 
204 , enumerator 
 2961,33: ,
 2963,5: _CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 2963,38: VARIABLE
 
340 NAME VARIABLE 
 2963,5: _CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 2963,38: VARIABLE
 
65 VARIABLE 
 2963,38: VARIABLE
 
204 , enumerator 
 2963,38: ,
 2965,5: _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 2965,37: VARIABLE
 
340 NAME VARIABLE 
 2965,5: _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 2965,37: VARIABLE
 
65 VARIABLE 
 2965,37: VARIABLE
 
204 , enumerator 
 2965,37: ,
 2967,5: _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 2967,38: VARIABLE
 
340 NAME VARIABLE 
 2967,5: _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 2967,38: VARIABLE
 
65 VARIABLE 
 2967,38: VARIABLE
 
204 , enumerator 
 2967,38: ,
 2969,5: _CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 2969,35: VARIABLE
 
340 NAME VARIABLE 
 2969,5: _CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 2969,35: VARIABLE
 
65 VARIABLE 
 2969,35: VARIABLE
 
204 , enumerator 
 2969,35: ,
 2971,5: _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 2971,40: VARIABLE
 
340 NAME VARIABLE 
 2971,5: _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 2971,40: VARIABLE
 
65 VARIABLE 
 2971,40: VARIABLE
 
204 , enumerator 
 2971,40: ,
 2974,5: _CS_POSIX_V7_ILP32_OFF32_CFLAGS
 2974,36: VARIABLE
 
340 NAME VARIABLE 
 2974,5: _CS_POSIX_V7_ILP32_OFF32_CFLAGS
 2974,36: VARIABLE
 
65 VARIABLE 
 2974,36: VARIABLE
 
204 , enumerator 
 2974,36: ,
 2976,5: _CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 2976,37: VARIABLE
 
340 NAME VARIABLE 
 2976,5: _CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 2976,37: VARIABLE
 
65 VARIABLE 
 2976,37: VARIABLE
 
204 , enumerator 
 2976,37: ,
 2978,5: _CS_POSIX_V7_ILP32_OFF32_LIBS
 2978,34: VARIABLE
 
340 NAME VARIABLE 
 2978,5: _CS_POSIX_V7_ILP32_OFF32_LIBS
 2978,34: VARIABLE
 
65 VARIABLE 
 2978,34: VARIABLE
 
204 , enumerator 
 2978,34: ,
 2980,5: _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 2980,39: VARIABLE
 
340 NAME VARIABLE 
 2980,5: _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 2980,39: VARIABLE
 
65 VARIABLE 
 2980,39: VARIABLE
 
204 , enumerator 
 2980,39: ,
 2982,5: _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 2982,37: VARIABLE
 
340 NAME VARIABLE 
 2982,5: _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 2982,37: VARIABLE
 
65 VARIABLE 
 2982,37: VARIABLE
 
204 , enumerator 
 2982,37: ,
 2984,5: _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 2984,38: VARIABLE
 
340 NAME VARIABLE 
 2984,5: _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 2984,38: VARIABLE
 
65 VARIABLE 
 2984,38: VARIABLE
 
204 , enumerator 
 2984,38: ,
 2986,5: _CS_POSIX_V7_ILP32_OFFBIG_LIBS
 2986,35: VARIABLE
 
340 NAME VARIABLE 
 2986,5: _CS_POSIX_V7_ILP32_OFFBIG_LIBS
 2986,35: VARIABLE
 
65 VARIABLE 
 2986,35: VARIABLE
 
204 , enumerator 
 2986,35: ,
 2988,5: _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 2988,40: VARIABLE
 
340 NAME VARIABLE 
 2988,5: _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 2988,40: VARIABLE
 
65 VARIABLE 
 2988,40: VARIABLE
 
204 , enumerator 
 2988,40: ,
 2990,5: _CS_POSIX_V7_LP64_OFF64_CFLAGS
 2990,35: VARIABLE
 
340 NAME VARIABLE 
 2990,5: _CS_POSIX_V7_LP64_OFF64_CFLAGS
 2990,35: VARIABLE
 
65 VARIABLE 
 2990,35: VARIABLE
 
204 , enumerator 
 2990,35: ,
 2992,5: _CS_POSIX_V7_LP64_OFF64_LDFLAGS
 2992,36: VARIABLE
 
340 NAME VARIABLE 
 2992,5: _CS_POSIX_V7_LP64_OFF64_LDFLAGS
 2992,36: VARIABLE
 
65 VARIABLE 
 2992,36: VARIABLE
 
204 , enumerator 
 2992,36: ,
 2994,5: _CS_POSIX_V7_LP64_OFF64_LIBS
 2994,33: VARIABLE
 
340 NAME VARIABLE 
 2994,5: _CS_POSIX_V7_LP64_OFF64_LIBS
 2994,33: VARIABLE
 
65 VARIABLE 
 2994,33: VARIABLE
 
204 , enumerator 
 2994,33: ,
 2996,5: _CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 2996,38: VARIABLE
 
340 NAME VARIABLE 
 2996,5: _CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 2996,38: VARIABLE
 
65 VARIABLE 
 2996,38: VARIABLE
 
204 , enumerator 
 2996,38: ,
 2998,5: _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 2998,37: VARIABLE
 
340 NAME VARIABLE 
 2998,5: _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 2998,37: VARIABLE
 
65 VARIABLE 
 2998,37: VARIABLE
 
204 , enumerator 
 2998,37: ,
 3000,5: _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 3000,38: VARIABLE
 
340 NAME VARIABLE 
 3000,5: _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 3000,38: VARIABLE
 
65 VARIABLE 
 3000,38: VARIABLE
 
204 , enumerator 
 3000,38: ,
 3002,5: _CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 3002,35: VARIABLE
 
340 NAME VARIABLE 
 3002,5: _CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 3002,35: VARIABLE
 
65 VARIABLE 
 3002,35: VARIABLE
 
204 , enumerator 
 3002,35: ,
 3004,5: _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 3004,40: VARIABLE
 
340 NAME VARIABLE 
 3004,5: _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 3004,40: VARIABLE
 
65 VARIABLE 
 3004,40: VARIABLE
 
204 , enumerator 
 3004,40: ,
 3007,5: _CS_V6_ENV
 3007,15: VARIABLE
 
340 NAME VARIABLE 
 3007,5: _CS_V6_ENV
 3007,15: VARIABLE
 
65 VARIABLE 
 3007,15: VARIABLE
 
204 , enumerator 
 3007,15: ,
 3009,5: _CS_V7_ENV
 3009,15: VARIABLE
 
340 NAME VARIABLE 
 3009,5: _CS_V7_ENV
 3009,15: VARIABLE
 
65 VARIABLE 
 3009,15: VARIABLE
 
339 } 
 3011,3: }
 
60 ; 
 3011,4: ;
 
23 extern 
 3015,1: extern
 
8 long 
 3015,8: long
 
17 int 
 3015,13: int
 
5 NAME VARIABLE 
 3015,17: pathconf
 3015,25: VARIABLE
 
65 VARIABLE 
 3015,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3015,26: (
 3015,27: const
 3015,33: char
 3015,38: *
 3015,39: __path
 3015,45: VARIABLE
 3015,45: ,
 3015,47: int
 3015,51: __name
 3015,57: VARIABLE
 3015,57: )
 
186 const 
 3015,27: const
 
103 char 
 3015,33: char
 
298 * option_type_qualifier_list option_pointer 
 3015,38: *
 
386 NAME VARIABLE 
 3015,39: __path
 3015,45: VARIABLE
 
65 VARIABLE 
 3015,45: VARIABLE
 
300 , parameter_declaration 
 3015,45: ,
 3015,47: int
 3015,51: __name
 3015,57: VARIABLE
 
391 int 
 3015,47: int
 
298 NAME VARIABLE 
 3015,51: __name
 3015,57: VARIABLE
 
65 VARIABLE 
 3015,57: VARIABLE
 
187 ) 
 3015,57: )
 
60 ; 
 3016,7: ;
 
23 extern 
 3019,1: extern
 
8 long 
 3019,8: long
 
17 int 
 3019,13: int
 
5 NAME VARIABLE 
 3019,17: fpathconf
 3019,26: VARIABLE
 
65 VARIABLE 
 3019,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3019,27: (
 3019,28: int
 3019,32: __fd
 3019,36: VARIABLE
 3019,36: ,
 3019,38: int
 3019,42: __name
 3019,48: VARIABLE
 3019,48: )
 
186 int 
 3019,28: int
 
298 NAME VARIABLE 
 3019,32: __fd
 3019,36: VARIABLE
 
65 VARIABLE 
 3019,36: VARIABLE
 
300 , parameter_declaration 
 3019,36: ,
 3019,38: int
 3019,42: __name
 3019,48: VARIABLE
 
391 int 
 3019,38: int
 
298 NAME VARIABLE 
 3019,42: __name
 3019,48: VARIABLE
 
65 VARIABLE 
 3019,48: VARIABLE
 
187 ) 
 3019,48: )
 
60 ; 
 3019,50: ;
 
23 extern 
 3022,1: extern
 
8 long 
 3022,8: long
 
17 int 
 3022,13: int
 
5 NAME VARIABLE 
 3022,17: sysconf
 3022,24: VARIABLE
 
65 VARIABLE 
 3022,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3022,25: (
 3022,26: int
 3022,30: __name
 3022,36: VARIABLE
 3022,36: )
 
186 int 
 3022,26: int
 
298 NAME VARIABLE 
 3022,30: __name
 3022,36: VARIABLE
 
65 VARIABLE 
 3022,36: VARIABLE
 
187 ) 
 3022,36: )
 
60 ; 
 3022,38: ;
 
23 extern 
 3026,1: extern
 
8 NAME TYPE 
 3026,8: size_t
 3026,14: TYPE
 
26 TYPE 
 3026,14: TYPE
 
5 NAME VARIABLE 
 3026,15: confstr
 3026,22: VARIABLE
 
65 VARIABLE 
 3026,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3026,23: (
 3026,24: int
 3026,28: __name
 3026,34: VARIABLE
 3026,34: ,
 3026,36: char
 3026,41: *
 3026,42: __buf
 3026,47: VARIABLE
 3026,47: ,
 3026,49: size_t
 3026,55: TYPE
 3026,56: __len
 3026,61: VARIABLE
 3026,61: )
 
186 int 
 3026,24: int
 
298 NAME VARIABLE 
 3026,28: __name
 3026,34: VARIABLE
 
65 VARIABLE 
 3026,34: VARIABLE
 
300 , parameter_declaration 
 3026,34: ,
 3026,36: char
 3026,41: *
 3026,42: __buf
 3026,47: VARIABLE
 
391 char 
 3026,36: char
 
298 * option_type_qualifier_list option_pointer 
 3026,41: *
 
386 NAME VARIABLE 
 3026,42: __buf
 3026,47: VARIABLE
 
65 VARIABLE 
 3026,47: VARIABLE
 
300 , parameter_declaration 
 3026,47: ,
 3026,49: size_t
 3026,55: TYPE
 3026,56: __len
 3026,61: VARIABLE
 
391 NAME TYPE 
 3026,49: size_t
 3026,55: TYPE
 
26 TYPE 
 3026,55: TYPE
 
298 NAME VARIABLE 
 3026,56: __len
 3026,61: VARIABLE
 
65 VARIABLE 
 3026,61: VARIABLE
 
187 ) 
 3026,61: )
 
60 ; 
 3027,5: ;
 
23 extern 
 3032,1: extern
 
8 NAME TYPE 
 3032,8: __pid_t
 3032,15: TYPE
 
26 TYPE 
 3032,15: TYPE
 
5 NAME VARIABLE 
 3032,16: getpid
 3032,22: VARIABLE
 
65 VARIABLE 
 3032,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3032,23: (
 3032,24: void
 3032,28: )
 
186 void 
 3032,24: void
 
187 ) 
 3032,28: )
 
60 ; 
 3032,30: ;
 
23 extern 
 3035,1: extern
 
8 NAME TYPE 
 3035,8: __pid_t
 3035,15: TYPE
 
26 TYPE 
 3035,15: TYPE
 
5 NAME VARIABLE 
 3035,16: getppid
 3035,23: VARIABLE
 
65 VARIABLE 
 3035,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3035,24: (
 3035,25: void
 3035,29: )
 
186 void 
 3035,25: void
 
187 ) 
 3035,29: )
 
60 ; 
 3035,31: ;
 
23 extern 
 3038,1: extern
 
8 NAME TYPE 
 3038,8: __pid_t
 3038,15: TYPE
 
26 TYPE 
 3038,15: TYPE
 
5 NAME VARIABLE 
 3038,16: getpgrp
 3038,23: VARIABLE
 
65 VARIABLE 
 3038,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3038,24: (
 3038,25: void
 3038,29: )
 
186 void 
 3038,25: void
 
187 ) 
 3038,29: )
 
60 ; 
 3038,31: ;
 
23 extern 
 3041,1: extern
 
8 NAME TYPE 
 3041,8: __pid_t
 3041,15: TYPE
 
26 TYPE 
 3041,15: TYPE
 
5 NAME VARIABLE 
 3041,16: __getpgid
 3041,25: VARIABLE
 
65 VARIABLE 
 3041,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3041,26: (
 3041,27: __pid_t
 3041,34: TYPE
 3041,35: __pid
 3041,40: VARIABLE
 3041,40: )
 
186 NAME TYPE 
 3041,27: __pid_t
 3041,34: TYPE
 
65 TYPE 
 3041,34: TYPE
 
298 NAME VARIABLE 
 3041,35: __pid
 3041,40: VARIABLE
 
65 VARIABLE 
 3041,40: VARIABLE
 
187 ) 
 3041,40: )
 
60 ; 
 3041,42: ;
 
23 extern 
 3043,1: extern
 
8 NAME TYPE 
 3043,8: __pid_t
 3043,15: TYPE
 
26 TYPE 
 3043,15: TYPE
 
5 NAME VARIABLE 
 3043,16: getpgid
 3043,23: VARIABLE
 
65 VARIABLE 
 3043,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3043,24: (
 3043,25: __pid_t
 3043,32: TYPE
 3043,33: __pid
 3043,38: VARIABLE
 3043,38: )
 
186 NAME TYPE 
 3043,25: __pid_t
 3043,32: TYPE
 
65 TYPE 
 3043,32: TYPE
 
298 NAME VARIABLE 
 3043,33: __pid
 3043,38: VARIABLE
 
65 VARIABLE 
 3043,38: VARIABLE
 
187 ) 
 3043,38: )
 
60 ; 
 3043,40: ;
 
23 extern 
 3050,1: extern
 
8 int 
 3050,8: int
 
5 NAME VARIABLE 
 3050,12: setpgid
 3050,19: VARIABLE
 
65 VARIABLE 
 3050,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3050,20: (
 3050,21: __pid_t
 3050,28: TYPE
 3050,29: __pid
 3050,34: VARIABLE
 3050,34: ,
 3050,36: __pid_t
 3050,43: TYPE
 3050,44: __pgid
 3050,50: VARIABLE
 3050,50: )
 
186 NAME TYPE 
 3050,21: __pid_t
 3050,28: TYPE
 
65 TYPE 
 3050,28: TYPE
 
298 NAME VARIABLE 
 3050,29: __pid
 3050,34: VARIABLE
 
65 VARIABLE 
 3050,34: VARIABLE
 
300 , parameter_declaration 
 3050,34: ,
 3050,36: __pid_t
 3050,43: TYPE
 3050,44: __pgid
 3050,50: VARIABLE
 
391 NAME TYPE 
 3050,36: __pid_t
 3050,43: TYPE
 
26 TYPE 
 3050,43: TYPE
 
298 NAME VARIABLE 
 3050,44: __pgid
 3050,50: VARIABLE
 
65 VARIABLE 
 3050,50: VARIABLE
 
187 ) 
 3050,50: )
 
60 ; 
 3050,52: ;
 
23 extern 
 3052,1: extern
 
8 int 
 3052,8: int
 
5 NAME VARIABLE 
 3052,12: setpgrp
 3052,19: VARIABLE
 
65 VARIABLE 
 3052,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3052,20: (
 3052,21: void
 3052,25: )
 
186 void 
 3052,21: void
 
187 ) 
 3052,25: )
 
60 ; 
 3052,27: ;
 
23 extern 
 3059,1: extern
 
8 NAME TYPE 
 3059,8: __pid_t
 3059,15: TYPE
 
26 TYPE 
 3059,15: TYPE
 
5 NAME VARIABLE 
 3059,16: setsid
 3059,22: VARIABLE
 
65 VARIABLE 
 3059,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3059,23: (
 3059,24: void
 3059,28: )
 
186 void 
 3059,24: void
 
187 ) 
 3059,28: )
 
60 ; 
 3059,30: ;
 
23 extern 
 3063,1: extern
 
8 NAME TYPE 
 3063,8: __pid_t
 3063,15: TYPE
 
26 TYPE 
 3063,15: TYPE
 
5 NAME VARIABLE 
 3063,16: getsid
 3063,22: VARIABLE
 
65 VARIABLE 
 3063,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3063,23: (
 3063,24: __pid_t
 3063,31: TYPE
 3063,32: __pid
 3063,37: VARIABLE
 3063,37: )
 
186 NAME TYPE 
 3063,24: __pid_t
 3063,31: TYPE
 
65 TYPE 
 3063,31: TYPE
 
298 NAME VARIABLE 
 3063,32: __pid
 3063,37: VARIABLE
 
65 VARIABLE 
 3063,37: VARIABLE
 
187 ) 
 3063,37: )
 
60 ; 
 3063,39: ;
 
23 extern 
 3067,1: extern
 
8 NAME TYPE 
 3067,8: __uid_t
 3067,15: TYPE
 
26 TYPE 
 3067,15: TYPE
 
5 NAME VARIABLE 
 3067,16: getuid
 3067,22: VARIABLE
 
65 VARIABLE 
 3067,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3067,23: (
 3067,24: void
 3067,28: )
 
186 void 
 3067,24: void
 
187 ) 
 3067,28: )
 
60 ; 
 3067,30: ;
 
23 extern 
 3070,1: extern
 
8 NAME TYPE 
 3070,8: __uid_t
 3070,15: TYPE
 
26 TYPE 
 3070,15: TYPE
 
5 NAME VARIABLE 
 3070,16: geteuid
 3070,23: VARIABLE
 
65 VARIABLE 
 3070,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3070,24: (
 3070,25: void
 3070,29: )
 
186 void 
 3070,25: void
 
187 ) 
 3070,29: )
 
60 ; 
 3070,31: ;
 
23 extern 
 3073,1: extern
 
8 NAME TYPE 
 3073,8: __gid_t
 3073,15: TYPE
 
26 TYPE 
 3073,15: TYPE
 
5 NAME VARIABLE 
 3073,16: getgid
 3073,22: VARIABLE
 
65 VARIABLE 
 3073,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3073,23: (
 3073,24: void
 3073,28: )
 
186 void 
 3073,24: void
 
187 ) 
 3073,28: )
 
60 ; 
 3073,30: ;
 
23 extern 
 3076,1: extern
 
8 NAME TYPE 
 3076,8: __gid_t
 3076,15: TYPE
 
26 TYPE 
 3076,15: TYPE
 
5 NAME VARIABLE 
 3076,16: getegid
 3076,23: VARIABLE
 
65 VARIABLE 
 3076,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3076,24: (
 3076,25: void
 3076,29: )
 
186 void 
 3076,25: void
 
187 ) 
 3076,29: )
 
60 ; 
 3076,31: ;
 
23 extern 
 3081,1: extern
 
8 int 
 3081,8: int
 
5 NAME VARIABLE 
 3081,12: getgroups
 3081,21: VARIABLE
 
65 VARIABLE 
 3081,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3081,22: (
 3081,23: int
 3081,27: __size
 3081,33: VARIABLE
 3081,33: ,
 3081,35: __gid_t
 3081,42: TYPE
 3081,43: __list
 3081,49: VARIABLE
 3081,49: [
 3081,50: ]
 3081,51: )
 
186 int 
 3081,23: int
 
298 NAME VARIABLE 
 3081,27: __size
 3081,33: VARIABLE
 
65 VARIABLE 
 3081,33: VARIABLE
 
300 , parameter_declaration 
 3081,33: ,
 3081,35: __gid_t
 3081,42: TYPE
 3081,43: __list
 3081,49: VARIABLE
 3081,49: [
 3081,50: ]
 
391 NAME TYPE 
 3081,35: __gid_t
 3081,42: TYPE
 
26 TYPE 
 3081,42: TYPE
 
298 NAME VARIABLE 
 3081,43: __list
 3081,49: VARIABLE
 
65 VARIABLE 
 3081,49: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 3081,49: [
 3081,50: ]
 
305 ] 
 3081,50: ]
 
187 ) 
 3081,51: )
 
60 ; 
 3082,5: ;
 
23 extern 
 3084,1: extern
 
8 int 
 3084,8: int
 
5 NAME VARIABLE 
 3084,12: setuid
 3084,18: VARIABLE
 
65 VARIABLE 
 3084,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3084,19: (
 3084,20: __uid_t
 3084,27: TYPE
 3084,28: __uid
 3084,33: VARIABLE
 3084,33: )
 
186 NAME TYPE 
 3084,20: __uid_t
 3084,27: TYPE
 
65 TYPE 
 3084,27: TYPE
 
298 NAME VARIABLE 
 3084,28: __uid
 3084,33: VARIABLE
 
65 VARIABLE 
 3084,33: VARIABLE
 
187 ) 
 3084,33: )
 
60 ; 
 3084,36: ;
 
23 extern 
 3089,1: extern
 
8 int 
 3089,8: int
 
5 NAME VARIABLE 
 3089,12: setreuid
 3089,20: VARIABLE
 
65 VARIABLE 
 3089,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3089,21: (
 3089,22: __uid_t
 3089,29: TYPE
 3089,30: __ruid
 3089,36: VARIABLE
 3089,36: ,
 3089,38: __uid_t
 3089,45: TYPE
 3089,46: __euid
 3089,52: VARIABLE
 3089,52: )
 
186 NAME TYPE 
 3089,22: __uid_t
 3089,29: TYPE
 
65 TYPE 
 3089,29: TYPE
 
298 NAME VARIABLE 
 3089,30: __ruid
 3089,36: VARIABLE
 
65 VARIABLE 
 3089,36: VARIABLE
 
300 , parameter_declaration 
 3089,36: ,
 3089,38: __uid_t
 3089,45: TYPE
 3089,46: __euid
 3089,52: VARIABLE
 
391 NAME TYPE 
 3089,38: __uid_t
 3089,45: TYPE
 
26 TYPE 
 3089,45: TYPE
 
298 NAME VARIABLE 
 3089,46: __euid
 3089,52: VARIABLE
 
65 VARIABLE 
 3089,52: VARIABLE
 
187 ) 
 3089,52: )
 
60 ; 
 3089,55: ;
 
23 extern 
 3094,1: extern
 
8 int 
 3094,8: int
 
5 NAME VARIABLE 
 3094,12: seteuid
 3094,19: VARIABLE
 
65 VARIABLE 
 3094,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3094,20: (
 3094,21: __uid_t
 3094,28: TYPE
 3094,29: __uid
 3094,34: VARIABLE
 3094,34: )
 
186 NAME TYPE 
 3094,21: __uid_t
 3094,28: TYPE
 
65 TYPE 
 3094,28: TYPE
 
298 NAME VARIABLE 
 3094,29: __uid
 3094,34: VARIABLE
 
65 VARIABLE 
 3094,34: VARIABLE
 
187 ) 
 3094,34: )
 
60 ; 
 3094,37: ;
 
23 extern 
 3101,1: extern
 
8 int 
 3101,8: int
 
5 NAME VARIABLE 
 3101,12: setgid
 3101,18: VARIABLE
 
65 VARIABLE 
 3101,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3101,19: (
 3101,20: __gid_t
 3101,27: TYPE
 3101,28: __gid
 3101,33: VARIABLE
 3101,33: )
 
186 NAME TYPE 
 3101,20: __gid_t
 3101,27: TYPE
 
65 TYPE 
 3101,27: TYPE
 
298 NAME VARIABLE 
 3101,28: __gid
 3101,33: VARIABLE
 
65 VARIABLE 
 3101,33: VARIABLE
 
187 ) 
 3101,33: )
 
60 ; 
 3101,36: ;
 
23 extern 
 3106,1: extern
 
8 int 
 3106,8: int
 
5 NAME VARIABLE 
 3106,12: setregid
 3106,20: VARIABLE
 
65 VARIABLE 
 3106,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3106,21: (
 3106,22: __gid_t
 3106,29: TYPE
 3106,30: __rgid
 3106,36: VARIABLE
 3106,36: ,
 3106,38: __gid_t
 3106,45: TYPE
 3106,46: __egid
 3106,52: VARIABLE
 3106,52: )
 
186 NAME TYPE 
 3106,22: __gid_t
 3106,29: TYPE
 
65 TYPE 
 3106,29: TYPE
 
298 NAME VARIABLE 
 3106,30: __rgid
 3106,36: VARIABLE
 
65 VARIABLE 
 3106,36: VARIABLE
 
300 , parameter_declaration 
 3106,36: ,
 3106,38: __gid_t
 3106,45: TYPE
 3106,46: __egid
 3106,52: VARIABLE
 
391 NAME TYPE 
 3106,38: __gid_t
 3106,45: TYPE
 
26 TYPE 
 3106,45: TYPE
 
298 NAME VARIABLE 
 3106,46: __egid
 3106,52: VARIABLE
 
65 VARIABLE 
 3106,52: VARIABLE
 
187 ) 
 3106,52: )
 
60 ; 
 3106,55: ;
 
23 extern 
 3111,1: extern
 
8 int 
 3111,8: int
 
5 NAME VARIABLE 
 3111,12: setegid
 3111,19: VARIABLE
 
65 VARIABLE 
 3111,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3111,20: (
 3111,21: __gid_t
 3111,28: TYPE
 3111,29: __gid
 3111,34: VARIABLE
 3111,34: )
 
186 NAME TYPE 
 3111,21: __gid_t
 3111,28: TYPE
 
65 TYPE 
 3111,28: TYPE
 
298 NAME VARIABLE 
 3111,29: __gid
 3111,34: VARIABLE
 
65 VARIABLE 
 3111,34: VARIABLE
 
187 ) 
 3111,34: )
 
60 ; 
 3111,37: ;
 
23 extern 
 3113,1: extern
 
8 NAME TYPE 
 3113,8: __pid_t
 3113,15: TYPE
 
26 TYPE 
 3113,15: TYPE
 
5 NAME VARIABLE 
 3113,16: fork
 3113,20: VARIABLE
 
65 VARIABLE 
 3113,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3113,21: (
 3113,22: void
 3113,26: )
 
186 void 
 3113,22: void
 
187 ) 
 3113,26: )
 
60 ; 
 3113,28: ;
 
23 extern 
 3121,1: extern
 
8 NAME TYPE 
 3121,8: __pid_t
 3121,15: TYPE
 
26 TYPE 
 3121,15: TYPE
 
5 NAME VARIABLE 
 3121,16: vfork
 3121,21: VARIABLE
 
65 VARIABLE 
 3121,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3121,22: (
 3121,23: void
 3121,27: )
 
186 void 
 3121,23: void
 
187 ) 
 3121,27: )
 
60 ; 
 3121,29: ;
 
23 extern 
 3123,1: extern
 
8 char 
 3123,8: char
 
5 * option_type_qualifier_list option_pointer 
 3123,13: *
 
64 NAME VARIABLE 
 3123,14: ttyname
 3123,21: VARIABLE
 
65 VARIABLE 
 3123,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 3123,22: (
 3123,23: int
 3123,27: __fd
 3123,31: VARIABLE
 3123,31: )
 
186 int 
 3123,23: int
 
298 NAME VARIABLE 
 3123,27: __fd
 3123,31: VARIABLE
 
65 VARIABLE 
 3123,31: VARIABLE
 
187 ) 
 3123,31: )
 
60 ; 
 3123,33: ;
 
23 extern 
 3127,1: extern
 
8 int 
 3127,8: int
 
5 NAME VARIABLE 
 3127,12: ttyname_r
 3127,21: VARIABLE
 
65 VARIABLE 
 3127,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3127,22: (
 3127,23: int
 3127,27: __fd
 3127,31: VARIABLE
 3127,31: ,
 3127,33: char
 3127,38: *
 3127,39: __buf
 3127,44: VARIABLE
 3127,44: ,
 3127,46: size_t
 3127,52: TYPE
 3127,53: __buflen
 3127,61: VARIABLE
 3127,61: )
 
186 int 
 3127,23: int
 
298 NAME VARIABLE 
 3127,27: __fd
 3127,31: VARIABLE
 
65 VARIABLE 
 3127,31: VARIABLE
 
300 , parameter_declaration 
 3127,31: ,
 3127,33: char
 3127,38: *
 3127,39: __buf
 3127,44: VARIABLE
 
391 char 
 3127,33: char
 
298 * option_type_qualifier_list option_pointer 
 3127,38: *
 
386 NAME VARIABLE 
 3127,39: __buf
 3127,44: VARIABLE
 
65 VARIABLE 
 3127,44: VARIABLE
 
300 , parameter_declaration 
 3127,44: ,
 3127,46: size_t
 3127,52: TYPE
 3127,53: __buflen
 3127,61: VARIABLE
 
391 NAME TYPE 
 3127,46: size_t
 3127,52: TYPE
 
26 TYPE 
 3127,52: TYPE
 
298 NAME VARIABLE 
 3127,53: __buflen
 3127,61: VARIABLE
 
65 VARIABLE 
 3127,61: VARIABLE
 
187 ) 
 3127,61: )
 
60 ; 
 3129,6: ;
 
23 extern 
 3133,1: extern
 
8 int 
 3133,8: int
 
5 NAME VARIABLE 
 3133,12: isatty
 3133,18: VARIABLE
 
65 VARIABLE 
 3133,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3133,19: (
 3133,20: int
 3133,24: __fd
 3133,28: VARIABLE
 3133,28: )
 
186 int 
 3133,20: int
 
298 NAME VARIABLE 
 3133,24: __fd
 3133,28: VARIABLE
 
65 VARIABLE 
 3133,28: VARIABLE
 
187 ) 
 3133,28: )
 
60 ; 
 3133,30: ;
 
23 extern 
 3138,1: extern
 
8 int 
 3138,8: int
 
5 NAME VARIABLE 
 3138,12: ttyslot
 3138,19: VARIABLE
 
65 VARIABLE 
 3138,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3138,20: (
 3138,21: void
 3138,25: )
 
186 void 
 3138,21: void
 
187 ) 
 3138,25: )
 
60 ; 
 3138,27: ;
 
23 extern 
 3143,1: extern
 
8 int 
 3143,8: int
 
5 NAME VARIABLE 
 3143,12: link
 3143,16: VARIABLE
 
65 VARIABLE 
 3143,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3143,17: (
 3143,18: const
 3143,24: char
 3143,29: *
 3143,30: __from
 3143,36: VARIABLE
 3143,36: ,
 3143,38: const
 3143,44: char
 3143,49: *
 3143,50: __to
 3143,54: VARIABLE
 3143,54: )
 
186 const 
 3143,18: const
 
103 char 
 3143,24: char
 
298 * option_type_qualifier_list option_pointer 
 3143,29: *
 
386 NAME VARIABLE 
 3143,30: __from
 3143,36: VARIABLE
 
65 VARIABLE 
 3143,36: VARIABLE
 
300 , parameter_declaration 
 3143,36: ,
 3143,38: const
 3143,44: char
 3143,49: *
 3143,50: __to
 3143,54: VARIABLE
 
391 const 
 3143,38: const
 
103 char 
 3143,44: char
 
298 * option_type_qualifier_list option_pointer 
 3143,49: *
 
386 NAME VARIABLE 
 3143,50: __to
 3143,54: VARIABLE
 
65 VARIABLE 
 3143,54: VARIABLE
 
187 ) 
 3143,54: )
 
60 ; 
 3144,8: ;
 
23 extern 
 3149,1: extern
 
8 int 
 3149,8: int
 
5 NAME VARIABLE 
 3149,12: linkat
 3149,18: VARIABLE
 
65 VARIABLE 
 3149,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3149,19: (
 3149,20: int
 3149,24: __fromfd
 3149,32: VARIABLE
 3149,32: ,
 3149,34: const
 3149,40: char
 3149,45: *
 3149,46: __from
 3149,52: VARIABLE
 3149,52: ,
 3149,54: int
 3149,58: __tofd
 3149,64: VARIABLE
 3149,64: ,
 3150,6: const
 3150,12: char
 3150,17: *
 3150,18: __to
 3150,22: VARIABLE
 3150,22: ,
 3150,24: int
 3150,28: __flags
 3150,35: VARIABLE
 3150,35: )
 
186 int 
 3149,20: int
 
298 NAME VARIABLE 
 3149,24: __fromfd
 3149,32: VARIABLE
 
65 VARIABLE 
 3149,32: VARIABLE
 
300 , parameter_declaration 
 3149,32: ,
 3149,34: const
 3149,40: char
 3149,45: *
 3149,46: __from
 3149,52: VARIABLE
 
391 const 
 3149,34: const
 
103 char 
 3149,40: char
 
298 * option_type_qualifier_list option_pointer 
 3149,45: *
 
386 NAME VARIABLE 
 3149,46: __from
 3149,52: VARIABLE
 
65 VARIABLE 
 3149,52: VARIABLE
 
300 , parameter_declaration 
 3149,52: ,
 3149,54: int
 3149,58: __tofd
 3149,64: VARIABLE
 
391 int 
 3149,54: int
 
298 NAME VARIABLE 
 3149,58: __tofd
 3149,64: VARIABLE
 
65 VARIABLE 
 3149,64: VARIABLE
 
300 , parameter_declaration 
 3149,64: ,
 3150,6: const
 3150,12: char
 3150,17: *
 3150,18: __to
 3150,22: VARIABLE
 
391 const 
 3150,6: const
 
103 char 
 3150,12: char
 
298 * option_type_qualifier_list option_pointer 
 3150,17: *
 
386 NAME VARIABLE 
 3150,18: __to
 3150,22: VARIABLE
 
65 VARIABLE 
 3150,22: VARIABLE
 
300 , parameter_declaration 
 3150,22: ,
 3150,24: int
 3150,28: __flags
 3150,35: VARIABLE
 
391 int 
 3150,24: int
 
298 NAME VARIABLE 
 3150,28: __flags
 3150,35: VARIABLE
 
65 VARIABLE 
 3150,35: VARIABLE
 
187 ) 
 3150,35: )
 
60 ; 
 3151,8: ;
 
23 extern 
 3156,1: extern
 
8 int 
 3156,8: int
 
5 NAME VARIABLE 
 3156,12: symlink
 3156,19: VARIABLE
 
65 VARIABLE 
 3156,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3156,20: (
 3156,21: const
 3156,27: char
 3156,32: *
 3156,33: __from
 3156,39: VARIABLE
 3156,39: ,
 3156,41: const
 3156,47: char
 3156,52: *
 3156,53: __to
 3156,57: VARIABLE
 3156,57: )
 
186 const 
 3156,21: const
 
103 char 
 3156,27: char
 
298 * option_type_qualifier_list option_pointer 
 3156,32: *
 
386 NAME VARIABLE 
 3156,33: __from
 3156,39: VARIABLE
 
65 VARIABLE 
 3156,39: VARIABLE
 
300 , parameter_declaration 
 3156,39: ,
 3156,41: const
 3156,47: char
 3156,52: *
 3156,53: __to
 3156,57: VARIABLE
 
391 const 
 3156,41: const
 
103 char 
 3156,47: char
 
298 * option_type_qualifier_list option_pointer 
 3156,52: *
 
386 NAME VARIABLE 
 3156,53: __to
 3156,57: VARIABLE
 
65 VARIABLE 
 3156,57: VARIABLE
 
187 ) 
 3156,57: )
 
60 ; 
 3157,8: ;
 
23 extern 
 3162,1: extern
 
8 NAME TYPE 
 3162,8: ssize_t
 3162,15: TYPE
 
26 TYPE 
 3162,15: TYPE
 
5 NAME VARIABLE 
 3162,16: readlink
 3162,24: VARIABLE
 
65 VARIABLE 
 3162,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3162,25: (
 3162,26: const
 3162,32: char
 3162,37: *
 3162,39: __path
 3162,45: VARIABLE
 3162,45: ,
 3163,5: char
 3163,10: *
 3163,12: __buf
 3163,17: VARIABLE
 3163,17: ,
 3163,19: size_t
 3163,25: TYPE
 3163,26: __len
 3163,31: VARIABLE
 3163,31: )
 
186 const 
 3162,26: const
 
103 char 
 3162,32: char
 
298 * option_type_qualifier_list option_pointer 
 3162,37: *
 
386 NAME VARIABLE 
 3162,39: __path
 3162,45: VARIABLE
 
65 VARIABLE 
 3162,45: VARIABLE
 
300 , parameter_declaration 
 3162,45: ,
 3163,5: char
 3163,10: *
 3163,12: __buf
 3163,17: VARIABLE
 
391 char 
 3163,5: char
 
298 * option_type_qualifier_list option_pointer 
 3163,10: *
 
386 NAME VARIABLE 
 3163,12: __buf
 3163,17: VARIABLE
 
65 VARIABLE 
 3163,17: VARIABLE
 
300 , parameter_declaration 
 3163,17: ,
 3163,19: size_t
 3163,25: TYPE
 3163,26: __len
 3163,31: VARIABLE
 
391 NAME TYPE 
 3163,19: size_t
 3163,25: TYPE
 
26 TYPE 
 3163,25: TYPE
 
298 NAME VARIABLE 
 3163,26: __len
 3163,31: VARIABLE
 
65 VARIABLE 
 3163,31: VARIABLE
 
187 ) 
 3163,31: )
 
60 ; 
 3165,6: ;
 
23 extern 
 3171,1: extern
 
8 int 
 3171,8: int
 
5 NAME VARIABLE 
 3171,12: symlinkat
 3171,21: VARIABLE
 
65 VARIABLE 
 3171,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3171,22: (
 3171,23: const
 3171,29: char
 3171,34: *
 3171,35: __from
 3171,41: VARIABLE
 3171,41: ,
 3171,43: int
 3171,47: __tofd
 3171,53: VARIABLE
 3171,53: ,
 3172,9: const
 3172,15: char
 3172,20: *
 3172,21: __to
 3172,25: VARIABLE
 3172,25: )
 
186 const 
 3171,23: const
 
103 char 
 3171,29: char
 
298 * option_type_qualifier_list option_pointer 
 3171,34: *
 
386 NAME VARIABLE 
 3171,35: __from
 3171,41: VARIABLE
 
65 VARIABLE 
 3171,41: VARIABLE
 
300 , parameter_declaration 
 3171,41: ,
 3171,43: int
 3171,47: __tofd
 3171,53: VARIABLE
 
391 int 
 3171,43: int
 
298 NAME VARIABLE 
 3171,47: __tofd
 3171,53: VARIABLE
 
65 VARIABLE 
 3171,53: VARIABLE
 
300 , parameter_declaration 
 3171,53: ,
 3172,9: const
 3172,15: char
 3172,20: *
 3172,21: __to
 3172,25: VARIABLE
 
391 const 
 3172,9: const
 
103 char 
 3172,15: char
 
298 * option_type_qualifier_list option_pointer 
 3172,20: *
 
386 NAME VARIABLE 
 3172,21: __to
 3172,25: VARIABLE
 
65 VARIABLE 
 3172,25: VARIABLE
 
187 ) 
 3172,25: )
 
60 ; 
 3172,29: ;
 
23 extern 
 3175,1: extern
 
8 NAME TYPE 
 3175,8: ssize_t
 3175,15: TYPE
 
26 TYPE 
 3175,15: TYPE
 
5 NAME VARIABLE 
 3175,16: readlinkat
 3175,26: VARIABLE
 
65 VARIABLE 
 3175,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3175,27: (
 3175,28: int
 3175,32: __fd
 3175,36: VARIABLE
 3175,36: ,
 3175,38: const
 3175,44: char
 3175,49: *
 3175,51: __path
 3175,57: VARIABLE
 3175,57: ,
 3176,7: char
 3176,12: *
 3176,14: __buf
 3176,19: VARIABLE
 3176,19: ,
 3176,21: size_t
 3176,27: TYPE
 3176,28: __len
 3176,33: VARIABLE
 3176,33: )
 
186 int 
 3175,28: int
 
298 NAME VARIABLE 
 3175,32: __fd
 3175,36: VARIABLE
 
65 VARIABLE 
 3175,36: VARIABLE
 
300 , parameter_declaration 
 3175,36: ,
 3175,38: const
 3175,44: char
 3175,49: *
 3175,51: __path
 3175,57: VARIABLE
 
391 const 
 3175,38: const
 
103 char 
 3175,44: char
 
298 * option_type_qualifier_list option_pointer 
 3175,49: *
 
386 NAME VARIABLE 
 3175,51: __path
 3175,57: VARIABLE
 
65 VARIABLE 
 3175,57: VARIABLE
 
300 , parameter_declaration 
 3175,57: ,
 3176,7: char
 3176,12: *
 3176,14: __buf
 3176,19: VARIABLE
 
391 char 
 3176,7: char
 
298 * option_type_qualifier_list option_pointer 
 3176,12: *
 
386 NAME VARIABLE 
 3176,14: __buf
 3176,19: VARIABLE
 
65 VARIABLE 
 3176,19: VARIABLE
 
300 , parameter_declaration 
 3176,19: ,
 3176,21: size_t
 3176,27: TYPE
 3176,28: __len
 3176,33: VARIABLE
 
391 NAME TYPE 
 3176,21: size_t
 3176,27: TYPE
 
26 TYPE 
 3176,27: TYPE
 
298 NAME VARIABLE 
 3176,28: __len
 3176,33: VARIABLE
 
65 VARIABLE 
 3176,33: VARIABLE
 
187 ) 
 3176,33: )
 
60 ; 
 3178,6: ;
 
23 extern 
 3182,1: extern
 
8 int 
 3182,8: int
 
5 NAME VARIABLE 
 3182,12: unlink
 3182,18: VARIABLE
 
65 VARIABLE 
 3182,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3182,19: (
 3182,20: const
 3182,26: char
 3182,31: *
 3182,32: __name
 3182,38: VARIABLE
 3182,38: )
 
186 const 
 3182,20: const
 
103 char 
 3182,26: char
 
298 * option_type_qualifier_list option_pointer 
 3182,31: *
 
386 NAME VARIABLE 
 3182,32: __name
 3182,38: VARIABLE
 
65 VARIABLE 
 3182,38: VARIABLE
 
187 ) 
 3182,38: )
 
60 ; 
 3182,41: ;
 
23 extern 
 3186,1: extern
 
8 int 
 3186,8: int
 
5 NAME VARIABLE 
 3186,12: unlinkat
 3186,20: VARIABLE
 
65 VARIABLE 
 3186,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3186,21: (
 3186,22: int
 3186,26: __fd
 3186,30: VARIABLE
 3186,30: ,
 3186,32: const
 3186,38: char
 3186,43: *
 3186,44: __name
 3186,50: VARIABLE
 3186,50: ,
 3186,52: int
 3186,56: __flag
 3186,62: VARIABLE
 3186,62: )
 
186 int 
 3186,22: int
 
298 NAME VARIABLE 
 3186,26: __fd
 3186,30: VARIABLE
 
65 VARIABLE 
 3186,30: VARIABLE
 
300 , parameter_declaration 
 3186,30: ,
 3186,32: const
 3186,38: char
 3186,43: *
 3186,44: __name
 3186,50: VARIABLE
 
391 const 
 3186,32: const
 
103 char 
 3186,38: char
 
298 * option_type_qualifier_list option_pointer 
 3186,43: *
 
386 NAME VARIABLE 
 3186,44: __name
 3186,50: VARIABLE
 
65 VARIABLE 
 3186,50: VARIABLE
 
300 , parameter_declaration 
 3186,50: ,
 3186,52: int
 3186,56: __flag
 3186,62: VARIABLE
 
391 int 
 3186,52: int
 
298 NAME VARIABLE 
 3186,56: __flag
 3186,62: VARIABLE
 
65 VARIABLE 
 3186,62: VARIABLE
 
187 ) 
 3186,62: )
 
60 ; 
 3187,7: ;
 
23 extern 
 3191,1: extern
 
8 int 
 3191,8: int
 
5 NAME VARIABLE 
 3191,12: rmdir
 3191,17: VARIABLE
 
65 VARIABLE 
 3191,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3191,18: (
 3191,19: const
 3191,25: char
 3191,30: *
 3191,31: __path
 3191,37: VARIABLE
 3191,37: )
 
186 const 
 3191,19: const
 
103 char 
 3191,25: char
 
298 * option_type_qualifier_list option_pointer 
 3191,30: *
 
386 NAME VARIABLE 
 3191,31: __path
 3191,37: VARIABLE
 
65 VARIABLE 
 3191,37: VARIABLE
 
187 ) 
 3191,37: )
 
60 ; 
 3191,40: ;
 
23 extern 
 3195,1: extern
 
8 NAME TYPE 
 3195,8: __pid_t
 3195,15: TYPE
 
26 TYPE 
 3195,15: TYPE
 
5 NAME VARIABLE 
 3195,16: tcgetpgrp
 3195,25: VARIABLE
 
65 VARIABLE 
 3195,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3195,26: (
 3195,27: int
 3195,31: __fd
 3195,35: VARIABLE
 3195,35: )
 
186 int 
 3195,27: int
 
298 NAME VARIABLE 
 3195,31: __fd
 3195,35: VARIABLE
 
65 VARIABLE 
 3195,35: VARIABLE
 
187 ) 
 3195,35: )
 
60 ; 
 3195,37: ;
 
23 extern 
 3198,1: extern
 
8 int 
 3198,8: int
 
5 NAME VARIABLE 
 3198,12: tcsetpgrp
 3198,21: VARIABLE
 
65 VARIABLE 
 3198,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3198,22: (
 3198,23: int
 3198,27: __fd
 3198,31: VARIABLE
 3198,31: ,
 3198,33: __pid_t
 3198,40: TYPE
 3198,41: __pgrp_id
 3198,50: VARIABLE
 3198,50: )
 
186 int 
 3198,23: int
 
298 NAME VARIABLE 
 3198,27: __fd
 3198,31: VARIABLE
 
65 VARIABLE 
 3198,31: VARIABLE
 
300 , parameter_declaration 
 3198,31: ,
 3198,33: __pid_t
 3198,40: TYPE
 3198,41: __pgrp_id
 3198,50: VARIABLE
 
391 NAME TYPE 
 3198,33: __pid_t
 3198,40: TYPE
 
26 TYPE 
 3198,40: TYPE
 
298 NAME VARIABLE 
 3198,41: __pgrp_id
 3198,50: VARIABLE
 
65 VARIABLE 
 3198,50: VARIABLE
 
187 ) 
 3198,50: )
 
60 ; 
 3198,52: ;
 
23 extern 
 3205,1: extern
 
8 char 
 3205,8: char
 
5 * option_type_qualifier_list option_pointer 
 3205,13: *
 
64 NAME VARIABLE 
 3205,14: getlogin
 3205,22: VARIABLE
 
65 VARIABLE 
 3205,22: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 3205,23: (
 3205,24: void
 3205,28: )
 
186 void 
 3205,24: void
 
187 ) 
 3205,28: )
 
60 ; 
 3205,29: ;
 
23 extern 
 3213,1: extern
 
8 int 
 3213,8: int
 
5 NAME VARIABLE 
 3213,12: getlogin_r
 3213,22: VARIABLE
 
65 VARIABLE 
 3213,22: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3213,23: (
 3213,24: char
 3213,29: *
 3213,30: __name
 3213,36: VARIABLE
 3213,36: ,
 3213,38: size_t
 3213,44: TYPE
 3213,45: __name_len
 3213,55: VARIABLE
 3213,55: )
 
186 char 
 3213,24: char
 
298 * option_type_qualifier_list option_pointer 
 3213,29: *
 
386 NAME VARIABLE 
 3213,30: __name
 3213,36: VARIABLE
 
65 VARIABLE 
 3213,36: VARIABLE
 
300 , parameter_declaration 
 3213,36: ,
 3213,38: size_t
 3213,44: TYPE
 3213,45: __name_len
 3213,55: VARIABLE
 
391 NAME TYPE 
 3213,38: size_t
 3213,44: TYPE
 
26 TYPE 
 3213,44: TYPE
 
298 NAME VARIABLE 
 3213,45: __name_len
 3213,55: VARIABLE
 
65 VARIABLE 
 3213,55: VARIABLE
 
187 ) 
 3213,55: )
 
60 ; 
 3214,5: ;
 
23 extern 
 3219,1: extern
 
8 int 
 3219,8: int
 
5 NAME VARIABLE 
 3219,12: setlogin
 3219,20: VARIABLE
 
65 VARIABLE 
 3219,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3219,21: (
 3219,22: const
 3219,28: char
 3219,33: *
 3219,34: __name
 3219,40: VARIABLE
 3219,40: )
 
186 const 
 3219,22: const
 
103 char 
 3219,28: char
 
298 * option_type_qualifier_list option_pointer 
 3219,33: *
 
386 NAME VARIABLE 
 3219,34: __name
 3219,40: VARIABLE
 
65 VARIABLE 
 3219,40: VARIABLE
 
187 ) 
 3219,40: )
 
60 ; 
 3219,43: ;
 
23 extern 
 3239,1: extern
 
8 char 
 3239,8: char
 
5 * option_type_qualifier_list option_pointer 
 3239,13: *
 
64 NAME VARIABLE 
 3239,14: optarg
 3239,20: VARIABLE
 
65 VARIABLE 
 3239,20: VARIABLE
 
60 ; 
 3239,20: ;
 
23 extern 
 3241,1: extern
 
8 int 
 3241,8: int
 
5 NAME VARIABLE 
 3241,12: optind
 3241,18: VARIABLE
 
65 VARIABLE 
 3241,18: VARIABLE
 
60 ; 
 3241,18: ;
 
23 extern 
 3246,1: extern
 
8 int 
 3246,8: int
 
5 NAME VARIABLE 
 3246,12: opterr
 3246,18: VARIABLE
 
65 VARIABLE 
 3246,18: VARIABLE
 
60 ; 
 3246,18: ;
 
23 extern 
 3250,1: extern
 
8 int 
 3250,8: int
 
5 NAME VARIABLE 
 3250,12: optopt
 3250,18: VARIABLE
 
65 VARIABLE 
 3250,18: VARIABLE
 
60 ; 
 3250,18: ;
 
23 extern 
 3252,1: extern
 
8 int 
 3252,8: int
 
5 NAME VARIABLE 
 3252,12: getopt
 3252,18: VARIABLE
 
65 VARIABLE 
 3252,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3252,19: (
 3252,20: int
 3252,24: ___argc
 3252,31: VARIABLE
 3252,31: ,
 3252,33: char
 3252,38: *
 3252,39: const
 3252,45: *
 3252,46: ___argv
 3252,53: VARIABLE
 3252,53: ,
 3252,55: const
 3252,61: char
 3252,66: *
 3252,67: __shortopts
 3252,78: VARIABLE
 3252,78: )
 
186 int 
 3252,20: int
 
298 NAME VARIABLE 
 3252,24: ___argc
 3252,31: VARIABLE
 
65 VARIABLE 
 3252,31: VARIABLE
 
300 , parameter_declaration 
 3252,31: ,
 3252,33: char
 3252,38: *
 3252,39: const
 3252,45: *
 3252,46: ___argv
 3252,53: VARIABLE
 
391 char 
 3252,33: char
 
298 * option_type_qualifier_list option_pointer 
 3252,38: *
 3252,39: const
 3252,45: *
 
116 const 
 3252,39: const
 
116 * option_type_qualifier_list option_pointer 
 3252,45: *
 
386 NAME VARIABLE 
 3252,46: ___argv
 3252,53: VARIABLE
 
65 VARIABLE 
 3252,53: VARIABLE
 
300 , parameter_declaration 
 3252,53: ,
 3252,55: const
 3252,61: char
 3252,66: *
 3252,67: __shortopts
 3252,78: VARIABLE
 
391 const 
 3252,55: const
 
103 char 
 3252,61: char
 
298 * option_type_qualifier_list option_pointer 
 3252,66: *
 
386 NAME VARIABLE 
 3252,67: __shortopts
 3252,78: VARIABLE
 
65 VARIABLE 
 3252,78: VARIABLE
 
187 ) 
 3252,78: )
 
60 ; 
 3253,9: ;
 
23 extern 
 3269,1: extern
 
8 int 
 3269,8: int
 
5 NAME VARIABLE 
 3269,12: gethostname
 3269,23: VARIABLE
 
65 VARIABLE 
 3269,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3269,24: (
 3269,25: char
 3269,30: *
 3269,31: __name
 3269,37: VARIABLE
 3269,37: ,
 3269,39: size_t
 3269,45: TYPE
 3269,46: __len
 3269,51: VARIABLE
 3269,51: )
 
186 char 
 3269,25: char
 
298 * option_type_qualifier_list option_pointer 
 3269,30: *
 
386 NAME VARIABLE 
 3269,31: __name
 3269,37: VARIABLE
 
65 VARIABLE 
 3269,37: VARIABLE
 
300 , parameter_declaration 
 3269,37: ,
 3269,39: size_t
 3269,45: TYPE
 3269,46: __len
 3269,51: VARIABLE
 
391 NAME TYPE 
 3269,39: size_t
 3269,45: TYPE
 
26 TYPE 
 3269,45: TYPE
 
298 NAME VARIABLE 
 3269,46: __len
 3269,51: VARIABLE
 
65 VARIABLE 
 3269,51: VARIABLE
 
187 ) 
 3269,51: )
 
60 ; 
 3270,5: ;
 
23 extern 
 3277,1: extern
 
8 int 
 3277,8: int
 
5 NAME VARIABLE 
 3277,12: sethostname
 3277,23: VARIABLE
 
65 VARIABLE 
 3277,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3277,24: (
 3277,25: const
 3277,31: char
 3277,36: *
 3277,37: __name
 3277,43: VARIABLE
 3277,43: ,
 3277,45: size_t
 3277,51: TYPE
 3277,52: __len
 3277,57: VARIABLE
 3277,57: )
 
186 const 
 3277,25: const
 
103 char 
 3277,31: char
 
298 * option_type_qualifier_list option_pointer 
 3277,36: *
 
386 NAME VARIABLE 
 3277,37: __name
 3277,43: VARIABLE
 
65 VARIABLE 
 3277,43: VARIABLE
 
300 , parameter_declaration 
 3277,43: ,
 3277,45: size_t
 3277,51: TYPE
 3277,52: __len
 3277,57: VARIABLE
 
391 NAME TYPE 
 3277,45: size_t
 3277,51: TYPE
 
26 TYPE 
 3277,51: TYPE
 
298 NAME VARIABLE 
 3277,52: __len
 3277,57: VARIABLE
 
65 VARIABLE 
 3277,57: VARIABLE
 
187 ) 
 3277,57: )
 
60 ; 
 3278,8: ;
 
23 extern 
 3282,1: extern
 
8 int 
 3282,8: int
 
5 NAME VARIABLE 
 3282,12: sethostid
 3282,21: VARIABLE
 
65 VARIABLE 
 3282,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3282,22: (
 3282,23: long
 3282,28: int
 3282,32: __id
 3282,36: VARIABLE
 3282,36: )
 
186 long 
 3282,23: long
 
106 int 
 3282,28: int
 
298 NAME VARIABLE 
 3282,32: __id
 3282,36: VARIABLE
 
65 VARIABLE 
 3282,36: VARIABLE
 
187 ) 
 3282,36: )
 
60 ; 
 3282,39: ;
 
23 extern 
 3288,1: extern
 
8 int 
 3288,8: int
 
5 NAME VARIABLE 
 3288,12: getdomainname
 3288,25: VARIABLE
 
65 VARIABLE 
 3288,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3288,26: (
 3288,27: char
 3288,32: *
 3288,33: __name
 3288,39: VARIABLE
 3288,39: ,
 3288,41: size_t
 3288,47: TYPE
 3288,48: __len
 3288,53: VARIABLE
 3288,53: )
 
186 char 
 3288,27: char
 
298 * option_type_qualifier_list option_pointer 
 3288,32: *
 
386 NAME VARIABLE 
 3288,33: __name
 3288,39: VARIABLE
 
65 VARIABLE 
 3288,39: VARIABLE
 
300 , parameter_declaration 
 3288,39: ,
 3288,41: size_t
 3288,47: TYPE
 3288,48: __len
 3288,53: VARIABLE
 
391 NAME TYPE 
 3288,41: size_t
 3288,47: TYPE
 
26 TYPE 
 3288,47: TYPE
 
298 NAME VARIABLE 
 3288,48: __len
 3288,53: VARIABLE
 
65 VARIABLE 
 3288,53: VARIABLE
 
187 ) 
 3288,53: )
 
60 ; 
 3290,6: ;
 
23 extern 
 3291,1: extern
 
8 int 
 3291,8: int
 
5 NAME VARIABLE 
 3291,12: setdomainname
 3291,25: VARIABLE
 
65 VARIABLE 
 3291,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3291,26: (
 3291,27: const
 3291,33: char
 3291,38: *
 3291,39: __name
 3291,45: VARIABLE
 3291,45: ,
 3291,47: size_t
 3291,53: TYPE
 3291,54: __len
 3291,59: VARIABLE
 3291,59: )
 
186 const 
 3291,27: const
 
103 char 
 3291,33: char
 
298 * option_type_qualifier_list option_pointer 
 3291,38: *
 
386 NAME VARIABLE 
 3291,39: __name
 3291,45: VARIABLE
 
65 VARIABLE 
 3291,45: VARIABLE
 
300 , parameter_declaration 
 3291,45: ,
 3291,47: size_t
 3291,53: TYPE
 3291,54: __len
 3291,59: VARIABLE
 
391 NAME TYPE 
 3291,47: size_t
 3291,53: TYPE
 
26 TYPE 
 3291,53: TYPE
 
298 NAME VARIABLE 
 3291,54: __len
 3291,59: VARIABLE
 
65 VARIABLE 
 3291,59: VARIABLE
 
187 ) 
 3291,59: )
 
60 ; 
 3292,8: ;
 
23 extern 
 3297,1: extern
 
8 int 
 3297,8: int
 
5 NAME VARIABLE 
 3297,12: vhangup
 3297,19: VARIABLE
 
65 VARIABLE 
 3297,19: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3297,20: (
 3297,21: void
 3297,25: )
 
186 void 
 3297,21: void
 
187 ) 
 3297,25: )
 
60 ; 
 3297,27: ;
 
23 extern 
 3300,1: extern
 
8 int 
 3300,8: int
 
5 NAME VARIABLE 
 3300,12: revoke
 3300,18: VARIABLE
 
65 VARIABLE 
 3300,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3300,19: (
 3300,20: const
 3300,26: char
 3300,31: *
 3300,32: __file
 3300,38: VARIABLE
 3300,38: )
 
186 const 
 3300,20: const
 
103 char 
 3300,26: char
 
298 * option_type_qualifier_list option_pointer 
 3300,31: *
 
386 NAME VARIABLE 
 3300,32: __file
 3300,38: VARIABLE
 
65 VARIABLE 
 3300,38: VARIABLE
 
187 ) 
 3300,38: )
 
60 ; 
 3300,42: ;
 
23 extern 
 3308,1: extern
 
8 int 
 3308,8: int
 
5 NAME VARIABLE 
 3308,12: profil
 3308,18: VARIABLE
 
65 VARIABLE 
 3308,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3308,19: (
 3308,20: unsigned
 3308,29: short
 3308,35: int
 3308,39: *
 3308,40: __sample_buffer
 3308,55: VARIABLE
 3308,55: ,
 3308,57: size_t
 3308,63: TYPE
 3308,64: __size
 3308,70: VARIABLE
 3308,70: ,
 3309,6: size_t
 3309,12: TYPE
 3309,13: __offset
 3309,21: VARIABLE
 3309,21: ,
 3309,23: unsigned
 3309,32: int
 3309,36: __scale
 3309,43: VARIABLE
 3309,43: )
 
186 unsigned 
 3308,20: unsigned
 
106 short 
 3308,29: short
 
106 int 
 3308,35: int
 
298 * option_type_qualifier_list option_pointer 
 3308,39: *
 
386 NAME VARIABLE 
 3308,40: __sample_buffer
 3308,55: VARIABLE
 
65 VARIABLE 
 3308,55: VARIABLE
 
300 , parameter_declaration 
 3308,55: ,
 3308,57: size_t
 3308,63: TYPE
 3308,64: __size
 3308,70: VARIABLE
 
391 NAME TYPE 
 3308,57: size_t
 3308,63: TYPE
 
26 TYPE 
 3308,63: TYPE
 
298 NAME VARIABLE 
 3308,64: __size
 3308,70: VARIABLE
 
65 VARIABLE 
 3308,70: VARIABLE
 
300 , parameter_declaration 
 3308,70: ,
 3309,6: size_t
 3309,12: TYPE
 3309,13: __offset
 3309,21: VARIABLE
 
391 NAME TYPE 
 3309,6: size_t
 3309,12: TYPE
 
26 TYPE 
 3309,12: TYPE
 
298 NAME VARIABLE 
 3309,13: __offset
 3309,21: VARIABLE
 
65 VARIABLE 
 3309,21: VARIABLE
 
300 , parameter_declaration 
 3309,21: ,
 3309,23: unsigned
 3309,32: int
 3309,36: __scale
 3309,43: VARIABLE
 
391 unsigned 
 3309,23: unsigned
 
106 int 
 3309,32: int
 
298 NAME VARIABLE 
 3309,36: __scale
 3309,43: VARIABLE
 
65 VARIABLE 
 3309,43: VARIABLE
 
187 ) 
 3309,43: )
 
60 ; 
 3310,7: ;
 
23 extern 
 3316,1: extern
 
8 int 
 3316,8: int
 
5 NAME VARIABLE 
 3316,12: acct
 3316,16: VARIABLE
 
65 VARIABLE 
 3316,16: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3316,17: (
 3316,18: const
 3316,24: char
 3316,29: *
 3316,30: __name
 3316,36: VARIABLE
 3316,36: )
 
186 const 
 3316,18: const
 
103 char 
 3316,24: char
 
298 * option_type_qualifier_list option_pointer 
 3316,29: *
 
386 NAME VARIABLE 
 3316,30: __name
 3316,36: VARIABLE
 
65 VARIABLE 
 3316,36: VARIABLE
 
187 ) 
 3316,36: )
 
60 ; 
 3316,38: ;
 
23 extern 
 3320,1: extern
 
8 char 
 3320,8: char
 
5 * option_type_qualifier_list option_pointer 
 3320,13: *
 
64 NAME VARIABLE 
 3320,14: getusershell
 3320,26: VARIABLE
 
65 VARIABLE 
 3320,26: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 3320,27: (
 3320,28: void
 3320,32: )
 
186 void 
 3320,28: void
 
187 ) 
 3320,32: )
 
60 ; 
 3320,34: ;
 
23 extern 
 3321,1: extern
 
8 void 
 3321,8: void
 
5 NAME VARIABLE 
 3321,13: endusershell
 3321,25: VARIABLE
 
65 VARIABLE 
 3321,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3321,26: (
 3321,27: void
 3321,31: )
 
186 void 
 3321,27: void
 
187 ) 
 3321,31: )
 
60 ; 
 3321,33: ;
 
23 extern 
 3322,1: extern
 
8 void 
 3322,8: void
 
5 NAME VARIABLE 
 3322,13: setusershell
 3322,25: VARIABLE
 
65 VARIABLE 
 3322,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3322,26: (
 3322,27: void
 3322,31: )
 
186 void 
 3322,27: void
 
187 ) 
 3322,31: )
 
60 ; 
 3322,33: ;
 
23 extern 
 3328,1: extern
 
8 int 
 3328,8: int
 
5 NAME VARIABLE 
 3328,12: daemon
 3328,18: VARIABLE
 
65 VARIABLE 
 3328,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3328,19: (
 3328,20: int
 3328,24: __nochdir
 3328,33: VARIABLE
 3328,33: ,
 3328,35: int
 3328,39: __noclose
 3328,48: VARIABLE
 3328,48: )
 
186 int 
 3328,20: int
 
298 NAME VARIABLE 
 3328,24: __nochdir
 3328,33: VARIABLE
 
65 VARIABLE 
 3328,33: VARIABLE
 
300 , parameter_declaration 
 3328,33: ,
 3328,35: int
 3328,39: __noclose
 3328,48: VARIABLE
 
391 int 
 3328,35: int
 
298 NAME VARIABLE 
 3328,39: __noclose
 3328,48: VARIABLE
 
65 VARIABLE 
 3328,48: VARIABLE
 
187 ) 
 3328,48: )
 
60 ; 
 3328,51: ;
 
23 extern 
 3335,1: extern
 
8 int 
 3335,8: int
 
5 NAME VARIABLE 
 3335,12: chroot
 3335,18: VARIABLE
 
65 VARIABLE 
 3335,18: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3335,19: (
 3335,20: const
 3335,26: char
 3335,31: *
 3335,32: __path
 3335,38: VARIABLE
 3335,38: )
 
186 const 
 3335,20: const
 
103 char 
 3335,26: char
 
298 * option_type_qualifier_list option_pointer 
 3335,31: *
 
386 NAME VARIABLE 
 3335,32: __path
 3335,38: VARIABLE
 
65 VARIABLE 
 3335,38: VARIABLE
 
187 ) 
 3335,38: )
 
60 ; 
 3335,42: ;
 
23 extern 
 3339,1: extern
 
8 char 
 3339,8: char
 
5 * option_type_qualifier_list option_pointer 
 3339,13: *
 
64 NAME VARIABLE 
 3339,14: getpass
 3339,21: VARIABLE
 
65 VARIABLE 
 3339,21: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 3339,22: (
 3339,23: const
 3339,29: char
 3339,34: *
 3339,35: __prompt
 3339,43: VARIABLE
 3339,43: )
 
186 const 
 3339,23: const
 
103 char 
 3339,29: char
 
298 * option_type_qualifier_list option_pointer 
 3339,34: *
 
386 NAME VARIABLE 
 3339,35: __prompt
 3339,43: VARIABLE
 
65 VARIABLE 
 3339,43: VARIABLE
 
187 ) 
 3339,43: )
 
60 ; 
 3339,45: ;
 
23 extern 
 3347,1: extern
 
8 int 
 3347,8: int
 
5 NAME VARIABLE 
 3347,12: fsync
 3347,17: VARIABLE
 
65 VARIABLE 
 3347,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3347,18: (
 3347,19: int
 3347,23: __fd
 3347,27: VARIABLE
 3347,27: )
 
186 int 
 3347,19: int
 
298 NAME VARIABLE 
 3347,23: __fd
 3347,27: VARIABLE
 
65 VARIABLE 
 3347,27: VARIABLE
 
187 ) 
 3347,27: )
 
60 ; 
 3347,28: ;
 
23 extern 
 3349,1: extern
 
8 long 
 3349,8: long
 
17 int 
 3349,13: int
 
5 NAME VARIABLE 
 3349,17: gethostid
 3349,26: VARIABLE
 
65 VARIABLE 
 3349,26: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3349,27: (
 3349,28: void
 3349,32: )
 
186 void 
 3349,28: void
 
187 ) 
 3349,32: )
 
60 ; 
 3349,33: ;
 
23 extern 
 3352,1: extern
 
8 void 
 3352,8: void
 
5 NAME VARIABLE 
 3352,13: sync
 3352,17: VARIABLE
 
65 VARIABLE 
 3352,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3352,18: (
 3352,19: void
 3352,23: )
 
186 void 
 3352,19: void
 
187 ) 
 3352,23: )
 
60 ; 
 3352,25: ;
 
23 extern 
 3358,1: extern
 
8 int 
 3358,8: int
 
5 NAME VARIABLE 
 3358,12: getpagesize
 3358,23: VARIABLE
 
65 VARIABLE 
 3358,23: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3358,24: (
 3358,25: void
 3358,29: )
 
186 void 
 3358,25: void
 
187 ) 
 3358,29: )
 
60 ; 
 3358,32: ;
 
23 extern 
 3363,1: extern
 
8 int 
 3363,8: int
 
5 NAME VARIABLE 
 3363,12: getdtablesize
 3363,25: VARIABLE
 
65 VARIABLE 
 3363,25: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3363,26: (
 3363,27: void
 3363,31: )
 
186 void 
 3363,27: void
 
187 ) 
 3363,31: )
 
60 ; 
 3363,33: ;
 
23 extern 
 3365,1: extern
 
8 int 
 3365,8: int
 
5 NAME VARIABLE 
 3365,12: truncate
 3365,20: VARIABLE
 
65 VARIABLE 
 3365,20: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3365,21: (
 3365,22: const
 3365,28: char
 3365,33: *
 3365,34: __file
 3365,40: VARIABLE
 3365,40: ,
 3365,42: __off_t
 3365,49: TYPE
 3365,50: __length
 3365,58: VARIABLE
 3365,58: )
 
186 const 
 3365,22: const
 
103 char 
 3365,28: char
 
298 * option_type_qualifier_list option_pointer 
 3365,33: *
 
386 NAME VARIABLE 
 3365,34: __file
 3365,40: VARIABLE
 
65 VARIABLE 
 3365,40: VARIABLE
 
300 , parameter_declaration 
 3365,40: ,
 3365,42: __off_t
 3365,49: TYPE
 3365,50: __length
 3365,58: VARIABLE
 
391 NAME TYPE 
 3365,42: __off_t
 3365,49: TYPE
 
26 TYPE 
 3365,49: TYPE
 
298 NAME VARIABLE 
 3365,50: __length
 3365,58: VARIABLE
 
65 VARIABLE 
 3365,58: VARIABLE
 
187 ) 
 3365,58: )
 
60 ; 
 3366,8: ;
 
23 extern 
 3368,1: extern
 
8 int 
 3368,8: int
 
5 NAME VARIABLE 
 3368,12: ftruncate
 3368,21: VARIABLE
 
65 VARIABLE 
 3368,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3368,22: (
 3368,23: int
 3368,27: __fd
 3368,31: VARIABLE
 3368,31: ,
 3368,33: __off_t
 3368,40: TYPE
 3368,41: __length
 3368,49: VARIABLE
 3368,49: )
 
186 int 
 3368,23: int
 
298 NAME VARIABLE 
 3368,27: __fd
 3368,31: VARIABLE
 
65 VARIABLE 
 3368,31: VARIABLE
 
300 , parameter_declaration 
 3368,31: ,
 3368,33: __off_t
 3368,40: TYPE
 3368,41: __length
 3368,49: VARIABLE
 
391 NAME TYPE 
 3368,33: __off_t
 3368,40: TYPE
 
26 TYPE 
 3368,40: TYPE
 
298 NAME VARIABLE 
 3368,41: __length
 3368,49: VARIABLE
 
65 VARIABLE 
 3368,49: VARIABLE
 
187 ) 
 3368,49: )
 
60 ; 
 3368,52: ;
 
23 extern 
 3370,1: extern
 
8 int 
 3370,8: int
 
5 NAME VARIABLE 
 3370,12: brk
 3370,15: VARIABLE
 
65 VARIABLE 
 3370,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3370,16: (
 3370,17: void
 3370,22: *
 3370,23: __addr
 3370,29: VARIABLE
 3370,29: )
 
186 void 
 3370,17: void
 
298 * option_type_qualifier_list option_pointer 
 3370,22: *
 
386 NAME VARIABLE 
 3370,23: __addr
 3370,29: VARIABLE
 
65 VARIABLE 
 3370,29: VARIABLE
 
187 ) 
 3370,29: )
 
60 ; 
 3370,32: ;
 
23 extern 
 3376,1: extern
 
8 void 
 3376,8: void
 
5 * option_type_qualifier_list option_pointer 
 3376,13: *
 
64 NAME VARIABLE 
 3376,14: sbrk
 3376,18: VARIABLE
 
65 VARIABLE 
 3376,18: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 3376,19: (
 3376,20: intptr_t
 3376,28: TYPE
 3376,29: __delta
 3376,36: VARIABLE
 3376,36: )
 
186 NAME TYPE 
 3376,20: intptr_t
 3376,28: TYPE
 
65 TYPE 
 3376,28: TYPE
 
298 NAME VARIABLE 
 3376,29: __delta
 3376,36: VARIABLE
 
65 VARIABLE 
 3376,36: VARIABLE
 
187 ) 
 3376,36: )
 
60 ; 
 3376,38: ;
 
23 extern 
 3378,1: extern
 
8 long 
 3378,8: long
 
17 int 
 3378,13: int
 
5 NAME VARIABLE 
 3378,17: syscall
 3378,24: VARIABLE
 
65 VARIABLE 
 3378,24: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3378,25: (
 3378,26: long
 3378,31: int
 3378,35: __sysno
 3378,42: VARIABLE
 3378,42: ,
 3378,44: ...
 3378,47: )
 
186 long 
 3378,26: long
 
106 int 
 3378,31: int
 
298 NAME VARIABLE 
 3378,35: __sysno
 3378,42: VARIABLE
 
65 VARIABLE 
 3378,42: VARIABLE
 
300 , ... 
 3378,42: ,
 3378,44: ...
 
391 ... 
 3378,44: ...
 
187 ) 
 3378,47: )
 
60 ; 
 3378,49: ;
 
23 extern 
 3380,1: extern
 
8 int 
 3380,8: int
 
5 NAME VARIABLE 
 3380,12: lockf
 3380,17: VARIABLE
 
65 VARIABLE 
 3380,17: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3380,18: (
 3380,19: int
 3380,23: __fd
 3380,27: VARIABLE
 3380,27: ,
 3380,29: int
 3380,33: __cmd
 3380,38: VARIABLE
 3380,38: ,
 3380,40: __off_t
 3380,47: TYPE
 3380,48: __len
 3380,53: VARIABLE
 3380,53: )
 
186 int 
 3380,19: int
 
298 NAME VARIABLE 
 3380,23: __fd
 3380,27: VARIABLE
 
65 VARIABLE 
 3380,27: VARIABLE
 
300 , parameter_declaration 
 3380,27: ,
 3380,29: int
 3380,33: __cmd
 3380,38: VARIABLE
 
391 int 
 3380,29: int
 
298 NAME VARIABLE 
 3380,33: __cmd
 3380,38: VARIABLE
 
65 VARIABLE 
 3380,38: VARIABLE
 
300 , parameter_declaration 
 3380,38: ,
 3380,40: __off_t
 3380,47: TYPE
 3380,48: __len
 3380,53: VARIABLE
 
391 NAME TYPE 
 3380,40: __off_t
 3380,47: TYPE
 
26 TYPE 
 3380,47: TYPE
 
298 NAME VARIABLE 
 3380,48: __len
 3380,53: VARIABLE
 
65 VARIABLE 
 3380,53: VARIABLE
 
187 ) 
 3380,53: )
 
60 ; 
 3380,55: ;
 
23 extern 
 3382,1: extern
 
8 int 
 3382,8: int
 
5 NAME VARIABLE 
 3382,12: fdatasync
 3382,21: VARIABLE
 
65 VARIABLE 
 3382,21: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3382,22: (
 3382,23: int
 3382,27: __fildes
 3382,35: VARIABLE
 3382,35: )
 
186 int 
 3382,23: int
 
298 NAME VARIABLE 
 3382,27: __fildes
 3382,35: VARIABLE
 
65 VARIABLE 
 3382,35: VARIABLE
 
187 ) 
 3382,35: )
 
60 ; 
 3382,36: ;
 
23 extern 
 3384,1: extern
 
8 char 
 3384,8: char
 
5 * option_type_qualifier_list option_pointer 
 3384,13: *
 
64 NAME VARIABLE 
 3384,14: crypt
 3384,19: VARIABLE
 
65 VARIABLE 
 3384,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 3384,20: (
 3384,21: const
 3384,27: char
 3384,32: *
 3384,33: __key
 3384,38: VARIABLE
 3384,38: ,
 3384,40: const
 3384,46: char
 3384,51: *
 3384,52: __salt
 3384,58: VARIABLE
 3384,58: )
 
186 const 
 3384,21: const
 
103 char 
 3384,27: char
 
298 * option_type_qualifier_list option_pointer 
 3384,32: *
 
386 NAME VARIABLE 
 3384,33: __key
 3384,38: VARIABLE
 
65 VARIABLE 
 3384,38: VARIABLE
 
300 , parameter_declaration 
 3384,38: ,
 3384,40: const
 3384,46: char
 3384,51: *
 3384,52: __salt
 3384,58: VARIABLE
 
391 const 
 3384,40: const
 
103 char 
 3384,46: char
 
298 * option_type_qualifier_list option_pointer 
 3384,51: *
 
386 NAME VARIABLE 
 3384,52: __salt
 3384,58: VARIABLE
 
65 VARIABLE 
 3384,58: VARIABLE
 
187 ) 
 3384,58: )
 
60 ; 
 3385,7: ;
 
23 int 
 3387,1: int
 
5 NAME VARIABLE 
 3387,5: getentropy
 3387,15: VARIABLE
 
65 VARIABLE 
 3387,15: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3387,16: (
 3387,17: void
 3387,22: *
 3387,23: __buffer
 3387,31: VARIABLE
 3387,31: ,
 3387,33: size_t
 3387,39: TYPE
 3387,40: __length
 3387,48: VARIABLE
 3387,48: )
 
186 void 
 3387,17: void
 
298 * option_type_qualifier_list option_pointer 
 3387,22: *
 
386 NAME VARIABLE 
 3387,23: __buffer
 3387,31: VARIABLE
 
65 VARIABLE 
 3387,31: VARIABLE
 
300 , parameter_declaration 
 3387,31: ,
 3387,33: size_t
 3387,39: TYPE
 3387,40: __length
 3387,48: VARIABLE
 
391 NAME TYPE 
 3387,33: size_t
 3387,39: TYPE
 
26 TYPE 
 3387,39: TYPE
 
298 NAME VARIABLE 
 3387,40: __length
 3387,48: VARIABLE
 
65 VARIABLE 
 3387,48: VARIABLE
 
187 ) 
 3387,48: )
 
60 ; 
 3388,5: ;
 
23 typedef list_ge1_type_specifier_nonunique_declaration_specifier 
 3400,1: typedef
 3400,9: long
 
54 long 
 3400,9: long
 
6 NAME VARIABLE 
 3400,14: Aling
 3400,19: VARIABLE
 
65 VARIABLE 
 3400,19: VARIABLE
 
70 ; 
 3400,19: ;
 
23 union 
 3402,1: union
 
22 NAME VARIABLE 
 3402,7: header
 3402,13: VARIABLE
 
65 VARIABLE 
 3402,13: VARIABLE
 
89 { struct_declaration_list } 
 3403,1: {
 3404,3: struct
 3405,3: {
 3406,5: union
 3406,11: header
 3406,17: VARIABLE
 3406,18: *
 3406,19: free_block_p
 3406,31: VARIABLE
 3406,31: ;
 3407,5: size_t
 3407,11: TYPE
 3407,12: size
 3407,16: VARIABLE
 3407,16: ;
 3408,3: }
 3408,5: s
 3408,6: VARIABLE
 3408,6: ;
 3409,3: Aling
 3409,8: TYPE
 3409,9: x
 3409,10: VARIABLE
 3409,10: ;
 3410,1: }
 
126 struct 
 3404,3: struct
 
89 { struct_declaration_list } 
 3405,3: {
 3406,5: union
 3406,11: header
 3406,17: VARIABLE
 3406,18: *
 3406,19: free_block_p
 3406,31: VARIABLE
 3406,31: ;
 3407,5: size_t
 3407,11: TYPE
 3407,12: size
 3407,16: VARIABLE
 3407,16: ;
 3408,3: }
 
126 union 
 3406,5: union
 
22 NAME VARIABLE 
 3406,11: header
 3406,17: VARIABLE
 
65 VARIABLE 
 3406,17: VARIABLE
 
200 * option_type_qualifier_list option_pointer 
 3406,18: *
 
64 NAME VARIABLE 
 3406,19: free_block_p
 3406,31: VARIABLE
 
65 VARIABLE 
 3406,31: VARIABLE
 
313 ; 
 3406,31: ;
 
198 NAME TYPE 
 3407,5: size_t
 3407,11: TYPE
 
26 TYPE 
 3407,11: TYPE
 
200 NAME VARIABLE 
 3407,12: size
 3407,16: VARIABLE
 
65 VARIABLE 
 3407,16: VARIABLE
 
313 ; 
 3407,16: ;
 
198 } 
 3408,3: }
 
200 NAME VARIABLE 
 3408,5: s
 3408,6: VARIABLE
 
65 VARIABLE 
 3408,6: VARIABLE
 
313 ; 
 3408,6: ;
 
198 NAME TYPE 
 3409,3: Aling
 3409,8: TYPE
 
26 TYPE 
 3409,8: TYPE
 
200 NAME VARIABLE 
 3409,9: x
 3409,10: VARIABLE
 
65 VARIABLE 
 3409,10: VARIABLE
 
313 ; 
 3409,10: ;
 
198 } 
 3410,1: }
 
60 ; 
 3410,2: ;
 
23 typedef list_eq1_type_specifier_unique_declaration_specifier 
 3412,1: typedef
 3412,9: union
 3412,15: header
 3412,21: VARIABLE
 
54 union 
 3412,9: union
 
22 NAME VARIABLE 
 3412,15: header
 3412,21: VARIABLE
 
65 VARIABLE 
 3412,21: VARIABLE
 
6 NAME VARIABLE 
 3412,22: Header
 3412,28: VARIABLE
 
65 VARIABLE 
 3412,28: VARIABLE
 
70 ; 
 3412,28: ;
 
23 static 
 3414,1: static
 
8 NAME TYPE 
 3414,8: Header
 3414,14: TYPE
 
26 TYPE 
 3414,14: TYPE
 
5 NAME VARIABLE 
 3414,15: base
 3414,19: VARIABLE
 
65 VARIABLE 
 3414,19: VARIABLE
 
60 ; 
 3414,19: ;
 
23 static 
 3415,1: static
 
8 NAME TYPE 
 3415,8: Header
 3415,14: TYPE
 
26 TYPE 
 3415,14: TYPE
 
5 * option_type_qualifier_list option_pointer 
 3415,15: *
 
64 NAME VARIABLE 
 3415,16: free_p
 3415,22: VARIABLE
 
65 VARIABLE 
 3415,22: VARIABLE
 
59 = c_initializer 
 3415,23: =
 3417,24: (
 3417,25: (
 3417,26: void
 3417,31: *
 3417,32: )
 3417,33: 0
 3417,34: )
 
108 ( expression ) 
 3417,24: (
 3417,25: (
 3417,26: void
 3417,31: *
 3417,32: )
 3417,33: 0
 3417,34: )
 
165 ( type_name ) cast_expression 
 3417,25: (
 3417,26: void
 3417,31: *
 3417,32: )
 3417,33: 0
 
165 void 
 3417,26: void
 
137 * option_type_qualifier_list option_pointer 
 3417,31: *
 
269 ) cast_expression 
 3417,32: )
 3417,33: 0
 
369 CONSTANT 
 3417,33: 0
 
267 ) 
 3417,34: )
 
60 ; 
 3419,28: ;
 
23 void 
 3421,1: void
 
5 NAME VARIABLE 
 3421,6: c_free
 3421,12: VARIABLE
 
65 VARIABLE 
 3421,12: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3421,12: (
 3421,13: void
 3421,18: *
 3421,19: a_p
 3421,22: VARIABLE
 3421,22: )
 
186 void 
 3421,13: void
 
298 * option_type_qualifier_list option_pointer 
 3421,18: *
 
386 NAME VARIABLE 
 3421,19: a_p
 3421,22: VARIABLE
 
65 VARIABLE 
 3421,22: VARIABLE
 
187 ) 
 3421,22: )
 
60 ; 
 3421,23: ;
 
23 void 
 3422,1: void
 
5 NAME VARIABLE 
 3422,6: c_bfree
 3422,13: VARIABLE
 
65 VARIABLE 
 3422,13: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3422,13: (
 3422,14: void
 3422,19: *
 3422,20: a_p
 3422,23: VARIABLE
 3422,23: ,
 3422,25: size_t
 3422,31: TYPE
 3422,32: block_size
 3422,42: VARIABLE
 3422,42: )
 
186 void 
 3422,14: void
 
298 * option_type_qualifier_list option_pointer 
 3422,19: *
 
386 NAME VARIABLE 
 3422,20: a_p
 3422,23: VARIABLE
 
65 VARIABLE 
 3422,23: VARIABLE
 
300 , parameter_declaration 
 3422,23: ,
 3422,25: size_t
 3422,31: TYPE
 3422,32: block_size
 3422,42: VARIABLE
 
391 NAME TYPE 
 3422,25: size_t
 3422,31: TYPE
 
26 TYPE 
 3422,31: TYPE
 
298 NAME VARIABLE 
 3422,32: block_size
 3422,42: VARIABLE
 
65 VARIABLE 
 3422,42: VARIABLE
 
187 ) 
 3422,42: )
 
60 ; 
 3422,43: ;
 
23 void 
 3423,1: void
 
5 * option_type_qualifier_list option_pointer 
 3423,6: *
 
64 NAME VARIABLE 
 3423,7: c_malloc
 3423,15: VARIABLE
 
65 VARIABLE 
 3423,15: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 3423,15: (
 3423,16: size_t
 3423,22: TYPE
 3423,23: nr_of_bytes
 3423,34: VARIABLE
 3423,34: )
 
186 NAME TYPE 
 3423,16: size_t
 3423,22: TYPE
 
65 TYPE 
 3423,22: TYPE
 
298 NAME VARIABLE 
 3423,23: nr_of_bytes
 3423,34: VARIABLE
 
65 VARIABLE 
 3423,34: VARIABLE
 
187 ) 
 3423,34: )
 
60 ; 
 3423,35: ;
 
23 void 
 3424,1: void
 
5 * option_type_qualifier_list option_pointer 
 3424,6: *
 
64 NAME VARIABLE 
 3424,7: c_calloc
 3424,15: VARIABLE
 
65 VARIABLE 
 3424,15: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 3424,15: (
 3424,16: size_t
 3424,22: TYPE
 3424,23: nr_of_blocks
 3424,35: VARIABLE
 3424,35: ,
 3424,37: size_t
 3424,43: TYPE
 3424,44: block_size
 3424,54: VARIABLE
 3424,54: )
 
186 NAME TYPE 
 3424,16: size_t
 3424,22: TYPE
 
65 TYPE 
 3424,22: TYPE
 
298 NAME VARIABLE 
 3424,23: nr_of_blocks
 3424,35: VARIABLE
 
65 VARIABLE 
 3424,35: VARIABLE
 
300 , parameter_declaration 
 3424,35: ,
 3424,37: size_t
 3424,43: TYPE
 3424,44: block_size
 3424,54: VARIABLE
 
391 NAME TYPE 
 3424,37: size_t
 3424,43: TYPE
 
26 TYPE 
 3424,43: TYPE
 
298 NAME VARIABLE 
 3424,44: block_size
 3424,54: VARIABLE
 
65 VARIABLE 
 3424,54: VARIABLE
 
187 ) 
 3424,54: )
 
60 ; 
 3424,55: ;
 
23 NAME TYPE 
 3425,1: Header
 3425,7: TYPE
 
26 TYPE 
 3425,7: TYPE
 
5 * option_type_qualifier_list option_pointer 
 3425,8: *
 
64 NAME VARIABLE 
 3425,9: c_morecore
 3425,19: VARIABLE
 
65 VARIABLE 
 3425,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 3425,19: (
 3425,20: size_t
 3425,26: TYPE
 3425,27: nr_of_units
 3425,38: VARIABLE
 3425,38: )
 
186 NAME TYPE 
 3425,20: size_t
 3425,26: TYPE
 
65 TYPE 
 3425,26: TYPE
 
298 NAME VARIABLE 
 3425,27: nr_of_units
 3425,38: VARIABLE
 
65 VARIABLE 
 3425,38: VARIABLE
 
187 ) 
 3425,38: )
 
60 ; 
 3425,39: ;
 
23 int 
 3427,1: int
 
5 NAME VARIABLE 
 3427,5: main
 3427,9: VARIABLE
 
65 VARIABLE 
 3427,9: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3427,9: (
 3427,10: int
 3427,14: argc
 3427,18: VARIABLE
 3427,18: ,
 3427,20: char
 3427,25: *
 3427,26: argv
 3427,30: VARIABLE
 3427,30: [
 3427,31: ]
 3427,32: )
 
186 int 
 3427,10: int
 
298 NAME VARIABLE 
 3427,14: argc
 3427,18: VARIABLE
 
65 VARIABLE 
 3427,18: VARIABLE
 
300 , parameter_declaration 
 3427,18: ,
 3427,20: char
 3427,25: *
 3427,26: argv
 3427,30: VARIABLE
 3427,30: [
 3427,31: ]
 
391 char 
 3427,20: char
 
298 * option_type_qualifier_list option_pointer 
 3427,25: *
 
386 NAME VARIABLE 
 3427,26: argv
 3427,30: VARIABLE
 
65 VARIABLE 
 3427,30: VARIABLE
 
113 [ option_type_qualifier_list option_assignment_expression ] 
 3427,30: [
 3427,31: ]
 
305 ] 
 3427,31: ]
 
187 ) 
 3427,32: )
 
94 { option_block_item_list } 
 3428,1: {
 3429,3: char
 3429,8: *
 3429,9: test_malloc_str_p
 3429,26: VARIABLE
 3429,26: ;
 3430,3: if
 3430,6: (
 3430,7: (
 3430,8: test_malloc_str_p
 3430,25: VARIABLE
 3430,26: =
 3430,28: c_malloc
 3430,36: VARIABLE
 3430,36: (
 3430,37: 27
 3430,40: *
 3430,42: sizeof
 3430,48: (
 3430,49: char
 3430,53: )
 3430,54: )
 3430,55: )
 3430,57: ==
 3432,59: (
 3432,60: (
 3432,61: void
 3432,66: *
 3432,67: )
 3432,68: 0
 3432,69: )
 3434,63: )
 3435,3: {
 3436,5: printf
 3436,11: VARIABLE
 3436,11: (
 3436,12: "
 3436,70: )
 3436,71: ;
 3437,5: return
 3439,11: 1
 3441,23: ;
 3442,3: }
 3444,3: strcpy
 3444,9: VARIABLE
 3444,9: (
 3444,10: test_malloc_str_p
 3444,27: VARIABLE
 3444,27: ,
 3444,29: "
 3444,56: )
 3444,57: ;
 3445,3: printf
 3445,9: VARIABLE
 3445,9: (
 3445,10: "
 3445,16: ,
 3445,18: test_malloc_str_p
 3445,35: VARIABLE
 3445,35: )
 3445,36: ;
 3446,3: c_free
 3446,9: VARIABLE
 3446,9: (
 3446,10: test_malloc_str_p
 3446,27: VARIABLE
 3446,27: )
 3446,28: ;
 3448,3: char
 3448,8: *
 3448,9: test_calloc_str_p
 3448,26: VARIABLE
 3448,26: ;
 3449,3: if
 3449,6: (
 3449,7: (
 3449,8: test_calloc_str_p
 3449,25: VARIABLE
 3449,26: =
 3449,28: c_calloc
 3449,36: VARIABLE
 3449,36: (
 3449,37: 27
 3449,39: ,
 3449,41: sizeof
 3449,47: (
 3449,48: char
 3449,52: )
 3449,53: )
 3449,54: )
 3449,56: ==
 3451,58: (
 3451,59: (
 3451,60: void
 3451,65: *
 3451,66: )
 3451,67: 0
 3451,68: )
 3453,62: )
 3454,3: {
 3455,5: printf
 3455,11: VARIABLE
 3455,11: (
 3455,12: "
 3455,70: )
 3455,71: ;
 3456,5: return
 3458,11: 1
 3460,23: ;
 3461,3: }
 3463,3: strcpy
 3463,9: VARIABLE
 3463,9: (
 3463,10: test_calloc_str_p
 3463,27: VARIABLE
 3463,27: ,
 3463,29: "
 3463,56: )
 3463,57: ;
 3464,3: printf
 3464,9: VARIABLE
 3464,9: (
 3464,10: "
 3464,16: ,
 3464,18: test_calloc_str_p
 3464,35: VARIABLE
 3464,35: )
 3464,36: ;
 3465,3: c_free
 3465,9: VARIABLE
 3465,9: (
 3465,10: test_calloc_str_p
 3465,27: VARIABLE
 3465,27: )
 3465,28: ;
 3467,3: char
 3467,8: test_bfree
 3467,18: VARIABLE
 3467,18: [
 3467,19: 1024
 3467,23: ]
 3467,25: =
 3467,27: "
 3467,52: ;
 3468,3: c_bfree
 3468,10: VARIABLE
 3468,10: (
 3468,11: test_bfree
 3468,21: VARIABLE
 3468,21: ,
 3468,23: 1024
 3468,27: )
 3468,28: ;
 3470,3: return
 3472,9: 0
 3474,21: ;
 3475,1: }
 
201 char 
 3429,3: char
 
93 * option_type_qualifier_list option_pointer 
 3429,8: *
 
64 NAME VARIABLE 
 3429,9: test_malloc_str_p
 3429,26: VARIABLE
 
65 VARIABLE 
 3429,26: VARIABLE
 
60 ; 
 3429,26: ;
 
320 if ( expression ) scoped_statement 
 3430,3: if
 3430,6: (
 3430,7: (
 3430,8: test_malloc_str_p
 3430,25: VARIABLE
 3430,26: =
 3430,28: c_malloc
 3430,36: VARIABLE
 3430,36: (
 3430,37: 27
 3430,40: *
 3430,42: sizeof
 3430,48: (
 3430,49: char
 3430,53: )
 3430,54: )
 3430,55: )
 3430,57: ==
 3432,59: (
 3432,60: (
 3432,61: void
 3432,66: *
 3432,67: )
 3432,68: 0
 3432,69: )
 3434,63: )
 3435,3: {
 3436,5: printf
 3436,11: VARIABLE
 3436,11: (
 3436,12: "
 3436,70: )
 3436,71: ;
 3437,5: return
 3439,11: 1
 3441,23: ;
 3442,3: }
 
404 ( expression ) scoped_statement 
 3430,6: (
 3430,7: (
 3430,8: test_malloc_str_p
 3430,25: VARIABLE
 3430,26: =
 3430,28: c_malloc
 3430,36: VARIABLE
 3430,36: (
 3430,37: 27
 3430,40: *
 3430,42: sizeof
 3430,48: (
 3430,49: char
 3430,53: )
 3430,54: )
 3430,55: )
 3430,57: ==
 3432,59: (
 3432,60: (
 3432,61: void
 3432,66: *
 3432,67: )
 3432,68: 0
 3432,69: )
 3434,63: )
 3435,3: {
 3436,5: printf
 3436,11: VARIABLE
 3436,11: (
 3436,12: "
 3436,70: )
 3436,71: ;
 3437,5: return
 3439,11: 1
 3441,23: ;
 3442,3: }
 
455 ( expression ) 
 3430,7: (
 3430,8: test_malloc_str_p
 3430,25: VARIABLE
 3430,26: =
 3430,28: c_malloc
 3430,36: VARIABLE
 3430,36: (
 3430,37: 27
 3430,40: *
 3430,42: sizeof
 3430,48: (
 3430,49: char
 3430,53: )
 3430,54: )
 3430,55: )
 
165 NAME VARIABLE 
 3430,8: test_malloc_str_p
 3430,25: VARIABLE
 
65 VARIABLE 
 3430,25: VARIABLE
 
181 = 
 3430,26: =
 
279 NAME VARIABLE 
 3430,28: c_malloc
 3430,36: VARIABLE
 
179 VARIABLE 
 3430,36: VARIABLE
 
147 ( option_argument_expression_list ) 
 3430,36: (
 3430,37: 27
 3430,40: *
 3430,42: sizeof
 3430,48: (
 3430,49: char
 3430,53: )
 3430,54: )
 
235 CONSTANT 
 3430,37: 27
 
151 * 
 3430,40: *
 
242 sizeof ( type_name ) 
 3430,42: sizeof
 3430,48: (
 3430,49: char
 3430,53: )
 
170 ( type_name ) 
 3430,48: (
 3430,49: char
 3430,53: )
 
276 char 
 3430,49: char
 
373 ) 
 3430,53: )
 
351 ) 
 3430,54: )
 
267 ) 
 3430,55: )
 
155 == 
 3430,57: ==
 
257 ( expression ) 
 3432,59: (
 3432,60: (
 3432,61: void
 3432,66: *
 3432,67: )
 3432,68: 0
 3432,69: )
 
165 ( type_name ) cast_expression 
 3432,60: (
 3432,61: void
 3432,66: *
 3432,67: )
 3432,68: 0
 
165 void 
 3432,61: void
 
137 * option_type_qualifier_list option_pointer 
 3432,66: *
 
269 ) cast_expression 
 3432,67: )
 3432,68: 0
 
369 CONSTANT 
 3432,68: 0
 
267 ) 
 3432,69: )
 
483 ) scoped_statement 
 3434,63: )
 3435,3: {
 3436,5: printf
 3436,11: VARIABLE
 3436,11: (
 3436,12: "
 3436,70: )
 3436,71: ;
 3437,5: return
 3439,11: 1
 3441,23: ;
 3442,3: }
 
320 { option_block_item_list } 
 3435,3: {
 3436,5: printf
 3436,11: VARIABLE
 3436,11: (
 3436,12: "
 3436,70: )
 3436,71: ;
 3437,5: return
 3439,11: 1
 3441,23: ;
 3442,3: }
 
201 NAME VARIABLE 
 3436,5: printf
 3436,11: VARIABLE
 
65 VARIABLE 
 3436,11: VARIABLE
 
147 ( option_argument_expression_list ) 
 3436,11: (
 3436,12: "
 3436,70: )
 
235 STRING_LITERAL 
 3436,12: "
 
351 ) 
 3436,70: )
 
331 ; 
 3436,71: ;
 
201 return option_expression ; 
 3437,5: return
 3439,11: 1
 3441,23: ;
 
338 CONSTANT 
 3439,11: 1
 
415 ; 
 3441,23: ;
 
201 } 
 3442,3: }
 
201 NAME VARIABLE 
 3444,3: strcpy
 3444,9: VARIABLE
 
65 VARIABLE 
 3444,9: VARIABLE
 
147 ( option_argument_expression_list ) 
 3444,9: (
 3444,10: test_malloc_str_p
 3444,27: VARIABLE
 3444,27: ,
 3444,29: "
 3444,56: )
 
235 NAME VARIABLE 
 3444,10: test_malloc_str_p
 3444,27: VARIABLE
 
179 VARIABLE 
 3444,27: VARIABLE
 
352 , assignment_expression 
 3444,27: ,
 3444,29: "
 
429 STRING_LITERAL 
 3444,29: "
 
351 ) 
 3444,56: )
 
331 ; 
 3444,57: ;
 
201 NAME VARIABLE 
 3445,3: printf
 3445,9: VARIABLE
 
65 VARIABLE 
 3445,9: VARIABLE
 
147 ( option_argument_expression_list ) 
 3445,9: (
 3445,10: "
 3445,16: ,
 3445,18: test_malloc_str_p
 3445,35: VARIABLE
 3445,35: )
 
235 STRING_LITERAL 
 3445,10: "
 
352 , assignment_expression 
 3445,16: ,
 3445,18: test_malloc_str_p
 3445,35: VARIABLE
 
429 NAME VARIABLE 
 3445,18: test_malloc_str_p
 3445,35: VARIABLE
 
179 VARIABLE 
 3445,35: VARIABLE
 
351 ) 
 3445,35: )
 
331 ; 
 3445,36: ;
 
201 NAME VARIABLE 
 3446,3: c_free
 3446,9: VARIABLE
 
65 VARIABLE 
 3446,9: VARIABLE
 
147 ( option_argument_expression_list ) 
 3446,9: (
 3446,10: test_malloc_str_p
 3446,27: VARIABLE
 3446,27: )
 
235 NAME VARIABLE 
 3446,10: test_malloc_str_p
 3446,27: VARIABLE
 
179 VARIABLE 
 3446,27: VARIABLE
 
351 ) 
 3446,27: )
 
331 ; 
 3446,28: ;
 
201 char 
 3448,3: char
 
93 * option_type_qualifier_list option_pointer 
 3448,8: *
 
64 NAME VARIABLE 
 3448,9: test_calloc_str_p
 3448,26: VARIABLE
 
65 VARIABLE 
 3448,26: VARIABLE
 
60 ; 
 3448,26: ;
 
320 if ( expression ) scoped_statement 
 3449,3: if
 3449,6: (
 3449,7: (
 3449,8: test_calloc_str_p
 3449,25: VARIABLE
 3449,26: =
 3449,28: c_calloc
 3449,36: VARIABLE
 3449,36: (
 3449,37: 27
 3449,39: ,
 3449,41: sizeof
 3449,47: (
 3449,48: char
 3449,52: )
 3449,53: )
 3449,54: )
 3449,56: ==
 3451,58: (
 3451,59: (
 3451,60: void
 3451,65: *
 3451,66: )
 3451,67: 0
 3451,68: )
 3453,62: )
 3454,3: {
 3455,5: printf
 3455,11: VARIABLE
 3455,11: (
 3455,12: "
 3455,70: )
 3455,71: ;
 3456,5: return
 3458,11: 1
 3460,23: ;
 3461,3: }
 
404 ( expression ) scoped_statement 
 3449,6: (
 3449,7: (
 3449,8: test_calloc_str_p
 3449,25: VARIABLE
 3449,26: =
 3449,28: c_calloc
 3449,36: VARIABLE
 3449,36: (
 3449,37: 27
 3449,39: ,
 3449,41: sizeof
 3449,47: (
 3449,48: char
 3449,52: )
 3449,53: )
 3449,54: )
 3449,56: ==
 3451,58: (
 3451,59: (
 3451,60: void
 3451,65: *
 3451,66: )
 3451,67: 0
 3451,68: )
 3453,62: )
 3454,3: {
 3455,5: printf
 3455,11: VARIABLE
 3455,11: (
 3455,12: "
 3455,70: )
 3455,71: ;
 3456,5: return
 3458,11: 1
 3460,23: ;
 3461,3: }
 
455 ( expression ) 
 3449,7: (
 3449,8: test_calloc_str_p
 3449,25: VARIABLE
 3449,26: =
 3449,28: c_calloc
 3449,36: VARIABLE
 3449,36: (
 3449,37: 27
 3449,39: ,
 3449,41: sizeof
 3449,47: (
 3449,48: char
 3449,52: )
 3449,53: )
 3449,54: )
 
165 NAME VARIABLE 
 3449,8: test_calloc_str_p
 3449,25: VARIABLE
 
65 VARIABLE 
 3449,25: VARIABLE
 
181 = 
 3449,26: =
 
279 NAME VARIABLE 
 3449,28: c_calloc
 3449,36: VARIABLE
 
179 VARIABLE 
 3449,36: VARIABLE
 
147 ( option_argument_expression_list ) 
 3449,36: (
 3449,37: 27
 3449,39: ,
 3449,41: sizeof
 3449,47: (
 3449,48: char
 3449,52: )
 3449,53: )
 
235 CONSTANT 
 3449,37: 27
 
352 , assignment_expression 
 3449,39: ,
 3449,41: sizeof
 3449,47: (
 3449,48: char
 3449,52: )
 
429 sizeof ( type_name ) 
 3449,41: sizeof
 3449,47: (
 3449,48: char
 3449,52: )
 
170 ( type_name ) 
 3449,47: (
 3449,48: char
 3449,52: )
 
276 char 
 3449,48: char
 
373 ) 
 3449,52: )
 
351 ) 
 3449,53: )
 
267 ) 
 3449,54: )
 
155 == 
 3449,56: ==
 
257 ( expression ) 
 3451,58: (
 3451,59: (
 3451,60: void
 3451,65: *
 3451,66: )
 3451,67: 0
 3451,68: )
 
165 ( type_name ) cast_expression 
 3451,59: (
 3451,60: void
 3451,65: *
 3451,66: )
 3451,67: 0
 
165 void 
 3451,60: void
 
137 * option_type_qualifier_list option_pointer 
 3451,65: *
 
269 ) cast_expression 
 3451,66: )
 3451,67: 0
 
369 CONSTANT 
 3451,67: 0
 
267 ) 
 3451,68: )
 
483 ) scoped_statement 
 3453,62: )
 3454,3: {
 3455,5: printf
 3455,11: VARIABLE
 3455,11: (
 3455,12: "
 3455,70: )
 3455,71: ;
 3456,5: return
 3458,11: 1
 3460,23: ;
 3461,3: }
 
320 { option_block_item_list } 
 3454,3: {
 3455,5: printf
 3455,11: VARIABLE
 3455,11: (
 3455,12: "
 3455,70: )
 3455,71: ;
 3456,5: return
 3458,11: 1
 3460,23: ;
 3461,3: }
 
201 NAME VARIABLE 
 3455,5: printf
 3455,11: VARIABLE
 
65 VARIABLE 
 3455,11: VARIABLE
 
147 ( option_argument_expression_list ) 
 3455,11: (
 3455,12: "
 3455,70: )
 
235 STRING_LITERAL 
 3455,12: "
 
351 ) 
 3455,70: )
 
331 ; 
 3455,71: ;
 
201 return option_expression ; 
 3456,5: return
 3458,11: 1
 3460,23: ;
 
338 CONSTANT 
 3458,11: 1
 
415 ; 
 3460,23: ;
 
201 } 
 3461,3: }
 
201 NAME VARIABLE 
 3463,3: strcpy
 3463,9: VARIABLE
 
65 VARIABLE 
 3463,9: VARIABLE
 
147 ( option_argument_expression_list ) 
 3463,9: (
 3463,10: test_calloc_str_p
 3463,27: VARIABLE
 3463,27: ,
 3463,29: "
 3463,56: )
 
235 NAME VARIABLE 
 3463,10: test_calloc_str_p
 3463,27: VARIABLE
 
179 VARIABLE 
 3463,27: VARIABLE
 
352 , assignment_expression 
 3463,27: ,
 3463,29: "
 
429 STRING_LITERAL 
 3463,29: "
 
351 ) 
 3463,56: )
 
331 ; 
 3463,57: ;
 
201 NAME VARIABLE 
 3464,3: printf
 3464,9: VARIABLE
 
65 VARIABLE 
 3464,9: VARIABLE
 
147 ( option_argument_expression_list ) 
 3464,9: (
 3464,10: "
 3464,16: ,
 3464,18: test_calloc_str_p
 3464,35: VARIABLE
 3464,35: )
 
235 STRING_LITERAL 
 3464,10: "
 
352 , assignment_expression 
 3464,16: ,
 3464,18: test_calloc_str_p
 3464,35: VARIABLE
 
429 NAME VARIABLE 
 3464,18: test_calloc_str_p
 3464,35: VARIABLE
 
179 VARIABLE 
 3464,35: VARIABLE
 
351 ) 
 3464,35: )
 
331 ; 
 3464,36: ;
 
201 NAME VARIABLE 
 3465,3: c_free
 3465,9: VARIABLE
 
65 VARIABLE 
 3465,9: VARIABLE
 
147 ( option_argument_expression_list ) 
 3465,9: (
 3465,10: test_calloc_str_p
 3465,27: VARIABLE
 3465,27: )
 
235 NAME VARIABLE 
 3465,10: test_calloc_str_p
 3465,27: VARIABLE
 
179 VARIABLE 
 3465,27: VARIABLE
 
351 ) 
 3465,27: )
 
331 ; 
 3465,28: ;
 
201 char 
 3467,3: char
 
93 NAME VARIABLE 
 3467,8: test_bfree
 3467,18: VARIABLE
 
65 VARIABLE 
 3467,18: VARIABLE
 
63 [ option_type_qualifier_list option_assignment_expression ] 
 3467,18: [
 3467,19: 1024
 3467,23: ]
 
188 CONSTANT 
 3467,19: 1024
 
305 ] 
 3467,23: ]
 
59 = c_initializer 
 3467,25: =
 3467,27: "
 
108 STRING_LITERAL 
 3467,27: "
 
60 ; 
 3467,52: ;
 
201 NAME VARIABLE 
 3468,3: c_bfree
 3468,10: VARIABLE
 
65 VARIABLE 
 3468,10: VARIABLE
 
147 ( option_argument_expression_list ) 
 3468,10: (
 3468,11: test_bfree
 3468,21: VARIABLE
 3468,21: ,
 3468,23: 1024
 3468,27: )
 
235 NAME VARIABLE 
 3468,11: test_bfree
 3468,21: VARIABLE
 
179 VARIABLE 
 3468,21: VARIABLE
 
352 , assignment_expression 
 3468,21: ,
 3468,23: 1024
 
429 CONSTANT 
 3468,23: 1024
 
351 ) 
 3468,27: )
 
331 ; 
 3468,28: ;
 
201 return option_expression ; 
 3470,3: return
 3472,9: 0
 3474,21: ;
 
338 CONSTANT 
 3472,9: 0
 
415 ; 
 3474,21: ;
 
201 } 
 3475,1: }
 
23 void 
 3477,1: void
 
5 NAME VARIABLE 
 3477,6: c_free
 3477,12: VARIABLE
 
65 VARIABLE 
 3477,12: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3477,12: (
 3477,13: void
 3477,18: *
 3477,19: a_p
 3477,22: VARIABLE
 3477,22: )
 
186 void 
 3477,13: void
 
298 * option_type_qualifier_list option_pointer 
 3477,18: *
 
386 NAME VARIABLE 
 3477,19: a_p
 3477,22: VARIABLE
 
65 VARIABLE 
 3477,22: VARIABLE
 
187 ) 
 3477,22: )
 
94 { option_block_item_list } 
 3478,1: {
 3479,3: Header
 3479,9: TYPE
 3479,10: *
 3479,11: p
 3479,12: VARIABLE
 3479,12: ;
 3480,3: Header
 3480,9: TYPE
 3480,10: *
 3480,11: b_p
 3480,14: VARIABLE
 3480,15: =
 3480,17: (
 3480,18: Header
 3480,24: TYPE
 3480,25: *
 3480,26: )
 3480,27: a_p
 3480,30: VARIABLE
 3480,31: -
 3480,33: 1
 3480,34: ;
 3482,3: if
 3482,6: (
 3482,7: b_p
 3482,10: VARIABLE
 3482,10: ->
 3482,12: s
 3482,13: VARIABLE
 3482,13: .
 3482,14: size
 3482,18: VARIABLE
 3482,19: ==
 3482,22: 0
 3482,24: ||
 3482,27: b_p
 3482,30: VARIABLE
 3482,30: ->
 3482,32: s
 3482,33: VARIABLE
 3482,33: .
 3482,34: size
 3482,38: VARIABLE
 3482,39: ==
 3484,41: (
 3484,42: 0x7fffffff
 3484,53: *
 3484,55: 2U
 3484,58: +
 3484,60: 1U
 3484,62: )
 3486,50: -
 3486,52: 1024
 3486,56: )
 3487,3: {
 3488,5: fprintf
 3488,12: VARIABLE
 3488,12: (
 3490,12: stderr
 3490,18: VARIABLE
 3492,18: ,
 3492,20: "
 3492,59: ,
 3492,61: b_p
 3492,64: VARIABLE
 3492,64: ->
 3492,66: s
 3492,67: VARIABLE
 3492,67: .
 3492,68: size
 3492,72: VARIABLE
 3492,72: )
 3492,73: ;
 3493,5: return
 3493,11: ;
 3494,3: }
 3496,3: for
 3496,7: (
 3496,8: p
 3496,9: VARIABLE
 3496,10: =
 3496,12: free_p
 3496,18: VARIABLE
 3496,18: ;
 3496,20: !
 3496,21: (
 3496,22: b_p
 3496,25: VARIABLE
 3496,26: >
 3496,28: p
 3496,29: VARIABLE
 3496,30: &&
 3496,33: b_p
 3496,36: VARIABLE
 3496,37: <
 3496,39: p
 3496,40: VARIABLE
 3496,40: ->
 3496,42: s
 3496,43: VARIABLE
 3496,43: .
 3496,44: free_block_p
 3496,56: VARIABLE
 3496,56: )
 3496,57: ;
 3496,59: p
 3496,60: VARIABLE
 3496,61: =
 3496,63: p
 3496,64: VARIABLE
 3496,64: ->
 3496,66: s
 3496,67: VARIABLE
 3496,67: .
 3496,68: free_block_p
 3496,80: VARIABLE
 3496,80: )
 3497,3: {
 3498,5: if
 3498,8: (
 3498,9: p
 3498,10: VARIABLE
 3498,11: >=
 3498,14: p
 3498,15: VARIABLE
 3498,15: ->
 3498,17: s
 3498,18: VARIABLE
 3498,18: .
 3498,19: free_block_p
 3498,31: VARIABLE
 3498,32: &&
 3498,35: (
 3498,36: b_p
 3498,39: VARIABLE
 3498,40: >
 3498,42: p
 3498,43: VARIABLE
 3498,44: ||
 3498,47: b_p
 3498,50: VARIABLE
 3498,51: <
 3498,53: p
 3498,54: VARIABLE
 3498,54: ->
 3498,56: s
 3498,57: VARIABLE
 3498,57: .
 3498,58: free_block_p
 3498,70: VARIABLE
 3498,70: )
 3498,71: )
 3499,5: {
 3500,7: break
 3500,12: ;
 3501,5: }
 3502,3: }
 3504,3: if
 3504,6: (
 3504,7: b_p
 3504,10: VARIABLE
 3504,11: +
 3504,13: b_p
 3504,16: VARIABLE
 3504,16: ->
 3504,18: s
 3504,19: VARIABLE
 3504,19: .
 3504,20: size
 3504,24: VARIABLE
 3504,25: ==
 3504,28: p
 3504,29: VARIABLE
 3504,29: ->
 3504,31: s
 3504,32: VARIABLE
 3504,32: .
 3504,33: free_block_p
 3504,45: VARIABLE
 3504,45: )
 3505,3: {
 3506,5: b_p
 3506,8: VARIABLE
 3506,8: ->
 3506,10: s
 3506,11: VARIABLE
 3506,11: .
 3506,12: size
 3506,16: VARIABLE
 3506,17: +=
 3506,20: p
 3506,21: VARIABLE
 3506,21: ->
 3506,23: s
 3506,24: VARIABLE
 3506,24: .
 3506,25: free_block_p
 3506,37: VARIABLE
 3506,37: ->
 3506,39: s
 3506,40: VARIABLE
 3506,40: .
 3506,41: size
 3506,45: VARIABLE
 3506,45: ;
 3507,5: b_p
 3507,8: VARIABLE
 3507,8: ->
 3507,10: s
 3507,11: VARIABLE
 3507,11: .
 3507,12: free_block_p
 3507,24: VARIABLE
 3507,25: =
 3507,27: p
 3507,28: VARIABLE
 3507,28: ->
 3507,30: s
 3507,31: VARIABLE
 3507,31: .
 3507,32: free_block_p
 3507,44: VARIABLE
 3507,44: ->
 3507,46: s
 3507,47: VARIABLE
 3507,47: .
 3507,48: free_block_p
 3507,60: VARIABLE
 3507,60: ;
 3508,3: }
 3509,3: else
 3510,3: {
 3511,5: b_p
 3511,8: VARIABLE
 3511,8: ->
 3511,10: s
 3511,11: VARIABLE
 3511,11: .
 3511,12: free_block_p
 3511,24: VARIABLE
 3511,25: =
 3511,27: p
 3511,28: VARIABLE
 3511,28: ->
 3511,30: s
 3511,31: VARIABLE
 3511,31: .
 3511,32: free_block_p
 3511,44: VARIABLE
 3511,44: ;
 3512,3: }
 3514,3: if
 3514,6: (
 3514,7: p
 3514,8: VARIABLE
 3514,9: +
 3514,11: p
 3514,12: VARIABLE
 3514,12: ->
 3514,14: s
 3514,15: VARIABLE
 3514,15: .
 3514,16: size
 3514,20: VARIABLE
 3514,21: ==
 3514,24: b_p
 3514,27: VARIABLE
 3514,27: )
 3515,3: {
 3516,5: p
 3516,6: VARIABLE
 3516,6: ->
 3516,8: s
 3516,9: VARIABLE
 3516,9: .
 3516,10: size
 3516,14: VARIABLE
 3516,15: +=
 3516,18: b_p
 3516,21: VARIABLE
 3516,21: ->
 3516,23: s
 3516,24: VARIABLE
 3516,24: .
 3516,25: size
 3516,29: VARIABLE
 3516,29: ;
 3517,5: p
 3517,6: VARIABLE
 3517,6: ->
 3517,8: s
 3517,9: VARIABLE
 3517,9: .
 3517,10: free_block_p
 3517,22: VARIABLE
 3517,23: =
 3517,25: b_p
 3517,28: VARIABLE
 3517,28: ->
 3517,30: s
 3517,31: VARIABLE
 3517,31: .
 3517,32: free_block_p
 3517,44: VARIABLE
 3517,44: ;
 3518,3: }
 3519,3: else
 3520,3: {
 3521,5: p
 3521,6: VARIABLE
 3521,6: ->
 3521,8: s
 3521,9: VARIABLE
 3521,9: .
 3521,10: free_block_p
 3521,22: VARIABLE
 3521,23: =
 3521,25: b_p
 3521,28: VARIABLE
 3521,28: ;
 3522,3: }
 3524,3: free_p
 3524,9: VARIABLE
 3524,10: =
 3524,12: p
 3524,13: VARIABLE
 3524,13: ;
 3525,1: }
 
201 NAME TYPE 
 3479,3: Header
 3479,9: TYPE
 
65 TYPE 
 3479,9: TYPE
 
93 * option_type_qualifier_list option_pointer 
 3479,10: *
 
64 NAME VARIABLE 
 3479,11: p
 3479,12: VARIABLE
 
65 VARIABLE 
 3479,12: VARIABLE
 
60 ; 
 3479,12: ;
 
201 NAME TYPE 
 3480,3: Header
 3480,9: TYPE
 
65 TYPE 
 3480,9: TYPE
 
93 * option_type_qualifier_list option_pointer 
 3480,10: *
 
64 NAME VARIABLE 
 3480,11: b_p
 3480,14: VARIABLE
 
65 VARIABLE 
 3480,14: VARIABLE
 
59 = c_initializer 
 3480,15: =
 3480,17: (
 3480,18: Header
 3480,24: TYPE
 3480,25: *
 3480,26: )
 3480,27: a_p
 3480,30: VARIABLE
 3480,31: -
 3480,33: 1
 
108 ( type_name ) cast_expression 
 3480,17: (
 3480,18: Header
 3480,24: TYPE
 3480,25: *
 3480,26: )
 3480,27: a_p
 3480,30: VARIABLE
 
165 NAME TYPE 
 3480,18: Header
 3480,24: TYPE
 
65 TYPE 
 3480,24: TYPE
 
137 * option_type_qualifier_list option_pointer 
 3480,25: *
 
269 ) cast_expression 
 3480,26: )
 3480,27: a_p
 3480,30: VARIABLE
 
369 NAME VARIABLE 
 3480,27: a_p
 3480,30: VARIABLE
 
179 VARIABLE 
 3480,30: VARIABLE
 
152 - 
 3480,31: -
 
246 CONSTANT 
 3480,33: 1
 
60 ; 
 3480,34: ;
 
320 if ( expression ) scoped_statement 
 3482,3: if
 3482,6: (
 3482,7: b_p
 3482,10: VARIABLE
 3482,10: ->
 3482,12: s
 3482,13: VARIABLE
 3482,13: .
 3482,14: size
 3482,18: VARIABLE
 3482,19: ==
 3482,22: 0
 3482,24: ||
 3482,27: b_p
 3482,30: VARIABLE
 3482,30: ->
 3482,32: s
 3482,33: VARIABLE
 3482,33: .
 3482,34: size
 3482,38: VARIABLE
 3482,39: ==
 3484,41: (
 3484,42: 0x7fffffff
 3484,53: *
 3484,55: 2U
 3484,58: +
 3484,60: 1U
 3484,62: )
 3486,50: -
 3486,52: 1024
 3486,56: )
 3487,3: {
 3488,5: fprintf
 3488,12: VARIABLE
 3488,12: (
 3490,12: stderr
 3490,18: VARIABLE
 3492,18: ,
 3492,20: "
 3492,59: ,
 3492,61: b_p
 3492,64: VARIABLE
 3492,64: ->
 3492,66: s
 3492,67: VARIABLE
 3492,67: .
 3492,68: size
 3492,72: VARIABLE
 3492,72: )
 3492,73: ;
 3493,5: return
 3493,11: ;
 3494,3: }
 
404 ( expression ) scoped_statement 
 3482,6: (
 3482,7: b_p
 3482,10: VARIABLE
 3482,10: ->
 3482,12: s
 3482,13: VARIABLE
 3482,13: .
 3482,14: size
 3482,18: VARIABLE
 3482,19: ==
 3482,22: 0
 3482,24: ||
 3482,27: b_p
 3482,30: VARIABLE
 3482,30: ->
 3482,32: s
 3482,33: VARIABLE
 3482,33: .
 3482,34: size
 3482,38: VARIABLE
 3482,39: ==
 3484,41: (
 3484,42: 0x7fffffff
 3484,53: *
 3484,55: 2U
 3484,58: +
 3484,60: 1U
 3484,62: )
 3486,50: -
 3486,52: 1024
 3486,56: )
 3487,3: {
 3488,5: fprintf
 3488,12: VARIABLE
 3488,12: (
 3490,12: stderr
 3490,18: VARIABLE
 3492,18: ,
 3492,20: "
 3492,59: ,
 3492,61: b_p
 3492,64: VARIABLE
 3492,64: ->
 3492,66: s
 3492,67: VARIABLE
 3492,67: .
 3492,68: size
 3492,72: VARIABLE
 3492,72: )
 3492,73: ;
 3493,5: return
 3493,11: ;
 3494,3: }
 
455 NAME VARIABLE 
 3482,7: b_p
 3482,10: VARIABLE
 
179 VARIABLE 
 3482,10: VARIABLE
 
147 -> general_identifier 
 3482,10: ->
 3482,12: s
 3482,13: VARIABLE
 
238 NAME VARIABLE 
 3482,12: s
 3482,13: VARIABLE
 
65 VARIABLE 
 3482,13: VARIABLE
 
147 . general_identifier 
 3482,13: .
 3482,14: size
 3482,18: VARIABLE
 
237 NAME VARIABLE 
 3482,14: size
 3482,18: VARIABLE
 
65 VARIABLE 
 3482,18: VARIABLE
 
155 == 
 3482,19: ==
 
257 CONSTANT 
 3482,22: 0
 
160 || logical_and_expression 
 3482,24: ||
 3482,27: b_p
 3482,30: VARIABLE
 3482,30: ->
 3482,32: s
 3482,33: VARIABLE
 3482,33: .
 3482,34: size
 3482,38: VARIABLE
 3482,39: ==
 3484,41: (
 3484,42: 0x7fffffff
 3484,53: *
 3484,55: 2U
 3484,58: +
 3484,60: 1U
 3484,62: )
 3486,50: -
 3486,52: 1024
 
264 NAME VARIABLE 
 3482,27: b_p
 3482,30: VARIABLE
 
179 VARIABLE 
 3482,30: VARIABLE
 
147 -> general_identifier 
 3482,30: ->
 3482,32: s
 3482,33: VARIABLE
 
238 NAME VARIABLE 
 3482,32: s
 3482,33: VARIABLE
 
65 VARIABLE 
 3482,33: VARIABLE
 
147 . general_identifier 
 3482,33: .
 3482,34: size
 3482,38: VARIABLE
 
237 NAME VARIABLE 
 3482,34: size
 3482,38: VARIABLE
 
65 VARIABLE 
 3482,38: VARIABLE
 
155 == 
 3482,39: ==
 
257 ( expression ) 
 3484,41: (
 3484,42: 0x7fffffff
 3484,53: *
 3484,55: 2U
 3484,58: +
 3484,60: 1U
 3484,62: )
 
165 CONSTANT 
 3484,42: 0x7fffffff
 
151 * 
 3484,53: *
 
242 CONSTANT 
 3484,55: 2U
 
152 + 
 3484,58: +
 
246 CONSTANT 
 3484,60: 1U
 
267 ) 
 3484,62: )
 
152 - 
 3486,50: -
 
246 CONSTANT 
 3486,52: 1024
 
483 ) scoped_statement 
 3486,56: )
 3487,3: {
 3488,5: fprintf
 3488,12: VARIABLE
 3488,12: (
 3490,12: stderr
 3490,18: VARIABLE
 3492,18: ,
 3492,20: "
 3492,59: ,
 3492,61: b_p
 3492,64: VARIABLE
 3492,64: ->
 3492,66: s
 3492,67: VARIABLE
 3492,67: .
 3492,68: size
 3492,72: VARIABLE
 3492,72: )
 3492,73: ;
 3493,5: return
 3493,11: ;
 3494,3: }
 
320 { option_block_item_list } 
 3487,3: {
 3488,5: fprintf
 3488,12: VARIABLE
 3488,12: (
 3490,12: stderr
 3490,18: VARIABLE
 3492,18: ,
 3492,20: "
 3492,59: ,
 3492,61: b_p
 3492,64: VARIABLE
 3492,64: ->
 3492,66: s
 3492,67: VARIABLE
 3492,67: .
 3492,68: size
 3492,72: VARIABLE
 3492,72: )
 3492,73: ;
 3493,5: return
 3493,11: ;
 3494,3: }
 
201 NAME VARIABLE 
 3488,5: fprintf
 3488,12: VARIABLE
 
65 VARIABLE 
 3488,12: VARIABLE
 
147 ( option_argument_expression_list ) 
 3488,12: (
 3490,12: stderr
 3490,18: VARIABLE
 3492,18: ,
 3492,20: "
 3492,59: ,
 3492,61: b_p
 3492,64: VARIABLE
 3492,64: ->
 3492,66: s
 3492,67: VARIABLE
 3492,67: .
 3492,68: size
 3492,72: VARIABLE
 3492,72: )
 
235 NAME VARIABLE 
 3490,12: stderr
 3490,18: VARIABLE
 
179 VARIABLE 
 3490,18: VARIABLE
 
352 , assignment_expression 
 3492,18: ,
 3492,20: "
 
429 STRING_LITERAL 
 3492,20: "
 
352 , assignment_expression 
 3492,59: ,
 3492,61: b_p
 3492,64: VARIABLE
 3492,64: ->
 3492,66: s
 3492,67: VARIABLE
 3492,67: .
 3492,68: size
 3492,72: VARIABLE
 
429 NAME VARIABLE 
 3492,61: b_p
 3492,64: VARIABLE
 
179 VARIABLE 
 3492,64: VARIABLE
 
147 -> general_identifier 
 3492,64: ->
 3492,66: s
 3492,67: VARIABLE
 
238 NAME VARIABLE 
 3492,66: s
 3492,67: VARIABLE
 
65 VARIABLE 
 3492,67: VARIABLE
 
147 . general_identifier 
 3492,67: .
 3492,68: size
 3492,72: VARIABLE
 
237 NAME VARIABLE 
 3492,68: size
 3492,72: VARIABLE
 
65 VARIABLE 
 3492,72: VARIABLE
 
351 ) 
 3492,72: )
 
331 ; 
 3492,73: ;
 
201 return option_expression ; 
 3493,5: return
 3493,11: ;
 
415 ; 
 3493,11: ;
 
201 } 
 3494,3: }
 
320 for ( option_expression ; option_expression ; option_expression ) scoped_statement 
 3496,3: for
 3496,7: (
 3496,8: p
 3496,9: VARIABLE
 3496,10: =
 3496,12: free_p
 3496,18: VARIABLE
 3496,18: ;
 3496,20: !
 3496,21: (
 3496,22: b_p
 3496,25: VARIABLE
 3496,26: >
 3496,28: p
 3496,29: VARIABLE
 3496,30: &&
 3496,33: b_p
 3496,36: VARIABLE
 3496,37: <
 3496,39: p
 3496,40: VARIABLE
 3496,40: ->
 3496,42: s
 3496,43: VARIABLE
 3496,43: .
 3496,44: free_block_p
 3496,56: VARIABLE
 3496,56: )
 3496,57: ;
 3496,59: p
 3496,60: VARIABLE
 3496,61: =
 3496,63: p
 3496,64: VARIABLE
 3496,64: ->
 3496,66: s
 3496,67: VARIABLE
 3496,67: .
 3496,68: free_block_p
 3496,80: VARIABLE
 3496,80: )
 3497,3: {
 3498,5: if
 3498,8: (
 3498,9: p
 3498,10: VARIABLE
 3498,11: >=
 3498,14: p
 3498,15: VARIABLE
 3498,15: ->
 3498,17: s
 3498,18: VARIABLE
 3498,18: .
 3498,19: free_block_p
 3498,31: VARIABLE
 3498,32: &&
 3498,35: (
 3498,36: b_p
 3498,39: VARIABLE
 3498,40: >
 3498,42: p
 3498,43: VARIABLE
 3498,44: ||
 3498,47: b_p
 3498,50: VARIABLE
 3498,51: <
 3498,53: p
 3498,54: VARIABLE
 3498,54: ->
 3498,56: s
 3498,57: VARIABLE
 3498,57: .
 3498,58: free_block_p
 3498,70: VARIABLE
 3498,70: )
 3498,71: )
 3499,5: {
 3500,7: break
 3500,12: ;
 3501,5: }
 3502,3: }
 
408 ( option_expression ; option_expression ; option_expression ) scoped_statement 
 3496,7: (
 3496,8: p
 3496,9: VARIABLE
 3496,10: =
 3496,12: free_p
 3496,18: VARIABLE
 3496,18: ;
 3496,20: !
 3496,21: (
 3496,22: b_p
 3496,25: VARIABLE
 3496,26: >
 3496,28: p
 3496,29: VARIABLE
 3496,30: &&
 3496,33: b_p
 3496,36: VARIABLE
 3496,37: <
 3496,39: p
 3496,40: VARIABLE
 3496,40: ->
 3496,42: s
 3496,43: VARIABLE
 3496,43: .
 3496,44: free_block_p
 3496,56: VARIABLE
 3496,56: )
 3496,57: ;
 3496,59: p
 3496,60: VARIABLE
 3496,61: =
 3496,63: p
 3496,64: VARIABLE
 3496,64: ->
 3496,66: s
 3496,67: VARIABLE
 3496,67: .
 3496,68: free_block_p
 3496,80: VARIABLE
 3496,80: )
 3497,3: {
 3498,5: if
 3498,8: (
 3498,9: p
 3498,10: VARIABLE
 3498,11: >=
 3498,14: p
 3498,15: VARIABLE
 3498,15: ->
 3498,17: s
 3498,18: VARIABLE
 3498,18: .
 3498,19: free_block_p
 3498,31: VARIABLE
 3498,32: &&
 3498,35: (
 3498,36: b_p
 3498,39: VARIABLE
 3498,40: >
 3498,42: p
 3498,43: VARIABLE
 3498,44: ||
 3498,47: b_p
 3498,50: VARIABLE
 3498,51: <
 3498,53: p
 3498,54: VARIABLE
 3498,54: ->
 3498,56: s
 3498,57: VARIABLE
 3498,57: .
 3498,58: free_block_p
 3498,70: VARIABLE
 3498,70: )
 3498,71: )
 3499,5: {
 3500,7: break
 3500,12: ;
 3501,5: }
 3502,3: }
 
460 NAME VARIABLE 
 3496,8: p
 3496,9: VARIABLE
 
65 VARIABLE 
 3496,9: VARIABLE
 
181 = 
 3496,10: =
 
279 NAME VARIABLE 
 3496,12: free_p
 3496,18: VARIABLE
 
179 VARIABLE 
 3496,18: VARIABLE
 
489 ; option_expression ; option_expression ) scoped_statement 
 3496,18: ;
 3496,20: !
 3496,21: (
 3496,22: b_p
 3496,25: VARIABLE
 3496,26: >
 3496,28: p
 3496,29: VARIABLE
 3496,30: &&
 3496,33: b_p
 3496,36: VARIABLE
 3496,37: <
 3496,39: p
 3496,40: VARIABLE
 3496,40: ->
 3496,42: s
 3496,43: VARIABLE
 3496,43: .
 3496,44: free_block_p
 3496,56: VARIABLE
 3496,56: )
 3496,57: ;
 3496,59: p
 3496,60: VARIABLE
 3496,61: =
 3496,63: p
 3496,64: VARIABLE
 3496,64: ->
 3496,66: s
 3496,67: VARIABLE
 3496,67: .
 3496,68: free_block_p
 3496,80: VARIABLE
 3496,80: )
 3497,3: {
 3498,5: if
 3498,8: (
 3498,9: p
 3498,10: VARIABLE
 3498,11: >=
 3498,14: p
 3498,15: VARIABLE
 3498,15: ->
 3498,17: s
 3498,18: VARIABLE
 3498,18: .
 3498,19: free_block_p
 3498,31: VARIABLE
 3498,32: &&
 3498,35: (
 3498,36: b_p
 3498,39: VARIABLE
 3498,40: >
 3498,42: p
 3498,43: VARIABLE
 3498,44: ||
 3498,47: b_p
 3498,50: VARIABLE
 3498,51: <
 3498,53: p
 3498,54: VARIABLE
 3498,54: ->
 3498,56: s
 3498,57: VARIABLE
 3498,57: .
 3498,58: free_block_p
 3498,70: VARIABLE
 3498,70: )
 3498,71: )
 3499,5: {
 3500,7: break
 3500,12: ;
 3501,5: }
 3502,3: }
 
505 ! 
 3496,20: !
 
149 ( expression ) 
 3496,21: (
 3496,22: b_p
 3496,25: VARIABLE
 3496,26: >
 3496,28: p
 3496,29: VARIABLE
 3496,30: &&
 3496,33: b_p
 3496,36: VARIABLE
 3496,37: <
 3496,39: p
 3496,40: VARIABLE
 3496,40: ->
 3496,42: s
 3496,43: VARIABLE
 3496,43: .
 3496,44: free_block_p
 3496,56: VARIABLE
 3496,56: )
 
165 NAME VARIABLE 
 3496,22: b_p
 3496,25: VARIABLE
 
65 VARIABLE 
 3496,25: VARIABLE
 
154 > 
 3496,26: >
 
252 NAME VARIABLE 
 3496,28: p
 3496,29: VARIABLE
 
179 VARIABLE 
 3496,29: VARIABLE
 
159 && inclusive_or_expression 
 3496,30: &&
 3496,33: b_p
 3496,36: VARIABLE
 3496,37: <
 3496,39: p
 3496,40: VARIABLE
 3496,40: ->
 3496,42: s
 3496,43: VARIABLE
 3496,43: .
 3496,44: free_block_p
 3496,56: VARIABLE
 
263 NAME VARIABLE 
 3496,33: b_p
 3496,36: VARIABLE
 
179 VARIABLE 
 3496,36: VARIABLE
 
154 < 
 3496,37: <
 
252 NAME VARIABLE 
 3496,39: p
 3496,40: VARIABLE
 
179 VARIABLE 
 3496,40: VARIABLE
 
147 -> general_identifier 
 3496,40: ->
 3496,42: s
 3496,43: VARIABLE
 
238 NAME VARIABLE 
 3496,42: s
 3496,43: VARIABLE
 
65 VARIABLE 
 3496,43: VARIABLE
 
147 . general_identifier 
 3496,43: .
 3496,44: free_block_p
 3496,56: VARIABLE
 
237 NAME VARIABLE 
 3496,44: free_block_p
 3496,56: VARIABLE
 
65 VARIABLE 
 3496,56: VARIABLE
 
267 ) 
 3496,56: )
 
517 ; option_expression ) scoped_statement 
 3496,57: ;
 3496,59: p
 3496,60: VARIABLE
 3496,61: =
 3496,63: p
 3496,64: VARIABLE
 3496,64: ->
 3496,66: s
 3496,67: VARIABLE
 3496,67: .
 3496,68: free_block_p
 3496,80: VARIABLE
 3496,80: )
 3497,3: {
 3498,5: if
 3498,8: (
 3498,9: p
 3498,10: VARIABLE
 3498,11: >=
 3498,14: p
 3498,15: VARIABLE
 3498,15: ->
 3498,17: s
 3498,18: VARIABLE
 3498,18: .
 3498,19: free_block_p
 3498,31: VARIABLE
 3498,32: &&
 3498,35: (
 3498,36: b_p
 3498,39: VARIABLE
 3498,40: >
 3498,42: p
 3498,43: VARIABLE
 3498,44: ||
 3498,47: b_p
 3498,50: VARIABLE
 3498,51: <
 3498,53: p
 3498,54: VARIABLE
 3498,54: ->
 3498,56: s
 3498,57: VARIABLE
 3498,57: .
 3498,58: free_block_p
 3498,70: VARIABLE
 3498,70: )
 3498,71: )
 3499,5: {
 3500,7: break
 3500,12: ;
 3501,5: }
 3502,3: }
 
521 NAME VARIABLE 
 3496,59: p
 3496,60: VARIABLE
 
179 VARIABLE 
 3496,60: VARIABLE
 
181 = 
 3496,61: =
 
279 NAME VARIABLE 
 3496,63: p
 3496,64: VARIABLE
 
179 VARIABLE 
 3496,64: VARIABLE
 
147 -> general_identifier 
 3496,64: ->
 3496,66: s
 3496,67: VARIABLE
 
238 NAME VARIABLE 
 3496,66: s
 3496,67: VARIABLE
 
65 VARIABLE 
 3496,67: VARIABLE
 
147 . general_identifier 
 3496,67: .
 3496,68: free_block_p
 3496,80: VARIABLE
 
237 NAME VARIABLE 
 3496,68: free_block_p
 3496,80: VARIABLE
 
65 VARIABLE 
 3496,80: VARIABLE
 
525 ) scoped_statement 
 3496,80: )
 3497,3: {
 3498,5: if
 3498,8: (
 3498,9: p
 3498,10: VARIABLE
 3498,11: >=
 3498,14: p
 3498,15: VARIABLE
 3498,15: ->
 3498,17: s
 3498,18: VARIABLE
 3498,18: .
 3498,19: free_block_p
 3498,31: VARIABLE
 3498,32: &&
 3498,35: (
 3498,36: b_p
 3498,39: VARIABLE
 3498,40: >
 3498,42: p
 3498,43: VARIABLE
 3498,44: ||
 3498,47: b_p
 3498,50: VARIABLE
 3498,51: <
 3498,53: p
 3498,54: VARIABLE
 3498,54: ->
 3498,56: s
 3498,57: VARIABLE
 3498,57: .
 3498,58: free_block_p
 3498,70: VARIABLE
 3498,70: )
 3498,71: )
 3499,5: {
 3500,7: break
 3500,12: ;
 3501,5: }
 3502,3: }
 
320 { option_block_item_list } 
 3497,3: {
 3498,5: if
 3498,8: (
 3498,9: p
 3498,10: VARIABLE
 3498,11: >=
 3498,14: p
 3498,15: VARIABLE
 3498,15: ->
 3498,17: s
 3498,18: VARIABLE
 3498,18: .
 3498,19: free_block_p
 3498,31: VARIABLE
 3498,32: &&
 3498,35: (
 3498,36: b_p
 3498,39: VARIABLE
 3498,40: >
 3498,42: p
 3498,43: VARIABLE
 3498,44: ||
 3498,47: b_p
 3498,50: VARIABLE
 3498,51: <
 3498,53: p
 3498,54: VARIABLE
 3498,54: ->
 3498,56: s
 3498,57: VARIABLE
 3498,57: .
 3498,58: free_block_p
 3498,70: VARIABLE
 3498,70: )
 3498,71: )
 3499,5: {
 3500,7: break
 3500,12: ;
 3501,5: }
 3502,3: }
 
320 if ( expression ) scoped_statement 
 3498,5: if
 3498,8: (
 3498,9: p
 3498,10: VARIABLE
 3498,11: >=
 3498,14: p
 3498,15: VARIABLE
 3498,15: ->
 3498,17: s
 3498,18: VARIABLE
 3498,18: .
 3498,19: free_block_p
 3498,31: VARIABLE
 3498,32: &&
 3498,35: (
 3498,36: b_p
 3498,39: VARIABLE
 3498,40: >
 3498,42: p
 3498,43: VARIABLE
 3498,44: ||
 3498,47: b_p
 3498,50: VARIABLE
 3498,51: <
 3498,53: p
 3498,54: VARIABLE
 3498,54: ->
 3498,56: s
 3498,57: VARIABLE
 3498,57: .
 3498,58: free_block_p
 3498,70: VARIABLE
 3498,70: )
 3498,71: )
 3499,5: {
 3500,7: break
 3500,12: ;
 3501,5: }
 
404 ( expression ) scoped_statement 
 3498,8: (
 3498,9: p
 3498,10: VARIABLE
 3498,11: >=
 3498,14: p
 3498,15: VARIABLE
 3498,15: ->
 3498,17: s
 3498,18: VARIABLE
 3498,18: .
 3498,19: free_block_p
 3498,31: VARIABLE
 3498,32: &&
 3498,35: (
 3498,36: b_p
 3498,39: VARIABLE
 3498,40: >
 3498,42: p
 3498,43: VARIABLE
 3498,44: ||
 3498,47: b_p
 3498,50: VARIABLE
 3498,51: <
 3498,53: p
 3498,54: VARIABLE
 3498,54: ->
 3498,56: s
 3498,57: VARIABLE
 3498,57: .
 3498,58: free_block_p
 3498,70: VARIABLE
 3498,70: )
 3498,71: )
 3499,5: {
 3500,7: break
 3500,12: ;
 3501,5: }
 
455 NAME VARIABLE 
 3498,9: p
 3498,10: VARIABLE
 
179 VARIABLE 
 3498,10: VARIABLE
 
154 >= 
 3498,11: >=
 
252 NAME VARIABLE 
 3498,14: p
 3498,15: VARIABLE
 
179 VARIABLE 
 3498,15: VARIABLE
 
147 -> general_identifier 
 3498,15: ->
 3498,17: s
 3498,18: VARIABLE
 
238 NAME VARIABLE 
 3498,17: s
 3498,18: VARIABLE
 
65 VARIABLE 
 3498,18: VARIABLE
 
147 . general_identifier 
 3498,18: .
 3498,19: free_block_p
 3498,31: VARIABLE
 
237 NAME VARIABLE 
 3498,19: free_block_p
 3498,31: VARIABLE
 
65 VARIABLE 
 3498,31: VARIABLE
 
159 && inclusive_or_expression 
 3498,32: &&
 3498,35: (
 3498,36: b_p
 3498,39: VARIABLE
 3498,40: >
 3498,42: p
 3498,43: VARIABLE
 3498,44: ||
 3498,47: b_p
 3498,50: VARIABLE
 3498,51: <
 3498,53: p
 3498,54: VARIABLE
 3498,54: ->
 3498,56: s
 3498,57: VARIABLE
 3498,57: .
 3498,58: free_block_p
 3498,70: VARIABLE
 3498,70: )
 
263 ( expression ) 
 3498,35: (
 3498,36: b_p
 3498,39: VARIABLE
 3498,40: >
 3498,42: p
 3498,43: VARIABLE
 3498,44: ||
 3498,47: b_p
 3498,50: VARIABLE
 3498,51: <
 3498,53: p
 3498,54: VARIABLE
 3498,54: ->
 3498,56: s
 3498,57: VARIABLE
 3498,57: .
 3498,58: free_block_p
 3498,70: VARIABLE
 3498,70: )
 
165 NAME VARIABLE 
 3498,36: b_p
 3498,39: VARIABLE
 
65 VARIABLE 
 3498,39: VARIABLE
 
154 > 
 3498,40: >
 
252 NAME VARIABLE 
 3498,42: p
 3498,43: VARIABLE
 
179 VARIABLE 
 3498,43: VARIABLE
 
160 || logical_and_expression 
 3498,44: ||
 3498,47: b_p
 3498,50: VARIABLE
 3498,51: <
 3498,53: p
 3498,54: VARIABLE
 3498,54: ->
 3498,56: s
 3498,57: VARIABLE
 3498,57: .
 3498,58: free_block_p
 3498,70: VARIABLE
 
264 NAME VARIABLE 
 3498,47: b_p
 3498,50: VARIABLE
 
179 VARIABLE 
 3498,50: VARIABLE
 
154 < 
 3498,51: <
 
252 NAME VARIABLE 
 3498,53: p
 3498,54: VARIABLE
 
179 VARIABLE 
 3498,54: VARIABLE
 
147 -> general_identifier 
 3498,54: ->
 3498,56: s
 3498,57: VARIABLE
 
238 NAME VARIABLE 
 3498,56: s
 3498,57: VARIABLE
 
65 VARIABLE 
 3498,57: VARIABLE
 
147 . general_identifier 
 3498,57: .
 3498,58: free_block_p
 3498,70: VARIABLE
 
237 NAME VARIABLE 
 3498,58: free_block_p
 3498,70: VARIABLE
 
65 VARIABLE 
 3498,70: VARIABLE
 
267 ) 
 3498,70: )
 
483 ) scoped_statement 
 3498,71: )
 3499,5: {
 3500,7: break
 3500,12: ;
 3501,5: }
 
320 { option_block_item_list } 
 3499,5: {
 3500,7: break
 3500,12: ;
 3501,5: }
 
201 break ; 
 3500,7: break
 3500,12: ;
 
337 ; 
 3500,12: ;
 
201 } 
 3501,5: }
 
201 } 
 3502,3: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 3504,3: if
 3504,6: (
 3504,7: b_p
 3504,10: VARIABLE
 3504,11: +
 3504,13: b_p
 3504,16: VARIABLE
 3504,16: ->
 3504,18: s
 3504,19: VARIABLE
 3504,19: .
 3504,20: size
 3504,24: VARIABLE
 3504,25: ==
 3504,28: p
 3504,29: VARIABLE
 3504,29: ->
 3504,31: s
 3504,32: VARIABLE
 3504,32: .
 3504,33: free_block_p
 3504,45: VARIABLE
 3504,45: )
 3505,3: {
 3506,5: b_p
 3506,8: VARIABLE
 3506,8: ->
 3506,10: s
 3506,11: VARIABLE
 3506,11: .
 3506,12: size
 3506,16: VARIABLE
 3506,17: +=
 3506,20: p
 3506,21: VARIABLE
 3506,21: ->
 3506,23: s
 3506,24: VARIABLE
 3506,24: .
 3506,25: free_block_p
 3506,37: VARIABLE
 3506,37: ->
 3506,39: s
 3506,40: VARIABLE
 3506,40: .
 3506,41: size
 3506,45: VARIABLE
 3506,45: ;
 3507,5: b_p
 3507,8: VARIABLE
 3507,8: ->
 3507,10: s
 3507,11: VARIABLE
 3507,11: .
 3507,12: free_block_p
 3507,24: VARIABLE
 3507,25: =
 3507,27: p
 3507,28: VARIABLE
 3507,28: ->
 3507,30: s
 3507,31: VARIABLE
 3507,31: .
 3507,32: free_block_p
 3507,44: VARIABLE
 3507,44: ->
 3507,46: s
 3507,47: VARIABLE
 3507,47: .
 3507,48: free_block_p
 3507,60: VARIABLE
 3507,60: ;
 3508,3: }
 3509,3: else
 3510,3: {
 3511,5: b_p
 3511,8: VARIABLE
 3511,8: ->
 3511,10: s
 3511,11: VARIABLE
 3511,11: .
 3511,12: free_block_p
 3511,24: VARIABLE
 3511,25: =
 3511,27: p
 3511,28: VARIABLE
 3511,28: ->
 3511,30: s
 3511,31: VARIABLE
 3511,31: .
 3511,32: free_block_p
 3511,44: VARIABLE
 3511,44: ;
 3512,3: }
 
404 ( expression ) scoped_statement else scoped_statement 
 3504,6: (
 3504,7: b_p
 3504,10: VARIABLE
 3504,11: +
 3504,13: b_p
 3504,16: VARIABLE
 3504,16: ->
 3504,18: s
 3504,19: VARIABLE
 3504,19: .
 3504,20: size
 3504,24: VARIABLE
 3504,25: ==
 3504,28: p
 3504,29: VARIABLE
 3504,29: ->
 3504,31: s
 3504,32: VARIABLE
 3504,32: .
 3504,33: free_block_p
 3504,45: VARIABLE
 3504,45: )
 3505,3: {
 3506,5: b_p
 3506,8: VARIABLE
 3506,8: ->
 3506,10: s
 3506,11: VARIABLE
 3506,11: .
 3506,12: size
 3506,16: VARIABLE
 3506,17: +=
 3506,20: p
 3506,21: VARIABLE
 3506,21: ->
 3506,23: s
 3506,24: VARIABLE
 3506,24: .
 3506,25: free_block_p
 3506,37: VARIABLE
 3506,37: ->
 3506,39: s
 3506,40: VARIABLE
 3506,40: .
 3506,41: size
 3506,45: VARIABLE
 3506,45: ;
 3507,5: b_p
 3507,8: VARIABLE
 3507,8: ->
 3507,10: s
 3507,11: VARIABLE
 3507,11: .
 3507,12: free_block_p
 3507,24: VARIABLE
 3507,25: =
 3507,27: p
 3507,28: VARIABLE
 3507,28: ->
 3507,30: s
 3507,31: VARIABLE
 3507,31: .
 3507,32: free_block_p
 3507,44: VARIABLE
 3507,44: ->
 3507,46: s
 3507,47: VARIABLE
 3507,47: .
 3507,48: free_block_p
 3507,60: VARIABLE
 3507,60: ;
 3508,3: }
 3509,3: else
 3510,3: {
 3511,5: b_p
 3511,8: VARIABLE
 3511,8: ->
 3511,10: s
 3511,11: VARIABLE
 3511,11: .
 3511,12: free_block_p
 3511,24: VARIABLE
 3511,25: =
 3511,27: p
 3511,28: VARIABLE
 3511,28: ->
 3511,30: s
 3511,31: VARIABLE
 3511,31: .
 3511,32: free_block_p
 3511,44: VARIABLE
 3511,44: ;
 3512,3: }
 
455 NAME VARIABLE 
 3504,7: b_p
 3504,10: VARIABLE
 
179 VARIABLE 
 3504,10: VARIABLE
 
152 + 
 3504,11: +
 
246 NAME VARIABLE 
 3504,13: b_p
 3504,16: VARIABLE
 
179 VARIABLE 
 3504,16: VARIABLE
 
147 -> general_identifier 
 3504,16: ->
 3504,18: s
 3504,19: VARIABLE
 
238 NAME VARIABLE 
 3504,18: s
 3504,19: VARIABLE
 
65 VARIABLE 
 3504,19: VARIABLE
 
147 . general_identifier 
 3504,19: .
 3504,20: size
 3504,24: VARIABLE
 
237 NAME VARIABLE 
 3504,20: size
 3504,24: VARIABLE
 
65 VARIABLE 
 3504,24: VARIABLE
 
155 == 
 3504,25: ==
 
257 NAME VARIABLE 
 3504,28: p
 3504,29: VARIABLE
 
179 VARIABLE 
 3504,29: VARIABLE
 
147 -> general_identifier 
 3504,29: ->
 3504,31: s
 3504,32: VARIABLE
 
238 NAME VARIABLE 
 3504,31: s
 3504,32: VARIABLE
 
65 VARIABLE 
 3504,32: VARIABLE
 
147 . general_identifier 
 3504,32: .
 3504,33: free_block_p
 3504,45: VARIABLE
 
237 NAME VARIABLE 
 3504,33: free_block_p
 3504,45: VARIABLE
 
65 VARIABLE 
 3504,45: VARIABLE
 
483 ) scoped_statement else scoped_statement 
 3504,45: )
 3505,3: {
 3506,5: b_p
 3506,8: VARIABLE
 3506,8: ->
 3506,10: s
 3506,11: VARIABLE
 3506,11: .
 3506,12: size
 3506,16: VARIABLE
 3506,17: +=
 3506,20: p
 3506,21: VARIABLE
 3506,21: ->
 3506,23: s
 3506,24: VARIABLE
 3506,24: .
 3506,25: free_block_p
 3506,37: VARIABLE
 3506,37: ->
 3506,39: s
 3506,40: VARIABLE
 3506,40: .
 3506,41: size
 3506,45: VARIABLE
 3506,45: ;
 3507,5: b_p
 3507,8: VARIABLE
 3507,8: ->
 3507,10: s
 3507,11: VARIABLE
 3507,11: .
 3507,12: free_block_p
 3507,24: VARIABLE
 3507,25: =
 3507,27: p
 3507,28: VARIABLE
 3507,28: ->
 3507,30: s
 3507,31: VARIABLE
 3507,31: .
 3507,32: free_block_p
 3507,44: VARIABLE
 3507,44: ->
 3507,46: s
 3507,47: VARIABLE
 3507,47: .
 3507,48: free_block_p
 3507,60: VARIABLE
 3507,60: ;
 3508,3: }
 3509,3: else
 3510,3: {
 3511,5: b_p
 3511,8: VARIABLE
 3511,8: ->
 3511,10: s
 3511,11: VARIABLE
 3511,11: .
 3511,12: free_block_p
 3511,24: VARIABLE
 3511,25: =
 3511,27: p
 3511,28: VARIABLE
 3511,28: ->
 3511,30: s
 3511,31: VARIABLE
 3511,31: .
 3511,32: free_block_p
 3511,44: VARIABLE
 3511,44: ;
 3512,3: }
 
320 { option_block_item_list } 
 3505,3: {
 3506,5: b_p
 3506,8: VARIABLE
 3506,8: ->
 3506,10: s
 3506,11: VARIABLE
 3506,11: .
 3506,12: size
 3506,16: VARIABLE
 3506,17: +=
 3506,20: p
 3506,21: VARIABLE
 3506,21: ->
 3506,23: s
 3506,24: VARIABLE
 3506,24: .
 3506,25: free_block_p
 3506,37: VARIABLE
 3506,37: ->
 3506,39: s
 3506,40: VARIABLE
 3506,40: .
 3506,41: size
 3506,45: VARIABLE
 3506,45: ;
 3507,5: b_p
 3507,8: VARIABLE
 3507,8: ->
 3507,10: s
 3507,11: VARIABLE
 3507,11: .
 3507,12: free_block_p
 3507,24: VARIABLE
 3507,25: =
 3507,27: p
 3507,28: VARIABLE
 3507,28: ->
 3507,30: s
 3507,31: VARIABLE
 3507,31: .
 3507,32: free_block_p
 3507,44: VARIABLE
 3507,44: ->
 3507,46: s
 3507,47: VARIABLE
 3507,47: .
 3507,48: free_block_p
 3507,60: VARIABLE
 3507,60: ;
 3508,3: }
 
201 NAME VARIABLE 
 3506,5: b_p
 3506,8: VARIABLE
 
65 VARIABLE 
 3506,8: VARIABLE
 
147 -> general_identifier 
 3506,8: ->
 3506,10: s
 3506,11: VARIABLE
 
238 NAME VARIABLE 
 3506,10: s
 3506,11: VARIABLE
 
65 VARIABLE 
 3506,11: VARIABLE
 
147 . general_identifier 
 3506,11: .
 3506,12: size
 3506,16: VARIABLE
 
237 NAME VARIABLE 
 3506,12: size
 3506,16: VARIABLE
 
65 VARIABLE 
 3506,16: VARIABLE
 
181 += 
 3506,17: +=
 
279 NAME VARIABLE 
 3506,20: p
 3506,21: VARIABLE
 
179 VARIABLE 
 3506,21: VARIABLE
 
147 -> general_identifier 
 3506,21: ->
 3506,23: s
 3506,24: VARIABLE
 
238 NAME VARIABLE 
 3506,23: s
 3506,24: VARIABLE
 
65 VARIABLE 
 3506,24: VARIABLE
 
147 . general_identifier 
 3506,24: .
 3506,25: free_block_p
 3506,37: VARIABLE
 
237 NAME VARIABLE 
 3506,25: free_block_p
 3506,37: VARIABLE
 
65 VARIABLE 
 3506,37: VARIABLE
 
147 -> general_identifier 
 3506,37: ->
 3506,39: s
 3506,40: VARIABLE
 
238 NAME VARIABLE 
 3506,39: s
 3506,40: VARIABLE
 
65 VARIABLE 
 3506,40: VARIABLE
 
147 . general_identifier 
 3506,40: .
 3506,41: size
 3506,45: VARIABLE
 
237 NAME VARIABLE 
 3506,41: size
 3506,45: VARIABLE
 
65 VARIABLE 
 3506,45: VARIABLE
 
331 ; 
 3506,45: ;
 
201 NAME VARIABLE 
 3507,5: b_p
 3507,8: VARIABLE
 
65 VARIABLE 
 3507,8: VARIABLE
 
147 -> general_identifier 
 3507,8: ->
 3507,10: s
 3507,11: VARIABLE
 
238 NAME VARIABLE 
 3507,10: s
 3507,11: VARIABLE
 
65 VARIABLE 
 3507,11: VARIABLE
 
147 . general_identifier 
 3507,11: .
 3507,12: free_block_p
 3507,24: VARIABLE
 
237 NAME VARIABLE 
 3507,12: free_block_p
 3507,24: VARIABLE
 
65 VARIABLE 
 3507,24: VARIABLE
 
181 = 
 3507,25: =
 
279 NAME VARIABLE 
 3507,27: p
 3507,28: VARIABLE
 
179 VARIABLE 
 3507,28: VARIABLE
 
147 -> general_identifier 
 3507,28: ->
 3507,30: s
 3507,31: VARIABLE
 
238 NAME VARIABLE 
 3507,30: s
 3507,31: VARIABLE
 
65 VARIABLE 
 3507,31: VARIABLE
 
147 . general_identifier 
 3507,31: .
 3507,32: free_block_p
 3507,44: VARIABLE
 
237 NAME VARIABLE 
 3507,32: free_block_p
 3507,44: VARIABLE
 
65 VARIABLE 
 3507,44: VARIABLE
 
147 -> general_identifier 
 3507,44: ->
 3507,46: s
 3507,47: VARIABLE
 
238 NAME VARIABLE 
 3507,46: s
 3507,47: VARIABLE
 
65 VARIABLE 
 3507,47: VARIABLE
 
147 . general_identifier 
 3507,47: .
 3507,48: free_block_p
 3507,60: VARIABLE
 
237 NAME VARIABLE 
 3507,48: free_block_p
 3507,60: VARIABLE
 
65 VARIABLE 
 3507,60: VARIABLE
 
331 ; 
 3507,60: ;
 
201 } 
 3508,3: }
 
512 else scoped_statement 
 3509,3: else
 3510,3: {
 3511,5: b_p
 3511,8: VARIABLE
 3511,8: ->
 3511,10: s
 3511,11: VARIABLE
 3511,11: .
 3511,12: free_block_p
 3511,24: VARIABLE
 3511,25: =
 3511,27: p
 3511,28: VARIABLE
 3511,28: ->
 3511,30: s
 3511,31: VARIABLE
 3511,31: .
 3511,32: free_block_p
 3511,44: VARIABLE
 3511,44: ;
 3512,3: }
 
320 { option_block_item_list } 
 3510,3: {
 3511,5: b_p
 3511,8: VARIABLE
 3511,8: ->
 3511,10: s
 3511,11: VARIABLE
 3511,11: .
 3511,12: free_block_p
 3511,24: VARIABLE
 3511,25: =
 3511,27: p
 3511,28: VARIABLE
 3511,28: ->
 3511,30: s
 3511,31: VARIABLE
 3511,31: .
 3511,32: free_block_p
 3511,44: VARIABLE
 3511,44: ;
 3512,3: }
 
201 NAME VARIABLE 
 3511,5: b_p
 3511,8: VARIABLE
 
65 VARIABLE 
 3511,8: VARIABLE
 
147 -> general_identifier 
 3511,8: ->
 3511,10: s
 3511,11: VARIABLE
 
238 NAME VARIABLE 
 3511,10: s
 3511,11: VARIABLE
 
65 VARIABLE 
 3511,11: VARIABLE
 
147 . general_identifier 
 3511,11: .
 3511,12: free_block_p
 3511,24: VARIABLE
 
237 NAME VARIABLE 
 3511,12: free_block_p
 3511,24: VARIABLE
 
65 VARIABLE 
 3511,24: VARIABLE
 
181 = 
 3511,25: =
 
279 NAME VARIABLE 
 3511,27: p
 3511,28: VARIABLE
 
179 VARIABLE 
 3511,28: VARIABLE
 
147 -> general_identifier 
 3511,28: ->
 3511,30: s
 3511,31: VARIABLE
 
238 NAME VARIABLE 
 3511,30: s
 3511,31: VARIABLE
 
65 VARIABLE 
 3511,31: VARIABLE
 
147 . general_identifier 
 3511,31: .
 3511,32: free_block_p
 3511,44: VARIABLE
 
237 NAME VARIABLE 
 3511,32: free_block_p
 3511,44: VARIABLE
 
65 VARIABLE 
 3511,44: VARIABLE
 
331 ; 
 3511,44: ;
 
201 } 
 3512,3: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 3514,3: if
 3514,6: (
 3514,7: p
 3514,8: VARIABLE
 3514,9: +
 3514,11: p
 3514,12: VARIABLE
 3514,12: ->
 3514,14: s
 3514,15: VARIABLE
 3514,15: .
 3514,16: size
 3514,20: VARIABLE
 3514,21: ==
 3514,24: b_p
 3514,27: VARIABLE
 3514,27: )
 3515,3: {
 3516,5: p
 3516,6: VARIABLE
 3516,6: ->
 3516,8: s
 3516,9: VARIABLE
 3516,9: .
 3516,10: size
 3516,14: VARIABLE
 3516,15: +=
 3516,18: b_p
 3516,21: VARIABLE
 3516,21: ->
 3516,23: s
 3516,24: VARIABLE
 3516,24: .
 3516,25: size
 3516,29: VARIABLE
 3516,29: ;
 3517,5: p
 3517,6: VARIABLE
 3517,6: ->
 3517,8: s
 3517,9: VARIABLE
 3517,9: .
 3517,10: free_block_p
 3517,22: VARIABLE
 3517,23: =
 3517,25: b_p
 3517,28: VARIABLE
 3517,28: ->
 3517,30: s
 3517,31: VARIABLE
 3517,31: .
 3517,32: free_block_p
 3517,44: VARIABLE
 3517,44: ;
 3518,3: }
 3519,3: else
 3520,3: {
 3521,5: p
 3521,6: VARIABLE
 3521,6: ->
 3521,8: s
 3521,9: VARIABLE
 3521,9: .
 3521,10: free_block_p
 3521,22: VARIABLE
 3521,23: =
 3521,25: b_p
 3521,28: VARIABLE
 3521,28: ;
 3522,3: }
 
404 ( expression ) scoped_statement else scoped_statement 
 3514,6: (
 3514,7: p
 3514,8: VARIABLE
 3514,9: +
 3514,11: p
 3514,12: VARIABLE
 3514,12: ->
 3514,14: s
 3514,15: VARIABLE
 3514,15: .
 3514,16: size
 3514,20: VARIABLE
 3514,21: ==
 3514,24: b_p
 3514,27: VARIABLE
 3514,27: )
 3515,3: {
 3516,5: p
 3516,6: VARIABLE
 3516,6: ->
 3516,8: s
 3516,9: VARIABLE
 3516,9: .
 3516,10: size
 3516,14: VARIABLE
 3516,15: +=
 3516,18: b_p
 3516,21: VARIABLE
 3516,21: ->
 3516,23: s
 3516,24: VARIABLE
 3516,24: .
 3516,25: size
 3516,29: VARIABLE
 3516,29: ;
 3517,5: p
 3517,6: VARIABLE
 3517,6: ->
 3517,8: s
 3517,9: VARIABLE
 3517,9: .
 3517,10: free_block_p
 3517,22: VARIABLE
 3517,23: =
 3517,25: b_p
 3517,28: VARIABLE
 3517,28: ->
 3517,30: s
 3517,31: VARIABLE
 3517,31: .
 3517,32: free_block_p
 3517,44: VARIABLE
 3517,44: ;
 3518,3: }
 3519,3: else
 3520,3: {
 3521,5: p
 3521,6: VARIABLE
 3521,6: ->
 3521,8: s
 3521,9: VARIABLE
 3521,9: .
 3521,10: free_block_p
 3521,22: VARIABLE
 3521,23: =
 3521,25: b_p
 3521,28: VARIABLE
 3521,28: ;
 3522,3: }
 
455 NAME VARIABLE 
 3514,7: p
 3514,8: VARIABLE
 
179 VARIABLE 
 3514,8: VARIABLE
 
152 + 
 3514,9: +
 
246 NAME VARIABLE 
 3514,11: p
 3514,12: VARIABLE
 
179 VARIABLE 
 3514,12: VARIABLE
 
147 -> general_identifier 
 3514,12: ->
 3514,14: s
 3514,15: VARIABLE
 
238 NAME VARIABLE 
 3514,14: s
 3514,15: VARIABLE
 
65 VARIABLE 
 3514,15: VARIABLE
 
147 . general_identifier 
 3514,15: .
 3514,16: size
 3514,20: VARIABLE
 
237 NAME VARIABLE 
 3514,16: size
 3514,20: VARIABLE
 
65 VARIABLE 
 3514,20: VARIABLE
 
155 == 
 3514,21: ==
 
257 NAME VARIABLE 
 3514,24: b_p
 3514,27: VARIABLE
 
179 VARIABLE 
 3514,27: VARIABLE
 
483 ) scoped_statement else scoped_statement 
 3514,27: )
 3515,3: {
 3516,5: p
 3516,6: VARIABLE
 3516,6: ->
 3516,8: s
 3516,9: VARIABLE
 3516,9: .
 3516,10: size
 3516,14: VARIABLE
 3516,15: +=
 3516,18: b_p
 3516,21: VARIABLE
 3516,21: ->
 3516,23: s
 3516,24: VARIABLE
 3516,24: .
 3516,25: size
 3516,29: VARIABLE
 3516,29: ;
 3517,5: p
 3517,6: VARIABLE
 3517,6: ->
 3517,8: s
 3517,9: VARIABLE
 3517,9: .
 3517,10: free_block_p
 3517,22: VARIABLE
 3517,23: =
 3517,25: b_p
 3517,28: VARIABLE
 3517,28: ->
 3517,30: s
 3517,31: VARIABLE
 3517,31: .
 3517,32: free_block_p
 3517,44: VARIABLE
 3517,44: ;
 3518,3: }
 3519,3: else
 3520,3: {
 3521,5: p
 3521,6: VARIABLE
 3521,6: ->
 3521,8: s
 3521,9: VARIABLE
 3521,9: .
 3521,10: free_block_p
 3521,22: VARIABLE
 3521,23: =
 3521,25: b_p
 3521,28: VARIABLE
 3521,28: ;
 3522,3: }
 
320 { option_block_item_list } 
 3515,3: {
 3516,5: p
 3516,6: VARIABLE
 3516,6: ->
 3516,8: s
 3516,9: VARIABLE
 3516,9: .
 3516,10: size
 3516,14: VARIABLE
 3516,15: +=
 3516,18: b_p
 3516,21: VARIABLE
 3516,21: ->
 3516,23: s
 3516,24: VARIABLE
 3516,24: .
 3516,25: size
 3516,29: VARIABLE
 3516,29: ;
 3517,5: p
 3517,6: VARIABLE
 3517,6: ->
 3517,8: s
 3517,9: VARIABLE
 3517,9: .
 3517,10: free_block_p
 3517,22: VARIABLE
 3517,23: =
 3517,25: b_p
 3517,28: VARIABLE
 3517,28: ->
 3517,30: s
 3517,31: VARIABLE
 3517,31: .
 3517,32: free_block_p
 3517,44: VARIABLE
 3517,44: ;
 3518,3: }
 
201 NAME VARIABLE 
 3516,5: p
 3516,6: VARIABLE
 
65 VARIABLE 
 3516,6: VARIABLE
 
147 -> general_identifier 
 3516,6: ->
 3516,8: s
 3516,9: VARIABLE
 
238 NAME VARIABLE 
 3516,8: s
 3516,9: VARIABLE
 
65 VARIABLE 
 3516,9: VARIABLE
 
147 . general_identifier 
 3516,9: .
 3516,10: size
 3516,14: VARIABLE
 
237 NAME VARIABLE 
 3516,10: size
 3516,14: VARIABLE
 
65 VARIABLE 
 3516,14: VARIABLE
 
181 += 
 3516,15: +=
 
279 NAME VARIABLE 
 3516,18: b_p
 3516,21: VARIABLE
 
179 VARIABLE 
 3516,21: VARIABLE
 
147 -> general_identifier 
 3516,21: ->
 3516,23: s
 3516,24: VARIABLE
 
238 NAME VARIABLE 
 3516,23: s
 3516,24: VARIABLE
 
65 VARIABLE 
 3516,24: VARIABLE
 
147 . general_identifier 
 3516,24: .
 3516,25: size
 3516,29: VARIABLE
 
237 NAME VARIABLE 
 3516,25: size
 3516,29: VARIABLE
 
65 VARIABLE 
 3516,29: VARIABLE
 
331 ; 
 3516,29: ;
 
201 NAME VARIABLE 
 3517,5: p
 3517,6: VARIABLE
 
65 VARIABLE 
 3517,6: VARIABLE
 
147 -> general_identifier 
 3517,6: ->
 3517,8: s
 3517,9: VARIABLE
 
238 NAME VARIABLE 
 3517,8: s
 3517,9: VARIABLE
 
65 VARIABLE 
 3517,9: VARIABLE
 
147 . general_identifier 
 3517,9: .
 3517,10: free_block_p
 3517,22: VARIABLE
 
237 NAME VARIABLE 
 3517,10: free_block_p
 3517,22: VARIABLE
 
65 VARIABLE 
 3517,22: VARIABLE
 
181 = 
 3517,23: =
 
279 NAME VARIABLE 
 3517,25: b_p
 3517,28: VARIABLE
 
179 VARIABLE 
 3517,28: VARIABLE
 
147 -> general_identifier 
 3517,28: ->
 3517,30: s
 3517,31: VARIABLE
 
238 NAME VARIABLE 
 3517,30: s
 3517,31: VARIABLE
 
65 VARIABLE 
 3517,31: VARIABLE
 
147 . general_identifier 
 3517,31: .
 3517,32: free_block_p
 3517,44: VARIABLE
 
237 NAME VARIABLE 
 3517,32: free_block_p
 3517,44: VARIABLE
 
65 VARIABLE 
 3517,44: VARIABLE
 
331 ; 
 3517,44: ;
 
201 } 
 3518,3: }
 
512 else scoped_statement 
 3519,3: else
 3520,3: {
 3521,5: p
 3521,6: VARIABLE
 3521,6: ->
 3521,8: s
 3521,9: VARIABLE
 3521,9: .
 3521,10: free_block_p
 3521,22: VARIABLE
 3521,23: =
 3521,25: b_p
 3521,28: VARIABLE
 3521,28: ;
 3522,3: }
 
320 { option_block_item_list } 
 3520,3: {
 3521,5: p
 3521,6: VARIABLE
 3521,6: ->
 3521,8: s
 3521,9: VARIABLE
 3521,9: .
 3521,10: free_block_p
 3521,22: VARIABLE
 3521,23: =
 3521,25: b_p
 3521,28: VARIABLE
 3521,28: ;
 3522,3: }
 
201 NAME VARIABLE 
 3521,5: p
 3521,6: VARIABLE
 
65 VARIABLE 
 3521,6: VARIABLE
 
147 -> general_identifier 
 3521,6: ->
 3521,8: s
 3521,9: VARIABLE
 
238 NAME VARIABLE 
 3521,8: s
 3521,9: VARIABLE
 
65 VARIABLE 
 3521,9: VARIABLE
 
147 . general_identifier 
 3521,9: .
 3521,10: free_block_p
 3521,22: VARIABLE
 
237 NAME VARIABLE 
 3521,10: free_block_p
 3521,22: VARIABLE
 
65 VARIABLE 
 3521,22: VARIABLE
 
181 = 
 3521,23: =
 
279 NAME VARIABLE 
 3521,25: b_p
 3521,28: VARIABLE
 
179 VARIABLE 
 3521,28: VARIABLE
 
331 ; 
 3521,28: ;
 
201 } 
 3522,3: }
 
201 NAME VARIABLE 
 3524,3: free_p
 3524,9: VARIABLE
 
65 VARIABLE 
 3524,9: VARIABLE
 
181 = 
 3524,10: =
 
279 NAME VARIABLE 
 3524,12: p
 3524,13: VARIABLE
 
179 VARIABLE 
 3524,13: VARIABLE
 
331 ; 
 3524,13: ;
 
201 } 
 3525,1: }
 
23 void 
 3527,1: void
 
5 NAME VARIABLE 
 3527,6: c_bfree
 3527,13: VARIABLE
 
65 VARIABLE 
 3527,13: VARIABLE
 
63 ( scoped_parameter_type_list ) 
 3527,13: (
 3527,14: void
 3527,19: *
 3527,20: p
 3527,21: VARIABLE
 3527,21: ,
 3527,23: size_t
 3527,29: TYPE
 3527,30: block_size
 3527,40: VARIABLE
 3527,40: )
 
186 void 
 3527,14: void
 
298 * option_type_qualifier_list option_pointer 
 3527,19: *
 
386 NAME VARIABLE 
 3527,20: p
 3527,21: VARIABLE
 
65 VARIABLE 
 3527,21: VARIABLE
 
300 , parameter_declaration 
 3527,21: ,
 3527,23: size_t
 3527,29: TYPE
 3527,30: block_size
 3527,40: VARIABLE
 
391 NAME TYPE 
 3527,23: size_t
 3527,29: TYPE
 
26 TYPE 
 3527,29: TYPE
 
298 NAME VARIABLE 
 3527,30: block_size
 3527,40: VARIABLE
 
65 VARIABLE 
 3527,40: VARIABLE
 
187 ) 
 3527,40: )
 
94 { option_block_item_list } 
 3528,1: {
 3529,3: Header
 3529,9: TYPE
 3529,10: *
 3529,11: b_p
 3529,14: VARIABLE
 3529,14: ;
 3531,3: if
 3531,6: (
 3531,7: block_size
 3531,17: VARIABLE
 3531,18: <
 3531,20: 1024
 3531,24: )
 3532,3: {
 3533,5: fprintf
 3533,12: VARIABLE
 3533,12: (
 3535,12: stderr
 3535,18: VARIABLE
 3537,18: ,
 3537,20: "
 3537,64: ,
 3537,66: 1024
 3537,70: )
 3537,71: ;
 3538,5: return
 3538,11: ;
 3539,3: }
 3541,3: b_p
 3541,6: VARIABLE
 3541,7: =
 3541,9: (
 3541,10: Header
 3541,16: TYPE
 3541,17: *
 3541,18: )
 3541,19: p
 3541,20: VARIABLE
 3541,20: ;
 3542,3: b_p
 3542,6: VARIABLE
 3542,6: ->
 3542,8: s
 3542,9: VARIABLE
 3542,9: .
 3542,10: size
 3542,14: VARIABLE
 3542,15: =
 3542,17: (
 3542,18: block_size
 3542,28: VARIABLE
 3542,29: /
 3542,31: sizeof
 3542,37: (
 3542,38: Header
 3542,44: TYPE
 3542,44: )
 3542,45: )
 3542,47: -
 3542,49: 1
 3542,50: ;
 3543,3: c_free
 3543,9: VARIABLE
 3543,9: (
 3543,10: (
 3543,11: void
 3543,16: *
 3543,17: )
 3543,18: (
 3543,19: b_p
 3543,22: VARIABLE
 3543,23: +
 3543,25: 1
 3543,26: )
 3543,27: )
 3543,28: ;
 3544,1: }
 
201 NAME TYPE 
 3529,3: Header
 3529,9: TYPE
 
65 TYPE 
 3529,9: TYPE
 
93 * option_type_qualifier_list option_pointer 
 3529,10: *
 
64 NAME VARIABLE 
 3529,11: b_p
 3529,14: VARIABLE
 
65 VARIABLE 
 3529,14: VARIABLE
 
60 ; 
 3529,14: ;
 
320 if ( expression ) scoped_statement 
 3531,3: if
 3531,6: (
 3531,7: block_size
 3531,17: VARIABLE
 3531,18: <
 3531,20: 1024
 3531,24: )
 3532,3: {
 3533,5: fprintf
 3533,12: VARIABLE
 3533,12: (
 3535,12: stderr
 3535,18: VARIABLE
 3537,18: ,
 3537,20: "
 3537,64: ,
 3537,66: 1024
 3537,70: )
 3537,71: ;
 3538,5: return
 3538,11: ;
 3539,3: }
 
404 ( expression ) scoped_statement 
 3531,6: (
 3531,7: block_size
 3531,17: VARIABLE
 3531,18: <
 3531,20: 1024
 3531,24: )
 3532,3: {
 3533,5: fprintf
 3533,12: VARIABLE
 3533,12: (
 3535,12: stderr
 3535,18: VARIABLE
 3537,18: ,
 3537,20: "
 3537,64: ,
 3537,66: 1024
 3537,70: )
 3537,71: ;
 3538,5: return
 3538,11: ;
 3539,3: }
 
455 NAME VARIABLE 
 3531,7: block_size
 3531,17: VARIABLE
 
179 VARIABLE 
 3531,17: VARIABLE
 
154 < 
 3531,18: <
 
252 CONSTANT 
 3531,20: 1024
 
483 ) scoped_statement 
 3531,24: )
 3532,3: {
 3533,5: fprintf
 3533,12: VARIABLE
 3533,12: (
 3535,12: stderr
 3535,18: VARIABLE
 3537,18: ,
 3537,20: "
 3537,64: ,
 3537,66: 1024
 3537,70: )
 3537,71: ;
 3538,5: return
 3538,11: ;
 3539,3: }
 
320 { option_block_item_list } 
 3532,3: {
 3533,5: fprintf
 3533,12: VARIABLE
 3533,12: (
 3535,12: stderr
 3535,18: VARIABLE
 3537,18: ,
 3537,20: "
 3537,64: ,
 3537,66: 1024
 3537,70: )
 3537,71: ;
 3538,5: return
 3538,11: ;
 3539,3: }
 
201 NAME VARIABLE 
 3533,5: fprintf
 3533,12: VARIABLE
 
65 VARIABLE 
 3533,12: VARIABLE
 
147 ( option_argument_expression_list ) 
 3533,12: (
 3535,12: stderr
 3535,18: VARIABLE
 3537,18: ,
 3537,20: "
 3537,64: ,
 3537,66: 1024
 3537,70: )
 
235 NAME VARIABLE 
 3535,12: stderr
 3535,18: VARIABLE
 
179 VARIABLE 
 3535,18: VARIABLE
 
352 , assignment_expression 
 3537,18: ,
 3537,20: "
 
429 STRING_LITERAL 
 3537,20: "
 
352 , assignment_expression 
 3537,64: ,
 3537,66: 1024
 
429 CONSTANT 
 3537,66: 1024
 
351 ) 
 3537,70: )
 
331 ; 
 3537,71: ;
 
201 return option_expression ; 
 3538,5: return
 3538,11: ;
 
415 ; 
 3538,11: ;
 
201 } 
 3539,3: }
 
201 NAME VARIABLE 
 3541,3: b_p
 3541,6: VARIABLE
 
65 VARIABLE 
 3541,6: VARIABLE
 
181 = 
 3541,7: =
 
279 ( type_name ) cast_expression 
 3541,9: (
 3541,10: Header
 3541,16: TYPE
 3541,17: *
 3541,18: )
 3541,19: p
 3541,20: VARIABLE
 
165 NAME TYPE 
 3541,10: Header
 3541,16: TYPE
 
65 TYPE 
 3541,16: TYPE
 
137 * option_type_qualifier_list option_pointer 
 3541,17: *
 
269 ) cast_expression 
 3541,18: )
 3541,19: p
 3541,20: VARIABLE
 
369 NAME VARIABLE 
 3541,19: p
 3541,20: VARIABLE
 
179 VARIABLE 
 3541,20: VARIABLE
 
331 ; 
 3541,20: ;
 
201 NAME VARIABLE 
 3542,3: b_p
 3542,6: VARIABLE
 
65 VARIABLE 
 3542,6: VARIABLE
 
147 -> general_identifier 
 3542,6: ->
 3542,8: s
 3542,9: VARIABLE
 
238 NAME VARIABLE 
 3542,8: s
 3542,9: VARIABLE
 
65 VARIABLE 
 3542,9: VARIABLE
 
147 . general_identifier 
 3542,9: .
 3542,10: size
 3542,14: VARIABLE
 
237 NAME VARIABLE 
 3542,10: size
 3542,14: VARIABLE
 
65 VARIABLE 
 3542,14: VARIABLE
 
181 = 
 3542,15: =
 
279 ( expression ) 
 3542,17: (
 3542,18: block_size
 3542,28: VARIABLE
 3542,29: /
 3542,31: sizeof
 3542,37: (
 3542,38: Header
 3542,44: TYPE
 3542,44: )
 3542,45: )
 
165 NAME VARIABLE 
 3542,18: block_size
 3542,28: VARIABLE
 
65 VARIABLE 
 3542,28: VARIABLE
 
151 / 
 3542,29: /
 
242 sizeof ( type_name ) 
 3542,31: sizeof
 3542,37: (
 3542,38: Header
 3542,44: TYPE
 3542,44: )
 
170 ( type_name ) 
 3542,37: (
 3542,38: Header
 3542,44: TYPE
 3542,44: )
 
276 NAME TYPE 
 3542,38: Header
 3542,44: TYPE
 
65 TYPE 
 3542,44: TYPE
 
373 ) 
 3542,44: )
 
267 ) 
 3542,45: )
 
152 - 
 3542,47: -
 
246 CONSTANT 
 3542,49: 1
 
331 ; 
 3542,50: ;
 
201 NAME VARIABLE 
 3543,3: c_free
 3543,9: VARIABLE
 
65 VARIABLE 
 3543,9: VARIABLE
 
147 ( option_argument_expression_list ) 
 3543,9: (
 3543,10: (
 3543,11: void
 3543,16: *
 3543,17: )
 3543,18: (
 3543,19: b_p
 3543,22: VARIABLE
 3543,23: +
 3543,25: 1
 3543,26: )
 3543,27: )
 
235 ( type_name ) cast_expression 
 3543,10: (
 3543,11: void
 3543,16: *
 3543,17: )
 3543,18: (
 3543,19: b_p
 3543,22: VARIABLE
 3543,23: +
 3543,25: 1
 3543,26: )
 
165 void 
 3543,11: void
 
137 * option_type_qualifier_list option_pointer 
 3543,16: *
 
269 ) cast_expression 
 3543,17: )
 3543,18: (
 3543,19: b_p
 3543,22: VARIABLE
 3543,23: +
 3543,25: 1
 3543,26: )
 
369 ( expression ) 
 3543,18: (
 3543,19: b_p
 3543,22: VARIABLE
 3543,23: +
 3543,25: 1
 3543,26: )
 
165 NAME VARIABLE 
 3543,19: b_p
 3543,22: VARIABLE
 
65 VARIABLE 
 3543,22: VARIABLE
 
152 + 
 3543,23: +
 
246 CONSTANT 
 3543,25: 1
 
267 ) 
 3543,26: )
 
351 ) 
 3543,27: )
 
331 ; 
 3543,28: ;
 
201 } 
 3544,1: }
 
23 void 
 3546,1: void
 
5 * option_type_qualifier_list option_pointer 
 3546,6: *
 
64 NAME VARIABLE 
 3546,7: c_malloc
 3546,15: VARIABLE
 
65 VARIABLE 
 3546,15: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 3546,15: (
 3546,16: size_t
 3546,22: TYPE
 3546,23: nr_of_bytes
 3546,34: VARIABLE
 3546,34: )
 
186 NAME TYPE 
 3546,16: size_t
 3546,22: TYPE
 
65 TYPE 
 3546,22: TYPE
 
298 NAME VARIABLE 
 3546,23: nr_of_bytes
 3546,34: VARIABLE
 
65 VARIABLE 
 3546,34: VARIABLE
 
187 ) 
 3546,34: )
 
94 { option_block_item_list } 
 3547,1: {
 3548,3: Header
 3548,9: TYPE
 3548,10: *
 3548,11: p
 3548,12: VARIABLE
 3548,12: ;
 3549,3: Header
 3549,9: TYPE
 3549,10: *
 3549,11: prev_p
 3549,17: VARIABLE
 3549,17: ;
 3551,3: if
 3551,6: (
 3551,7: nr_of_bytes
 3551,18: VARIABLE
 3551,19: ==
 3551,22: 0
 3551,24: ||
 3551,27: nr_of_bytes
 3551,38: VARIABLE
 3551,39: >=
 3553,41: (
 3553,42: 0x7fffffff
 3553,53: *
 3553,55: 2U
 3553,58: +
 3553,60: 1U
 3553,62: )
 3555,50: -
 3555,52: 1024
 3555,56: )
 3556,3: {
 3557,5: fprintf
 3557,12: VARIABLE
 3557,12: (
 3559,12: stderr
 3559,18: VARIABLE
 3561,18: ,
 3561,20: "
 3561,55: ,
 3561,57: nr_of_bytes
 3561,68: VARIABLE
 3561,68: )
 3561,69: ;
 3562,5: return
 3564,11: (
 3564,12: (
 3564,13: void
 3564,18: *
 3564,19: )
 3564,20: 0
 3564,21: )
 3566,15: ;
 3567,3: }
 3569,3: size_t
 3569,9: TYPE
 3569,10: nr_of_units
 3569,21: VARIABLE
 3569,22: =
 3569,24: (
 3569,25: nr_of_bytes
 3569,36: VARIABLE
 3569,37: +
 3569,39: sizeof
 3569,45: (
 3569,46: Header
 3569,52: TYPE
 3569,52: )
 3569,54: -
 3569,56: 1
 3569,57: )
 3569,59: /
 3569,61: sizeof
 3569,67: (
 3569,68: Header
 3569,74: TYPE
 3569,74: )
 3569,75: ;
 3571,3: if
 3571,6: (
 3571,7: (
 3571,8: prev_p
 3571,14: VARIABLE
 3571,15: =
 3571,17: free_p
 3571,23: VARIABLE
 3571,23: )
 3571,25: ==
 3573,27: (
 3573,28: (
 3573,29: void
 3573,34: *
 3573,35: )
 3573,36: 0
 3573,37: )
 3575,31: )
 3576,3: {
 3577,5: base
 3577,9: VARIABLE
 3577,9: .
 3577,10: s
 3577,11: VARIABLE
 3577,11: .
 3577,12: free_block_p
 3577,24: VARIABLE
 3577,25: =
 3577,27: free_p
 3577,33: VARIABLE
 3577,34: =
 3577,36: prev_p
 3577,42: VARIABLE
 3577,43: =
 3577,45: &
 3577,46: base
 3577,50: VARIABLE
 3577,50: ;
 3578,5: base
 3578,9: VARIABLE
 3578,9: .
 3578,10: s
 3578,11: VARIABLE
 3578,11: .
 3578,12: size
 3578,16: VARIABLE
 3578,17: =
 3578,19: 0
 3578,20: ;
 3579,3: }
 3581,3: for
 3581,7: (
 3581,8: p
 3581,9: VARIABLE
 3581,10: =
 3581,12: prev_p
 3581,18: VARIABLE
 3581,18: ->
 3581,20: s
 3581,21: VARIABLE
 3581,21: .
 3581,22: free_block_p
 3581,34: VARIABLE
 3581,34: ;
 3581,35: ;
 3581,37: prev_p
 3581,43: VARIABLE
 3581,44: =
 3581,46: p
 3581,47: VARIABLE
 3581,47: ,
 3581,49: p
 3581,50: VARIABLE
 3581,51: =
 3581,53: p
 3581,54: VARIABLE
 3581,54: ->
 3581,56: s
 3581,57: VARIABLE
 3581,57: .
 3581,58: free_block_p
 3581,70: VARIABLE
 3581,70: )
 3582,3: {
 3583,5: if
 3583,8: (
 3583,9: p
 3583,10: VARIABLE
 3583,10: ->
 3583,12: s
 3583,13: VARIABLE
 3583,13: .
 3583,14: size
 3583,18: VARIABLE
 3583,19: >=
 3583,22: nr_of_units
 3583,33: VARIABLE
 3583,33: )
 3584,5: {
 3585,7: if
 3585,10: (
 3585,11: p
 3585,12: VARIABLE
 3585,12: ->
 3585,14: s
 3585,15: VARIABLE
 3585,15: .
 3585,16: size
 3585,20: VARIABLE
 3585,21: ==
 3585,24: nr_of_units
 3585,35: VARIABLE
 3585,35: )
 3586,7: {
 3587,9: prev_p
 3587,15: VARIABLE
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 3587,32: =
 3587,34: p
 3587,35: VARIABLE
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 3587,51: ;
 3588,7: }
 3589,7: else
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 3596,7: free_p
 3596,13: VARIABLE
 3596,14: =
 3596,16: prev_p
 3596,22: VARIABLE
 3596,22: ;
 3597,7: return
 3597,14: (
 3597,15: void
 3597,20: *
 3597,21: )
 3597,22: (
 3597,23: p
 3597,24: VARIABLE
 3597,25: +
 3597,27: 1
 3597,28: )
 3597,29: ;
 3598,5: }
 3600,5: if
 3600,8: (
 3600,9: p
 3600,10: VARIABLE
 3600,11: ==
 3600,14: free_p
 3600,20: VARIABLE
 3600,20: )
 3601,5: {
 3602,7: if
 3602,10: (
 3602,11: (
 3602,12: p
 3602,13: VARIABLE
 3602,14: =
 3602,16: c_morecore
 3602,26: VARIABLE
 3602,26: (
 3602,27: nr_of_units
 3602,38: VARIABLE
 3602,38: )
 3602,39: )
 3602,41: ==
 3604,43: (
 3604,44: (
 3604,45: void
 3604,50: *
 3604,51: )
 3604,52: 0
 3604,53: )
 3606,47: )
 3607,7: {
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 3613,7: }
 3614,5: }
 3615,3: }
 3617,3: return
 3619,9: (
 3619,10: (
 3619,11: void
 3619,16: *
 3619,17: )
 3619,18: 0
 3619,19: )
 3621,13: ;
 3622,1: }
 
201 NAME TYPE 
 3548,3: Header
 3548,9: TYPE
 
65 TYPE 
 3548,9: TYPE
 
93 * option_type_qualifier_list option_pointer 
 3548,10: *
 
64 NAME VARIABLE 
 3548,11: p
 3548,12: VARIABLE
 
65 VARIABLE 
 3548,12: VARIABLE
 
60 ; 
 3548,12: ;
 
201 NAME TYPE 
 3549,3: Header
 3549,9: TYPE
 
65 TYPE 
 3549,9: TYPE
 
93 * option_type_qualifier_list option_pointer 
 3549,10: *
 
64 NAME VARIABLE 
 3549,11: prev_p
 3549,17: VARIABLE
 
65 VARIABLE 
 3549,17: VARIABLE
 
60 ; 
 3549,17: ;
 
320 if ( expression ) scoped_statement 
 3551,3: if
 3551,6: (
 3551,7: nr_of_bytes
 3551,18: VARIABLE
 3551,19: ==
 3551,22: 0
 3551,24: ||
 3551,27: nr_of_bytes
 3551,38: VARIABLE
 3551,39: >=
 3553,41: (
 3553,42: 0x7fffffff
 3553,53: *
 3553,55: 2U
 3553,58: +
 3553,60: 1U
 3553,62: )
 3555,50: -
 3555,52: 1024
 3555,56: )
 3556,3: {
 3557,5: fprintf
 3557,12: VARIABLE
 3557,12: (
 3559,12: stderr
 3559,18: VARIABLE
 3561,18: ,
 3561,20: "
 3561,55: ,
 3561,57: nr_of_bytes
 3561,68: VARIABLE
 3561,68: )
 3561,69: ;
 3562,5: return
 3564,11: (
 3564,12: (
 3564,13: void
 3564,18: *
 3564,19: )
 3564,20: 0
 3564,21: )
 3566,15: ;
 3567,3: }
 
404 ( expression ) scoped_statement 
 3551,6: (
 3551,7: nr_of_bytes
 3551,18: VARIABLE
 3551,19: ==
 3551,22: 0
 3551,24: ||
 3551,27: nr_of_bytes
 3551,38: VARIABLE
 3551,39: >=
 3553,41: (
 3553,42: 0x7fffffff
 3553,53: *
 3553,55: 2U
 3553,58: +
 3553,60: 1U
 3553,62: )
 3555,50: -
 3555,52: 1024
 3555,56: )
 3556,3: {
 3557,5: fprintf
 3557,12: VARIABLE
 3557,12: (
 3559,12: stderr
 3559,18: VARIABLE
 3561,18: ,
 3561,20: "
 3561,55: ,
 3561,57: nr_of_bytes
 3561,68: VARIABLE
 3561,68: )
 3561,69: ;
 3562,5: return
 3564,11: (
 3564,12: (
 3564,13: void
 3564,18: *
 3564,19: )
 3564,20: 0
 3564,21: )
 3566,15: ;
 3567,3: }
 
455 NAME VARIABLE 
 3551,7: nr_of_bytes
 3551,18: VARIABLE
 
179 VARIABLE 
 3551,18: VARIABLE
 
155 == 
 3551,19: ==
 
257 CONSTANT 
 3551,22: 0
 
160 || logical_and_expression 
 3551,24: ||
 3551,27: nr_of_bytes
 3551,38: VARIABLE
 3551,39: >=
 3553,41: (
 3553,42: 0x7fffffff
 3553,53: *
 3553,55: 2U
 3553,58: +
 3553,60: 1U
 3553,62: )
 3555,50: -
 3555,52: 1024
 
264 NAME VARIABLE 
 3551,27: nr_of_bytes
 3551,38: VARIABLE
 
179 VARIABLE 
 3551,38: VARIABLE
 
154 >= 
 3551,39: >=
 
252 ( expression ) 
 3553,41: (
 3553,42: 0x7fffffff
 3553,53: *
 3553,55: 2U
 3553,58: +
 3553,60: 1U
 3553,62: )
 
165 CONSTANT 
 3553,42: 0x7fffffff
 
151 * 
 3553,53: *
 
242 CONSTANT 
 3553,55: 2U
 
152 + 
 3553,58: +
 
246 CONSTANT 
 3553,60: 1U
 
267 ) 
 3553,62: )
 
152 - 
 3555,50: -
 
246 CONSTANT 
 3555,52: 1024
 
483 ) scoped_statement 
 3555,56: )
 3556,3: {
 3557,5: fprintf
 3557,12: VARIABLE
 3557,12: (
 3559,12: stderr
 3559,18: VARIABLE
 3561,18: ,
 3561,20: "
 3561,55: ,
 3561,57: nr_of_bytes
 3561,68: VARIABLE
 3561,68: )
 3561,69: ;
 3562,5: return
 3564,11: (
 3564,12: (
 3564,13: void
 3564,18: *
 3564,19: )
 3564,20: 0
 3564,21: )
 3566,15: ;
 3567,3: }
 
320 { option_block_item_list } 
 3556,3: {
 3557,5: fprintf
 3557,12: VARIABLE
 3557,12: (
 3559,12: stderr
 3559,18: VARIABLE
 3561,18: ,
 3561,20: "
 3561,55: ,
 3561,57: nr_of_bytes
 3561,68: VARIABLE
 3561,68: )
 3561,69: ;
 3562,5: return
 3564,11: (
 3564,12: (
 3564,13: void
 3564,18: *
 3564,19: )
 3564,20: 0
 3564,21: )
 3566,15: ;
 3567,3: }
 
201 NAME VARIABLE 
 3557,5: fprintf
 3557,12: VARIABLE
 
65 VARIABLE 
 3557,12: VARIABLE
 
147 ( option_argument_expression_list ) 
 3557,12: (
 3559,12: stderr
 3559,18: VARIABLE
 3561,18: ,
 3561,20: "
 3561,55: ,
 3561,57: nr_of_bytes
 3561,68: VARIABLE
 3561,68: )
 
235 NAME VARIABLE 
 3559,12: stderr
 3559,18: VARIABLE
 
179 VARIABLE 
 3559,18: VARIABLE
 
352 , assignment_expression 
 3561,18: ,
 3561,20: "
 
429 STRING_LITERAL 
 3561,20: "
 
352 , assignment_expression 
 3561,55: ,
 3561,57: nr_of_bytes
 3561,68: VARIABLE
 
429 NAME VARIABLE 
 3561,57: nr_of_bytes
 3561,68: VARIABLE
 
179 VARIABLE 
 3561,68: VARIABLE
 
351 ) 
 3561,68: )
 
331 ; 
 3561,69: ;
 
201 return option_expression ; 
 3562,5: return
 3564,11: (
 3564,12: (
 3564,13: void
 3564,18: *
 3564,19: )
 3564,20: 0
 3564,21: )
 3566,15: ;
 
338 ( expression ) 
 3564,11: (
 3564,12: (
 3564,13: void
 3564,18: *
 3564,19: )
 3564,20: 0
 3564,21: )
 
165 ( type_name ) cast_expression 
 3564,12: (
 3564,13: void
 3564,18: *
 3564,19: )
 3564,20: 0
 
165 void 
 3564,13: void
 
137 * option_type_qualifier_list option_pointer 
 3564,18: *
 
269 ) cast_expression 
 3564,19: )
 3564,20: 0
 
369 CONSTANT 
 3564,20: 0
 
267 ) 
 3564,21: )
 
415 ; 
 3566,15: ;
 
201 } 
 3567,3: }
 
201 NAME TYPE 
 3569,3: size_t
 3569,9: TYPE
 
65 TYPE 
 3569,9: TYPE
 
93 NAME VARIABLE 
 3569,10: nr_of_units
 3569,21: VARIABLE
 
65 VARIABLE 
 3569,21: VARIABLE
 
59 = c_initializer 
 3569,22: =
 3569,24: (
 3569,25: nr_of_bytes
 3569,36: VARIABLE
 3569,37: +
 3569,39: sizeof
 3569,45: (
 3569,46: Header
 3569,52: TYPE
 3569,52: )
 3569,54: -
 3569,56: 1
 3569,57: )
 3569,59: /
 3569,61: sizeof
 3569,67: (
 3569,68: Header
 3569,74: TYPE
 3569,74: )
 
108 ( expression ) 
 3569,24: (
 3569,25: nr_of_bytes
 3569,36: VARIABLE
 3569,37: +
 3569,39: sizeof
 3569,45: (
 3569,46: Header
 3569,52: TYPE
 3569,52: )
 3569,54: -
 3569,56: 1
 3569,57: )
 
165 NAME VARIABLE 
 3569,25: nr_of_bytes
 3569,36: VARIABLE
 
65 VARIABLE 
 3569,36: VARIABLE
 
152 + 
 3569,37: +
 
246 sizeof ( type_name ) 
 3569,39: sizeof
 3569,45: (
 3569,46: Header
 3569,52: TYPE
 3569,52: )
 
170 ( type_name ) 
 3569,45: (
 3569,46: Header
 3569,52: TYPE
 3569,52: )
 
276 NAME TYPE 
 3569,46: Header
 3569,52: TYPE
 
65 TYPE 
 3569,52: TYPE
 
373 ) 
 3569,52: )
 
152 - 
 3569,54: -
 
246 CONSTANT 
 3569,56: 1
 
267 ) 
 3569,57: )
 
151 / 
 3569,59: /
 
242 sizeof ( type_name ) 
 3569,61: sizeof
 3569,67: (
 3569,68: Header
 3569,74: TYPE
 3569,74: )
 
170 ( type_name ) 
 3569,67: (
 3569,68: Header
 3569,74: TYPE
 3569,74: )
 
276 NAME TYPE 
 3569,68: Header
 3569,74: TYPE
 
65 TYPE 
 3569,74: TYPE
 
373 ) 
 3569,74: )
 
60 ; 
 3569,75: ;
 
320 if ( expression ) scoped_statement 
 3571,3: if
 3571,6: (
 3571,7: (
 3571,8: prev_p
 3571,14: VARIABLE
 3571,15: =
 3571,17: free_p
 3571,23: VARIABLE
 3571,23: )
 3571,25: ==
 3573,27: (
 3573,28: (
 3573,29: void
 3573,34: *
 3573,35: )
 3573,36: 0
 3573,37: )
 3575,31: )
 3576,3: {
 3577,5: base
 3577,9: VARIABLE
 3577,9: .
 3577,10: s
 3577,11: VARIABLE
 3577,11: .
 3577,12: free_block_p
 3577,24: VARIABLE
 3577,25: =
 3577,27: free_p
 3577,33: VARIABLE
 3577,34: =
 3577,36: prev_p
 3577,42: VARIABLE
 3577,43: =
 3577,45: &
 3577,46: base
 3577,50: VARIABLE
 3577,50: ;
 3578,5: base
 3578,9: VARIABLE
 3578,9: .
 3578,10: s
 3578,11: VARIABLE
 3578,11: .
 3578,12: size
 3578,16: VARIABLE
 3578,17: =
 3578,19: 0
 3578,20: ;
 3579,3: }
 
404 ( expression ) scoped_statement 
 3571,6: (
 3571,7: (
 3571,8: prev_p
 3571,14: VARIABLE
 3571,15: =
 3571,17: free_p
 3571,23: VARIABLE
 3571,23: )
 3571,25: ==
 3573,27: (
 3573,28: (
 3573,29: void
 3573,34: *
 3573,35: )
 3573,36: 0
 3573,37: )
 3575,31: )
 3576,3: {
 3577,5: base
 3577,9: VARIABLE
 3577,9: .
 3577,10: s
 3577,11: VARIABLE
 3577,11: .
 3577,12: free_block_p
 3577,24: VARIABLE
 3577,25: =
 3577,27: free_p
 3577,33: VARIABLE
 3577,34: =
 3577,36: prev_p
 3577,42: VARIABLE
 3577,43: =
 3577,45: &
 3577,46: base
 3577,50: VARIABLE
 3577,50: ;
 3578,5: base
 3578,9: VARIABLE
 3578,9: .
 3578,10: s
 3578,11: VARIABLE
 3578,11: .
 3578,12: size
 3578,16: VARIABLE
 3578,17: =
 3578,19: 0
 3578,20: ;
 3579,3: }
 
455 ( expression ) 
 3571,7: (
 3571,8: prev_p
 3571,14: VARIABLE
 3571,15: =
 3571,17: free_p
 3571,23: VARIABLE
 3571,23: )
 
165 NAME VARIABLE 
 3571,8: prev_p
 3571,14: VARIABLE
 
65 VARIABLE 
 3571,14: VARIABLE
 
181 = 
 3571,15: =
 
279 NAME VARIABLE 
 3571,17: free_p
 3571,23: VARIABLE
 
179 VARIABLE 
 3571,23: VARIABLE
 
267 ) 
 3571,23: )
 
155 == 
 3571,25: ==
 
257 ( expression ) 
 3573,27: (
 3573,28: (
 3573,29: void
 3573,34: *
 3573,35: )
 3573,36: 0
 3573,37: )
 
165 ( type_name ) cast_expression 
 3573,28: (
 3573,29: void
 3573,34: *
 3573,35: )
 3573,36: 0
 
165 void 
 3573,29: void
 
137 * option_type_qualifier_list option_pointer 
 3573,34: *
 
269 ) cast_expression 
 3573,35: )
 3573,36: 0
 
369 CONSTANT 
 3573,36: 0
 
267 ) 
 3573,37: )
 
483 ) scoped_statement 
 3575,31: )
 3576,3: {
 3577,5: base
 3577,9: VARIABLE
 3577,9: .
 3577,10: s
 3577,11: VARIABLE
 3577,11: .
 3577,12: free_block_p
 3577,24: VARIABLE
 3577,25: =
 3577,27: free_p
 3577,33: VARIABLE
 3577,34: =
 3577,36: prev_p
 3577,42: VARIABLE
 3577,43: =
 3577,45: &
 3577,46: base
 3577,50: VARIABLE
 3577,50: ;
 3578,5: base
 3578,9: VARIABLE
 3578,9: .
 3578,10: s
 3578,11: VARIABLE
 3578,11: .
 3578,12: size
 3578,16: VARIABLE
 3578,17: =
 3578,19: 0
 3578,20: ;
 3579,3: }
 
320 { option_block_item_list } 
 3576,3: {
 3577,5: base
 3577,9: VARIABLE
 3577,9: .
 3577,10: s
 3577,11: VARIABLE
 3577,11: .
 3577,12: free_block_p
 3577,24: VARIABLE
 3577,25: =
 3577,27: free_p
 3577,33: VARIABLE
 3577,34: =
 3577,36: prev_p
 3577,42: VARIABLE
 3577,43: =
 3577,45: &
 3577,46: base
 3577,50: VARIABLE
 3577,50: ;
 3578,5: base
 3578,9: VARIABLE
 3578,9: .
 3578,10: s
 3578,11: VARIABLE
 3578,11: .
 3578,12: size
 3578,16: VARIABLE
 3578,17: =
 3578,19: 0
 3578,20: ;
 3579,3: }
 
201 NAME VARIABLE 
 3577,5: base
 3577,9: VARIABLE
 
65 VARIABLE 
 3577,9: VARIABLE
 
147 . general_identifier 
 3577,9: .
 3577,10: s
 3577,11: VARIABLE
 
237 NAME VARIABLE 
 3577,10: s
 3577,11: VARIABLE
 
65 VARIABLE 
 3577,11: VARIABLE
 
147 . general_identifier 
 3577,11: .
 3577,12: free_block_p
 3577,24: VARIABLE
 
237 NAME VARIABLE 
 3577,12: free_block_p
 3577,24: VARIABLE
 
65 VARIABLE 
 3577,24: VARIABLE
 
181 = 
 3577,25: =
 
279 NAME VARIABLE 
 3577,27: free_p
 3577,33: VARIABLE
 
179 VARIABLE 
 3577,33: VARIABLE
 
181 = 
 3577,34: =
 
279 NAME VARIABLE 
 3577,36: prev_p
 3577,42: VARIABLE
 
179 VARIABLE 
 3577,42: VARIABLE
 
181 = 
 3577,43: =
 
279 & 
 3577,45: &
 
149 NAME VARIABLE 
 3577,46: base
 3577,50: VARIABLE
 
179 VARIABLE 
 3577,50: VARIABLE
 
331 ; 
 3577,50: ;
 
201 NAME VARIABLE 
 3578,5: base
 3578,9: VARIABLE
 
65 VARIABLE 
 3578,9: VARIABLE
 
147 . general_identifier 
 3578,9: .
 3578,10: s
 3578,11: VARIABLE
 
237 NAME VARIABLE 
 3578,10: s
 3578,11: VARIABLE
 
65 VARIABLE 
 3578,11: VARIABLE
 
147 . general_identifier 
 3578,11: .
 3578,12: size
 3578,16: VARIABLE
 
237 NAME VARIABLE 
 3578,12: size
 3578,16: VARIABLE
 
65 VARIABLE 
 3578,16: VARIABLE
 
181 = 
 3578,17: =
 
279 CONSTANT 
 3578,19: 0
 
331 ; 
 3578,20: ;
 
201 } 
 3579,3: }
 
320 for ( option_expression ; option_expression ; option_expression ) scoped_statement 
 3581,3: for
 3581,7: (
 3581,8: p
 3581,9: VARIABLE
 3581,10: =
 3581,12: prev_p
 3581,18: VARIABLE
 3581,18: ->
 3581,20: s
 3581,21: VARIABLE
 3581,21: .
 3581,22: free_block_p
 3581,34: VARIABLE
 3581,34: ;
 3581,35: ;
 3581,37: prev_p
 3581,43: VARIABLE
 3581,44: =
 3581,46: p
 3581,47: VARIABLE
 3581,47: ,
 3581,49: p
 3581,50: VARIABLE
 3581,51: =
 3581,53: p
 3581,54: VARIABLE
 3581,54: ->
 3581,56: s
 3581,57: VARIABLE
 3581,57: .
 3581,58: free_block_p
 3581,70: VARIABLE
 3581,70: )
 3582,3: {
 3583,5: if
 3583,8: (
 3583,9: p
 3583,10: VARIABLE
 3583,10: ->
 3583,12: s
 3583,13: VARIABLE
 3583,13: .
 3583,14: size
 3583,18: VARIABLE
 3583,19: >=
 3583,22: nr_of_units
 3583,33: VARIABLE
 3583,33: )
 3584,5: {
 3585,7: if
 3585,10: (
 3585,11: p
 3585,12: VARIABLE
 3585,12: ->
 3585,14: s
 3585,15: VARIABLE
 3585,15: .
 3585,16: size
 3585,20: VARIABLE
 3585,21: ==
 3585,24: nr_of_units
 3585,35: VARIABLE
 3585,35: )
 3586,7: {
 3587,9: prev_p
 3587,15: VARIABLE
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 3587,32: =
 3587,34: p
 3587,35: VARIABLE
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 3587,51: ;
 3588,7: }
 3589,7: else
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 3596,7: free_p
 3596,13: VARIABLE
 3596,14: =
 3596,16: prev_p
 3596,22: VARIABLE
 3596,22: ;
 3597,7: return
 3597,14: (
 3597,15: void
 3597,20: *
 3597,21: )
 3597,22: (
 3597,23: p
 3597,24: VARIABLE
 3597,25: +
 3597,27: 1
 3597,28: )
 3597,29: ;
 3598,5: }
 3600,5: if
 3600,8: (
 3600,9: p
 3600,10: VARIABLE
 3600,11: ==
 3600,14: free_p
 3600,20: VARIABLE
 3600,20: )
 3601,5: {
 3602,7: if
 3602,10: (
 3602,11: (
 3602,12: p
 3602,13: VARIABLE
 3602,14: =
 3602,16: c_morecore
 3602,26: VARIABLE
 3602,26: (
 3602,27: nr_of_units
 3602,38: VARIABLE
 3602,38: )
 3602,39: )
 3602,41: ==
 3604,43: (
 3604,44: (
 3604,45: void
 3604,50: *
 3604,51: )
 3604,52: 0
 3604,53: )
 3606,47: )
 3607,7: {
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 3613,7: }
 3614,5: }
 3615,3: }
 
408 ( option_expression ; option_expression ; option_expression ) scoped_statement 
 3581,7: (
 3581,8: p
 3581,9: VARIABLE
 3581,10: =
 3581,12: prev_p
 3581,18: VARIABLE
 3581,18: ->
 3581,20: s
 3581,21: VARIABLE
 3581,21: .
 3581,22: free_block_p
 3581,34: VARIABLE
 3581,34: ;
 3581,35: ;
 3581,37: prev_p
 3581,43: VARIABLE
 3581,44: =
 3581,46: p
 3581,47: VARIABLE
 3581,47: ,
 3581,49: p
 3581,50: VARIABLE
 3581,51: =
 3581,53: p
 3581,54: VARIABLE
 3581,54: ->
 3581,56: s
 3581,57: VARIABLE
 3581,57: .
 3581,58: free_block_p
 3581,70: VARIABLE
 3581,70: )
 3582,3: {
 3583,5: if
 3583,8: (
 3583,9: p
 3583,10: VARIABLE
 3583,10: ->
 3583,12: s
 3583,13: VARIABLE
 3583,13: .
 3583,14: size
 3583,18: VARIABLE
 3583,19: >=
 3583,22: nr_of_units
 3583,33: VARIABLE
 3583,33: )
 3584,5: {
 3585,7: if
 3585,10: (
 3585,11: p
 3585,12: VARIABLE
 3585,12: ->
 3585,14: s
 3585,15: VARIABLE
 3585,15: .
 3585,16: size
 3585,20: VARIABLE
 3585,21: ==
 3585,24: nr_of_units
 3585,35: VARIABLE
 3585,35: )
 3586,7: {
 3587,9: prev_p
 3587,15: VARIABLE
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 3587,32: =
 3587,34: p
 3587,35: VARIABLE
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 3587,51: ;
 3588,7: }
 3589,7: else
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 3596,7: free_p
 3596,13: VARIABLE
 3596,14: =
 3596,16: prev_p
 3596,22: VARIABLE
 3596,22: ;
 3597,7: return
 3597,14: (
 3597,15: void
 3597,20: *
 3597,21: )
 3597,22: (
 3597,23: p
 3597,24: VARIABLE
 3597,25: +
 3597,27: 1
 3597,28: )
 3597,29: ;
 3598,5: }
 3600,5: if
 3600,8: (
 3600,9: p
 3600,10: VARIABLE
 3600,11: ==
 3600,14: free_p
 3600,20: VARIABLE
 3600,20: )
 3601,5: {
 3602,7: if
 3602,10: (
 3602,11: (
 3602,12: p
 3602,13: VARIABLE
 3602,14: =
 3602,16: c_morecore
 3602,26: VARIABLE
 3602,26: (
 3602,27: nr_of_units
 3602,38: VARIABLE
 3602,38: )
 3602,39: )
 3602,41: ==
 3604,43: (
 3604,44: (
 3604,45: void
 3604,50: *
 3604,51: )
 3604,52: 0
 3604,53: )
 3606,47: )
 3607,7: {
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 3613,7: }
 3614,5: }
 3615,3: }
 
460 NAME VARIABLE 
 3581,8: p
 3581,9: VARIABLE
 
65 VARIABLE 
 3581,9: VARIABLE
 
181 = 
 3581,10: =
 
279 NAME VARIABLE 
 3581,12: prev_p
 3581,18: VARIABLE
 
179 VARIABLE 
 3581,18: VARIABLE
 
147 -> general_identifier 
 3581,18: ->
 3581,20: s
 3581,21: VARIABLE
 
238 NAME VARIABLE 
 3581,20: s
 3581,21: VARIABLE
 
65 VARIABLE 
 3581,21: VARIABLE
 
147 . general_identifier 
 3581,21: .
 3581,22: free_block_p
 3581,34: VARIABLE
 
237 NAME VARIABLE 
 3581,22: free_block_p
 3581,34: VARIABLE
 
65 VARIABLE 
 3581,34: VARIABLE
 
489 ; option_expression ; option_expression ) scoped_statement 
 3581,34: ;
 3581,35: ;
 3581,37: prev_p
 3581,43: VARIABLE
 3581,44: =
 3581,46: p
 3581,47: VARIABLE
 3581,47: ,
 3581,49: p
 3581,50: VARIABLE
 3581,51: =
 3581,53: p
 3581,54: VARIABLE
 3581,54: ->
 3581,56: s
 3581,57: VARIABLE
 3581,57: .
 3581,58: free_block_p
 3581,70: VARIABLE
 3581,70: )
 3582,3: {
 3583,5: if
 3583,8: (
 3583,9: p
 3583,10: VARIABLE
 3583,10: ->
 3583,12: s
 3583,13: VARIABLE
 3583,13: .
 3583,14: size
 3583,18: VARIABLE
 3583,19: >=
 3583,22: nr_of_units
 3583,33: VARIABLE
 3583,33: )
 3584,5: {
 3585,7: if
 3585,10: (
 3585,11: p
 3585,12: VARIABLE
 3585,12: ->
 3585,14: s
 3585,15: VARIABLE
 3585,15: .
 3585,16: size
 3585,20: VARIABLE
 3585,21: ==
 3585,24: nr_of_units
 3585,35: VARIABLE
 3585,35: )
 3586,7: {
 3587,9: prev_p
 3587,15: VARIABLE
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 3587,32: =
 3587,34: p
 3587,35: VARIABLE
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 3587,51: ;
 3588,7: }
 3589,7: else
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 3596,7: free_p
 3596,13: VARIABLE
 3596,14: =
 3596,16: prev_p
 3596,22: VARIABLE
 3596,22: ;
 3597,7: return
 3597,14: (
 3597,15: void
 3597,20: *
 3597,21: )
 3597,22: (
 3597,23: p
 3597,24: VARIABLE
 3597,25: +
 3597,27: 1
 3597,28: )
 3597,29: ;
 3598,5: }
 3600,5: if
 3600,8: (
 3600,9: p
 3600,10: VARIABLE
 3600,11: ==
 3600,14: free_p
 3600,20: VARIABLE
 3600,20: )
 3601,5: {
 3602,7: if
 3602,10: (
 3602,11: (
 3602,12: p
 3602,13: VARIABLE
 3602,14: =
 3602,16: c_morecore
 3602,26: VARIABLE
 3602,26: (
 3602,27: nr_of_units
 3602,38: VARIABLE
 3602,38: )
 3602,39: )
 3602,41: ==
 3604,43: (
 3604,44: (
 3604,45: void
 3604,50: *
 3604,51: )
 3604,52: 0
 3604,53: )
 3606,47: )
 3607,7: {
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 3613,7: }
 3614,5: }
 3615,3: }
 
517 ; option_expression ) scoped_statement 
 3581,35: ;
 3581,37: prev_p
 3581,43: VARIABLE
 3581,44: =
 3581,46: p
 3581,47: VARIABLE
 3581,47: ,
 3581,49: p
 3581,50: VARIABLE
 3581,51: =
 3581,53: p
 3581,54: VARIABLE
 3581,54: ->
 3581,56: s
 3581,57: VARIABLE
 3581,57: .
 3581,58: free_block_p
 3581,70: VARIABLE
 3581,70: )
 3582,3: {
 3583,5: if
 3583,8: (
 3583,9: p
 3583,10: VARIABLE
 3583,10: ->
 3583,12: s
 3583,13: VARIABLE
 3583,13: .
 3583,14: size
 3583,18: VARIABLE
 3583,19: >=
 3583,22: nr_of_units
 3583,33: VARIABLE
 3583,33: )
 3584,5: {
 3585,7: if
 3585,10: (
 3585,11: p
 3585,12: VARIABLE
 3585,12: ->
 3585,14: s
 3585,15: VARIABLE
 3585,15: .
 3585,16: size
 3585,20: VARIABLE
 3585,21: ==
 3585,24: nr_of_units
 3585,35: VARIABLE
 3585,35: )
 3586,7: {
 3587,9: prev_p
 3587,15: VARIABLE
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 3587,32: =
 3587,34: p
 3587,35: VARIABLE
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 3587,51: ;
 3588,7: }
 3589,7: else
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 3596,7: free_p
 3596,13: VARIABLE
 3596,14: =
 3596,16: prev_p
 3596,22: VARIABLE
 3596,22: ;
 3597,7: return
 3597,14: (
 3597,15: void
 3597,20: *
 3597,21: )
 3597,22: (
 3597,23: p
 3597,24: VARIABLE
 3597,25: +
 3597,27: 1
 3597,28: )
 3597,29: ;
 3598,5: }
 3600,5: if
 3600,8: (
 3600,9: p
 3600,10: VARIABLE
 3600,11: ==
 3600,14: free_p
 3600,20: VARIABLE
 3600,20: )
 3601,5: {
 3602,7: if
 3602,10: (
 3602,11: (
 3602,12: p
 3602,13: VARIABLE
 3602,14: =
 3602,16: c_morecore
 3602,26: VARIABLE
 3602,26: (
 3602,27: nr_of_units
 3602,38: VARIABLE
 3602,38: )
 3602,39: )
 3602,41: ==
 3604,43: (
 3604,44: (
 3604,45: void
 3604,50: *
 3604,51: )
 3604,52: 0
 3604,53: )
 3606,47: )
 3607,7: {
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 3613,7: }
 3614,5: }
 3615,3: }
 
521 NAME VARIABLE 
 3581,37: prev_p
 3581,43: VARIABLE
 
179 VARIABLE 
 3581,43: VARIABLE
 
181 = 
 3581,44: =
 
279 NAME VARIABLE 
 3581,46: p
 3581,47: VARIABLE
 
179 VARIABLE 
 3581,47: VARIABLE
 
325 , assignment_expression 
 3581,47: ,
 3581,49: p
 3581,50: VARIABLE
 3581,51: =
 3581,53: p
 3581,54: VARIABLE
 3581,54: ->
 3581,56: s
 3581,57: VARIABLE
 3581,57: .
 3581,58: free_block_p
 3581,70: VARIABLE
 
368 NAME VARIABLE 
 3581,49: p
 3581,50: VARIABLE
 
179 VARIABLE 
 3581,50: VARIABLE
 
181 = 
 3581,51: =
 
279 NAME VARIABLE 
 3581,53: p
 3581,54: VARIABLE
 
179 VARIABLE 
 3581,54: VARIABLE
 
147 -> general_identifier 
 3581,54: ->
 3581,56: s
 3581,57: VARIABLE
 
238 NAME VARIABLE 
 3581,56: s
 3581,57: VARIABLE
 
65 VARIABLE 
 3581,57: VARIABLE
 
147 . general_identifier 
 3581,57: .
 3581,58: free_block_p
 3581,70: VARIABLE
 
237 NAME VARIABLE 
 3581,58: free_block_p
 3581,70: VARIABLE
 
65 VARIABLE 
 3581,70: VARIABLE
 
525 ) scoped_statement 
 3581,70: )
 3582,3: {
 3583,5: if
 3583,8: (
 3583,9: p
 3583,10: VARIABLE
 3583,10: ->
 3583,12: s
 3583,13: VARIABLE
 3583,13: .
 3583,14: size
 3583,18: VARIABLE
 3583,19: >=
 3583,22: nr_of_units
 3583,33: VARIABLE
 3583,33: )
 3584,5: {
 3585,7: if
 3585,10: (
 3585,11: p
 3585,12: VARIABLE
 3585,12: ->
 3585,14: s
 3585,15: VARIABLE
 3585,15: .
 3585,16: size
 3585,20: VARIABLE
 3585,21: ==
 3585,24: nr_of_units
 3585,35: VARIABLE
 3585,35: )
 3586,7: {
 3587,9: prev_p
 3587,15: VARIABLE
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 3587,32: =
 3587,34: p
 3587,35: VARIABLE
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 3587,51: ;
 3588,7: }
 3589,7: else
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 3596,7: free_p
 3596,13: VARIABLE
 3596,14: =
 3596,16: prev_p
 3596,22: VARIABLE
 3596,22: ;
 3597,7: return
 3597,14: (
 3597,15: void
 3597,20: *
 3597,21: )
 3597,22: (
 3597,23: p
 3597,24: VARIABLE
 3597,25: +
 3597,27: 1
 3597,28: )
 3597,29: ;
 3598,5: }
 3600,5: if
 3600,8: (
 3600,9: p
 3600,10: VARIABLE
 3600,11: ==
 3600,14: free_p
 3600,20: VARIABLE
 3600,20: )
 3601,5: {
 3602,7: if
 3602,10: (
 3602,11: (
 3602,12: p
 3602,13: VARIABLE
 3602,14: =
 3602,16: c_morecore
 3602,26: VARIABLE
 3602,26: (
 3602,27: nr_of_units
 3602,38: VARIABLE
 3602,38: )
 3602,39: )
 3602,41: ==
 3604,43: (
 3604,44: (
 3604,45: void
 3604,50: *
 3604,51: )
 3604,52: 0
 3604,53: )
 3606,47: )
 3607,7: {
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 3613,7: }
 3614,5: }
 3615,3: }
 
320 { option_block_item_list } 
 3582,3: {
 3583,5: if
 3583,8: (
 3583,9: p
 3583,10: VARIABLE
 3583,10: ->
 3583,12: s
 3583,13: VARIABLE
 3583,13: .
 3583,14: size
 3583,18: VARIABLE
 3583,19: >=
 3583,22: nr_of_units
 3583,33: VARIABLE
 3583,33: )
 3584,5: {
 3585,7: if
 3585,10: (
 3585,11: p
 3585,12: VARIABLE
 3585,12: ->
 3585,14: s
 3585,15: VARIABLE
 3585,15: .
 3585,16: size
 3585,20: VARIABLE
 3585,21: ==
 3585,24: nr_of_units
 3585,35: VARIABLE
 3585,35: )
 3586,7: {
 3587,9: prev_p
 3587,15: VARIABLE
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 3587,32: =
 3587,34: p
 3587,35: VARIABLE
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 3587,51: ;
 3588,7: }
 3589,7: else
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 3596,7: free_p
 3596,13: VARIABLE
 3596,14: =
 3596,16: prev_p
 3596,22: VARIABLE
 3596,22: ;
 3597,7: return
 3597,14: (
 3597,15: void
 3597,20: *
 3597,21: )
 3597,22: (
 3597,23: p
 3597,24: VARIABLE
 3597,25: +
 3597,27: 1
 3597,28: )
 3597,29: ;
 3598,5: }
 3600,5: if
 3600,8: (
 3600,9: p
 3600,10: VARIABLE
 3600,11: ==
 3600,14: free_p
 3600,20: VARIABLE
 3600,20: )
 3601,5: {
 3602,7: if
 3602,10: (
 3602,11: (
 3602,12: p
 3602,13: VARIABLE
 3602,14: =
 3602,16: c_morecore
 3602,26: VARIABLE
 3602,26: (
 3602,27: nr_of_units
 3602,38: VARIABLE
 3602,38: )
 3602,39: )
 3602,41: ==
 3604,43: (
 3604,44: (
 3604,45: void
 3604,50: *
 3604,51: )
 3604,52: 0
 3604,53: )
 3606,47: )
 3607,7: {
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 3613,7: }
 3614,5: }
 3615,3: }
 
320 if ( expression ) scoped_statement 
 3583,5: if
 3583,8: (
 3583,9: p
 3583,10: VARIABLE
 3583,10: ->
 3583,12: s
 3583,13: VARIABLE
 3583,13: .
 3583,14: size
 3583,18: VARIABLE
 3583,19: >=
 3583,22: nr_of_units
 3583,33: VARIABLE
 3583,33: )
 3584,5: {
 3585,7: if
 3585,10: (
 3585,11: p
 3585,12: VARIABLE
 3585,12: ->
 3585,14: s
 3585,15: VARIABLE
 3585,15: .
 3585,16: size
 3585,20: VARIABLE
 3585,21: ==
 3585,24: nr_of_units
 3585,35: VARIABLE
 3585,35: )
 3586,7: {
 3587,9: prev_p
 3587,15: VARIABLE
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 3587,32: =
 3587,34: p
 3587,35: VARIABLE
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 3587,51: ;
 3588,7: }
 3589,7: else
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 3596,7: free_p
 3596,13: VARIABLE
 3596,14: =
 3596,16: prev_p
 3596,22: VARIABLE
 3596,22: ;
 3597,7: return
 3597,14: (
 3597,15: void
 3597,20: *
 3597,21: )
 3597,22: (
 3597,23: p
 3597,24: VARIABLE
 3597,25: +
 3597,27: 1
 3597,28: )
 3597,29: ;
 3598,5: }
 
404 ( expression ) scoped_statement 
 3583,8: (
 3583,9: p
 3583,10: VARIABLE
 3583,10: ->
 3583,12: s
 3583,13: VARIABLE
 3583,13: .
 3583,14: size
 3583,18: VARIABLE
 3583,19: >=
 3583,22: nr_of_units
 3583,33: VARIABLE
 3583,33: )
 3584,5: {
 3585,7: if
 3585,10: (
 3585,11: p
 3585,12: VARIABLE
 3585,12: ->
 3585,14: s
 3585,15: VARIABLE
 3585,15: .
 3585,16: size
 3585,20: VARIABLE
 3585,21: ==
 3585,24: nr_of_units
 3585,35: VARIABLE
 3585,35: )
 3586,7: {
 3587,9: prev_p
 3587,15: VARIABLE
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 3587,32: =
 3587,34: p
 3587,35: VARIABLE
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 3587,51: ;
 3588,7: }
 3589,7: else
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 3596,7: free_p
 3596,13: VARIABLE
 3596,14: =
 3596,16: prev_p
 3596,22: VARIABLE
 3596,22: ;
 3597,7: return
 3597,14: (
 3597,15: void
 3597,20: *
 3597,21: )
 3597,22: (
 3597,23: p
 3597,24: VARIABLE
 3597,25: +
 3597,27: 1
 3597,28: )
 3597,29: ;
 3598,5: }
 
455 NAME VARIABLE 
 3583,9: p
 3583,10: VARIABLE
 
179 VARIABLE 
 3583,10: VARIABLE
 
147 -> general_identifier 
 3583,10: ->
 3583,12: s
 3583,13: VARIABLE
 
238 NAME VARIABLE 
 3583,12: s
 3583,13: VARIABLE
 
65 VARIABLE 
 3583,13: VARIABLE
 
147 . general_identifier 
 3583,13: .
 3583,14: size
 3583,18: VARIABLE
 
237 NAME VARIABLE 
 3583,14: size
 3583,18: VARIABLE
 
65 VARIABLE 
 3583,18: VARIABLE
 
154 >= 
 3583,19: >=
 
252 NAME VARIABLE 
 3583,22: nr_of_units
 3583,33: VARIABLE
 
179 VARIABLE 
 3583,33: VARIABLE
 
483 ) scoped_statement 
 3583,33: )
 3584,5: {
 3585,7: if
 3585,10: (
 3585,11: p
 3585,12: VARIABLE
 3585,12: ->
 3585,14: s
 3585,15: VARIABLE
 3585,15: .
 3585,16: size
 3585,20: VARIABLE
 3585,21: ==
 3585,24: nr_of_units
 3585,35: VARIABLE
 3585,35: )
 3586,7: {
 3587,9: prev_p
 3587,15: VARIABLE
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 3587,32: =
 3587,34: p
 3587,35: VARIABLE
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 3587,51: ;
 3588,7: }
 3589,7: else
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 3596,7: free_p
 3596,13: VARIABLE
 3596,14: =
 3596,16: prev_p
 3596,22: VARIABLE
 3596,22: ;
 3597,7: return
 3597,14: (
 3597,15: void
 3597,20: *
 3597,21: )
 3597,22: (
 3597,23: p
 3597,24: VARIABLE
 3597,25: +
 3597,27: 1
 3597,28: )
 3597,29: ;
 3598,5: }
 
320 { option_block_item_list } 
 3584,5: {
 3585,7: if
 3585,10: (
 3585,11: p
 3585,12: VARIABLE
 3585,12: ->
 3585,14: s
 3585,15: VARIABLE
 3585,15: .
 3585,16: size
 3585,20: VARIABLE
 3585,21: ==
 3585,24: nr_of_units
 3585,35: VARIABLE
 3585,35: )
 3586,7: {
 3587,9: prev_p
 3587,15: VARIABLE
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 3587,32: =
 3587,34: p
 3587,35: VARIABLE
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 3587,51: ;
 3588,7: }
 3589,7: else
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 3596,7: free_p
 3596,13: VARIABLE
 3596,14: =
 3596,16: prev_p
 3596,22: VARIABLE
 3596,22: ;
 3597,7: return
 3597,14: (
 3597,15: void
 3597,20: *
 3597,21: )
 3597,22: (
 3597,23: p
 3597,24: VARIABLE
 3597,25: +
 3597,27: 1
 3597,28: )
 3597,29: ;
 3598,5: }
 
320 if ( expression ) scoped_statement else scoped_statement 
 3585,7: if
 3585,10: (
 3585,11: p
 3585,12: VARIABLE
 3585,12: ->
 3585,14: s
 3585,15: VARIABLE
 3585,15: .
 3585,16: size
 3585,20: VARIABLE
 3585,21: ==
 3585,24: nr_of_units
 3585,35: VARIABLE
 3585,35: )
 3586,7: {
 3587,9: prev_p
 3587,15: VARIABLE
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 3587,32: =
 3587,34: p
 3587,35: VARIABLE
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 3587,51: ;
 3588,7: }
 3589,7: else
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 
404 ( expression ) scoped_statement else scoped_statement 
 3585,10: (
 3585,11: p
 3585,12: VARIABLE
 3585,12: ->
 3585,14: s
 3585,15: VARIABLE
 3585,15: .
 3585,16: size
 3585,20: VARIABLE
 3585,21: ==
 3585,24: nr_of_units
 3585,35: VARIABLE
 3585,35: )
 3586,7: {
 3587,9: prev_p
 3587,15: VARIABLE
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 3587,32: =
 3587,34: p
 3587,35: VARIABLE
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 3587,51: ;
 3588,7: }
 3589,7: else
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 
455 NAME VARIABLE 
 3585,11: p
 3585,12: VARIABLE
 
179 VARIABLE 
 3585,12: VARIABLE
 
147 -> general_identifier 
 3585,12: ->
 3585,14: s
 3585,15: VARIABLE
 
238 NAME VARIABLE 
 3585,14: s
 3585,15: VARIABLE
 
65 VARIABLE 
 3585,15: VARIABLE
 
147 . general_identifier 
 3585,15: .
 3585,16: size
 3585,20: VARIABLE
 
237 NAME VARIABLE 
 3585,16: size
 3585,20: VARIABLE
 
65 VARIABLE 
 3585,20: VARIABLE
 
155 == 
 3585,21: ==
 
257 NAME VARIABLE 
 3585,24: nr_of_units
 3585,35: VARIABLE
 
179 VARIABLE 
 3585,35: VARIABLE
 
483 ) scoped_statement else scoped_statement 
 3585,35: )
 3586,7: {
 3587,9: prev_p
 3587,15: VARIABLE
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 3587,32: =
 3587,34: p
 3587,35: VARIABLE
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 3587,51: ;
 3588,7: }
 3589,7: else
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 
320 { option_block_item_list } 
 3586,7: {
 3587,9: prev_p
 3587,15: VARIABLE
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 3587,32: =
 3587,34: p
 3587,35: VARIABLE
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 3587,51: ;
 3588,7: }
 
201 NAME VARIABLE 
 3587,9: prev_p
 3587,15: VARIABLE
 
65 VARIABLE 
 3587,15: VARIABLE
 
147 -> general_identifier 
 3587,15: ->
 3587,17: s
 3587,18: VARIABLE
 
238 NAME VARIABLE 
 3587,17: s
 3587,18: VARIABLE
 
65 VARIABLE 
 3587,18: VARIABLE
 
147 . general_identifier 
 3587,18: .
 3587,19: free_block_p
 3587,31: VARIABLE
 
237 NAME VARIABLE 
 3587,19: free_block_p
 3587,31: VARIABLE
 
65 VARIABLE 
 3587,31: VARIABLE
 
181 = 
 3587,32: =
 
279 NAME VARIABLE 
 3587,34: p
 3587,35: VARIABLE
 
179 VARIABLE 
 3587,35: VARIABLE
 
147 -> general_identifier 
 3587,35: ->
 3587,37: s
 3587,38: VARIABLE
 
238 NAME VARIABLE 
 3587,37: s
 3587,38: VARIABLE
 
65 VARIABLE 
 3587,38: VARIABLE
 
147 . general_identifier 
 3587,38: .
 3587,39: free_block_p
 3587,51: VARIABLE
 
237 NAME VARIABLE 
 3587,39: free_block_p
 3587,51: VARIABLE
 
65 VARIABLE 
 3587,51: VARIABLE
 
331 ; 
 3587,51: ;
 
201 } 
 3588,7: }
 
512 else scoped_statement 
 3589,7: else
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 
320 { option_block_item_list } 
 3590,7: {
 3591,9: p
 3591,10: VARIABLE
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 3591,19: -=
 3591,22: nr_of_units
 3591,33: VARIABLE
 3591,33: ;
 3592,9: p
 3592,10: VARIABLE
 3592,11: +=
 3592,14: p
 3592,15: VARIABLE
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 3592,23: ;
 3593,9: p
 3593,10: VARIABLE
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 3593,19: =
 3593,21: nr_of_units
 3593,32: VARIABLE
 3593,32: ;
 3594,7: }
 
201 NAME VARIABLE 
 3591,9: p
 3591,10: VARIABLE
 
65 VARIABLE 
 3591,10: VARIABLE
 
147 -> general_identifier 
 3591,10: ->
 3591,12: s
 3591,13: VARIABLE
 
238 NAME VARIABLE 
 3591,12: s
 3591,13: VARIABLE
 
65 VARIABLE 
 3591,13: VARIABLE
 
147 . general_identifier 
 3591,13: .
 3591,14: size
 3591,18: VARIABLE
 
237 NAME VARIABLE 
 3591,14: size
 3591,18: VARIABLE
 
65 VARIABLE 
 3591,18: VARIABLE
 
181 -= 
 3591,19: -=
 
279 NAME VARIABLE 
 3591,22: nr_of_units
 3591,33: VARIABLE
 
179 VARIABLE 
 3591,33: VARIABLE
 
331 ; 
 3591,33: ;
 
201 NAME VARIABLE 
 3592,9: p
 3592,10: VARIABLE
 
65 VARIABLE 
 3592,10: VARIABLE
 
181 += 
 3592,11: +=
 
279 NAME VARIABLE 
 3592,14: p
 3592,15: VARIABLE
 
179 VARIABLE 
 3592,15: VARIABLE
 
147 -> general_identifier 
 3592,15: ->
 3592,17: s
 3592,18: VARIABLE
 
238 NAME VARIABLE 
 3592,17: s
 3592,18: VARIABLE
 
65 VARIABLE 
 3592,18: VARIABLE
 
147 . general_identifier 
 3592,18: .
 3592,19: size
 3592,23: VARIABLE
 
237 NAME VARIABLE 
 3592,19: size
 3592,23: VARIABLE
 
65 VARIABLE 
 3592,23: VARIABLE
 
331 ; 
 3592,23: ;
 
201 NAME VARIABLE 
 3593,9: p
 3593,10: VARIABLE
 
65 VARIABLE 
 3593,10: VARIABLE
 
147 -> general_identifier 
 3593,10: ->
 3593,12: s
 3593,13: VARIABLE
 
238 NAME VARIABLE 
 3593,12: s
 3593,13: VARIABLE
 
65 VARIABLE 
 3593,13: VARIABLE
 
147 . general_identifier 
 3593,13: .
 3593,14: size
 3593,18: VARIABLE
 
237 NAME VARIABLE 
 3593,14: size
 3593,18: VARIABLE
 
65 VARIABLE 
 3593,18: VARIABLE
 
181 = 
 3593,19: =
 
279 NAME VARIABLE 
 3593,21: nr_of_units
 3593,32: VARIABLE
 
179 VARIABLE 
 3593,32: VARIABLE
 
331 ; 
 3593,32: ;
 
201 } 
 3594,7: }
 
201 NAME VARIABLE 
 3596,7: free_p
 3596,13: VARIABLE
 
65 VARIABLE 
 3596,13: VARIABLE
 
181 = 
 3596,14: =
 
279 NAME VARIABLE 
 3596,16: prev_p
 3596,22: VARIABLE
 
179 VARIABLE 
 3596,22: VARIABLE
 
331 ; 
 3596,22: ;
 
201 return option_expression ; 
 3597,7: return
 3597,14: (
 3597,15: void
 3597,20: *
 3597,21: )
 3597,22: (
 3597,23: p
 3597,24: VARIABLE
 3597,25: +
 3597,27: 1
 3597,28: )
 3597,29: ;
 
338 ( type_name ) cast_expression 
 3597,14: (
 3597,15: void
 3597,20: *
 3597,21: )
 3597,22: (
 3597,23: p
 3597,24: VARIABLE
 3597,25: +
 3597,27: 1
 3597,28: )
 
165 void 
 3597,15: void
 
137 * option_type_qualifier_list option_pointer 
 3597,20: *
 
269 ) cast_expression 
 3597,21: )
 3597,22: (
 3597,23: p
 3597,24: VARIABLE
 3597,25: +
 3597,27: 1
 3597,28: )
 
369 ( expression ) 
 3597,22: (
 3597,23: p
 3597,24: VARIABLE
 3597,25: +
 3597,27: 1
 3597,28: )
 
165 NAME VARIABLE 
 3597,23: p
 3597,24: VARIABLE
 
65 VARIABLE 
 3597,24: VARIABLE
 
152 + 
 3597,25: +
 
246 CONSTANT 
 3597,27: 1
 
267 ) 
 3597,28: )
 
415 ; 
 3597,29: ;
 
201 } 
 3598,5: }
 
320 if ( expression ) scoped_statement 
 3600,5: if
 3600,8: (
 3600,9: p
 3600,10: VARIABLE
 3600,11: ==
 3600,14: free_p
 3600,20: VARIABLE
 3600,20: )
 3601,5: {
 3602,7: if
 3602,10: (
 3602,11: (
 3602,12: p
 3602,13: VARIABLE
 3602,14: =
 3602,16: c_morecore
 3602,26: VARIABLE
 3602,26: (
 3602,27: nr_of_units
 3602,38: VARIABLE
 3602,38: )
 3602,39: )
 3602,41: ==
 3604,43: (
 3604,44: (
 3604,45: void
 3604,50: *
 3604,51: )
 3604,52: 0
 3604,53: )
 3606,47: )
 3607,7: {
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 3613,7: }
 3614,5: }
 
404 ( expression ) scoped_statement 
 3600,8: (
 3600,9: p
 3600,10: VARIABLE
 3600,11: ==
 3600,14: free_p
 3600,20: VARIABLE
 3600,20: )
 3601,5: {
 3602,7: if
 3602,10: (
 3602,11: (
 3602,12: p
 3602,13: VARIABLE
 3602,14: =
 3602,16: c_morecore
 3602,26: VARIABLE
 3602,26: (
 3602,27: nr_of_units
 3602,38: VARIABLE
 3602,38: )
 3602,39: )
 3602,41: ==
 3604,43: (
 3604,44: (
 3604,45: void
 3604,50: *
 3604,51: )
 3604,52: 0
 3604,53: )
 3606,47: )
 3607,7: {
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 3613,7: }
 3614,5: }
 
455 NAME VARIABLE 
 3600,9: p
 3600,10: VARIABLE
 
179 VARIABLE 
 3600,10: VARIABLE
 
155 == 
 3600,11: ==
 
257 NAME VARIABLE 
 3600,14: free_p
 3600,20: VARIABLE
 
179 VARIABLE 
 3600,20: VARIABLE
 
483 ) scoped_statement 
 3600,20: )
 3601,5: {
 3602,7: if
 3602,10: (
 3602,11: (
 3602,12: p
 3602,13: VARIABLE
 3602,14: =
 3602,16: c_morecore
 3602,26: VARIABLE
 3602,26: (
 3602,27: nr_of_units
 3602,38: VARIABLE
 3602,38: )
 3602,39: )
 3602,41: ==
 3604,43: (
 3604,44: (
 3604,45: void
 3604,50: *
 3604,51: )
 3604,52: 0
 3604,53: )
 3606,47: )
 3607,7: {
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 3613,7: }
 3614,5: }
 
320 { option_block_item_list } 
 3601,5: {
 3602,7: if
 3602,10: (
 3602,11: (
 3602,12: p
 3602,13: VARIABLE
 3602,14: =
 3602,16: c_morecore
 3602,26: VARIABLE
 3602,26: (
 3602,27: nr_of_units
 3602,38: VARIABLE
 3602,38: )
 3602,39: )
 3602,41: ==
 3604,43: (
 3604,44: (
 3604,45: void
 3604,50: *
 3604,51: )
 3604,52: 0
 3604,53: )
 3606,47: )
 3607,7: {
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 3613,7: }
 3614,5: }
 
320 if ( expression ) scoped_statement 
 3602,7: if
 3602,10: (
 3602,11: (
 3602,12: p
 3602,13: VARIABLE
 3602,14: =
 3602,16: c_morecore
 3602,26: VARIABLE
 3602,26: (
 3602,27: nr_of_units
 3602,38: VARIABLE
 3602,38: )
 3602,39: )
 3602,41: ==
 3604,43: (
 3604,44: (
 3604,45: void
 3604,50: *
 3604,51: )
 3604,52: 0
 3604,53: )
 3606,47: )
 3607,7: {
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 3613,7: }
 
404 ( expression ) scoped_statement 
 3602,10: (
 3602,11: (
 3602,12: p
 3602,13: VARIABLE
 3602,14: =
 3602,16: c_morecore
 3602,26: VARIABLE
 3602,26: (
 3602,27: nr_of_units
 3602,38: VARIABLE
 3602,38: )
 3602,39: )
 3602,41: ==
 3604,43: (
 3604,44: (
 3604,45: void
 3604,50: *
 3604,51: )
 3604,52: 0
 3604,53: )
 3606,47: )
 3607,7: {
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 3613,7: }
 
455 ( expression ) 
 3602,11: (
 3602,12: p
 3602,13: VARIABLE
 3602,14: =
 3602,16: c_morecore
 3602,26: VARIABLE
 3602,26: (
 3602,27: nr_of_units
 3602,38: VARIABLE
 3602,38: )
 3602,39: )
 
165 NAME VARIABLE 
 3602,12: p
 3602,13: VARIABLE
 
65 VARIABLE 
 3602,13: VARIABLE
 
181 = 
 3602,14: =
 
279 NAME VARIABLE 
 3602,16: c_morecore
 3602,26: VARIABLE
 
179 VARIABLE 
 3602,26: VARIABLE
 
147 ( option_argument_expression_list ) 
 3602,26: (
 3602,27: nr_of_units
 3602,38: VARIABLE
 3602,38: )
 
235 NAME VARIABLE 
 3602,27: nr_of_units
 3602,38: VARIABLE
 
179 VARIABLE 
 3602,38: VARIABLE
 
351 ) 
 3602,38: )
 
267 ) 
 3602,39: )
 
155 == 
 3602,41: ==
 
257 ( expression ) 
 3604,43: (
 3604,44: (
 3604,45: void
 3604,50: *
 3604,51: )
 3604,52: 0
 3604,53: )
 
165 ( type_name ) cast_expression 
 3604,44: (
 3604,45: void
 3604,50: *
 3604,51: )
 3604,52: 0
 
165 void 
 3604,45: void
 
137 * option_type_qualifier_list option_pointer 
 3604,50: *
 
269 ) cast_expression 
 3604,51: )
 3604,52: 0
 
369 CONSTANT 
 3604,52: 0
 
267 ) 
 3604,53: )
 
483 ) scoped_statement 
 3606,47: )
 3607,7: {
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 3613,7: }
 
320 { option_block_item_list } 
 3607,7: {
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 3613,7: }
 
201 return option_expression ; 
 3608,9: return
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 3612,19: ;
 
338 ( expression ) 
 3610,15: (
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 3610,25: )
 
165 ( type_name ) cast_expression 
 3610,16: (
 3610,17: void
 3610,22: *
 3610,23: )
 3610,24: 0
 
165 void 
 3610,17: void
 
137 * option_type_qualifier_list option_pointer 
 3610,22: *
 
269 ) cast_expression 
 3610,23: )
 3610,24: 0
 
369 CONSTANT 
 3610,24: 0
 
267 ) 
 3610,25: )
 
415 ; 
 3612,19: ;
 
201 } 
 3613,7: }
 
201 } 
 3614,5: }
 
201 } 
 3615,3: }
 
201 return option_expression ; 
 3617,3: return
 3619,9: (
 3619,10: (
 3619,11: void
 3619,16: *
 3619,17: )
 3619,18: 0
 3619,19: )
 3621,13: ;
 
338 ( expression ) 
 3619,9: (
 3619,10: (
 3619,11: void
 3619,16: *
 3619,17: )
 3619,18: 0
 3619,19: )
 
165 ( type_name ) cast_expression 
 3619,10: (
 3619,11: void
 3619,16: *
 3619,17: )
 3619,18: 0
 
165 void 
 3619,11: void
 
137 * option_type_qualifier_list option_pointer 
 3619,16: *
 
269 ) cast_expression 
 3619,17: )
 3619,18: 0
 
369 CONSTANT 
 3619,18: 0
 
267 ) 
 3619,19: )
 
415 ; 
 3621,13: ;
 
201 } 
 3622,1: }
 
23 void 
 3624,1: void
 
5 * option_type_qualifier_list option_pointer 
 3624,6: *
 
64 NAME VARIABLE 
 3624,7: c_calloc
 3624,15: VARIABLE
 
65 VARIABLE 
 3624,15: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 3624,15: (
 3624,16: size_t
 3624,22: TYPE
 3624,23: nr_of_blocks
 3624,35: VARIABLE
 3624,35: ,
 3624,37: size_t
 3624,43: TYPE
 3624,44: block_size
 3624,54: VARIABLE
 3624,54: )
 
186 NAME TYPE 
 3624,16: size_t
 3624,22: TYPE
 
65 TYPE 
 3624,22: TYPE
 
298 NAME VARIABLE 
 3624,23: nr_of_blocks
 3624,35: VARIABLE
 
65 VARIABLE 
 3624,35: VARIABLE
 
300 , parameter_declaration 
 3624,35: ,
 3624,37: size_t
 3624,43: TYPE
 3624,44: block_size
 3624,54: VARIABLE
 
391 NAME TYPE 
 3624,37: size_t
 3624,43: TYPE
 
26 TYPE 
 3624,43: TYPE
 
298 NAME VARIABLE 
 3624,44: block_size
 3624,54: VARIABLE
 
65 VARIABLE 
 3624,54: VARIABLE
 
187 ) 
 3624,54: )
 
94 { option_block_item_list } 
 3625,1: {
 3626,3: void
 3626,8: *
 3626,9: p
 3626,10: VARIABLE
 3626,11: =
 3628,12: (
 3628,13: (
 3628,14: void
 3628,19: *
 3628,20: )
 3628,21: 0
 3628,22: )
 3630,16: ;
 3631,3: if
 3631,6: (
 3631,7: (
 3631,8: p
 3631,9: VARIABLE
 3631,10: =
 3631,12: c_malloc
 3631,20: VARIABLE
 3631,20: (
 3631,21: nr_of_blocks
 3631,33: VARIABLE
 3631,34: *
 3631,36: block_size
 3631,46: VARIABLE
 3631,46: )
 3631,47: )
 3631,49: ==
 3633,51: (
 3633,52: (
 3633,53: void
 3633,58: *
 3633,59: )
 3633,60: 0
 3633,61: )
 3635,55: )
 3636,3: {
 3637,5: return
 3639,11: (
 3639,12: (
 3639,13: void
 3639,18: *
 3639,19: )
 3639,20: 0
 3639,21: )
 3641,15: ;
 3642,3: }
 3643,3: memset
 3643,9: VARIABLE
 3643,9: (
 3643,10: p
 3643,11: VARIABLE
 3643,11: ,
 3643,13: 0
 3643,14: ,
 3643,16: nr_of_blocks
 3643,28: VARIABLE
 3643,29: *
 3643,31: block_size
 3643,41: VARIABLE
 3643,41: )
 3643,42: ;
 3645,3: return
 3645,10: p
 3645,11: VARIABLE
 3645,11: ;
 3646,1: }
 
201 void 
 3626,3: void
 
93 * option_type_qualifier_list option_pointer 
 3626,8: *
 
64 NAME VARIABLE 
 3626,9: p
 3626,10: VARIABLE
 
65 VARIABLE 
 3626,10: VARIABLE
 
59 = c_initializer 
 3626,11: =
 3628,12: (
 3628,13: (
 3628,14: void
 3628,19: *
 3628,20: )
 3628,21: 0
 3628,22: )
 
108 ( expression ) 
 3628,12: (
 3628,13: (
 3628,14: void
 3628,19: *
 3628,20: )
 3628,21: 0
 3628,22: )
 
165 ( type_name ) cast_expression 
 3628,13: (
 3628,14: void
 3628,19: *
 3628,20: )
 3628,21: 0
 
165 void 
 3628,14: void
 
137 * option_type_qualifier_list option_pointer 
 3628,19: *
 
269 ) cast_expression 
 3628,20: )
 3628,21: 0
 
369 CONSTANT 
 3628,21: 0
 
267 ) 
 3628,22: )
 
60 ; 
 3630,16: ;
 
320 if ( expression ) scoped_statement 
 3631,3: if
 3631,6: (
 3631,7: (
 3631,8: p
 3631,9: VARIABLE
 3631,10: =
 3631,12: c_malloc
 3631,20: VARIABLE
 3631,20: (
 3631,21: nr_of_blocks
 3631,33: VARIABLE
 3631,34: *
 3631,36: block_size
 3631,46: VARIABLE
 3631,46: )
 3631,47: )
 3631,49: ==
 3633,51: (
 3633,52: (
 3633,53: void
 3633,58: *
 3633,59: )
 3633,60: 0
 3633,61: )
 3635,55: )
 3636,3: {
 3637,5: return
 3639,11: (
 3639,12: (
 3639,13: void
 3639,18: *
 3639,19: )
 3639,20: 0
 3639,21: )
 3641,15: ;
 3642,3: }
 
404 ( expression ) scoped_statement 
 3631,6: (
 3631,7: (
 3631,8: p
 3631,9: VARIABLE
 3631,10: =
 3631,12: c_malloc
 3631,20: VARIABLE
 3631,20: (
 3631,21: nr_of_blocks
 3631,33: VARIABLE
 3631,34: *
 3631,36: block_size
 3631,46: VARIABLE
 3631,46: )
 3631,47: )
 3631,49: ==
 3633,51: (
 3633,52: (
 3633,53: void
 3633,58: *
 3633,59: )
 3633,60: 0
 3633,61: )
 3635,55: )
 3636,3: {
 3637,5: return
 3639,11: (
 3639,12: (
 3639,13: void
 3639,18: *
 3639,19: )
 3639,20: 0
 3639,21: )
 3641,15: ;
 3642,3: }
 
455 ( expression ) 
 3631,7: (
 3631,8: p
 3631,9: VARIABLE
 3631,10: =
 3631,12: c_malloc
 3631,20: VARIABLE
 3631,20: (
 3631,21: nr_of_blocks
 3631,33: VARIABLE
 3631,34: *
 3631,36: block_size
 3631,46: VARIABLE
 3631,46: )
 3631,47: )
 
165 NAME VARIABLE 
 3631,8: p
 3631,9: VARIABLE
 
65 VARIABLE 
 3631,9: VARIABLE
 
181 = 
 3631,10: =
 
279 NAME VARIABLE 
 3631,12: c_malloc
 3631,20: VARIABLE
 
179 VARIABLE 
 3631,20: VARIABLE
 
147 ( option_argument_expression_list ) 
 3631,20: (
 3631,21: nr_of_blocks
 3631,33: VARIABLE
 3631,34: *
 3631,36: block_size
 3631,46: VARIABLE
 3631,46: )
 
235 NAME VARIABLE 
 3631,21: nr_of_blocks
 3631,33: VARIABLE
 
179 VARIABLE 
 3631,33: VARIABLE
 
151 * 
 3631,34: *
 
242 NAME VARIABLE 
 3631,36: block_size
 3631,46: VARIABLE
 
179 VARIABLE 
 3631,46: VARIABLE
 
351 ) 
 3631,46: )
 
267 ) 
 3631,47: )
 
155 == 
 3631,49: ==
 
257 ( expression ) 
 3633,51: (
 3633,52: (
 3633,53: void
 3633,58: *
 3633,59: )
 3633,60: 0
 3633,61: )
 
165 ( type_name ) cast_expression 
 3633,52: (
 3633,53: void
 3633,58: *
 3633,59: )
 3633,60: 0
 
165 void 
 3633,53: void
 
137 * option_type_qualifier_list option_pointer 
 3633,58: *
 
269 ) cast_expression 
 3633,59: )
 3633,60: 0
 
369 CONSTANT 
 3633,60: 0
 
267 ) 
 3633,61: )
 
483 ) scoped_statement 
 3635,55: )
 3636,3: {
 3637,5: return
 3639,11: (
 3639,12: (
 3639,13: void
 3639,18: *
 3639,19: )
 3639,20: 0
 3639,21: )
 3641,15: ;
 3642,3: }
 
320 { option_block_item_list } 
 3636,3: {
 3637,5: return
 3639,11: (
 3639,12: (
 3639,13: void
 3639,18: *
 3639,19: )
 3639,20: 0
 3639,21: )
 3641,15: ;
 3642,3: }
 
201 return option_expression ; 
 3637,5: return
 3639,11: (
 3639,12: (
 3639,13: void
 3639,18: *
 3639,19: )
 3639,20: 0
 3639,21: )
 3641,15: ;
 
338 ( expression ) 
 3639,11: (
 3639,12: (
 3639,13: void
 3639,18: *
 3639,19: )
 3639,20: 0
 3639,21: )
 
165 ( type_name ) cast_expression 
 3639,12: (
 3639,13: void
 3639,18: *
 3639,19: )
 3639,20: 0
 
165 void 
 3639,13: void
 
137 * option_type_qualifier_list option_pointer 
 3639,18: *
 
269 ) cast_expression 
 3639,19: )
 3639,20: 0
 
369 CONSTANT 
 3639,20: 0
 
267 ) 
 3639,21: )
 
415 ; 
 3641,15: ;
 
201 } 
 3642,3: }
 
201 NAME VARIABLE 
 3643,3: memset
 3643,9: VARIABLE
 
65 VARIABLE 
 3643,9: VARIABLE
 
147 ( option_argument_expression_list ) 
 3643,9: (
 3643,10: p
 3643,11: VARIABLE
 3643,11: ,
 3643,13: 0
 3643,14: ,
 3643,16: nr_of_blocks
 3643,28: VARIABLE
 3643,29: *
 3643,31: block_size
 3643,41: VARIABLE
 3643,41: )
 
235 NAME VARIABLE 
 3643,10: p
 3643,11: VARIABLE
 
179 VARIABLE 
 3643,11: VARIABLE
 
352 , assignment_expression 
 3643,11: ,
 3643,13: 0
 
429 CONSTANT 
 3643,13: 0
 
352 , assignment_expression 
 3643,14: ,
 3643,16: nr_of_blocks
 3643,28: VARIABLE
 3643,29: *
 3643,31: block_size
 3643,41: VARIABLE
 
429 NAME VARIABLE 
 3643,16: nr_of_blocks
 3643,28: VARIABLE
 
179 VARIABLE 
 3643,28: VARIABLE
 
151 * 
 3643,29: *
 
242 NAME VARIABLE 
 3643,31: block_size
 3643,41: VARIABLE
 
179 VARIABLE 
 3643,41: VARIABLE
 
351 ) 
 3643,41: )
 
331 ; 
 3643,42: ;
 
201 return option_expression ; 
 3645,3: return
 3645,10: p
 3645,11: VARIABLE
 3645,11: ;
 
338 NAME VARIABLE 
 3645,10: p
 3645,11: VARIABLE
 
179 VARIABLE 
 3645,11: VARIABLE
 
415 ; 
 3645,11: ;
 
201 } 
 3646,1: }
 
23 NAME TYPE 
 3648,1: Header
 3648,7: TYPE
 
26 TYPE 
 3648,7: TYPE
 
5 * option_type_qualifier_list option_pointer 
 3648,8: *
 
64 NAME VARIABLE 
 3648,9: c_morecore
 3648,19: VARIABLE
 
65 VARIABLE 
 3648,19: VARIABLE
 
113 ( scoped_parameter_type_list ) 
 3648,19: (
 3648,20: size_t
 3648,26: TYPE
 3648,27: nr_of_units
 3648,38: VARIABLE
 3648,38: )
 
186 NAME TYPE 
 3648,20: size_t
 3648,26: TYPE
 
65 TYPE 
 3648,26: TYPE
 
298 NAME VARIABLE 
 3648,27: nr_of_units
 3648,38: VARIABLE
 
65 VARIABLE 
 3648,38: VARIABLE
 
187 ) 
 3648,38: )
 
94 { option_block_item_list } 
 3649,1: {
 3650,3: char
 3650,8: *
 3650,9: c_p
 3650,12: VARIABLE
 3650,12: ;
 3651,3: Header
 3651,9: TYPE
 3651,10: *
 3651,11: u_p
 3651,14: VARIABLE
 3651,14: ;
 3653,3: if
 3653,6: (
 3653,7: nr_of_units
 3653,18: VARIABLE
 3653,19: <
 3653,21: 1024
 3653,25: )
 3654,3: {
 3655,5: nr_of_units
 3655,16: VARIABLE
 3655,17: =
 3655,19: 1024
 3655,23: ;
 3656,3: }
 3658,3: c_p
 3658,6: VARIABLE
 3658,7: =
 3658,9: sbrk
 3658,13: VARIABLE
 3658,13: (
 3658,14: nr_of_units
 3658,25: VARIABLE
 3658,26: *
 3658,28: sizeof
 3658,34: (
 3658,35: Header
 3658,41: TYPE
 3658,41: )
 3658,42: )
 3658,43: ;
 3659,3: if
 3659,6: (
 3659,7: c_p
 3659,10: VARIABLE
 3659,11: ==
 3659,14: (
 3659,15: char
 3659,20: *
 3659,21: )
 3659,22: -
 3659,23: 1
 3659,24: )
 3660,3: {
 3661,5: return
 3663,11: (
 3663,12: (
 3663,13: void
 3663,18: *
 3663,19: )
 3663,20: 0
 3663,21: )
 3665,15: ;
 3666,3: }
 3668,3: u_p
 3668,6: VARIABLE
 3668,7: =
 3668,9: (
 3668,10: Header
 3668,16: TYPE
 3668,17: *
 3668,18: )
 3668,19: c_p
 3668,22: VARIABLE
 3668,22: ;
 3669,3: u_p
 3669,6: VARIABLE
 3669,6: ->
 3669,8: s
 3669,9: VARIABLE
 3669,9: .
 3669,10: size
 3669,14: VARIABLE
 3669,15: =
 3669,17: nr_of_units
 3669,28: VARIABLE
 3669,28: ;
 3670,3: c_free
 3670,9: VARIABLE
 3670,9: (
 3670,10: (
 3670,11: void
 3670,16: *
 3670,17: )
 3670,18: (
 3670,19: u_p
 3670,22: VARIABLE
 3670,23: +
 3670,25: 1
 3670,26: )
 3670,27: )
 3670,28: ;
 3672,3: return
 3672,10: free_p
 3672,16: VARIABLE
 3672,16: ;
 3673,1: }
 
201 char 
 3650,3: char
 
93 * option_type_qualifier_list option_pointer 
 3650,8: *
 
64 NAME VARIABLE 
 3650,9: c_p
 3650,12: VARIABLE
 
65 VARIABLE 
 3650,12: VARIABLE
 
60 ; 
 3650,12: ;
 
201 NAME TYPE 
 3651,3: Header
 3651,9: TYPE
 
65 TYPE 
 3651,9: TYPE
 
93 * option_type_qualifier_list option_pointer 
 3651,10: *
 
64 NAME VARIABLE 
 3651,11: u_p
 3651,14: VARIABLE
 
65 VARIABLE 
 3651,14: VARIABLE
 
60 ; 
 3651,14: ;
 
320 if ( expression ) scoped_statement 
 3653,3: if
 3653,6: (
 3653,7: nr_of_units
 3653,18: VARIABLE
 3653,19: <
 3653,21: 1024
 3653,25: )
 3654,3: {
 3655,5: nr_of_units
 3655,16: VARIABLE
 3655,17: =
 3655,19: 1024
 3655,23: ;
 3656,3: }
 
404 ( expression ) scoped_statement 
 3653,6: (
 3653,7: nr_of_units
 3653,18: VARIABLE
 3653,19: <
 3653,21: 1024
 3653,25: )
 3654,3: {
 3655,5: nr_of_units
 3655,16: VARIABLE
 3655,17: =
 3655,19: 1024
 3655,23: ;
 3656,3: }
 
455 NAME VARIABLE 
 3653,7: nr_of_units
 3653,18: VARIABLE
 
179 VARIABLE 
 3653,18: VARIABLE
 
154 < 
 3653,19: <
 
252 CONSTANT 
 3653,21: 1024
 
483 ) scoped_statement 
 3653,25: )
 3654,3: {
 3655,5: nr_of_units
 3655,16: VARIABLE
 3655,17: =
 3655,19: 1024
 3655,23: ;
 3656,3: }
 
320 { option_block_item_list } 
 3654,3: {
 3655,5: nr_of_units
 3655,16: VARIABLE
 3655,17: =
 3655,19: 1024
 3655,23: ;
 3656,3: }
 
201 NAME VARIABLE 
 3655,5: nr_of_units
 3655,16: VARIABLE
 
65 VARIABLE 
 3655,16: VARIABLE
 
181 = 
 3655,17: =
 
279 CONSTANT 
 3655,19: 1024
 
331 ; 
 3655,23: ;
 
201 } 
 3656,3: }
 
201 NAME VARIABLE 
 3658,3: c_p
 3658,6: VARIABLE
 
65 VARIABLE 
 3658,6: VARIABLE
 
181 = 
 3658,7: =
 
279 NAME VARIABLE 
 3658,9: sbrk
 3658,13: VARIABLE
 
179 VARIABLE 
 3658,13: VARIABLE
 
147 ( option_argument_expression_list ) 
 3658,13: (
 3658,14: nr_of_units
 3658,25: VARIABLE
 3658,26: *
 3658,28: sizeof
 3658,34: (
 3658,35: Header
 3658,41: TYPE
 3658,41: )
 3658,42: )
 
235 NAME VARIABLE 
 3658,14: nr_of_units
 3658,25: VARIABLE
 
179 VARIABLE 
 3658,25: VARIABLE
 
151 * 
 3658,26: *
 
242 sizeof ( type_name ) 
 3658,28: sizeof
 3658,34: (
 3658,35: Header
 3658,41: TYPE
 3658,41: )
 
170 ( type_name ) 
 3658,34: (
 3658,35: Header
 3658,41: TYPE
 3658,41: )
 
276 NAME TYPE 
 3658,35: Header
 3658,41: TYPE
 
65 TYPE 
 3658,41: TYPE
 
373 ) 
 3658,41: )
 
351 ) 
 3658,42: )
 
331 ; 
 3658,43: ;
 
320 if ( expression ) scoped_statement 
 3659,3: if
 3659,6: (
 3659,7: c_p
 3659,10: VARIABLE
 3659,11: ==
 3659,14: (
 3659,15: char
 3659,20: *
 3659,21: )
 3659,22: -
 3659,23: 1
 3659,24: )
 3660,3: {
 3661,5: return
 3663,11: (
 3663,12: (
 3663,13: void
 3663,18: *
 3663,19: )
 3663,20: 0
 3663,21: )
 3665,15: ;
 3666,3: }
 
404 ( expression ) scoped_statement 
 3659,6: (
 3659,7: c_p
 3659,10: VARIABLE
 3659,11: ==
 3659,14: (
 3659,15: char
 3659,20: *
 3659,21: )
 3659,22: -
 3659,23: 1
 3659,24: )
 3660,3: {
 3661,5: return
 3663,11: (
 3663,12: (
 3663,13: void
 3663,18: *
 3663,19: )
 3663,20: 0
 3663,21: )
 3665,15: ;
 3666,3: }
 
455 NAME VARIABLE 
 3659,7: c_p
 3659,10: VARIABLE
 
179 VARIABLE 
 3659,10: VARIABLE
 
155 == 
 3659,11: ==
 
257 ( type_name ) cast_expression 
 3659,14: (
 3659,15: char
 3659,20: *
 3659,21: )
 3659,22: -
 3659,23: 1
 
165 char 
 3659,15: char
 
137 * option_type_qualifier_list option_pointer 
 3659,20: *
 
269 ) cast_expression 
 3659,21: )
 3659,22: -
 3659,23: 1
 
369 - 
 3659,22: -
 
149 CONSTANT 
 3659,23: 1
 
483 ) scoped_statement 
 3659,24: )
 3660,3: {
 3661,5: return
 3663,11: (
 3663,12: (
 3663,13: void
 3663,18: *
 3663,19: )
 3663,20: 0
 3663,21: )
 3665,15: ;
 3666,3: }
 
320 { option_block_item_list } 
 3660,3: {
 3661,5: return
 3663,11: (
 3663,12: (
 3663,13: void
 3663,18: *
 3663,19: )
 3663,20: 0
 3663,21: )
 3665,15: ;
 3666,3: }
 
201 return option_expression ; 
 3661,5: return
 3663,11: (
 3663,12: (
 3663,13: void
 3663,18: *
 3663,19: )
 3663,20: 0
 3663,21: )
 3665,15: ;
 
338 ( expression ) 
 3663,11: (
 3663,12: (
 3663,13: void
 3663,18: *
 3663,19: )
 3663,20: 0
 3663,21: )
 
165 ( type_name ) cast_expression 
 3663,12: (
 3663,13: void
 3663,18: *
 3663,19: )
 3663,20: 0
 
165 void 
 3663,13: void
 
137 * option_type_qualifier_list option_pointer 
 3663,18: *
 
269 ) cast_expression 
 3663,19: )
 3663,20: 0
 
369 CONSTANT 
 3663,20: 0
 
267 ) 
 3663,21: )
 
415 ; 
 3665,15: ;
 
201 } 
 3666,3: }
 
201 NAME VARIABLE 
 3668,3: u_p
 3668,6: VARIABLE
 
65 VARIABLE 
 3668,6: VARIABLE
 
181 = 
 3668,7: =
 
279 ( type_name ) cast_expression 
 3668,9: (
 3668,10: Header
 3668,16: TYPE
 3668,17: *
 3668,18: )
 3668,19: c_p
 3668,22: VARIABLE
 
165 NAME TYPE 
 3668,10: Header
 3668,16: TYPE
 
65 TYPE 
 3668,16: TYPE
 
137 * option_type_qualifier_list option_pointer 
 3668,17: *
 
269 ) cast_expression 
 3668,18: )
 3668,19: c_p
 3668,22: VARIABLE
 
369 NAME VARIABLE 
 3668,19: c_p
 3668,22: VARIABLE
 
179 VARIABLE 
 3668,22: VARIABLE
 
331 ; 
 3668,22: ;
 
201 NAME VARIABLE 
 3669,3: u_p
 3669,6: VARIABLE
 
65 VARIABLE 
 3669,6: VARIABLE
 
147 -> general_identifier 
 3669,6: ->
 3669,8: s
 3669,9: VARIABLE
 
238 NAME VARIABLE 
 3669,8: s
 3669,9: VARIABLE
 
65 VARIABLE 
 3669,9: VARIABLE
 
147 . general_identifier 
 3669,9: .
 3669,10: size
 3669,14: VARIABLE
 
237 NAME VARIABLE 
 3669,10: size
 3669,14: VARIABLE
 
65 VARIABLE 
 3669,14: VARIABLE
 
181 = 
 3669,15: =
 
279 NAME VARIABLE 
 3669,17: nr_of_units
 3669,28: VARIABLE
 
179 VARIABLE 
 3669,28: VARIABLE
 
331 ; 
 3669,28: ;
 
201 NAME VARIABLE 
 3670,3: c_free
 3670,9: VARIABLE
 
65 VARIABLE 
 3670,9: VARIABLE
 
147 ( option_argument_expression_list ) 
 3670,9: (
 3670,10: (
 3670,11: void
 3670,16: *
 3670,17: )
 3670,18: (
 3670,19: u_p
 3670,22: VARIABLE
 3670,23: +
 3670,25: 1
 3670,26: )
 3670,27: )
 
235 ( type_name ) cast_expression 
 3670,10: (
 3670,11: void
 3670,16: *
 3670,17: )
 3670,18: (
 3670,19: u_p
 3670,22: VARIABLE
 3670,23: +
 3670,25: 1
 3670,26: )
 
165 void 
 3670,11: void
 
137 * option_type_qualifier_list option_pointer 
 3670,16: *
 
269 ) cast_expression 
 3670,17: )
 3670,18: (
 3670,19: u_p
 3670,22: VARIABLE
 3670,23: +
 3670,25: 1
 3670,26: )
 
369 ( expression ) 
 3670,18: (
 3670,19: u_p
 3670,22: VARIABLE
 3670,23: +
 3670,25: 1
 3670,26: )
 
165 NAME VARIABLE 
 3670,19: u_p
 3670,22: VARIABLE
 
65 VARIABLE 
 3670,22: VARIABLE
 
152 + 
 3670,23: +
 
246 CONSTANT 
 3670,25: 1
 
267 ) 
 3670,26: )
 
351 ) 
 3670,27: )
 
331 ; 
 3670,28: ;
 
201 return option_expression ; 
 3672,3: return
 3672,10: free_p
 3672,16: VARIABLE
 3672,16: ;
 
338 NAME VARIABLE 
 3672,10: free_p
 3672,16: VARIABLE
 
179 VARIABLE 
 3672,16: VARIABLE
 
415 ; 
 3672,16: ;
 
201 } 
 3673,1: }
 
23 $ 
 3674,1: $
 
