Parse State: 0	Cursor Position: 1 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 422', '2 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 399', '3 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 246', '4 : ', '[T, ID, T, (, T, )] : 123', '5 : ', '[T, ID, T, :] : 59', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 26', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 21', '8 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 11', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 7', '10 : ', '[T, Goto, T, ID] : 3', '11 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 1']

                This is the incomplete Small Basic programming language code:
                
                'Identifier ( )'
                Complete the 'Identifier ( )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( )'. 
                
Time taken: 0.7499914169311523 seconds
Received response with candidate: 1. DrawCircle()
2. MovePlayer()
3. CalculateAverage()

                This is the incomplete Small Basic programming language code:
                
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. 'NextToken()'
2. 'AdvanceToken()'
3. 'GetNextLine()'
Actual result:  PrintTime ( )

Parse State: 6	Cursor Position: 1 10
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                PrintTime
                '( )'
                Complete the '( )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( )'. 
                
Time taken: 0.9503097534179688 seconds
Received response with candidate: PrintTime
'( 
  TextWindow.WriteLine("The current time is: " + DateTime.Now.ToString("h:mm:ss tt"))
)'

                This is the incomplete Small Basic programming language code:
                PrintTime
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. = Clock.Time
2. = Clock.GetTime
3. = Clock.DisplayTime
Actual result:  ( )

Parse State: 31	Cursor Position: 1 11
Candidate List: ['1 : ', '[T, )] : 31942']

                This is the incomplete Small Basic programming language code:
                PrintTime(
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.7672455310821533 seconds
Received response with candidate: 1) PrintTime(
   )
   
2) PrintTime()
   
3) PrintTime( )

                This is the incomplete Small Basic programming language code:
                PrintTime(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. "12:30 PM"
2. "3:45 AM"
3. "9:15 PM"
Actual result:  )

Parse State: 3	Cursor Position: 1 13
Candidate List: ['1 : ', '[T, CR, NT, MoreThanOneStmt] : 207345']

                This is the incomplete Small Basic programming language code:
                PrintTime()
                'CR MoreThanOneStmt'
                Complete the 'CR MoreThanOneStmt' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR MoreThanOneStmt'. 
                
Time taken: 1.4016356468200684 seconds
Received response with candidate: For the 'CR MoreThanOneStmt' part, here are three possible completions in Small Basic:

1. Set hour = Clock.Hour
   Set minute = Clock.Minute
   Set second = Clock.Second
   TextWindow.WriteLine(hour + ":" + minute + ":" + second)

2. If Clock.Hour < 12 Then
       TextWindow

                This is the incomplete Small Basic programming language code:
                PrintTime()
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. Clock.DisplayTime()
2. For i = 1 To 10
3. If time.Hour = 12 Then
Actual result:  \n TextWindow . Write ( "Enter your name: " ) \n name = TextWindow . Read ( ) \n TextWindow . Write ( name + ", the time now is: " ) \n PrintTime ( ) \n Sub PrintTime \n TextWindow . WriteLine ( Clock . Time ) \n EndSub

Parse State: 11	Cursor Position: 2 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 34613', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 32747', '3 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 19496', '4 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 18421', '5 : ', '[T, ID, T, (, T, )] : 9474', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 9366', '7 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 5075', '8 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 2043', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 1706', '10 : ', '[T, ID, T, :] : 1074', '11 : ', '[T, Goto, T, ID] : 421']

                This is the incomplete Small Basic programming language code:
                PrintTime()
                'Identifier . Identifier ( Expression )'
                Complete the 'Identifier . Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier ( Expression )'. 
                
Time taken: 0.9928696155548096 seconds
Received response with candidate: Math.GetRandomNumber(10)
GraphicsWindow.DrawRectangle(50, 50, 100, 100)
TextWindow.WriteLine("Hello, World!")

                This is the incomplete Small Basic programming language code:
                PrintTime()
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. GraphicsWindow.Show()
2. Clock.Delay(1000)
3. 'Goto Start'
Actual result:  TextWindow . Write ( "Enter your name: " )

Parse State: 6	Cursor Position: 2 11
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow
                '. Identifier ( Expression )'
                Complete the '. Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier ( Expression )'. 
                
Time taken: 1.1582057476043701 seconds
Received response with candidate: 1. '.Print("The current time is: " + DateTime.Now)'
2. '.DrawText(100, 100, "Time: " + DateTime.Now)'
3. '.ReadNumber("Enter the current time:")'

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: next token or line
next token or line
next token or line
Actual result:  . Write ( "Enter your name: " )

Parse State: 30	Cursor Position: 2 12
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, ID, T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.
                'Identifier ( Expression )'
                Complete the 'Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( Expression )'. 
                
Time taken: 1.2418458461761475 seconds
Received response with candidate: 1. TextWindow.WriteLine("The current time is " + time)
2. GraphicsWindow.DrawRectangle(x, y, width, height)
3. Math.GetRandomNumber(1, 10)

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. WriteLine("The current time is: " + DateTime.Now.ToString("h:mm:ss tt")) 
2. WriteLine("It is now: " + DateTime.Now.ToShortTimeString()) 
3. WriteLine("Time: " + DateTime.Now.ToString("HH:mm:ss"))
Actual result:  Write ( "Enter your name: " )

Parse State: 58	Cursor Position: 2 17
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 0.7443110942840576 seconds
Received response with candidate: 1. (Clock.Hour)
2. (Clock.Minute)
3. (Clock.Second)

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. ("Time: " + Time.ElapsedMilliseconds)
2. (Time.GetDateTimeNow())
3. ("Current time: " + DateTime.Now)
Actual result:  ( "Enter your name: " )

Parse State: 83	Cursor Position: 2 18
Candidate List: ['1 : ', '[T, ID] : 40231', '2 : ', '[T, NUM] : 32276', '3 : ', '[T, STR] : 31274', '4 : ', '[T, ID, NT, Idxs] : 11367', '5 : ', '[T, -, NT, Primary] : 1956', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 685', '7 : ', '[T, (, NT, Expr, T, )] : 324', '8 : ', '[T, ID, T, ., T, ID] : 242']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write(
                'String'
                Complete the 'String' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'String'. 
                
Time taken: 1.0175957679748535 seconds
Received response with candidate: 1. "The time is 3:00 PM"
2. "Current time: 10:30 AM"
3. "It's 6:45 in the evening"

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. Text.GetSubText("Hello World", 0, 5)
2. GraphicsWindow.DrawLine(0, 0, 100, 100)
3. Math.Power(2, 3)
Actual result:  "Enter your name: "

Parse State: 92	Cursor Position: 2 37
Candidate List: ['1 : ', '[T, )] : 131828']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: "
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 1.784564733505249 seconds
Received response with candidate: 1) )
2) ))
3) )))

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: "
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.Read()
2. name = TextWindow.Read()
3. TextWindow.ReadNumber()
Actual result:  )

Parse State: 3	Cursor Position: 2 39
Candidate List: ['1 : ', '[T, CR, NT, MoreThanOneStmt] : 207345']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ")
                'CR MoreThanOneStmt'
                Complete the 'CR MoreThanOneStmt' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR MoreThanOneStmt'. 
                
Time taken: 1.270261287689209 seconds
Received response with candidate: TextWindow.WriteLine("Hello, " + TextWindow.Read())
TextWindow.WriteLine("The current time is: " + Clock.Time)
TextWindow.WriteLine("Have a great day, " + TextWindow.Read())

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ")
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. name = TextWindow.Read()
2. name = TextWindow.ReadNumber()
3. name = TextWindow.ReadNonSpaces()
Actual result:  \n name = TextWindow . Read ( ) \n TextWindow . Write ( name + ", the time now is: " ) \n PrintTime ( ) \n Sub PrintTime \n TextWindow . WriteLine ( Clock . Time ) \n EndSub

Parse State: 11	Cursor Position: 3 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 34613', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 32747', '3 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 19496', '4 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 18421', '5 : ', '[T, ID, T, (, T, )] : 9474', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 9366', '7 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 5075', '8 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 2043', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 1706', '10 : ', '[T, ID, T, :] : 1074', '11 : ', '[T, Goto, T, ID] : 421']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ")
                'Identifier = Expression'
                Complete the 'Identifier = Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier = Expression'. 
                
Time taken: 0.7210826873779297 seconds
Received response with candidate: Identifier = TextWindow.Read()
Identifier = Clock.Hour
Identifier = Clock.Minute

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ")
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. name = TextWindow.Read()
2. name = TextWindow.GetInput()
3. name = TextWindow.ReadNumber()
Actual result:  name = TextWindow . Read ( )

Parse State: 6	Cursor Position: 3 6
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name
                '= Expression'
                Complete the '= Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '= Expression'. 
                
Time taken: 1.1453821659088135 seconds
Received response with candidate: 1. name = TextWindow.Read() + " Smith"
2. name = TextWindow.Read() + " Jones"
3. name = TextWindow.Read() + " Johnson"

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. = TextWindow.Read()
2. = TextWindow.Read()
3. = TextWindow.ReadNumber()
Actual result:  = TextWindow . Read ( )

Parse State: 29	Cursor Position: 3 8
Candidate List: ['1 : ', '[T, ID] : 44694', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 42463', '3 : ', '[T, NUM] : 34261', '4 : ', '[T, STR] : 20111', '5 : ', '[T, ID, NT, Idxs] : 8883', '6 : ', '[T, ID, T, ., T, ID] : 6123', '7 : ', '[T, (, NT, Expr, T, )] : 3004', '8 : ', '[T, -, NT, Primary] : 2564']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name =
                'Identifier . Identifier ( Expression )'
                Complete the 'Identifier . Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier ( Expression )'. 
                
Time taken: 0.9063692092895508 seconds
Received response with candidate: 1. TextWindow.Read()
2. Math.GetRandomNumber(10)
3. Clock.TimeNow()

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name =
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.Read()
2. TextWindow.ReadNumber()
3. TextWindow.ReadNonWhiteSpace()
Actual result:  TextWindow . Read ( )

Parse State: 22	Cursor Position: 3 18
Candidate List: ['1 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, [, NT, Expr, T, ]] : 59127', '3 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 21477', '4 : ', '[T, ., T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow
                '. Identifier ( Expression )'
                Complete the '. Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier ( Expression )'. 
                
Time taken: 1.1025598049163818 seconds
Received response with candidate: 1. '. Identifier ( name )'
2. '. Identifier ( getText() )'
3. '. Identifier ( ReadString() )'

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: name = TextWindow.Read()
name = TextWindow.Read()
name = TextWindow.Read()
Actual result:  . Read ( )

Parse State: 53	Cursor Position: 3 19
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.
                'Identifier ( Expression )'
                Complete the 'Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( Expression )'. 
                
Time taken: 0.6718361377716064 seconds
Received response with candidate: Read() 
ReadLine()
ReadInput()

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. Read()
2. ReadNumber()
3. ReadLine()
Actual result:  Read ( )

Parse State: 79	Cursor Position: 3 23
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 74070']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 0.7112195491790771 seconds
Received response with candidate: 1. name
2. TextWindow.Read()
3. ''

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1.  =() 
2.  [ ] 
3.  " "
Actual result:  ( )

Parse State: 102	Cursor Position: 3 24
Candidate List: ['1 : ', '[T, )] : 74070']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read(
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.6008567810058594 seconds
Received response with candidate: 1) ""
2)  
3) ""

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. "name"
2. 
" 
                    "name"
                    "
3. "
            "name"
Actual result:  )

Parse State: 3	Cursor Position: 3 26
Candidate List: ['1 : ', '[T, CR, NT, MoreThanOneStmt] : 207345']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read()
                'CR MoreThanOneStmt'
                Complete the 'CR MoreThanOneStmt' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR MoreThanOneStmt'. 
                
Time taken: 1.221726655960083 seconds
Received response with candidate: 1. 
TextWindow.WriteLine("Hello " + name + ", the current time is: " + Clock.Time)
TextWindow.WriteLine("Have a great day!")

2. 
hour = Clock.Hour()
minutes = Clock.Minute()
TextWindow.WriteLine("Hello " + name + ", the current time is: " + hour + ":" + minutes)
TextWindow

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read()
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.Write("Hello " + name + "!") 

2. If name = "Alice" Then 
   TextWindow.WriteLine("Welcome back, Alice!") 
   Else
   TextWindow.WriteLine("Hello, " + name + "!")
   EndIf

3. For i = 1 To 5 
   TextWindow.WriteLine
Actual result:  \n TextWindow . Write ( name + ", the time now is: " ) \n PrintTime ( ) \n Sub PrintTime \n TextWindow . WriteLine ( Clock . Time ) \n EndSub

Parse State: 11	Cursor Position: 4 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 34613', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 32747', '3 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 19496', '4 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 18421', '5 : ', '[T, ID, T, (, T, )] : 9474', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 9366', '7 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 5075', '8 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 2043', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 1706', '10 : ', '[T, ID, T, :] : 1074', '11 : ', '[T, Goto, T, ID] : 421']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read()
                'Identifier . Identifier ( Expression )'
                Complete the 'Identifier . Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier ( Expression )'. 
                
Time taken: 0.9145867824554443 seconds
Received response with candidate: 1. Program.GetTime()
2. Math.GetRandomNumber(10)
3. Text.GetSubText("Hello World", 1, 5)

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read()
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.WriteLine("Hello " + name + "!")
2. If name = "Alice" Then
3. For i = 1 To 5
Actual result:  TextWindow . Write ( name + ", the time now is: " )

Parse State: 6	Cursor Position: 4 11
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow
                '. Identifier ( Expression )'
                Complete the '. Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier ( Expression )'. 
                
Time taken: 0.9197678565979004 seconds
Received response with candidate: .WriteLine("Hello " + name + "!")
.ReadNumber("Enter your age: ")
.Read("Enter your favorite color: ")

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: Print("Hello " + name + "!")
ShowMessage("Hello " + name + "!")
TextWindow.WriteLine("Hello " + name + "!")
Actual result:  . Write ( name + ", the time now is: " )

Parse State: 30	Cursor Position: 4 12
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, ID, T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.
                'Identifier ( Expression )'
                Complete the 'Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( Expression )'. 
                
Time taken: 2.0557093620300293 seconds
Received response with candidate: 
1. TextWindow.WriteLine("Hello " + name + ", the current time is " + Clock.Hour + ":" + Clock.Minute)
2. TextWindow.WriteLine("Hi " + name + ", it is currently " + Clock.HourString + ":" + Clock.MinuteString)
3. TextWindow.WriteLine("Welcome " + name + ", the time right now

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: TextWindow.WriteLine("Hello " + name + "!") 

TextWindow.WriteLine("Nice to meet you, " + name + "!") 

TextWindow.WriteLine("Welcome, " + name + "!") 
Actual result:  Write ( name + ", the time now is: " )

Parse State: 58	Cursor Position: 4 17
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 1.4343671798706055 seconds
Received response with candidate: 1. ("Hello " + name + "! The current time is " + Clock.Hour + ":" + Clock.Minute)
2. ("Hi " + name + "! It's " + Clock.Hour + ":" + Clock.Minute + " now.")
3. ("Good day " + name + "! The time is " + Clock.Hour + ":" + Clock.Minute +

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: TextWindow.WriteLine("Hello " + name + "!")
TextWindow.WriteLine("Nice to meet you, " + name + "!")
age = TextWindow.ReadNumber()
TextWindow.WriteLine("Your name is " + name + " and you are " + age + " years old.")
Actual result:  ( name + ", the time now is: " )

Parse State: 83	Cursor Position: 4 18
Candidate List: ['1 : ', '[T, ID] : 40231', '2 : ', '[T, NUM] : 32276', '3 : ', '[T, STR] : 31274', '4 : ', '[T, ID, NT, Idxs] : 11367', '5 : ', '[T, -, NT, Primary] : 1956', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 685', '7 : ', '[T, (, NT, Expr, T, )] : 324', '8 : ', '[T, ID, T, ., T, ID] : 242']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(
                'Identifier'
                Complete the 'Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier'. 
                
Time taken: 1.2137634754180908 seconds
Received response with candidate: 1. "Hello, " + name + "! What is the current time?";
2. "Nice to meet you, " + name + "! Can you tell me what time it is?";
3. "Welcome, " + name + "! Do you know what time it is?";

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. "Hello " + name
2. "Welcome, " + name
3. "Nice to meet you, " + name
Actual result:  name

Parse State: 18	Cursor Position: 4 23
Candidate List: ['1 : ', '[T, +, NT, MultiplicativeExpr] : 95446', '2 : ', '[T, -, NT, MultiplicativeExpr] : 41871']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name
                '+ MultiplicativeExpr'
                Complete the '+ MultiplicativeExpr' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '+ MultiplicativeExpr'. 
                
Time taken: 1.1312353610992432 seconds
Received response with candidate: 1. TextWindow.WriteLine(", what is the current time?")
2. TextWindow.WriteLine(" has been added to the list.")
3. TextWindow.WriteLine(" is a great name!")

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. 
TextWindow.WriteLine("Welcome, " + name + "!") 

2. 
TextWindow.WriteLine("Nice to meet you, " + name + "!") 

3. 
TextWindow.WriteLine("Hello, " + name + "!")
Actual result:  + ", the time now is: "

Parse State: 48	Cursor Position: 4 25
Candidate List: ['1 : ', '[T, ID] : 38463', '2 : ', '[T, NUM] : 30206', '3 : ', '[T, STR] : 15165', '4 : ', '[T, ID, NT, Idxs] : 7164', '5 : ', '[T, (, NT, Expr, T, )] : 3656', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 2629', '7 : ', '[T, ID, T, ., T, ID] : 322', '8 : ', '[T, -, NT, Primary] : 9']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name +
                'String'
                Complete the 'String' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'String'. 
                
Time taken: 1.089946985244751 seconds
Received response with candidate: 1. + " , the current time is " + Clock.Hour + ":" + Clock.Minute
2. + ", it's nice to meet you!"
3. + ", would you like to play a game?"

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name +
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. + " , what is the current time?"
2. + ", please enter your age:"
3. + ", welcome to our program!"
Actual result:  ", the time now is: "

Parse State: 92	Cursor Position: 4 46
Candidate List: ['1 : ', '[T, )] : 131828']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: "
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 1.2461295127868652 seconds
Received response with candidate: 1) Clock.Hour + ":" + Clock.Minute 

2) Clock.Hour + ":" + Clock.Minute + ":" + Clock.Second 

3) Clock.Hour + ":" + Clock.Minute + " AM/PM"

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: "
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. Text.GetDateTime()
2. Clock.Time()
3. Clock.GetTime()
Actual result:  )

Parse State: 3	Cursor Position: 4 48
Candidate List: ['1 : ', '[T, CR, NT, MoreThanOneStmt] : 207345']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ")
                'CR MoreThanOneStmt'
                Complete the 'CR MoreThanOneStmt' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR MoreThanOneStmt'. 
                
Time taken: 1.1011064052581787 seconds
Received response with candidate: 1. TextWindow.WriteLine(Clock.Hour + ":" + Clock.Minute)
2. TextWindow.WriteLine("Good morning, " + name + "!")
3. TextWindow.WriteLine("Have a great day ahead, " + name + "!")

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ")
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.WriteLine (Clock.Time)
2. TextWindow.WriteLine (Clock.Hour + ":" + Clock.Minute)
3. TextWindow.WriteLine ("HH:MM:SS")
Actual result:  \n PrintTime ( ) \n Sub PrintTime \n TextWindow . WriteLine ( Clock . Time ) \n EndSub

Parse State: 11	Cursor Position: 5 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 34613', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 32747', '3 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 19496', '4 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 18421', '5 : ', '[T, ID, T, (, T, )] : 9474', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 9366', '7 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 5075', '8 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 2043', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 1706', '10 : ', '[T, ID, T, :] : 1074', '11 : ', '[T, Goto, T, ID] : 421']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ")
                'Identifier ( )'
                Complete the 'Identifier ( )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( )'. 
                
Time taken: 0.7469127178192139 seconds
Received response with candidate: 1. GetTime()
2. DisplayCurrentTime()
3. ShowCurrentTime()

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ")
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. Clock.Time()
2. DateTime.Now()
3. Time.GetTime()
Actual result:  PrintTime ( )

Parse State: 6	Cursor Position: 5 10
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime
                '( )'
                Complete the '( )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( )'. 
                
Time taken: 0.7711544036865234 seconds
Received response with candidate: PrintTime()
PrintTime( )
PrintTime("current")

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. 
TextWindow.WriteLine(Clock.Hour + ":" + Clock.Minute)
2. 
TextWindow.WriteLine("The time now is " + Clock.Hour + ":" + Clock.Minute)
3. 
TextWindow.WriteLine("Hello " + name + ", the current time is " + Clock.Hour + ":" + Clock.Minute)
Actual result:  ( )

Parse State: 31	Cursor Position: 5 11
Candidate List: ['1 : ', '[T, )] : 31942']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime(
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.8514978885650635 seconds
Received response with candidate: )

Sub Time()
  TextWindow.WriteLine("The current time is: " + Clock.Hour + ":" + Clock.Minute)
EndSub

Time()

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. Clock.Time
2. Program.Time
3. System.Time
Actual result:  )

Parse State: 3	Cursor Position: 5 13
Candidate List: ['1 : ', '[T, CR, NT, MoreThanOneStmt] : 207345']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime()
                'CR MoreThanOneStmt'
                Complete the 'CR MoreThanOneStmt' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR MoreThanOneStmt'. 
                
Time taken: 1.2851858139038086 seconds
Received response with candidate: 1. 
currentTime = Clock.Hour
If currentTime < 12 Then
  TextWindow.WriteLine(currentTime + " AM")
Else
  TextWindow.WriteLine(currentTime + " PM")

2.
minutes = Clock.Minute
TextWindow.WriteLine(":" + minutes)

3.
seconds = Clock.Second
TextWindow.WriteLine("and " + seconds + " seconds

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime()
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. 'TextWindow.WriteLine(Clock.Time)' 

2. 'TextWindow.WriteLine(DateTime.Now)' 

3. 'TextWindow.WriteLine(Time.Hour & ":" & Time.Minute)'
Actual result:  \n Sub PrintTime \n TextWindow . WriteLine ( Clock . Time ) \n EndSub

Parse State: 11	Cursor Position: 6 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 34613', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 32747', '3 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 19496', '4 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 18421', '5 : ', '[T, ID, T, (, T, )] : 9474', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 9366', '7 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 5075', '8 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 2043', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 1706', '10 : ', '[T, ID, T, :] : 1074', '11 : ', '[T, Goto, T, ID] : 421']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime()
                'Sub Identifier CRStmtCRs EndSub'
                Complete the 'Sub Identifier CRStmtCRs EndSub' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Sub Identifier CRStmtCRs EndSub'. 
                
Time taken: 1.1660375595092773 seconds
Received response with candidate: 1. Sub PrintTime()
   TextWindow.WriteLine(DateTime.Now)
EndSub

2. Sub PrintTime()
   TextWindow.WriteLine(Format(DateTime.Now, "hh:mm:ss tt"))
EndSub

3. Sub PrintTime()
   TextWindow.WriteLine("The time is " + DateTime.Now)
EndSub

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime()
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.WriteLine(Clock.Hour + ":" + Clock.Minute)
2. TextWindow.WriteLine(Clock.Hour + ":" + Clock.Minute + ":" + Clock.Second) 
3. TextWindow.WriteLine(Clock.Hour + " " + Clock.AMPM)
Actual result:  Sub PrintTime \n TextWindow . WriteLine ( Clock . Time ) \n EndSub

Parse State: 9	Cursor Position: 6 5
Candidate List: ['1 : ', '[T, ID, NT, CRStmtCRs, T, EndSub] : 18432']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub
                'Identifier CRStmtCRs EndSub'
                Complete the 'Identifier CRStmtCRs EndSub' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier CRStmtCRs EndSub'. 
                
Time taken: 1.2632339000701904 seconds
Received response with candidate: 1. MyPrintTime()
   TextWindow.WriteLine("The current time is " + Clock.Time)

2. DisplayCurrentTime()
   TextWindow.WriteLine("Current time: " + Clock.Time)

3. ShowTime()
   TextWindow.WriteLine("The time right now is: " + Clock.Time)

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. Sub PrintTime
2. TextWindow.WriteLine(Clock.Hour + ":" + Clock.Minute)
3. End Sub
Actual result:  PrintTime \n TextWindow . WriteLine ( Clock . Time ) \n EndSub

Parse State: 35	Cursor Position: 6 17
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 18432']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 0.9673933982849121 seconds
Received response with candidate: 1. TextWindow.WriteLine(Clock.Time)
2. TextWindow.WriteLine(DateTime.Now)
3. TextWindow.WriteLine(System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTime.Now, TimeZone.CurrentTimeZone.StandardName))

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: - TextWindow.Write(DateTime.Now)
- TextWindow.WriteLine(DateTime.Now.ToLongTimeString())
- TextWindow.Write("It's " + DateTime.Now.Hour + ":" + DateTime.Now.Minute)
Actual result:  \n TextWindow . WriteLine ( Clock . Time ) \n

Parse State: 39	Cursor Position: 7 2
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 39900', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 20767', '3 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 8661', '4 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 7431', '5 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 5625', '6 : ', '[T, ID, T, (, T, )] : 5524', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 3143', '8 : ', '[T, Goto, T, ID] : 1557', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 240', '10 : ', '[T, ID, T, :] : 78']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime
                'Identifier . Identifier ( Expression )'
                Complete the 'Identifier . Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier ( Expression )'. 
                
Time taken: 0.7320256233215332 seconds
Received response with candidate: 1. Clock.GetCurrentTime()
2. Time.GetSystemTime()
3. Clock.GetTimezoneOffset()

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.WriteLine(Clock.Hour + ":" + Clock.Minute)
2. TextWindow.WriteLine("The current time is " + Clock.Hour + ":" + Clock.Minute)
3. TextWindow.WriteLine("Current time: " + Clock.Hour + ":" + Clock.Minute)
Actual result:  TextWindow . WriteLine ( Clock . Time )

Parse State: 6	Cursor Position: 7 12
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow
                '. Identifier ( Expression )'
                Complete the '. Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier ( Expression )'. 
                
Time taken: 0.85943603515625 seconds
Received response with candidate: .WriteLine(DateTime.Now.ToLongTimeString()) 

.WriteLine(DateTime.Now.ToShortTimeString()) 

.WriteLine(DateTime.Now.ToString("h:mm:ss tt"))  

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: .WriteLine("The time is " + Program.GetTime()) 

.WriteLine("The current time is " + Program.GetTime()) 

.WriteLine("It is currently " + Program.GetTime())
Actual result:  . WriteLine ( Clock . Time )

Parse State: 30	Cursor Position: 7 13
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, ID, T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.
                'Identifier ( Expression )'
                Complete the 'Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( Expression )'. 
                
Time taken: 0.7801117897033691 seconds
Received response with candidate: 1. Identifier (DateTime.Now)
2. Identifier (Clock.Time)
3. Identifier (Time.GetCurrentTime())

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate:  
1. TextWindow.WriteLine(DateTime.Now.ToLongTimeString())
2. TextWindow.WriteLine(DateTime.Now.ToShortTimeString())
3. TextWindow.WriteLine(DateTime.Now.ToString("hh:mm:ss tt"))
Actual result:  WriteLine ( Clock . Time )

Parse State: 58	Cursor Position: 7 22
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.WriteLine
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 0.9133408069610596 seconds
Received response with candidate: 1. Clock.Time
2. DateTime.Now
3. Clock.LocalTime

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.WriteLine
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. "DateTime.Now.ToString()"
2. "Math.GetTimeOfDay()"
3. "Clock.GetTime()"
Actual result:  ( Clock . Time )

Parse State: 83	Cursor Position: 7 23
Candidate List: ['1 : ', '[T, ID] : 40231', '2 : ', '[T, NUM] : 32276', '3 : ', '[T, STR] : 31274', '4 : ', '[T, ID, NT, Idxs] : 11367', '5 : ', '[T, -, NT, Primary] : 1956', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 685', '7 : ', '[T, (, NT, Expr, T, )] : 324', '8 : ', '[T, ID, T, ., T, ID] : 242']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.WriteLine(
                'Identifier . Identifier'
                Complete the 'Identifier . Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier'. 
                
Time taken: 1.03065824508667 seconds
Received response with candidate: 1. Clock.Hour + ":" + Clock.Minute
2. Clock.CurrentHour + ":" + Clock.CurrentMinute
3. Clock.GetHour() + ":" + Clock.GetMinute()

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.WriteLine(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: DateTime.Now.ToShortTimeString() 
                Clock.Time() 
                System.Time()
Actual result:  Clock . Time

Parse State: 22	Cursor Position: 7 28
Candidate List: ['1 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, [, NT, Expr, T, ]] : 59127', '3 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 21477', '4 : ', '[T, ., T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.WriteLine(Clock
                '. Identifier'
                Complete the '. Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier'. 
                
Time taken: 0.6206810474395752 seconds
Received response with candidate: .Date
.Time
.Hour

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.WriteLine(Clock
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. .Time)
2. .Time()
3. .Time.ToShortTimeString()
Actual result:  . Time

Parse State: 53	Cursor Position: 7 29
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.WriteLine(Clock.
                'Identifier'
                Complete the 'Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier'. 
                
Time taken: 1.154646873474121 seconds
Received response with candidate: Now let's complete the code three times with different identifiers:

1. TextWindow.GetTimeString()
2. Clock.GetCurrentTime()
3. Microsoft.SmallBasic.Utils.GetCurrentTime()

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.WriteLine(Clock.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. Time.LocalTime
2. Time.LocalTime + " AM"
3. Time.ElapsedTimeString
Actual result:  Time

Parse State: 92	Cursor Position: 7 33
Candidate List: ['1 : ', '[T, )] : 131828']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.WriteLine(Clock.Time
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.7121634483337402 seconds
Received response with candidate: 1) + "("
2) ")"
3) + ")"

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.WriteLine(Clock.Time
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. + Clock.Hour + ":" + Clock.Minute
2. + Clock.Hour.ToString() + ":" + Clock.Minute.ToString()
3. + Time.GetTimeString()
Actual result:  )

Parse State: 65	Cursor Position: 7 35
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 478907']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.WriteLine(Clock.Time)
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 0.8521466255187988 seconds
Received response with candidate: CR TextWindow.WriteLine("Good morning!")

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.WriteLine(Clock.Time)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. 
TextWindow.WriteLine(Clock.Hour + ":" + Clock.Minute)
                
2. 
TextWindow.WriteLine("It is currently " + Clock.Hour + " o'clock.")
                
3. 
TextWindow.WriteLine("The time is " + Clock.Hour + ":" + Clock.Minute)
Actual result:  \n

Parse State: 62	Cursor Position: 8 1
Candidate List: ['1 : ', '[T, EndSub] : 18432']

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.WriteLine(Clock.Time)
                'EndSub'
                Complete the 'EndSub' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'EndSub'. 
                
Time taken: 0.7729904651641846 seconds
Received response with candidate: 1. EndSub

2. End Sub

3. EndSub PrintTime

                This is the incomplete Small Basic programming language code:
                PrintTime() 
TextWindow.Write("Enter your name: ") 
name = TextWindow.Read() 
TextWindow.Write(name + ", the time now is: ") 
PrintTime() 
Sub PrintTime   
	TextWindow.WriteLine(Clock.Time)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.WriteLine("It is now " + Clock.Hour + ":" + Clock.Minute + ".")

2. TextWindow.WriteLine("The current time is " + Clock.Hour + " hours and " + Clock.Minute + " minutes.")

3. TextWindow.WriteLine("Time check: " + Clock.Hour + " hours and " + Clock.Minute + "
Actual result:  EndSub

