Parse State: 0	Cursor Position: 1 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 422', '2 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 399', '3 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 246', '4 : ', '[T, ID, T, (, T, )] : 123', '5 : ', '[T, ID, T, :] : 59', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 26', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 21', '8 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 11', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 7', '10 : ', '[T, Goto, T, ID] : 3', '11 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 1']

                This is the incomplete Small Basic programming language code:
                
                'Identifier . Identifier ( Expression )'
                Complete the 'Identifier . Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier ( Expression )'. 
                
Time taken: 0.9726336002349854 seconds
Received response with candidate: 1. Turtle.Move(100)
2. GraphicsWindow.DrawText("Hello", 50, 50)
3. Shapes.AddEllipse(200, 200)

                This is the incomplete Small Basic programming language code:
                
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. 'next token or line'
2. 'continue with the next iteration'
3. 'move to the next item'
Actual result:  TextWindow . Write ( "Enter your Name: " )

Parse State: 6	Cursor Position: 1 11
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                TextWindow
                '. Identifier ( Expression )'
                Complete the '. Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier ( Expression )'. 
                
Time taken: 0.8725831508636475 seconds
Received response with candidate: 1. WriteLine("Hello World")
2. DrawTriangle(100, 200)
3. SetBackgroundColour("blue")

                This is the incomplete Small Basic programming language code:
                TextWindow
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.WriteLine("Enter your name:")
2. name = TextWindow.Read()
3. age = TextWindow.ReadNumber()
Actual result:  . Write ( "Enter your Name: " )

Parse State: 30	Cursor Position: 1 12
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, ID, T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                TextWindow.
                'Identifier ( Expression )'
                Complete the 'Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( Expression )'. 
                
Time taken: 1.206263542175293 seconds
Received response with candidate: 1. WriteLine("Hello, World!")
2. GetColorFromRGB(255, 0, 0)
3. Math.Power(2, 3)

                This is the incomplete Small Basic programming language code:
                TextWindow.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: Read() 
ReadNumber() 
ReadString()
Actual result:  Write ( "Enter your Name: " )

Parse State: 58	Cursor Position: 1 17
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 0.9911665916442871 seconds
Received response with candidate: 1. TextWindow.Write("Hello World")
2. TextWindow.Write(5 + 10)
3. TextWindow.Write("The current time is: " + Clock.Time)

                This is the incomplete Small Basic programming language code:
                TextWindow.Write
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. "Hello, World!"
2. "12345"
3. userInput
Actual result:  ( "Enter your Name: " )

Parse State: 83	Cursor Position: 1 18
Candidate List: ['1 : ', '[T, ID] : 40231', '2 : ', '[T, NUM] : 32276', '3 : ', '[T, STR] : 31274', '4 : ', '[T, ID, NT, Idxs] : 11367', '5 : ', '[T, -, NT, Primary] : 1956', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 685', '7 : ', '[T, (, NT, Expr, T, )] : 324', '8 : ', '[T, ID, T, ., T, ID] : 242']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write(
                'String'
                Complete the 'String' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'String'. 
                
Time taken: 0.7552788257598877 seconds
Received response with candidate: 1. "Hello"
2. "Small Basic"
3. "12345"

                This is the incomplete Small Basic programming language code:
                TextWindow.Write(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.ReadNumber()
2. TextWindow.Read()
3. TextWindow.ReadInteger()
Actual result:  "Enter your Name: "

Parse State: 92	Cursor Position: 1 37
Candidate List: ['1 : ', '[T, )] : 131828']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: "
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.9128246307373047 seconds
Received response with candidate: 1) 
TextWindow.Write("Enter your Name: ")

2)
TextWindow.Write("Enter your Name: ")

3)
TextWindow.Write("Enter your Name: ")

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: "
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. inputName = TextWindow.Read()
2. name = TextWindow.Read()
3. nameInput = TextWindow.Read()
Actual result:  )

Parse State: 3	Cursor Position: 1 39
Candidate List: ['1 : ', '[T, CR, NT, MoreThanOneStmt] : 207345']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ")
                'CR MoreThanOneStmt'
                Complete the 'CR MoreThanOneStmt' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR MoreThanOneStmt'. 
                
Time taken: 1.4169061183929443 seconds
Received response with candidate: TextWindow.WriteLine("Hello " + TextWindow.Read())

name = TextWindow.Read()
TextWindow.WriteLine("Hello " + name)

input = TextWindow.Read()
TextWindow.WriteLine("Hello " + input)

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ")
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. userInput = TextWindow.Read()
2. userName = TextWindow.Read()
3. name = TextWindow.Read()
Actual result:  \n name = TextWindow . Read ( ) \n TextWindow . WriteLine ( "Hello " + name )

Parse State: 11	Cursor Position: 2 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 34613', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 32747', '3 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 19496', '4 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 18421', '5 : ', '[T, ID, T, (, T, )] : 9474', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 9366', '7 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 5075', '8 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 2043', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 1706', '10 : ', '[T, ID, T, :] : 1074', '11 : ', '[T, Goto, T, ID] : 421']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ")
                'Identifier = Expression'
                Complete the 'Identifier = Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier = Expression'. 
                
Time taken: 0.8769946098327637 seconds
Received response with candidate: 1. name = TextWindow.Read()
2. userInput = TextWindow.Read()
3. player = TextWindow.Read()

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ")
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. name = TextWindow.Read()
2. name = TextWindow.ReadNumber()
3. name = TextWindow.ReadNonWhiteSpaceToken()
Actual result:  name = TextWindow . Read ( )

Parse State: 6	Cursor Position: 2 6
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name
                '= Expression'
                Complete the '= Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '= Expression'. 
                
Time taken: 1.0664525032043457 seconds
Received response with candidate: 1. name = TextWindow.Read()

2. name = TextWindow.ReadNumber()

3. name = TextWindow.ReadSecret()

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. name = TextWindow.Read()
2. name = TextWindow.ReadNumber()
3. name = TextWindow.Read() + " Smith"
Actual result:  = TextWindow . Read ( )

Parse State: 29	Cursor Position: 2 8
Candidate List: ['1 : ', '[T, ID] : 44694', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 42463', '3 : ', '[T, NUM] : 34261', '4 : ', '[T, STR] : 20111', '5 : ', '[T, ID, NT, Idxs] : 8883', '6 : ', '[T, ID, T, ., T, ID] : 6123', '7 : ', '[T, (, NT, Expr, T, )] : 3004', '8 : ', '[T, -, NT, Primary] : 2564']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name =
                'Identifier . Identifier ( Expression )'
                Complete the 'Identifier . Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier ( Expression )'. 
                
Time taken: 0.8727831840515137 seconds
Received response with candidate: 1. name = TextWindow.Read()
2. name = TextWindow.ReadNumber()
3. name = TextWindow.ReadBoolean()

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name =
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: name = TextWindow.Read()
name = TextWindow.ReadNumber()
name = TextWindow.Read()
Actual result:  TextWindow . Read ( )

Parse State: 22	Cursor Position: 2 18
Candidate List: ['1 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, [, NT, Expr, T, ]] : 59127', '3 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 21477', '4 : ', '[T, ., T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow
                '. Identifier ( Expression )'
                Complete the '. Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier ( Expression )'. 
                
Time taken: 1.117997646331787 seconds
Received response with candidate: 1. .GetCharacters(5, 10)
2. .Read()
3. .GetSubText(0, 5)

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. .Read()
2. .ReadLine()
3. .GetInput()
Actual result:  . Read ( )

Parse State: 53	Cursor Position: 2 19
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.
                'Identifier ( Expression )'
                Complete the 'Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( Expression )'. 
                
Time taken: 0.6637024879455566 seconds
Received response with candidate: Read() 
Read()
ReadNumber()

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: Read() 
ReadString() 
ReadNumber()
Actual result:  Read ( )

Parse State: 79	Cursor Position: 2 23
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 74070']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 1.1903142929077148 seconds
Received response with candidate: 1. (name != "")
2. (Text.GetLength(name) > 0)
3. (Text.IsAlphaNumeric(name))

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. name = TextWindow.Read()
2. name = TextWindow.ReadNumber()
3. name = TextWindow.ReadNonNegativeNumber()
Actual result:  ( )

Parse State: 102	Cursor Position: 2 24
Candidate List: ['1 : ', '[T, )] : 74070']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read(
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 1.0309059619903564 seconds
Received response with candidate: 
                1) ""
                2) " "
                3) TextWindow.ReadLine()

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. )
name = TextWindow.Read()

2. )
name = TextWindow.ReadNumber()

3. )
name = TextWindow.ReadNonWhiteSpaceCharacter()
Actual result:  )

Parse State: 3	Cursor Position: 2 26
Candidate List: ['1 : ', '[T, CR, NT, MoreThanOneStmt] : 207345']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read()
                'CR MoreThanOneStmt'
                Complete the 'CR MoreThanOneStmt' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR MoreThanOneStmt'. 
                
Time taken: 1.4931292533874512 seconds
Received response with candidate: 1. name = Text.ConvertToUpperCase(name)
2. TextWindow.WriteLine("Hello " + name)
3. TextWindow.WriteLine("Your name contains " + Text.GetLength(name) + " characters")

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read()
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.WriteLine("Hello " + name)
2. If name = "John" Then 
3. TextWindow.WriteLine("Thank you for entering your name!")
Actual result:  \n TextWindow . WriteLine ( "Hello " + name )

Parse State: 11	Cursor Position: 3 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 34613', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 32747', '3 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 19496', '4 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 18421', '5 : ', '[T, ID, T, (, T, )] : 9474', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 9366', '7 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 5075', '8 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 2043', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 1706', '10 : ', '[T, ID, T, :] : 1074', '11 : ', '[T, Goto, T, ID] : 421']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read()
                'Identifier . Identifier ( Expression )'
                Complete the 'Identifier . Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier ( Expression )'. 
                
Time taken: 1.188096046447754 seconds
Received response with candidate: 1. name.Length
2. name.ToUpper()
3. Text.GetLength(name)

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read()
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.Write("Hello " + name + "! Thanks for entering your name.")
2. If name = "John" Then
     TextWindow.WriteLine("Hello, John! Welcome back.")
   Else
     TextWindow.WriteLine("Nice to meet you, " + name + ".")
3. For i = 1 To name.Length

Actual result:  TextWindow . WriteLine ( "Hello " + name )

Parse State: 6	Cursor Position: 3 11
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read() 
TextWindow
                '. Identifier ( Expression )'
                Complete the '. Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier ( Expression )'. 
                
Time taken: 0.7737057209014893 seconds
Received response with candidate: .Write("Hello " + name + "!") 

.WriteLine("Your name is " + name) 

.Pause()

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read() 
TextWindow
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: .WriteLine("Hello " + name) 

.WriteLine("Nice to meet you, " + name) 

.WriteLine("Welcome, " + name)
Actual result:  . WriteLine ( "Hello " + name )

Parse State: 30	Cursor Position: 3 12
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, ID, T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read() 
TextWindow.
                'Identifier ( Expression )'
                Complete the 'Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( Expression )'. 
                
Time taken: 0.9568238258361816 seconds
Received response with candidate: TextWindow.WriteLine("Hello " + name)
TextWindow.WriteLine("Your name is: " + name)
TextWindow.WriteLine("Welcome " + name)

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read() 
TextWindow.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: TextWindow.Write("Hello " + name)
TextWindow.WriteLine("Hello " + name)
TextWindow.Title = "Hello " + name
Actual result:  WriteLine ( "Hello " + name )

Parse State: 58	Cursor Position: 3 21
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read() 
TextWindow.WriteLine
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 1.206580400466919 seconds
Received response with candidate: 1. ("Hello " + name + "! Welcome.")
2. ("Nice to meet you, " + name + ".")
3. ("Greetings, " + name + "!")

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read() 
TextWindow.WriteLine
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. ("Hello " + name + "! Welcome!") 
2. (name + ", it's nice to meet you!")
3. ("Nice to see you, " + name + ".")
Actual result:  ( "Hello " + name )

Parse State: 83	Cursor Position: 3 22
Candidate List: ['1 : ', '[T, ID] : 40231', '2 : ', '[T, NUM] : 32276', '3 : ', '[T, STR] : 31274', '4 : ', '[T, ID, NT, Idxs] : 11367', '5 : ', '[T, -, NT, Primary] : 1956', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 685', '7 : ', '[T, (, NT, Expr, T, )] : 324', '8 : ', '[T, ID, T, ., T, ID] : 242']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read() 
TextWindow.WriteLine(
                'String'
                Complete the 'String' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'String'. 
                
Time taken: 0.9889233112335205 seconds
Received response with candidate: TextWindow.WriteLine("Hello " + name + "!") 
TextWindow.WriteLine("Nice to meet you, " + name + "!") 
TextWindow.WriteLine("Welcome, " + name + "!")

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read() 
TextWindow.WriteLine(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. "Hello " + name + ", nice to meet you!"
2. "Welcome, " + name + "!"
3. "Thanks for entering your name, " + name + "."
Actual result:  "Hello "

Parse State: 18	Cursor Position: 3 31
Candidate List: ['1 : ', '[T, +, NT, MultiplicativeExpr] : 95446', '2 : ', '[T, -, NT, MultiplicativeExpr] : 41871']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read() 
TextWindow.WriteLine("Hello "
                '+ MultiplicativeExpr'
                Complete the '+ MultiplicativeExpr' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '+ MultiplicativeExpr'. 
                
Time taken: 1.1110577583312988 seconds
Received response with candidate: 1. TextWindow.WriteLine("Hello " + name + ", how are you?")
2. TextWindow.WriteLine("Hello " + name + ", welcome to our program!")
3. TextWindow.WriteLine("Hello " + name + ", it's nice to meet you!")

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read() 
TextWindow.WriteLine("Hello "
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: TextWindow.WriteLine("Hello " + name)
'next token or line'
TextWindow.WriteLine("Hello, " + name)
'next token or line'
TextWindow.WriteLine("Hello there, " + name)
'next token or line'
Actual result:  + name

Parse State: 48	Cursor Position: 3 33
Candidate List: ['1 : ', '[T, ID] : 38463', '2 : ', '[T, NUM] : 30206', '3 : ', '[T, STR] : 15165', '4 : ', '[T, ID, NT, Idxs] : 7164', '5 : ', '[T, (, NT, Expr, T, )] : 3656', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 2629', '7 : ', '[T, ID, T, ., T, ID] : 322', '8 : ', '[T, -, NT, Primary] : 9']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read() 
TextWindow.WriteLine("Hello " +
                'Identifier'
                Complete the 'Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier'. 
                
Time taken: 1.0046210289001465 seconds
Received response with candidate: 1. name
2. name.ToUpper()
3. name.Length

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read() 
TextWindow.WriteLine("Hello " +
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. name
2. name + "!"
3. name + ", nice to meet you!"
Actual result:  name

Parse State: 92	Cursor Position: 3 37
Candidate List: ['1 : ', '[T, )] : 131828']

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read() 
TextWindow.WriteLine("Hello " + name
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.8996763229370117 seconds
Received response with candidate: 1) + "!")
2) + ", nice to meet you!")
3) + ", how are you today?")

                This is the incomplete Small Basic programming language code:
                TextWindow.Write("Enter your Name: ") 
name = TextWindow.Read() 
TextWindow.WriteLine("Hello " + name
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. + "! Nice to meet you."  
2. & ", how are you today?"  
3. + ". Welcome to the program." 
Actual result:  )

