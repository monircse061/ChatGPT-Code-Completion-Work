Parse State: 0	Cursor Position: 1 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 422', '2 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 399', '3 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 246', '4 : ', '[T, ID, T, (, T, )] : 123', '5 : ', '[T, ID, T, :] : 59', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 26', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 21', '8 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 11', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 7', '10 : ', '[T, Goto, T, ID] : 3', '11 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 1']

                This is the incomplete Small Basic programming language code:
                
                'Identifier = Expression'
                Complete the 'Identifier = Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier = Expression'. 
                
Time taken: 1.0691871643066406 seconds
Received response with candidate: 1. score = playerScore + bonusPoints
2. totalCost = pricePerItem * quantity
3. area = length * width

                This is the incomplete Small Basic programming language code:
                
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: next token or line
next token or line
next token or line
Actual result:  number = 100

Parse State: 6	Cursor Position: 1 8
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                number
                '= Expression'
                Complete the '= Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '= Expression'. 
                
Time taken: 1.0842409133911133 seconds
Received response with candidate: 1. '= 5 + 3'
2. '= Math.GetRandomNumber(1, 10)'
3. '= Text.GetLength("Hello, World!")'

                This is the incomplete Small Basic programming language code:
                number
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: GOTO number
END
NEXT
Actual result:  = 100

Parse State: 29	Cursor Position: 1 10
Candidate List: ['1 : ', '[T, ID] : 44694', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 42463', '3 : ', '[T, NUM] : 34261', '4 : ', '[T, STR] : 20111', '5 : ', '[T, ID, NT, Idxs] : 8883', '6 : ', '[T, ID, T, ., T, ID] : 6123', '7 : ', '[T, (, NT, Expr, T, )] : 3004', '8 : ', '[T, -, NT, Primary] : 2564']

                This is the incomplete Small Basic programming language code:
                number =
                'Number'
                Complete the 'Number' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Number'. 
                
Time taken: 0.8988277912139893 seconds
Received response with candidate: number = 10
number = 5
number = 20

                This is the incomplete Small Basic programming language code:
                number =
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. Text.GetSubTextToEnd(input, index)
2. Math.GetRandomNumber(min, max)
3. GraphicsWindow.DrawRectangle(x, y, width, height)
Actual result:  100

Parse State: 3	Cursor Position: 1 14
Candidate List: ['1 : ', '[T, CR, NT, MoreThanOneStmt] : 207345']

                This is the incomplete Small Basic programming language code:
                number = 100
                'CR MoreThanOneStmt'
                Complete the 'CR MoreThanOneStmt' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR MoreThanOneStmt'. 
                
Time taken: 1.0644643306732178 seconds
Received response with candidate: number = 100
'MoreThanOneStmt'
'MoreThanOneStmt'
'MoreThanOneStmt'

                This is the incomplete Small Basic programming language code:
                number = 100
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. number = number + 1
2. number = number - 1
3. number = number * 2
Actual result:  \n While ( number > 1 ) \n TextWindow . WriteLine ( number ) \n number = number / 2 \n EndWhile

Parse State: 11	Cursor Position: 2 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 34613', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 32747', '3 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 19496', '4 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 18421', '5 : ', '[T, ID, T, (, T, )] : 9474', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 9366', '7 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 5075', '8 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 2043', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 1706', '10 : ', '[T, ID, T, :] : 1074', '11 : ', '[T, Goto, T, ID] : 421']

                This is the incomplete Small Basic programming language code:
                number = 100
                'While Expression CRStmtCRs EndWhile'
                Complete the 'While Expression CRStmtCRs EndWhile' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'While Expression CRStmtCRs EndWhile'. 
                
Time taken: 1.1847147941589355 seconds
Received response with candidate: 1. While number > 0
      number = number - 10
    EndWhile
    
2. While number < 200
      number = number + 20
    EndWhile

3. While number <> 50
      number = number / 2
    EndWhile

                This is the incomplete Small Basic programming language code:
                number = 100
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. number = 100 + 50
2. number = number * 2
3. number = Math.Power(number, 2)
Actual result:  While ( number > 1 ) \n TextWindow . WriteLine ( number ) \n number = number / 2 \n EndWhile

Parse State: 5	Cursor Position: 2 7
Candidate List: ['1 : ', '[T, ID] : 1444', '2 : ', '[T, (, NT, Expr, T, )] : 982', '3 : ', '[T, STR] : 697', '4 : ', '[T, NUM] : 227', '5 : ', '[T, ID, NT, Idxs] : 152', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 121', '7 : ', '[T, ID, T, ., T, ID] : 63']

                This is the incomplete Small Basic programming language code:
                number = 100 
While
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 0.987006425857544 seconds
Received response with candidate: 1. number > 0

2. number % 2 = 0

3. number < 200

                This is the incomplete Small Basic programming language code:
                number = 100 
While
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: next token or line: number > 0
next token or line: number <> 0
next token or line: number >= 0
Actual result:  ( number > 1 )

Parse State: 23	Cursor Position: 2 8
Candidate List: ['1 : ', '[T, ID] : 26997', '2 : ', '[T, ID, NT, Idxs] : 3522', '3 : ', '[T, NUM] : 2336', '4 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 2174', '5 : ', '[T, ID, T, ., T, ID] : 2092', '6 : ', '[T, (, NT, Expr, T, )] : 1620', '7 : ', '[T, STR] : 365', '8 : ', '[T, -, NT, Primary] : 93']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (
                'Identifier'
                Complete the 'Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier'. 
                
Time taken: 0.7430233955383301 seconds
Received response with candidate: While (number > 0)
While (number < 200)
While (number != 50)

                This is the incomplete Small Basic programming language code:
                number = 100 
While (
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. number > 0
2. number <> 0
3. number <= 200
Actual result:  number

Parse State: 17	Cursor Position: 2 15
Candidate List: ['1 : ', '[T, <, NT, AdditiveExpr] : 12444', '2 : ', '[T, >, NT, AdditiveExpr] : 9592', '3 : ', '[T, <=, NT, AdditiveExpr] : 4252', '4 : ', '[T, >=, NT, AdditiveExpr] : 3498']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number
                '> AdditiveExpr'
                Complete the '> AdditiveExpr' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '> AdditiveExpr'. 
                
Time taken: 1.0440285205841064 seconds
Received response with candidate: 1. > AdditiveExpr = + 10
2. > AdditiveExpr = - 5
3. > AdditiveExpr = * 2

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
number > 0
number <> 50
number <= 200
Actual result:  > 1

Parse State: 46	Cursor Position: 2 17
Candidate List: ['1 : ', '[T, NUM] : 6206', '2 : ', '[T, ID] : 2367', '3 : ', '[T, ID, NT, Idxs] : 461', '4 : ', '[T, ID, T, ., T, ID] : 194', '5 : ', '[T, (, NT, Expr, T, )] : 163', '6 : ', '[T, -, NT, Primary] : 125', '7 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 75', '8 : ', '[T, STR] : 1']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number >
                'Number'
                Complete the 'Number' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Number'. 
                
Time taken: 0.9803445339202881 seconds
Received response with candidate: number = 100
While (number > 90)

number = 100
While (number > 50)

number = 100
While (number > 0)

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number >
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. number = number - 10
2. number = number - 1
3. number = number / 2
Actual result:  1

Parse State: 54	Cursor Position: 2 18
Candidate List: ['1 : ', '[T, )] : 39199']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.9341254234313965 seconds
Received response with candidate: 

1) )
2) )
3) )

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. 
number = number / 2

2. 
number = number - 1

3. 
number = Math.Sqrt(number)
Actual result:  )

Parse State: 12	Cursor Position: 2 22
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 3686']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 0.9382290840148926 seconds
Received response with candidate: 1. TextWindow.WriteLine("The number is still greater than 1")
2. TextWindow.WriteLine("Keep going, the number is still not 1 yet")
3. TextWindow.WriteLine(number)

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. 
number = number / 2

2.
number = number - 1

3.
number = number * 0.5
Actual result:  \n TextWindow . WriteLine ( number ) \n number = number / 2 \n

Parse State: 39	Cursor Position: 3 2
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 39900', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 20767', '3 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 8661', '4 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 7431', '5 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 5625', '6 : ', '[T, ID, T, (, T, )] : 5524', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 3143', '8 : ', '[T, Goto, T, ID] : 1557', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 240', '10 : ', '[T, ID, T, :] : 78']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)
                'Identifier . Identifier ( Expression )'
                Complete the 'Identifier . Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier ( Expression )'. 
                
Time taken: 0.9781789779663086 seconds
Received response with candidate: 1. TextWindow.WriteLine("The number is: " + number)
2. GraphicsWindow.DrawBoundText(10, 10, "Number: " + number)
3. Math.Sqrt(number)

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
    number = number / 2
    TextWindow.WriteLine(number)
EndWhile

    number = number - 10
    TextWindow.WriteLine(number)
EndWhile

    number = number * 2
    TextWindow.WriteLine(number)
EndWhile
Actual result:  TextWindow . WriteLine ( number )

Parse State: 6	Cursor Position: 3 12
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow
                '. Identifier ( Expression )'
                Complete the '. Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier ( Expression )'. 
                
Time taken: 0.7370493412017822 seconds
Received response with candidate: 1. .Write(number)
2. .DrawBoundText(number, number, "Hello")
3. .Hide()

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. .Write("Current number: " + number)
2. .WriteLine("Current number: " + number)
3. .Read()
Actual result:  . WriteLine ( number )

Parse State: 30	Cursor Position: 3 13
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, ID, T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.
                'Identifier ( Expression )'
                Complete the 'Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( Expression )'. 
                
Time taken: 1.3189365863800049 seconds
Received response with candidate: While (number > 1)
    TextWindow.WriteLine(number)
    number = number / 2

While (number > 1)
    TextWindow.WriteLine("The value is: " + number)
    number = number - 10

While (number > 1)
    TextWindow.WriteLine("Current number: " + number)
    number

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: number = number / 2

number = number - 1

TextWindow.WriteLine(number)
Actual result:  WriteLine ( number )

Parse State: 58	Cursor Position: 3 22
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 1.1477458477020264 seconds
Received response with candidate: 1. "The number is: " + number
2. "Countdown: " + number
3. "Remaining: " + number

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: TextWindow.WriteLine(number)
number = number / 2

TextWindow.WriteLine(number)
number = number - 10

TextWindow.WriteLine(number)
number = number * 3
Actual result:  ( number )

Parse State: 83	Cursor Position: 3 23
Candidate List: ['1 : ', '[T, ID] : 40231', '2 : ', '[T, NUM] : 32276', '3 : ', '[T, STR] : 31274', '4 : ', '[T, ID, NT, Idxs] : 11367', '5 : ', '[T, -, NT, Primary] : 1956', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 685', '7 : ', '[T, (, NT, Expr, T, )] : 324', '8 : ', '[T, ID, T, ., T, ID] : 242']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(
                'Identifier'
                Complete the 'Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier'. 
                
Time taken: 0.8266870975494385 seconds
Received response with candidate: 1. "The value of number is: " + number 
2. "Loop iteration: " + number 
3. "Current number: " + number

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. 'The number is ' + number
2. 'Countdown: ' + number
3. 'Number remaining: ' + number
Actual result:  number

Parse State: 92	Cursor Position: 3 29
Candidate List: ['1 : ', '[T, )] : 131828']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.6871662139892578 seconds
Received response with candidate: 1) ')' + 1
2) ')' + number
3) ')' * number

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. number = number / 2
2. number = number - 1
3. number = Math.Remainder(number, 3)
Actual result:  )

Parse State: 65	Cursor Position: 3 31
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 478907']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number)
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 0.8143644332885742 seconds
Received response with candidate: 
'CR = number / 2'

'CR = number - 10'

'CR = Math.Sqrt(number)'

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: Next
number = number / 2

Next

number = number - 10

Next
Actual result:  \n number = number / 2 \n

Parse State: 88	Cursor Position: 4 4
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 87168', '2 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 80534', '3 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 78068', '4 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 27675', '5 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 20356', '6 : ', '[T, ID, T, (, T, )] : 16821', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 8811', '8 : ', '[T, Goto, T, ID] : 2331', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 1733', '10 : ', '[T, ID, T, :] : 1027']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number)
                'Identifier = Expression'
                Complete the 'Identifier = Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier = Expression'. 
                
Time taken: 0.9889628887176514 seconds
Received response with candidate: 
1. number = number / 2
2. number = number - 10
3. number = number * 3

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
next token or line: 
number = number / 2

next token or line:
number = number - 10

next token or line:
number = Math.SquareRoot(number)
Actual result:  number = number / 2

Parse State: 6	Cursor Position: 4 11
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number) 
  	number
                '= Expression'
                Complete the '= Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '= Expression'. 
                
Time taken: 0.9144914150238037 seconds
Received response with candidate: number = number - 1

number = number / 2

number = number - 10

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number) 
  	number
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
   = number - 1

number = number - 1

number = number - 2
Actual result:  = number / 2

Parse State: 29	Cursor Position: 4 13
Candidate List: ['1 : ', '[T, ID] : 44694', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 42463', '3 : ', '[T, NUM] : 34261', '4 : ', '[T, STR] : 20111', '5 : ', '[T, ID, NT, Idxs] : 8883', '6 : ', '[T, ID, T, ., T, ID] : 6123', '7 : ', '[T, (, NT, Expr, T, )] : 3004', '8 : ', '[T, -, NT, Primary] : 2564']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number) 
  	number =
                'Identifier'
                Complete the 'Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier'. 
                
Time taken: 0.7794938087463379 seconds
Received response with candidate: 1. number = number / 2
2. number = number - 10
3. number = number * 3

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number) 
  	number =
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: number = number / 2

number = number - 1

number = Math.Floor(number / 2)
Actual result:  number

Parse State: 19	Cursor Position: 4 20
Candidate List: ['1 : ', '[T, *, NT, UnaryExpr] : 34944', '2 : ', '[T, /, NT, UnaryExpr] : 13709']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number) 
  	number = number
                '/ UnaryExpr'
                Complete the '/ UnaryExpr' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '/ UnaryExpr'. 
                
Time taken: 0.6799201965332031 seconds
Received response with candidate: number = -number
number = number - 1
number = number + 2

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number) 
  	number = number
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. number = number - 1
2. number = number / 2
3. number = number + 10
Actual result:  / 2

Parse State: 51	Cursor Position: 4 22
Candidate List: ['1 : ', '[T, NUM] : 14671', '2 : ', '[T, ID] : 2802', '3 : ', '[T, (, NT, Expr, T, )] : 669', '4 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 258', '5 : ', '[T, ID, NT, Idxs] : 149', '6 : ', '[T, ID, T, ., T, ID] : 137', '7 : ', '[T, -, NT, Primary] : 1']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number) 
  	number = number /
                'Number'
                Complete the 'Number' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Number'. 
                
Time taken: 0.729820966720581 seconds
Received response with candidate: number = 2
number = 10
number = 5

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number) 
  	number = number /
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. number = number - 1
2. number = number / 2
3. number = number - 10
Actual result:  2

Parse State: 65	Cursor Position: 4 24
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 478907']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number) 
  	number = number / 2
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 0.9655447006225586 seconds
Received response with candidate: 1. TextWindow.WriteLine("The number is now " + number)
2. TextWindow.WriteLine("Dividing the number by 2 resulted in " + number)
3. TextWindow.WriteLine("Updating number to " + number)

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number) 
  	number = number / 2
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. 'EndWhile'
2. 'EndWhile (number <= 1)'
3. 'EndWhile number > 1'
Actual result:  \n

Parse State: 38	Cursor Position: 5 1
Candidate List: ['1 : ', '[T, EndWhile] : 3686']

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number) 
  	number = number / 2
                'EndWhile'
                Complete the 'EndWhile' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'EndWhile'. 
                
Time taken: 0.7578449249267578 seconds
Received response with candidate: 1. EndWhile

2. EndWhile number > 1

3. EndWhile number >= 1

                This is the incomplete Small Basic programming language code:
                number = 100 
While (number > 1)   
	TextWindow.WriteLine(number) 
  	number = number / 2
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: next token or line
EndWhile

next token or line
	number = Math.Floor(number / 2)
	
next token or line
EndWhile
Actual result:  EndWhile

