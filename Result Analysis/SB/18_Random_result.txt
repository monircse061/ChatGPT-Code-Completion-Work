Parse State: 0	Cursor Position: 1 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 422', '2 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 399', '3 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 246', '4 : ', '[T, ID, T, (, T, )] : 123', '5 : ', '[T, ID, T, :] : 59', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 26', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 21', '8 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 11', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 7', '10 : ', '[T, Goto, T, ID] : 3', '11 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 1']

                This is the incomplete Small Basic programming language code:
                
                'Identifier . Identifier = Expression'
                Complete the 'Identifier . Identifier = Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier = Expression'. 
                
Time taken: 0.7898991107940674 seconds
Received response with candidate: 1. myObject.property = "Hello, World!"
2. car.speed = 100
3. player.score = player.score + 10

                This is the incomplete Small Basic programming language code:
                
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 'next token or line'
'jump to the next instruction'
'get the next input'
Actual result:  GraphicsWindow . BackgroundColor = "Black"

Parse State: 6	Cursor Position: 1 15
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow
                '. Identifier = Expression'
                Complete the '. Identifier = Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier = Expression'. 
                
Time taken: 0.7556836605072021 seconds
Received response with candidate: 1. BrushColor = "Red"
2. FontSize = 20
3. PenWidth = 2

                This is the incomplete Small Basic programming language code:
                GraphicsWindow
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: Title = "Incomplete Code"
                GraphicsWindow.DrawRectangle(100, 100, 50, 50)
                GraphicsWindow.BrushColor = GraphicsWindow.GetColorFromRGB(255, 0, 0)
                'next token or line'
                 
                Title = "Incomplete Code"
                GraphicsWindow.DrawEllipse(200, 200
Actual result:  . BackgroundColor = "Black"

Parse State: 30	Cursor Position: 1 16
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, ID, T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.
                'Identifier = Expression'
                Complete the 'Identifier = Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier = Expression'. 
                
Time taken: 1.1045441627502441 seconds
Received response with candidate: GraphicsWindow.BackgroundColor = "LightBlue"
GraphicsWindow.BrushColor = GraphicsWindow.GetColorFromRGB(255, 0, 0)
GraphicsWindow.PenColor = GraphicsWindow.GetColorFromARGB(255, 0, 255, 0)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: DrawLine(100, 100, 200, 200)
                'next token or line'

                GraphicsWindow.BrushColor = GraphicsWindow.GetColorFromRGB(255, 0, 0)
                'next token or line'

                For i = 1 To 5
                'next token or line'
Actual result:  BackgroundColor = "Black"

Parse State: 58	Cursor Position: 1 32
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor
                '= Expression'
                Complete the '= Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '= Expression'. 
                
Time taken: 1.1710984706878662 seconds
Received response with candidate: 1. = " = GraphicsWindow.GetColorFromRGB(255, 0, 0)"
2. = " = GraphicsWindow.GetColorFromRGB(0, 255, 0)"
3. = " = GraphicsWindow.GetColorFromRGB(0, 0, 255)"

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. = GraphicsWindow.GetColorFromRGB(255, 255, 255)
2. = "White"
3. = Colors.White
Actual result:  = "Black"

Parse State: 82	Cursor Position: 1 34
Candidate List: ['1 : ', '[T, STR] : 20761', '2 : ', '[T, NUM] : 12240', '3 : ', '[T, ID] : 8633', '4 : ', '[T, ID, NT, Idxs] : 1816', '5 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 1159', '6 : ', '[T, ID, T, ., T, ID] : 632', '7 : ', '[T, (, NT, Expr, T, )] : 508', '8 : ', '[T, -, NT, Primary] : 127']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor =
                'String'
                Complete the 'String' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'String'. 
                
Time taken: 0.686403751373291 seconds
Received response with candidate: "LightBlue"
"White"
"LightGray"

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor =
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. "GraphicsWindow.BackgroundColor = Brushes.Yellow"
2. "GraphicsWindow.BackgroundColor = Colors.Blue"
3. "GraphicsWindow.BackgroundColor = Brushes.Green"
Actual result:  "Black"

Parse State: 3	Cursor Position: 1 42
Candidate List: ['1 : ', '[T, CR, NT, MoreThanOneStmt] : 207345']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black"
                'CR MoreThanOneStmt'
                Complete the 'CR MoreThanOneStmt' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR MoreThanOneStmt'. 
                
Time taken: 1.483694076538086 seconds
Received response with candidate: 'CR GraphicsWindow.BrushColor = "Yellow"
                GraphicsWindow.FillEllipse(100, 100, 200, 150)'
'CR TextWindow.WriteLine("Hello, world!")'
'CR For i = 1 To 10
                GraphicsWindow.DrawRectangle(i * 20, i * 20, 50, 50

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black"
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. GraphicsWindow.BrushColor = "White"
2. GraphicsWindow.Clear()
3. GraphicsWindow.DrawText(10, 10, "Hello World")
Actual result:  \n For i = 1 To 1000 \n GraphicsWindow . BrushColor = GraphicsWindow . GetRandomColor ( ) \n x = Math . GetRandomNumber ( 640 ) \n y = Math . GetRandomNumber ( 480 ) \n GraphicsWindow . FillEllipse ( x , y , 10 , 10 ) \n EndFor

Parse State: 11	Cursor Position: 2 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 34613', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 32747', '3 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 19496', '4 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 18421', '5 : ', '[T, ID, T, (, T, )] : 9474', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 9366', '7 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 5075', '8 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 2043', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 1706', '10 : ', '[T, ID, T, :] : 1074', '11 : ', '[T, Goto, T, ID] : 421']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black"
                'For Identifier = Expression To Expression OptStep CRStmtCRs EndFor'
                Complete the 'For Identifier = Expression To Expression OptStep CRStmtCRs EndFor' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'For Identifier = Expression To Expression OptStep CRStmtCRs EndFor'. 
                
Time taken: 1.4647865295410156 seconds
Received response with candidate: For i = 1 To 10
    'Code to execute for each iteration'
EndFor

For count = 5 To 1 Step -1
    'Code to execute for each iteration'
EndFor

For x = 0 To 100 Step 10
    'Code to execute for each iteration'
EndFor

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black"
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. GraphicsWindow.BrushColor = "Red"  
2. GraphicsWindow.DrawRectangle(50, 50, 100, 100)
3. TextWindow.WriteLine("Hello World!")
Actual result:  For i = 1 To 1000 \n GraphicsWindow . BrushColor = GraphicsWindow . GetRandomColor ( ) \n x = Math . GetRandomNumber ( 640 ) \n y = Math . GetRandomNumber ( 480 ) \n GraphicsWindow . FillEllipse ( x , y , 10 , 10 ) \n EndFor

Parse State: 8	Cursor Position: 2 5
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 14018']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For
                'Identifier = Expression To Expression OptStep CRStmtCRs EndFor'
                Complete the 'Identifier = Expression To Expression OptStep CRStmtCRs EndFor' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier = Expression To Expression OptStep CRStmtCRs EndFor'. 
                
Time taken: 0.9276916980743408 seconds
Received response with candidate: 1. i = 1 To 10
2. count = 0 To 100 Step 10
3. x = -5 To 5

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. GraphicsWindow.BrushColor = "White" 
2. TextWindow.WriteLine("Hello World!") 
3. For i = 1 To 10
Actual result:  i = 1 To 1000 \n GraphicsWindow . BrushColor = GraphicsWindow . GetRandomColor ( ) \n x = Math . GetRandomNumber ( 640 ) \n y = Math . GetRandomNumber ( 480 ) \n GraphicsWindow . FillEllipse ( x , y , 10 , 10 ) \n EndFor

Parse State: 34	Cursor Position: 2 7
Candidate List: ['1 : ', '[T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 14018']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i
                '= Expression To Expression OptStep CRStmtCRs EndFor'
                Complete the '= Expression To Expression OptStep CRStmtCRs EndFor' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '= Expression To Expression OptStep CRStmtCRs EndFor'. 
                
Time taken: 1.1487574577331543 seconds
Received response with candidate: 
1. For i = 1 To 10
2. For i = 20 To 1 Step -1
3. For i = 5 To 50 Step 5

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. For i = 1 To 10
2. For i = 0 To 100 Step 10
3. For i = 5 To 50 Step 5
Actual result:  = 1 To 1000 \n GraphicsWindow . BrushColor = GraphicsWindow . GetRandomColor ( ) \n x = Math . GetRandomNumber ( 640 ) \n y = Math . GetRandomNumber ( 480 ) \n GraphicsWindow . FillEllipse ( x , y , 10 , 10 ) \n EndFor

Parse State: 61	Cursor Position: 2 9
Candidate List: ['1 : ', '[T, NUM] : 12330', '2 : ', '[T, ID] : 1235', '3 : ', '[T, -, NT, Primary] : 227', '4 : ', '[T, ID, NT, Idxs] : 75', '5 : ', '[T, (, NT, Expr, T, )] : 70', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 68', '7 : ', '[T, ID, T, ., T, ID] : 13']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i =
                'Number'
                Complete the 'Number' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Number'. 
                
Time taken: 0.814568281173706 seconds
Received response with candidate: 1. For i = 1
2. For i = 5
3. For i = 10

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i =
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: next token or line = 1 to 10
next token or line = 0 to 100 step 20
next token or line = 5 to 50 step 5
Actual result:  1

Parse State: 85	Cursor Position: 2 11
Candidate List: ['1 : ', '[T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 14018']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1
                'To Expression OptStep CRStmtCRs EndFor'
                Complete the 'To Expression OptStep CRStmtCRs EndFor' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'To Expression OptStep CRStmtCRs EndFor'. 
                
Time taken: 1.2517995834350586 seconds
Received response with candidate: 1. To 10
   OptStep 1
   i = i + 1
   EndFor

2. To 100
   OptStep 10
   i = i * 2
   EndFor

3. To 5
   OptStep 2
   i = i * i
   EndFor

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: next token or line
For i = 1 To 10
next token or line
For i = 1 To 100
next token or line
For i = 1 To 5
Actual result:  To 1000 \n GraphicsWindow . BrushColor = GraphicsWindow . GetRandomColor ( ) \n x = Math . GetRandomNumber ( 640 ) \n y = Math . GetRandomNumber ( 480 ) \n GraphicsWindow . FillEllipse ( x , y , 10 , 10 ) \n EndFor

Parse State: 95	Cursor Position: 2 14
Candidate List: ['1 : ', '[T, NUM] : 6690', '2 : ', '[T, ID] : 5653', '3 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 1257', '4 : ', '[T, ID, NT, Idxs] : 261', '5 : ', '[T, (, NT, Expr, T, )] : 123', '6 : ', '[T, -, NT, Primary] : 18', '7 : ', '[T, ID, T, ., T, ID] : 16']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To
                'Number'
                Complete the 'Number' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Number'. 
                
Time taken: 1.3812482357025146 seconds
Received response with candidate: 1. 10
GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 10

2. 20
GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 20

3. 5
GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 5

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate:  '50'
 '100'
 '500'
Actual result:  1000

Parse State: 110	Cursor Position: 2 21
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 14018']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 1.4579901695251465 seconds
Received response with candidate: 1. GraphicsWindow.DrawBoundText(i, i, "Hello", "White")
2. GraphicsWindow.DrawText(i*2, i*2, "World", "Red")
3. GraphicsWindow.DrawEllipse(i, i, i*2, i, "Yellow")

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: Next
EndFor

EndFor i

EndFor i = 1 to 1000
Actual result:  \n GraphicsWindow . BrushColor = GraphicsWindow . GetRandomColor ( ) \n x = Math . GetRandomNumber ( 640 ) \n y = Math . GetRandomNumber ( 480 ) \n GraphicsWindow . FillEllipse ( x , y , 10 , 10 ) \n

Parse State: 39	Cursor Position: 3 2
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 39900', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 20767', '3 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 8661', '4 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 7431', '5 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 5625', '6 : ', '[T, ID, T, (, T, )] : 5524', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 3143', '8 : ', '[T, Goto, T, ID] : 1557', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 240', '10 : ', '[T, ID, T, :] : 78']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000
                'Identifier . Identifier = Expression'
                Complete the 'Identifier . Identifier = Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier = Expression'. 
                
Time taken: 1.2389392852783203 seconds
Received response with candidate: 1. GraphicsWindow.BrushColor = GraphicsWindow.GetColorFromRGB(Math.GetRandomNumber(0, 255), Math.GetRandomNumber(0, 255), Math.GetRandomNumber(0, 255))

2. GraphicsWindow.PenColor = "White"

3. GraphicsWindow.FontSize = 20

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. GraphicsWindow.DrawBoundText(10, 10, i, "White")
2. GraphicsWindow.DrawRectangle(i, i, 50, 50)
3. Shapes.AddEllipse(i, i, 30, 30)
Actual result:  GraphicsWindow . BrushColor = GraphicsWindow . GetRandomColor ( )

Parse State: 6	Cursor Position: 3 16
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow
                '. Identifier = Expression'
                Complete the '. Identifier = Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier = Expression'. 
                
Time taken: 1.4241943359375 seconds
Received response with candidate:  1. DrawLine(i, i, 500, 500)  
 2. DrawRectangle(i, i, 50, 50)  
 3. DrawEllipse(i, i, 100, 50)  

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: .DrawLine(i, i, i + 50, i + 50)

.Shapes.AddRectangle(i, i, 50, 50)

.DrawString("Hello", "Arial", 12, i, i)
Actual result:  . BrushColor = GraphicsWindow . GetRandomColor ( )

Parse State: 30	Cursor Position: 3 17
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, ID, T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.
                'Identifier = Expression'
                Complete the 'Identifier = Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier = Expression'. 
                
Time taken: 0.9493587017059326 seconds
Received response with candidate: DrawEllipse(i, i, i, i) 
DrawLine(i, i, i, i) 
DrawRectangle(i, i, i, i)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: DrawBoundText("Hello", i*10, i*10)
DrawRectangle(i*5, i*5, i*10, i*10)
DrawEllipse(i*5, i*5, i*10, i*10)
Actual result:  BrushColor = GraphicsWindow . GetRandomColor ( )

Parse State: 58	Cursor Position: 3 28
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor
                '= Expression'
                Complete the '= Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '= Expression'. 
                
Time taken: 0.766643762588501 seconds
Received response with candidate: = "Red"
= "Green"
= "Blue"

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: NextGraphicsWindow.DrawBoundText(10, 10, i)
NextGraphicsWindow.DrawLine(i, i, i + 10, i + 10)
NextGraphicsWindow.FillEllipse(i, i, 20, 20)
Actual result:  = GraphicsWindow . GetRandomColor ( )

Parse State: 82	Cursor Position: 3 30
Candidate List: ['1 : ', '[T, STR] : 20761', '2 : ', '[T, NUM] : 12240', '3 : ', '[T, ID] : 8633', '4 : ', '[T, ID, NT, Idxs] : 1816', '5 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 1159', '6 : ', '[T, ID, T, ., T, ID] : 632', '7 : ', '[T, (, NT, Expr, T, )] : 508', '8 : ', '[T, -, NT, Primary] : 127']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor =
                'Identifier . Identifier ( Expression )'
                Complete the 'Identifier . Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier ( Expression )'. 
                
Time taken: 0.9040541648864746 seconds
Received response with candidate: 1. GraphicsWindow.BrushColor = "Red"
2. GraphicsWindow.BrushColor = "Blue"
3. GraphicsWindow.BrushColor = "Green"

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor =
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. "Red"
2. "Blue"
3. "Green"
Actual result:  GraphicsWindow . GetRandomColor ( )

Parse State: 22	Cursor Position: 3 44
Candidate List: ['1 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, [, NT, Expr, T, ]] : 59127', '3 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 21477', '4 : ', '[T, ., T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow
                '. Identifier ( Expression )'
                Complete the '. Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier ( Expression )'. 
                
Time taken: 1.0896649360656738 seconds
Received response with candidate: .ColorFromRGB(155, 0, 0)
.ColorFromRGB(0, 155, 0)
.ColorFromArgb(255, 255, 0)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. .BrushColor = GraphicsWindow.GetColorFromRGB(GraphicsWindow.Rnd()*255, GraphicsWindow.Rnd()*255, GraphicsWindow.Rnd()*255)
2. .FillEllipse(GraphicsWindow.Width*GraphicsWindow.Rnd(), GraphicsWindow.Height*GraphicsWindow.Rnd(), 30, 30)
3. .DrawRectangle(GraphicsWindow.Width
Actual result:  . GetRandomColor ( )

Parse State: 53	Cursor Position: 3 45
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.
                'Identifier ( Expression )'
                Complete the 'Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( Expression )'. 
                
Time taken: 1.0291483402252197 seconds
Received response with candidate: 1. GraphicsWindow.GetColorFromRGB(255, 0, 0) 
2. GraphicsWindow.GetColorFromRGB(0, 255, 0) 
3. GraphicsWindow.GetColorFromRGB(0, 0, 255)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. BrushColor = "White"
2. PenColor = "Red"
3. FontSize = 12
Actual result:  GetRandomColor ( )

Parse State: 79	Cursor Position: 3 59
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 74070']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 1.5548160076141357 seconds
Received response with candidate: 1) GraphicsWindow.DrawEllipse(Math.GetRandomNumber(0, GraphicsWindow.Width), Math.GetRandomNumber(0, GraphicsWindow.Height), 50, 50)

2) GraphicsWindow.DrawRectangle(Math.GetRandomNumber(0, GraphicsWindow.Width), Math.GetRandomNumber(0, GraphicsWindow.Height), 50, 50)

3)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. GraphicsWindow.FillRectangle(GraphicsWindow.GetRandomNumber(0, GraphicsWindow.Width), GraphicsWindow.GetRandomNumber(0, GraphicsWindow.Height), 50, 50)
2. GraphicsWindow.DrawBoundText("Hello", GraphicsWindow.GetRandomNumber(0, GraphicsWindow.Width), GraphicsWindow.GetRandomNumber(0, GraphicsWindow.Height))

Actual result:  ( )

Parse State: 102	Cursor Position: 3 60
Candidate List: ['1 : ', '[T, )] : 74070']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor(
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.7506520748138428 seconds
Received response with candidate: 1) 
"Red"

2) 
"Blue"

3) 
"Green"

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. ) )
2. )
3.   EndFor
Actual result:  )

Parse State: 65	Cursor Position: 3 64
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 478907']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 1.2107415199279785 seconds
Received response with candidate: CR GraphicsWindow.DrawEllipse(Math.GetRandomNumber(0, GraphicsWindow.Width), Math.GetRandomNumber(0, GraphicsWindow.Height), Math.GetRandomNumber(10, 100), Math.GetRandomNumber(10, 100))

CR GraphicsWindow.DrawRectangle(Math.GetRandomNumber(0, GraphicsWindow.Width), Math.GetRandomNumber(0,

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: next
EndFor

EndFor
Actual result:  \n x = Math . GetRandomNumber ( 640 ) \n y = Math . GetRandomNumber ( 480 ) \n GraphicsWindow . FillEllipse ( x , y , 10 , 10 ) \n

Parse State: 88	Cursor Position: 4 2
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 87168', '2 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 80534', '3 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 78068', '4 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 27675', '5 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 20356', '6 : ', '[T, ID, T, (, T, )] : 16821', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 8811', '8 : ', '[T, Goto, T, ID] : 2331', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 1733', '10 : ', '[T, ID, T, :] : 1027']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()
                'Identifier = Expression'
                Complete the 'Identifier = Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier = Expression'. 
                
Time taken: 1.0763089656829834 seconds
Received response with candidate: 1. centerX = Math.GetRandomNumber(GraphicsWindow.Width)
2. radius = Math.GetRandomNumber(50)
3. yPosition = Math.GetRandomNumber(GraphicsWindow.Height)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. GraphicsWindow.FillRectangle(GraphicsWindow.GetRandomNumber(0, GraphicsWindow.Width), GraphicsWindow.GetRandomNumber(0, GraphicsWindow.Height), 50, 50)
2. GraphicsWindow.FillEllipse(GraphicsWindow.GetRandomNumber(0, GraphicsWindow.Width), GraphicsWindow.GetRandomNumber(0, GraphicsWindow.Height), 50, 
Actual result:  x = Math . GetRandomNumber ( 640 )

Parse State: 6	Cursor Position: 4 4
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x
                '= Expression'
                Complete the '= Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '= Expression'. 
                
Time taken: 0.914372444152832 seconds
Received response with candidate: 1. x = GraphicsWindow.GetRandomNumber(GraphicsWindow.Width)
2. x = Math.GetRandomNumber(GraphicsWindow.Width)
3. x = Math.GetRandomNumber(100)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: next i 
next 
next x 
Actual result:  = Math . GetRandomNumber ( 640 )

Parse State: 29	Cursor Position: 4 6
Candidate List: ['1 : ', '[T, ID] : 44694', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 42463', '3 : ', '[T, NUM] : 34261', '4 : ', '[T, STR] : 20111', '5 : ', '[T, ID, NT, Idxs] : 8883', '6 : ', '[T, ID, T, ., T, ID] : 6123', '7 : ', '[T, (, NT, Expr, T, )] : 3004', '8 : ', '[T, -, NT, Primary] : 2564']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x =
                'Identifier . Identifier ( Expression )'
                Complete the 'Identifier . Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier ( Expression )'. 
                
Time taken: 1.0188491344451904 seconds
Received response with candidate: 1. GraphicsWindow.DrawLine(0, 0, 100, 100)
2. GraphicsWindow.DrawRectangle(50, 50, 100, 100)
3. GraphicsWindow.DrawEllipse(200, 200, 50, 100)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x =
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. GraphicsWindow.DrawEllipse(GraphicsWindow.GetRandomNumber(0,GraphicsWindow.Width), GraphicsWindow.GetRandomNumber(0,GraphicsWindow.Height), 50, 50)

2. GraphicsWindow.DrawRectangle(GraphicsWindow.GetRandomNumber(0,GraphicsWindow.Width), GraphicsWindow.GetRandomNumber(0,GraphicsWindow.Height), 50, 
Actual result:  Math . GetRandomNumber ( 640 )

Parse State: 22	Cursor Position: 4 10
Candidate List: ['1 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, [, NT, Expr, T, ]] : 59127', '3 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 21477', '4 : ', '[T, ., T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math
                '. Identifier ( Expression )'
                Complete the '. Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier ( Expression )'. 
                
Time taken: 0.9716808795928955 seconds
Received response with candidate: 

1. '.GetRandomNumber(0, GraphicsWindow.Width)'
2. '.GetRandomNumber(0, GraphicsWindow.Height)'
3. '.DegreesToRadians(GraphicsWindow.GetRandomNumber(0, 360))'

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. ".GetRandomNumber(600)"
2. ".GetRandomNumber(800)"
3. ".GetRandomNumber(1000)"
Actual result:  . GetRandomNumber ( 640 )

Parse State: 53	Cursor Position: 4 11
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.
                'Identifier ( Expression )'
                Complete the 'Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( Expression )'. 
                
Time taken: 0.7395706176757812 seconds
Received response with candidate: Min(10, i * 5)
Abs(-x)
Cos(i)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. x = Math.GetRandomNumber(100)
2. x = Math.GetRandomNumber(50)
3. x = Math.GetRandomNumber(200)
Actual result:  GetRandomNumber ( 640 )

Parse State: 79	Cursor Position: 4 26
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 74070']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 0.8748390674591064 seconds
Received response with candidate: 1. (x, GraphicsWindow.Height)
2. (x, 500)
3. (x, GraphicsWindow.Width)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. GraphicsWindow.DrawEllipse(x, y, 50, 50)
2. GraphicsWindow.DrawLine(x, y, x + 50, y + 50)
3. GraphicsWindow.FillRectangle(x, y, 100, 100)
Actual result:  ( 640 )

Parse State: 89	Cursor Position: 4 27
Candidate List: ['1 : ', '[T, ID] : 30308', '2 : ', '[T, NUM] : 13014', '3 : ', '[T, STR] : 8254', '4 : ', '[T, ID, NT, Idxs] : 7519', '5 : ', '[T, (, NT, Expr, T, )] : 5359', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 2919', '7 : ', '[T, ID, T, ., T, ID] : 1039', '8 : ', '[T, -, NT, Primary] : 360']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(
                'Number'
                Complete the 'Number' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Number'. 
                
Time taken: 1.3680481910705566 seconds
Received response with candidate: GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(100)

or 

GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: x = Math.GetRandomNumber(GraphicsWindow.Width)
x = Math.GetRandomNumber(GraphicsWindow.Width - 10)
x = Math.GetRandomNumber(1, GraphicsWindow.Width)
Actual result:  640

Parse State: 102	Cursor Position: 4 30
Candidate List: ['1 : ', '[T, )] : 74070']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.7564685344696045 seconds
Received response with candidate: 1) ')'
2) )
3) ))

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: Next
EndFor

EndWhile
Actual result:  )

Parse State: 65	Cursor Position: 4 34
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 478907']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 1.2471673488616943 seconds
Received response with candidate: 1. GraphicsWindow.DrawEllipse(x, Math.GetRandomNumber(480), 30, 30)
2. GraphicsWindow.DrawRectangle(x, Math.GetRandomNumber(480), 50, 50)
3. GraphicsWindow.DrawText(x, Math.GetRandomNumber(480), "Hello")

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. y = Math.GetRandomNumber(480)
2. GraphicsWindow.FillRectangle(x, y, 20, 20)
3. GraphicsWindow.DrawEllipse(x, y, 30, 30)
Actual result:  \n y = Math . GetRandomNumber ( 480 ) \n GraphicsWindow . FillEllipse ( x , y , 10 , 10 ) \n

Parse State: 88	Cursor Position: 5 2
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 87168', '2 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 80534', '3 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 78068', '4 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 27675', '5 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 20356', '6 : ', '[T, ID, T, (, T, )] : 16821', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 8811', '8 : ', '[T, Goto, T, ID] : 2331', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 1733', '10 : ', '[T, ID, T, :] : 1027']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)
                'Identifier = Expression'
                Complete the 'Identifier = Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier = Expression'. 
                
Time taken: 1.146103858947754 seconds
Received response with candidate: 1. y = Math.GetRandomNumber(480)
2. radius = Math.GetRandomNumber(50)
3. color = GraphicsWindow.GetRandomColor()

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. GraphicsWindow.DrawEllipse(x, i, 30, 30)
2. GraphicsWindow.FillRectangle(x, i, 50, 50)
3. GraphicsWindow.DrawText(x, i, "Hello")
Actual result:  y = Math . GetRandomNumber ( 480 )

Parse State: 6	Cursor Position: 5 4
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y
                '= Expression'
                Complete the '= Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '= Expression'. 
                
Time taken: 0.8957397937774658 seconds
Received response with candidate: 1. y = Math.GetRandomNumber(480)
2. y = Math.GetRandomNumber(360)
3. y = Math.GetRandomNumber(600)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: = Math.GetRandomNumber(480)
'GraphicsWindow.DrawEllipse(x, y, 30, 30)'
'GraphicsWindow.FillRectangle(x, y, 50, 50)'
Actual result:  = Math . GetRandomNumber ( 480 )

Parse State: 29	Cursor Position: 5 6
Candidate List: ['1 : ', '[T, ID] : 44694', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 42463', '3 : ', '[T, NUM] : 34261', '4 : ', '[T, STR] : 20111', '5 : ', '[T, ID, NT, Idxs] : 8883', '6 : ', '[T, ID, T, ., T, ID] : 6123', '7 : ', '[T, (, NT, Expr, T, )] : 3004', '8 : ', '[T, -, NT, Primary] : 2564']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y =
                'Identifier . Identifier ( Expression )'
                Complete the 'Identifier . Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier ( Expression )'. 
                
Time taken: 1.0722918510437012 seconds
Received response with candidate: 1. y = Math.GetRandomNumber(480)
2. y = GraphicsWindow.GetRandomNumber(480)
3. y = Text.GetCharacterWidth("Hello")

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y =
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: y = Math.GetRandomNumber(480)

y = Math.GetRandomNumber(480)

y = Math.GetRandomNumber(480)
Actual result:  Math . GetRandomNumber ( 480 )

Parse State: 22	Cursor Position: 5 10
Candidate List: ['1 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, [, NT, Expr, T, ]] : 59127', '3 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 21477', '4 : ', '[T, ., T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math
                '. Identifier ( Expression )'
                Complete the '. Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier ( Expression )'. 
                
Time taken: 0.7246272563934326 seconds
Received response with candidate: .GetRandomNumber(480)
.GetRandomNumber(480)
.GetRandomNumber(480)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 

.GetRandomNumber(480)   
GraphicsWindow.FillEllipse(x, y, 30, 30)   
EndFor 

.PenColor = GraphicsWindow.GetRandomColor()   
GraphicsWindow.DrawLine(x, y, x + 50, y + 50)   
EndFor 

.DrawBoundText("Hello", x, y)   
Graphics
Actual result:  . GetRandomNumber ( 480 )

Parse State: 53	Cursor Position: 5 11
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.
                'Identifier ( Expression )'
                Complete the 'Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( Expression )'. 
                
Time taken: 0.9417035579681396 seconds
Received response with candidate: 1. y = Math.GetRandomNumber(480)
2. y = Math.GetRandomNumber(480) + 100
3. y = Math.GetRandomNumber(480) - 50

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: y = Math.GetRandomNumber(480)   
              'DrawEllipse(x, y, 30, 30)'   
Next

y = Math.GetRandomNumber(480)   
              'GraphicsWindow.DrawRectangle(x, y, 50, 50)'   
Next

y = Math.GetRandomNumber(480)   
              'GraphicsWindow
Actual result:  GetRandomNumber ( 480 )

Parse State: 79	Cursor Position: 5 26
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 74070']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 0.7503273487091064 seconds
Received response with candidate: 1. (480)
2. (480, 480)
3. (480, 320)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. (640)
2. (480)
3. (400)
Actual result:  ( 480 )

Parse State: 89	Cursor Position: 5 27
Candidate List: ['1 : ', '[T, ID] : 30308', '2 : ', '[T, NUM] : 13014', '3 : ', '[T, STR] : 8254', '4 : ', '[T, ID, NT, Idxs] : 7519', '5 : ', '[T, (, NT, Expr, T, )] : 5359', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 2919', '7 : ', '[T, ID, T, ., T, ID] : 1039', '8 : ', '[T, -, NT, Primary] : 360']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(
                'Number'
                Complete the 'Number' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Number'. 
                
Time taken: 0.7913422584533691 seconds
Received response with candidate: 480

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. 480
2. 480
3. 480
Actual result:  480

Parse State: 102	Cursor Position: 5 30
Candidate List: ['1 : ', '[T, )] : 74070']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.6761734485626221 seconds
Received response with candidate: 1) )
2) )
3) )

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
'GraphicsWindow.FillEllipse(x, y, 20, 20)'

'GraphicsWindow.DrawRectangle(x, y, 50, 50)'

'GraphicsWindow.DrawLine(x, y, Math.GetRandomNumber(640), Math.GetRandomNumber(480))'
Actual result:  )

Parse State: 65	Cursor Position: 5 34
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 478907']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 1.49497389793396 seconds
Received response with candidate: 1. GraphicsWindow.DrawEllipse(x, y, 30, 30)
   GraphicsWindow.DrawText(x, y, "Hello")

2. GraphicsWindow.DrawLine(x, y, x + 50, y + 50)
   GraphicsWindow.DrawBoundText(x, y, "Small Basic")

3. GraphicsWindow.FillRectangle(x, y

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)
GraphicsWindow.FillEllipse(x, y, 30, 30)
Next

For i = 1 To 1000   
	G
Actual result:  \n GraphicsWindow . FillEllipse ( x , y , 10 , 10 ) \n

Parse State: 88	Cursor Position: 6 2
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 87168', '2 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 80534', '3 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 78068', '4 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 27675', '5 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 20356', '6 : ', '[T, ID, T, (, T, )] : 16821', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 8811', '8 : ', '[T, Goto, T, ID] : 2331', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 1733', '10 : ', '[T, ID, T, :] : 1027']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)
                'Identifier . Identifier ( Expression )'
                Complete the 'Identifier . Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier ( Expression )'. 
                
Time taken: 1.223069190979004 seconds
Received response with candidate: GraphicsWindow.DrawEllipse(x, y, 50, 30)
GraphicsWindow.DrawLine(x, y, x+100, y+100)
GraphicsWindow.DrawText(x, y, "Hello World")

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. GraphicsWindow.FillEllipse(x, y, 30, 30)
2. GraphicsWindow.DrawRectangle(x, y, 50, 50)
3. GraphicsWindow.FillTriangle(x, y, x+50, y, x+25, y+50)
Actual result:  GraphicsWindow . FillEllipse ( x , y , 10 , 10 )

Parse State: 6	Cursor Position: 6 16
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow
                '. Identifier ( Expression )'
                Complete the '. Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier ( Expression )'. 
                
Time taken: 0.9412686824798584 seconds
Received response with candidate: .DrawLine(x, y, x+50, y+50)
.DrawRectangle(x, y, 50, 50)
.DrawEllipse(x, y, 50, 50)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: .DrawLine(x, y, x+50, y+50)
 'DrawRectangle(x, y, 50, 50)
 'DrawEllipse(x, y, 50, 50)
Actual result:  . FillEllipse ( x , y , 10 , 10 )

Parse State: 30	Cursor Position: 6 17
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, ID, T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.
                'Identifier ( Expression )'
                Complete the 'Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( Expression )'. 
                
Time taken: 1.0261738300323486 seconds
Received response with candidate: 
1. FillEllipse(x, y, 50, 50)
2. DrawRectangle(x, y, 100, 100)
3. DrawLine(x, y, x + 50, y + 50)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. DrawEllipse(x, y, 30, 30)
2. DrawRectangle(x, y, 50, 50)
3. FillRectangle(x, y, 50, 50)
Actual result:  FillEllipse ( x , y , 10 , 10 )

Parse State: 58	Cursor Position: 6 28
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 2.0523521900177 seconds
Received response with candidate: (x, y, 20, 20) 
(x, y, Math.GetRandomNumber(50), Math.GetRandomNumber(50)) 
(x, y, Math.GetRandomNumber(30) + 10, Math.GetRandomNumber(30) + 10)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: next token or line'
Next
next token or line'
EndFor
next token or line'
EndSub
Actual result:  ( x , y , 10 , 10 )

Parse State: 83	Cursor Position: 6 29
Candidate List: ['1 : ', '[T, ID] : 40231', '2 : ', '[T, NUM] : 32276', '3 : ', '[T, STR] : 31274', '4 : ', '[T, ID, NT, Idxs] : 11367', '5 : ', '[T, -, NT, Primary] : 1956', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 685', '7 : ', '[T, (, NT, Expr, T, )] : 324', '8 : ', '[T, ID, T, ., T, ID] : 242']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(
                'Identifier'
                Complete the 'Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier'. 
                
Time taken: 1.3198049068450928 seconds
Received response with candidate: 1. x, y, 50, 50
2. x + 30, y - 20, 70, 70
3. x - 10, y + 25, 40, 40

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. x, y, 20, 20)
2. x, y, 30, 30)
3. x, y, 10, 10)
Actual result:  x

Parse State: 91	Cursor Position: 6 30
Candidate List: ['1 : ', '[T, ,, NT, MoreThanOneExpr] : 156591']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x
                ', MoreThanOneExpr'
                Complete the ', MoreThanOneExpr' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ', MoreThanOneExpr'. 
                
Time taken: 1.0743513107299805 seconds
Received response with candidate: , y, 30, 30)
, y, 20, 40)
, y, 40, 20)

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate:     
1. , y, 20, 20)   
2. , y, 30, 30)   
3. , y, 10, 10)
Actual result:  , y , 10 , 10

Parse State: 103	Cursor Position: 6 32
Candidate List: ['1 : ', '[T, NUM] : 76234', '2 : ', '[T, ID] : 49004', '3 : ', '[T, STR] : 12436', '4 : ', '[T, ID, NT, Idxs] : 10809', '5 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 3421', '6 : ', '[T, -, NT, Primary] : 1825', '7 : ', '[T, (, NT, Expr, T, )] : 1525', '8 : ', '[T, ID, T, ., T, ID] : 1337']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x,
                'Identifier'
                Complete the 'Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier'. 
                
Time taken: 1.2602500915527344 seconds
Received response with candidate: Identifier 1: y, Math.GetRandomNumber(480), 30, 30
Identifier 2: y, Math.GetRandomNumber(480), 20, 20
Identifier 3: y, Math.GetRandomNumber(480), 50, 50

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x,
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: y, 20, 30)
'next token or line'

y, 10, 10)
'next token or line'

y, 50, 50)
'next token or line'
Actual result:  y

Parse State: 91	Cursor Position: 6 33
Candidate List: ['1 : ', '[T, ,, NT, MoreThanOneExpr] : 156591']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x, y
                ', MoreThanOneExpr'
                Complete the ', MoreThanOneExpr' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ', MoreThanOneExpr'. 
                
Time taken: 1.3116137981414795 seconds
Received response with candidate: 1. , 20 + Math.GetRandomNumber(50))
2. , Math.GetRandomNumber(100), Math.GetRandomNumber(100))
3. , Math.GetRandomNumber(50), Math.GetRandomNumber(50))

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x, y
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. )

2. )

3. GraphicsWindow.Refresh()
Actual result:  , 10 , 10

Parse State: 103	Cursor Position: 6 35
Candidate List: ['1 : ', '[T, NUM] : 76234', '2 : ', '[T, ID] : 49004', '3 : ', '[T, STR] : 12436', '4 : ', '[T, ID, NT, Idxs] : 10809', '5 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 3421', '6 : ', '[T, -, NT, Primary] : 1825', '7 : ', '[T, (, NT, Expr, T, )] : 1525', '8 : ', '[T, ID, T, ., T, ID] : 1337']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x, y,
                'Number'
                Complete the 'Number' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Number'. 
                
Time taken: 1.0802960395812988 seconds
Received response with candidate: 1. 40, 40
2. 20, 20
3. 50, 50

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x, y,
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: GraphicsWindow.GetRandomNumber(50),GraphicsWindow.GetRandomNumber(50)  
GraphicsWindow.GetRandomNumber(100),GraphicsWindow.GetRandomNumber(100)  
30,30
Actual result:  10

Parse State: 91	Cursor Position: 6 37
Candidate List: ['1 : ', '[T, ,, NT, MoreThanOneExpr] : 156591']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x, y, 10
                ', MoreThanOneExpr'
                Complete the ', MoreThanOneExpr' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ', MoreThanOneExpr'. 
                
Time taken: 0.8102402687072754 seconds
Received response with candidate: ', 10, 10)'
', 20, 20)'
', 15, 15)'

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x, y, 10
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
A:
)
                'next token or line'

B:
, 10)

C:
, 10);
Actual result:  , 10

Parse State: 103	Cursor Position: 6 39
Candidate List: ['1 : ', '[T, NUM] : 76234', '2 : ', '[T, ID] : 49004', '3 : ', '[T, STR] : 12436', '4 : ', '[T, ID, NT, Idxs] : 10809', '5 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 3421', '6 : ', '[T, -, NT, Primary] : 1825', '7 : ', '[T, (, NT, Expr, T, )] : 1525', '8 : ', '[T, ID, T, ., T, ID] : 1337']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x, y, 10,
                'Number'
                Complete the 'Number' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Number'. 
                
Time taken: 1.1752815246582031 seconds
Received response with candidate: 1. "20"
2. "15"
3. "5"

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x, y, 10,
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: GraphicsWindow.GetRandomNumber(10)  
GraphicsWindow.GetRandomNumber(20)  
GraphicsWindow.GetRandomNumber(30)  
Actual result:  10

Parse State: 92	Cursor Position: 6 41
Candidate List: ['1 : ', '[T, )] : 131828']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x, y, 10, 10
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.8873107433319092 seconds
Received response with candidate: 1. )
2. )
3. )

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x, y, 10, 10
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. GraphicsWindow.DrawEllipse(x, y, 10, 10)
2. GraphicsWindow.DrawRectangle(x, y, 20, 20)
3. GraphicsWindow.FillRectangle(x, y, 15, 15)
Actual result:  )

Parse State: 65	Cursor Position: 6 43
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 478907']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x, y, 10, 10)
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 1.3877637386322021 seconds
Received response with candidate: CR TheRest1: 
            GraphicsWindow.DrawBoundText(100, 100, 200, 200, "Hello, World!")
CR TheRest2: 
            GraphicsWindow.DrawLine(50, 50, 200, 200)
CR TheRest3: 
            GraphicsWindow.DrawRectangle(300, 300, 50

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x, y, 10, 10)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: Next 
EndFor 

EndFor i 

EndFor loop
Actual result:  \n

Parse State: 114	Cursor Position: 7 1
Candidate List: ['1 : ', '[T, EndFor] : 14018']

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x, y, 10, 10)
                'EndFor'
                Complete the 'EndFor' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'EndFor'. 
                
Time taken: 0.6552300453186035 seconds
Received response with candidate: EndFor
EndFor
EndFor

                This is the incomplete Small Basic programming language code:
                GraphicsWindow.BackgroundColor = "Black" 
For i = 1 To 1000   
	GraphicsWindow.BrushColor = GraphicsWindow.GetRandomColor()   
	x = Math.GetRandomNumber(640)   
	y = Math.GetRandomNumber(480)   
	GraphicsWindow.FillEllipse(x, y, 10, 10)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. "Program.Delay(100)"
2. "GraphicsWindow.Refresh()"
3. "EndFor"
Actual result:  EndFor

