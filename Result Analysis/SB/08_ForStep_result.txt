Parse State: 0	Cursor Position: 1 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 422', '2 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 399', '3 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 246', '4 : ', '[T, ID, T, (, T, )] : 123', '5 : ', '[T, ID, T, :] : 59', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 26', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 21', '8 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 11', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 7', '10 : ', '[T, Goto, T, ID] : 3', '11 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 1']

                This is the incomplete Small Basic programming language code:
                
                'For Identifier = Expression To Expression OptStep CRStmtCRs EndFor'
                Complete the 'For Identifier = Expression To Expression OptStep CRStmtCRs EndFor' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'For Identifier = Expression To Expression OptStep CRStmtCRs EndFor'. 
                
Time taken: 1.0380780696868896 seconds
Received response with candidate: For count = 1 To 10
   TextWindow.WriteLine(count)
EndFor

For i = 0 To 100 Step 10
   TextWindow.WriteLine(i)
EndFor

For x = 20 To 0 Step -2
   TextWindow.WriteLine(x)
EndFor

                This is the incomplete Small Basic programming language code:
                
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 'next token or line'
'go to the next iteration'
'get the next input'
Actual result:  For i = 10 To 1 Step - 1 \n TextWindow . WriteLine ( i ) \n EndFor

Parse State: 8	Cursor Position: 1 5
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 14018']

                This is the incomplete Small Basic programming language code:
                For
                'Identifier = Expression To Expression OptStep CRStmtCRs EndFor'
                Complete the 'Identifier = Expression To Expression OptStep CRStmtCRs EndFor' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier = Expression To Expression OptStep CRStmtCRs EndFor'. 
                
Time taken: 0.9350388050079346 seconds
Received response with candidate: 1. count = 1 To 10
2. index = 0 To 100 Step 2
3. i = 5 To 50 Step 5

                This is the incomplete Small Basic programming language code:
                For
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 'next token or line'

1. MoveNext()
2. ReadLine()
3. GetToken()
Actual result:  i = 10 To 1 Step - 1 \n TextWindow . WriteLine ( i ) \n EndFor

Parse State: 34	Cursor Position: 1 7
Candidate List: ['1 : ', '[T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 14018']

                This is the incomplete Small Basic programming language code:
                For i
                '= Expression To Expression OptStep CRStmtCRs EndFor'
                Complete the '= Expression To Expression OptStep CRStmtCRs EndFor' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '= Expression To Expression OptStep CRStmtCRs EndFor'. 
                
Time taken: 1.0928823947906494 seconds
Received response with candidate: For i = 1 To 10
For i = 5 To 100 Step 5
For i = 20 To 1 Step -1

                This is the incomplete Small Basic programming language code:
                For i
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. i = i + 1
2. i++
3. i = i - 1
Actual result:  = 10 To 1 Step - 1 \n TextWindow . WriteLine ( i ) \n EndFor

Parse State: 61	Cursor Position: 1 9
Candidate List: ['1 : ', '[T, NUM] : 12330', '2 : ', '[T, ID] : 1235', '3 : ', '[T, -, NT, Primary] : 227', '4 : ', '[T, ID, NT, Idxs] : 75', '5 : ', '[T, (, NT, Expr, T, )] : 70', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 68', '7 : ', '[T, ID, T, ., T, ID] : 13']

                This is the incomplete Small Basic programming language code:
                For i =
                'Number'
                Complete the 'Number' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Number'. 
                
Time taken: 0.684267520904541 seconds
Received response with candidate: For i = 1
For i = 10
For i = 100

                This is the incomplete Small Basic programming language code:
                For i =
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. For i = i + 1
2. For i = i - 1
3. For i = i * 2
Actual result:  10

Parse State: 85	Cursor Position: 1 12
Candidate List: ['1 : ', '[T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 14018']

                This is the incomplete Small Basic programming language code:
                For i = 10
                'To Expression OptStep CRStmtCRs EndFor'
                Complete the 'To Expression OptStep CRStmtCRs EndFor' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'To Expression OptStep CRStmtCRs EndFor'. 
                
Time taken: 1.7104747295379639 seconds
Received response with candidate: 1. To 1 Step -1
   'Statements to be executed inside the loop'
EndFor

2. To 100 Step 10
   'Statements to be executed inside the loop'
EndFor

3. To 50 Step 5
   'Statements to be executed inside the loop'
EndFor

                This is the incomplete Small Basic programming language code:
                For i = 10
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. To 1
2. Step -1
3. End For
Actual result:  To 1 Step - 1 \n TextWindow . WriteLine ( i ) \n EndFor

Parse State: 95	Cursor Position: 1 15
Candidate List: ['1 : ', '[T, NUM] : 6690', '2 : ', '[T, ID] : 5653', '3 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 1257', '4 : ', '[T, ID, NT, Idxs] : 261', '5 : ', '[T, (, NT, Expr, T, )] : 123', '6 : ', '[T, -, NT, Primary] : 18', '7 : ', '[T, ID, T, ., T, ID] : 16']

                This is the incomplete Small Basic programming language code:
                For i = 10 To
                'Number'
                Complete the 'Number' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Number'. 
                
Time taken: 0.7826290130615234 seconds
Received response with candidate: For i = 10 To 20
For i = 10 To 100
For i = 10 To 50

                This is the incomplete Small Basic programming language code:
                For i = 10 To
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 'next token or line' may be:

1. 20
2. i + 2
3. 10 * 2
Actual result:  1

Parse State: 105	Cursor Position: 1 17
Candidate List: ['1 : ', '[T, Step, NT, Expr] : 1556']

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1
                'Step Expression'
                Complete the 'Step Expression' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Step Expression'. 
                
Time taken: 0.686845064163208 seconds
Received response with candidate: 1. Step -1
2. Step -2
3. Step 2

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.WriteLine(i)
2. TextWindow.DrawText(100, 100, i)
3. GraphicsWindow.DrawBoundText(50, 50, 100, 100, i)
Actual result:  Step - 1

Parse State: 111	Cursor Position: 1 22
Candidate List: ['1 : ', '[T, NUM] : 749', '2 : ', '[T, -, NT, Primary] : 572', '3 : ', '[T, ID] : 208', '4 : ', '[T, ID, NT, Idxs] : 21', '5 : ', '[T, (, NT, Expr, T, )] : 5', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 1']

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step
                '- Primary'
                Complete the '- Primary' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '- Primary'. 
                
Time taken: 0.7540860176086426 seconds
Received response with candidate: - Primary
i
- Primary
i * i
- Primary
"Number " + i

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. Next i
2. Next
3. End For
Actual result:  - 1

Parse State: 24	Cursor Position: 1 23
Candidate List: ['1 : ', '[T, NUM] : 10997', '2 : ', '[T, ID] : 1722', '3 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 517', '4 : ', '[T, ID, NT, Idxs] : 408', '5 : ', '[T, (, NT, Expr, T, )] : 84', '6 : ', '[T, ID, T, ., T, ID] : 24']

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -
                'Number'
                Complete the 'Number' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Number'. 
                
Time taken: 1.231114387512207 seconds
Received response with candidate: 1. TextWindow.WriteLine(i)
2. TextWindow.ReadNumber()
3. GraphicsWindow.DrawBoundText(i, i, i)

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 'next token or line'
                EndFor

'next token or line'
                i = i - 1

'next token or line'
                EndFor i
Actual result:  1

Parse State: 110	Cursor Position: 1 27
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 14018']

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 0.7483582496643066 seconds
Received response with candidate: 1. TextWindow.WriteLine(i)
2. TextWindow.Write(i + " ")
3. TextWindow.WriteLine("")

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.WriteLine(i)
2. If i Mod 2 = 0 Then
3. EndFor
Actual result:  \n TextWindow . WriteLine ( i ) \n

Parse State: 39	Cursor Position: 2 2
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 39900', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 20767', '3 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 8661', '4 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 7431', '5 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 5625', '6 : ', '[T, ID, T, (, T, )] : 5524', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 3143', '8 : ', '[T, Goto, T, ID] : 1557', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 240', '10 : ', '[T, ID, T, :] : 78']

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1
                'Identifier . Identifier ( Expression )'
                Complete the 'Identifier . Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier ( Expression )'. 
                
Time taken: 1.090001106262207 seconds
Received response with candidate: 1. GraphicsWindow.DrawText(i, i, "Countdown: " + i)

2. TextWindow.WriteLine(Math.GetRandomNumber(1, i))

3. Shapes.Move(Shapes.Get("Shape" + i), i * 10, i * 10)

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.WriteLine(i)
2. If i % 2 = 0 Then
3. i = i - 1
Actual result:  TextWindow . WriteLine ( i )

Parse State: 6	Cursor Position: 2 12
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1   
	TextWindow
                '. Identifier ( Expression )'
                Complete the '. Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier ( Expression )'. 
                
Time taken: 0.9867231845855713 seconds
Received response with candidate: 1. .Print("Countdown: " + i)
2. .WriteLine("Value of i: " + i)
3. .DrawText(100, 100, i)

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1   
	TextWindow
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: Next i
Next
EndFor
Actual result:  . WriteLine ( i )

Parse State: 30	Cursor Position: 2 13
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, ID, T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1   
	TextWindow.
                'Identifier ( Expression )'
                Complete the 'Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( Expression )'. 
                
Time taken: 1.2312872409820557 seconds
Received response with candidate: 1. WriteLine("Countdown: " + i)
2. DrawText(100, i*20, "Number: " + i)
3. SetBackgroundAlpha((10-i)*25)

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1   
	TextWindow.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. 'Write("i: " + i)'
2. 'WriteLine(i)'
3. 'Pause(1000)'
Actual result:  WriteLine ( i )

Parse State: 58	Cursor Position: 2 22
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1   
	TextWindow.WriteLine
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 1.4341304302215576 seconds
Received response with candidate: For i = 10 To 1 Step -1   
    TextWindow.WriteLine(i)
    
For i = 10 To 1 Step -1   
    TextWindow.WriteLine("Countdown: " + i)
    
For i = 10 To 1 Step -1   
    TextWindow.WriteLine("Number: " + i + " squared is

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1   
	TextWindow.WriteLine
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: Next i  
Next  
EndFor
Actual result:  ( i )

Parse State: 83	Cursor Position: 2 23
Candidate List: ['1 : ', '[T, ID] : 40231', '2 : ', '[T, NUM] : 32276', '3 : ', '[T, STR] : 31274', '4 : ', '[T, ID, NT, Idxs] : 11367', '5 : ', '[T, -, NT, Primary] : 1956', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 685', '7 : ', '[T, (, NT, Expr, T, )] : 324', '8 : ', '[T, ID, T, ., T, ID] : 242']

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1   
	TextWindow.WriteLine(
                'Identifier'
                Complete the 'Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier'. 
                
Time taken: 0.7720773220062256 seconds
Received response with candidate: 1. "Countdown: " + i
2. "Number: " + i
3. "Iteration: " + i

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1   
	TextWindow.WriteLine(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: For i = 10 To 1 Step -1   
	TextWindow.WriteLine(i) 
Next i

For i = 10 To 1 Step -1   
	If i % 2 = 0 Then
		TextWindow.WriteLine(i)
	EndIf
Next i

For i = 10 To 1 Step -1   
	If i =
Actual result:  i

Parse State: 92	Cursor Position: 2 24
Candidate List: ['1 : ', '[T, )] : 131828']

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1   
	TextWindow.WriteLine(i
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.609358549118042 seconds
Received response with candidate: 1) )
2) ))
3) )))

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1   
	TextWindow.WriteLine(i
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. 'Next i'
2. 'EndFor'
3. 'End For'
Actual result:  )

Parse State: 65	Cursor Position: 2 26
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 478907']

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1   
	TextWindow.WriteLine(i)
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 0.9485340118408203 seconds
Received response with candidate: 
CR TextWindow.WriteLine("Countdown complete!")
CR i = i - 1
CR If i = 5 Then
    TextWindow.WriteLine("Halfway there!")
ENDIF

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1   
	TextWindow.WriteLine(i)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. EndFor

2. Next i

3. Loop
Actual result:  \n

Parse State: 114	Cursor Position: 3 1
Candidate List: ['1 : ', '[T, EndFor] : 14018']

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1   
	TextWindow.WriteLine(i)
                'EndFor'
                Complete the 'EndFor' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'EndFor'. 
                
Time taken: 0.8339126110076904 seconds
Received response with candidate: 1. 'EndFor'

2. 'EndFor #1'

3. 'EndFor Loop'

                This is the incomplete Small Basic programming language code:
                For i = 10 To 1 Step -1   
	TextWindow.WriteLine(i)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. EndFor
2. EndFor i
3. Next i
Actual result:  EndFor

