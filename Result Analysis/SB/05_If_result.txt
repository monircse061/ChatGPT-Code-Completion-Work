Parse State: 0	Cursor Position: 1 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 422', '2 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 399', '3 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 246', '4 : ', '[T, ID, T, (, T, )] : 123', '5 : ', '[T, ID, T, :] : 59', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 26', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 21', '8 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 11', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 7', '10 : ', '[T, Goto, T, ID] : 3', '11 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 1']

                This is the incomplete Small Basic programming language code:
                
                'If Expression Then CRStmtCRs MoreThanZeroElseIf'
                Complete the 'If Expression Then CRStmtCRs MoreThanZeroElseIf' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'If Expression Then CRStmtCRs MoreThanZeroElseIf'. 
                
Time taken: 0.8640320301055908 seconds
Received response with candidate: 1. If x > 5 Then
2. If count = 10 Then
3. If total < 100 Then

                This is the incomplete Small Basic programming language code:
                
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 'next token' 

'next line'

'continue parsing'
Actual result:  If ( Clock . Hour < 12 ) Then \n TextWindow . WriteLine ( "Good Morning World" ) \n EndIf

Parse State: 10	Cursor Position: 1 4
Candidate List: ['1 : ', '[T, ID] : 22093', '2 : ', '[T, (, NT, Expr, T, )] : 10269', '3 : ', '[T, ID, NT, Idxs] : 4684', '4 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 2687', '5 : ', '[T, ID, T, ., T, ID] : 1184', '6 : ', '[T, NUM] : 478', '7 : ', '[T, STR] : 10', '8 : ', '[T, -, NT, Primary] : 7']

                This is the incomplete Small Basic programming language code:
                If
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 0.8571884632110596 seconds
Received response with candidate: 1. '(Variable1 > Variable2)'
2. '(Count < MaxCount)'
3. '(IsTrue = False)'

                This is the incomplete Small Basic programming language code:
                If
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 'next token or line' could be:
1. "x = x + 1"
2. "Print("Hello world!")"
3. "If x > 10 Then"
Actual result:  ( Clock . Hour < 12 )

Parse State: 23	Cursor Position: 1 5
Candidate List: ['1 : ', '[T, ID] : 26997', '2 : ', '[T, ID, NT, Idxs] : 3522', '3 : ', '[T, NUM] : 2336', '4 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 2174', '5 : ', '[T, ID, T, ., T, ID] : 2092', '6 : ', '[T, (, NT, Expr, T, )] : 1620', '7 : ', '[T, STR] : 365', '8 : ', '[T, -, NT, Primary] : 93']

                This is the incomplete Small Basic programming language code:
                If (
                'Identifier . Identifier'
                Complete the 'Identifier . Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier'. 
                
Time taken: 0.8981742858886719 seconds
Received response with candidate: If (
    variable1.property1,
    variable2.method1()

If (
    object1.property2,
    object2.method2()

If (
    array1[index1],
    array2[index2]

                This is the incomplete Small Basic programming language code:
                If (
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: If (
'next token'
'next line'
'end of file'
Actual result:  Clock . Hour

Parse State: 22	Cursor Position: 1 10
Candidate List: ['1 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, [, NT, Expr, T, ]] : 59127', '3 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 21477', '4 : ', '[T, ., T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                If (Clock
                '. Identifier'
                Complete the '. Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier'. 
                
Time taken: 0.7826588153839111 seconds
Received response with candidate: If (Clock.IsAfter("12:00:00"))
'. Minute'
'. Second'
'. Hour'

                This is the incomplete Small Basic programming language code:
                If (Clock
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
1. Then
2. = "10:00 PM"
3. <> "12:00 PM"
Actual result:  . Hour

Parse State: 53	Cursor Position: 1 11
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                If (Clock.
                'Identifier'
                Complete the 'Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier'. 
                
Time taken: 0.6667046546936035 seconds
Received response with candidate: If (Clock.Hour
If (Clock.Minute
If (Clock.Second

                This is the incomplete Small Basic programming language code:
                If (Clock.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: If (Clock.getHour() < 12) {
  TextWindow.WriteLine("It's morning.");
}

If (Clock.getMinutes() == 30) {
  TextWindow.WriteLine("It's half past the hour.");
}

If (Clock.getSeconds() % 2 == 0) {
  TextWindow.WriteLine("The seconds are even.");
}
Actual result:  Hour

Parse State: 17	Cursor Position: 1 16
Candidate List: ['1 : ', '[T, <, NT, AdditiveExpr] : 12444', '2 : ', '[T, >, NT, AdditiveExpr] : 9592', '3 : ', '[T, <=, NT, AdditiveExpr] : 4252', '4 : ', '[T, >=, NT, AdditiveExpr] : 3498']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour
                '< AdditiveExpr'
                Complete the '< AdditiveExpr' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '< AdditiveExpr'. 
                
Time taken: 3.003671169281006 seconds
Received response with candidate: 1. If (Clock.Hour < 12)
2. If (Clock.Hour < 24)
3. If (Clock.Hour < 6)

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: = 6
= > 12
<> 10
Actual result:  < 12

Parse State: 44	Cursor Position: 1 18
Candidate List: ['1 : ', '[T, NUM] : 6690', '2 : ', '[T, ID] : 3783', '3 : ', '[T, ID, NT, Idxs] : 1309', '4 : ', '[T, (, NT, Expr, T, )] : 263', '5 : ', '[T, -, NT, Primary] : 200', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 134', '7 : ', '[T, ID, T, ., T, ID] : 65']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour <
                'Number'
                Complete the 'Number' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Number'. 
                
Time taken: 3.2374861240386963 seconds
Received response with candidate: If (Clock.Hour < 5
If (Clock.Hour < 10
If (Clock.Hour < 20

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour <
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: If (Clock.Hour < 12)
If (Clock.Hour < 24)
If (Clock.Hour < 6)
Actual result:  12

Parse State: 54	Cursor Position: 1 20
Candidate List: ['1 : ', '[T, )] : 39199']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.6461472511291504 seconds
Received response with candidate: 1) )
2) ))
3) )))

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. Then
2. Print("Good morning!")
3. EndIf
Actual result:  )

Parse State: 36	Cursor Position: 1 22
Candidate List: ['1 : ', '[T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 41412']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12)
                'Then CRStmtCRs MoreThanZeroElseIf'
                Complete the 'Then CRStmtCRs MoreThanZeroElseIf' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Then CRStmtCRs MoreThanZeroElseIf'. 
                
Time taken: 0.9314565658569336 seconds
Received response with candidate: 1. TextWindow.WriteLine("Good morning!")
2. TextWindow.WriteLine("It's still morning.")
3. TextWindow.WriteLine("Before noon")

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. Then
2. Print("Good morning!")
3. Goto endMorningMessage
Actual result:  Then \n TextWindow . WriteLine ( "Good Morning World" ) \n EndIf

Parse State: 63	Cursor Position: 1 29
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 41412']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 0.957453727722168 seconds
Received response with candidate: 'CR TheRest' = "Good morning!"
'CR TheRest' = "Wake up and start your day!"
'CR TheRest' = "Enjoy your morning!"

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.WriteLine("Good morning!")
2. TextWindow.WriteLine("It's still before noon!")
3. TextWindow.WriteLine("Have a great day!")
Actual result:  \n TextWindow . WriteLine ( "Good Morning World" ) \n

Parse State: 39	Cursor Position: 2 2
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 39900', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 20767', '3 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 8661', '4 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 7431', '5 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 5625', '6 : ', '[T, ID, T, (, T, )] : 5524', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 3143', '8 : ', '[T, Goto, T, ID] : 1557', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 240', '10 : ', '[T, ID, T, :] : 78']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then
                'Identifier . Identifier ( Expression )'
                Complete the 'Identifier . Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier ( Expression )'. 
                
Time taken: 0.661851167678833 seconds
Received response with candidate: Clock.GetMinutes()
Clock.GetSeconds()
Clock.GetTime()

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. TextWindow.WriteLine("Good morning!")
2. TextWindow.WriteLine("It's still morning.")
3. TextWindow.WriteLine("The day is just beginning.")
Actual result:  TextWindow . WriteLine ( "Good Morning World" )

Parse State: 6	Cursor Position: 2 12
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow
                '. Identifier ( Expression )'
                Complete the '. Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier ( Expression )'. 
                
Time taken: 0.8710613250732422 seconds
Received response with candidate: 1. . WriteLine("Good morning!")
2. . Title = "Morning Greetings"
3. . Hide()

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: .WriteLine("Good morning!") 

                'next token or line'

                ElseIf (Clock.Hour < 18) Then

                'next token or line'

                .WriteLine("Good afternoon!") 

                Else

                'next token or line'

                .WriteLine("Good evening!") 

                EndIf
Actual result:  . WriteLine ( "Good Morning World" )

Parse State: 30	Cursor Position: 2 13
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, ID, T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.
                'Identifier ( Expression )'
                Complete the 'Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( Expression )'. 
                
Time taken: 1.213000774383545 seconds
Received response with candidate: If (Clock.Minute == 0)
    TextWindow.WriteLine("It's exactly the top of the hour")

If (Clock.Hour == 6)
    TextWindow.WriteLine("It's 6 o'clock")

If (Clock.Second < 30)
    TextWindow.WriteLine("It's before half past the minute")

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. WriteLine("Good morning!")
2. WriteLine("It is still morning!")
3. WriteLine("Have a great day!")
Actual result:  WriteLine ( "Good Morning World" )

Parse State: 58	Cursor Position: 2 22
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 1.434746265411377 seconds
Received response with candidate: 1. "Good morning!"
2. "It's still morning!"
3. "The morning is passing by."

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. "TextWindow.WriteLine('Good morning!')"
2. "TextWindow.WriteLine('Have a great day!')"
3. "TextWindow.WriteLine('Time for breakfast!')"
Actual result:  ( "Good Morning World" )

Parse State: 83	Cursor Position: 2 23
Candidate List: ['1 : ', '[T, ID] : 40231', '2 : ', '[T, NUM] : 32276', '3 : ', '[T, STR] : 31274', '4 : ', '[T, ID, NT, Idxs] : 11367', '5 : ', '[T, -, NT, Primary] : 1956', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 685', '7 : ', '[T, (, NT, Expr, T, )] : 324', '8 : ', '[T, ID, T, ., T, ID] : 242']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine(
                'String'
                Complete the 'String' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'String'. 
                
Time taken: 0.6644613742828369 seconds
Received response with candidate: 'Good morning!'
'Hello, world!'
'It is still morning.'

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. "Good morning!"
2. "Have a nice day!"
3. "Breakfast time!"
Actual result:  "Good Morning World"

Parse State: 92	Cursor Position: 2 43
Candidate List: ['1 : ', '[T, )] : 131828']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World"
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 1.1865248680114746 seconds
Received response with candidate: )

)]

]-)

With these three possible completions, the updated code would be:

If (Clock.Hour < 12) Then
  TextWindow.WriteLine("Good Morning World")
]
  TextWindow.WriteLine("Good Morning World")]
)
  TextWindow.WriteLine("Good Morning World")-)


                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World"
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. ) Else
2. ) Else If (Clock.Hour < 18) Then
3. ) TextWindow.WriteLine("Good Afternoon World")
Actual result:  )

Parse State: 65	Cursor Position: 2 45
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 478907']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World")
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 1.0882928371429443 seconds
Received response with candidate: 1. TextWindow.WriteLine("Have a great day!")
2. TextWindow.WriteLine("Enjoy the morning!")
3. TextWindow.WriteLine("Make the most of your day!")

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World")
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. ElseIf (Clock.Hour >= 12 And Clock.Hour < 18) Then
2. ElseIf (Clock.Hour >= 18) Then
3. Else
Actual result:  \n

Parse State: 87	Cursor Position: 3 1
Candidate List: ['1 : ', '[T, EndIf] : 28169', '2 : ', '[T, Else, NT, CRStmtCRs, T, EndIf] : 7709', '3 : ', '[T, ElseIf, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 5534']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World")
                'EndIf'
                Complete the 'EndIf' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'EndIf'. 
                
Time taken: 1.3880324363708496 seconds
Received response with candidate: EndIf
ElseIf (Clock.Hour >= 12 And Clock.Hour < 18) Then
TextWindow.WriteLine("Good Afternoon World")
EndIf

EndIf
ElseIf (Clock.Hour >= 18) Then
TextWindow.WriteLine("Good Evening World")
EndIf

EndIf
Else
TextWindow.WriteLine("Good Night World")


                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World")
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. ElseIf (Clock.Hour >= 12 And Clock.Hour < 18) Then
2. ElseIf (Clock.Hour >= 18 And Clock.Hour < 24) Then
3. Else
Actual result:  EndIf

Parse State: 3	Cursor Position: 3 6
Candidate List: ['1 : ', '[T, CR, NT, MoreThanOneStmt] : 207345']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
                'CR MoreThanOneStmt'
                Complete the 'CR MoreThanOneStmt' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR MoreThanOneStmt'. 
                
Time taken: 1.3122045993804932 seconds
Received response with candidate: 1. 
	If (Clock.Hour >= 12 And Clock.Hour < 18) Then   
		TextWindow.WriteLine("Good Afternoon World") 
	EndIf

2.
	If (Clock.Hour >= 18) Then   
		TextWindow.WriteLine("Good Evening World") 
	EndIf

3.
	If (Clock.Hour >= 0 And Clock.Hour

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. ElseIf (Clock.Hour >= 12 And Clock.Hour < 18) Then  
	TextWindow.WriteLine("Good Afternoon World")  
EndIf

2. ElseIf (Clock.Hour >= 18 And Clock.Hour < 22) Then  
	TextWindow.WriteLine("Good Evening World")  
EndIf

3. Else  
	TextWindow.WriteLine("Good
Actual result:  \n If ( Clock . Hour >= 12 ) Then \n TextWindow . WriteLine ( "Good Evening World" ) \n EndIf

Parse State: 11	Cursor Position: 4 1
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 34613', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 32747', '3 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 19496', '4 : ', '[T, Sub, T, ID, NT, CRStmtCRs, T, EndSub] : 18421', '5 : ', '[T, ID, T, (, T, )] : 9474', '6 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 9366', '7 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 5075', '8 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 2043', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 1706', '10 : ', '[T, ID, T, :] : 1074', '11 : ', '[T, Goto, T, ID] : 421']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
                'If Expression Then CRStmtCRs MoreThanZeroElseIf'
                Complete the 'If Expression Then CRStmtCRs MoreThanZeroElseIf' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'If Expression Then CRStmtCRs MoreThanZeroElseIf'. 
                
Time taken: 1.4178149700164795 seconds
Received response with candidate: If (Clock.Hour >= 12 And Clock.Hour < 18) Then
	TextWindow.WriteLine("Good Afternoon World")
EndIf

If (Clock.Hour >= 18 And Clock.Hour < 21) Then
	TextWindow.WriteLine("Good Evening World")
EndIf

If (Clock.Hour >= 21 Or Clock.Hour < 6) Then

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. ElseIf (Clock.Hour >= 12 And Clock.Hour < 18) Then
2. Else
3. TextWindow.WriteLine("Good evening, World")
Actual result:  If ( Clock . Hour >= 12 ) Then \n TextWindow . WriteLine ( "Good Evening World" ) \n EndIf

Parse State: 10	Cursor Position: 4 4
Candidate List: ['1 : ', '[T, ID] : 22093', '2 : ', '[T, (, NT, Expr, T, )] : 10269', '3 : ', '[T, ID, NT, Idxs] : 4684', '4 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 2687', '5 : ', '[T, ID, T, ., T, ID] : 1184', '6 : ', '[T, NUM] : 478', '7 : ', '[T, STR] : 10', '8 : ', '[T, -, NT, Primary] : 7']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 0.8360538482666016 seconds
Received response with candidate: 1. (Clock.Hour >= 12)
2. (Clock.Hour = 12)
3. (Clock.Hour < 6)

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. (Clock.Hour >= 12 And Clock.Hour < 18) Then
2. (Clock.Hour >= 18 And Clock.Hour < 24) Then
3. Else
Actual result:  ( Clock . Hour >= 12 )

Parse State: 23	Cursor Position: 4 5
Candidate List: ['1 : ', '[T, ID] : 26997', '2 : ', '[T, ID, NT, Idxs] : 3522', '3 : ', '[T, NUM] : 2336', '4 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 2174', '5 : ', '[T, ID, T, ., T, ID] : 2092', '6 : ', '[T, (, NT, Expr, T, )] : 1620', '7 : ', '[T, STR] : 365', '8 : ', '[T, -, NT, Primary] : 93']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (
                'Identifier . Identifier'
                Complete the 'Identifier . Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier'. 
                
Time taken: 0.8777201175689697 seconds
Received response with candidate: Clock.Minute
Clock.Second
Clock.DayOfMonth

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: (Clock.Hour >= 12 And Clock.Hour < 18) Then  
	TextWindow.WriteLine("Good Afternoon World") 
EndIf

(Clock.Hour >= 18 And Clock.Hour < 21) Then  
	TextWindow.WriteLine("Good Evening World") 
EndIf

(Clock.Hour >= 21 Or Clock.Hour < 5) Then  

Actual result:  Clock . Hour

Parse State: 22	Cursor Position: 4 10
Candidate List: ['1 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, [, NT, Expr, T, ]] : 59127', '3 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 21477', '4 : ', '[T, ., T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock
                '. Identifier'
                Complete the '. Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier'. 
                
Time taken: 1.3681049346923828 seconds
Received response with candidate: .Minute < 30) Then   
	TextWindow.WriteLine("It's still morning") 
EndIf

If (Clock.Second < 30) Then   
	TextWindow.WriteLine("Just a few seconds past") 
EndIf

If (Clock.Millisecond < 500) Then   
	TextWindow.WriteLine("Not even half a second yet") 
EndIf

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: .Minute < 30) Then
	TextWindow.WriteLine("It's still early")
EndIf

If (Clock.Minute >= 30) Then
	TextWindow.WriteLine("Good afternoon")
EndIf

If (Clock.Hour >= 18) Then
	TextWindow.WriteLine("Good evening")
EndIf
Actual result:  . Hour

Parse State: 53	Cursor Position: 4 11
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 74070', '2 : ', '[T, ID] : 16490']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.
                'Identifier'
                Complete the 'Identifier' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier'. 
                
Time taken: 1.2786078453063965 seconds
Received response with candidate: Minute

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: Minute < 30  
	            TextWindow.WriteLine("Early Bird gets the worm")   
            EndIf

Minute > 30  
                TextWindow.WriteLine("Good Afternoon World")   
EndIf

Second % 2 = 0  
                TextWindow.WriteLine("Even number of Seconds")   
EndIf
Actual result:  Hour

Parse State: 17	Cursor Position: 4 16
Candidate List: ['1 : ', '[T, <, NT, AdditiveExpr] : 12444', '2 : ', '[T, >, NT, AdditiveExpr] : 9592', '3 : ', '[T, <=, NT, AdditiveExpr] : 4252', '4 : ', '[T, >=, NT, AdditiveExpr] : 3498']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour
                '>= AdditiveExpr'
                Complete the '>= AdditiveExpr' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '>= AdditiveExpr'. 
                
Time taken: 1.7315623760223389 seconds
Received response with candidate: If (Clock.Hour >= 12) Then   
	TextWindow.WriteLine("Good Afternoon World") 
EndIf

If (Clock.Hour >= 18) Then   
	TextWindow.WriteLine("Good Evening World") 
EndIf

If (Clock.Hour >= 24) Then   
	TextWindow.WriteLine("Good Night World") 
EndIf

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: = 12) Then   
	TextWindow.WriteLine("Good Afternoon World") 
EndIf

= 18) Then   
	TextWindow.WriteLine("Good Evening World") 
EndIf

< 18) Then   
	TextWindow.WriteLine("Good Day World") 
EndIf
Actual result:  >= 12

Parse State: 47	Cursor Position: 4 19
Candidate List: ['1 : ', '[T, NUM] : 2427', '2 : ', '[T, ID] : 611', '3 : ', '[T, ID, NT, Idxs] : 142', '4 : ', '[T, -, NT, Primary] : 137', '5 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 136', '6 : ', '[T, ID, T, ., T, ID] : 27', '7 : ', '[T, (, NT, Expr, T, )] : 18']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >=
                'Number'
                Complete the 'Number' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Number'. 
                
Time taken: 1.384561538696289 seconds
Received response with candidate: If (Clock.Hour >= 12) Then   
	TextWindow.WriteLine("Good Afternoon World") 

If (Clock.Hour >= 18) Then   
	TextWindow.WriteLine("Good Evening World") 

If (Clock.Hour >= 20) Then   
	TextWindow.WriteLine("Good Night World") 

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >=
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 12) Then  
	TextWindow.WriteLine("Good Afternoon World") 
EndIf

18) Then  
	TextWindow.WriteLine("Good Evening World") 
EndIf

21) Then  
	TextWindow.WriteLine("Good Night World") 
EndIf
Actual result:  12

Parse State: 54	Cursor Position: 4 21
Candidate List: ['1 : ', '[T, )] : 39199']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.6619749069213867 seconds
Received response with candidate: EndIf

'EndIf

'ENDIF

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: Then   
	TextWindow.WriteLine("Good Afternoon World") 
EndIf

ElseIf (Clock.Hour >= 18) Then   
	TextWindow.WriteLine("Good Evening World") 
EndIf

Else   
	TextWindow.WriteLine("Good Night World") 
EndIf
Actual result:  )

Parse State: 36	Cursor Position: 4 23
Candidate List: ['1 : ', '[T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 41412']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12)
                'Then CRStmtCRs MoreThanZeroElseIf'
                Complete the 'Then CRStmtCRs MoreThanZeroElseIf' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Then CRStmtCRs MoreThanZeroElseIf'. 
                
Time taken: 0.8588922023773193 seconds
Received response with candidate: 1. TextWindow.WriteLine("Good Afternoon World")

2. TextWindow.WriteLine("Good Evening World")

3. TextWindow.WriteLine("Goodnight World")

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12)
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: TextWindow.WriteLine("Good Afternoon World") 

TextWindow.WriteLine("Good Evening World") 

TextWindow.WriteLine("Good Night World")
Actual result:  Then \n TextWindow . WriteLine ( "Good Evening World" ) \n EndIf

Parse State: 63	Cursor Position: 4 30
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 41412']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 0.8506200313568115 seconds
Received response with candidate: 1. TextWindow.WriteLine("Good Afternoon World")
2. TextWindow.WriteLine("Good Evening World")
3. TextWindow.WriteLine("Good Night World")

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: TextWindow.WriteLine("Good Afternoon World")
TextWindow.WriteLine("Good Evening World")
TextWindow.WriteLine("Good Night World")
Actual result:  \n TextWindow . WriteLine ( "Good Evening World" ) \n

Parse State: 39	Cursor Position: 5 2
Candidate List: ['1 : ', '[T, ID, T, =, NT, Expr] : 39900', '2 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 20767', '3 : ', '[T, If, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 8661', '4 : ', '[T, ID, NT, Idxs, T, =, NT, Expr] : 7431', '5 : ', '[T, ID, T, ., T, ID, T, =, NT, Expr] : 5625', '6 : ', '[T, ID, T, (, T, )] : 5524', '7 : ', '[T, For, T, ID, T, =, NT, Expr, T, To, NT, Expr, NT, OptStep, NT, CRStmtCRs, T, EndFor] : 3143', '8 : ', '[T, Goto, T, ID] : 1557', '9 : ', '[T, While, NT, Expr, NT, CRStmtCRs, T, EndWhile] : 240', '10 : ', '[T, ID, T, :] : 78']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then
                'Identifier . Identifier ( Expression )'
                Complete the 'Identifier . Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier . Identifier ( Expression )'. 
                
Time taken: 0.6315114498138428 seconds
Received response with candidate: Clock.Minute
Clock.Second
Clock.Day

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 
	TextWindow.WriteLine("Good Afternoon World")
EndIf

TextWindow.WriteLine("Good Evening World")
EndIf

TextWindow.WriteLine("Good Night World")
EndIf
Actual result:  TextWindow . WriteLine ( "Good Evening World" )

Parse State: 6	Cursor Position: 5 12
Candidate List: ['1 : ', '[T, =, NT, Expr] : 162103', '2 : ', '[T, ., T, ID, T, (, NT, Exprs, T, )] : 131828', '3 : ', '[T, [, NT, Expr, T, ]] : 68410', '4 : ', '[T, ., T, ID, T, =, NT, Expr] : 45876', '5 : ', '[T, (, T, )] : 31942', '6 : ', '[T, [, NT, Expr, T, ], NT, Idxs] : 28947', '7 : ', '[T, :] : 2238']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then   
	TextWindow
                '. Identifier ( Expression )'
                Complete the '. Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '. Identifier ( Expression )'. 
                
Time taken: 1.1635708808898926 seconds
Received response with candidate: .WriteLine("Good Afternoon World")
.Write("Good Afternoon World")
.Pause()

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then   
	TextWindow
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: .WriteLine("Good Afternoon World") 
EndIf

.WriteLine("Good Afternoon World") 

.WriteLine("Good Evening World") 
EndIf
Actual result:  . WriteLine ( "Good Evening World" )

Parse State: 30	Cursor Position: 5 13
Candidate List: ['1 : ', '[T, ID, T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, ID, T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then   
	TextWindow.
                'Identifier ( Expression )'
                Complete the 'Identifier ( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'Identifier ( Expression )'. 
                
Time taken: 0.8091464042663574 seconds
Received response with candidate: TextWindow.WriteLine("Good Afternoon World")
TextWindow.WriteLine("Good Evening World")
TextWindow.WriteLine("Good Night World")

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then   
	TextWindow.
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: TextWindow.WriteLine("Good Afternoon World")
TextWindow.WriteLine("Good Evening World")
TextWindow.WriteLine("Good Night World")
Actual result:  WriteLine ( "Good Evening World" )

Parse State: 58	Cursor Position: 5 22
Candidate List: ['1 : ', '[T, (, NT, Exprs, T, )] : 131828', '2 : ', '[T, =, NT, Expr] : 45876']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then   
	TextWindow.WriteLine
                '( Expression )'
                Complete the '( Expression )' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of '( Expression )'. 
                
Time taken: 0.8178012371063232 seconds
Received response with candidate: TextWindow.WriteLine("Good afternoon World")
TextWindow.WriteLine("Good evening World")
TextWindow.WriteLine("Good night World")

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then   
	TextWindow.WriteLine
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: ("Good Afternoon World")
EndIf

("Good Afternoon World")
EndIf

("Good Afternoon World")
EndIf
Actual result:  ( "Good Evening World" )

Parse State: 83	Cursor Position: 5 23
Candidate List: ['1 : ', '[T, ID] : 40231', '2 : ', '[T, NUM] : 32276', '3 : ', '[T, STR] : 31274', '4 : ', '[T, ID, NT, Idxs] : 11367', '5 : ', '[T, -, NT, Primary] : 1956', '6 : ', '[T, ID, T, ., T, ID, T, (, NT, Exprs, T, )] : 685', '7 : ', '[T, (, NT, Expr, T, )] : 324', '8 : ', '[T, ID, T, ., T, ID] : 242']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then   
	TextWindow.WriteLine(
                'String'
                Complete the 'String' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'String'. 
                
Time taken: 0.972724437713623 seconds
Received response with candidate: "Good Afternoon World"
"Good Afternoon Everyone"
"Good Afternoon Friends"

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then   
	TextWindow.WriteLine(
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. "Good Afternoon World"
2. "Good Evening World"
3. "Good Night World"
Actual result:  "Good Evening World"

Parse State: 92	Cursor Position: 5 43
Candidate List: ['1 : ', '[T, )] : 131828']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then   
	TextWindow.WriteLine("Good Evening World"
                ')'
                Complete the ')' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of ')'. 
                
Time taken: 0.6435794830322266 seconds
Received response with candidate: ) ")
) 
)  

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then   
	TextWindow.WriteLine("Good Evening World"
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. EndIf
2. )
3. ) EndIf
Actual result:  )

Parse State: 65	Cursor Position: 5 45
Candidate List: ['1 : ', '[T, CR, NT, TheRest] : 478907']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then   
	TextWindow.WriteLine("Good Evening World")
                'CR TheRest'
                Complete the 'CR TheRest' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'CR TheRest'. 
                
Time taken: 1.0902314186096191 seconds
Received response with candidate: CR TextWindow.WriteLine("Good Afternoon World")
CR TextWindow.WriteLine("Good Night World")
CR TextWindow.WriteLine("Hello World")

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then   
	TextWindow.WriteLine("Good Evening World")
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. ElseIf (Clock.Hour < 16) Then   
	TextWindow.WriteLine("Good Afternoon World")
EndIf

2. Else   
	TextWindow.WriteLine("Hello World")
EndIf

3. EndIf
Actual result:  \n

Parse State: 87	Cursor Position: 6 1
Candidate List: ['1 : ', '[T, EndIf] : 28169', '2 : ', '[T, Else, NT, CRStmtCRs, T, EndIf] : 7709', '3 : ', '[T, ElseIf, NT, Expr, T, Then, NT, CRStmtCRs, NT, MoreThanZeroElseIf] : 5534']

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then   
	TextWindow.WriteLine("Good Evening World")
                'EndIf'
                Complete the 'EndIf' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'EndIf'. 
                
Time taken: 0.7420060634613037 seconds
Received response with candidate: 
1. 'EndIf'
2. 'EndIf'
3. 'EndIf'

                This is the incomplete Small Basic programming language code:
                If (Clock.Hour < 12) Then   
	TextWindow.WriteLine("Good Morning World") 
EndIf
If (Clock.Hour >= 12) Then   
	TextWindow.WriteLine("Good Evening World")
                'next token or line'
                Complete the 'next token or line' part of the code three times in the Small Basic programming language. Just show your three probable answers in place of 'next token or line'. 
                
Received response without candidate: 1. EndIf

2. Else
   TextWindow.WriteLine("Good Afternoon World")

3. ElseIf (Clock.Hour >= 20) Then
   TextWindow.WriteLine("Good Night World")
Actual result:  EndIf

